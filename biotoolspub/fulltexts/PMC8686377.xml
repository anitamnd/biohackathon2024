<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Med Inform Decis Mak</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Med Inform Decis Mak</journal-id>
    <journal-title-group>
      <journal-title>BMC Medical Informatics and Decision Making</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1472-6947</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8686377</article-id>
    <article-id pub-id-type="publisher-id">1719</article-id>
    <article-id pub-id-type="doi">10.1186/s12911-021-01719-z</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>cbpManager: a web application to streamline the integration of clinical and genomic data in cBioPortal to support the Molecular Tumor Board</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1014-4521</contrib-id>
        <name>
          <surname>Ustjanzew</surname>
          <given-names>Arsenij</given-names>
        </name>
        <address>
          <email>arsenij.ustjanzew@uni-mainz.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Desuki</surname>
          <given-names>Alexander</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ritzel</surname>
          <given-names>Christoph</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dolezilek</surname>
          <given-names>Alina Corinna</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wagner</surname>
          <given-names>Daniel-Christoph</given-names>
        </name>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Christoph</surname>
          <given-names>Jan</given-names>
        </name>
        <xref ref-type="aff" rid="Aff5">5</xref>
        <xref ref-type="aff" rid="Aff6">6</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Unberath</surname>
          <given-names>Philipp</given-names>
        </name>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kindler</surname>
          <given-names>Thomas</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Faber</surname>
          <given-names>Jörg</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff7">7</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Marini</surname>
          <given-names>Federico</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Panholzer</surname>
          <given-names>Torsten</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Paret</surname>
          <given-names>Claudia</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff7">7</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.410607.4</institution-id><institution>Institute of Medical Biostatistics, Epidemiology and Informatics (IMBEI), </institution><institution>University Medical Center of the Johannes Gutenberg-University Mainz, </institution></institution-wrap>55131 Mainz, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.410607.4</institution-id><institution>University Cancer Center (UCT), </institution><institution>University Medical Center of the Johannes Gutenberg-University Mainz, </institution></institution-wrap>55131 Mainz, Germany </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.410607.4</institution-id><institution>Department of Hematology, Medical Oncology, and Pneumology, </institution><institution>University Medical Center of the Johannes Gutenberg-University Mainz, </institution></institution-wrap> 55131 Mainz, Germany </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.410607.4</institution-id><institution>Institute of Pathology, </institution><institution>University Medical Center of the Johannes Gutenberg-University Mainz, </institution></institution-wrap>55131 Mainz, Germany </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="GRID">grid.5330.5</institution-id><institution-id institution-id-type="ISNI">0000 0001 2107 3311</institution-id><institution>Department of Medical Informatics, </institution><institution>Friedrich-Alexander-Universität Erlangen-Nürnberg, </institution></institution-wrap>91058 Erlangen, Germany </aff>
      <aff id="Aff6"><label>6</label><institution-wrap><institution-id institution-id-type="GRID">grid.9018.0</institution-id><institution-id institution-id-type="ISNI">0000 0001 0679 2801</institution-id><institution>Junior Research Group (Bio-)medical Data Science, Faculty of Medicine, </institution><institution>Martin-Luther-University Halle-Wittenberg, </institution></institution-wrap>Halle, Germany </aff>
      <aff id="Aff7"><label>7</label><institution-wrap><institution-id institution-id-type="GRID">grid.410607.4</institution-id><institution>Department of Pediatric Hematology/Oncology, Center for Pediatric and Adolescent Medicine, </institution><institution>University Medical Center of the Johannes Gutenberg-University Mainz, </institution></institution-wrap>55131 Mainz, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>20</day>
      <month>12</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>358</elocation-id>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>7</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>12</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Extensive sequencing of tumor tissues has greatly improved our understanding of cancer biology over the past years. The integration of genomic and clinical data is increasingly used to select personalized therapies in dedicated tumor boards (Molecular Tumor Boards) or to identify patients for basket studies. Genomic alterations and clinical information can be stored, integrated and visualized in the open-access resource cBioPortal for Cancer Genomics. cBioPortal can be run as a local instance enabling storage and analysis of patient data in single institutions, in the respect of data privacy. However, uploading clinical input data and genetic aberrations requires the elaboration of multiple data files and specific data formats, which makes it difficult to integrate this system into clinical practice. To solve this problem, we developed cbpManager.
</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">cbpManager is an R package providing a web-based interactive graphical user interface intended to facilitate the maintenance of mutations data and clinical data, including patient and sample information, as well as timeline data. cbpManager enables a large spectrum of researchers and physicians, regardless of their informatics skills to intuitively create data files ready for upload in cBioPortal for Cancer Genomics on a daily basis or in batch. Due to its modular structure based on R Shiny, further data formats such as copy number and fusion data can be covered in future versions. Further, we provide cbpManager as a containerized solution, enabling a straightforward large-scale deployment in clinical systems and secure access in combination with ShinyProxy. cbpManager is freely available via the Bioconductor project at <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/cbpManager/">https://bioconductor.org/packages/cbpManager/</ext-link> under the AGPL-3 license. It is already used at six University Hospitals in Germany (Mainz, Gießen, Lübeck, Halle, Freiburg, and Marburg).
</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">In summary, our package cbpManager is currently a unique software solution in the workflow with cBioPortal for Cancer Genomics, to assist the user in the interactive generation and management of study files suited for the later upload in cBioPortal.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genomic data</kwd>
      <kwd>Clinical data</kwd>
      <kwd>Data management</kwd>
      <kwd>Patient management</kwd>
      <kwd>File generation</kwd>
      <kwd>cBioPortal</kwd>
      <kwd>Shiny</kwd>
      <kwd>R</kwd>
      <kwd>Bioconductor</kwd>
      <kwd>Molecular Tumor Board</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>miracum</institution>
        </funding-source>
        <award-id>01ZZ1801F</award-id>
        <award-id>01ZZ1801A</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Universitätsmedizin der Johannes Gutenberg-Universität Mainz (8974)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par11">In recent years, advances in sequencing techniques have allowed a comprehensive detection of molecular aberrations within tumors in large studies, but also at the individual patient level. Such aberrations include mutations, copy number variations (CNVs), and change in gene expression and methylation, which can be visualized and analyzed via cBioPortal for Cancer Genomics [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Currently, cBioPortal contains data from more than 180 studies, corresponding to approximately 48,000 tumor samples. Such data enable a deeper understanding of the tumor biology and support the development of novel therapies. One of the most important findings of this massive analysis of tumor samples is that molecular aberrations are not specific to tumor entities, but can be shared between different cancer types. This knowledge has led to a widespread application of off-label therapies in personalized protocols. Such therapies are discussed in special Molecular Tumor Boards (MTB) where experts from different fields collaborate with clinicians, to identify the best therapy for individual patients based on the molecular profile of the patient’s tumor [<xref ref-type="bibr" rid="CR3">3</xref>]. The functional and clinical annotation of the identified aberration is a limiting factor in this process because multiple databases must be used to define the pathogenicity and “actionability “ of each molecular alteration. Indeed, while more than 1,000 genes are known to be involved in pathogenesis of cancer, only a small part can be therapeutically exploited [<xref ref-type="bibr" rid="CR4">4</xref>]. Such information is already implemented in cBioPortal for Cancer Genomics, which enables the identified changes to be annotated automatically in order to simplify the prioritization of the reported hits and enhance their interpretation. In addition, cBioPortal also enables to collect and visualize the clinical data of the patient, including previous therapies, which are also required for the final selection of a personalized therapy. cBioPortal can be run as a local instance and could therefore be used in individual institutions for the documentation and interpretation of molecular aberrations in MTB. For this purpose, molecular data of single patients can be uploaded e.g. in the Mutation Annotation Format (MAF) and clinical data as plain text files with values separated by a delimiter. However, the creation of such files manually is time consuming and difficult to integrate into clinical practice. In order to improve the MTB workflow, facilitating the import of clinical and molecular data into a local instance of cBioPortal, we have developed the R package cbpManager.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>General design</title>
      <p id="Par12">In this publication, we use the nomenclature established by cBioportal. Accordingly, a cBioPortal study means a collection of patients. In a local cBioPortal instance, the provider can determine under which aspects patients are grouped into a study. For example, it makes sense to group all MTB patients of an Institution into one "MTB study". Another alternative is to group patients according to defined characteristics, such as the identical tumor entity.</p>
      <p id="Par13">cbpManager is implemented using the R programming language and Shiny [<xref ref-type="bibr" rid="CR5">5</xref>] framework. It can operate on already existing study files used by cBioPortal, but has no direct connection to a cBioPortal instance. The interface to cBioPortal is the directory where the individual study folders are stored—in the dockerized cBioportal version this folder is named "study". cbpManager operates on this folder in the sense that it can 1) read existing studies from this folder, 2) transform the data during an interactive session, and 3) save the transformed data back to this directory (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). At the same time, this means that the upload process to cBioPortal is not managed by cbpManager and the generated study data has to be uploaded to the local cBioPortal instance independently from cbpManager, for example with the <italic>metaImport.py</italic> script offered by cBioPortal [<xref ref-type="bibr" rid="CR6">6</xref>].<fig id="Fig1"><label>Fig. 1</label><caption><p>The study folder acts as a link between cbpManager and the local cBioPortal instance. cbpManager reads, generates and modifies study files stored in the study folder. The study upload to cBioPortal is an independent process of cbpManager and can be handled with the native script metaImport.py provided by cBioPortal</p></caption><graphic xlink:href="12911_2021_1719_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par14">The main functionality of cbpManager can be accessed by a single call to the <italic>cbpManager()</italic> function, which starts the web application. As function arguments, the user passes the path to the study folder, and optionally inter alia a logging directory. During the user session, cbpManager lists the existing studies contained under the provided path as an interactive selection for the user with the possibility to edit them. A study directory for cBioPortal consists of two types of files—data files and metadata files. Each data file needs a metadata file that refers to it. When reading existing studies, cbpManager takes the files of a study as input and requires the data files to have specific names, in contrast to cBioPortal which determines the data file names based on the metadata files. When a study is to be loaded by cbpManger, the data files are read in, storing the information in a reactive object. This object is part of the reactive programming model used by Shiny, where the provided data can be interactively modified on the fly during a session. The user makes the interactive changes persistent by pressing the save buttons, which overwrites or creates the corresponding data and metadata files in the study directory.
</p>
      <p id="Par15">The graphical user interface (GUI) layout is built using the shinydashboard package. The application is organized into several pages, which increases clarity and enables more flexible navigation during the editing workflow (see section “<xref rid="Sec2" ref-type="sec">Results</xref>”). The individual pages correspond to a subset of the different data types that cBioPortal can process as input. The study data of the individual pages is represented in interactive tables generated with the package DT [<xref ref-type="bibr" rid="CR7">7</xref>]. The tables can be edited through a number of functional buttons and modal dialogs, which are also based on Shiny's reactive programming model. Many of the buttons are designed in a modular manner, allowing effective maintenance and customization of functionality.</p>
      <p id="Par16">In addition, cbpManager offers validation of the currently loaded study using the cBioPortal validator. This requires Python and several other dependencies. cbpManager installs via the R packages reticulate [<xref ref-type="bibr" rid="CR8">8</xref>] and basilisk [<xref ref-type="bibr" rid="CR9">9</xref>] either during the session or alternatively with the command <italic>setupConda_cbpManager()</italic> a conda environment with Python and the necessary dependencies. The execution of the script before the actual <italic>cbpManager()</italic> call has the advantage to avoid longer waiting times during the session.</p>
      <p id="Par17">The functionality of cbpManager is comprehensively described in the package vignette and can be browsed at <ext-link ext-link-type="uri" xlink:href="https://arsenij-ust.github.io/cbpManager/index.html">https://arsenij-ust.github.io/cbpManager/index.html</ext-link>, built with the pkgdown [<xref ref-type="bibr" rid="CR10">10</xref>] package. cbpManager leverages bootstrap components (e.g. tooltips, collapsible elements) as provided via the shinyBS [<xref ref-type="bibr" rid="CR11">11</xref>] package to provide in-app documentation of the functionality. This is also showcased in interactive tours, based on rintrojs [<xref ref-type="bibr" rid="CR12">12</xref>], that can be taken to gain familiarity with the user interface while performing common tasks.</p>
      <p id="Par18">cbpManager has been tested on macOS, Linux, and Windows. cbpManager is freely available via the Bioconductor project [<xref ref-type="bibr" rid="CR13">13</xref>], and its development version can be found at <ext-link ext-link-type="uri" xlink:href="https://github.com/arsenij-ust/cbpManager/">https://github.com/arsenij-ust/cbpManager/</ext-link>.</p>
    </sec>
    <sec id="Sec4">
      <title>Deployment in a clinical environment</title>
      <p id="Par19">Since cbpManager is an R package, anyone with little R knowledge can install cbpManager locally in their R environment and try out the application in advance. For this purpose, the cbpManager provides a simple test study right out of the box, with the help of which the user can get to know and experiment with the use of the cbpManager. However, in the use case of an MTB, it is essential that several users can access the same study data in the cbpManager and that a certain degree of security is ensured. To meet these requirements, we containerized the cbpManager and deployed it with ShinyProxy. In a typical use case, a service facility provides a dockerized instance of cbpManager to documentalists and physicians for interactive documentation and management of patient data. ShinyProxy launches a Docker container each time a user runs the application, providing an isolated environment for that session. The respective container is automatically removed by ShinyProxy after the user has exited the session. This allows multiple users to access the same data with the cbpManager and operate cooperatively on the same studies. To meet the increased security standards of clinical environments, an authentication of the cbpManager application can be realized with an authentication server (such as Keycloak or LDAP) linked to ShinyProxy (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). Along this line, we provided a gitlab repository at <ext-link ext-link-type="uri" xlink:href="https://gitlab.miracum.org/arsenij_temp/cbpmanager.deploy">https://gitlab.miracum.org/arsenij_temp/cbpmanager.deploy</ext-link> containing Dockerfiles for cbpManager, and ShinyProxy with an exemplary authentication configuration. To facilitate deployment, we created a Docker Compose file that allows both services (cbpManager and ShinyProxy) to be created and started with one command.<fig id="Fig2"><label>Fig. 2</label><caption><p>IT-Architecture of dockerized services enhancing security. The user authenticates via Keycloak and is redirected to the Docker-container of cbpManager via ShinyProxy. Behind the scene, the study files are stored in the respective subfolders of the study directory. The studies are uploaded to cBioPortal via automated upload processes. cBioPortal provides mechanisms for handling user and group rights and supports Keycloak as Identity Provider</p></caption><graphic xlink:href="12911_2021_1719_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par20">The speed and performance of cbpManager will vary depending on the hardware specifications available. Since cbpManager does not execute any calculation-heavy processes, it can be run on computers/ servers with average specifications, e.g. 8 Gb RAM, Intel(R) Core i5 @ 2.60 GHz with 2 cores and 500 Gb HDD. The RAM during a session depends on the size of loaded studies. Even if a large study is loaded, e.g. with about 24,000 samples and patients, the RAM usage is below 100 Mb—as measured with the profvis package.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Results</title>
    <sec id="Sec6">
      <title>Workflow of cbpManager</title>
      <p id="Par21">In the context of an MTB use-case, cbpManager serves as a tool to manage and prepare clinical and molecular data for upload to cBioPortal, where new patients need to be added continuously and new data is generated during the course of treatment. Below we propose a workflow where the cbpManager is incorporated into the procedure of an MTB. Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the workflow starting with patient registration for the MTB. Clinical data, e.g. the patient's master data with the previous course of therapy, and data from the molecular diagnostic analysis are made available to a documentalist. It is worth mentioning that these data are site-specific, e.g. in digital structured or unstructured form or in paper form. The documentalist adds the new patient with all his data to the MTB study in cbpManager. In the background, cbpManager creates the necessary files in cBioPortal compliant format. These files are uploaded by the IT administrators or by automated ETL processes (see section “IT-infrastructure around the cbpManager”) to the hospital's cBioPortal instance, where they are available to the interdisciplinary MTB team for preparation and presentation in the MTB.<fig id="Fig3"><label>Fig. 3</label><caption><p>Role of cbpManager in use case of a MTB. For the discussion of a patient in MTB, a molecular analysis of the tumor is performed and clinical information such as diagnosis and previous therapies are retrieved from the medical records (MR). A medical documentalist applies cbpManager to create data files suitable for the upload in cBioPortal. For this, molecular data should be prepared in a MAF format, while samples and clinical data are added via the cpbManager interface. Once imported in cBioPortal, molecular aberrations are automatically annotated and previous therapies are visualized. This facilitates the patient-specific selection of a therapy in MTB</p></caption><graphic xlink:href="12911_2021_1719_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par22">To date, cbpManager has supported six data types defined by cBioPortal: Cancer Study, Patient Data, Sample Data, Mutation Data, Timeline Data, and Resource Data. cbpManager is capable of reading and producing the data and meta files of these data types. Each data type is featured in a dedicated page of cbpManager.</p>
      <p id="Par23">In order to minimize the occurrence of mistakes during the use and to correctly assign new entries to a patient, a certain sequence of operations should be followed in the workflow of the cbpManager (Fig. <xref rid="Fig4" ref-type="fig">4</xref>). Thus, a new study has to be created or an existing one selected before adding Patient or Sample Data. Since a link between patients and samples or patients and timeline entries is ensured via a patient ID, it is necessary to first create a new patient on the <italic>Patient</italic> page before adding new Sample or Timeline Data to this patient. This order is implicitly given by the arrangement of the menu items, as well as by programmatic error catching, and explicitly by a graphic on the first page of the cbpManager, the vignette, and an interactive tour (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A). Optional steps, such as the integration of molecular data and timelines can be taken after completing the mandatory operations of the cbpManager workflow.<fig id="Fig4"><label>Fig. 4</label><caption><p>Common workflow for the use of the cbpManager. The blue arrows symbolize the individual pages of the cbpManager from top to bottom. The text boxes explain the function of the respective page. At the beginning, there are the pages that have to be edited compulsorily. Afterwards, the pages follow, which can be supplemented depending upon existing data</p></caption><graphic xlink:href="12911_2021_1719_Fig4_HTML" id="MO4"/></fig><fig id="Fig5"><label>Fig. 5</label><caption><p><italic>Study</italic> page of cbpManager. <bold>A</bold> An overview over cbpManager’s first page allowing the user to create new studies or select and load existing ones. The text fields for the addition of a new study represent meta information of the study and are later written to the meta study file. <bold>B</bold> A close up of the page showing the OncoTree table used for the cancer type selection</p></caption><graphic xlink:href="12911_2021_1719_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Study page of cbpManager for creation and loading of studies</title>
      <p id="Par24">The homepage of cbpManager is the <italic>Study</italic> page, where the user can either create a new study or select from existing studies to load and edit (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A). The <italic>Add new study</italic> panel located on the right side reflects parameters known in cBioPortal as meta-study file, which contains metadata such as cancer study identifier or the description of the cancer study. The cancer type has to be written down as an abbreviation. To make this easier for the user, the expandable panel below provides an interactive table based on OncoTree [<xref ref-type="bibr" rid="CR14">14</xref>], where the user can more easily find the cancer type by using search and sort functionality. In this OncoTree table, the user can then select the cancer type by clicking on the row and the respective dropdown menu <italic>Select the cancer type</italic> will be synchronized with it (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B). In case of studies with multiple cancer types—as it often occurs in the context of MTBs—the type can be specified as <italic>mixed</italic>. After clicking the <italic>Add study</italic> button, the study will be created in a new sub folder under the defined study directory and the respective meta-study file will be generated. This folder is named after the input value of the <italic>Add ID of cancer study</italic> text field. Metadata of a study can be changed retrospectively. In order to further manage a study, it has to be loaded by selecting the respective study in the dropdown menu <italic>Select ID of cancer study</italic> on the left panel. After pressing the <italic>Load study</italic> button, a table containing the metadata below the button as well as a green box in the navigation sidebar appear signaling the user about the successful data upload.</p>
    </sec>
    <sec id="Sec8">
      <title>Managing patient data in cbpManager</title>
      <p id="Par25">Once a new study has been created or an existing one has been selected, new patients can be added by using the patient manager on cbpManager’s <italic>Patient</italic> page (Fig. <xref rid="Fig6" ref-type="fig">6</xref>). In the upper area, it has a <italic>Description</italic> box containing important information on filling in the Patient Data as well as instructions for handling, and a <italic>Sample from cBioPortal</italic> box with an exemplary representation of the Patient Data in cBioPortal (both boxes are collapsed in the following image for better clarity). The <italic>Patient manager</italic> panel contains several function buttons and a central table with the patient information. The first three light blue lines must contain a short name, a long name, and the data type of a column. These rows are required for converting the table to the cBioPortal format and contain metadata of the single attributes (columns) that are later used by cBioPortal for the representation of the attributes. Each further row represents a patient.<fig id="Fig6"><label>Fig. 6</label><caption><p><italic>Patient</italic> page of the cbpManager representing the Patient Data of the example study <italic>Testpatient</italic> provided with the cbpManager. Three main panels contain a description, an exemplary representation of how the data is displayed in cBioPortal (Sample from cBioPortal), and the table representing Patient Data of the currently loaded study, accompanied by several buttons that allow editing the table. Only the column <italic>PATIENT_ID</italic> is mandatory, the remaining optional columns are a mix of pre-defined and customized ones</p></caption><graphic xlink:href="12911_2021_1719_Fig6_HTML" id="MO6"/></fig></p>
      <p id="Par26">The table can be modified using the upper row of buttons. The following functionalities are available: <italic>Add patient</italic>, <italic>Edit patient</italic>, <italic>Import patient</italic>, <italic>Delete patient</italic>, <italic>Add column</italic>, <italic>Delete column</italic>, and <italic>Save</italic>. The <italic>Add patient</italic> button opens a dialog box containing one entry field per existing column (Fig. <xref rid="Fig7" ref-type="fig">7</xref>A). For some predefined attributes the input fields are specific, e.g. only numeric values for the predefined attribute <italic>OS_STATUS</italic>. The input field <italic>PATIENT_ID</italic> is the only mandatory one. After confirming the input, the values are transferred to the table of the <italic>Patient manager</italic> panel. It is possible to import Patient Data from another existing study with the <italic>Import patient</italic> button. In the respective dialog box the study has to be selected first and then the patient ID (Fig. <xref rid="Fig7" ref-type="fig">7</xref>B). During the import, not only Patient Data is imported, but also Sample, Mutation, and Timeline Data of the respective patient are entered. The <italic>Add column(s)</italic> button allows the user to add a new column to the table. In the appearing dialog window one can choose from two options 1) Add a user-defined column (Fig. <xref rid="Fig7" ref-type="fig">7</xref>C), and 2) Choose from predefined columns (Fig. <xref rid="Fig7" ref-type="fig">7</xref>D). While in the first case the user has to specify the metadata of the column in addition to the column name, such as a short and long name of the attribute, in the case of predefined attributes this metadata is already set internally, and is added to the table automatically. For the predefined attributes, we followed the guidelines of cBioPortal, some of the attributes are used in cBioPortal for survival plots, additional information of the patient description in the header, the pan-cancer summary statistic tab, or other specific functionalities. As it is the case with all <italic>Save</italic> buttons of the cbpManager, it is necessary that the user makes the changes permanent by pressing the button after editing a table. This results in the corresponding data and meta files being created—or overwritten if they already exist.<fig id="Fig7"><label>Fig. 7</label><caption><p>Exemplary dialog windows. <bold>A</bold> Dialog window triggered by the button <italic>Add patient</italic> showing an input field per existing attribute in the <italic>Patient manager</italic> table enables the user to add a new row with patient data. <bold>B</bold> Dialog window triggered by the button <italic>Import patient</italic> enables the import of patients from other studies by importing data of the selected patients into the currently loaded study. <bold>C</bold> Dialog window triggered by the button <italic>Add column(s)</italic> provides the user the possibility to add a custom column to the <italic>Patient manager</italic> table. A custom column requires a column name, a short name, a long name, and the data type of the column. The data type can be numeric, boolean, or a character string. <bold>D</bold> The dialog window triggered by the button <italic>Add column(s)</italic> alternatively enables the user to add predefined columns to the <italic>Patient manager</italic> table</p></caption><graphic xlink:href="12911_2021_1719_Fig7_HTML" id="MO7"/></fig></p>
    </sec>
    <sec id="Sec9">
      <title>Adding and editing samples of a cancer study in cbpManager</title>
      <p id="Par27">The <italic>Sample</italic> page has the same structure as the Patient page, since the format of the files resulting from the two pages does not differ. The few functional differences between the two pages are that the rows now represent samples, there is no button for patient import, the <italic>PATIENT_ID</italic> and <italic>SAMPLE_ID</italic> columns are mandatory when creating a new sample, and sample-specific columns are listed among the predefined columns.</p>
    </sec>
    <sec id="Sec10">
      <title>Adding genomic informations</title>
      <p id="Par28">This version of cbpManager allows adding only mutation information. The <italic>Mutations</italic> page offers the user the possibility to upload MAF files and previews existing Mutation data of the currently loaded study as a data table. If mutation data is already available, the content of the uploaded MAF file will be concatenated to the already existing data.</p>
      <p id="Par29">The MAF file has to meet certain requirements defined by cBioPortal, i.e. contain at least the columns <italic>Hugo_Symbol</italic>, <italic>Tumor_Sample_Barcode</italic>, <italic>Variant_Classification</italic>, and <italic>HGVSp_Short</italic> as defined in the chapter “Formats” of the cBioPortal documentation [<xref ref-type="bibr" rid="CR15">15</xref>]. If the user does not have any mutation data, he must use the <italic>Save MAF file</italic> button to generate a corresponding empty data file with associated meta files so that cBioPortal does not throw an error during upload.</p>
    </sec>
    <sec id="Sec11">
      <title>Managing timeline data by editing predefined and custom timeline tracks</title>
      <p id="Par30">The <italic>Timelines</italic> page allows the user to enter information about previous therapies and the patient status which are displayed as a timeline graph in cBioPortal. It enables editing the timeline tracks <italic>Treatment</italic>, <italic>Surgery</italic> and <italic>Status</italic>. Furthermore, it is possible to create and edit user-defined timeline tracks (Fig. <xref rid="Fig8" ref-type="fig">8</xref>). Since cBioPortal represents the number of days starting from the initial diagnosis point instead of a real date for the start or end of a timeline event, one would have to specify the initial diagnosis date for each event as well. This is repetitive and time-consuming in total, which is why we decided to create a patient first diagnosis date table as an intermediate step. We solved this issue by forcing the user to assign a diagnosis date to the patient once, before adding timeline events to a timeline track. This action takes place in the panel <italic>Add date of the first diagnosis to a Patient ID</italic>. cbpManager uses the date of the first diagnosis to later calculate the number of days for each timeline event of the corresponding patient ID.<fig id="Fig8"><label>Fig. 8</label><caption><p><italic>Timeline</italic> page of the cbpManager representing the Timeline Data. The page is divided in six panels containing 1) a description (collapsed panel—blue box), 2) an exemplary image of the cBioPortal representation (red box), 3) a panel for managing dates of first diagnosis (green box), 4) a panel containing tab separated timeline track manager (yellow box), 5) a panel for the addition and selection of further timeline tracks (violet box), and 6) a panel where the table of the selected custom timeline track is shown (brown box)</p></caption><graphic xlink:href="12911_2021_1719_Fig8_HTML" id="MO8"/></fig></p>
      <p id="Par31">To create custom timeline tracks, the user has to specify the name of the timeline track first, and then define whether the event has a time span (timeline) or is a point event (timepoint). This is relevant because timeline events have a start and stop date, while timepoint events only need to have a start date. To edit a timeline track, it needs to be selected from the dropdown menu and confirmed by clicking on the <italic>Edit track</italic> button. The data of the timeline track will be displayed in the panel below. The editorial functionalities are the same as for the rest of the pages. Again, each change must be saved with the <italic>Save</italic> button to make it persistent.</p>
    </sec>
    <sec id="Sec12">
      <title>Additional information</title>
      <p id="Par32">In the <italic>Resources</italic> page additional documents can be added to patients, samples, and studies. A resource describes any available web page, pdf, txt, png, or json file and is represented in cBioPortal as a hyperlink and a tab containing the web based resource. This allows the physician to add pdf based reports or important web pages to samples, patients, or the whole study. The data structure defined by cBioPortal to add a resource is not very intuitive. cbpManager enhances the understanding for the user by the arrangement of the different panels, and through recurring functionalities.</p>
    </sec>
    <sec id="Sec13">
      <title>Final validation of created study files</title>
      <p id="Par33">The <italic>Validation</italic> page allows the user to quickly validate the created or modified study files. The validation checks whether the study is suitable for the upload in cBioPortal. In the background cBioPortal’s <italic>validateData.py</italic> script was used to generate the html validation report, which is then inserted in the cbpManager GUI. The downloadable report generation is triggered by the <italic>Validate</italic> button. Afterwards, the report can be downloaded. The report provides information about which of the study files are present, which files cause warnings or errors and thus prevent the upload to cBioPortal, and usually a precise description of the warnings and errors.</p>
    </sec>
  </sec>
  <sec id="Sec14">
    <title>Discussion</title>
    <p id="Par34">The exploitation of molecular data in patient management is an increasing need in the era of biomarker-driven medicine. However, the use of such data requires technical knowledge and infrastructure which are not always available in hospitals. Even more complex is to connect clinical and molecular data of a patient. While cBioPortal allows the storage, visualization and annotation of molecular data and the storage and visualization of clinical data, its use in hospitals is made difficult by the different steps required for the import of all necessary information. This problem is solved by our proposal cbpManager.</p>
    <sec id="Sec15">
      <title>IT-infrastructure around the cbpManager</title>
      <p id="Par35">The simplest way to make cbpManager available to multiple users is to use the application in a containerized environment as described above in section “Deployment in a clinical environment”. Such containerized applications are becoming the preferred deployment vehicle for micro services in healthcare. Installing cbpManager as a Docker container enables portable and reproducible deployment.</p>
      <p id="Par36">The intuitive interface of cbpManager allows the import of patients’ molecular data without any computational background. However, mutations are retrieved from bioinformatics best practice workflows [<xref ref-type="bibr" rid="CR16">16</xref>] analyzing patients’ sequencing data. Variant calling algorithms inside of these workflows often use the variant call format (VCF) as state-of-the-art file format to store their immediate results. It contains a header section with metadata and a body section with eight mandatory columns, such as chromosome, position, reference allele, alternative allele and some quality statistics, but it can easily be extended with any number of additional information by further columns. cBioPortal however uses the MAF file format. MAF differs from VCF in that it is a tabular format without a header section and requires different obligatory columns (<italic>Hugo_Symbol</italic>, <italic>Variant_Classification</italic>, <italic>Variant_Type</italic>), which have to be annotated first. To convert a VCF to a MAF file there are several options, e.g. the vcf2maf tool [<xref ref-type="bibr" rid="CR17">17</xref>] uses the annotation generated by the Variant Effect Predictor (VEP) [<xref ref-type="bibr" rid="CR18">18</xref>] and converts it to a MAF file. Alternatively, ANNOVAR [<xref ref-type="bibr" rid="CR19">19</xref>] can be used in combination with the R package maftools [<xref ref-type="bibr" rid="CR20">20</xref>]. Also, the recent version of GATK [<xref ref-type="bibr" rid="CR21">21</xref>] provides an option to output in MAF.</p>
      <p id="Par37">cbpManager is currently unique in its functionality. Thus, facility-specific solutions are an alternative to preparing the data for the cBioPortal import. Such solutions may be automated ETL routes to clinical information systems but require to be developed and implemented at the respective sites. The study import can also be designed variably. At this point, there is either the cBioPortal python script <italic>metaImport.py</italic> [<xref ref-type="bibr" rid="CR6">6</xref>], which can be executed automatically on a regular basis or after certain triggers, or the dockerized application cbioportal-staging [<xref ref-type="bibr" rid="CR22">22</xref>], which can extract files from certain locations, transform, validate and load them into cBioPortal. The latter application has various useful features and focuses mainly on the automated data upload, but does not replace the GUI offered by cbpManager and the possibility to flexibly edit data of individual patients in a tabular manner. At the same time, cbpManager does not replace these applications because it lacks the functionality to load study data into cBioPortal.</p>
      <p id="Par38">In many cases, the facility already has existing patient documentation in the form of registers, databases or Excel spreadsheets. The cbpManager is also only suitable to a limited extent for the initial import of this patient base into cBioPortal, as patients have to be inserted individually and this would be time-consuming. While the efforts for creating a generalized solution might be too extensive, given that facilities often adopt unique combinations of content and its format, we still recommend the usage of custom scripts to streamline operations for the initial and one-time preparation of a broad patient base in the appropriate cBioPortal data formats.</p>
    </sec>
    <sec id="Sec16">
      <title>Information supported by the current version of cbpManager</title>
      <p id="Par39">cbpManager allows importing clinical information available via the documentation system of a hospital. Minimum information is already implemented as default, but the system allows the user to add customised information in a simple and intuitive manner. The current version of cbpManager uses OncoTree for definition of the tumor entity. The OncoTree is an open-source ontology that was developed at Memorial Sloan Kettering Cancer Center (MSK) for standardizing cancer type diagnosis [<xref ref-type="bibr" rid="CR14">14</xref>]. This ontology is not currently the standard used by pathologists which generally define tumor entities based on the WHO criteria. The implementation of WHO criteria and definition in further versions of cbpManager is possible. Concerning molecular data, this version of cbpManager allows importing only mutations. Mutations are currently, together with some fusions, the most discussed molecular aberrations in a MTB. cBioPortal allows other data formats such as copy number variations, fusions, methylation, protein and RNA expression data that are more and more available via omics analysis of single patients. Moreover, such data formats could be exploited to import information generally available via standard diagnostic procedures. For example, the Fusion Data format could be used not only to import fusions detected by RNA-Sequencing but also translocations detected by FISH (fluorescent in situ hybridization). The expression or protein data format could be used to document immunohistochemistry results.</p>
    </sec>
    <sec id="Sec17">
      <title>Deployment of the cbpManager at several clinical centres in Germany</title>
      <p id="Par40">We developed cbpManager principally to support the MTB documentation workflow in the frame of the Use Case “From Knowledge to Action—Support for Molecular Tumor Boards” of the MIRACUM consortium (Medical Informatics in Research and Care in University Medicine [<xref ref-type="bibr" rid="CR23">23</xref>]), which focuses on the provision of IT and bioinformatics support for exploitation and visualization of data required in a MTB [<xref ref-type="bibr" rid="CR24">24</xref>]. In addition, it is already being used prototypically via Halle in the SMITH consortium [<xref ref-type="bibr" rid="CR25">25</xref>], via Lübeck in HiGHmed [<xref ref-type="bibr" rid="CR26">26</xref>], and prospectively via the Bavarian Center for Cancer Research (BZKF) in locations of the DIFUTURE consortium [<xref ref-type="bibr" rid="CR27">27</xref>].</p>
    </sec>
    <sec id="Sec18">
      <title>Outlook</title>
      <p id="Par41">We are currently working on the further development of cbpManager. In the next versions of cbpManager, we aim to cover more file formats of cBioPortal, e.g. copy-number alteration data, fusion, and expression data, since such complementary information is increasingly available in routine clinical activities and are gaining more importance in the therapy recommendation process. A useful addition would be the management of user roles and rights for viewing and editing individual studies and even patients. This is relevant in the clinical setting because it may often be the case that the people who have access to the cbpManager are not allowed to view all studies or individual patients due to data protection restrictions. We will implement usability feedback and clinical documentation standards as far as possible.</p>
      <p id="Par42">As mentioned above, cbpManager was developed in the framework of the MIRACUM use case to support MTBs. Among other things, this use case focuses on the extension of cBioPortal functionalities. Like other tools in this use case, cbpManager will be continuously developed and optimized over the duration of the use case. This ensures that cbpManager is adapted to possible major updates of cBioPortal. Generally, cbpManager is expected to be compatible with cBioPortal in the long run, as changes to file formats and data types have been rare so far and were mostly backward compatible with previous file formats. If cBioPortal introduces updates concerning file formats, the programmatic adaptation of cbpManager would likely not be a major hurdle, as only the read-in and output functions would have to be adapted.</p>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Conclusions</title>
    <p id="Par43">Because of cbpManager’s interactive web-based GUI, it is an intuitive application for the creation of cBioPortal-compatible files containing center-specific molecular and clinical data. It has the potential to improve the MTB workflow by simplifying the laborious process of entering and validating patients’ data and preventing diverse errors before they occur during the cBioPortal upload. The docker-based installation makes cbpManager easy to integrate in complex IT-infrastructure and allows secure access to the application in clinical environments. We anticipate that cbpManager could facilitate the incorporation of MTBs into standard-of-care oncology practices.</p>
  </sec>
  <sec id="Sec20">
    <title>Availability and requirements</title>
    <p id="Par44">Project name: cbpManager. Project home page: <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/cbpManager/">https://bioconductor.org/packages/cbpManager/</ext-link> (release) and <ext-link ext-link-type="uri" xlink:href="https://github.com/arsenij-ust/cbpManager/">https://github.com/arsenij-ust/cbpManager/</ext-link> (development version). Project documentation: rendered at <ext-link ext-link-type="uri" xlink:href="https://arsenij-ust.github.io/cbpManager/">https://arsenij-ust.github.io/cbpManager/</ext-link>. Operating system(s): Linux, Mac OS, Windows. Programming language: R. Other requirements: R version 4.1 or higher, Bioconductor release 3.13 or higher. License: AGPL-3. Any restrictions to use by non-academics: none.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CNV</term>
        <def>
          <p id="Par4">Copy number variations</p>
        </def>
      </def-item>
      <def-item>
        <term>FISH</term>
        <def>
          <p id="Par5">Fluorescent in situ hybridization</p>
        </def>
      </def-item>
      <def-item>
        <term>GUI</term>
        <def>
          <p id="Par6">Graphical user interface</p>
        </def>
      </def-item>
      <def-item>
        <term>MAF</term>
        <def>
          <p id="Par7">Mutation Annotation Format</p>
        </def>
      </def-item>
      <def-item>
        <term>MIRACUM</term>
        <def>
          <p id="Par8">Medical Informatics in Research and Care in University Medicine</p>
        </def>
      </def-item>
      <def-item>
        <term>MTB</term>
        <def>
          <p id="Par9">Molecular Tumor Board</p>
        </def>
      </def-item>
      <def-item>
        <term>VCF</term>
        <def>
          <p id="Par10">Variant call format</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>Federico Marini, Torsten Panholzer and Claudia Paret have contributed equally to this work</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Niklas Reimer (University of Lübeck, Lübeck Institute of Experimental Dermatology), Iryna Manuilova (University Hospital Halle, ZD1—Information and Communication Technology), and all other colleagues who helped to install the cbpManager at the respective facilities for their helpful feedback.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>AU Conceptualization, Software, Methodology, Writing—original draft; AD Methodology, Writing—review &amp; editing; CR Writing—review &amp; editing; ACD Data curation, Validation, Writing—review &amp; editing; DCW Methodology, Writing—review &amp; editing; JC Methodology, Validation, Writing—review &amp; editing; PU Resources, Methodology, Writing—review &amp; editing; TK Writing—review &amp; editing; JF Writing—review &amp; editing; FM Software, Resources, Validation, Writing—review &amp; editing; TP Supervision, Project administration, Validation, Writing—review &amp; editing; CP Conceptualization, Supervision, Validation, Writing—original draft. All authors have read and approved the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL. MIRACUM is funded in context of the Medical Informatics Funding Schema by the German Federal Ministry of Education and Research (BMBF). Funding reference number: FKZ 01ZZ1801F, 01ZZ1801A. The funding body did not play any role in the design of the study and collection, analysis, and interpretation of data as well as writing of the manuscript. </p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Data sharing is not applicable to this article as no datasets were generated or analyzed during the current study.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par45">Not applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par46">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par47">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cerami</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Dogrusoz</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Gross</surname>
            <given-names>BE</given-names>
          </name>
          <name>
            <surname>Sumer</surname>
            <given-names>SO</given-names>
          </name>
          <name>
            <surname>Aksoy</surname>
            <given-names>BA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The cBio cancer genomics portal: an open platform for exploring multidimensional cancer genomics data</article-title>
        <source>AACR</source>
        <year>2012</year>
        <volume>2</volume>
        <issue>5</issue>
        <fpage>401</fpage>
        <lpage>404</lpage>
        <pub-id pub-id-type="doi">10.1158/2159-8290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Gao J, Aksoy BA, Dogrusoz U, Dresdner G, Gross B, Sumer SO, et al. Integrative analysis of complex cancer genomics and clinical profiles using the cBioPortal. Science Signaling. 2013; 6(269):l1. 10.1126/scisignal.2004088.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hopkins</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Groom</surname>
            <given-names>CR</given-names>
          </name>
        </person-group>
        <article-title>The druggable genome</article-title>
        <source>Nat Rev Drug Discov</source>
        <year>2002</year>
        <volume>1</volume>
        <issue>9</issue>
        <fpage>727</fpage>
        <lpage>730</lpage>
        <pub-id pub-id-type="doi">10.1038/nrd892</pub-id>
        <?supplied-pmid 12209152?>
        <pub-id pub-id-type="pmid">12209152</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Van der Velden</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Van Herpen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Van Laarhoven</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Smit</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Groen</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Willems</surname>
            <given-names>SM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Molecular tumor boards: current practice and future needs</article-title>
        <source>Ann Oncol</source>
        <year>2017</year>
        <volume>28</volume>
        <issue>12</issue>
        <fpage>3070</fpage>
        <lpage>3075</lpage>
        <pub-id pub-id-type="doi">10.1093/annonc/mdx528</pub-id>
        <?supplied-pmid 29045504?>
        <pub-id pub-id-type="pmid">29045504</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Chang W, Cheng J, Allaire J, Sievert C, Schloerke B, Xie Y, et al. shiny: Web Application Framework for R. R package version 1.6.0. 2021. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=shiny">https://CRAN.R-project.org/package=shiny</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">cBioPortal—Using the metaImport Script. <ext-link ext-link-type="uri" xlink:href="https://docs.cbioportal.org/5.1-data-loading/data-loading/using-the-metaimport-script">https://docs.cbioportal.org/5.1-data-loading/data-loading/using-the-metaimport-script</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Xie Y, Cheng J, Tan X. DT: A Wrapper of the JavaScript Library 'DataTables'. R package version 0.18. 2021. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=DT">https://CRAN.R-project.org/package=DT</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Ushey K, Allaire J, Tang Y. reticulate: Interface to 'Python'. R package version 1.20. 2021. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=reticulate">https://CRAN.R-project.org/package=reticulate</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Lun A. basilisk: Freezing Python Dependencies Inside Bioconductor Packages. R package version 1.4.0. 2021. <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/basilisk/">https://bioconductor.org/packages/basilisk/</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Wickham H, Hesselberth J. pkgdown: Make Static HTML Documentation for a Package. R package version 1.6.1. 2020. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=pkgdown">https://CRAN.R-project.org/package=pkgdown</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Bailey E. shinyBS: Twitter Bootstrap Components for Shiny. R package version 0.61. 2015. <ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=shinyBS">https://CRAN.R-project.org/package=shinyBS</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Ganz C. rintrojs: A Wrapper for the Intro.js Library. Journal of Open Source Software 2016;1(6), 63.10.21105/joss.00063.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Ustjanzew A, Marini F. cbpManager: Generate, manage, and edit data and metadata files suitable for the import in cBioPortal for Cancer Genomics. R package version 1.1.0. 2021. <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/cbpManager/">https://bioconductor.org/packages/cbpManager/</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kundra</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Sheridan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sirintrapun</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ochoa</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>OncoTree: a cancer classification system for precision oncology</article-title>
        <source>JCO Clin Cancer Inf</source>
        <year>2021</year>
        <volume>5</volume>
        <fpage>221</fpage>
        <lpage>230</lpage>
        <pub-id pub-id-type="doi">10.1200/CCI.20.00108</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">cBioPortal—File Formats—Mutation Data. <ext-link ext-link-type="uri" xlink:href="https://docs.cbioportal.org/5.1-data-loading/data-loading/file-formats#mutation-data">https://docs.cbioportal.org/5.1-data-loading/data-loading/file-formats#mutation-data</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koboldt</surname>
            <given-names>DC</given-names>
          </name>
        </person-group>
        <article-title>Best practices for variant calling in clinical sequencing</article-title>
        <source>Genome Med</source>
        <year>2020</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>91</fpage>
        <pub-id pub-id-type="doi">10.1186/s13073-020-00791-w</pub-id>
        <?supplied-pmid 33106175?>
        <pub-id pub-id-type="pmid">33106175</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Kandoth C. mskcc/vcf2maf: vcf2maf. v1.6.19. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/mskcc/vcf2maf">https://github.com/mskcc/vcf2maf</ext-link>. Accessed 30 Jun 2021; 10.5281/zenodo.593251.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McLaren</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Gil</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Riat</surname>
            <given-names>HS</given-names>
          </name>
          <name>
            <surname>Ritchie</surname>
            <given-names>GR</given-names>
          </name>
          <name>
            <surname>Thormann</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The ensembl variant effect predictor</article-title>
        <source>Genome Biol</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>122</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-0974-4</pub-id>
        <?supplied-pmid 27268795?>
        <pub-id pub-id-type="pmid">27268795</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hakonarson</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>ANNOVAR: functional annotation of genetic variants from high-throughput sequencing data</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>16</issue>
        <fpage>e164</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq603</pub-id>
        <?supplied-pmid 20601685?>
        <pub-id pub-id-type="pmid">20601685</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mayakonda</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>D-C</given-names>
          </name>
          <name>
            <surname>Assenov</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Plass</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Koeffler</surname>
            <given-names>HP</given-names>
          </name>
        </person-group>
        <article-title>Maftools: efficient and comprehensive analysis of somatic variants in cancer</article-title>
        <source>Genome Res</source>
        <year>2018</year>
        <volume>28</volume>
        <issue>11</issue>
        <fpage>1747</fpage>
        <lpage>1756</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.239244.118</pub-id>
        <?supplied-pmid 30341162?>
        <pub-id pub-id-type="pmid">30341162</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Poplin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>KV</given-names>
          </name>
          <name>
            <surname>Maguire</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Hartl</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A framework for variation discovery and genotyping using next-generation DNA sequencing data</article-title>
        <source>Nat Genet</source>
        <year>2011</year>
        <volume>43</volume>
        <issue>5</issue>
        <fpage>491</fpage>
        <lpage>498</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.806</pub-id>
        <?supplied-pmid 21478889?>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">cBioPortal Staging Application Usage Guide. <ext-link ext-link-type="uri" xlink:href="https://github.com/thehyve/cbioportal-staging">https://github.com/thehyve/cbioportal-staging</ext-link>. Accessed 30 Jun 2021.</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Prokosch HU, Acker T, Bernarding J, Binder H, Boeker M, Boerries M, et al. MIRACUM: medical informatics in research and care in University Medicine. Methods Inf Med. 2018 Jul;57(S 01):e82–e91. 10.3414/ME17-02-0025.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buechner</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hinderer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Unberath</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Metzger</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Boeker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Acker</surname>
            <given-names>T</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Requirements analysis and specification for a molecular tumor board platform based on cBioPortal</article-title>
        <source>Diagnostics</source>
        <year>2020</year>
        <volume>10</volume>
        <issue>2</issue>
        <fpage>93</fpage>
        <pub-id pub-id-type="doi">10.3390/diagnostics10020093</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Winter A, Stäubert S, Ammon D, et al. Smart Medical Information Technology for Healthcare (SMITH). Methods Inf Med. 2018;57(S 01):e92–e105. 10.3414/ME18-02-0004.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Haarbrandt B, Schreiweis B, Rey S, et al. HiGHmed—an open platform approach to enhance care and research across institutional boundaries. Methods Inf Med. 2018 Jul;57(S 01):e66–e81. 10.3414/ME18-02-0002.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Prasser F, Kohlbacher O, Mansmann U, Bauer B, Kuhn KA. Data Integration for Future Medicine (DIFUTURE). Methods Inf Med. 2018;57(S 01):e57–e65. 10.3414/ME17-02-0022.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Brief Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Brief Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">bib</journal-id>
    <journal-title-group>
      <journal-title>Briefings in Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1467-5463</issn>
    <issn pub-type="epub">1477-4054</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10516361</article-id>
    <article-id pub-id-type="pmid">37594311</article-id>
    <article-id pub-id-type="doi">10.1093/bib/bbad288</article-id>
    <article-id pub-id-type="publisher-id">bbad288</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Problem Solving Protocol</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>TMKit: a Python interface for computational analysis of transmembrane proteins</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1274-5080</contrib-id>
        <name>
          <surname>Sun</surname>
          <given-names>Jianfeng</given-names>
        </name>
        <!--jianfeng.sun@ndorms.ox.ac.uk-->
        <aff>Nuffield Department of Orthopedics, Rheumatology, and Musculoskeletal Sciences, Botnar Research Centre, <institution>University of Oxford</institution>, <addr-line>Headington, Oxford OX3 7LD</addr-line>, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kulandaisamy</surname>
          <given-names>Arulsamy</given-names>
        </name>
        <!--kulandai28@gmail.com-->
        <aff>Department of Biotechnology, Bhupat and Jyoti Mehta School of BioSciences, <institution>Indian Institute of Technology Madras</institution>, <addr-line>Chennai 600036, Tamil Nadu</addr-line>, <country country="IN">India</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6757-6018</contrib-id>
        <name>
          <surname>Ru</surname>
          <given-names>Jinlong</given-names>
        </name>
        <!--jinlong.ru@tum.de-->
        <aff>Chair of Prevention of Microbial Diseases, School of Life Sciences Weihenstephan, <institution>Technical University of Munich</institution>, <addr-line>85354 Freising</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1776-4096</contrib-id>
        <name>
          <surname>Gromiha</surname>
          <given-names>M Michael</given-names>
        </name>
        <!--gromiha@iitm.ac.in-->
        <xref rid="cor1" ref-type="corresp"/>
        <aff>Department of Biotechnology, Bhupat and Jyoti Mehta School of BioSciences, <institution>Indian Institute of Technology Madras</institution>, <addr-line>Chennai 600036, Tamil Nadu</addr-line>, <country country="IN">India</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5288-3077</contrib-id>
        <name>
          <surname>Cribbs</surname>
          <given-names>Adam P</given-names>
        </name>
        <!--adam.cribbs@ndorms.ox.ac.uk-->
        <xref rid="cor1" ref-type="corresp"/>
        <aff>Nuffield Department of Orthopedics, Rheumatology, and Musculoskeletal Sciences, Botnar Research Centre, <institution>University of Oxford</institution>, <addr-line>Headington, Oxford OX3 7LD</addr-line>, <country country="GB">UK</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="cor1">Corresponding authors: Adam P. Cribbs, Botnar Research Centre, Nuffield Department of Orthopedics, Rheumatology, and Musculoskeletal Sciences, University of Oxford, Headington, Oxford OX3 7LD, UK. Tel: +44 1865 227374; E-mail: <email>adam.cribbs@ndorms.ox.ac.uk</email>; M. Michael Gromiha, Department of Biotechnology, Bhupat and Jyoti Mehta School of BioSciences, Indian Institute of Technology Madras, Chennai, Tamil Nadu 600036, India. Tel: +91 4422574138; E-mail: <email>gromiha@iitm.ac.in</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-08-17">
      <day>17</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <issue>5</issue>
    <elocation-id>bbad288</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>7</day>
        <month>7</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>7</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="bbad288.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Transmembrane proteins are receptors, enzymes, transporters and ion channels that are instrumental in regulating a variety of cellular activities, such as signal transduction and cell communication. Despite tremendous progress in computational capacities to support protein research, there is still a significant gap in the availability of specialized computational analysis toolkits for transmembrane protein research. Here, we introduce TMKit, an open-source Python programming interface that is modular, scalable and specifically designed for processing transmembrane protein data. TMKit is a one-stop computational analysis tool for transmembrane proteins, enabling users to perform database wrangling, engineer features at the mutational, domain and topological levels, and visualize protein–protein interaction interfaces. In addition, TMKit includes seqNetRR, a high-performance computing library that allows customized construction of a large number of residue connections. This library is particularly well suited for assigning correlation matrix-based features at a fast speed. TMKit should serve as a useful tool for researchers in assisting the study of transmembrane protein sequences and structures. TMKit is publicly available through <ext-link xlink:href="https://github.com/2003100127/tmkit" ext-link-type="uri">https://github.com/2003100127/tmkit</ext-link> and <ext-link xlink:href="https://tmkit-guide.herokuapp.com/doc/overview" ext-link-type="uri">https://tmkit-guide.herokuapp.com/doc/overview</ext-link>.</p>
    </abstract>
    <kwd-group>
      <kwd>bioinformatics</kwd>
      <kwd>transmembrane proteins</kwd>
      <kwd>sequence analysis</kwd>
      <kwd>structural biology</kwd>
      <kwd>protein interaction interfaces</kwd>
      <kwd>feature extraction</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Medical Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000265</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>MR/V010182/1</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec3">
    <title>INTRODUCTION</title>
    <p>Transmembrane proteins comprise approximately 20–30% of the human genome [<xref rid="ref1" ref-type="bibr">1</xref>] and are therapeutic targets of more than 50% commercially released drugs [<xref rid="ref2" ref-type="bibr">2</xref>]. Despite the biological significance, functional studies of transmembrane proteins have been hampered by an acute shortage of their experimentally determined structures that make up only 2–3% of all of the structures deposited in the protein data bank (PDB) database [<xref rid="ref3" ref-type="bibr">3</xref>, <xref rid="ref4" ref-type="bibr">4</xref>]. This scarcity of structural data underscores the need for computational approaches to assist in the analysis and understanding of functions of these critical biomolecules. A handful of databases specific to transmembrane proteins have been generated to make high-quality 3D structures available for computational analysis [<xref rid="ref5" ref-type="bibr">5–8</xref>]. The protein data bank of transmembrane proteins (PDBTM) stands out as a trustworthy data source that comprehensively collects membrane plane-placed and error-corrected transmembrane protein assemblies [<xref rid="ref6" ref-type="bibr">6</xref>, <xref rid="ref9" ref-type="bibr">9</xref>], each being subject to the determination of nine possible topologies using a structure-based algorithm TMDET [<xref rid="ref10" ref-type="bibr">10</xref>]. Although PDBTM contains rich structural and topological information, there is currently no publicly available computational tool for large-scale topological annotation, file retrieval and format conversion. This limitation hinders the widespread use of PDBTM in the research community.</p>
    <p>Most existing computational tools focus only on addressing object-specific issues, such as database handling [<xref rid="ref11" ref-type="bibr">11–13</xref>], feature generation [<xref rid="ref14" ref-type="bibr">14</xref>, <xref rid="ref15" ref-type="bibr">15</xref>], and visualization [<xref rid="ref16" ref-type="bibr">16</xref>, <xref rid="ref17" ref-type="bibr">17</xref>]. There is a shortage of open-source software for one-stop computational analysis, which covers the modules above. In addition, it is known that the oligomerization of transmembrane proteins for maintaining and regulating many cellular activities, such as signal transduction and immune responses, necessitates a large number of protein–protein interactions (PPIs) occurring on cell membranes [<xref rid="ref18" ref-type="bibr">18</xref>]. However, there is no publicly available tool for visualizing PPI interfaces between them to better support the biological interpretation. In summary, the computational community has been, while filled with toolkits for protein science [<xref rid="ref19" ref-type="bibr">19–22</xref>], devoid of those specialized for transmembrane proteins.</p>
    <p>Here, we present TMKit, a scalable Python toolkit that comprises various function modules for the analysis of transmembrane protein sequences, structures and functions. While many function modules in TMKit are specialized for transmembrane protein-related problems, they can also be applied to other kinds of proteins. One of the standout features of TMKit is its visualization module, which facilitates the biological validation, interpretation and translation of known and predicted PPI interfaces. In addition, TMKit also incorporates seqNetRR, a high-performance computing library that simplifies the construction of residue–residue connections and speeds up feature assignment, enabling faster feature analysis and machine learning modeling. Overall, TMKit is a helpful toolkit for computational studies of transmembrane proteins.</p>
  </sec>
  <sec id="sec4">
    <title>MATERIALS AND METHODS</title>
    <sec id="sec5">
      <title>Functionality of TMKit</title>
      <p>TMKit provides nine function modules to handle several transmembrane protein sequence and structural analysis problems, including <italic toggle="yes">visualization</italic>, <italic toggle="yes">sequence, quality control</italic>, <italic toggle="yes">topology</italic>, <italic toggle="yes">mapping</italic>, <italic toggle="yes">annotation</italic>, <italic toggle="yes">connectivity</italic>, <italic toggle="yes">edge extraction</italic> and <italic toggle="yes">feature</italic> (<xref rid="f1" ref-type="fig">Figure 1</xref>).</p>
      <fig position="float" id="f1">
        <label>Figure 1</label>
        <caption>
          <p>Functionality of TMKit. <italic toggle="yes">Visualization</italic>, <italic toggle="yes">Mapping</italic>, <italic toggle="yes">Annotation</italic>, <italic toggle="yes">Connectivity</italic>, and <italic toggle="yes">Edge extraction</italic>modules in TMKit are considered unique compared to existing tools.</p>
        </caption>
        <graphic xlink:href="bbad288f1" position="float"/>
      </fig>
      <sec id="sec6">
        <title>Visualization</title>
        <p>Identification of PPI interfaces is critical to understand the biological processes governed by proteins. Direct visualization of the PPI interfaces on 3D structures can facilitate their localization at the atomic coordinate level. However, until now, there has been a lack of publicly available programs that allow the one-stop visualization of structural details of PPIs. TMKit is an open-source toolkit that enables access to the PPI interfaces by taking as input the structure of a protein of interest (POI) and a list of probabilities of residue sites to be involved in interactions. The program can automatically generate the label- or propensity-based PPI interfaces in between a POI and its interacting proteins (or its larger complex), which can be visualized in PyMOL [<xref rid="ref23" ref-type="bibr">23</xref>]. For instance, we show in <xref rid="f2" ref-type="fig">Figure 2</xref> the PPI interfaces of chain E of the human calcitonin gene-related peptide (CGRP) with interacting chains P and R [<xref rid="ref24" ref-type="bibr">24</xref>]. Given the pharmaceutical importance of membrane proteins, we additionally provide a one-stop service for visualization of close-ups of protein–drug binding pockets in a few ways, such as using the mesh or sphere to show the binding landscapes.</p>
        <fig position="float" id="f2">
          <label>Figure 2</label>
          <caption>
            <p>Visualization of transmembrane PPI interfaces, protein–drug binding pockets and coloring representations in TMKit.</p>
          </caption>
          <graphic xlink:href="bbad288f2" position="float"/>
        </fig>
      </sec>
      <sec id="sec7">
        <title>Sequence</title>
        <p>The sequence pre-processing module is a fundamental component of TMKit, designed to handle sequence reading in diverse formats, sequence retrieval from various sources and multiple sequence alignment (MSA) generation. It can retrieve sequences from PDB and PDBTM, parse sequences from FASTA, structure and XML files, and stitch discontinuous residues together from PDB structures (see [<xref rid="ref25" ref-type="bibr">25</xref>] for residues in unstructured regions). TMKit contains Python wrappers of the HHblits [<xref rid="ref26" ref-type="bibr">26</xref>] and HAMMER [<xref rid="ref27" ref-type="bibr">27</xref>] commands for further generating MSAs of a protein sequence, which can then be filtered according to a certain identity threshold between homologs or converted to another version (e.g. Stockholm format). TMKit allows the extraction of single residues or residue pairs from a protein sequence in a given sequence separation <italic toggle="yes">k</italic>. A sliding window of any size applied to each of the single residues or residue pairs can further generate a list of neighbor-surrounded residues or residue pairs in sequence context.</p>
      </sec>
      <sec id="sec8">
        <title>Quality control</title>
        <p>The <italic toggle="yes">quality control</italic> module generates a set of protein sequences with sufficient quality, ensuring that they meet necessary criteria for conducting rigorous statistical analysis or prediction tasks. This module evaluates various conditions, including the experimentation methods used, resolution, subclass and sequence length, to qualify proteins in bulk. The uniqueness of this process is the incorporation of topology information derived from structures or predicted by programs, such as the number or the length of transmembrane α-helices. This information is critical for distinguishing between bitopic or other types of polytopic proteins, which is useful for downstream analysis.</p>
      </sec>
      <sec id="sec9">
        <title>Topology</title>
        <p>Transmembrane protein topologies are vital to their structures and functions [<xref rid="ref28" ref-type="bibr">28</xref>, <xref rid="ref29" ref-type="bibr">29</xref>]. For example, the α-helical-buddle embedded within membranes is highly conserved as a structural basis for the formation of a large membrane protein complex [<xref rid="ref30" ref-type="bibr">30</xref>] and the extramembranous regions of G protein-coupled receptors (GPCRs) are functionally important as a checkpoint to interact with external molecules [<xref rid="ref31" ref-type="bibr">31</xref>]. TMKit incorporates a comprehensive set of algorithms dedicated to determining the protein topology. As of now, the 3D atomic coordinates of membrane proteins in the RCSB PDB are primarily obtained from crystallized structures in the absence of membrane lipid bilayers. The localization of the membrane lipid bilayers can be deduced by the TMDET algorithm and used to indicate the positions of transmembrane segments spanning transmembrane regions [<xref rid="ref32" ref-type="bibr">32</xref>]. The positions are stored in XML format through the TMDET (<ext-link xlink:href="http://tmdet.enzim.hu/" ext-link-type="uri">http://tmdet.enzim.hu/</ext-link>) [<xref rid="ref10" ref-type="bibr">10</xref>] or PDBTM server (<ext-link xlink:href="http://pdbtm.enzim.hu/" ext-link-type="uri">http://pdbtm.enzim.hu/</ext-link>) [<xref rid="ref6" ref-type="bibr">6</xref>]. However, the positions do not reveal structurally deduced cytoplasmic or extracellular regions. To make this information available, TMKit implements a method, which was first proposed in the MBPred work [<xref rid="ref33" ref-type="bibr">33</xref>] and applied later in the DeepTMInter work [<xref rid="ref34" ref-type="bibr">34</xref>], to redistribute each TMDET’s non-TM topology with either cytoplasmic or extracellular label by stacking up against topologies predicted by an external method such as TMHMM. Also, TMKit can be used to obtain more detailed non-TM topologies, that is, side 1, side 2, strand, coil, inside, loop and interfacial. Besides the structure-derived topologies, TMKit also supplies predicted topologies by embedding TMHMM and PolyPhobius running on the command line interface (CLI) and within Python.</p>
      </sec>
      <sec id="sec10">
        <title>Mapping</title>
        <p>Identifier mapping between structural and sequence data (e.g. PDB residue IDs and FASTA residue IDs) is an important technical premise to guarantee the correct interpretation of biological findings. Often, residues in FASTA format are imperfectly aligned with those from the PDB structure, as experimentally resolved residues in its crystal structure can become discontinuous due to various challenges associated with the crystallization process [<xref rid="ref25" ref-type="bibr">25</xref>]. The mapping module plays a crucial role in scenarios where it is necessary to convert from PDB residue IDs of topologies deduced by TMDET to FASTA residue IDs for sequence analysis, or to convert sequence-based residue IDs of predicted topologies to PDB residue IDs.</p>
        <p>In addition, protein structures are rendered as the asymmetric units (ASUs) in their PDB files, which represent the smallest but most fundamental units that can be reassembled to the quaternary structures (i.e. biological assembly in oligomer form) through symmetric operations such as rotations and translations based on BIOMT records [<xref rid="ref35" ref-type="bibr">35</xref>, <xref rid="ref36" ref-type="bibr">36</xref>]. An example is the RCSB PDB structure of a transferase for archaeal membrane lipid biosynthesis (PDB code: 5GUF), which consists of two chains biologically but only one chain stored with its coordinates [<xref rid="ref37" ref-type="bibr">37</xref>]. In addition to applying the operations for obtaining the oligomer structure of a protein from its crystalline state, the information about the BIOMT annotations can, to cap it all, be error-prone due to the fact that these can be either defined by researchers or predicted by software (e.g. the PSQ server) [<xref rid="ref38" ref-type="bibr">38</xref>, <xref rid="ref39" ref-type="bibr">39</xref>]. The accession IDs to the non-ASUs are often not documented in PDB or UniProt, which causes a problem to perform analysis through the information wherever needed. In TMKit, we therefore offer the collation of PDB chains that are not the ASU since it is of importance to convert it back in many application scenarios, where, for example, the accurate UniProt accession code is required to trawl through its PPI networks from PPI databases. This module is implemented by comparing RCSB PDB structures and TMDET-generated structures, given that the TMDET algorithm allows both biological unit recovery and error correction during the course of the membrane plane determination. Furthermore, TMKit allows mapping from PDB IDs to UniProt accession codes.</p>
      </sec>
      <sec id="sec11">
        <title>Annotation</title>
        <p>Amino acid residues of transmembrane proteins to be involved in mutations and function domains can be annotated through the MutHTP [<xref rid="ref40" ref-type="bibr">40</xref>], Pred-MutHTP [<xref rid="ref41" ref-type="bibr">41</xref>] and Cath [<xref rid="ref42" ref-type="bibr">42</xref>] databases.</p>
      </sec>
      <sec id="sec12">
        <title>Connectivity</title>
        <p>Studying connections of a protein to others in a PPI network is of crucial importance to understand its biological role. There are a few well-established databases such as BioGRID [<xref rid="ref43" ref-type="bibr">43</xref>], IntAct [<xref rid="ref44" ref-type="bibr">44</xref>] and HuRI [<xref rid="ref45" ref-type="bibr">45</xref>], which are enriched for PPIs of soluble proteins as well as transmembrane proteins of note. For example, interactions that transmembrane proteins are involved in account for about 40% of the human interactome map [<xref rid="ref34" ref-type="bibr">34</xref>]. However, managing various sources and formats is posing a difficulty to unravel the connectivity of proteins. To address this and make it easier to use, TMKit first mines all unique interaction partners of a given list of TM proteins from individual PPI databases and then obtains the union of them by removing redundancy.</p>
      </sec>
      <sec id="sec13">
        <title>Edge extraction</title>
        <p>Quantification and characterization of connections between residues are thought to be key to deciphering and understanding the mechanisms behind a biological network. However, handling a large number of connections is often computationally intractable, primarily due to time complexity involved. Progress in residue contact prediction and interaction site identification has shown that the utilization of neighboring information of residues or residue pairs can result in an improvement in prediction accuracy. We provide a high-performance computing library for extracting connections between residues by constructing bipartite and unipartite graphs (where residue connections are treated as edges) and assigning features in linear time with respect to the number of residues used. We particularly detail this in section <italic toggle="yes">seqNetRR for extracting residue–residue connections</italic>.</p>
      </sec>
      <sec id="sec14">
        <title>Feature</title>
        <p>A set of transmembrane protein-specific and general-purpose features is provided by TMKit in support of machine learning modeling. We first incorporate LIPS [<xref rid="ref46" ref-type="bibr">46</xref>], a method for identifying transmembrane helical interfaces with lipids, to generate the lipophilicity and entropy scores of residues located in seven helical faces defined upon heptad repeats (<xref rid="f1" ref-type="fig">Figure 1</xref>). By establishing a scoring function that combines information about residue lipophilicity and entropy, this program can compute the LIPOS score (i.e. lipophilicity) to evaluate the propensity of a face being exposed to lipids. The score has been used as features or criteria in <italic toggle="yes">ab initio</italic> structural modeling [<xref rid="ref47" ref-type="bibr">47</xref>, <xref rid="ref48" ref-type="bibr">48</xref>] and interaction site identification [<xref rid="ref33" ref-type="bibr">33</xref>]. Moreover, considering the core role of coevolutionary features in structural biology, we then place a module in TMKit to gain access to the fast assignment of coevolutionary features to pairwise or site-wise residues. Besides, transmembrane protein topologies can also be considered as features and included in TMKit.</p>
      </sec>
    </sec>
    <sec id="sec15">
      <title>seqNetRR for extracting residue–residue connections</title>
      <p>We additionally developed seqNetRR, a high-performance computing library for constructing residue connections in sequence and contact-map context and performing coevolutionary feature assignment in linear time. This module is aimed at facilitating feature engineering, scheme design and organization for machine learning modeling of interactions/contacts between residues. Below, we demonstrate the conceptualization, construction and implementation of seqNetRR.</p>
      <sec id="sec16">
        <title>Definition of local and global residue–residue connections</title>
        <p>Connections between a residue of interest and its serially ordered neighboring residues are referred to as local residue–residue connections (LocRRCs for short). As seen in <xref rid="f3" ref-type="fig">Figure 3A</xref>, in sequence context, LocRRCs are connections formed by residue 1 or 2 and other residues that serially flank it. Likewise, global residue–residue connections (GlobRRCs) are those formed by one residue of a residue pair of interest (including its neighbors, see section <italic toggle="yes">Formulation of LocRRCs and GlobRRCs</italic> for details) and the serially ordered neighboring residues of the other one residue of the residue pair (including itself, e.g. connections between residue 1 and the neighboring residues of residue 2). It is commonly seen in structural biology that coevolutionary features assigned to GlobRRCs are used to amplify the prediction performance of long-range residue contacts [<xref rid="ref49" ref-type="bibr">49</xref>, <xref rid="ref50" ref-type="bibr">50</xref>]. <xref rid="f3" ref-type="fig">Figure 3B</xref> shows that from a predicted contact map (i.e. statistically, a type of correlation matrix), residue connections in a square-shaped patch centering a pair of residues of interest are extracted first and then assigned features for a machine learning model to learn the characterization of the residue pair, which has been shown effective. The patch-like GlobRRCs reflect how strongly the two central residues connect their surrounding residues in contact-map context.</p>
        <fig position="float" id="f3">
          <label>Figure 3</label>
          <caption>
            <p>Schematic view of local and global residue–residue connections to be deemed as edges of graphs. (<bold>A</bold>) A transmembrane protein is shown in structure context within which a pair of helices are faced with each other and interact through interfacial residues. Residue 1 and residue 2 are two central residues, not adjacent in sequence but adjacent spatially. Other residues are their neighboring residues. (<bold>B</bold>) Different kinds of graphs with edges are taken as constraints to form connections in sequence (unipartite graphs) or contact-map (bipartite graphs) context. The cumulative graph shows the prioritized connections with the highest correlation scores between a residue of interest and others.</p>
          </caption>
          <graphic xlink:href="bbad288f3" position="float"/>
        </fig>
      </sec>
      <sec id="sec17">
        <title>Formulation of LocRRCs and GlobRRCs</title>
        <p>To describe connections between residues, we define a graph <inline-formula><tex-math notation="LaTeX" id="ineq01">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$G=\left(V,E\right)$\end{document}</tex-math></inline-formula> where <inline-formula><tex-math notation="LaTeX" id="ineq02">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$V$\end{document}</tex-math></inline-formula> is a set of vertices <inline-formula><tex-math notation="LaTeX" id="ineq03">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left\{{v}_1,{v}_2,\dots, {v}_L\right\}$\end{document}</tex-math></inline-formula> representing residues in a protein sequence of length <inline-formula><tex-math notation="LaTeX" id="ineq04">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$L$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq05">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$E$\end{document}</tex-math></inline-formula> is a set of edges <inline-formula><tex-math notation="LaTeX" id="ineq06">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left\{{e}_1,{e}_2,\dots, {e}_m\right\}$\end{document}</tex-math></inline-formula> (<inline-formula><tex-math notation="LaTeX" id="ineq07">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$E\subset V\times V$\end{document}</tex-math></inline-formula>) representing connections between residues. Residue <inline-formula><tex-math notation="LaTeX" id="ineq08">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i$\end{document}</tex-math></inline-formula> has a neighbor <inline-formula><tex-math notation="LaTeX" id="ineq09">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_j$\end{document}</tex-math></inline-formula> if <inline-formula><tex-math notation="LaTeX" id="ineq10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_j$\end{document}</tex-math></inline-formula> is a serially ordered residue surrounding <inline-formula><tex-math notation="LaTeX" id="ineq11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i$\end{document}</tex-math></inline-formula> in sequence context. As seen in <xref rid="f4" ref-type="fig">Figure 4A</xref>, we place two equidistant sliding windows with the size <inline-formula><tex-math notation="LaTeX" id="ineq12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$w$\end{document}</tex-math></inline-formula> to a given residue pair of interest <inline-formula><tex-math notation="LaTeX" id="ineq13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^Q$\end{document}</tex-math></inline-formula>, respectively, to form two regions <inline-formula><tex-math notation="LaTeX" id="ineq15">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq16">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula>. Any residue <inline-formula><tex-math notation="LaTeX" id="ineq17">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i^P$\end{document}</tex-math></inline-formula> (<inline-formula><tex-math notation="LaTeX" id="ineq18">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i=1,2,\dots, w$\end{document}</tex-math></inline-formula>) from region <inline-formula><tex-math notation="LaTeX" id="ineq19">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> and any residue <inline-formula><tex-math notation="LaTeX" id="ineq20">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i^Q$\end{document}</tex-math></inline-formula> (<inline-formula><tex-math notation="LaTeX" id="ineq21">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i=1,2,\dots, w$\end{document}</tex-math></inline-formula>) from region <inline-formula><tex-math notation="LaTeX" id="ineq22">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula> are elements of residue sets <inline-formula><tex-math notation="LaTeX" id="ineq23">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P\left({V}_P\subset V\right)$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq24">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q\left({V}_Q\subset V\right)$\end{document}</tex-math></inline-formula>, respectively. Residues in blue in region <inline-formula><tex-math notation="LaTeX" id="ineq25">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> are denoted as neighboring residues of <inline-formula><tex-math notation="LaTeX" id="ineq26">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^P$\end{document}</tex-math></inline-formula> in red, so are those of <inline-formula><tex-math notation="LaTeX" id="ineq27">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^Q$\end{document}</tex-math></inline-formula> in red in region <inline-formula><tex-math notation="LaTeX" id="ineq28">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula>. A LocRRC is formed by any two elements from set <inline-formula><tex-math notation="LaTeX" id="ineq29">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P$\end{document}</tex-math></inline-formula> or set <inline-formula><tex-math notation="LaTeX" id="ineq30">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q$\end{document}</tex-math></inline-formula> and a GlobRRC is formed by an element from set <inline-formula><tex-math notation="LaTeX" id="ineq31">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P$\end{document}</tex-math></inline-formula> and an element from set <inline-formula><tex-math notation="LaTeX" id="ineq32">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q$\end{document}</tex-math></inline-formula>. All LocRRCs in regions <inline-formula><tex-math notation="LaTeX" id="ineq33">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq34">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula> are binary relations <inline-formula><tex-math notation="LaTeX" id="ineq35">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${R}_{V_P}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq36">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${R}_{V_Q}$\end{document}</tex-math></inline-formula>, respectively, given by the <italic toggle="yes">Cartesian products</italic>  <inline-formula><tex-math notation="LaTeX" id="ineq37">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P\times{V}_P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq38">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q\times{V}_Q$\end{document}</tex-math></inline-formula> as follows:</p>
        <disp-formula id="deqn01">
          <tex-math notation="LaTeX" id="DmEquation1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$${R}_{V_P}=\left\{&lt;{v}_i^P,{v}_j^P&gt;|{v}_i^P,{v}_j^P\in{V}_P\wedge{C}_{\mathrm{uni}}\right\}$$\end{document}</tex-math>
        </disp-formula>
        <disp-formula id="deqn02">
          <tex-math notation="LaTeX" id="DmEquation2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$${R}_{V_Q}=\left\{&lt;{v}_i^Q,{v}_j^Q&gt;|{v}_i^Q,{v}_j^Q\in{V}_Q\wedge{C}_{\mathrm{uni}}\right\}$$\end{document}</tex-math>
        </disp-formula>
        <p>where <inline-formula><tex-math notation="LaTeX" id="ineq39">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i,j=1,2,\dots, w$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq40">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{uni}}$\end{document}</tex-math></inline-formula> stands for a group of certain edges restricted by different kinds of unipartite graphs introduced below.</p>
        <fig position="float" id="f4">
          <label>Figure 4</label>
          <caption>
            <p>Illustration of construction of GlobRRCs/LocRRCs and feature assignment in seqNetRR of TMKit. (<bold>A</bold>) Extraction of window-placed connections between residues from a protein sequence of length <inline-formula><tex-math notation="LaTeX" id="ineq41">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$L$\end{document}</tex-math></inline-formula> (actually can be applied for DNA or RNA sequences). (<bold>B</bold>) Computational scheme of feature assignment. After applying a window of size <inline-formula><tex-math notation="LaTeX" id="ineq42">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$w$\end{document}</tex-math></inline-formula>, a 3D Python data object is formed. The number of connections of residue pairs of interest is <inline-formula><tex-math notation="LaTeX" id="ineq43">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\frac{\left(L\times \left(L-1\right)\right)}{2}$\end{document}</tex-math></inline-formula>. Restricted by a bipartite graph with <inline-formula><tex-math notation="LaTeX" id="ineq44">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$t$\end{document}</tex-math></inline-formula> edges, the number of window-placed GlobRRCs is <inline-formula><tex-math notation="LaTeX" id="ineq45">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left(2\times w+1\right)\times t$\end{document}</tex-math></inline-formula>. Restricted by a unipartite graph, the number of window-placed LocRRCs is <inline-formula><tex-math notation="LaTeX" id="ineq46">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left(2\times w\right)\times \left(2\times w+1\right)$\end{document}</tex-math></inline-formula>. The feature assignment is performed by looking up residue positions per connection in a 2D hash table to take the corresponding values.</p>
          </caption>
          <graphic xlink:href="bbad288f4" position="float"/>
        </fig>
        <p>Similarly, all GlobRRCs are described as binary relations <inline-formula><tex-math notation="LaTeX" id="ineq47">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${R}_{V_{PQ}}$\end{document}</tex-math></inline-formula>, given by the <italic toggle="yes">Cartesian products</italic>  <inline-formula><tex-math notation="LaTeX" id="ineq48">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P\times{V}_Q$\end{document}</tex-math></inline-formula>, such that</p>
        <disp-formula id="deqn03">
          <tex-math notation="LaTeX" id="DmEquation3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$${R}_{V_{PQ}}=\left\{&lt;{v}_i^P,{v}_j^Q&gt;|{v}_i^P\in{V}_P\wedge{v}_j^Q\in{V}_Q\wedge{C}_{\mathrm{bi}}\right\}$$\end{document}</tex-math>
        </disp-formula>
        <p>where <inline-formula><tex-math notation="LaTeX" id="ineq49">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i,j=1,2,\dots, w$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq50">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{bi}}$\end{document}</tex-math></inline-formula> stands for a group of certain edges restricted by different kinds of bipartite graphs introduced below.</p>
      </sec>
      <sec id="sec18">
        <title>Unipartite and bipartite graphs</title>
        <p>For LocRRCs, a set of edges <inline-formula><tex-math notation="LaTeX" id="ineq51">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${e}_1{e}_2\dots{e}_{t-1}{e}_t$\end{document}</tex-math></inline-formula> between a residue of interest and its neighboring residues is conceived as constraints to collectively characterize the sequence surroundings of this residue; for GlobRRCs, the set of edges is used to characterize the surroundings of a residue pair in contact-map context. Thus, the main role of making different bipartite and unipartite graphs is to provide informative edges to better characterize residues or residue pairs of interest. Several bipartite and unipartite graphs are introduced below as constraints <inline-formula><tex-math notation="LaTeX" id="ineq52">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{uni}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq53">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{bi}$\end{document}</tex-math></inline-formula> to form different kinds of LocRRCs and GlobRRCs.</p>
        <sec id="sec19">
          <title>Unipartite graphs</title>
          <p>The two unipartite graphs <inline-formula><tex-math notation="LaTeX" id="ineq54">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left({V}_P+{V}_P,{E}_{\mathrm{uni}\_\mathrm{P}}\right)$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq55">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left({V}_Q+{V}_Q,{E}_{\mathrm{uni}\_\mathrm{Q}}\right)$\end{document}</tex-math></inline-formula> for which edges between two vertices from the same set are only available [<xref rid="ref51" ref-type="bibr">51</xref>] are used to demarcate LocRRCs. As shown in <xref rid="f3" ref-type="fig">Figure 3B</xref>, we present an example of a unipartite graph with five vertices to be fully connected with each other. This is currently the unipartite graph scheme (i.e. <inline-formula><tex-math notation="LaTeX" id="ineq56">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{uni}}$\end{document}</tex-math></inline-formula>) to extract all LocRRCs for each central residue in seqNetRR of TMKit. Users can also impose other kinds of <inline-formula><tex-math notation="LaTeX" id="ineq57">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{uni}}$\end{document}</tex-math></inline-formula> on the unipartite graph by specifying certain two coordinates as an edge between two residues, e.g. (0, 2) in region <inline-formula><tex-math notation="LaTeX" id="ineq58">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> shown in <xref rid="f4" ref-type="fig">Figure 4A</xref>.</p>
        </sec>
        <sec id="sec20">
          <title>Bipartite graphs</title>
          <p>A bipartite graph <inline-formula><tex-math notation="LaTeX" id="ineq59">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$G$\end{document}</tex-math></inline-formula> is defined as <inline-formula><tex-math notation="LaTeX" id="ineq60">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left({V}_P+{V}_Q,{E}_{\mathrm{bi}}\right)$\end{document}</tex-math></inline-formula> [<xref rid="ref52" ref-type="bibr">52</xref>], where there is no adjacency (i.e. connections) between nodes in either residue set <inline-formula><tex-math notation="LaTeX" id="ineq61">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P$\end{document}</tex-math></inline-formula> or <inline-formula><tex-math notation="LaTeX" id="ineq62">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q$\end{document}</tex-math></inline-formula>. We implemented three types of bipartite graphs, that is, <italic toggle="yes">patch</italic>, <italic toggle="yes">memconp</italic> and <italic toggle="yes">cross</italic> (<xref rid="f3" ref-type="fig">Figure 3B</xref>). The <italic toggle="yes">patch</italic> graph consists of connections in a square patch centering a residue pair [<xref rid="ref50" ref-type="bibr">50</xref>] and the <italic toggle="yes">memconp</italic> graph consists of possible connections between residues in a pair of helices arranged in a face-to-face manner, which were used in the DeepHelicon and MemConP studies [<xref rid="ref50" ref-type="bibr">50</xref>, <xref rid="ref53" ref-type="bibr">53</xref>], rendering constraints <inline-formula><tex-math notation="LaTeX" id="ineq63">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{bi}$\end{document}</tex-math></inline-formula> as <inline-formula><tex-math notation="LaTeX" id="ineq64">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i^P\ne{v}_j^Q$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq65">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left(i+a,j+b\right)\wedge \left(a,b\right)\in$\end{document}</tex-math></inline-formula> {(0,0), (0,1), (0,−1), (0,3), (0,−3), (0,4), (0,−4), (1,0), (−1,0), (3,0), (−3,0), (3,4), (−3,4), (3,−4), (−3,−4), (4,0), (−4,0), (4,3), (−4,3), (4,−3), (−4,−3), (4,4), (−4,4), (4,−4), (−4,−4)}, respectively. Another showcase is a <italic toggle="yes">cross</italic>-connected bipartite graph in which a node of interest in an edge set is connected to its counterparts in another edge set.</p>
        </sec>
      </sec>
      <sec id="sec21">
        <title>Prioritized connections with the highest correlation coefficients</title>
        <p>In addition, seqNetRR implements a computing scheme of the cumulative correlation coefficient (cumuCC) for every single residue by summing the correlation coefficients of threshold-based co-evolutionarily important connections with other residues (<xref rid="f3" ref-type="fig">Figure 3B</xref>). For example, in evolutionary biology, the sum of the <inline-formula><tex-math notation="LaTeX" id="ineq66">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$k$\end{document}</tex-math></inline-formula> highest evolutionary coupling scores of a residue can help evaluate the extent to which this residue bears evolutionary constraints (a type of correlation coefficient, also called evolutionary constraint ratio) [<xref rid="ref54" ref-type="bibr">54</xref>]. This has been used as an important feature to gauge whether a residue is an interaction site in transmembrane proteins (see MBPred and DeepTMInter in [<xref rid="ref33" ref-type="bibr">33</xref>, <xref rid="ref34" ref-type="bibr">34</xref>]). In a word, the cumuCC is given by</p>
        <disp-formula id="deqn04">
          <tex-math notation="LaTeX" id="DmEquation4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$\mathrm{cumuCC}=\frac{1}{c}\times{\mathrm{CC}}_R$$\end{document}</tex-math>
        </disp-formula>
        <p>where <inline-formula><tex-math notation="LaTeX" id="ineq67">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${\mathrm{CC}}_R$\end{document}</tex-math></inline-formula> stands for the sum of the <inline-formula><tex-math notation="LaTeX" id="ineq68">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$k$\end{document}</tex-math></inline-formula> highest correlation coefficients of residue connections involving the residue <inline-formula><tex-math notation="LaTeX" id="ineq69">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$R$\end{document}</tex-math></inline-formula> according to those ranked correlation coefficients in descending order and <inline-formula><tex-math notation="LaTeX" id="ineq70">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$c$\end{document}</tex-math></inline-formula> is the sum of the correlation matrix (e.g. generated by FreeContact [<xref rid="ref55" ref-type="bibr">55</xref>]) over the number of residue pairs.</p>
      </sec>
      <sec id="sec22">
        <title>Implementation of feature assignment to LocRRCs and GlobRRCs</title>
        <p>Efficiently assigning features to a substantial number of residue pairs is a crucial preliminary step before undertaking more sophisticated computational modeling. For a given protein sequence, a list of residues/residue pairs of interest are extracted first to be stored technically as the data object in green (placed with a window, if applicable, <xref rid="f4" ref-type="fig">Figure 4B</xref>) and their LocRRCs or GlobRRCs are constructed then to be stored as the data object in blue. It may be more plausible in practice that a 3D Python data object that entirely stores LocRRCs or GlobRRCs is used finally for feature assignment, with the first dimension representing the number of LocRRCs/GlobRRCs per residue/residue pair of interest (<italic toggle="yes">x</italic>-axis), the second dimension representing the total number of residues/residue pairs of interest (<italic toggle="yes">y</italic>-axis) and the last dimension storing the sequence positions of every two residues (<italic toggle="yes">z</italic>-axis). However, this can bring additional computational cost because of the added operation of creating, storing and re-extracting LocRRCs or GlobRRCs. It worsens heavily when large proteins with exponentially increased residue pairs are used. The seqNetRR module of TMKit manages to assign features by directly using the data object in green to bypass the separate generation of the data object in blue. A hash table is built to look up the correlation coefficients (e.g. typically coevolutionary features) from a correlation matrix. We term this method <italic toggle="yes">Hash</italic>. Relatively, the feature assignment method that is involved in the separate generation is called <italic toggle="yes">Hash_indirec.</italic></p>
        <p>Looking up a correlation coefficient in the 2D hash table of a correlation matrix requires the time complexity of <inline-formula><tex-math notation="LaTeX" id="ineq71">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(1)+O(1)$\end{document}</tex-math></inline-formula> (i.e. row + column), namely, <inline-formula><tex-math notation="LaTeX" id="ineq72">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(1)$\end{document}</tex-math></inline-formula>, where no loop operation (i.e. a single correlation coefficient) in the second dimension of the hash table negates further time consumption and meanwhile the load balancing problem [<xref rid="ref56" ref-type="bibr">56</xref>] is ignored. The complexity of time required to look up a residue–residue connection in a window-free 3D data object of LocRRCs or GlobRRCs is <inline-formula><tex-math notation="LaTeX" id="ineq73">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(n)$\end{document}</tex-math></inline-formula>, while it will grow to <inline-formula><tex-math notation="LaTeX" id="ineq74">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^2\right)$\end{document}</tex-math></inline-formula> if a window is placed inside the 3D data object. The time complexity of feature assignment to LocRRCs or GlobRRCs rises to <inline-formula><tex-math notation="LaTeX" id="ineq75">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> but is relevant with the choice of whether or not edge-enriched unipartite or bipartite graphs are used. It should be noticed that the time complexity does not exceed <inline-formula><tex-math notation="LaTeX" id="ineq76">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> and should actually be ranging from <inline-formula><tex-math notation="LaTeX" id="ineq77">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(n)$\end{document}</tex-math></inline-formula> to <inline-formula><tex-math notation="LaTeX" id="ineq78">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> because a small-size window and a graph with a few edges as constraints can vastly bring down the <inline-formula><tex-math notation="LaTeX" id="ineq79">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> complexity.</p>
        <fig position="float" id="f5">
          <label>Figure 5</label>
          <caption>
            <p>Computing performance of the construction of GlobRRCs and feature assignment. (<bold>A</bold>) Bar plot of the average running time of the two tasks. (<bold>B</bold>) Boxen plot of the total running time of the two tasks for each protein. (<bold>C</bold>) The total running time of the two tasks versus the molecular length per protein. (<bold>D</bold>) The total running time of the two tasks versus the number of residue pairs per protein. (<bold>E</bold>) Line plot and heatmap of each protein’s running time. <italic toggle="yes">t-test_rel</italic> for the paired <italic toggle="yes">t</italic>-test. To reduce noise, the running time has been grouped for data smoothing (a sliding window of size 5).</p>
          </caption>
          <graphic xlink:href="bbad288f5" position="float"/>
        </fig>
        <p>For comparison purposes, we additionally selected non-hashing look-up operations over a correlation matrix. These include the <italic toggle="yes">pandas.at</italic> method in Pandas [<xref rid="ref57" ref-type="bibr">57</xref>] and the NumPy array indexing method [<xref rid="ref58" ref-type="bibr">58</xref>]. In our case, the <italic toggle="yes">pandas.at</italic> method has been tested better than the <italic toggle="yes">pandas</italic>.<italic toggle="yes">loc</italic>, <italic toggle="yes">pandas</italic>.<italic toggle="yes">ix</italic> and <italic toggle="yes">pandas</italic>.<italic toggle="yes">groupby</italic> methods. Note that if the data object of LocRRCs or GlobRRCs is kept unchanged, introducing any further look-up operations over a correlation matrix can bring an additional cost of time complexity up to <inline-formula><tex-math notation="LaTeX" id="ineq80">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^2\right)$\end{document}</tex-math></inline-formula> at worst.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec23">
    <title>RESULTS</title>
    <sec id="sec24">
      <title>Computing performance of feature assignment</title>
      <p>We first evaluated the running time of different methods on assigning coevolutionary features to GlobRRCs restricted by the bipartite graph of a 5 × 5 patch (<xref rid="f3" ref-type="fig">Figures 3B and</xref><xref rid="f5" ref-type="fig">5</xref>). The information about the benchmark datasets can be found in Supplementary Material, available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>. We omitted the comparison with the NumPy array indexing method due to its extremely time-consuming nature. As shown in <xref rid="f5" ref-type="fig">Figure 5A</xref>, the two methods involving hash tables outperform the Pandas <italic toggle="yes">pandas.at</italic> method in terms of the average running time, particularly with the <italic toggle="yes">Hash</italic> method taking 6.47 s (6.60 s for TRAIN, 7.48 s for PREVIOUS and 5.33 s for TEST). The paired <italic toggle="yes">t</italic>-tests confirm the statistically significant difference between the running time of every two methods (<xref rid="f5" ref-type="fig">Figure 5B</xref>). The statistical test between <italic toggle="yes">Hash_indirec</italic> and <italic toggle="yes">Hash</italic> demonstrates that the time optimization relies on minimizing every individual unnecessary cost. Moreover, the run-time exhibits a strong correlation with the molecular length exponentially and the number of residue pairs linearly, as evidenced by significantly high R-squared values of 0.95 and 1, respectively. For instance, in the case of approximately 120 000 unrepeated residue pairs generated from a protein with a length of 500, our program completes the entire feature assignment in only 16 s.</p>
      <fig position="float" id="f6">
        <label>Figure 6</label>
        <caption>
          <p>TMKit website interface.</p>
        </caption>
        <graphic xlink:href="bbad288f6" position="float"/>
      </fig>
      <p>Next, we examined the feature assignment to LocRRCs restricted by a 5-node unipartite graph (<xref rid="f3" ref-type="fig">Figure 3B</xref> and <xref rid="sup1" ref-type="supplementary-material">Figure S1</xref>, available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). We included the comparison with the NumPy method because of its acceptable CPU time in handling LocRRCs. Similarly, the issue on the feature assignment to LocRRCs has also turned out to be trivial by using the <italic toggle="yes">Hash</italic> method, where the running time is only 1.63 s on average (1.64 s for TRAIN, 1.94 s for PREVIOUS and 1.30 s for TEST). The <italic toggle="yes">Hash</italic> method is 33-fold and 11-fold faster than the NumPy array indexing method and the Pandas pandas.at method, respectively.</p>
      <p>We finally assessed the computing performance of assigning cumuCCs to individual residues using top-ranked residue pairs of protein lengths <italic toggle="yes">L</italic>/5, <italic toggle="yes">L</italic>/5, <italic toggle="yes">L</italic>/2, <italic toggle="yes">L</italic>, 1.5<italic toggle="yes">L</italic>, 2<italic toggle="yes">L</italic>, 5<italic toggle="yes">L</italic> and 10<italic toggle="yes">L</italic>, and found that our program performed the assignment of cumuCCs within 0.7 s for all the given thresholds (<xref rid="sup1" ref-type="supplementary-material">Figures S2</xref>–<xref rid="sup1" ref-type="supplementary-material">S4</xref>, available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>).</p>
    </sec>
    <sec id="sec25">
      <title>TMKit usage</title>
      <p>TMKit is designed in an open-source, modular and scalable manner with 13 Python modules (9 function modules as displayed in section <italic toggle="yes">Methods</italic>) to handle various types of analyses of transmembrane protein sequences and structures. The TMKit functions can be accessed via the following modules: <italic toggle="yes">tmkit.cath</italic>, <italic toggle="yes">tmkit.collate</italic>, <italic toggle="yes">tmkit.edge</italic> (i.e. seqNetRR), <italic toggle="yes">tmkit.feature</italic>, <italic toggle="yes">tmkit.mapping</italic>, <italic toggle="yes">tmkit.msa</italic>, <italic toggle="yes">tmkit.mut</italic>, <italic toggle="yes">tmkit.ppi</italic>, <italic toggle="yes">tmkit.qc</italic>, <italic toggle="yes">tmkit.rrc</italic>, <italic toggle="yes">tmkit.seq</italic>, <italic toggle="yes">tmkit.topo</italic> and <italic toggle="yes">tmkit.vs</italic>. They are mainly used inline in Python. Note that in order to facilitate the development of TMKit, many functions provided by some of these modules work based on a few external Python packages or libraries, including LIPS [<xref rid="ref46" ref-type="bibr">46</xref>], BioPandas [<xref rid="ref59" ref-type="bibr">59</xref>], Scikit-learn [<xref rid="ref60" ref-type="bibr">60</xref>] and Biopython [<xref rid="ref61" ref-type="bibr">61</xref>].</p>
    </sec>
    <sec id="sec26">
      <title>TMKit website</title>
      <p>The TMKit website (<ext-link xlink:href="https://tmkit-guide.herokuapp.com/" ext-link-type="uri">https://tmkit-guide.herokuapp.com</ext-link>) provides the specification of the 13 Python modules where case studies are presented (<xref rid="f6" ref-type="fig">Figure 6</xref>). Each case-study vignette shows the definition of input parameters and files, the running pipeline and the output.</p>
    </sec>
  </sec>
  <sec id="sec27">
    <title>DISCUSSION</title>
    <p>In this work, we present TMKit, a computational toolkit that offers numerous function modules for analyzing transmembrane protein sequences and structures. Many of its modules facilitate machine learning modeling of transmembrane proteins. TMKit’s visualization capabilities allow atomic-level visualization of known and predicted protein–protein interaction interfaces for rapid biological interpretation. In addition, TMKit integrates a high-performance computing library seqNetRR, which can construct various sets of residue connections and assign features in linear time with respect to the number of residue pairs used. The seqNetRR module is designed to permit fast computation for learning the surrounding information of residues/residue pairs of interest in machine learning modeling problems.</p>
    <p>TMKit distinguishes itself from existing tools mainly in terms of its easy-to-use functions, fast running speed and relatively comprehensive coverage of a wide range of capabilities that handle transmembrane protein data in different formats. Transmembrane protein structures are routinely collected into a few bespoke databases, such as PDBTM [<xref rid="ref6" ref-type="bibr">6</xref>]. Given the importance of these data sources and the widespread use of Python, TMKit is developed to access them swiftly and easily. The types of topologies in the lipid-anchored transmembrane proteins partly define their roles in biological processes. TMKit is imparted with a strong ability to process structure-derived or predicted transmembrane topological data. We realize that an increasing number of downstream protein analysis tasks (e.g. PPI prediction) require complicated procedures that can actually be taken apart into a batch of subtasks. In this aspect, users can flexibly engineer and layer the TMKit functions into the procedures of their analysis because TMKit is assembled modular, which paves the way for more advanced downstream analysis. Besides, existing tools in protein science are mostly subject specific [<xref rid="ref12" ref-type="bibr">12</xref>, <xref rid="ref17" ref-type="bibr">17</xref>] and many of them are finally available as computational models. However, users may need to build their analysis frameworks or methods from scratch. In particular, to our knowledge, TMKit is the first open-source tool to visualize the structural details of PPI interfaces, which helps biological interpretation. Considering that TMKit provides an overarching solution for data munging at the sequence, domain, structural and PPI levels, it can also be used for analyzing other types of proteins.</p>
    <p>The relentless progress in computational techniques has transformed the landscape of the entire structural biology field [<xref rid="ref62" ref-type="bibr">62</xref>]. For example, AlphaFold2 [<xref rid="ref63" ref-type="bibr">63</xref>] has predicted structures of an extensive repertoire of proteins for which their experimentally resolved structures are not available. The TMKit toolkit provides a function to access the AlphaFold2-predicted TM protein structures. In order to gain an understanding of biological processes that a predicted structure may be involved in, we further provide users with structural alignment based on the Foldseek webserver [<xref rid="ref64" ref-type="bibr">64</xref>], which searches against its built-in structural databases. A promising future direction for TMKit to further enhance its functionalities is the extraction of structural features from the predicted structures.</p>
    <boxed-text id="box01" position="float">
      <sec id="sec15a">
        <title>Key Points</title>
        <list list-type="bullet">
          <list-item>
            <p>TMKit is the first Python interface for providing a one-stop computational analysis of transmembrane protein sequences and structures.</p>
          </list-item>
          <list-item>
            <p>TMKit offers a range of flexible functions for visualizing atomic-level interaction/mutation interfaces between transmembrane proteins.</p>
          </list-item>
          <list-item>
            <p>TMKit includes a direct module to access many transmembrane protein-specific databases, e.g. PDBTM, for fast database wrangling.</p>
          </list-item>
          <list-item>
            <p>TMKit is well suited for extracting biological features of single/paired residues from large transmembrane proteins at a fast speed.</p>
          </list-item>
          <list-item>
            <p>TMKit allows for detailed topological, mutational and interaction annotations of transmembrane protein sites.</p>
          </list-item>
        </list>
      </sec>
    </boxed-text>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>Supplementary_File_bbad288</label>
      <media xlink:href="supplementary_file_bbad288.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="sec29">
    <title>FUNDING</title>
    <p>Medical Research Council (MRC) career development fellowship (MR/V010182/1) to A.P.C.</p>
  </sec>
  <sec sec-type="data-availability" id="sec30">
    <title>DATA AVAILABILITY</title>
    <p>The TMKit toolkit is publicly available at <ext-link xlink:href="https://github.com/2003100127/tmkit" ext-link-type="uri">https://github.com/2003100127/tmkit</ext-link> and the documentation is available at <ext-link xlink:href="https://tmkit-guide.herokuapp.com/doc/overview" ext-link-type="uri">https://tmkit-guide.herokuapp.com/doc/overview</ext-link>.</p>
  </sec>
  <notes id="AN1">
    <p><bold>Jianfeng Sun</bold> is a postdoctoral researcher at the University of Oxford, Oxford, UK. He has developed 2 computational methods for studying interactions between transmembrane protein sites. His main research interests are sequence analysis of transmembrane proteins, structural biology, computational biology, and nanopore and single-cell sequencing.</p>
    <p><bold>Arulsamy Kulandaisamy</bold> is a postdoctoral researcher in the Protein Bioinformatics Lab at the Department of Biotechnology of the IIT Bhupat and Jyoti Mehta School of BioSciences in Madras, India. He has developed more than 10 published databases or computational tools for transmembrane protein research. His main research interests are the prediction of mutations and stabilities of transmembrane protein sites with machine learning.</p>
    <p><bold>Jinlong Ru</bold> is a PhD candidate at the Technical University of Munich, Munich, Germany. His research interests are systems biology and computational metagenomics.</p>
    <p><bold>M. Michael Gromiha</bold> is a Professor at the Indian Institute of Technology Madras, India. His main research interests are structural analysis, prediction, folding and stability of globular and membrane proteins, protein interactions and development of bioinformatics databases and tools. He has published &gt;250 research articles, 50 reviews, 7 editorials and 2 books entitled ‘<italic toggle="yes">Protein Bioinformatics: From Sequence to Function</italic>’ by Elsevier/Academic Press and ‘<italic toggle="yes">Protein Interactions: Computational Methods, Analysis and Prediction</italic>’ by World Scientific.</p>
    <p><bold>Adam P. Cribbs</bold> is an Associate Professor at the University of Oxford, Oxford, UK. His research is directed toward understanding disease biology from a functional genomics standpoint by developing computational approaches to advance our understanding of the mechanisms that regulate genes, proteins and biological pathways. His main research interests are systems biology, computational biology, nanopore and single-cell sequencing.</p>
  </notes>
  <ref-list id="bib1">
    <title>REFERENCES</title>
    <ref id="ref1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wallin</surname>  <given-names>E</given-names></string-name>, <string-name><surname>Von</surname>  <given-names>HG</given-names></string-name></person-group>. <article-title>Genome-wide analysis of integral membrane proteins from eubacterial, archaean, and eukaryotic organisms</article-title>. <source>Protein Sci</source>  <year>1998</year>;<volume>7</volume>:<fpage>1029</fpage>–<lpage>38</lpage>.<pub-id pub-id-type="pmid">9568909</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Uhlén</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Fagerberg</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Hallström</surname>  <given-names>BM</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Tissue-based map of the human proteome</article-title>. <source>Science</source>  <year>2015</year>;<volume>347</volume>(<issue>6220</issue>):<fpage>1260419</fpage>.<pub-id pub-id-type="pmid">25613900</pub-id></mixed-citation>
    </ref>
    <ref id="ref3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Thomas</surname>  <given-names>JMH</given-names></string-name>, <string-name><surname>Simkovic</surname>  <given-names>F</given-names></string-name>, <string-name><surname>Keegan</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Approaches to ab initio molecular replacement of α-helical transmembrane proteins</article-title>. <source>Acta Crystallogr D</source>  <year>2017</year>;<volume>73</volume>:<fpage>985</fpage>–<lpage>96</lpage>.</mixed-citation>
    </ref>
    <ref id="ref4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Xia</surname>  <given-names>Y</given-names></string-name>, <string-name><surname>Fischer</surname>  <given-names>AW</given-names></string-name>, <string-name><surname>Teixeira</surname>  <given-names>P</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Integrated structural biology for a-helical membrane protein structure determination</article-title>. <source>Structure</source>  <year>2018</year>;<volume>26</volume>:<fpage>657</fpage>–<lpage>666.e2</lpage>.<pub-id pub-id-type="pmid">29526436</pub-id></mixed-citation>
    </ref>
    <ref id="ref5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shimizu</surname>  <given-names>K</given-names></string-name>, <string-name><surname>Cao</surname>  <given-names>W</given-names></string-name>, <string-name><surname>Saad</surname>  <given-names>G</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Comparative analysis of membrane protein structure databases</article-title>. <source>Biochim Biophys Acta Biomembr</source>  <year>2018</year>;<volume>1860</volume>:<fpage>1077</fpage>–<lpage>91</lpage>.<pub-id pub-id-type="pmid">29331638</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kozma</surname>  <given-names>D</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name>, <string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name></person-group>. <article-title>PDBTM: protein data bank of transmembrane proteins after 8 years</article-title>. <source>Nucleic Acids Res</source>  <year>2013</year>;<volume>41</volume>:<fpage>D524</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">23203988</pub-id></mixed-citation>
    </ref>
    <ref id="ref7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lomize</surname>  <given-names>AL</given-names></string-name>, <string-name><surname>Todd</surname>  <given-names>SC</given-names></string-name>, <string-name><surname>Pogozheva</surname>  <given-names>ID</given-names></string-name></person-group>. <article-title>Spatial arrangement of proteins in planar and curved membranes by PPM 3.0</article-title>. <source>Protein Sci</source>  <year>2022</year>;<volume>31</volume>:<fpage>209</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">34716622</pub-id></mixed-citation>
    </ref>
    <ref id="ref8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Newport</surname>  <given-names>TD</given-names></string-name>, <string-name><surname>Sansom</surname>  <given-names>MSP</given-names></string-name>, <string-name><surname>Stansfeld</surname>  <given-names>PJ</given-names></string-name></person-group>. <article-title>The MemProtMD database: a resource for membrane-embedded protein structures and their lipid interactions</article-title>. <source>Nucleic Acids Res</source>  <year>2019</year>;<volume>47</volume>:<fpage>D390</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30418645</pub-id></mixed-citation>
    </ref>
    <ref id="ref9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name>, <string-name><surname>Dosztányi</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name></person-group>. <article-title>PDB_TM: selection and membrane localization of transmembrane proteins in the protein data bank</article-title>. <source>Nucleic Acids Res</source>  <year>2005</year>;<volume>33</volume>:<fpage>D275</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">15608195</pub-id></mixed-citation>
    </ref>
    <ref id="ref10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name>, <string-name><surname>Dosztányi</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name></person-group>. <article-title>TMDET: web server for detecting transmembrane regions of proteins by using their 3D coordinates</article-title>. <source>Bioinformatics</source>  <year>2004</year>;<volume>21</volume>:<fpage>1276</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">15539454</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kunzmann</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Hamacher</surname>  <given-names>K</given-names></string-name></person-group>. <article-title>Biotite: a unifying open source computational biology framework in Python</article-title>. <source>BMC Bioinformatics</source>  <year>2018</year>;<volume>19</volume>:<fpage>346</fpage>.<pub-id pub-id-type="pmid">30285630</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gilpin</surname>  <given-names>W</given-names></string-name></person-group>. <article-title>PyPDB: a Python API for the protein data Bank</article-title>. <source>Bioinformatics</source>  <year>2015</year>;<volume>32</volume>:<fpage>159</fpage>–<lpage>60</lpage>.<pub-id pub-id-type="pmid">26369703</pub-id></mixed-citation>
    </ref>
    <ref id="ref13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Faezov</surname>  <given-names>B</given-names></string-name>, <string-name><surname>Dunbrack</surname>  <given-names>RL</given-names>, <suffix>Jr</suffix></string-name></person-group>. <article-title>PDBrenum: a webserver and program providing protein data bank files renumbered according to their UniProt sequences</article-title>. <source>PloS One</source>  <year>2021</year>;<volume>16</volume>:<fpage>e0253411</fpage>.<pub-id pub-id-type="pmid">34228733</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>F</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iLearn: an integrated platform and meta-learner for feature engineering, machine-learning analysis and modeling of DNA, RNA and protein sequence data</article-title>. <source>Brief Bioinform</source>  <year>2019</year>;<volume>21</volume>:<fpage>1047</fpage>–<lpage>57</lpage>.</mixed-citation>
    </ref>
    <ref id="ref15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>F</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iFeature: a Python package and web server for features extraction and selection from protein and peptide sequences</article-title>. <source>Bioinformatics</source>  <year>2018</year>;<volume>34</volume>:<fpage>2499</fpage>–<lpage>502</lpage>.<pub-id pub-id-type="pmid">29528364</pub-id></mixed-citation>
    </ref>
    <ref id="ref16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Guzzi</surname>  <given-names>PH</given-names></string-name>, <string-name><surname>Di Paola</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Giuliani</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>PCN-miner: an open-source extensible tool for the analysis of protein contact networks</article-title>. <source>Bioinformatics</source>  <year>2022</year>;<volume>38</volume>:<fpage>4235</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">35799364</pub-id></mixed-citation>
    </ref>
    <ref id="ref17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rosignoli</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Paiardini</surname>  <given-names>A</given-names></string-name></person-group>. <article-title>DockingPie: a consensus docking plugin for PyMOL</article-title>. <source>Bioinformatics</source>  <year>2022</year>;<volume>38</volume>:<fpage>4233</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">35792827</pub-id></mixed-citation>
    </ref>
    <ref id="ref18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yeow</surname>  <given-names>EKL</given-names></string-name>, <string-name><surname>Clayton</surname>  <given-names>AHA</given-names></string-name></person-group>. <article-title>Enumeration of oligomerization states of membrane proteins in living cells by homo-FRET spectroscopy and microscopy: theory and application</article-title>. <source>Biophys J</source>  <year>2007</year>;<volume>92</volume>:<fpage>3098</fpage>–<lpage>104</lpage>.<pub-id pub-id-type="pmid">17416632</pub-id></mixed-citation>
    </ref>
    <ref id="ref19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>C</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iLearnPlus: a comprehensive and automated machine-learning platform for nucleic acid and protein sequence analysis, prediction and visualization</article-title>. <source>Nucleic Acids Res</source>  <year>2021</year>;<volume>49</volume>:<fpage>e60</fpage>–<lpage>0</lpage>.<pub-id pub-id-type="pmid">33660783</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname>  <given-names>X</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iFeatureOmega: an integrative platform for engineering, visualization and analysis of features from molecular sequences, structural and ligand data sets</article-title>. <source>Nucleic Acids Res</source>  <year>2022</year>;<volume>50</volume>:<fpage>W434</fpage>–<lpage>47</lpage>.<pub-id pub-id-type="pmid">35524557</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yin</surname>  <given-names>X</given-names></string-name>, <string-name><surname>Yang</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Xiao</surname>  <given-names>F</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>MemBrain: an easy-to-use online webserver for transmembrane protein structure prediction</article-title>. <source>Nanomicro Lett</source>  <year>2017</year>;<volume>10</volume>:<fpage>2</fpage>.<pub-id pub-id-type="pmid">30393651</pub-id></mixed-citation>
    </ref>
    <ref id="ref22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ferruz</surname>  <given-names>N</given-names></string-name>, <string-name><surname>Schmidt</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Höcker</surname>  <given-names>B</given-names></string-name></person-group>. <article-title>ProteinTools: a toolkit to analyze protein structures</article-title>. <source>Nucleic Acids Res</source>  <year>2021</year>;<volume>49</volume>:<fpage>W559</fpage>–<lpage>66</lpage>.<pub-id pub-id-type="pmid">34019657</pub-id></mixed-citation>
    </ref>
    <ref id="ref23">
      <label>23.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Schrödinger</surname>  <given-names>LLC</given-names></string-name>, <string-name><surname>DELANO</surname>  <given-names>W</given-names></string-name></person-group>.
<publisher-name>PyMOL</publisher-name>.</mixed-citation>
    </ref>
    <ref id="ref24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liang</surname>  <given-names>Y-L</given-names></string-name>, <string-name><surname>Khoshouei</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Deganutti</surname>  <given-names>G</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Cryo-EM structure of the active, Gs-protein complexed, human CGRP receptor</article-title>. <source>Nature</source>  <year>2018</year>;<volume>561</volume>:<fpage>492</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30209400</pub-id></mixed-citation>
    </ref>
    <ref id="ref25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pao</surname>  <given-names>K-C</given-names></string-name>, <string-name><surname>Wood</surname>  <given-names>NT</given-names></string-name>, <string-name><surname>Knebel</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Activity-based E3 ligase profiling uncovers an E3 ligase with esterification activity</article-title>. <source>Nature</source>  <year>2018</year>;<volume>556</volume>:<fpage>381</fpage>–<lpage>5</lpage>.<pub-id pub-id-type="pmid">29643511</pub-id></mixed-citation>
    </ref>
    <ref id="ref26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Remmert</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Biegert</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Hauser</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Söding</surname>  <given-names>J</given-names></string-name></person-group>. <article-title>HHblits: lightning-fast iterative protein sequence searching by HMM-HMM alignment</article-title>. <source>Nat Methods</source>  <year>2012</year>;<volume>9</volume>:<fpage>173</fpage>–<lpage>5</lpage>.</mixed-citation>
    </ref>
    <ref id="ref27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Johnson</surname>  <given-names>LS</given-names></string-name>, <string-name><surname>Eddy</surname>  <given-names>SR</given-names></string-name>, <string-name><surname>Portugaly</surname>  <given-names>E</given-names></string-name></person-group>. <article-title>Hidden Markov model speed heuristic and iterative HMM search procedure</article-title>. <source>BMC Bioinformatics</source>  <year>2010</year>;<volume>11</volume>:<fpage>431</fpage>.<pub-id pub-id-type="pmid">20718988</pub-id></mixed-citation>
    </ref>
    <ref id="ref28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><etal>et al.</etal>  <article-title>Topology of membrane proteins—predictions, limitations and variations</article-title>. <source>Curr Opin Struct Biol</source>  <year>2018</year>;<volume>50</volume>:<fpage>9</fpage>–<lpage>17</lpage>.<pub-id pub-id-type="pmid">29100082</pub-id></mixed-citation>
    </ref>
    <ref id="ref29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><prefix>von</prefix>  <surname>Heijne</surname>  <given-names>G</given-names></string-name></person-group>. <article-title>Membrane-protein topology</article-title>. <source>Nat Rev Mol Cell Biol</source>  <year>2006</year>;<volume>7</volume>:<fpage>909</fpage>–<lpage>18</lpage>.<pub-id pub-id-type="pmid">17139331</pub-id></mixed-citation>
    </ref>
    <ref id="ref30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ried</surname>  <given-names>CL</given-names></string-name>, <string-name><surname>Kube</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Kirrbach</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Langosch</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Homotypic interaction and amino acid distribution of unilaterally conserved transmembrane helices</article-title>. <source>J Mol Biol</source>  <year>2012</year>;<volume>420</volume>:<fpage>251</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">22561134</pub-id></mixed-citation>
    </ref>
    <ref id="ref31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pal</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Chattopadhyay</surname>  <given-names>A</given-names></string-name></person-group>. <article-title>Extramembranous regions in G protein-coupled receptors: Cinderella in receptor biology?</article-title>  <source>J Membr Biol</source>  <year>2019</year>;<volume>252</volume>:<fpage>483</fpage>–<lpage>97</lpage>.<pub-id pub-id-type="pmid">31471645</pub-id></mixed-citation>
    </ref>
    <ref id="ref32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name>, <string-name><surname>Dosztányi</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name></person-group>. <article-title>Transmembrane proteins in the protein data bank: identification and classification</article-title>. <source>Bioinformatics</source>  <year>2004</year>;<volume>20</volume>:<fpage>2964</fpage>–<lpage>72</lpage>.<pub-id pub-id-type="pmid">15180935</pub-id></mixed-citation>
    </ref>
    <ref id="ref33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zeng</surname>  <given-names>B</given-names></string-name>, <string-name><surname>Hönigschmid</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Residue co-evolution helps predict interaction sites in α-helical membrane proteins</article-title>. <source>J Struct Biol</source>  <year>2019</year>;<volume>206</volume>:<fpage>156</fpage>–<lpage>69</lpage>.<pub-id pub-id-type="pmid">30836197</pub-id></mixed-citation>
    </ref>
    <ref id="ref34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sun</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Improved sequence-based prediction of interaction sites in α-helical transmembrane proteins by deep learning</article-title>. <source>Comput Struct Biotechnol J</source>  <year>2021</year>;<volume>19</volume>:<fpage>1512</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">33815689</pub-id></mixed-citation>
    </ref>
    <ref id="ref35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krissinel</surname>  <given-names>E</given-names></string-name>, <string-name><surname>Henrick</surname>  <given-names>K</given-names></string-name></person-group>. <article-title>Inference of macromolecular assemblies from crystalline state</article-title>. <source>J Mol Biol</source>  <year>2007</year>;<volume>372</volume>:<fpage>774</fpage>–<lpage>97</lpage>.<pub-id pub-id-type="pmid">17681537</pub-id></mixed-citation>
    </ref>
    <ref id="ref36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lawson</surname>  <given-names>CL</given-names></string-name>, <string-name><surname>Dutta</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Westbrook</surname>  <given-names>JD</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Representation of viruses in the remediated PDB archive</article-title>. <source>Acta Crystallogr D</source>  <year>2008</year>;<volume>64</volume>:<fpage>874</fpage>–<lpage>82</lpage>.</mixed-citation>
    </ref>
    <ref id="ref37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ren</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Caforio</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Yang</surname>  <given-names>Q</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Structural and mechanistic insights into the biosynthesis of CDP-archaeol in membranes</article-title>. <source>Cell Res</source>  <year>2017</year>;<volume>27</volume>:<fpage>1378</fpage>–<lpage>91</lpage>.<pub-id pub-id-type="pmid">28961231</pub-id></mixed-citation>
    </ref>
    <ref id="ref38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bordner</surname>  <given-names>AJ</given-names></string-name>, <string-name><surname>Gorin</surname>  <given-names>AA</given-names></string-name></person-group>. <article-title>Comprehensive inventory of protein complexes in the protein data bank from consistent classification of interfaces</article-title>. <source>BMC Bioinformatics</source>  <year>2008</year>;<volume>9</volume>:<fpage>234</fpage>.<pub-id pub-id-type="pmid">18474114</pub-id></mixed-citation>
    </ref>
    <ref id="ref39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bordner</surname>  <given-names>AJ</given-names></string-name></person-group>. <article-title>Predicting protein-protein binding sites in membrane proteins</article-title>. <source>BMC Bioinformatics</source>  <year>2009</year>;<volume>10</volume>:<fpage>312</fpage>.<pub-id pub-id-type="pmid">19778442</pub-id></mixed-citation>
    </ref>
    <ref id="ref40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kulandaisamy</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Binny Priya</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Sakthivel</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>MutHTP: mutations in human transmembrane proteins</article-title>. <source>Bioinformatics</source>  <year>2018</year>;<volume>34</volume>:<fpage>2325</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">29401218</pub-id></mixed-citation>
    </ref>
    <ref id="ref41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kulandaisamy</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Zaucha</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Sakthivel</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Pred-MutHTP: prediction of disease-causing and neutral mutations in human transmembrane proteins</article-title>. <source>Hum Mutat</source>  <year>2020</year>;<volume>41</volume>:<fpage>581</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">31821684</pub-id></mixed-citation>
    </ref>
    <ref id="ref42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sillitoe</surname>  <given-names>I</given-names></string-name>, <string-name><surname>Dawson</surname>  <given-names>N</given-names></string-name>, <string-name><surname>Lewis</surname>  <given-names>TE</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>CATH: expanding the horizons of structure-based functional annotations for genome sequences</article-title>. <source>Nucleic Acids Res</source>  <year>2018</year>;<volume>47</volume>:<fpage>D280</fpage>–<lpage>4</lpage>.</mixed-citation>
    </ref>
    <ref id="ref43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Oughtred</surname>  <given-names>R</given-names></string-name>, <string-name><surname>Stark</surname>  <given-names>C</given-names></string-name>, <string-name><surname>Breitkreutz</surname>  <given-names>B-J</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>The BioGRID interaction database: 2019 update</article-title>. <source>Nucleic Acids Res</source>  <year>2018</year>;<volume>47</volume>:<fpage>D529</fpage>–<lpage>41</lpage>.</mixed-citation>
    </ref>
    <ref id="ref44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Orchard</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Ammari</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Aranda</surname>  <given-names>B</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>The MIntAct project—IntAct as a common curation platform for 11 molecular interaction databases</article-title>. <source>Nucleic Acids Res</source>  <year>2014</year>;<volume>42</volume>:<fpage>D358</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">24234451</pub-id></mixed-citation>
    </ref>
    <ref id="ref45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Luck</surname>  <given-names>K</given-names></string-name>, <string-name><surname>Kim</surname>  <given-names>D-K</given-names></string-name>, <string-name><surname>Lambourne</surname>  <given-names>L</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>A reference map of the human binary protein interactome</article-title>. <source>Nature</source>  <year>2020</year>;<volume>580</volume>:<fpage>402</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">32296183</pub-id></mixed-citation>
    </ref>
    <ref id="ref46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Adamian</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Liang</surname>  <given-names>J</given-names></string-name></person-group>. <article-title>Prediction of transmembrane helix orientation in polytopic membrane proteins</article-title>. <source>BMC Struct Biol</source>  <year>2006</year>;<volume>6</volume>:<fpage>13</fpage>.<pub-id pub-id-type="pmid">16792816</pub-id></mixed-citation>
    </ref>
    <ref id="ref47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname>  <given-names>Y</given-names></string-name>, <string-name><surname>Barth</surname>  <given-names>P</given-names></string-name></person-group>. <article-title>Evolutionary-guided de novo structure prediction of self-associated transmembrane helical proteins with near-atomic accuracy</article-title>. <source>Nat Commun</source>  <year>2015</year>;<volume>6</volume>:<fpage>7196</fpage>.<pub-id pub-id-type="pmid">25995083</pub-id></mixed-citation>
    </ref>
    <ref id="ref48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Leelananda</surname>  <given-names>SP</given-names></string-name>, <string-name><surname>Lindert</surname>  <given-names>S</given-names></string-name></person-group>. <article-title>Iterative molecular dynamics–Rosetta membrane protein structure refinement guided by Cryo-EM densities</article-title>. <source>J Chem Theory Comput</source>  <year>2017</year>;<volume>13</volume>:<fpage>5131</fpage>–<lpage>45</lpage>.<pub-id pub-id-type="pmid">28949136</pub-id></mixed-citation>
    </ref>
    <ref id="ref49">
      <label>49.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jones</surname>  <given-names>DT</given-names></string-name>, <string-name><surname>Singh</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Kosciolek</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Tetchner</surname>  <given-names>S</given-names></string-name></person-group>. <article-title>MetaPSICOV: combining coevolution methods for accurate prediction of contacts and long range hydrogen bonding in proteins</article-title>. <source>Bioinformatics</source>  <year>2015</year>;<volume>31</volume>:<fpage>999</fpage>–<lpage>1006</lpage>.<pub-id pub-id-type="pmid">25431331</pub-id></mixed-citation>
    </ref>
    <ref id="ref50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sun</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>DeepHelicon: accurate prediction of inter-helical residue contacts in transmembrane proteins by residual neural networks</article-title>. <source>J Struct Biol</source>  <year>2020</year>;<volume>212</volume>:<fpage>107574</fpage>.<pub-id pub-id-type="pmid">32663598</pub-id></mixed-citation>
    </ref>
    <ref id="ref51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kumar</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Sharma</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>A potential energy and mutual information based link prediction approach for bipartite networks</article-title>. <source>Sci Rep</source>  <year>2020</year>;<volume>10</volume>:<fpage>20659</fpage>.<pub-id pub-id-type="pmid">33244025</pub-id></mixed-citation>
    </ref>
    <ref id="ref52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yamanishi</surname>  <given-names>Y</given-names></string-name>, <string-name><surname>Araki</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Gutteridge</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Prediction of drug–target interaction networks from the integration of chemical and genomic spaces</article-title>. <source>Bioinformatics</source>  <year>2008</year>;<volume>24</volume>:<fpage>i232</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">18586719</pub-id></mixed-citation>
    </ref>
    <ref id="ref53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hönigschmid</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Accurate prediction of helix interactions and residue contacts in membrane proteins</article-title>. <source>J Struct Biol</source>  <year>2016</year>;<volume>194</volume>:<fpage>112</fpage>–<lpage>23</lpage>.<pub-id pub-id-type="pmid">26851352</pub-id></mixed-citation>
    </ref>
    <ref id="ref54">
      <label>54.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hopf</surname>  <given-names>TA</given-names></string-name>, <string-name><surname>Colwell</surname>  <given-names>LJ</given-names></string-name>, <string-name><surname>Sheridan</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Three-dimensional structures of membrane proteins from genomic sequencing</article-title>. <source>Cell</source>  <year>2012</year>;<volume>149</volume>:<fpage>1607</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">22579045</pub-id></mixed-citation>
    </ref>
    <ref id="ref55">
      <label>55.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kaján</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Hopf</surname>  <given-names>TA</given-names></string-name>, <string-name><surname>Kalaš</surname>  <given-names>M</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>FreeContact: fast and free software for protein contact prediction from residue co-evolution</article-title>. <source>BMC Bioinformatics</source>  <year>2014</year>;<volume>15</volume>:<fpage>85</fpage>.<pub-id pub-id-type="pmid">24669753</pub-id></mixed-citation>
    </ref>
    <ref id="ref56">
      <label>56.</label>
      <mixed-citation publication-type="journal">Azar Y, Broder AZ, Karlin AR. On-line load balancing. <source>Theor Comput Sci</source> 1994; <volume>130</volume>:73–84.</mixed-citation>
    </ref>
    <ref id="ref57">
      <label>57.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McKinney</surname>  <given-names>W.</given-names></string-name></person-group>  <part-title>Data structures for statistical computing in Python</part-title>. In: van der Walt SJ, Millman J, <source>Proceedings of the 9th Python in Science Conference</source>. Austin, Texas, USA: SciPy, <year>2010</year>; <fpage>56</fpage>–<lpage>61</lpage>. <ext-link xlink:href="https://conference.scipy.org/proceedings/scipy2010/mckinney.html" ext-link-type="uri">https://conference.scipy.org/proceedings/scipy2010/mckinney.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="ref58">
      <label>58.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname>  <given-names>CR</given-names></string-name>, <string-name><surname>Millman</surname>  <given-names>KJ</given-names></string-name>, <string-name><prefix>van der</prefix>  <surname>Walt</surname>  <given-names>SJ</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Array programming with NumPy</article-title>. <source>Nature</source>  <year>2020</year>;<volume>585</volume>:<fpage>357</fpage>–<lpage>62</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="ref59">
      <label>59.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Raschka</surname>  <given-names>S</given-names></string-name></person-group>. <article-title>BioPandas: working with molecular structures in pandas DataFrames</article-title>. <source>J Open Source Softw</source>  <year>2017</year>;<volume>2</volume>:<fpage>279</fpage>.</mixed-citation>
    </ref>
    <ref id="ref60">
      <label>60.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname>  <given-names>F</given-names></string-name>, <string-name><surname>Varoquaux</surname>  <given-names>G</given-names></string-name>, <string-name><surname>Gramfort</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Scikit-learn: machine learning in Python</article-title>. <source>J Mach Learn Res</source>  <year>2011</year>;<volume>12</volume>:<fpage>2825</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="ref61">
      <label>61.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cock</surname>  <given-names>PJA</given-names></string-name>, <string-name><surname>Antao</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Chang</surname>  <given-names>JT</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>. <source>Bioinformatics</source>  <year>2009</year>;<volume>25</volume>:<fpage>1422</fpage>–<lpage>3</lpage>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="ref62">
      <label>62.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hegedűs</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Geisler</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Lukács</surname>  <given-names>GL</given-names></string-name>, <string-name><surname>Farkas</surname>  <given-names>B</given-names></string-name></person-group>. <article-title>Ins and outs of AlphaFold2 transmembrane protein structure predictions</article-title>. <source>Cell Mol Life Sci</source>  <year>2022</year>;<volume>79</volume>:<fpage>73</fpage>.<pub-id pub-id-type="pmid">35034173</pub-id></mixed-citation>
    </ref>
    <ref id="ref63">
      <label>63.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jumper</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Evans</surname>  <given-names>R</given-names></string-name>, <string-name><surname>Pritzel</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>. <source>Nature</source>  <year>2021</year>;<volume>596</volume>:<fpage>583</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">34265844</pub-id></mixed-citation>
    </ref>
    <ref id="ref64">
      <label>64.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><prefix>van</prefix>  <surname>Kempen</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Kim</surname>  <given-names>SS</given-names></string-name>, <string-name><surname>Tumescheit</surname>  <given-names>C</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Fast and accurate protein structure search with Foldseek</article-title>. <source>Nat Biotechnol</source>  <year>2023</year>; 1–4. <ext-link xlink:href="https://www.nature.com/articles/s41587-023-01773-0#citeas" ext-link-type="uri">https://www.nature.com/articles/s41587-023-01773-0#citeas</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Brief Bioinform</journal-id>
    <journal-id journal-id-type="iso-abbrev">Brief Bioinform</journal-id>
    <journal-id journal-id-type="publisher-id">bib</journal-id>
    <journal-title-group>
      <journal-title>Briefings in Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1467-5463</issn>
    <issn pub-type="epub">1477-4054</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10516361</article-id>
    <article-id pub-id-type="pmid">37594311</article-id>
    <article-id pub-id-type="doi">10.1093/bib/bbad288</article-id>
    <article-id pub-id-type="publisher-id">bbad288</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Problem Solving Protocol</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>TMKit: a Python interface for computational analysis of transmembrane proteins</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1274-5080</contrib-id>
        <name>
          <surname>Sun</surname>
          <given-names>Jianfeng</given-names>
        </name>
        <!--jianfeng.sun@ndorms.ox.ac.uk-->
        <aff>Nuffield Department of Orthopedics, Rheumatology, and Musculoskeletal Sciences, Botnar Research Centre, <institution>University of Oxford</institution>, <addr-line>Headington, Oxford OX3 7LD</addr-line>, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kulandaisamy</surname>
          <given-names>Arulsamy</given-names>
        </name>
        <!--kulandai28@gmail.com-->
        <aff>Department of Biotechnology, Bhupat and Jyoti Mehta School of BioSciences, <institution>Indian Institute of Technology Madras</institution>, <addr-line>Chennai 600036, Tamil Nadu</addr-line>, <country country="IN">India</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6757-6018</contrib-id>
        <name>
          <surname>Ru</surname>
          <given-names>Jinlong</given-names>
        </name>
        <!--jinlong.ru@tum.de-->
        <aff>Chair of Prevention of Microbial Diseases, School of Life Sciences Weihenstephan, <institution>Technical University of Munich</institution>, <addr-line>85354 Freising</addr-line>, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1776-4096</contrib-id>
        <name>
          <surname>Gromiha</surname>
          <given-names>M Michael</given-names>
        </name>
        <!--gromiha@iitm.ac.in-->
        <xref rid="cor1" ref-type="corresp"/>
        <aff>Department of Biotechnology, Bhupat and Jyoti Mehta School of BioSciences, <institution>Indian Institute of Technology Madras</institution>, <addr-line>Chennai 600036, Tamil Nadu</addr-line>, <country country="IN">India</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5288-3077</contrib-id>
        <name>
          <surname>Cribbs</surname>
          <given-names>Adam P</given-names>
        </name>
        <!--adam.cribbs@ndorms.ox.ac.uk-->
        <xref rid="cor1" ref-type="corresp"/>
        <aff>Nuffield Department of Orthopedics, Rheumatology, and Musculoskeletal Sciences, Botnar Research Centre, <institution>University of Oxford</institution>, <addr-line>Headington, Oxford OX3 7LD</addr-line>, <country country="GB">UK</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="cor1">Corresponding authors: Adam P. Cribbs, Botnar Research Centre, Nuffield Department of Orthopedics, Rheumatology, and Musculoskeletal Sciences, University of Oxford, Headington, Oxford OX3 7LD, UK. Tel: +44 1865 227374; E-mail: <email>adam.cribbs@ndorms.ox.ac.uk</email>; M. Michael Gromiha, Department of Biotechnology, Bhupat and Jyoti Mehta School of BioSciences, Indian Institute of Technology Madras, Chennai, Tamil Nadu 600036, India. Tel: +91 4422574138; E-mail: <email>gromiha@iitm.ac.in</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>9</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-08-17">
      <day>17</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <issue>5</issue>
    <elocation-id>bbad288</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="rev-recd">
        <day>7</day>
        <month>7</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>7</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="bbad288.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Transmembrane proteins are receptors, enzymes, transporters and ion channels that are instrumental in regulating a variety of cellular activities, such as signal transduction and cell communication. Despite tremendous progress in computational capacities to support protein research, there is still a significant gap in the availability of specialized computational analysis toolkits for transmembrane protein research. Here, we introduce TMKit, an open-source Python programming interface that is modular, scalable and specifically designed for processing transmembrane protein data. TMKit is a one-stop computational analysis tool for transmembrane proteins, enabling users to perform database wrangling, engineer features at the mutational, domain and topological levels, and visualize protein–protein interaction interfaces. In addition, TMKit includes seqNetRR, a high-performance computing library that allows customized construction of a large number of residue connections. This library is particularly well suited for assigning correlation matrix-based features at a fast speed. TMKit should serve as a useful tool for researchers in assisting the study of transmembrane protein sequences and structures. TMKit is publicly available through <ext-link xlink:href="https://github.com/2003100127/tmkit" ext-link-type="uri">https://github.com/2003100127/tmkit</ext-link> and <ext-link xlink:href="https://tmkit-guide.herokuapp.com/doc/overview" ext-link-type="uri">https://tmkit-guide.herokuapp.com/doc/overview</ext-link>.</p>
    </abstract>
    <kwd-group>
      <kwd>bioinformatics</kwd>
      <kwd>transmembrane proteins</kwd>
      <kwd>sequence analysis</kwd>
      <kwd>structural biology</kwd>
      <kwd>protein interaction interfaces</kwd>
      <kwd>feature extraction</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Medical Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000265</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>MR/V010182/1</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="sec3">
    <title>INTRODUCTION</title>
    <p>Transmembrane proteins comprise approximately 20–30% of the human genome [<xref rid="ref1" ref-type="bibr">1</xref>] and are therapeutic targets of more than 50% commercially released drugs [<xref rid="ref2" ref-type="bibr">2</xref>]. Despite the biological significance, functional studies of transmembrane proteins have been hampered by an acute shortage of their experimentally determined structures that make up only 2–3% of all of the structures deposited in the protein data bank (PDB) database [<xref rid="ref3" ref-type="bibr">3</xref>, <xref rid="ref4" ref-type="bibr">4</xref>]. This scarcity of structural data underscores the need for computational approaches to assist in the analysis and understanding of functions of these critical biomolecules. A handful of databases specific to transmembrane proteins have been generated to make high-quality 3D structures available for computational analysis [<xref rid="ref5" ref-type="bibr">5–8</xref>]. The protein data bank of transmembrane proteins (PDBTM) stands out as a trustworthy data source that comprehensively collects membrane plane-placed and error-corrected transmembrane protein assemblies [<xref rid="ref6" ref-type="bibr">6</xref>, <xref rid="ref9" ref-type="bibr">9</xref>], each being subject to the determination of nine possible topologies using a structure-based algorithm TMDET [<xref rid="ref10" ref-type="bibr">10</xref>]. Although PDBTM contains rich structural and topological information, there is currently no publicly available computational tool for large-scale topological annotation, file retrieval and format conversion. This limitation hinders the widespread use of PDBTM in the research community.</p>
    <p>Most existing computational tools focus only on addressing object-specific issues, such as database handling [<xref rid="ref11" ref-type="bibr">11–13</xref>], feature generation [<xref rid="ref14" ref-type="bibr">14</xref>, <xref rid="ref15" ref-type="bibr">15</xref>], and visualization [<xref rid="ref16" ref-type="bibr">16</xref>, <xref rid="ref17" ref-type="bibr">17</xref>]. There is a shortage of open-source software for one-stop computational analysis, which covers the modules above. In addition, it is known that the oligomerization of transmembrane proteins for maintaining and regulating many cellular activities, such as signal transduction and immune responses, necessitates a large number of protein–protein interactions (PPIs) occurring on cell membranes [<xref rid="ref18" ref-type="bibr">18</xref>]. However, there is no publicly available tool for visualizing PPI interfaces between them to better support the biological interpretation. In summary, the computational community has been, while filled with toolkits for protein science [<xref rid="ref19" ref-type="bibr">19–22</xref>], devoid of those specialized for transmembrane proteins.</p>
    <p>Here, we present TMKit, a scalable Python toolkit that comprises various function modules for the analysis of transmembrane protein sequences, structures and functions. While many function modules in TMKit are specialized for transmembrane protein-related problems, they can also be applied to other kinds of proteins. One of the standout features of TMKit is its visualization module, which facilitates the biological validation, interpretation and translation of known and predicted PPI interfaces. In addition, TMKit also incorporates seqNetRR, a high-performance computing library that simplifies the construction of residue–residue connections and speeds up feature assignment, enabling faster feature analysis and machine learning modeling. Overall, TMKit is a helpful toolkit for computational studies of transmembrane proteins.</p>
  </sec>
  <sec id="sec4">
    <title>MATERIALS AND METHODS</title>
    <sec id="sec5">
      <title>Functionality of TMKit</title>
      <p>TMKit provides nine function modules to handle several transmembrane protein sequence and structural analysis problems, including <italic toggle="yes">visualization</italic>, <italic toggle="yes">sequence, quality control</italic>, <italic toggle="yes">topology</italic>, <italic toggle="yes">mapping</italic>, <italic toggle="yes">annotation</italic>, <italic toggle="yes">connectivity</italic>, <italic toggle="yes">edge extraction</italic> and <italic toggle="yes">feature</italic> (<xref rid="f1" ref-type="fig">Figure 1</xref>).</p>
      <fig position="float" id="f1">
        <label>Figure 1</label>
        <caption>
          <p>Functionality of TMKit. <italic toggle="yes">Visualization</italic>, <italic toggle="yes">Mapping</italic>, <italic toggle="yes">Annotation</italic>, <italic toggle="yes">Connectivity</italic>, and <italic toggle="yes">Edge extraction</italic>modules in TMKit are considered unique compared to existing tools.</p>
        </caption>
        <graphic xlink:href="bbad288f1" position="float"/>
      </fig>
      <sec id="sec6">
        <title>Visualization</title>
        <p>Identification of PPI interfaces is critical to understand the biological processes governed by proteins. Direct visualization of the PPI interfaces on 3D structures can facilitate their localization at the atomic coordinate level. However, until now, there has been a lack of publicly available programs that allow the one-stop visualization of structural details of PPIs. TMKit is an open-source toolkit that enables access to the PPI interfaces by taking as input the structure of a protein of interest (POI) and a list of probabilities of residue sites to be involved in interactions. The program can automatically generate the label- or propensity-based PPI interfaces in between a POI and its interacting proteins (or its larger complex), which can be visualized in PyMOL [<xref rid="ref23" ref-type="bibr">23</xref>]. For instance, we show in <xref rid="f2" ref-type="fig">Figure 2</xref> the PPI interfaces of chain E of the human calcitonin gene-related peptide (CGRP) with interacting chains P and R [<xref rid="ref24" ref-type="bibr">24</xref>]. Given the pharmaceutical importance of membrane proteins, we additionally provide a one-stop service for visualization of close-ups of protein–drug binding pockets in a few ways, such as using the mesh or sphere to show the binding landscapes.</p>
        <fig position="float" id="f2">
          <label>Figure 2</label>
          <caption>
            <p>Visualization of transmembrane PPI interfaces, protein–drug binding pockets and coloring representations in TMKit.</p>
          </caption>
          <graphic xlink:href="bbad288f2" position="float"/>
        </fig>
      </sec>
      <sec id="sec7">
        <title>Sequence</title>
        <p>The sequence pre-processing module is a fundamental component of TMKit, designed to handle sequence reading in diverse formats, sequence retrieval from various sources and multiple sequence alignment (MSA) generation. It can retrieve sequences from PDB and PDBTM, parse sequences from FASTA, structure and XML files, and stitch discontinuous residues together from PDB structures (see [<xref rid="ref25" ref-type="bibr">25</xref>] for residues in unstructured regions). TMKit contains Python wrappers of the HHblits [<xref rid="ref26" ref-type="bibr">26</xref>] and HAMMER [<xref rid="ref27" ref-type="bibr">27</xref>] commands for further generating MSAs of a protein sequence, which can then be filtered according to a certain identity threshold between homologs or converted to another version (e.g. Stockholm format). TMKit allows the extraction of single residues or residue pairs from a protein sequence in a given sequence separation <italic toggle="yes">k</italic>. A sliding window of any size applied to each of the single residues or residue pairs can further generate a list of neighbor-surrounded residues or residue pairs in sequence context.</p>
      </sec>
      <sec id="sec8">
        <title>Quality control</title>
        <p>The <italic toggle="yes">quality control</italic> module generates a set of protein sequences with sufficient quality, ensuring that they meet necessary criteria for conducting rigorous statistical analysis or prediction tasks. This module evaluates various conditions, including the experimentation methods used, resolution, subclass and sequence length, to qualify proteins in bulk. The uniqueness of this process is the incorporation of topology information derived from structures or predicted by programs, such as the number or the length of transmembrane α-helices. This information is critical for distinguishing between bitopic or other types of polytopic proteins, which is useful for downstream analysis.</p>
      </sec>
      <sec id="sec9">
        <title>Topology</title>
        <p>Transmembrane protein topologies are vital to their structures and functions [<xref rid="ref28" ref-type="bibr">28</xref>, <xref rid="ref29" ref-type="bibr">29</xref>]. For example, the α-helical-buddle embedded within membranes is highly conserved as a structural basis for the formation of a large membrane protein complex [<xref rid="ref30" ref-type="bibr">30</xref>] and the extramembranous regions of G protein-coupled receptors (GPCRs) are functionally important as a checkpoint to interact with external molecules [<xref rid="ref31" ref-type="bibr">31</xref>]. TMKit incorporates a comprehensive set of algorithms dedicated to determining the protein topology. As of now, the 3D atomic coordinates of membrane proteins in the RCSB PDB are primarily obtained from crystallized structures in the absence of membrane lipid bilayers. The localization of the membrane lipid bilayers can be deduced by the TMDET algorithm and used to indicate the positions of transmembrane segments spanning transmembrane regions [<xref rid="ref32" ref-type="bibr">32</xref>]. The positions are stored in XML format through the TMDET (<ext-link xlink:href="http://tmdet.enzim.hu/" ext-link-type="uri">http://tmdet.enzim.hu/</ext-link>) [<xref rid="ref10" ref-type="bibr">10</xref>] or PDBTM server (<ext-link xlink:href="http://pdbtm.enzim.hu/" ext-link-type="uri">http://pdbtm.enzim.hu/</ext-link>) [<xref rid="ref6" ref-type="bibr">6</xref>]. However, the positions do not reveal structurally deduced cytoplasmic or extracellular regions. To make this information available, TMKit implements a method, which was first proposed in the MBPred work [<xref rid="ref33" ref-type="bibr">33</xref>] and applied later in the DeepTMInter work [<xref rid="ref34" ref-type="bibr">34</xref>], to redistribute each TMDET’s non-TM topology with either cytoplasmic or extracellular label by stacking up against topologies predicted by an external method such as TMHMM. Also, TMKit can be used to obtain more detailed non-TM topologies, that is, side 1, side 2, strand, coil, inside, loop and interfacial. Besides the structure-derived topologies, TMKit also supplies predicted topologies by embedding TMHMM and PolyPhobius running on the command line interface (CLI) and within Python.</p>
      </sec>
      <sec id="sec10">
        <title>Mapping</title>
        <p>Identifier mapping between structural and sequence data (e.g. PDB residue IDs and FASTA residue IDs) is an important technical premise to guarantee the correct interpretation of biological findings. Often, residues in FASTA format are imperfectly aligned with those from the PDB structure, as experimentally resolved residues in its crystal structure can become discontinuous due to various challenges associated with the crystallization process [<xref rid="ref25" ref-type="bibr">25</xref>]. The mapping module plays a crucial role in scenarios where it is necessary to convert from PDB residue IDs of topologies deduced by TMDET to FASTA residue IDs for sequence analysis, or to convert sequence-based residue IDs of predicted topologies to PDB residue IDs.</p>
        <p>In addition, protein structures are rendered as the asymmetric units (ASUs) in their PDB files, which represent the smallest but most fundamental units that can be reassembled to the quaternary structures (i.e. biological assembly in oligomer form) through symmetric operations such as rotations and translations based on BIOMT records [<xref rid="ref35" ref-type="bibr">35</xref>, <xref rid="ref36" ref-type="bibr">36</xref>]. An example is the RCSB PDB structure of a transferase for archaeal membrane lipid biosynthesis (PDB code: 5GUF), which consists of two chains biologically but only one chain stored with its coordinates [<xref rid="ref37" ref-type="bibr">37</xref>]. In addition to applying the operations for obtaining the oligomer structure of a protein from its crystalline state, the information about the BIOMT annotations can, to cap it all, be error-prone due to the fact that these can be either defined by researchers or predicted by software (e.g. the PSQ server) [<xref rid="ref38" ref-type="bibr">38</xref>, <xref rid="ref39" ref-type="bibr">39</xref>]. The accession IDs to the non-ASUs are often not documented in PDB or UniProt, which causes a problem to perform analysis through the information wherever needed. In TMKit, we therefore offer the collation of PDB chains that are not the ASU since it is of importance to convert it back in many application scenarios, where, for example, the accurate UniProt accession code is required to trawl through its PPI networks from PPI databases. This module is implemented by comparing RCSB PDB structures and TMDET-generated structures, given that the TMDET algorithm allows both biological unit recovery and error correction during the course of the membrane plane determination. Furthermore, TMKit allows mapping from PDB IDs to UniProt accession codes.</p>
      </sec>
      <sec id="sec11">
        <title>Annotation</title>
        <p>Amino acid residues of transmembrane proteins to be involved in mutations and function domains can be annotated through the MutHTP [<xref rid="ref40" ref-type="bibr">40</xref>], Pred-MutHTP [<xref rid="ref41" ref-type="bibr">41</xref>] and Cath [<xref rid="ref42" ref-type="bibr">42</xref>] databases.</p>
      </sec>
      <sec id="sec12">
        <title>Connectivity</title>
        <p>Studying connections of a protein to others in a PPI network is of crucial importance to understand its biological role. There are a few well-established databases such as BioGRID [<xref rid="ref43" ref-type="bibr">43</xref>], IntAct [<xref rid="ref44" ref-type="bibr">44</xref>] and HuRI [<xref rid="ref45" ref-type="bibr">45</xref>], which are enriched for PPIs of soluble proteins as well as transmembrane proteins of note. For example, interactions that transmembrane proteins are involved in account for about 40% of the human interactome map [<xref rid="ref34" ref-type="bibr">34</xref>]. However, managing various sources and formats is posing a difficulty to unravel the connectivity of proteins. To address this and make it easier to use, TMKit first mines all unique interaction partners of a given list of TM proteins from individual PPI databases and then obtains the union of them by removing redundancy.</p>
      </sec>
      <sec id="sec13">
        <title>Edge extraction</title>
        <p>Quantification and characterization of connections between residues are thought to be key to deciphering and understanding the mechanisms behind a biological network. However, handling a large number of connections is often computationally intractable, primarily due to time complexity involved. Progress in residue contact prediction and interaction site identification has shown that the utilization of neighboring information of residues or residue pairs can result in an improvement in prediction accuracy. We provide a high-performance computing library for extracting connections between residues by constructing bipartite and unipartite graphs (where residue connections are treated as edges) and assigning features in linear time with respect to the number of residues used. We particularly detail this in section <italic toggle="yes">seqNetRR for extracting residue–residue connections</italic>.</p>
      </sec>
      <sec id="sec14">
        <title>Feature</title>
        <p>A set of transmembrane protein-specific and general-purpose features is provided by TMKit in support of machine learning modeling. We first incorporate LIPS [<xref rid="ref46" ref-type="bibr">46</xref>], a method for identifying transmembrane helical interfaces with lipids, to generate the lipophilicity and entropy scores of residues located in seven helical faces defined upon heptad repeats (<xref rid="f1" ref-type="fig">Figure 1</xref>). By establishing a scoring function that combines information about residue lipophilicity and entropy, this program can compute the LIPOS score (i.e. lipophilicity) to evaluate the propensity of a face being exposed to lipids. The score has been used as features or criteria in <italic toggle="yes">ab initio</italic> structural modeling [<xref rid="ref47" ref-type="bibr">47</xref>, <xref rid="ref48" ref-type="bibr">48</xref>] and interaction site identification [<xref rid="ref33" ref-type="bibr">33</xref>]. Moreover, considering the core role of coevolutionary features in structural biology, we then place a module in TMKit to gain access to the fast assignment of coevolutionary features to pairwise or site-wise residues. Besides, transmembrane protein topologies can also be considered as features and included in TMKit.</p>
      </sec>
    </sec>
    <sec id="sec15">
      <title>seqNetRR for extracting residue–residue connections</title>
      <p>We additionally developed seqNetRR, a high-performance computing library for constructing residue connections in sequence and contact-map context and performing coevolutionary feature assignment in linear time. This module is aimed at facilitating feature engineering, scheme design and organization for machine learning modeling of interactions/contacts between residues. Below, we demonstrate the conceptualization, construction and implementation of seqNetRR.</p>
      <sec id="sec16">
        <title>Definition of local and global residue–residue connections</title>
        <p>Connections between a residue of interest and its serially ordered neighboring residues are referred to as local residue–residue connections (LocRRCs for short). As seen in <xref rid="f3" ref-type="fig">Figure 3A</xref>, in sequence context, LocRRCs are connections formed by residue 1 or 2 and other residues that serially flank it. Likewise, global residue–residue connections (GlobRRCs) are those formed by one residue of a residue pair of interest (including its neighbors, see section <italic toggle="yes">Formulation of LocRRCs and GlobRRCs</italic> for details) and the serially ordered neighboring residues of the other one residue of the residue pair (including itself, e.g. connections between residue 1 and the neighboring residues of residue 2). It is commonly seen in structural biology that coevolutionary features assigned to GlobRRCs are used to amplify the prediction performance of long-range residue contacts [<xref rid="ref49" ref-type="bibr">49</xref>, <xref rid="ref50" ref-type="bibr">50</xref>]. <xref rid="f3" ref-type="fig">Figure 3B</xref> shows that from a predicted contact map (i.e. statistically, a type of correlation matrix), residue connections in a square-shaped patch centering a pair of residues of interest are extracted first and then assigned features for a machine learning model to learn the characterization of the residue pair, which has been shown effective. The patch-like GlobRRCs reflect how strongly the two central residues connect their surrounding residues in contact-map context.</p>
        <fig position="float" id="f3">
          <label>Figure 3</label>
          <caption>
            <p>Schematic view of local and global residue–residue connections to be deemed as edges of graphs. (<bold>A</bold>) A transmembrane protein is shown in structure context within which a pair of helices are faced with each other and interact through interfacial residues. Residue 1 and residue 2 are two central residues, not adjacent in sequence but adjacent spatially. Other residues are their neighboring residues. (<bold>B</bold>) Different kinds of graphs with edges are taken as constraints to form connections in sequence (unipartite graphs) or contact-map (bipartite graphs) context. The cumulative graph shows the prioritized connections with the highest correlation scores between a residue of interest and others.</p>
          </caption>
          <graphic xlink:href="bbad288f3" position="float"/>
        </fig>
      </sec>
      <sec id="sec17">
        <title>Formulation of LocRRCs and GlobRRCs</title>
        <p>To describe connections between residues, we define a graph <inline-formula><tex-math notation="LaTeX" id="ineq01">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$G=\left(V,E\right)$\end{document}</tex-math></inline-formula> where <inline-formula><tex-math notation="LaTeX" id="ineq02">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$V$\end{document}</tex-math></inline-formula> is a set of vertices <inline-formula><tex-math notation="LaTeX" id="ineq03">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left\{{v}_1,{v}_2,\dots, {v}_L\right\}$\end{document}</tex-math></inline-formula> representing residues in a protein sequence of length <inline-formula><tex-math notation="LaTeX" id="ineq04">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$L$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq05">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$E$\end{document}</tex-math></inline-formula> is a set of edges <inline-formula><tex-math notation="LaTeX" id="ineq06">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left\{{e}_1,{e}_2,\dots, {e}_m\right\}$\end{document}</tex-math></inline-formula> (<inline-formula><tex-math notation="LaTeX" id="ineq07">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$E\subset V\times V$\end{document}</tex-math></inline-formula>) representing connections between residues. Residue <inline-formula><tex-math notation="LaTeX" id="ineq08">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i$\end{document}</tex-math></inline-formula> has a neighbor <inline-formula><tex-math notation="LaTeX" id="ineq09">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_j$\end{document}</tex-math></inline-formula> if <inline-formula><tex-math notation="LaTeX" id="ineq10">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_j$\end{document}</tex-math></inline-formula> is a serially ordered residue surrounding <inline-formula><tex-math notation="LaTeX" id="ineq11">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i$\end{document}</tex-math></inline-formula> in sequence context. As seen in <xref rid="f4" ref-type="fig">Figure 4A</xref>, we place two equidistant sliding windows with the size <inline-formula><tex-math notation="LaTeX" id="ineq12">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$w$\end{document}</tex-math></inline-formula> to a given residue pair of interest <inline-formula><tex-math notation="LaTeX" id="ineq13">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq14">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^Q$\end{document}</tex-math></inline-formula>, respectively, to form two regions <inline-formula><tex-math notation="LaTeX" id="ineq15">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq16">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula>. Any residue <inline-formula><tex-math notation="LaTeX" id="ineq17">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i^P$\end{document}</tex-math></inline-formula> (<inline-formula><tex-math notation="LaTeX" id="ineq18">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i=1,2,\dots, w$\end{document}</tex-math></inline-formula>) from region <inline-formula><tex-math notation="LaTeX" id="ineq19">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> and any residue <inline-formula><tex-math notation="LaTeX" id="ineq20">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i^Q$\end{document}</tex-math></inline-formula> (<inline-formula><tex-math notation="LaTeX" id="ineq21">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i=1,2,\dots, w$\end{document}</tex-math></inline-formula>) from region <inline-formula><tex-math notation="LaTeX" id="ineq22">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula> are elements of residue sets <inline-formula><tex-math notation="LaTeX" id="ineq23">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P\left({V}_P\subset V\right)$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq24">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q\left({V}_Q\subset V\right)$\end{document}</tex-math></inline-formula>, respectively. Residues in blue in region <inline-formula><tex-math notation="LaTeX" id="ineq25">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> are denoted as neighboring residues of <inline-formula><tex-math notation="LaTeX" id="ineq26">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^P$\end{document}</tex-math></inline-formula> in red, so are those of <inline-formula><tex-math notation="LaTeX" id="ineq27">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_c^Q$\end{document}</tex-math></inline-formula> in red in region <inline-formula><tex-math notation="LaTeX" id="ineq28">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula>. A LocRRC is formed by any two elements from set <inline-formula><tex-math notation="LaTeX" id="ineq29">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P$\end{document}</tex-math></inline-formula> or set <inline-formula><tex-math notation="LaTeX" id="ineq30">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q$\end{document}</tex-math></inline-formula> and a GlobRRC is formed by an element from set <inline-formula><tex-math notation="LaTeX" id="ineq31">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P$\end{document}</tex-math></inline-formula> and an element from set <inline-formula><tex-math notation="LaTeX" id="ineq32">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q$\end{document}</tex-math></inline-formula>. All LocRRCs in regions <inline-formula><tex-math notation="LaTeX" id="ineq33">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq34">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$Q$\end{document}</tex-math></inline-formula> are binary relations <inline-formula><tex-math notation="LaTeX" id="ineq35">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${R}_{V_P}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq36">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${R}_{V_Q}$\end{document}</tex-math></inline-formula>, respectively, given by the <italic toggle="yes">Cartesian products</italic>  <inline-formula><tex-math notation="LaTeX" id="ineq37">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P\times{V}_P$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq38">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q\times{V}_Q$\end{document}</tex-math></inline-formula> as follows:</p>
        <disp-formula id="deqn01">
          <tex-math notation="LaTeX" id="DmEquation1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$${R}_{V_P}=\left\{&lt;{v}_i^P,{v}_j^P&gt;|{v}_i^P,{v}_j^P\in{V}_P\wedge{C}_{\mathrm{uni}}\right\}$$\end{document}</tex-math>
        </disp-formula>
        <disp-formula id="deqn02">
          <tex-math notation="LaTeX" id="DmEquation2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$${R}_{V_Q}=\left\{&lt;{v}_i^Q,{v}_j^Q&gt;|{v}_i^Q,{v}_j^Q\in{V}_Q\wedge{C}_{\mathrm{uni}}\right\}$$\end{document}</tex-math>
        </disp-formula>
        <p>where <inline-formula><tex-math notation="LaTeX" id="ineq39">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i,j=1,2,\dots, w$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq40">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{uni}}$\end{document}</tex-math></inline-formula> stands for a group of certain edges restricted by different kinds of unipartite graphs introduced below.</p>
        <fig position="float" id="f4">
          <label>Figure 4</label>
          <caption>
            <p>Illustration of construction of GlobRRCs/LocRRCs and feature assignment in seqNetRR of TMKit. (<bold>A</bold>) Extraction of window-placed connections between residues from a protein sequence of length <inline-formula><tex-math notation="LaTeX" id="ineq41">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$L$\end{document}</tex-math></inline-formula> (actually can be applied for DNA or RNA sequences). (<bold>B</bold>) Computational scheme of feature assignment. After applying a window of size <inline-formula><tex-math notation="LaTeX" id="ineq42">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$w$\end{document}</tex-math></inline-formula>, a 3D Python data object is formed. The number of connections of residue pairs of interest is <inline-formula><tex-math notation="LaTeX" id="ineq43">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\frac{\left(L\times \left(L-1\right)\right)}{2}$\end{document}</tex-math></inline-formula>. Restricted by a bipartite graph with <inline-formula><tex-math notation="LaTeX" id="ineq44">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$t$\end{document}</tex-math></inline-formula> edges, the number of window-placed GlobRRCs is <inline-formula><tex-math notation="LaTeX" id="ineq45">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left(2\times w+1\right)\times t$\end{document}</tex-math></inline-formula>. Restricted by a unipartite graph, the number of window-placed LocRRCs is <inline-formula><tex-math notation="LaTeX" id="ineq46">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left(2\times w\right)\times \left(2\times w+1\right)$\end{document}</tex-math></inline-formula>. The feature assignment is performed by looking up residue positions per connection in a 2D hash table to take the corresponding values.</p>
          </caption>
          <graphic xlink:href="bbad288f4" position="float"/>
        </fig>
        <p>Similarly, all GlobRRCs are described as binary relations <inline-formula><tex-math notation="LaTeX" id="ineq47">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${R}_{V_{PQ}}$\end{document}</tex-math></inline-formula>, given by the <italic toggle="yes">Cartesian products</italic>  <inline-formula><tex-math notation="LaTeX" id="ineq48">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P\times{V}_Q$\end{document}</tex-math></inline-formula>, such that</p>
        <disp-formula id="deqn03">
          <tex-math notation="LaTeX" id="DmEquation3">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$${R}_{V_{PQ}}=\left\{&lt;{v}_i^P,{v}_j^Q&gt;|{v}_i^P\in{V}_P\wedge{v}_j^Q\in{V}_Q\wedge{C}_{\mathrm{bi}}\right\}$$\end{document}</tex-math>
        </disp-formula>
        <p>where <inline-formula><tex-math notation="LaTeX" id="ineq49">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$i,j=1,2,\dots, w$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq50">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{bi}}$\end{document}</tex-math></inline-formula> stands for a group of certain edges restricted by different kinds of bipartite graphs introduced below.</p>
      </sec>
      <sec id="sec18">
        <title>Unipartite and bipartite graphs</title>
        <p>For LocRRCs, a set of edges <inline-formula><tex-math notation="LaTeX" id="ineq51">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${e}_1{e}_2\dots{e}_{t-1}{e}_t$\end{document}</tex-math></inline-formula> between a residue of interest and its neighboring residues is conceived as constraints to collectively characterize the sequence surroundings of this residue; for GlobRRCs, the set of edges is used to characterize the surroundings of a residue pair in contact-map context. Thus, the main role of making different bipartite and unipartite graphs is to provide informative edges to better characterize residues or residue pairs of interest. Several bipartite and unipartite graphs are introduced below as constraints <inline-formula><tex-math notation="LaTeX" id="ineq52">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{uni}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq53">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{bi}$\end{document}</tex-math></inline-formula> to form different kinds of LocRRCs and GlobRRCs.</p>
        <sec id="sec19">
          <title>Unipartite graphs</title>
          <p>The two unipartite graphs <inline-formula><tex-math notation="LaTeX" id="ineq54">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left({V}_P+{V}_P,{E}_{\mathrm{uni}\_\mathrm{P}}\right)$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq55">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left({V}_Q+{V}_Q,{E}_{\mathrm{uni}\_\mathrm{Q}}\right)$\end{document}</tex-math></inline-formula> for which edges between two vertices from the same set are only available [<xref rid="ref51" ref-type="bibr">51</xref>] are used to demarcate LocRRCs. As shown in <xref rid="f3" ref-type="fig">Figure 3B</xref>, we present an example of a unipartite graph with five vertices to be fully connected with each other. This is currently the unipartite graph scheme (i.e. <inline-formula><tex-math notation="LaTeX" id="ineq56">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{uni}}$\end{document}</tex-math></inline-formula>) to extract all LocRRCs for each central residue in seqNetRR of TMKit. Users can also impose other kinds of <inline-formula><tex-math notation="LaTeX" id="ineq57">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{\mathrm{uni}}$\end{document}</tex-math></inline-formula> on the unipartite graph by specifying certain two coordinates as an edge between two residues, e.g. (0, 2) in region <inline-formula><tex-math notation="LaTeX" id="ineq58">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$P$\end{document}</tex-math></inline-formula> shown in <xref rid="f4" ref-type="fig">Figure 4A</xref>.</p>
        </sec>
        <sec id="sec20">
          <title>Bipartite graphs</title>
          <p>A bipartite graph <inline-formula><tex-math notation="LaTeX" id="ineq59">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$G$\end{document}</tex-math></inline-formula> is defined as <inline-formula><tex-math notation="LaTeX" id="ineq60">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left({V}_P+{V}_Q,{E}_{\mathrm{bi}}\right)$\end{document}</tex-math></inline-formula> [<xref rid="ref52" ref-type="bibr">52</xref>], where there is no adjacency (i.e. connections) between nodes in either residue set <inline-formula><tex-math notation="LaTeX" id="ineq61">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_P$\end{document}</tex-math></inline-formula> or <inline-formula><tex-math notation="LaTeX" id="ineq62">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${V}_Q$\end{document}</tex-math></inline-formula>. We implemented three types of bipartite graphs, that is, <italic toggle="yes">patch</italic>, <italic toggle="yes">memconp</italic> and <italic toggle="yes">cross</italic> (<xref rid="f3" ref-type="fig">Figure 3B</xref>). The <italic toggle="yes">patch</italic> graph consists of connections in a square patch centering a residue pair [<xref rid="ref50" ref-type="bibr">50</xref>] and the <italic toggle="yes">memconp</italic> graph consists of possible connections between residues in a pair of helices arranged in a face-to-face manner, which were used in the DeepHelicon and MemConP studies [<xref rid="ref50" ref-type="bibr">50</xref>, <xref rid="ref53" ref-type="bibr">53</xref>], rendering constraints <inline-formula><tex-math notation="LaTeX" id="ineq63">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${C}_{bi}$\end{document}</tex-math></inline-formula> as <inline-formula><tex-math notation="LaTeX" id="ineq64">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${v}_i^P\ne{v}_j^Q$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math notation="LaTeX" id="ineq65">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$\left(i+a,j+b\right)\wedge \left(a,b\right)\in$\end{document}</tex-math></inline-formula> {(0,0), (0,1), (0,−1), (0,3), (0,−3), (0,4), (0,−4), (1,0), (−1,0), (3,0), (−3,0), (3,4), (−3,4), (3,−4), (−3,−4), (4,0), (−4,0), (4,3), (−4,3), (4,−3), (−4,−3), (4,4), (−4,4), (4,−4), (−4,−4)}, respectively. Another showcase is a <italic toggle="yes">cross</italic>-connected bipartite graph in which a node of interest in an edge set is connected to its counterparts in another edge set.</p>
        </sec>
      </sec>
      <sec id="sec21">
        <title>Prioritized connections with the highest correlation coefficients</title>
        <p>In addition, seqNetRR implements a computing scheme of the cumulative correlation coefficient (cumuCC) for every single residue by summing the correlation coefficients of threshold-based co-evolutionarily important connections with other residues (<xref rid="f3" ref-type="fig">Figure 3B</xref>). For example, in evolutionary biology, the sum of the <inline-formula><tex-math notation="LaTeX" id="ineq66">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$k$\end{document}</tex-math></inline-formula> highest evolutionary coupling scores of a residue can help evaluate the extent to which this residue bears evolutionary constraints (a type of correlation coefficient, also called evolutionary constraint ratio) [<xref rid="ref54" ref-type="bibr">54</xref>]. This has been used as an important feature to gauge whether a residue is an interaction site in transmembrane proteins (see MBPred and DeepTMInter in [<xref rid="ref33" ref-type="bibr">33</xref>, <xref rid="ref34" ref-type="bibr">34</xref>]). In a word, the cumuCC is given by</p>
        <disp-formula id="deqn04">
          <tex-math notation="LaTeX" id="DmEquation4">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$$\mathrm{cumuCC}=\frac{1}{c}\times{\mathrm{CC}}_R$$\end{document}</tex-math>
        </disp-formula>
        <p>where <inline-formula><tex-math notation="LaTeX" id="ineq67">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
${\mathrm{CC}}_R$\end{document}</tex-math></inline-formula> stands for the sum of the <inline-formula><tex-math notation="LaTeX" id="ineq68">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$k$\end{document}</tex-math></inline-formula> highest correlation coefficients of residue connections involving the residue <inline-formula><tex-math notation="LaTeX" id="ineq69">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$R$\end{document}</tex-math></inline-formula> according to those ranked correlation coefficients in descending order and <inline-formula><tex-math notation="LaTeX" id="ineq70">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$c$\end{document}</tex-math></inline-formula> is the sum of the correlation matrix (e.g. generated by FreeContact [<xref rid="ref55" ref-type="bibr">55</xref>]) over the number of residue pairs.</p>
      </sec>
      <sec id="sec22">
        <title>Implementation of feature assignment to LocRRCs and GlobRRCs</title>
        <p>Efficiently assigning features to a substantial number of residue pairs is a crucial preliminary step before undertaking more sophisticated computational modeling. For a given protein sequence, a list of residues/residue pairs of interest are extracted first to be stored technically as the data object in green (placed with a window, if applicable, <xref rid="f4" ref-type="fig">Figure 4B</xref>) and their LocRRCs or GlobRRCs are constructed then to be stored as the data object in blue. It may be more plausible in practice that a 3D Python data object that entirely stores LocRRCs or GlobRRCs is used finally for feature assignment, with the first dimension representing the number of LocRRCs/GlobRRCs per residue/residue pair of interest (<italic toggle="yes">x</italic>-axis), the second dimension representing the total number of residues/residue pairs of interest (<italic toggle="yes">y</italic>-axis) and the last dimension storing the sequence positions of every two residues (<italic toggle="yes">z</italic>-axis). However, this can bring additional computational cost because of the added operation of creating, storing and re-extracting LocRRCs or GlobRRCs. It worsens heavily when large proteins with exponentially increased residue pairs are used. The seqNetRR module of TMKit manages to assign features by directly using the data object in green to bypass the separate generation of the data object in blue. A hash table is built to look up the correlation coefficients (e.g. typically coevolutionary features) from a correlation matrix. We term this method <italic toggle="yes">Hash</italic>. Relatively, the feature assignment method that is involved in the separate generation is called <italic toggle="yes">Hash_indirec.</italic></p>
        <p>Looking up a correlation coefficient in the 2D hash table of a correlation matrix requires the time complexity of <inline-formula><tex-math notation="LaTeX" id="ineq71">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(1)+O(1)$\end{document}</tex-math></inline-formula> (i.e. row + column), namely, <inline-formula><tex-math notation="LaTeX" id="ineq72">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(1)$\end{document}</tex-math></inline-formula>, where no loop operation (i.e. a single correlation coefficient) in the second dimension of the hash table negates further time consumption and meanwhile the load balancing problem [<xref rid="ref56" ref-type="bibr">56</xref>] is ignored. The complexity of time required to look up a residue–residue connection in a window-free 3D data object of LocRRCs or GlobRRCs is <inline-formula><tex-math notation="LaTeX" id="ineq73">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(n)$\end{document}</tex-math></inline-formula>, while it will grow to <inline-formula><tex-math notation="LaTeX" id="ineq74">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^2\right)$\end{document}</tex-math></inline-formula> if a window is placed inside the 3D data object. The time complexity of feature assignment to LocRRCs or GlobRRCs rises to <inline-formula><tex-math notation="LaTeX" id="ineq75">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> but is relevant with the choice of whether or not edge-enriched unipartite or bipartite graphs are used. It should be noticed that the time complexity does not exceed <inline-formula><tex-math notation="LaTeX" id="ineq76">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> and should actually be ranging from <inline-formula><tex-math notation="LaTeX" id="ineq77">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O(n)$\end{document}</tex-math></inline-formula> to <inline-formula><tex-math notation="LaTeX" id="ineq78">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> because a small-size window and a graph with a few edges as constraints can vastly bring down the <inline-formula><tex-math notation="LaTeX" id="ineq79">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^3\right)$\end{document}</tex-math></inline-formula> complexity.</p>
        <fig position="float" id="f5">
          <label>Figure 5</label>
          <caption>
            <p>Computing performance of the construction of GlobRRCs and feature assignment. (<bold>A</bold>) Bar plot of the average running time of the two tasks. (<bold>B</bold>) Boxen plot of the total running time of the two tasks for each protein. (<bold>C</bold>) The total running time of the two tasks versus the molecular length per protein. (<bold>D</bold>) The total running time of the two tasks versus the number of residue pairs per protein. (<bold>E</bold>) Line plot and heatmap of each protein’s running time. <italic toggle="yes">t-test_rel</italic> for the paired <italic toggle="yes">t</italic>-test. To reduce noise, the running time has been grouped for data smoothing (a sliding window of size 5).</p>
          </caption>
          <graphic xlink:href="bbad288f5" position="float"/>
        </fig>
        <p>For comparison purposes, we additionally selected non-hashing look-up operations over a correlation matrix. These include the <italic toggle="yes">pandas.at</italic> method in Pandas [<xref rid="ref57" ref-type="bibr">57</xref>] and the NumPy array indexing method [<xref rid="ref58" ref-type="bibr">58</xref>]. In our case, the <italic toggle="yes">pandas.at</italic> method has been tested better than the <italic toggle="yes">pandas</italic>.<italic toggle="yes">loc</italic>, <italic toggle="yes">pandas</italic>.<italic toggle="yes">ix</italic> and <italic toggle="yes">pandas</italic>.<italic toggle="yes">groupby</italic> methods. Note that if the data object of LocRRCs or GlobRRCs is kept unchanged, introducing any further look-up operations over a correlation matrix can bring an additional cost of time complexity up to <inline-formula><tex-math notation="LaTeX" id="ineq80">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
$O\left({n}^2\right)$\end{document}</tex-math></inline-formula> at worst.</p>
      </sec>
    </sec>
  </sec>
  <sec id="sec23">
    <title>RESULTS</title>
    <sec id="sec24">
      <title>Computing performance of feature assignment</title>
      <p>We first evaluated the running time of different methods on assigning coevolutionary features to GlobRRCs restricted by the bipartite graph of a 5 × 5 patch (<xref rid="f3" ref-type="fig">Figures 3B and</xref><xref rid="f5" ref-type="fig">5</xref>). The information about the benchmark datasets can be found in Supplementary Material, available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>. We omitted the comparison with the NumPy array indexing method due to its extremely time-consuming nature. As shown in <xref rid="f5" ref-type="fig">Figure 5A</xref>, the two methods involving hash tables outperform the Pandas <italic toggle="yes">pandas.at</italic> method in terms of the average running time, particularly with the <italic toggle="yes">Hash</italic> method taking 6.47 s (6.60 s for TRAIN, 7.48 s for PREVIOUS and 5.33 s for TEST). The paired <italic toggle="yes">t</italic>-tests confirm the statistically significant difference between the running time of every two methods (<xref rid="f5" ref-type="fig">Figure 5B</xref>). The statistical test between <italic toggle="yes">Hash_indirec</italic> and <italic toggle="yes">Hash</italic> demonstrates that the time optimization relies on minimizing every individual unnecessary cost. Moreover, the run-time exhibits a strong correlation with the molecular length exponentially and the number of residue pairs linearly, as evidenced by significantly high R-squared values of 0.95 and 1, respectively. For instance, in the case of approximately 120 000 unrepeated residue pairs generated from a protein with a length of 500, our program completes the entire feature assignment in only 16 s.</p>
      <fig position="float" id="f6">
        <label>Figure 6</label>
        <caption>
          <p>TMKit website interface.</p>
        </caption>
        <graphic xlink:href="bbad288f6" position="float"/>
      </fig>
      <p>Next, we examined the feature assignment to LocRRCs restricted by a 5-node unipartite graph (<xref rid="f3" ref-type="fig">Figure 3B</xref> and <xref rid="sup1" ref-type="supplementary-material">Figure S1</xref>, available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>). We included the comparison with the NumPy method because of its acceptable CPU time in handling LocRRCs. Similarly, the issue on the feature assignment to LocRRCs has also turned out to be trivial by using the <italic toggle="yes">Hash</italic> method, where the running time is only 1.63 s on average (1.64 s for TRAIN, 1.94 s for PREVIOUS and 1.30 s for TEST). The <italic toggle="yes">Hash</italic> method is 33-fold and 11-fold faster than the NumPy array indexing method and the Pandas pandas.at method, respectively.</p>
      <p>We finally assessed the computing performance of assigning cumuCCs to individual residues using top-ranked residue pairs of protein lengths <italic toggle="yes">L</italic>/5, <italic toggle="yes">L</italic>/5, <italic toggle="yes">L</italic>/2, <italic toggle="yes">L</italic>, 1.5<italic toggle="yes">L</italic>, 2<italic toggle="yes">L</italic>, 5<italic toggle="yes">L</italic> and 10<italic toggle="yes">L</italic>, and found that our program performed the assignment of cumuCCs within 0.7 s for all the given thresholds (<xref rid="sup1" ref-type="supplementary-material">Figures S2</xref>–<xref rid="sup1" ref-type="supplementary-material">S4</xref>, available online at <ext-link xlink:href="http://bib.oxfordjournals.org/" ext-link-type="uri">http://bib.oxfordjournals.org/</ext-link>).</p>
    </sec>
    <sec id="sec25">
      <title>TMKit usage</title>
      <p>TMKit is designed in an open-source, modular and scalable manner with 13 Python modules (9 function modules as displayed in section <italic toggle="yes">Methods</italic>) to handle various types of analyses of transmembrane protein sequences and structures. The TMKit functions can be accessed via the following modules: <italic toggle="yes">tmkit.cath</italic>, <italic toggle="yes">tmkit.collate</italic>, <italic toggle="yes">tmkit.edge</italic> (i.e. seqNetRR), <italic toggle="yes">tmkit.feature</italic>, <italic toggle="yes">tmkit.mapping</italic>, <italic toggle="yes">tmkit.msa</italic>, <italic toggle="yes">tmkit.mut</italic>, <italic toggle="yes">tmkit.ppi</italic>, <italic toggle="yes">tmkit.qc</italic>, <italic toggle="yes">tmkit.rrc</italic>, <italic toggle="yes">tmkit.seq</italic>, <italic toggle="yes">tmkit.topo</italic> and <italic toggle="yes">tmkit.vs</italic>. They are mainly used inline in Python. Note that in order to facilitate the development of TMKit, many functions provided by some of these modules work based on a few external Python packages or libraries, including LIPS [<xref rid="ref46" ref-type="bibr">46</xref>], BioPandas [<xref rid="ref59" ref-type="bibr">59</xref>], Scikit-learn [<xref rid="ref60" ref-type="bibr">60</xref>] and Biopython [<xref rid="ref61" ref-type="bibr">61</xref>].</p>
    </sec>
    <sec id="sec26">
      <title>TMKit website</title>
      <p>The TMKit website (<ext-link xlink:href="https://tmkit-guide.herokuapp.com/" ext-link-type="uri">https://tmkit-guide.herokuapp.com</ext-link>) provides the specification of the 13 Python modules where case studies are presented (<xref rid="f6" ref-type="fig">Figure 6</xref>). Each case-study vignette shows the definition of input parameters and files, the running pipeline and the output.</p>
    </sec>
  </sec>
  <sec id="sec27">
    <title>DISCUSSION</title>
    <p>In this work, we present TMKit, a computational toolkit that offers numerous function modules for analyzing transmembrane protein sequences and structures. Many of its modules facilitate machine learning modeling of transmembrane proteins. TMKit’s visualization capabilities allow atomic-level visualization of known and predicted protein–protein interaction interfaces for rapid biological interpretation. In addition, TMKit integrates a high-performance computing library seqNetRR, which can construct various sets of residue connections and assign features in linear time with respect to the number of residue pairs used. The seqNetRR module is designed to permit fast computation for learning the surrounding information of residues/residue pairs of interest in machine learning modeling problems.</p>
    <p>TMKit distinguishes itself from existing tools mainly in terms of its easy-to-use functions, fast running speed and relatively comprehensive coverage of a wide range of capabilities that handle transmembrane protein data in different formats. Transmembrane protein structures are routinely collected into a few bespoke databases, such as PDBTM [<xref rid="ref6" ref-type="bibr">6</xref>]. Given the importance of these data sources and the widespread use of Python, TMKit is developed to access them swiftly and easily. The types of topologies in the lipid-anchored transmembrane proteins partly define their roles in biological processes. TMKit is imparted with a strong ability to process structure-derived or predicted transmembrane topological data. We realize that an increasing number of downstream protein analysis tasks (e.g. PPI prediction) require complicated procedures that can actually be taken apart into a batch of subtasks. In this aspect, users can flexibly engineer and layer the TMKit functions into the procedures of their analysis because TMKit is assembled modular, which paves the way for more advanced downstream analysis. Besides, existing tools in protein science are mostly subject specific [<xref rid="ref12" ref-type="bibr">12</xref>, <xref rid="ref17" ref-type="bibr">17</xref>] and many of them are finally available as computational models. However, users may need to build their analysis frameworks or methods from scratch. In particular, to our knowledge, TMKit is the first open-source tool to visualize the structural details of PPI interfaces, which helps biological interpretation. Considering that TMKit provides an overarching solution for data munging at the sequence, domain, structural and PPI levels, it can also be used for analyzing other types of proteins.</p>
    <p>The relentless progress in computational techniques has transformed the landscape of the entire structural biology field [<xref rid="ref62" ref-type="bibr">62</xref>]. For example, AlphaFold2 [<xref rid="ref63" ref-type="bibr">63</xref>] has predicted structures of an extensive repertoire of proteins for which their experimentally resolved structures are not available. The TMKit toolkit provides a function to access the AlphaFold2-predicted TM protein structures. In order to gain an understanding of biological processes that a predicted structure may be involved in, we further provide users with structural alignment based on the Foldseek webserver [<xref rid="ref64" ref-type="bibr">64</xref>], which searches against its built-in structural databases. A promising future direction for TMKit to further enhance its functionalities is the extraction of structural features from the predicted structures.</p>
    <boxed-text id="box01" position="float">
      <sec id="sec15a">
        <title>Key Points</title>
        <list list-type="bullet">
          <list-item>
            <p>TMKit is the first Python interface for providing a one-stop computational analysis of transmembrane protein sequences and structures.</p>
          </list-item>
          <list-item>
            <p>TMKit offers a range of flexible functions for visualizing atomic-level interaction/mutation interfaces between transmembrane proteins.</p>
          </list-item>
          <list-item>
            <p>TMKit includes a direct module to access many transmembrane protein-specific databases, e.g. PDBTM, for fast database wrangling.</p>
          </list-item>
          <list-item>
            <p>TMKit is well suited for extracting biological features of single/paired residues from large transmembrane proteins at a fast speed.</p>
          </list-item>
          <list-item>
            <p>TMKit allows for detailed topological, mutational and interaction annotations of transmembrane protein sites.</p>
          </list-item>
        </list>
      </sec>
    </boxed-text>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>Supplementary_File_bbad288</label>
      <media xlink:href="supplementary_file_bbad288.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="sec29">
    <title>FUNDING</title>
    <p>Medical Research Council (MRC) career development fellowship (MR/V010182/1) to A.P.C.</p>
  </sec>
  <sec sec-type="data-availability" id="sec30">
    <title>DATA AVAILABILITY</title>
    <p>The TMKit toolkit is publicly available at <ext-link xlink:href="https://github.com/2003100127/tmkit" ext-link-type="uri">https://github.com/2003100127/tmkit</ext-link> and the documentation is available at <ext-link xlink:href="https://tmkit-guide.herokuapp.com/doc/overview" ext-link-type="uri">https://tmkit-guide.herokuapp.com/doc/overview</ext-link>.</p>
  </sec>
  <notes id="AN1">
    <p><bold>Jianfeng Sun</bold> is a postdoctoral researcher at the University of Oxford, Oxford, UK. He has developed 2 computational methods for studying interactions between transmembrane protein sites. His main research interests are sequence analysis of transmembrane proteins, structural biology, computational biology, and nanopore and single-cell sequencing.</p>
    <p><bold>Arulsamy Kulandaisamy</bold> is a postdoctoral researcher in the Protein Bioinformatics Lab at the Department of Biotechnology of the IIT Bhupat and Jyoti Mehta School of BioSciences in Madras, India. He has developed more than 10 published databases or computational tools for transmembrane protein research. His main research interests are the prediction of mutations and stabilities of transmembrane protein sites with machine learning.</p>
    <p><bold>Jinlong Ru</bold> is a PhD candidate at the Technical University of Munich, Munich, Germany. His research interests are systems biology and computational metagenomics.</p>
    <p><bold>M. Michael Gromiha</bold> is a Professor at the Indian Institute of Technology Madras, India. His main research interests are structural analysis, prediction, folding and stability of globular and membrane proteins, protein interactions and development of bioinformatics databases and tools. He has published &gt;250 research articles, 50 reviews, 7 editorials and 2 books entitled ‘<italic toggle="yes">Protein Bioinformatics: From Sequence to Function</italic>’ by Elsevier/Academic Press and ‘<italic toggle="yes">Protein Interactions: Computational Methods, Analysis and Prediction</italic>’ by World Scientific.</p>
    <p><bold>Adam P. Cribbs</bold> is an Associate Professor at the University of Oxford, Oxford, UK. His research is directed toward understanding disease biology from a functional genomics standpoint by developing computational approaches to advance our understanding of the mechanisms that regulate genes, proteins and biological pathways. His main research interests are systems biology, computational biology, nanopore and single-cell sequencing.</p>
  </notes>
  <ref-list id="bib1">
    <title>REFERENCES</title>
    <ref id="ref1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wallin</surname>  <given-names>E</given-names></string-name>, <string-name><surname>Von</surname>  <given-names>HG</given-names></string-name></person-group>. <article-title>Genome-wide analysis of integral membrane proteins from eubacterial, archaean, and eukaryotic organisms</article-title>. <source>Protein Sci</source>  <year>1998</year>;<volume>7</volume>:<fpage>1029</fpage>–<lpage>38</lpage>.<pub-id pub-id-type="pmid">9568909</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Uhlén</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Fagerberg</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Hallström</surname>  <given-names>BM</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Tissue-based map of the human proteome</article-title>. <source>Science</source>  <year>2015</year>;<volume>347</volume>(<issue>6220</issue>):<fpage>1260419</fpage>.<pub-id pub-id-type="pmid">25613900</pub-id></mixed-citation>
    </ref>
    <ref id="ref3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Thomas</surname>  <given-names>JMH</given-names></string-name>, <string-name><surname>Simkovic</surname>  <given-names>F</given-names></string-name>, <string-name><surname>Keegan</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Approaches to ab initio molecular replacement of α-helical transmembrane proteins</article-title>. <source>Acta Crystallogr D</source>  <year>2017</year>;<volume>73</volume>:<fpage>985</fpage>–<lpage>96</lpage>.</mixed-citation>
    </ref>
    <ref id="ref4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Xia</surname>  <given-names>Y</given-names></string-name>, <string-name><surname>Fischer</surname>  <given-names>AW</given-names></string-name>, <string-name><surname>Teixeira</surname>  <given-names>P</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Integrated structural biology for a-helical membrane protein structure determination</article-title>. <source>Structure</source>  <year>2018</year>;<volume>26</volume>:<fpage>657</fpage>–<lpage>666.e2</lpage>.<pub-id pub-id-type="pmid">29526436</pub-id></mixed-citation>
    </ref>
    <ref id="ref5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shimizu</surname>  <given-names>K</given-names></string-name>, <string-name><surname>Cao</surname>  <given-names>W</given-names></string-name>, <string-name><surname>Saad</surname>  <given-names>G</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Comparative analysis of membrane protein structure databases</article-title>. <source>Biochim Biophys Acta Biomembr</source>  <year>2018</year>;<volume>1860</volume>:<fpage>1077</fpage>–<lpage>91</lpage>.<pub-id pub-id-type="pmid">29331638</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kozma</surname>  <given-names>D</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name>, <string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name></person-group>. <article-title>PDBTM: protein data bank of transmembrane proteins after 8 years</article-title>. <source>Nucleic Acids Res</source>  <year>2013</year>;<volume>41</volume>:<fpage>D524</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">23203988</pub-id></mixed-citation>
    </ref>
    <ref id="ref7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lomize</surname>  <given-names>AL</given-names></string-name>, <string-name><surname>Todd</surname>  <given-names>SC</given-names></string-name>, <string-name><surname>Pogozheva</surname>  <given-names>ID</given-names></string-name></person-group>. <article-title>Spatial arrangement of proteins in planar and curved membranes by PPM 3.0</article-title>. <source>Protein Sci</source>  <year>2022</year>;<volume>31</volume>:<fpage>209</fpage>–<lpage>20</lpage>.<pub-id pub-id-type="pmid">34716622</pub-id></mixed-citation>
    </ref>
    <ref id="ref8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Newport</surname>  <given-names>TD</given-names></string-name>, <string-name><surname>Sansom</surname>  <given-names>MSP</given-names></string-name>, <string-name><surname>Stansfeld</surname>  <given-names>PJ</given-names></string-name></person-group>. <article-title>The MemProtMD database: a resource for membrane-embedded protein structures and their lipid interactions</article-title>. <source>Nucleic Acids Res</source>  <year>2019</year>;<volume>47</volume>:<fpage>D390</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30418645</pub-id></mixed-citation>
    </ref>
    <ref id="ref9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name>, <string-name><surname>Dosztányi</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name></person-group>. <article-title>PDB_TM: selection and membrane localization of transmembrane proteins in the protein data bank</article-title>. <source>Nucleic Acids Res</source>  <year>2005</year>;<volume>33</volume>:<fpage>D275</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">15608195</pub-id></mixed-citation>
    </ref>
    <ref id="ref10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name>, <string-name><surname>Dosztányi</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name></person-group>. <article-title>TMDET: web server for detecting transmembrane regions of proteins by using their 3D coordinates</article-title>. <source>Bioinformatics</source>  <year>2004</year>;<volume>21</volume>:<fpage>1276</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">15539454</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kunzmann</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Hamacher</surname>  <given-names>K</given-names></string-name></person-group>. <article-title>Biotite: a unifying open source computational biology framework in Python</article-title>. <source>BMC Bioinformatics</source>  <year>2018</year>;<volume>19</volume>:<fpage>346</fpage>.<pub-id pub-id-type="pmid">30285630</pub-id></mixed-citation>
    </ref>
    <ref id="ref12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gilpin</surname>  <given-names>W</given-names></string-name></person-group>. <article-title>PyPDB: a Python API for the protein data Bank</article-title>. <source>Bioinformatics</source>  <year>2015</year>;<volume>32</volume>:<fpage>159</fpage>–<lpage>60</lpage>.<pub-id pub-id-type="pmid">26369703</pub-id></mixed-citation>
    </ref>
    <ref id="ref13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Faezov</surname>  <given-names>B</given-names></string-name>, <string-name><surname>Dunbrack</surname>  <given-names>RL</given-names>, <suffix>Jr</suffix></string-name></person-group>. <article-title>PDBrenum: a webserver and program providing protein data bank files renumbered according to their UniProt sequences</article-title>. <source>PloS One</source>  <year>2021</year>;<volume>16</volume>:<fpage>e0253411</fpage>.<pub-id pub-id-type="pmid">34228733</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>F</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iLearn: an integrated platform and meta-learner for feature engineering, machine-learning analysis and modeling of DNA, RNA and protein sequence data</article-title>. <source>Brief Bioinform</source>  <year>2019</year>;<volume>21</volume>:<fpage>1047</fpage>–<lpage>57</lpage>.</mixed-citation>
    </ref>
    <ref id="ref15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>F</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iFeature: a Python package and web server for features extraction and selection from protein and peptide sequences</article-title>. <source>Bioinformatics</source>  <year>2018</year>;<volume>34</volume>:<fpage>2499</fpage>–<lpage>502</lpage>.<pub-id pub-id-type="pmid">29528364</pub-id></mixed-citation>
    </ref>
    <ref id="ref16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Guzzi</surname>  <given-names>PH</given-names></string-name>, <string-name><surname>Di Paola</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Giuliani</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>PCN-miner: an open-source extensible tool for the analysis of protein contact networks</article-title>. <source>Bioinformatics</source>  <year>2022</year>;<volume>38</volume>:<fpage>4235</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">35799364</pub-id></mixed-citation>
    </ref>
    <ref id="ref17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rosignoli</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Paiardini</surname>  <given-names>A</given-names></string-name></person-group>. <article-title>DockingPie: a consensus docking plugin for PyMOL</article-title>. <source>Bioinformatics</source>  <year>2022</year>;<volume>38</volume>:<fpage>4233</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">35792827</pub-id></mixed-citation>
    </ref>
    <ref id="ref18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yeow</surname>  <given-names>EKL</given-names></string-name>, <string-name><surname>Clayton</surname>  <given-names>AHA</given-names></string-name></person-group>. <article-title>Enumeration of oligomerization states of membrane proteins in living cells by homo-FRET spectroscopy and microscopy: theory and application</article-title>. <source>Biophys J</source>  <year>2007</year>;<volume>92</volume>:<fpage>3098</fpage>–<lpage>104</lpage>.<pub-id pub-id-type="pmid">17416632</pub-id></mixed-citation>
    </ref>
    <ref id="ref19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Li</surname>  <given-names>C</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iLearnPlus: a comprehensive and automated machine-learning platform for nucleic acid and protein sequence analysis, prediction and visualization</article-title>. <source>Nucleic Acids Res</source>  <year>2021</year>;<volume>49</volume>:<fpage>e60</fpage>–<lpage>0</lpage>.<pub-id pub-id-type="pmid">33660783</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname>  <given-names>X</given-names></string-name>, <string-name><surname>Zhao</surname>  <given-names>P</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>iFeatureOmega: an integrative platform for engineering, visualization and analysis of features from molecular sequences, structural and ligand data sets</article-title>. <source>Nucleic Acids Res</source>  <year>2022</year>;<volume>50</volume>:<fpage>W434</fpage>–<lpage>47</lpage>.<pub-id pub-id-type="pmid">35524557</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yin</surname>  <given-names>X</given-names></string-name>, <string-name><surname>Yang</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Xiao</surname>  <given-names>F</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>MemBrain: an easy-to-use online webserver for transmembrane protein structure prediction</article-title>. <source>Nanomicro Lett</source>  <year>2017</year>;<volume>10</volume>:<fpage>2</fpage>.<pub-id pub-id-type="pmid">30393651</pub-id></mixed-citation>
    </ref>
    <ref id="ref22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ferruz</surname>  <given-names>N</given-names></string-name>, <string-name><surname>Schmidt</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Höcker</surname>  <given-names>B</given-names></string-name></person-group>. <article-title>ProteinTools: a toolkit to analyze protein structures</article-title>. <source>Nucleic Acids Res</source>  <year>2021</year>;<volume>49</volume>:<fpage>W559</fpage>–<lpage>66</lpage>.<pub-id pub-id-type="pmid">34019657</pub-id></mixed-citation>
    </ref>
    <ref id="ref23">
      <label>23.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Schrödinger</surname>  <given-names>LLC</given-names></string-name>, <string-name><surname>DELANO</surname>  <given-names>W</given-names></string-name></person-group>.
<publisher-name>PyMOL</publisher-name>.</mixed-citation>
    </ref>
    <ref id="ref24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liang</surname>  <given-names>Y-L</given-names></string-name>, <string-name><surname>Khoshouei</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Deganutti</surname>  <given-names>G</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Cryo-EM structure of the active, Gs-protein complexed, human CGRP receptor</article-title>. <source>Nature</source>  <year>2018</year>;<volume>561</volume>:<fpage>492</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">30209400</pub-id></mixed-citation>
    </ref>
    <ref id="ref25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pao</surname>  <given-names>K-C</given-names></string-name>, <string-name><surname>Wood</surname>  <given-names>NT</given-names></string-name>, <string-name><surname>Knebel</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Activity-based E3 ligase profiling uncovers an E3 ligase with esterification activity</article-title>. <source>Nature</source>  <year>2018</year>;<volume>556</volume>:<fpage>381</fpage>–<lpage>5</lpage>.<pub-id pub-id-type="pmid">29643511</pub-id></mixed-citation>
    </ref>
    <ref id="ref26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Remmert</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Biegert</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Hauser</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Söding</surname>  <given-names>J</given-names></string-name></person-group>. <article-title>HHblits: lightning-fast iterative protein sequence searching by HMM-HMM alignment</article-title>. <source>Nat Methods</source>  <year>2012</year>;<volume>9</volume>:<fpage>173</fpage>–<lpage>5</lpage>.</mixed-citation>
    </ref>
    <ref id="ref27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Johnson</surname>  <given-names>LS</given-names></string-name>, <string-name><surname>Eddy</surname>  <given-names>SR</given-names></string-name>, <string-name><surname>Portugaly</surname>  <given-names>E</given-names></string-name></person-group>. <article-title>Hidden Markov model speed heuristic and iterative HMM search procedure</article-title>. <source>BMC Bioinformatics</source>  <year>2010</year>;<volume>11</volume>:<fpage>431</fpage>.<pub-id pub-id-type="pmid">20718988</pub-id></mixed-citation>
    </ref>
    <ref id="ref28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><etal>et al.</etal>  <article-title>Topology of membrane proteins—predictions, limitations and variations</article-title>. <source>Curr Opin Struct Biol</source>  <year>2018</year>;<volume>50</volume>:<fpage>9</fpage>–<lpage>17</lpage>.<pub-id pub-id-type="pmid">29100082</pub-id></mixed-citation>
    </ref>
    <ref id="ref29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><prefix>von</prefix>  <surname>Heijne</surname>  <given-names>G</given-names></string-name></person-group>. <article-title>Membrane-protein topology</article-title>. <source>Nat Rev Mol Cell Biol</source>  <year>2006</year>;<volume>7</volume>:<fpage>909</fpage>–<lpage>18</lpage>.<pub-id pub-id-type="pmid">17139331</pub-id></mixed-citation>
    </ref>
    <ref id="ref30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ried</surname>  <given-names>CL</given-names></string-name>, <string-name><surname>Kube</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Kirrbach</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Langosch</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Homotypic interaction and amino acid distribution of unilaterally conserved transmembrane helices</article-title>. <source>J Mol Biol</source>  <year>2012</year>;<volume>420</volume>:<fpage>251</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">22561134</pub-id></mixed-citation>
    </ref>
    <ref id="ref31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pal</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Chattopadhyay</surname>  <given-names>A</given-names></string-name></person-group>. <article-title>Extramembranous regions in G protein-coupled receptors: Cinderella in receptor biology?</article-title>  <source>J Membr Biol</source>  <year>2019</year>;<volume>252</volume>:<fpage>483</fpage>–<lpage>97</lpage>.<pub-id pub-id-type="pmid">31471645</pub-id></mixed-citation>
    </ref>
    <ref id="ref32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tusnády</surname>  <given-names>GE</given-names></string-name>, <string-name><surname>Dosztányi</surname>  <given-names>Z</given-names></string-name>, <string-name><surname>Simon</surname>  <given-names>I</given-names></string-name></person-group>. <article-title>Transmembrane proteins in the protein data bank: identification and classification</article-title>. <source>Bioinformatics</source>  <year>2004</year>;<volume>20</volume>:<fpage>2964</fpage>–<lpage>72</lpage>.<pub-id pub-id-type="pmid">15180935</pub-id></mixed-citation>
    </ref>
    <ref id="ref33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zeng</surname>  <given-names>B</given-names></string-name>, <string-name><surname>Hönigschmid</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Residue co-evolution helps predict interaction sites in α-helical membrane proteins</article-title>. <source>J Struct Biol</source>  <year>2019</year>;<volume>206</volume>:<fpage>156</fpage>–<lpage>69</lpage>.<pub-id pub-id-type="pmid">30836197</pub-id></mixed-citation>
    </ref>
    <ref id="ref34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sun</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Improved sequence-based prediction of interaction sites in α-helical transmembrane proteins by deep learning</article-title>. <source>Comput Struct Biotechnol J</source>  <year>2021</year>;<volume>19</volume>:<fpage>1512</fpage>–<lpage>30</lpage>.<pub-id pub-id-type="pmid">33815689</pub-id></mixed-citation>
    </ref>
    <ref id="ref35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krissinel</surname>  <given-names>E</given-names></string-name>, <string-name><surname>Henrick</surname>  <given-names>K</given-names></string-name></person-group>. <article-title>Inference of macromolecular assemblies from crystalline state</article-title>. <source>J Mol Biol</source>  <year>2007</year>;<volume>372</volume>:<fpage>774</fpage>–<lpage>97</lpage>.<pub-id pub-id-type="pmid">17681537</pub-id></mixed-citation>
    </ref>
    <ref id="ref36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lawson</surname>  <given-names>CL</given-names></string-name>, <string-name><surname>Dutta</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Westbrook</surname>  <given-names>JD</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Representation of viruses in the remediated PDB archive</article-title>. <source>Acta Crystallogr D</source>  <year>2008</year>;<volume>64</volume>:<fpage>874</fpage>–<lpage>82</lpage>.</mixed-citation>
    </ref>
    <ref id="ref37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ren</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Caforio</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Yang</surname>  <given-names>Q</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Structural and mechanistic insights into the biosynthesis of CDP-archaeol in membranes</article-title>. <source>Cell Res</source>  <year>2017</year>;<volume>27</volume>:<fpage>1378</fpage>–<lpage>91</lpage>.<pub-id pub-id-type="pmid">28961231</pub-id></mixed-citation>
    </ref>
    <ref id="ref38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bordner</surname>  <given-names>AJ</given-names></string-name>, <string-name><surname>Gorin</surname>  <given-names>AA</given-names></string-name></person-group>. <article-title>Comprehensive inventory of protein complexes in the protein data bank from consistent classification of interfaces</article-title>. <source>BMC Bioinformatics</source>  <year>2008</year>;<volume>9</volume>:<fpage>234</fpage>.<pub-id pub-id-type="pmid">18474114</pub-id></mixed-citation>
    </ref>
    <ref id="ref39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bordner</surname>  <given-names>AJ</given-names></string-name></person-group>. <article-title>Predicting protein-protein binding sites in membrane proteins</article-title>. <source>BMC Bioinformatics</source>  <year>2009</year>;<volume>10</volume>:<fpage>312</fpage>.<pub-id pub-id-type="pmid">19778442</pub-id></mixed-citation>
    </ref>
    <ref id="ref40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kulandaisamy</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Binny Priya</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Sakthivel</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>MutHTP: mutations in human transmembrane proteins</article-title>. <source>Bioinformatics</source>  <year>2018</year>;<volume>34</volume>:<fpage>2325</fpage>–<lpage>6</lpage>.<pub-id pub-id-type="pmid">29401218</pub-id></mixed-citation>
    </ref>
    <ref id="ref41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kulandaisamy</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Zaucha</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Sakthivel</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Pred-MutHTP: prediction of disease-causing and neutral mutations in human transmembrane proteins</article-title>. <source>Hum Mutat</source>  <year>2020</year>;<volume>41</volume>:<fpage>581</fpage>–<lpage>90</lpage>.<pub-id pub-id-type="pmid">31821684</pub-id></mixed-citation>
    </ref>
    <ref id="ref42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sillitoe</surname>  <given-names>I</given-names></string-name>, <string-name><surname>Dawson</surname>  <given-names>N</given-names></string-name>, <string-name><surname>Lewis</surname>  <given-names>TE</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>CATH: expanding the horizons of structure-based functional annotations for genome sequences</article-title>. <source>Nucleic Acids Res</source>  <year>2018</year>;<volume>47</volume>:<fpage>D280</fpage>–<lpage>4</lpage>.</mixed-citation>
    </ref>
    <ref id="ref43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Oughtred</surname>  <given-names>R</given-names></string-name>, <string-name><surname>Stark</surname>  <given-names>C</given-names></string-name>, <string-name><surname>Breitkreutz</surname>  <given-names>B-J</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>The BioGRID interaction database: 2019 update</article-title>. <source>Nucleic Acids Res</source>  <year>2018</year>;<volume>47</volume>:<fpage>D529</fpage>–<lpage>41</lpage>.</mixed-citation>
    </ref>
    <ref id="ref44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Orchard</surname>  <given-names>S</given-names></string-name>, <string-name><surname>Ammari</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Aranda</surname>  <given-names>B</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>The MIntAct project—IntAct as a common curation platform for 11 molecular interaction databases</article-title>. <source>Nucleic Acids Res</source>  <year>2014</year>;<volume>42</volume>:<fpage>D358</fpage>–<lpage>63</lpage>.<pub-id pub-id-type="pmid">24234451</pub-id></mixed-citation>
    </ref>
    <ref id="ref45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Luck</surname>  <given-names>K</given-names></string-name>, <string-name><surname>Kim</surname>  <given-names>D-K</given-names></string-name>, <string-name><surname>Lambourne</surname>  <given-names>L</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>A reference map of the human binary protein interactome</article-title>. <source>Nature</source>  <year>2020</year>;<volume>580</volume>:<fpage>402</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">32296183</pub-id></mixed-citation>
    </ref>
    <ref id="ref46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Adamian</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Liang</surname>  <given-names>J</given-names></string-name></person-group>. <article-title>Prediction of transmembrane helix orientation in polytopic membrane proteins</article-title>. <source>BMC Struct Biol</source>  <year>2006</year>;<volume>6</volume>:<fpage>13</fpage>.<pub-id pub-id-type="pmid">16792816</pub-id></mixed-citation>
    </ref>
    <ref id="ref47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname>  <given-names>Y</given-names></string-name>, <string-name><surname>Barth</surname>  <given-names>P</given-names></string-name></person-group>. <article-title>Evolutionary-guided de novo structure prediction of self-associated transmembrane helical proteins with near-atomic accuracy</article-title>. <source>Nat Commun</source>  <year>2015</year>;<volume>6</volume>:<fpage>7196</fpage>.<pub-id pub-id-type="pmid">25995083</pub-id></mixed-citation>
    </ref>
    <ref id="ref48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Leelananda</surname>  <given-names>SP</given-names></string-name>, <string-name><surname>Lindert</surname>  <given-names>S</given-names></string-name></person-group>. <article-title>Iterative molecular dynamics–Rosetta membrane protein structure refinement guided by Cryo-EM densities</article-title>. <source>J Chem Theory Comput</source>  <year>2017</year>;<volume>13</volume>:<fpage>5131</fpage>–<lpage>45</lpage>.<pub-id pub-id-type="pmid">28949136</pub-id></mixed-citation>
    </ref>
    <ref id="ref49">
      <label>49.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jones</surname>  <given-names>DT</given-names></string-name>, <string-name><surname>Singh</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Kosciolek</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Tetchner</surname>  <given-names>S</given-names></string-name></person-group>. <article-title>MetaPSICOV: combining coevolution methods for accurate prediction of contacts and long range hydrogen bonding in proteins</article-title>. <source>Bioinformatics</source>  <year>2015</year>;<volume>31</volume>:<fpage>999</fpage>–<lpage>1006</lpage>.<pub-id pub-id-type="pmid">25431331</pub-id></mixed-citation>
    </ref>
    <ref id="ref50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sun</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>DeepHelicon: accurate prediction of inter-helical residue contacts in transmembrane proteins by residual neural networks</article-title>. <source>J Struct Biol</source>  <year>2020</year>;<volume>212</volume>:<fpage>107574</fpage>.<pub-id pub-id-type="pmid">32663598</pub-id></mixed-citation>
    </ref>
    <ref id="ref51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kumar</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Sharma</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>A potential energy and mutual information based link prediction approach for bipartite networks</article-title>. <source>Sci Rep</source>  <year>2020</year>;<volume>10</volume>:<fpage>20659</fpage>.<pub-id pub-id-type="pmid">33244025</pub-id></mixed-citation>
    </ref>
    <ref id="ref52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yamanishi</surname>  <given-names>Y</given-names></string-name>, <string-name><surname>Araki</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Gutteridge</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Prediction of drug–target interaction networks from the integration of chemical and genomic spaces</article-title>. <source>Bioinformatics</source>  <year>2008</year>;<volume>24</volume>:<fpage>i232</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">18586719</pub-id></mixed-citation>
    </ref>
    <ref id="ref53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hönigschmid</surname>  <given-names>P</given-names></string-name>, <string-name><surname>Frishman</surname>  <given-names>D</given-names></string-name></person-group>. <article-title>Accurate prediction of helix interactions and residue contacts in membrane proteins</article-title>. <source>J Struct Biol</source>  <year>2016</year>;<volume>194</volume>:<fpage>112</fpage>–<lpage>23</lpage>.<pub-id pub-id-type="pmid">26851352</pub-id></mixed-citation>
    </ref>
    <ref id="ref54">
      <label>54.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hopf</surname>  <given-names>TA</given-names></string-name>, <string-name><surname>Colwell</surname>  <given-names>LJ</given-names></string-name>, <string-name><surname>Sheridan</surname>  <given-names>R</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Three-dimensional structures of membrane proteins from genomic sequencing</article-title>. <source>Cell</source>  <year>2012</year>;<volume>149</volume>:<fpage>1607</fpage>–<lpage>21</lpage>.<pub-id pub-id-type="pmid">22579045</pub-id></mixed-citation>
    </ref>
    <ref id="ref55">
      <label>55.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kaján</surname>  <given-names>L</given-names></string-name>, <string-name><surname>Hopf</surname>  <given-names>TA</given-names></string-name>, <string-name><surname>Kalaš</surname>  <given-names>M</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>FreeContact: fast and free software for protein contact prediction from residue co-evolution</article-title>. <source>BMC Bioinformatics</source>  <year>2014</year>;<volume>15</volume>:<fpage>85</fpage>.<pub-id pub-id-type="pmid">24669753</pub-id></mixed-citation>
    </ref>
    <ref id="ref56">
      <label>56.</label>
      <mixed-citation publication-type="journal">Azar Y, Broder AZ, Karlin AR. On-line load balancing. <source>Theor Comput Sci</source> 1994; <volume>130</volume>:73–84.</mixed-citation>
    </ref>
    <ref id="ref57">
      <label>57.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McKinney</surname>  <given-names>W.</given-names></string-name></person-group>  <part-title>Data structures for statistical computing in Python</part-title>. In: van der Walt SJ, Millman J, <source>Proceedings of the 9th Python in Science Conference</source>. Austin, Texas, USA: SciPy, <year>2010</year>; <fpage>56</fpage>–<lpage>61</lpage>. <ext-link xlink:href="https://conference.scipy.org/proceedings/scipy2010/mckinney.html" ext-link-type="uri">https://conference.scipy.org/proceedings/scipy2010/mckinney.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="ref58">
      <label>58.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname>  <given-names>CR</given-names></string-name>, <string-name><surname>Millman</surname>  <given-names>KJ</given-names></string-name>, <string-name><prefix>van der</prefix>  <surname>Walt</surname>  <given-names>SJ</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Array programming with NumPy</article-title>. <source>Nature</source>  <year>2020</year>;<volume>585</volume>:<fpage>357</fpage>–<lpage>62</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="ref59">
      <label>59.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Raschka</surname>  <given-names>S</given-names></string-name></person-group>. <article-title>BioPandas: working with molecular structures in pandas DataFrames</article-title>. <source>J Open Source Softw</source>  <year>2017</year>;<volume>2</volume>:<fpage>279</fpage>.</mixed-citation>
    </ref>
    <ref id="ref60">
      <label>60.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pedregosa</surname>  <given-names>F</given-names></string-name>, <string-name><surname>Varoquaux</surname>  <given-names>G</given-names></string-name>, <string-name><surname>Gramfort</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Scikit-learn: machine learning in Python</article-title>. <source>J Mach Learn Res</source>  <year>2011</year>;<volume>12</volume>:<fpage>2825</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="ref61">
      <label>61.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cock</surname>  <given-names>PJA</given-names></string-name>, <string-name><surname>Antao</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Chang</surname>  <given-names>JT</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Biopython: freely available Python tools for computational molecular biology and bioinformatics</article-title>. <source>Bioinformatics</source>  <year>2009</year>;<volume>25</volume>:<fpage>1422</fpage>–<lpage>3</lpage>.<pub-id pub-id-type="pmid">19304878</pub-id></mixed-citation>
    </ref>
    <ref id="ref62">
      <label>62.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hegedűs</surname>  <given-names>T</given-names></string-name>, <string-name><surname>Geisler</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Lukács</surname>  <given-names>GL</given-names></string-name>, <string-name><surname>Farkas</surname>  <given-names>B</given-names></string-name></person-group>. <article-title>Ins and outs of AlphaFold2 transmembrane protein structure predictions</article-title>. <source>Cell Mol Life Sci</source>  <year>2022</year>;<volume>79</volume>:<fpage>73</fpage>.<pub-id pub-id-type="pmid">35034173</pub-id></mixed-citation>
    </ref>
    <ref id="ref63">
      <label>63.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jumper</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Evans</surname>  <given-names>R</given-names></string-name>, <string-name><surname>Pritzel</surname>  <given-names>A</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Highly accurate protein structure prediction with AlphaFold</article-title>. <source>Nature</source>  <year>2021</year>;<volume>596</volume>:<fpage>583</fpage>–<lpage>9</lpage>.<pub-id pub-id-type="pmid">34265844</pub-id></mixed-citation>
    </ref>
    <ref id="ref64">
      <label>64.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><prefix>van</prefix>  <surname>Kempen</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Kim</surname>  <given-names>SS</given-names></string-name>, <string-name><surname>Tumescheit</surname>  <given-names>C</given-names></string-name>, <etal>et al.</etal></person-group>  <article-title>Fast and accurate protein structure search with Foldseek</article-title>. <source>Nat Biotechnol</source>  <year>2023</year>; 1–4. <ext-link xlink:href="https://www.nature.com/articles/s41587-023-01773-0#citeas" ext-link-type="uri">https://www.nature.com/articles/s41587-023-01773-0#citeas</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archivearticle1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS Comput Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS Comput. Biol</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">ploscomp</journal-id>
    <journal-title-group>
      <journal-title>PLoS Computational Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1553-734X</issn>
    <issn pub-type="epub">1553-7358</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4055564</article-id>
    <article-id pub-id-type="pmid">24922310</article-id>
    <article-id pub-id-type="publisher-id">PCOMPBIOL-D-13-02214</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pcbi.1003676</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Gene Regulatory Networks</subject>
          </subj-group>
        </subj-group>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v2">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Computer Modeling</subject>
        </subj-group>
        <subj-group>
          <subject>Computing Methods</subject>
          <subj-group>
            <subject>Computer Inferencing</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CGBayesNets: Conditional Gaussian Bayesian Network Learning and Inference with Mixed Discrete and Continuous Data</article-title>
      <alt-title alt-title-type="running-head">CGBayesNets</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>McGeachie</surname>
          <given-names>Michael J.</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="cor1">
          <sup>*</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Chang</surname>
          <given-names>Hsun-Hsien</given-names>
        </name>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff3">
          <sup>3</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Weiss</surname>
          <given-names>Scott T.</given-names>
        </name>
        <xref ref-type="aff" rid="aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff2">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff4">
          <sup>4</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="aff1">
      <label>1</label>
      <addr-line>Channing Division of Network Medicine, Brigham and Women's Hospital, Boston, Massachusetts, United States of America</addr-line>
    </aff>
    <aff id="aff2">
      <label>2</label>
      <addr-line>Harvard Medical School, Boston, Massachusetts, United States of America</addr-line>
    </aff>
    <aff id="aff3">
      <label>3</label>
      <addr-line>Children's Hospital Informatics Program, Children's Hospital Boston, Boston, Massachusetts, United States of America</addr-line>
    </aff>
    <aff id="aff4">
      <label>4</label>
      <addr-line>Partners Health Care Center for Personalized Medicine, Boston, Massachusetts, United States of America</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Murphy</surname>
          <given-names>Robert F.</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Carnegie Mellon University, United States of America</addr-line>
    </aff>
    <author-notes>
      <corresp id="cor1">* E-mail: <email>michael.mcgeachie@channing.harvard.edu</email></corresp>
      <fn fn-type="conflict">
        <p>The authors have declared that no competing interests exist.</p>
      </fn>
      <fn fn-type="con">
        <p>Conceived and designed the experiments: MM HHC STW. Performed the experiments: MJM HHC. Analyzed the data: MJM HHC. Contributed reagents/materials/analysis tools: MJM STW. Wrote the paper: MJM HHC.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>6</month>
      <year>2014</year>
    </pub-date>
    <volume>10</volume>
    <issue>6</issue>
    <elocation-id>e1003676</elocation-id>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>12</month>
        <year>2013</year>
      </date>
      <date date-type="accepted">
        <day>3</day>
        <month>5</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© 2014 McGeachie et al</copyright-statement>
      <copyright-year>2014</copyright-year>
      <copyright-holder>McGeachie et al</copyright-holder>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution License, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are properly credited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>Bayesian Networks (BN) have been a popular predictive modeling formalism in bioinformatics, but their application in modern genomics has been slowed by an inability to cleanly handle domains with mixed discrete and continuous variables. Existing free BN software packages either discretize continuous variables, which can lead to information loss, or do not include inference routines, which makes prediction with the BN impossible. We present CGBayesNets, a BN package focused around prediction of a clinical phenotype from mixed discrete and continuous variables, which fills these gaps. CGBayesNets implements Bayesian likelihood and inference algorithms for the conditional Gaussian Bayesian network (CGBNs) formalism, one appropriate for predicting an outcome of interest from, e.g., multimodal genomic data. We provide four different network learning algorithms, each making a different tradeoff between computational cost and network likelihood. CGBayesNets provides a full suite of functions for model exploration and verification, including cross validation, bootstrapping, and AUC manipulation. We highlight several results obtained previously with CGBayesNets, including predictive models of wood properties from tree genomics, leukemia subtype classification from mixed genomic data, and robust prediction of intensive care unit mortality outcomes from metabolomic profiles. We also provide detailed example analysis on public metabolomic and gene expression datasets. CGBayesNets is implemented in MATLAB and available as MATLAB source code, under an Open Source license and anonymous download at <ext-link ext-link-type="uri" xlink:href="http://www.cgbayesnets.com">http://www.cgbayesnets.com</ext-link>.</p>
    </abstract>
    <funding-group>
      <funding-statement>MJM is funded by National Institute of Health grant numbers K12-HL089990 and U01-HL065899. HHC is funded by NIH grant U19-A1067854. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <disp-quote>
    <p>This is a <italic>PLOS Computational Biology</italic> Software Article</p>
  </disp-quote>
  <sec id="s2">
    <title>Introduction</title>
    <p>A Bayesian network (BN) is a data structure that encodes conditional probability distributions between variables of interest by using a graph composed of nodes and directed edges. In a BN, variables in the domain are modeled as random variables and represented by nodes, and edges between them represent a statistical dependence of the child node on the parent node. Each node is annotated with the conditional distribution of the variable given the values of its parents, and this information can be used to answer questions about the most probable values of variables in the BN given assignments to other variables in the BN.</p>
    <p>BNs are attractive because they offer an interpretable picture of dependence and independence between domain variables, while modeling complex statistical relationships among them and providing prediction of an outcome of interest. BNs, as a mathematical modeling formalism, has enjoyed success in recent years <xref rid="pcbi.1003676-Verzilli1" ref-type="bibr">[1]</xref> in predicting and modeling the genetic basis of complex disease, including stroke <xref rid="pcbi.1003676-Sebastiani1" ref-type="bibr">[2]</xref>, nicotine dependence <xref rid="pcbi.1003676-Ramoni1" ref-type="bibr">[3]</xref>, and atherosclerosis <xref rid="pcbi.1003676-McGeachie1" ref-type="bibr">[4]</xref>. In caricature, analysis by BNs can be broken into two steps: building the network (called network structure learning) and computing consequences of the network (called inference). Both steps are necessary in order to perform prediction of a disease phenotype in a biological dataset. First the network structure is learned from a case-control dataset comprising various potentially predictive biological or demographic variables, some of which will be included in the network. Then the parameters of this network are trained by looking at the conditional probabilities of the variables within the dataset. Finally, inference can be performed to predict the case or control status of new data points that contain measurements of the same variables.</p>
    <p>However, Bayesian inference algorithms can be extremely complex and difficult to implement. There are several software packages for doing BN analysis, but to our knowledge all existing free implementations have one of two problems: 1) they do not allow mixed discrete and continuous data in a fully Bayesian mathematical formalism; or 2) they do not perform inference with the BN, merely performing the network learning step. The first limitation is one of traditional BNs, which are limited to considering only discrete variables. Researchers who wish to analyze continuous data (such as gene expression or metabolomics data) generally discretize these data, leading to loss of information and concurrent loss of power. In the second situation, a BN implementation that does not include inference is incapable of making predictions on new data, and researchers wishing to use the BN for prediction must either implement their own inference software, or take apart the BN model and put the pieces into some other modeling formalism, such as a logistic regression or a support vector machine. In addition to being inconvenient, this translation process leads to suboptimal performance since the variables identified in a BN are chosen for their relation and interactions to the other variables within the network â interactions which can be difficult to accurately recapitulate in another predictive modeling formalism.</p>
    <p>CGBayesNets addresses both of these problems by implementing both network learning and network inference in a more modern type of Baysian network, the conditional Gaussian Bayesian network (CGBN) <xref rid="pcbi.1003676-Heckerman1" ref-type="bibr">[5]</xref>. This is a network formalism wherein discrete and continuous nodes are mixed, with the stipulation that continuous nodes have Gaussian distributions linearly dependent upon any continuous parents with parameters conditioned upon the values of any discrete parents. In this formalism, discrete nodes cannot be modeled as statistically dependent upon continuous nodes, although the joint distribution can still be captured in the network. These are restrictions based on the available algorithms for performing exact Bayesian inference that we choose to implement <xref rid="pcbi.1003676-Cowell1" ref-type="bibr">[6]</xref>, <xref rid="pcbi.1003676-Sebastiani2" ref-type="bibr">[7]</xref> (see also, â<xref ref-type="sec" rid="s3">Design and Implementation</xref>â, below). Typically, these restrictions present little problem for the field of genomics, where we would generally model continuous gene expression values as being dependent upon discrete genetic polymorphisms â as in the case of expression quantitative trait loci (eQTL) analysis <xref rid="pcbi.1003676-Chang1" ref-type="bibr">[8]</xref>. Indeed, integrative genomics applications of BNs have become increasingly attractive <xref rid="pcbi.1003676-Chen1" ref-type="bibr">[9]</xref>. In a comparison study between BNs inferred from only expression data and BNs inferred from expression together with other types of genomic data, the combination of multiple genomic data types results in increased performance <xref rid="pcbi.1003676-Zhu1" ref-type="bibr">[10]</xref>. This agrees with our own experience: in our previous work using earlier versions of the CGBayesNets software we identified eQTLs in cancer datasets <xref rid="pcbi.1003676-Chang2" ref-type="bibr">[11]</xref> and predicted leukemia types by integrating single nucleotide polymorphisms (SNPs) and messenger ribonucleic acid (mRNA) expression levels <xref rid="pcbi.1003676-Chang1" ref-type="bibr">[8]</xref>.</p>
    <sec id="s2a">
      <title>Primary Analysis Scenario</title>
      <p>CGBayesNets was primarily designed to aide genomic researchers in building predictive models of a phenotype of interest using multimodal genomic data, combined with demographic and clinical data, as possible predictors. A typical scenario is one where the researcher has a case-control dataset of patients with and without a binary condition: cancer <xref rid="pcbi.1003676-Chang1" ref-type="bibr">[8]</xref>, response to asthma steroid therapy <xref rid="pcbi.1003676-McGeachie2" ref-type="bibr">[12]</xref>, and survival time past a benchmark of clinical importance (28+ days after intensive care unit (ICU) admittance) <xref rid="pcbi.1003676-Rogers1" ref-type="bibr">[13]</xref>, have been used in our previous work. CGBayesNets is used to construct a predictive BN model, which can then be used for predicting the phenotype of new data (e.g., predicting malignant vs. benign tumors from gene expression profiles; predicting which asthmatics responds to inhaled corticosteroids therapy; or predicting ICU prognosis from metabolomic profiles). To employ CGBayesNets in these cases, a dataset of all the possibly predictive variables â SNPs, gene expression measurements, demographic data â along with the phenotype (case/control status), are combined for each subject; this is provided to CGBayesNets. Using CGBayesNets, the researcher can then apply one of several network learning algorithms to find a network predictive of the phenotype. This network may include many or few connections to the phenotype, where variables that are unconnected are not necessary for prediction of the phenotype. After a satisfactory Bayesian network is obtained, the CGBayesNets inference routine can predict the outcome (case/control status) of each patient; in this way the predictive accuracy of the network can be assessed. To provide the best validation of the network, the network can then be used on a replication dataset, one that contains the same variables and outcome as used in the network, and prediction accuracy on a new dataset can be assessed.</p>
      <p>Of course, the primary outcome of a clinical case-control trial need not be used; other discrete variables of interest can be considered the phenotype; and networks predictive of these secondary outcomes can be computed separately. In a future update, CGBayesNets will also allow continuous (normally-distributed) variables to be used as the phenotype.</p>
    </sec>
    <sec id="s2b">
      <title>Related Software</title>
      <p>While there are several software packages for learning and predicting with Baysian networks, none provide the mix of features presented by CGBayesNets; in particular no free implementations provide algorithms for inference in networks of mixed discrete and continuous variables.</p>
      <p>Some Bayesian packages focus only on learning the network structure, including the popular Banjo <xref rid="pcbi.1003676-Smith1" ref-type="bibr">[14]</xref> package. This package includes several methods for learning both dynamic and static BNs, although none for inference with those networks. It does not include a Bayesian treatment of continuous variables and requires those to be discretized to be included in the models. Other software for learning Bayesian networks do treat continuous variables with full Bayesian semantics but do not implement inference for such models. These include the DEAL <xref rid="pcbi.1003676-Bttcher1" ref-type="bibr">[15]</xref> and BNLearn <xref rid="pcbi.1003676-Scutari1" ref-type="bibr">[16]</xref> packages in the R statistical language.</p>
      <p>Other BN packages provide network learning and inference but do not implement inference with continuous variables without discretization. These include the machine learning Java platform Weka 3.6.9 <xref rid="pcbi.1003676-Witten1" ref-type="bibr">[17]</xref> and the GeNIe and Smile packages (Decision Systems Laboratory, University of Pittsburgh, <ext-link ext-link-type="uri" xlink:href="http://genie.sis.pitt.edu/index.php">http://genie.sis.pitt.edu/index.php</ext-link>). Other large and comprehensive packages are commercial, which limits their availability and availability of the source code, and thus cannot be easily integrated into researcher's software, although they may provide full-featured BN processing (e.g., Hugin Expert â Hugin, Aalborg, Denmark. <ext-link ext-link-type="uri" xlink:href="http://www.hugin.com">http://www.hugin.com</ext-link>).</p>
      <p>Some network-learning packages are not Bayesian, but instead use other formalisms for defining statistical relationships between variables, such as GlobalMIT <xref rid="pcbi.1003676-Vinh1" ref-type="bibr">[18]</xref>, which uses mutual information to learn a dynamic (non-Bayesian) network. Also in this category is the Uninet package which relies on conditional rank correlation to define statistical dependence between variables <xref rid="pcbi.1003676-Hanea1" ref-type="bibr">[19]</xref>.</p>
      <p>GDAGSim is a Gaussian linear model simulator <xref rid="pcbi.1003676-Wilkinson1" ref-type="bibr">[20]</xref>, which allows users of the C library to define and perform statistical inference and simulation on network models of normally distributed quantities. This is of potential interest to those wishing to simulate purely continuous Bayesian networks, but does not implement the integration of discrete nodes to implement CGBNs; nor does it include any structure learning.</p>
      <p>Perhaps closest to our CGBayesNets package is the BNfinder 2.0 package <xref rid="pcbi.1003676-Wilczynski1" ref-type="bibr">[21]</xref>, which focuses on learning dynamic BNs from time-series data, and includes routines that select the most likely child value for a node given the values of that node's parents, rather than full inference and prediction. Dynamic BNs are BNs that include a time constraint indicating that some nodes come before other nodes temporally (as in time-series experiments), or causally (as in metabolic pathways). Learning optimal dynamic BNs is computationally easier than learning optimal traditional (static) BNs <xref rid="pcbi.1003676-Dojer1" ref-type="bibr">[22]</xref>, but BNfinder 2.0 can learn static BNs given K2-style node-ordering constraints. BNfinder 2.0 does allow continuous variables but only allows them to have exactly one discrete parent and zero children, which limits some of the possible networks that can be modeled.</p>
      <p>In total, CGBayesNets provides new functionality: learning and predicting with Bayesian networks composed of discrete and continuous variables. In the following, we discuss our implementation of these and additional features.</p>
    </sec>
  </sec>
  <sec id="s3">
    <title>Design and Implementation</title>
    <p>CGBayesNets is entirely Bayesian, using the Bayesian marginal likelihood to guide network search and for performing inference. Using Bayesian statistics allows leveraging of Bayesian priors to bias network structure learning toward parsimonious models that are more likely to predict well on new datasets, while also providing a consistent mathematical treatment throughout the package. Please see the Supplementary Materials for a full mathematical treatment of the Bayesian semantics.</p>
    <sec id="s3a">
      <title>Inference Algorithms</title>
      <p>We refer to the process of predicting an outcome of interest using a Bayesian network as âinference,â the term commonly used for this in the BN literature. Inference in a BN can proceed either forward or backward along the directed edges of the network. The best prediction of a phenotype node is often obtained when that node has no parents, but many children. This is structurally similar to a type of network know as a NaÃ¯ve Bayes Network, where each other (non-phenotype) node is conditionally independent given the phenotype. Although NaÃ¯ve Bayes networks are simple, in practice they can provide extremely good prediction <xref rid="pcbi.1003676-Domingos1" ref-type="bibr">[23]</xref>. The opposite network structure â a phenotype node with many parents and no children â frequently results in very poor predictive performance, because a child node's distribution is conditional on the combination of values of each of its parents. As the number of parents of a node increases, the number of parameters describing the distribution of the child increases exponentially. For practical datasets, this can result in very few datapoints of each combination of parent values from which to estimate the phenotype's conditional distribution; a problem referred to as data fragmentation. This leads to poor estimation of the phenotype's distribution, and this in turn leads to poor prediction. When accurate prediction is required, it is thus expedient to obtain networks where a phenotype has many child nodes and no parent nodes â a heuristic employed in CGBayesNets.</p>
      <p>To perform inference in a CGBN, different algorithms are used on the discrete and continuous portions of the network. We have implemented the Cowell algorithm for inference in conditional Gaussian network nodes <xref rid="pcbi.1003676-Cowell2" ref-type="bibr">[24]</xref>, and combine that algorithm with a simple variable elimination algorithm for inference between discrete nodes in the network <xref rid="pcbi.1003676-Koller1" ref-type="bibr">[25]</xref>.</p>
      <p>We chose the Cowell algorithm for inference because it is numerically stable. There are very few algorithms to choose from for exact Bayesian inference in mixed networks. The Cowell algorithm is based on the earlier Lauritzen and Jensen junction tree algorithm <xref rid="pcbi.1003676-Lauritzen1" ref-type="bibr">[26]</xref>. Both of these are an improvement over the original algorithms for inference in CGBNs <xref rid="pcbi.1003676-Cowell3" ref-type="bibr">[27]</xref> that were found to be numerically unstable due to repeated matrix inversions. The discrete inference algorithm is a typical variable elimination algorithm, as described in Koller and Friedman <xref rid="pcbi.1003676-Koller1" ref-type="bibr">[25]</xref>. The algorithm involves creating factors that represent groups of nodes in the discrete part of the CGBN, and implementing the factor product and sum operations upon these to compute either marginal or conditional distributions of a node given the value of parents or children. For details, see chapter 9, Koller and Friedman <xref rid="pcbi.1003676-Koller1" ref-type="bibr">[25]</xref>.</p>
    </sec>
    <sec id="s3b">
      <title>Network Learning Algorithms</title>
      <p>While the focus of CGBayesNets is on inference in mixed Bayesian networks, CGBayesNets provides four main network structure search algorithms. The problem of searching for the best Bayesian network is one that has received much attention over the last 30 years, and there are many possible algorithms (and software implementations of those) that a researcher may want to employ. We have endeavored to make our software package modular and extensible so that researchers familiar with MATLAB will be able to easily add their own network search algorithms; we also read common network file formats so that researchers can use other packages that have more extensive and specialized network search procedures to find a good Bayesian network, and then use CGBayesNets to perform inference in that network.</p>
      <p>In all of the network search algorithms in CGBayesNets, network scoring is done by a metric sometimes known as the <italic>Bayesian Dirichlet equivalent sample-size, uniform (BDeu)</italic>, which is a measure of the marginal likelihood of the data, given the network <xref rid="pcbi.1003676-Buntine1" ref-type="bibr">[28]</xref>, (see also supplemental material). In every algorithm, CGBayesNets looks for the network that maximizes the marginal likelihood of the data. Although this is not necessarily the network with the best phenotype prediction, it is the network that is best supported by the available evidence â the data. Since the number of possible networks is super-exponential in the number of variables (for n variables, there are â¼2â§(n<sup>2</sup>) possible directed networks), all networks cannot be investigated; rather heuristics are employed to search for good networks that might be satisfactory. One heuristic we employ throughout is a limit on the maximum number of possible parents a node may have, which may be set by the researcher to any appropriate value.</p>
      <p>The first network learning algorithm we provide in CGBayesNets is a K2-style <xref rid="pcbi.1003676-Cooper1" ref-type="bibr">[29]</xref> search that orders nodes by likelihood of statistical independence, such that nodes so ordered can have parents only occurring before them in the order, and that the nodes most likely to be independent are given the fewest possible parents. The main benefit of such a list is that cycles are impossible, and this is important for learning BNs â which must be acyclic. We then learn parents of each continuous node according to this order, using a stepwise adjustment that allows the addition of one parent to a node to trigger the removal of an existing parent if that increases likelihood. Next we learn parents of every discrete node, in a similar way. The K2 algorithm is very fast, considering only k/2 * n<sup>2</sup> possible edges, where n is the number of variables and k is the maximum number of parents a node can have, a parameter of the search algorithm. K2 is frequently almost as good as other methods that consider a much larger number of possible edges, and thus take much more computational time. The K2 procedure we have implemented can be considered a hill-climbing algorithm that allows backtracking, but does not consider all possible edges, only those that obey the K2 ordering constraint.</p>
      <p>A second structure learning algorithm provided in CGBayesNets is a greedy, exhaustive, search algorithm that starts with an empty network and adds the best edge, iteratively. It does not rely upon a K2-style node priority list to avoid cycles, but rather does its own cycle-checking with depth-first search. This algorithm is a greedy hill-climber, in that at every step it adds the edge that increases data likelihood the most. It is exhaustive in that it considers all possible legal edges, between any two nodes (not that it considers all possible <italic>networks</italic>). It may be run with or without allowing backtracking, which if enabled will also consider the removal of any existing edge, if that removal results in the greatest increase in likelihood. This algorithm is more comprehensive than the K2 algorithm â it considers potentially n<sup>2</sup>+kn<sup>2</sup> edges, and may find better networks than K2, although it is much slower. In sum, this algorithm is appropriate for smaller datasets, and will have prohibitive computational cost for networks with thousands of nodes.</p>
      <p>The third network learning algorithm provided with CGBayesNets is pheno-centric search, which builds a network based around a particular phenotype node, sufficient to perform learning and prediction of that particular variable <xref rid="pcbi.1003676-Chang1" ref-type="bibr">[8]</xref>. The Markov properties of the BN semantics state that the distribution of a node is conditionally independent given the values of its parents, children, and other parents of those children (collectively, the âMarkov blanketâ or âMarkov neighborhoodâ of the node). Only these nodes are required to predict the value of a phenotype. Thus, if we are only interested in predicting the value of a phenotype node, we need not build the entire BN over all of the variables in the domain; we only need to look for its Markov blanket. Such a pheno-centric network has two main benefits. First, it can allow prediction in domains where building a full BN over all the variables is computationally prohibitive, as a pheno-centric search considers at most n+kn<sup>2</sup> possible edges. Second, it does not require a K2-style node order list for parent constraints, and as such does not needlessly exclude many potential network structures from consideration. On the other hand, it can result in overfitting of the data: making too many connections to the phenotype that may just be due to random noise in the dataset.</p>
      <p>The fourth algorithm is a hill-climbing technique known as simulated annealing <xref rid="pcbi.1003676-Kirkpatrick1" ref-type="bibr">[30]</xref>, which is very similar to our second algorithm (the greedy, exhaustive hill-climber). Simulated annealing search initially will add <italic>any randomly-chosen edge</italic> to a network, rather than the best edge. As the search goes on, the probability of adding edges that reduce, rather than increase, likelihood decreases, slowly, to zero. This method has the benefit of being able to run in however much time the researcher may have; and providing solutions of increasing likelihood given increasing computational time, indeed we recommend considering n<sup>3</sup> possible edges to allow the search to consider many possible permutations of the n<sup>2</sup> possible edges in a network. However this is the slowest of our four search algorithms and as such may perform worse than the other three given limited computational time.</p>
      <p>Finally, for learning networks of many variables, CGBayesNets includes simple filtering functions that filter the number of variables by Bayes Factor of association with the phenotype, where the Bayes Factor is the ratio of posterior likelihood of the data with the variable dependent upon the phenotype, to the likelihood of the data independent of the phenotype <xref rid="pcbi.1003676-Kass1" ref-type="bibr">[31]</xref>. Such filtering strategies are necessary for pruning a dataset of many thousands of variables down to a smaller set of informative variables for BN analysis.</p>
    </sec>
    <sec id="s3c">
      <title>Software Features</title>
      <p>The CGBayesNets package is intended to support all phases of the predictive modeling process.</p>
      <p>CGBayesNets provides the four network structure learning algorithms, described above. In addition, in our software implementation, CGBayesNets provides separate functions for learning the parameters of a network and learning its structure from data, and base functions for computing Bayesian likelihood of variables. These functions make it easy for advanced users to add their own network learning algorithms. Once structure and parameters are learned, the model may be tested on a dataset: either the existing dataset or a new (replication) dataset. CGBayesNets provides functions for making testing on multiple different datasets simple and direct. In all cases the Area Under the Receiver-Operator Characteristic Curve (AUC) is reported as a measure of predictive accuracy of the network <xref rid="pcbi.1003676-Lasko1" ref-type="bibr">[32]</xref>. This is provided with its convex-hull AUC and 95% confidence intervals, together with functions for computing p-values for difference between two AUCs executed over the same dataset, using the method of Delong <italic>et al.</italic>
<xref rid="pcbi.1003676-DeLong1" ref-type="bibr">[33]</xref>.</p>
      <p>To increase the performance of networks on replication datasets, CGBayesNets provides functions for employing cross-validation (CV) and bootstrapping. The cross-validation functions will either perform CV to determine the best settings of Bayesian prior parameters, or to estimate the performance on an unknown replication dataset. Bootstrapping is provided to obtain estimates of the frequency of individual edges within a given Bayesian network, by comparing frequencies of edges in different bootstrap realizations of the dataset. This results in a single aggregate network with fractional probabilities for each edge; functions are provided to translate these into concrete Bayesian networks and test their performance.</p>
      <p>We have endeavored to make CGBayesNets easier to use by providing several data reading and writing functions. There are input functions for reading several different types of PED SNP files, and text files formatted with mixed string and numeric data, such as output by the popular R statistical language. We output networks into Trivial Graph Format (tgf), which can be manipulated for example by the free program yEd (yWorks, Tubingen, Germany. <ext-link ext-link-type="uri" xlink:href="http://www.yworks.com/en/products_yed_about.html">http://www.yworks.com/en/products_yed_about.html</ext-link>), or the SIF and GraphML formats for use with the program Cytoscape <xref rid="pcbi.1003676-Shannon1" ref-type="bibr">[34]</xref>.</p>
      <p>CGBayesNets is distributed as MATLAB source code. Each function is commented and documented with the input and output specifications so that it may be employed in the user's application as necessary. To make this as easy as possible, we make recommendations as to which functions are suggested for modification, and which represent inner workings of the algorithms, and should not generally be altered. We also provide example code to copy and edit demonstrating how to combine our lower-level Bayesian inference functions to assemble higher-level search and diagnostic routines.</p>
    </sec>
  </sec>
  <sec id="s4">
    <title>Results</title>
    <sec id="s4a">
      <title>Results from Biological Applications</title>
      <p>The primary form of biological insight provided by CGBayesNets is predictive network models that differentiate cases from controls. CGBayesNets is the only existing free software package for doing so with Bayesian networks of mixed discrete and continuous domains.</p>
      <p>It is clear that discretization of continuous variables is a possibility, allowing researchers to convert continuous variables to discrete ones and then use discrete Bayesian network methods. However, we argue that this necessarily results in a loss of information and a concomitant loss in power. See supplemental material for an example of a mixed discrete-continuous domain where we compare performance of BNs using discretization of continuous variables to using CGBayesNets. Results from this experiment are shown in <xref ref-type="table" rid="pcbi-1003676-t001">Table 1</xref>, and the difference between discretized performance (72.6% AUC) and the original performance (99.3% AUC) is considerable.</p>
      <table-wrap id="pcbi-1003676-t001" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pcbi.1003676.t001</object-id>
        <label>Table 1</label>
        <caption>
          <title>Performance of various classifiers on a simple example dataset, discretization/data_gen2_train.csv and discretization/data_gen2_test.csv, trained and tested on separate data generated from a BN of 5 discrete and 15 continuous variables (nâ=â25), and also averages over 10 similar, randomly generated networks.</title>
        </caption>
        <alternatives>
          <graphic id="pcbi-1003676-t001-1" xlink:href="pcbi.1003676.t001"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col align="left" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
              <col align="center" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <td align="left" rowspan="1" colspan="1"/>
                <td align="left" rowspan="1" colspan="1">True Network</td>
                <td colspan="2" align="left" rowspan="1">BNfinder 2.0 (K2)</td>
                <td colspan="2" align="left" rowspan="1">BNfinder 2.0 (reverse-K2)</td>
                <td colspan="2" align="left" rowspan="1">Weka 3.6.9</td>
                <td colspan="2" align="left" rowspan="1">CGBayesNets</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Data</td>
                <td align="left" rowspan="1" colspan="1">nodes</td>
                <td align="left" rowspan="1" colspan="1">Nodes</td>
                <td align="left" rowspan="1" colspan="1">AUC</td>
                <td align="left" rowspan="1" colspan="1">Nodes</td>
                <td align="left" rowspan="1" colspan="1">AUC</td>
                <td align="left" rowspan="1" colspan="1">nodes</td>
                <td align="left" rowspan="1" colspan="1">AUC</td>
                <td align="left" rowspan="1" colspan="1">nodes</td>
                <td align="left" rowspan="1" colspan="1">AUC</td>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" rowspan="1" colspan="1">Original</td>
                <td align="left" rowspan="1" colspan="1">14</td>
                <td align="left" rowspan="1" colspan="1">5</td>
                <td align="left" rowspan="1" colspan="1">50%</td>
                <td align="left" rowspan="1" colspan="1">3</td>
                <td align="left" rowspan="1" colspan="1">98.7%</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">8</td>
                <td align="left" rowspan="1" colspan="1">99.3%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Discretized</td>
                <td align="left" rowspan="1" colspan="1">14</td>
                <td align="left" rowspan="1" colspan="1">3</td>
                <td align="left" rowspan="1" colspan="1">50%</td>
                <td align="left" rowspan="1" colspan="1">2</td>
                <td align="left" rowspan="1" colspan="1">61.3%</td>
                <td align="left" rowspan="1" colspan="1">20</td>
                <td align="left" rowspan="1" colspan="1">50.0%</td>
                <td align="left" rowspan="1" colspan="1">5</td>
                <td align="left" rowspan="1" colspan="1">72.6%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Average Original</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">68.7%</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">82.4%</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">99.2%</td>
              </tr>
              <tr>
                <td align="left" rowspan="1" colspan="1">Average Discretized</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">68.7%</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">68.7%</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">70.0%</td>
                <td align="left" rowspan="1" colspan="1">-</td>
                <td align="left" rowspan="1" colspan="1">70.0%</td>
              </tr>
            </tbody>
          </table>
        </alternatives>
        <table-wrap-foot>
          <fn id="nt101">
            <label/>
            <p>This illustrates the differences between CGBayesNets and two other software packages, BNfinder 2.0 and Weka 3.6.9. Training data is presented in two forms: in its original form, and in its discretized form, where continuous nodes are binned into 10 equal-width discrete bins. The ânodesâ columns refer to the number of nodes in the Markov blanket of the phenotype node in the discovered network. âAUCâ is the Area Under receiver-operator characteristic Curve, evaluated by predicting the phenotype node given values of the other 19 nodes in a separate test set. âBNfinder 2.0 (K2)â refers to BNfinder 2.0 supplied with node-parent constraints consistent with the topological ordering of nodes in the true network. âBNfinder 2.0 (reverse-K2)â indicates BNfinder 2.0 supplied with node-parent constraints consistent with the opposite of the topological ordering of the nodes in the true network. No data is reported for Weka 3.6.9 on the Original data, since Weka 3.6.9 does not handle Bayesian Networks with continuous data variables. Average AUCs over 10 similarly-generated networks are shown for each method, before and after discretization.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>We have used CGBayesNets in several applications. We have performed eQTL analysis with earlier versions of the software that resulted in predictive models for subtypes of acute lymphoblastic leukemia <xref rid="pcbi.1003676-Chang1" ref-type="bibr">[8]</xref> with the gene expression and gene variation (SNP) data available with Gene Expression Omnibus (GEO) accession #GSE10792 <xref rid="pcbi.1003676-Bungaro1" ref-type="bibr">[35]</xref>. Other groups have used CGBayesNets, and these have resulted in predictive models for tree and wood characteristics <xref rid="pcbi.1003676-Porth1" ref-type="bibr">[36]</xref> from mixed gene expression and SNP datasets. This application used the cross-validation routines in CGBayesNets to identify highly-predictive subsets of variables for different tree phenotypes, and then to prompt further biological analysis of these predictors.</p>
      <p>To consider one application in greater detail, we recount the network analysis strategy employed in our previous work: the identification of a metabolic signature for predicting mortality in hospital intensive-care units (ICU) from metabolomic profiling <xref rid="pcbi.1003676-Rogers1" ref-type="bibr">[13]</xref>. We started with a sample of 187 biological metabolites from 90 ICU patients together with clinical and demographic data including age, sex, renal function, and APACHE II score (an aggregate score indicative of ICU prognosis). We used 5-fold cross-validation on the training data to arrive at hyper parameters for the Bayesian likelihood calculations. We performed 2500 bootstrap realizations of the training dataset, and learned a pheno-centric CGBN for each bootstrap realization. From the sample of 2500 networks, we built a consensus network by starting with the phenotype node and then adding, in sequence, the most frequent edge occurring in the bootstrap networks, and measuring the performance of that network on the dataset in cross-validation. This provided a way of estimating the value of adding each node to the network, and roughly the point of diminishing returns. We used a network with a total of seven predictive nodes to define the final network model, as adding further nodes did not increase the predictive performance in cross-validation. The final network of seven metabolites achieved 91% AUC for predicting mortality in the training dataset, and we validated that network in an independent replication population of 120 ICU patients from a separate cohort, obtaining an AUC of 74% - significant prediction despite significant clinical (cancer rates) and demographic (Caucasian vs. African American) differences in the training and testing cohorts <xref rid="pcbi.1003676-Rogers1" ref-type="bibr">[13]</xref>. The seven metabolites identified (gamma-glutamylphenylalanine, gamma-glutamyltyrosine, 1-arachidonoylglycerophosphocholine* (20â¶4), taurochenodeoxycholate, 3-(4-hydroxyphenyl)lactate, sucrose, and kynurenine) are potentially employable as an ICU outcome prediction tool in future clinical settings.</p>
    </sec>
    <sec id="s4b">
      <title>Results on Test Data</title>
      <p>We include several test datasets with the CGBayesNets download. These are intended both to demonstrate the suggested use of our software and to assure its correct installation and function. We provide a metabolomic profiling dataset of a cachexia sample from the MetaboAnalyst2.0 <xref rid="pcbi.1003676-Xia1" ref-type="bibr">[37]</xref> website (<ext-link ext-link-type="uri" xlink:href="http://www.metaboanalyst.ca/MetaboAnalyst/faces/Home.jsp">http://www.metaboanalyst.ca/MetaboAnalyst/faces/Home.jsp</ext-link> âhuman_cachexia.csvâ). The suggested model achieves 86.8% AUC in cross-validation. We then discuss performance of CGBayesNets on a differential gene-expression dataset from GEO, accession #GSE19301, as described by Bjornsdottir et al. <xref rid="pcbi.1003676-Bjornsdottir1" ref-type="bibr">[38]</xref>. This identifies models using a training subset of the dataset that are predictive of the testing subset of the dataset using several transcripts with strong linear effects. Full details of how to compute these results are given in the supplemental materials.</p>
    </sec>
  </sec>
  <sec id="s5">
    <title>Availability and Future Directions</title>
    <p>Bayesian Networks remain an important machine learning methodology within bioinformatics, although their recent application in genomics, metabolomics, and proteomics has been limited by the necessity to learn networks over mixed discrete and continuous variables. The development of effective algorithms for learning and reasoning with conditional Gaussian Bayesian networks addresses this issue, although freely available implementations of these algorithms have so far been unknown. Our CGBayesNets package solves this problem and fills these needs. We are committed to continued development of CGBayesNets to fit our own needs of predictive Bayesian network software, as we continue to apply these techniques to biomedical domains; these improvements will be available to all users of CGBayesNets in the future.</p>
    <p>The CGBayesNets package is available from the authors and via anonymous download from <ext-link ext-link-type="uri" xlink:href="http://www.cgbayesnets.com">www.cgbayesnets.com</ext-link>. CGBayesNets is open source software, and is distributed as MATLAB source. It has been verified to run on both Linux and Windows platforms.</p>
  </sec>
  <sec sec-type="supplementary-material" id="s6">
    <title>Supporting Information</title>
    <supplementary-material content-type="local-data" id="pcbi.1003676.s001">
      <label>Figure S1</label>
      <caption>
        <p><bold>Bayesian Networks of Cachexia.</bold> These networks are formed by running CGBayesNets bootstrapping routine on the human cachexia dataset from (<ext-link ext-link-type="uri" xlink:href="http://www.metaboanalyst.ca/MetaboAnalyst/faces/Home.jsp">http://www.metaboanalyst.ca/MetaboAnalyst/faces/Home.jsp</ext-link> âhuman_cachexia.csvâ). Each network shows the Markov blanket of the phenotype of interest (âMuscle lossâ), which are those nodes necessary to predict muscle loss. Arrows between nodes indicate statistical dependence of the child node on the parent node(s), and do not represent causality. Networks are learned on 25 bootstrap realizations of the data, and those shown are consensus networks including the two (a), three (b), four (c), and eight (d) most frequently included edges in the bootstrap networks. Performance of these networks is given in Table S1 in <xref ref-type="supplementary-material" rid="pcbi.1003676.s005">Text S1</xref>. Images generated and formatted with the yEd program (yWorks).</p>
        <p>(PNG)</p>
      </caption>
      <media xlink:href="pcbi.1003676.s001.png">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1003676.s002">
      <label>Figure S2</label>
      <caption>
        <p><bold>Comparison of four different network search algorithms on training and test data.</bold> Training performance is measured with five-fold cross-validation. For each of four search algorithms (K2, Pheno-Centric, Full-Exhaustive, and NaÃ¯ve-Bayes) 5 bootstrap realizations of the training data were generated and a Bayesian network was learned for that realization. The x-axis represents using the most frequent N edges occurring in the population of bootstrap networks to create a consensus Bayesian network of at least N edges.</p>
        <p>(TIFF)</p>
      </caption>
      <media xlink:href="pcbi.1003676.s002.tif">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1003676.s003">
      <label>Figure S3</label>
      <caption>
        <p><bold>Comparison of prediction performance with continuous features vs. discretized features.</bold> This graph shows the difference in predictive performance (measured by change in AUC predicting the phenotype node from training dataset to testing dataset) in a dataset including continuous variables and the same dataset after continuous datasets were discretized into 10 equal-sized bins. Each circle represents a different random network created on 25 nodes, each randomly chosen to be discrete or continuous. The size of the circle is proportional to the number of datapoints simulated from that network, N, ranging from 25 at the smallest circles to 200 at the largest circles. Experiments are ordered by increasing sample size (N), along the x-axis. The color of the circle represents the number of nodes in the Markov blanket of, and therefore required for prediction of, the phenotype node. The red line represents a regression of difference in predictive performance on the x-axis. This regression indicates that when the number of variables is similar to the sample size, performance is on average 13% worse after discretizing continuous variables; while the difference goes away when sample size far exceeds the number of variables. Experiments where there is no difference between continuous performance and discretized performance not included in this analysis.</p>
        <p>(PNG)</p>
      </caption>
      <media xlink:href="pcbi.1003676.s003.png">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1003676.s004">
      <label>Software S1</label>
      <caption>
        <p><bold>This zip file contains CGBayesNets.</bold> It is distributed as MATLAB script files along with supporting data files, referenced in the text and in the Supporting <xref ref-type="supplementary-material" rid="pcbi.1003676.s005">Text S1</xref>.</p>
        <p>(ZIP)</p>
      </caption>
      <media xlink:href="pcbi.1003676.s004.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="pcbi.1003676.s005">
      <label>Text S1</label>
      <caption>
        <p><bold>This file contains additional text and material pertaining to issues raised in the main body.</bold> Supplemental Sections: Section 1: CGBayesNets Installation. Section 2: Example Analysis, Narrative Analysis in Metabolomics. Section 3: Example Analysis, Code Examples with Gene Expression Data. Section 4: Illustrative Discretization Example. Section 5: Theoretical Foundations.</p>
        <p>(DOCX)</p>
      </caption>
      <media xlink:href="pcbi.1003676.s005.docx">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We thank Professor Kelan Tantisira for his generous help and support. We thank the late Dr. Marco Ramoni, who laid the theoretical groundwork for the Bayesian treatment of Gaussian variables employed herein.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pcbi.1003676-Verzilli1">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Verzilli</surname><given-names>CJ</given-names></name>, <name><surname>Stallard</surname><given-names>N</given-names></name>, <name><surname>Whittaker</surname><given-names>JC</given-names></name> (<year>2006</year>) <article-title>Bayesian graphical models for genomewide association studies</article-title>. <source>Am J Hum Genet</source>
<volume>79</volume>: <fpage>100</fpage>â<lpage>112</lpage>.<pub-id pub-id-type="pmid">16773569</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Sebastiani1">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Sebastiani</surname><given-names>P</given-names></name>, <name><surname>Ramoni</surname><given-names>MF</given-names></name>, <name><surname>Nolan</surname><given-names>V</given-names></name>, <name><surname>Baldwin</surname><given-names>CT</given-names></name>, <name><surname>Steinberg</surname><given-names>MH</given-names></name> (<year>2005</year>) <article-title>Genetic dissection and prognostic modeling of overt stroke in sickle cell anemia</article-title>. <source>Nat Genet</source>
<volume>37</volume>: <fpage>435</fpage>â<lpage>440</lpage>.<pub-id pub-id-type="pmid">15778708</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Ramoni1">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Ramoni</surname><given-names>RB</given-names></name>, <name><surname>Saccone</surname><given-names>NL</given-names></name>, <name><surname>Hatsukami</surname><given-names>DK</given-names></name>, <name><surname>Bierut</surname><given-names>LJ</given-names></name>, <name><surname>Ramoni</surname><given-names>MF</given-names></name> (<year>2009</year>) <article-title>A testable prognostic model of nicotine dependence</article-title>. <source>Journal of neurogenetics</source>
<volume>23</volume>: <fpage>283</fpage>â<lpage>292</lpage>.<pub-id pub-id-type="pmid">19184766</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-McGeachie1">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>McGeachie</surname><given-names>M</given-names></name>, <name><surname>Ramoni</surname><given-names>RL</given-names></name>, <name><surname>Mychaleckyj</surname><given-names>JC</given-names></name>, <name><surname>Furie</surname><given-names>KL</given-names></name>, <name><surname>Dreyfuss</surname><given-names>JM</given-names></name>, <etal>et al</etal> (<year>2009</year>) <article-title>Integrative predictive model of coronary artery calcification in atherosclerosis</article-title>. <source>Circulation</source>
<volume>120</volume>: <fpage>2448</fpage>â<lpage>2454</lpage>.<pub-id pub-id-type="pmid">19948975</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Heckerman1">
      <label>5</label>
      <mixed-citation publication-type="other">Heckerman D, Gieger D (1995) Learning Bayesian Networks: A unification for discrete and Gaussian domains. Uncertainty in Artificial Intelligence: Morgan Kaufmann.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Cowell1">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Cowell</surname><given-names>RG</given-names></name> (<year>2005</year>) <article-title>Local Propagation in Conditional Gaussian Bayesian Networks</article-title>. <source>Machine Learninig Research</source>
<volume>6</volume>: <fpage>1517</fpage>â<lpage>1550</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Sebastiani2">
      <label>7</label>
      <mixed-citation publication-type="other">Sebastiani P, Abad M, Ramoni MF (2005) Bayesian Networks for Genomic Analysis. In: Dougherty ER, Shmulevich I, Chen J, Wang ZJ, editors. Genomic Signal Processing and Statistics. pp. 281â320.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Chang1">
      <label>8</label>
      <mixed-citation publication-type="other">Chang HH, McGeachie MJ (2011) Phenotype prediction by integrative network analysis of SNP and gene expression microarrays. 33rd Annual Intl Conf of the IEEE EMBS. Boston, MA, USA. pp. 6849â6852.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Chen1">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Chen</surname><given-names>Y</given-names></name>, <name><surname>Zhu</surname><given-names>J</given-names></name>, <name><surname>Lum</surname><given-names>PY</given-names></name>, <name><surname>Yang</surname><given-names>X</given-names></name>, <name><surname>Pinto</surname><given-names>S</given-names></name>, <etal>et al</etal> (<year>2008</year>) <article-title>Variations in DNA elucidate molecular networks that cause disease</article-title>. <source>Nature</source>
<volume>452</volume>: <fpage>429</fpage>â<lpage>435</lpage>.<pub-id pub-id-type="pmid">18344982</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Zhu1">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>Zhu</surname><given-names>J</given-names></name>, <name><surname>Zhang</surname><given-names>B</given-names></name>, <name><surname>Smith</surname><given-names>EN</given-names></name>, <name><surname>Drees</surname><given-names>B</given-names></name>, <name><surname>Brem</surname><given-names>RB</given-names></name>, <etal>et al</etal> (<year>2008</year>) <article-title>Integrating large-scale functional genomic data to dissect the complexity of yeast regulatory networks</article-title>. <source>Nat Genet</source>
<volume>40</volume>: <fpage>854</fpage>â<lpage>861</lpage>.<pub-id pub-id-type="pmid">18552845</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Chang2">
      <label>11</label>
      <mixed-citation publication-type="journal"><name><surname>Chang</surname><given-names>HH</given-names></name>, <name><surname>McGeachie</surname><given-names>M</given-names></name>, <name><surname>Alterovitz</surname><given-names>G</given-names></name>, <name><surname>Ramoni</surname><given-names>MF</given-names></name> (<year>2010</year>) <article-title>Mapping transcription mechanisms from multimodal genomic data</article-title>. <source>BMC Bioinformatics</source>
<volume>11 Suppl 9</volume>: <fpage>S2</fpage>.<pub-id pub-id-type="pmid">21044360</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-McGeachie2">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>McGeachie</surname><given-names>MJ</given-names></name>, <name><surname>Wu</surname><given-names>AC</given-names></name>, <name><surname>Chang</surname><given-names>HH</given-names></name>, <name><surname>Lima</surname><given-names>JJ</given-names></name>, <name><surname>Peters</surname><given-names>SP</given-names></name>, <etal>et al</etal> (<year>2013</year>) <article-title>Predicting inhaled corticosteroid response in asthma with two associated SNPs</article-title>. <source>The pharmacogenomics journal</source>
<volume>13</volume>: <fpage>306</fpage>â<lpage>311</lpage>.<pub-id pub-id-type="pmid">22641026</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Rogers1">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>Rogers</surname><given-names>AJ</given-names></name>, <name><surname>McGeachie</surname><given-names>M</given-names></name>, <name><surname>Baron</surname><given-names>RM</given-names></name>, <name><surname>Gazourian</surname><given-names>L</given-names></name>, <name><surname>Haspel</surname><given-names>JA</given-names></name>, <etal>et al</etal> (<year>2014</year>) <article-title>Metabolomic derangements are associated with mortality in critically ill adult patients</article-title>. <source>PLoS One</source>
<volume>9</volume>: <fpage>e87538</fpage>.<pub-id pub-id-type="pmid">24498130</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Smith1">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Smith</surname><given-names>VA</given-names></name>, <name><surname>Yu</surname><given-names>J</given-names></name>, <name><surname>Smulders</surname><given-names>TV</given-names></name>, <name><surname>Hartemink</surname><given-names>AJ</given-names></name>, <name><surname>Jarvis</surname><given-names>ED</given-names></name> (<year>2006</year>) <article-title>Computational inference of neural information flow networks</article-title>. <source>PLoS computational biology</source>
<volume>2</volume>: <fpage>e161</fpage>.<pub-id pub-id-type="pmid">17121460</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Bttcher1">
      <label>15</label>
      <mixed-citation publication-type="other">BÃ¸ttcher SG, Dethlefsen C (2003) deal: A package for learning Bayesian networks: Department of Mathematical Sciences, Aalborg University.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Scutari1">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Scutari</surname><given-names>M</given-names></name> (<year>2010</year>) <article-title>Learning Bayesian Networks with the bnlearn R package</article-title>. <source>Journal of Statistical Software</source>
<volume>35</volume>: <fpage>1</fpage>â<lpage>22</lpage>.<pub-id pub-id-type="pmid">21603108</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Witten1">
      <label>17</label>
      <mixed-citation publication-type="book">Witten IH, Frank E, Hall MA, Books24x7 Inc. (2011) Data mining practical machine learning tools and techniques, third edition. Morgan Kaufmann series in data management systems. 3rd ed. Burlington, Mass.: Morgan Kaufmann Publishers.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Vinh1">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Vinh</surname><given-names>NX</given-names></name>, <name><surname>Chetty</surname><given-names>M</given-names></name>, <name><surname>Coppel</surname><given-names>R</given-names></name>, <name><surname>Wangikar</surname><given-names>PP</given-names></name> (<year>2011</year>) <article-title>GlobalMIT: learning globally optimal dynamic bayesian network with the mutual information test criterion</article-title>. <source>Bioinformatics</source>
<volume>27</volume>: <fpage>2765</fpage>â<lpage>2766</lpage>.<pub-id pub-id-type="pmid">21813478</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Hanea1">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Hanea</surname><given-names>AM</given-names></name>, <name><surname>Kurowicka</surname><given-names>D</given-names></name>, <name><surname>Cooke</surname><given-names>RM</given-names></name> (<year>2006</year>) <article-title>Hybrid method for quantifying and analyzing Bayesian belief nets</article-title>. <source>Quality and Reliability Engineering International</source>
<volume>22</volume>: <fpage>709</fpage>â<lpage>729</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Wilkinson1">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Wilkinson</surname><given-names>DJ</given-names></name>, <name><surname>Yeung</surname><given-names>SKH</given-names></name> (<year>2004</year>) <article-title>A sparse matrix approach to Bayesian computation in large linear models</article-title>. <source>Computational Statistics and Data Analysis</source>
<volume>44</volume>: <fpage>493</fpage>â<lpage>516</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Wilczynski1">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Wilczynski</surname><given-names>B</given-names></name>, <name><surname>Dojer</surname><given-names>N</given-names></name> (<year>2009</year>) <article-title>BNFinder: exact and efficient method for learning Bayesian networks</article-title>. <source>Bioinformatics</source>
<volume>25</volume>: <fpage>286</fpage>â<lpage>287</lpage>.<pub-id pub-id-type="pmid">18826957</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Dojer1">
      <label>22</label>
      <mixed-citation publication-type="book">Dojer N (2006) Learning Bayesian networks does not have to be NP-hard. Mathematical Foundations of Computer Science 2006: Springer. pp. 305â314.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Domingos1">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>Domingos</surname><given-names>P</given-names></name>, <name><surname>Pazzani</surname><given-names>M</given-names></name> (<year>1997</year>) <article-title>On the optimality of the simple Bayesian classifier under zero-one loss</article-title>. <source>Machine Learning</source>
<volume>29</volume>: <fpage>103</fpage>â<lpage>130</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Cowell2">
      <label>24</label>
      <mixed-citation publication-type="other">Cowell RG, Lauritzen SL, Mortera J (2006) MAIES: A tool for DNA mixture analysis. In: Dechter R, Richardson TS, editors. Uncertainty in Artificial Intelligence. pp. 90â97.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Koller1">
      <label>25</label>
      <mixed-citation publication-type="book">Koller D, Friedman N (2009) Probabilistic graphical models: principles and techniques. Cambridge, Mass.: MIT Press. xxxv, 1231 p. p.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Lauritzen1">
      <label>26</label>
      <mixed-citation publication-type="journal"><name><surname>Lauritzen</surname><given-names>SL</given-names></name>, <name><surname>Jensen</surname><given-names>F</given-names></name> (<year>2001</year>) <article-title>Stable local computation with conditional Gaussian distributions</article-title>. <source>Statistics and Computing</source>
<volume>11</volume>: <fpage>191</fpage>â<lpage>203</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Cowell3">
      <label>27</label>
      <mixed-citation publication-type="book">Cowell RG, Dawid AP, Lauritzen SL, Spiegelhalter DJ (1999) Probabilistic networks and expert systems. New York: Springer. xii, 321 p. p.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Buntine1">
      <label>28</label>
      <mixed-citation publication-type="book">Buntine W. Theory refinement on Bayesian networks; 1991. Morgan Kaufmann. pp. 52â60.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Cooper1">
      <label>29</label>
      <mixed-citation publication-type="journal"><name><surname>Cooper</surname><given-names>GF</given-names></name>, <name><surname>Herskovits</surname><given-names>E</given-names></name> (<year>1992</year>) <article-title>A Bayesian method for the induction of probabilistic networks from data</article-title>. <source>Machine Learning</source>
<volume>9</volume>: <fpage>309</fpage>â<lpage>347</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Kirkpatrick1">
      <label>30</label>
      <mixed-citation publication-type="journal"><name><surname>Kirkpatrick</surname><given-names>S</given-names></name>, <name><surname>Gelatt</surname><given-names>CD</given-names><suffix>Jr</suffix></name>, <name><surname>Vecchi</surname><given-names>MP</given-names></name> (<year>1983</year>) <article-title>Optimization by simulated annealing</article-title>. <source>Science</source>
<volume>220</volume>: <fpage>671</fpage>â<lpage>680</lpage>.<pub-id pub-id-type="pmid">17813860</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Kass1">
      <label>31</label>
      <mixed-citation publication-type="journal"><name><surname>Kass</surname><given-names>RE</given-names></name>, <name><surname>Raftery</surname><given-names>AE</given-names></name> (<year>1995</year>) <article-title>Bayes Factors</article-title>. <source>Journal of the American Statistical Association</source>
<volume>90</volume>: <fpage>773</fpage>â<lpage>795</lpage>.</mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Lasko1">
      <label>32</label>
      <mixed-citation publication-type="journal"><name><surname>Lasko</surname><given-names>TA</given-names></name>, <name><surname>Bhagwat</surname><given-names>JG</given-names></name>, <name><surname>Zou</surname><given-names>KH</given-names></name>, <name><surname>Ohno-Machado</surname><given-names>L</given-names></name> (<year>2005</year>) <article-title>The use of receiver operating characteristic curves in biomedical informatics</article-title>. <source>J Biomed Inform</source>
<volume>38</volume>: <fpage>404</fpage>â<lpage>415</lpage>.<pub-id pub-id-type="pmid">16198999</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-DeLong1">
      <label>33</label>
      <mixed-citation publication-type="journal"><name><surname>DeLong</surname><given-names>ER</given-names></name>, <name><surname>DeLong</surname><given-names>DM</given-names></name>, <name><surname>Clarke-Pearson</surname><given-names>DL</given-names></name> (<year>1988</year>) <article-title>Comparing the areas under two or more correlated receiver operating characteristic curves: a nonparametric approach</article-title>. <source>Biometrics</source>
<volume>44</volume>: <fpage>837</fpage>â<lpage>845</lpage>.<pub-id pub-id-type="pmid">3203132</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Shannon1">
      <label>34</label>
      <mixed-citation publication-type="journal"><name><surname>Shannon</surname><given-names>P</given-names></name>, <name><surname>Markiel</surname><given-names>A</given-names></name>, <name><surname>Ozier</surname><given-names>O</given-names></name>, <name><surname>Baliga</surname><given-names>NS</given-names></name>, <name><surname>Wang</surname><given-names>JT</given-names></name>, <etal>et al</etal> (<year>2003</year>) <article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks</article-title>. <source>Genome research</source>
<volume>13</volume>: <fpage>2498</fpage>â<lpage>2504</lpage>.<pub-id pub-id-type="pmid">14597658</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Bungaro1">
      <label>35</label>
      <mixed-citation publication-type="journal"><name><surname>Bungaro</surname><given-names>S</given-names></name>, <name><surname>Dell'Orto</surname><given-names>MC</given-names></name>, <name><surname>Zangrando</surname><given-names>A</given-names></name>, <name><surname>Basso</surname><given-names>D</given-names></name>, <name><surname>Gorletta</surname><given-names>T</given-names></name>, <etal>et al</etal> (<year>2009</year>) <article-title>Integration of genomic and gene expression data of childhood ALL without known aberrations identifies subgroups with specific genetic hallmarks</article-title>. <source>Genes, chromosomes &amp; cancer</source>
<volume>48</volume>: <fpage>22</fpage>â<lpage>38</lpage>.<pub-id pub-id-type="pmid">18803328</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Porth1">
      <label>36</label>
      <mixed-citation publication-type="journal"><name><surname>Porth</surname><given-names>I</given-names></name>, <name><surname>Klapste</surname><given-names>J</given-names></name>, <name><surname>Skyba</surname><given-names>O</given-names></name>, <name><surname>Friedmann</surname><given-names>MC</given-names></name>, <name><surname>Hannemann</surname><given-names>J</given-names></name>, <etal>et al</etal> (<year>2013</year>) <article-title>Network analysis reveals the relationship among wood properties, gene expression levels and genotypes of natural Populus trichocarpa accessions</article-title>. <source>The New phytologist</source>
<volume>200</volume>: <fpage>727</fpage>â<lpage>742</lpage>.<pub-id pub-id-type="pmid">23889128</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Xia1">
      <label>37</label>
      <mixed-citation publication-type="journal"><name><surname>Xia</surname><given-names>J</given-names></name>, <name><surname>Mandal</surname><given-names>R</given-names></name>, <name><surname>Sinelnikov</surname><given-names>IV</given-names></name>, <name><surname>Broadhurst</surname><given-names>D</given-names></name>, <name><surname>Wishart</surname><given-names>DS</given-names></name> (<year>2012</year>) <article-title>MetaboAnalyst 2.0âa comprehensive server for metabolomic data analysis</article-title>. <source>Nucleic acids research</source>
<volume>40</volume>: <fpage>W127</fpage>â<lpage>133</lpage>.<pub-id pub-id-type="pmid">22553367</pub-id></mixed-citation>
    </ref>
    <ref id="pcbi.1003676-Bjornsdottir1">
      <label>38</label>
      <mixed-citation publication-type="journal"><name><surname>Bjornsdottir</surname><given-names>US</given-names></name>, <name><surname>Holgate</surname><given-names>ST</given-names></name>, <name><surname>Reddy</surname><given-names>PS</given-names></name>, <name><surname>Hill</surname><given-names>AA</given-names></name>, <name><surname>McKee</surname><given-names>CM</given-names></name>, <etal>et al</etal> (<year>2011</year>) <article-title>Pathways activated during human asthma exacerbation as revealed by gene expression patterns in blood</article-title>. <source>PLoS One</source>
<volume>6</volume>: <fpage>e21902</fpage>.<pub-id pub-id-type="pmid">21779351</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

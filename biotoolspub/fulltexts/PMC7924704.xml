<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PeerJ Comput Sci</journal-id>
    <journal-id journal-id-type="iso-abbrev">PeerJ Comput Sci</journal-id>
    <journal-id journal-id-type="publisher-id">peerj-cs</journal-id>
    <journal-id journal-id-type="pmc">peerj-cs</journal-id>
    <journal-title-group>
      <journal-title>PeerJ Computer Science</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2376-5992</issn>
    <publisher>
      <publisher-name>PeerJ Inc.</publisher-name>
      <publisher-loc>San Diego, USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7924704</article-id>
    <article-id pub-id-type="publisher-id">cs-271</article-id>
    <article-id pub-id-type="doi">10.7717/peerj-cs.271</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Data Mining and Machine Learning</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Scientific Computing and Simulation</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Software Engineering</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SANgo: a storage infrastructure simulator with reinforcement learning support</article-title>
    </title-group>
    <contrib-group>
      <contrib id="author-1" contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Arzymatov</surname>
          <given-names>Kenenbek</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-2" contrib-type="author">
        <name>
          <surname>Sapronov</surname>
          <given-names>Andrey</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-3" contrib-type="author">
        <name>
          <surname>Belavin</surname>
          <given-names>Vladislav</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-4" contrib-type="author">
        <name>
          <surname>Gremyachikh</surname>
          <given-names>Leonid</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-5" contrib-type="author" corresp="yes" equal-contrib="yes">
        <name>
          <surname>Karpov</surname>
          <given-names>Maksim</given-names>
        </name>
        <email>mekarpov@hse.ru</email>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-6" contrib-type="author">
        <name>
          <surname>Ustyuzhanin</surname>
          <given-names>Andrey</given-names>
        </name>
        <xref ref-type="aff" rid="aff-1">1</xref>
      </contrib>
      <contrib id="author-7" contrib-type="author">
        <name>
          <surname>Tchoub</surname>
          <given-names>Ivan</given-names>
        </name>
        <xref ref-type="aff" rid="aff-2">2</xref>
      </contrib>
      <contrib id="author-8" contrib-type="author">
        <name>
          <surname>Ikoev</surname>
          <given-names>Artem</given-names>
        </name>
        <xref ref-type="aff" rid="aff-2">2</xref>
      </contrib>
      <aff id="aff-1"><label>1</label><institution>National Research University Higher School of Economics</institution>, <city>Moscow</city>, <country>Russia</country></aff>
      <aff id="aff-2"><label>2</label><institution>YADRO</institution>, <city>Moscow</city>, <country>Russia</country></aff>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Mei</surname>
          <given-names>Gang</given-names>
        </name>
      </contrib>
    </contrib-group>
    <pub-date pub-type="epub" date-type="pub" iso-8601-date="2020-05-04">
      <day>4</day>
      <month>5</month>
      <year iso-8601-date="2020">2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>6</volume>
    <elocation-id>e271</elocation-id>
    <history>
      <date date-type="received" iso-8601-date="2019-10-30">
        <day>30</day>
        <month>10</month>
        <year iso-8601-date="2019">2019</year>
      </date>
      <date date-type="accepted" iso-8601-date="2020-03-28">
        <day>28</day>
        <month>3</month>
        <year iso-8601-date="2020">2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>©2020 Arzymatov et al.</copyright-statement>
      <copyright-year>2020</copyright-year>
      <copyright-holder>Arzymatov et al.</copyright-holder>
      <license xlink:href="https://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, reproduction and adaptation in any medium and for any purpose provided that it is properly attributed. For attribution, the original author(s), title, publication source (PeerJ Computer Science) and either DOI or URL of the article must be cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="https://peerj.com/articles/cs-271"/>
    <abstract>
      <p>We introduce SANgo (Storage Area Network in the Go language)—a Go-based package for simulating the behavior of modern storage infrastructure. The software is based on the discrete-event modeling paradigm and captures the structure and dynamics of high-level storage system building blocks. The flexible structure of the package allows us to create a model of a real storage system with a configurable number of components. The granularity of the simulated system can be defined depending on the replicated patterns of actual system behavior. Accurate replication enables us to reach the primary goal of our simulator—to explore the stability boundaries of real storage systems. To meet this goal, SANgo offers a variety of interfaces for easy monitoring and tuning of the simulated model. These interfaces allow us to track the number of metrics of such components as storage controllers, network connections, and hard-drives. Other interfaces allow altering the parameter values of the simulated system effectively in real-time, thus providing the possibility for training a realistic digital twin using, for example, the reinforcement learning (RL) approach. One can train an RL model to reduce discrepancies between simulated and real SAN data. The external control algorithm can adjust the simulator parameters to make the difference as small as possible. SANgo supports the standard OpenAI gym interface; thus, the software can serve as a benchmark for comparison of different learning algorithms.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Storage system simulation</kwd>
      <kwd>Optimal control</kwd>
      <kwd>Reinforcement learning</kwd>
      <kwd>Storage array</kwd>
      <kwd>Discrete event simulation</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>Ministry of Science and Higher Education of Russian Federation within the framework of the Federal Target Program Research</funding-source>
      </award-group>
      <award-group id="fund-2">
        <funding-source>Development in Priority Areas of the Development of the Scientific and Technological Complex of Russia for 2014-2020 (unique identifier RFMEFI58117X0023, agreement 14.581.21.0023 on 03.10.2017)</funding-source>
      </award-group>
      <funding-statement>The research was carried out with the financial support of the Ministry of Science and Higher Education of Russian Federation within the framework of the Federal Target Program Research and Development in Priority Areas of the Development of the Scientific and Technological Complex of Russia for 2014-2020 (unique identifier RFMEFI58117X0023, agreement 14.581.21.0023 on 03.10.2017). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
  </article-meta>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>A storage system is a critical part of any IT infrastructure. A significant effort is put into developing reliability techniques and failure protection schemes of storage area network systems (SAN), which is an example of a general concept of storage infrastructure. There are various means of achieving and increasing the system’s reliability in terms of both accessibility and data preservation: replication of the system’s physical components or software solutions such as cluster management and RAID technology. The requirements for reliability and scalability of the SAN system result in its complexity, and consequently, the SAN architecture becomes challenging to supervise. A dedicated computer simulation model or a digital twin can be created to observe the behavior of the storage infrastructure virtually. Such computer model granularity depends on the simulation tasks, which may be performance optimization, failure diagnostics/prediction, or any other data-driven method for improving the storage system’s functionality.</p>
    <p>There are three qualitatively different approaches to create a SAN simulator:</p>
    <list list-type="simple" id="list-1">
      <list-item>
        <label> 1.</label>
        <p>a purely physical model with detailed hardware/software processes;</p>
      </list-item>
      <list-item>
        <label> 2.</label>
        <p>a pure Machine Learning (ML) model, based on data from previous SAN operations;</p>
      </list-item>
      <list-item>
        <label> 3.</label>
        <p>a hybrid of the above—when a simplified SAN architecture is implemented in simulation, and its parameters are adjusted by a trained Deep Learning algorithm.</p>
      </list-item>
    </list>
    <p>The first method gives the best results in simulation accuracy and has outstanding potential for extrapolation beyond the known operation domain. It predicts the system’s behavior with a configuration that might not have been implemented yet. However, this approach requires significant expertise in the field of storage architecture and a deep understanding of the software stack used on-board the SAN. It also takes enormous resources to implement the model with all the physical and logical details of the system components when trying to achieve the required simulation quality.</p>
    <p>The pure ML model is based on the data-driven approach, meaning that the model is trained on the data collected from the existing storage system. This method, on the contrary, may not require as much knowledge of the SAN structure and its operation principles. It may produce satisfactory accuracy of the simulated parameters, but lack the vital feature of scalability—the model is bonded with the data collected for particular SAN architecture and configuration and is unable to extrapolate beyond the scope of the training parameters.</p>
    <p>The hybrid simulation technique is a good trade-off in terms of the quality and depth of the domain expertise needed. It requires a relatively simple model of the SAN architecture, implementing only basic components with their functionalities and logical associations. The components must have effective adjustable parameters with meanings similar to the real ones, for example, the CPU clock speed or link bandwidth. These parameters must be adjusted by a reinforcement learning (RL) algorithm to improve the simulation quality. Similarly to the second approach, the hybrid approach needs real data for training.</p>
    <p>The development of SANgo was motivated by research aimed to create a monitoring tool able to diagnose the current SAN state and predict possible failures of its components. The diagnostic algorithms were designed to analyze the time series of different parameters collected during storage system operation. Since the algorithms are based on the ML paradigm, they needed plenty of training data, which, in this particular case, could only be obtained from a simulated environment. An essential requirement was the physical consistency of the synthetic data, and with reasonable efforts, it became plausible with the hybrid approach to the simulation.</p>
    <p>Such a coupling of the simplified SAN simulator with runtime control by an RL agent required a dedicated study. With many deep learning technologies available, one has to select an approach and its configuration to obtain the best combination of simulation quality, training effort, and speed. The corresponding study was conducted and presented in <xref rid="ref-14" ref-type="bibr">Karpov et al. (2018)</xref> and <xref rid="ref-31" ref-type="bibr">Sapronov et al. (2018)</xref>.</p>
    <p>The simulator is developed to provide a user with the simplicity of configuration. The user needs to specify the following files: a file that sets the architecture of a storage array in an XML format, a file that defines the impact of external effects (temperature, humidity, atmospheric pressure, and vibration) and finally a set of functions that defines the behavioral logic of each component of a storage array.</p>
    <p>There are several open-source storage system simulators available, for example, a software package “CODES project” (<xref rid="ref-5" ref-type="bibr">Cope et al., 2011</xref>; <xref rid="ref-24" ref-type="bibr">Mubarak et al., 2017</xref>) developed by a team of researchers from the Computer Science and Math department of Argonne National Laboratory and Rensselaer Polytechnic Institute (US, Illinois). The CODES simulator is based on the technologies of the Rensselaer’s Optimistic Simulation System (ROSS), which allows the parallel execution of an event-driven system that can significantly decrease the runtime of the simulation. The main uses of CODES include large-scale storage systems, scientific distributed applications, parallel and high-performance computing systems with high-load input/output operations, and computational complexity. Another simulator, the C++ based ns3 framework (<xref rid="ref-28" ref-type="bibr">Riley &amp; Henderson, 2010</xref>), is also popular among researchers. The general approach to network-like structure simulation is the OMNeT++ framework (<xref rid="ref-33" ref-type="bibr">Varga &amp; Hornig, 2008</xref>). Another work presents a simulation compliant with the fiber channel technology often used in contemporary SAN architectures, developed as the SANSim tool (<xref rid="ref-34" ref-type="bibr">Wang et al., 2003</xref>). More simulation method descriptions and studies dedicated to SAN system modeling can be found in <xref rid="ref-21" ref-type="bibr">Molero et al. (2000a)</xref>, <xref rid="ref-23" ref-type="bibr">Molero et al. (2001)</xref>, <xref rid="ref-26" ref-type="bibr">Perles et al. (2001)</xref>, <xref rid="ref-22" ref-type="bibr">Molero et al. (2000b)</xref> and <xref rid="ref-25" ref-type="bibr">Muknahallipatna et al. (2010)</xref>.</p>
  </sec>
  <sec>
    <title>Software Description</title>
    <p>SANgo is a modular framework for the Discrete Event Simulation (DES) of storage infrastructure. Its metadata description is given in <xref rid="table-1" ref-type="table">Table 1</xref>. DES is a method of simulating the behavior and performance of a real-life process, facility, or system. DES models the system as a series of events (e.g., a beginning/end of file writing, data block transfer or a start of TCP connection), which happens over time. The main assumption of the DES paradigm is the invariability and consistency in the modeled system between the events. It proves itself as a viable approach to effectively evaluating diverse sets of algorithms. More information can be found in <xref rid="ref-10" ref-type="bibr">Fishman (1978)</xref>.</p>
    <table-wrap id="table-1" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerjcs.271/table-1</object-id>
      <label>Table 1</label>
      <caption>
        <title>Code metadata.</title>
      </caption>
      <alternatives>
        <graphic xlink:href="peerj-cs-06-271-g005"/>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col span="1"/>
            <col span="1"/>
            <col span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">
                <bold>Nr.</bold>
              </th>
              <th rowspan="1" colspan="1">
                <bold>Code metadata</bold>
              </th>
              <th rowspan="1" colspan="1">
                <bold>Description</bold>
              </th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">C1</td>
              <td rowspan="1" colspan="1">Current code version</td>
              <td rowspan="1" colspan="1">v 0.8</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C2</td>
              <td rowspan="1" colspan="1">Permanent link to code/repository used for this code version</td>
              <td rowspan="1" colspan="1">
                <ext-link ext-link-type="uri" xlink:href="https://github.com/HSE-LAMBDA/sango">https://github.com/HSE-LAMBDA/sango</ext-link>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C3</td>
              <td rowspan="1" colspan="1">Code Ocean compute capsule</td>
              <td rowspan="1" colspan="1">
                <ext-link ext-link-type="uri" xlink:href="https://codeocean.com/capsule/9707185">https://codeocean.com/capsule/9707185</ext-link>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C4</td>
              <td rowspan="1" colspan="1">Legal Code License</td>
              <td rowspan="1" colspan="1">GPL</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C5</td>
              <td rowspan="1" colspan="1">Code versioning system used</td>
              <td rowspan="1" colspan="1">git</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C6</td>
              <td rowspan="1" colspan="1">Software code languages, tools, and services used</td>
              <td rowspan="1" colspan="1">Golang 1.8+, Python 3.6, Jupyter Notebook</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C7</td>
              <td rowspan="1" colspan="1">Compilation requirements, operating environments &amp; dependencies</td>
              <td rowspan="1" colspan="1">pytorch 0.4.0+, OpenAI/gym, libzeromq-dev</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C8</td>
              <td rowspan="1" colspan="1">If available, link to developer documentation/manual</td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">C9</td>
              <td rowspan="1" colspan="1">Support email for questions</td>
              <td rowspan="1" colspan="1">karzymatov@hse.ru</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
    </table-wrap>
    <p>SANgo provides the functionality to build a simple model for specific computing environments, especially storage area networks. The primary site of interest is the exploration of the behavior of the storage machine under stress testing or exploitation in the medium- or long-term, for observing failures of its components.</p>
    <p>In SANgo, each file to be written to the storage is modeled as an independent entity that has corresponding attributes, such as name, size, and block size. The fundamental principle of the simulation process is resource modeling and control. SANgo focuses on algorithms that have the following common objective: assigning a set of tasks to a set of resources in a way that is optimal with respect to some metric. The three basic types of resources are provided: CPU, network interface, and storage. Other types are built upon these basic ones. For example, a storage controller, PCIe-fabric can use CPU type as its basis; RAM, SSD, hard-drives, and JBOD (as a collection of hard-drives) use storage type to implement additional functionality. An example of SAN architecture with these primary resources collected into SAN components is shown in <xref ref-type="fig" rid="fig-1">Fig. 1</xref>.</p>
    <fig id="fig-1" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerjcs.271/fig-1</object-id>
      <label>Figure 1</label>
      <caption>
        <p>An example of SAN architecture implemented in the SANgo framework.</p>
      </caption>
      <graphic xlink:href="peerj-cs-06-271-g001"/>
    </fig>
    <p>The SANgo core library is written in the Go programming language. This choice was made because Go can efficiently create lightweight threads, so-called goroutines. We use a goroutine as a representation of the SAN component logic that a user wants to simulate. In other words, the user creates a function and specifies a sequence of actions and/or behaviors that a resource should follow. Such functions are given in <xref rid="table-2" ref-type="table">Table 2</xref>. When sequences of ‘behaviors’ are specified, the simulation starts.</p>
    <sec>
      <title>Simulation sequence</title>
      <p>The general algorithm of the SANgo operation is shown in <xref ref-type="fig" rid="fig-2">Fig. 2</xref>. The entry point is the definition of the input parameters: the storage system topology and component parameters and the definition of the load scenario. The latter means the sequence of I/O requests from a virtual client that the simulated SAN must process. Depending on the load scenario, a specific process (component activity) and mode (asynchronous or synchronous) are chosen. Further, an option of component failure, either spontaneous or planned, is processed. With or without this failure, the process of event simulation continues until the load scenario is complete. During each simulation stage, metrics are collected from the components and written out. These metrics describe the state of the simulated system and provide primary information on its operation. Unlike other simulators, the framework allows online adjustments of the components parameters. This feature makes possible coupling with an RL agent as described in Section “Illustrative Examples”.</p>
      <table-wrap id="table-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerjcs.271/table-2</object-id>
        <label>Table 2</label>
        <caption>
          <title>Functions that define the simulated behaviors of SAN components.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-cs-06-271-g006"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Component name</th>
                <th rowspan="1" colspan="1">Behavior</th>
                <th rowspan="1" colspan="1">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="6" colspan="1">Contoller</td>
                <td rowspan="1" colspan="1">
                  <monospace>SendPacketSync</monospace>
                </td>
                <td rowspan="1" colspan="1">Send a <monospace>packet</monospace> to the <monospace>dest</monospace> and wait until the end of transmission (two side communication)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>SendPacketAsync</monospace>
                </td>
                <td rowspan="1" colspan="1">Send a packet without waiting for the end of the transmission (two side communication)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>BroadCastSendPacket</monospace>
                </td>
                <td rowspan="1" colspan="1">Send a broadcasting message with a <monospace>packet</monospace> to all processes which listen to ‘dest‘ address</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>DetachedSendPacket</monospace>
                </td>
                <td rowspan="1" colspan="1">Send a packet and wait until the end of the transmission (one side communication)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>ExecutePacket</monospace>
                </td>
                <td rowspan="1" colspan="1">Process packet</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>Wait</monospace>
                </td>
                <td rowspan="1" colspan="1">Turn on waiting mode</td>
              </tr>
              <tr>
                <td rowspan="4" colspan="1">Hard-drive</td>
                <td rowspan="1" colspan="1">
                  <monospace>WriteAsync</monospace>
                </td>
                <td rowspan="2" colspan="1">Write data blocks in a logical volume in an <monospace>async/sync</monospace> mode</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>WriteSync</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>ReadAsync</monospace>
                </td>
                <td rowspan="2" colspan="1">Read data blocks from a logical volume in an <monospace>async/sync</monospace> mode</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>ReadSync</monospace>
                </td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <fig id="fig-2" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerjcs.271/fig-2</object-id>
        <label>Figure 2</label>
        <caption>
          <p>SANgo discrete event simulation workflow.</p>
        </caption>
        <graphic xlink:href="peerj-cs-06-271-g002"/>
      </fig>
    </sec>
    <sec>
      <title>Software functionalities</title>
      <p><bold>Online configuration</bold> The simulation models created within the SANgo framework are configurable during runtime. It is an important feature, created intentionally, for coupling with a controlling agent and implementing the hybrid simulation method. The details of such cooperation can be found in Section “Illustrative Examples”.</p>
      <p><bold>Load generation</bold> One of the main interests is how a storage array behaves under different loads. The complete list of the fully measured output metrics is shown in <xref rid="table-3" ref-type="table">Table 3</xref>.</p>
      <table-wrap id="table-3" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.7717/peerjcs.271/table-3</object-id>
        <label>Table 3</label>
        <caption>
          <title>Output characteristics.</title>
        </caption>
        <alternatives>
          <graphic xlink:href="peerj-cs-06-271-g007"/>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
              <col span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Parameters</th>
                <th rowspan="1" colspan="1">Component name</th>
                <th rowspan="1" colspan="1">Output name</th>
                <th rowspan="1" colspan="1">Description</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="29" colspan="1">Inner</td>
                <td rowspan="7" colspan="1">Storage controller</td>
                <td rowspan="1" colspan="1">
                  <monospace>cpu_usr</monospace>
                </td>
                <td rowspan="1" colspan="1">User CPU utilization, %</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>cpu_sys</monospace>
                </td>
                <td rowspan="1" colspan="1">System CPU utilization, %</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>cpu_idle</monospace>
                </td>
                <td rowspan="1" colspan="1">CPU idle time, %</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>mem_used_MB</monospace>
                </td>
                <td rowspan="1" colspan="1">Used RAM memory, <monospace>MB</monospace></td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>mem_free_MB</monospace>
                </td>
                <td rowspan="1" colspan="1">Free RAM memory, <monospace>MB</monospace></td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>cpu_temp</monospace>
                </td>
                <td rowspan="1" colspan="1">CPU temperature, °C</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>fan_speed</monospace>
                </td>
                <td rowspan="1" colspan="1">Fan angular velocity, <monospace>Hz</monospace></td>
              </tr>
              <tr>
                <td rowspan="2" colspan="1">Network interface</td>
                <td rowspan="1" colspan="1">
                  <monospace>RxKB</monospace>
                </td>
                <td rowspan="1" colspan="1">Input traffic through interface, <monospace>MB</monospace></td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>TxKB</monospace>
                </td>
                <td rowspan="1" colspan="1">Output traffic through interface, <monospace>MB</monospace></td>
              </tr>
              <tr>
                <td rowspan="19" colspan="1">Hard drive</td>
                <td rowspan="1" colspan="1">
                  <monospace>tota_cap_MB</monospace>
                </td>
                <td rowspan="1" colspan="1">Raw capacity, MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>used_cap_MB</monospace>
                </td>
                <td rowspan="1" colspan="1">Used capacity, MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>alloc_MB</monospace>
                </td>
                <td rowspan="1" colspan="1">Memory used by system, MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>len_MB</monospace>
                </td>
                <td rowspan="1" colspan="1">Requested volume size, MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>r_KBps</monospace>
                </td>
                <td rowspan="2" colspan="1">Disk read/write speed, KB/s</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>w_KBps</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>r_ops</monospace>
                </td>
                <td rowspan="2" colspan="1">Read/write operations per second, IOPS</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>w_ops</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>r_await_ms</monospace>
                </td>
                <td rowspan="1" colspan="1">Average read/write request</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>w_await_ms</monospace>
                </td>
                <td rowspan="1" colspan="1">processing time, ms</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>ccrm</monospace>
                </td>
                <td rowspan="1" colspan="1">Number of denied requests, n</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>rrqm</monospace>
                </td>
                <td rowspan="2" colspan="1">Number of read/write requests, n</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>wrqm</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>avgrq_sz</monospace>
                </td>
                <td rowspan="1" colspan="1">Average size of request, n</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>avgqu_sz</monospace>
                </td>
                <td rowspan="1" colspan="1">Average client queue size, n</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>MB_read</monospace>
                </td>
                <td rowspan="2" colspan="1">Total amount of read/write data, MB</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>MB_wrtn</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>blk_read</monospace>
                </td>
                <td rowspan="1" colspan="1">Number of read/write blocks</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>blk_wrtn</monospace>
                </td>
                <td rowspan="1" colspan="1">with given size, n</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Each component</td>
                <td rowspan="1" colspan="1">Health state</td>
                <td rowspan="1" colspan="1">One of <monospace>OK</monospace>, <monospace>MISSED</monospace>, <monospace>BAD</monospace> or <monospace>LOST</monospace></td>
              </tr>
              <tr>
                <td rowspan="4" colspan="1">Outer</td>
                <td rowspan="4" colspan="1">Atmospheric</td>
                <td rowspan="1" colspan="1">
                  <monospace>humidity</monospace>
                </td>
                <td rowspan="4" colspan="1">Current values of humidity, atmosphere pressure, temperature, and vibration meausured inside storage system %, <monospace>kPa</monospace>, °C, <monospace>Hz</monospace> respectively</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>atm_pressure</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>temperature</monospace>
                </td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">
                  <monospace>vibration</monospace>
                </td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
      <p><bold>Output format</bold>. During the runtime of the simulation, the program opens a file descriptor and saves the simulated metrics in a JSON (<xref rid="ref-6" ref-type="bibr">Crockford, 2018</xref>) array format. Each item in the array is a key-value representation of the resource objects (storage controllers, links, and hard-drives) created in the simulation. Go allows users to change the encoding of each object by the format string stored under the “json” key in the resource field’s tag. This language feature allows the user to additional mute parameters. Together with native struct embedding (inheritance), it is possible to adapt the output format needed for different hardware configurations easily.</p>
      <p><bold>Anomalies</bold>. For the simplified simulation, we chose to split the failure factors into two categories: internal and external. The former relates to the component operation mode, its load, and neighboring component conditions. The internal factors are better described by the RL counterpart of the SANgo, which takes into account operation history and composite state of the system. For the latter category, we consider four ways in which the external parameters could affect the failure of parts of the system, such as the impact of temperature, humidity, atmospheric pressure, and vibration level.</p>
      <p><bold>Temperature</bold>. There are multiple failure mechanisms in electronic components related to their temperature: electromigration (<xref rid="ref-8" ref-type="bibr">d’Heurle, 1971</xref>), high temperature stress migration (<xref rid="ref-1" ref-type="bibr">Aoyagi, 2005</xref>), thermal fatigue (<xref rid="ref-36" ref-type="bibr">Zhou &amp; Hashida, 2002</xref>), mechanical stresses induced by differential thermal expansion of materials (<xref rid="ref-27" ref-type="bibr">Rabiei &amp; Evans, 2000</xref>), the drift of parameters (frequency, current, voltage) of devices (<xref rid="ref-27" ref-type="bibr">Rabiei &amp; Evans, 2000</xref>), solder joint failures (<xref rid="ref-35" ref-type="bibr">Yeh et al., 2002</xref>), ionic effects (<xref rid="ref-2" ref-type="bibr">Berg &amp; Paulson, 1980</xref>), increase in leakage current (<xref rid="ref-11" ref-type="bibr">Hamidi &amp; Coquery, 1997</xref>) and bond-wire fatigue (<xref rid="ref-29" ref-type="bibr">Roesch &amp; Jittinorasett, 2004</xref>; <xref rid="ref-19" ref-type="bibr">Matsunaga &amp; Uegai, 2006</xref>). The detailed review of electronics failure modes that are influenced by temperature is given in <xref rid="ref-3" ref-type="bibr">Blanks (1990)</xref>. The temperature of individual simulated components we consider as an internal factor and, therefore, not implement in the SANgo code. Inclusion of all or even some of these mechanisms into simulation would require a very detailed simulation of the circuit boards and electronic parts of the SAN components.</p>
      <p>In general, the Arrhenius model (<xref rid="ref-17" ref-type="bibr">Lakshminarayanan &amp; Sriraam, 2014</xref>) is a good approximation for exact failure mechanisms, including electromigration, corrosion, and certain manufacturing defects when dealing with slowly changing ambient temperature. The model is derived from the observed dependence of chemical-reaction rates on temperature changes. We use the Arrhenius model solely to take into account the external factor of ambient temperature for the failure rate of the electronic components. According to this model, the reaction acceleration rate is given by: <disp-formula id="eqn-1"><label>(1)</label><alternatives><graphic xlink:href="peerj-cs-06-271-e001.jpg" mimetype="image" mime-subtype="png" position="float" orientation="portrait"/><tex-math id="M1">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{eqnarray*}K=A\exp \nolimits \{{E}_{a}/k[1/{T}_{ref}-1/T]\},\end{eqnarray*}\end{document}</tex-math><mml:math id="mml-eqn-1"><mml:mstyle displaystyle="true"><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mo class="qopname">exp</mml:mo><mml:mrow><mml:mfenced separators="" open="{" close="}"><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>∕</mml:mo><mml:mi>k</mml:mi><mml:mrow><mml:mfenced separators="" open="[" close="]"><mml:mn>1</mml:mn><mml:mo>∕</mml:mo><mml:msub><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mo>∕</mml:mo><mml:mi>T</mml:mi></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></alternatives></disp-formula>
</p>
      <p>where <italic>K</italic> is the resulting failure rate, <italic>A</italic> is a rate constant empirically derived, <italic>E</italic><sub><italic>a</italic></sub> is the activation energy (<italic>eV</italic>), <italic>k</italic> is the Boltzmann’s constant (8.6 × 10<sup>−5</sup><italic>eV</italic>∕<italic>K</italic>), <italic>T</italic> is the ambient temperature (K) and <italic>T</italic><sub><italic>ref</italic></sub> is the component’s reference temperature (K).</p>
      <p>For non-electronic components (such as hard-drives), the failure rate is calculated based on fail-safe operation time <italic>T</italic> (<xref rid="ref-30" ref-type="bibr">Sankar, Shaw &amp; Vaid, 2011</xref>). Using the maximum likelihood method, <italic>β</italic> (form factor), <italic>ζ</italic> (scale coefficient) the failure probability is estimated: <disp-formula id="eqn-2"><label>(2)</label><alternatives><graphic xlink:href="peerj-cs-06-271-e002.jpg" mimetype="image" mime-subtype="png" position="float" orientation="portrait"/><tex-math id="M2">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym} 
\usepackage{amsfonts} 
\usepackage{amssymb} 
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}\begin{eqnarray*}{K}_{\beta ,\zeta }= \frac{\beta {T}^{\beta -1}\exp \nolimits -{ \frac{T}{\zeta } }^{\beta }}{{\zeta }^{\beta }} ,\end{eqnarray*}\end{document}</tex-math><mml:math id="mml-eqn-2"><mml:mstyle displaystyle="true"><mml:msub><mml:mrow><mml:mi>K</mml:mi></mml:mrow><mml:mrow><mml:mi>β</mml:mi><mml:mo>,</mml:mo><mml:mi>ζ</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>β</mml:mi><mml:msup><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>β</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo class="qopname"> exp</mml:mo><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mfrac><mml:mrow><mml:mi>T</mml:mi></mml:mrow><mml:mrow><mml:mi>ζ</mml:mi></mml:mrow></mml:mfrac></mml:mrow><mml:mrow><mml:mi>β</mml:mi></mml:mrow></mml:msup></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>ζ</mml:mi></mml:mrow><mml:mrow><mml:mi>β</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfrac><mml:mo>,</mml:mo></mml:mstyle></mml:math></alternatives></disp-formula>where <italic>β</italic> &gt; 0, <italic>ζ</italic> &gt; 0, <italic>T</italic> &gt; 0.</p>
      <p><italic>Humidity</italic>. <italic>Atmospheric pressure</italic>. <italic>Vibration</italic>. The impacts of these three external factors are modeled similarly. The predefined mappings from the environment factor value to failure rates for humidity, pressure, and vibration are taken from <xref rid="ref-20" ref-type="bibr">Mitchel (1996)</xref>, <xref rid="ref-32" ref-type="bibr">Strom et al. (2007)</xref> and <xref rid="ref-9" ref-type="bibr">Dutta &amp; Barnard (2017)</xref> correspondingly. At each timestamp <italic>t</italic> of the simulation, current values of <monospace>humidity</monospace>, <monospace>pressure</monospace>, and <monospace>vibration</monospace> are taken. Then the corresponding failure rates are calculated using the said relationships.</p>
      <p>For all of the external factors the failure-triggering pseudo-code looks like:</p>
    </sec>
  </sec>
  <sec>
    <title>Illustrative Examples</title>
    <p>An example of the SANgo application for the simulation of a mid-range storage array with basic structure is described below. The simulated architecture was configured with parameters corresponding to the real SAN components parameters. Most underlying effects of the SAN functioning, such as the operating system and software logic, load distribution algorithms, and other more complex hardware details are not described by the simulator. In order to better approximate the behavior of the real-life system, SANgo was coupled with DeepController (DC)—an RL optimizer. The scheme of cooperation between SANgo and DC is shown in <xref ref-type="fig" rid="fig-3">Fig. 3</xref>.</p>
    <p>DC represents the RL and deep learning paradigm for controlling the simulator by tuning the effective parameters of its components. The simulation process is split into two phases.</p>
    <def-list id="dl1">
      <def-item>
        <term> Training phase</term>
        <def>
          <p>: DC takes as input the real SAN data (load and metrics), and the initial effective parameters of SANgo. By varying the effective parameters, DC learns what needs to be done to obtain a simulator state, similar to the real SAN under the same load conditions. The output for this phase is a trained model with corresponding neural network (NN) weights.</p>
        </def>
      </def-item>
      <def-item>
        <term>Control phase</term>
        <def>
          <p>: during the actual simulation, DC takes as input the load and current effective parameters and simulated metrics. The corrections to the effective SANgo parameters are given to the output for every next simulation step.</p>
        </def>
      </def-item>
    </def-list>
    <p>In this context, it is important to note that a special wrapper was implemented to create an OpenAI Gym environment (<xref rid="ref-4" ref-type="bibr">Brockman et al., 2016</xref>) using DC, SANgo, real SAN data, and initial effective parameters. Such an environment provides an advantageous opportunity to use multiple state-of-the-art RL-algorithm libraries, implemented in the OpenAI toolkit (<xref rid="ref-7" ref-type="bibr">Dhariwal et al., 2017</xref>; <xref rid="ref-12" ref-type="bibr">Hill et al., 2018</xref>; <xref rid="ref-16" ref-type="bibr">Kolesnikov, 2018</xref>). In particular, we used a DDPG model to train DC as one of the efficient approaches for Continuous Control problem (<xref rid="ref-18" ref-type="bibr">Lillicrap et al., 2015</xref>). Also, the obtained gym-environment could be used as a benchmark for other RL-algorithms, especially since there are not so many environments for digital twins (<xref rid="ref-15" ref-type="bibr">Koch et al., 2019</xref>).</p>
    <fig id="fig-3" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerjcs.271/fig-3</object-id>
      <label>Figure 3</label>
      <caption>
        <p>The hybrid simulation scheme using OpenAI/gym interfaces.</p>
      </caption>
      <graphic xlink:href="peerj-cs-06-271-g003"/>
    </fig>
    <p>The real SAN data were used to validate the behavior of the hybrid simulator. A sequence of load requests was generated on the real storage system prototype together with artificially induced failures of one of the components: a storage controller, a network interface, or a storage device. The labeled metrics of the healthy and broken systems were collected and used to train the hybrid simulator with the same workload and failure scenarios. In the end, the simulated metrics are compared against the real ones. An example of one of the metrics –the storage controller CPU load is shown in <xref ref-type="fig" rid="fig-4">Fig. 4</xref>.</p>
    <fig id="fig-4" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerjcs.271/fig-4</object-id>
      <label>Figure 4</label>
      <caption>
        <title>Comparison of the CPU load metrics between simulated (A) and real data (B).</title>
        <p>The periods marked ‘Failure’ correspond to a storage processor being offline.</p>
      </caption>
      <graphic xlink:href="peerj-cs-06-271-g004"/>
    </fig>
    <p>One can observe a qualitative agreement between the simulated and the real data. The more component parameters added, the closer the DC model distributions were to the real data.</p>
    <p>For generating data in this scenario, the simulator was launched by the following command:</p>
    <p>In this command snippet, several flags are used. They define the following behavior of the simulation. It runs for 210000 s, writes 10 files, each with size 10 GB, uses 1 job, a topology information is provided in <monospace>virt_setup.xml</monospace>, the external dependencies are defined in <monospace>atm_control.json</monospace>, <monospace>packet.json</monospace> provides a packet block timing information, and finally, output data is written to the <monospace>output.json</monospace> file. There are other flags available to configure the simulator functionality. A complete list of execution options is given in <xref rid="table-4" ref-type="table">Table 4</xref>.</p>
    <p>The hardware parameters configuration is an essential step in the SANgo setup. For example, we used empirically obtained parameters of the storage devices affecting the speed of writing and reading data using Flexible I/O tester. We performed data transfer in different modes, such as reading, writing, random reading, random writing, reading/writing, and random reading/writing. These modes were combined with different data block sizes—from 2 Kb to 2<sup>6</sup> Gb to cover a full range of possible IO conditions. The FIO tool allows user to directly measure some parameters, such as latency, transmission, and processing time. Other parameters, such as rate and seek time, had to be calculated from the parameters that FIO allowed to measure. An example of hard drive parameter values for 8 Kb block size, measured with such an approach, is provided in <xref rid="table-5" ref-type="table">Table 5</xref>.</p>
  </sec>
  <sec>
    <title>Impact</title>
    <p>The SANgo simulator helps researchers to address several issues in the area of SAN architecture development. The primary purpose of the developed SAN digital twin (<xref rid="ref-31" ref-type="bibr">Sapronov et al., 2018</xref>), in which the SANgo is a critical component, is to provide realistic data for the SAN optimization. In conditions where the real data are scarce, for example, during the early stages of development, the synthetic data may help to improve the system’s stability, study its behavior under different load regimes and observe how the system reacts to various failures of its components. Besides, synthetic data allows the development of diagnostic and prediction tools for system malfunction based on data-driven algorithms available in the Machine Learning domain (<xref rid="ref-13" ref-type="bibr">Hushchyn, Sapronov &amp; Ustyuzhanin, 2019</xref>). The SAN architecture optimization and parameter tuning is another possible application of such a digital twin.</p>
    <table-wrap id="table-4" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerjcs.271/table-4</object-id>
      <label>Table 4</label>
      <caption>
        <title>A complete description of the SANgo execution options.</title>
      </caption>
      <alternatives>
        <graphic xlink:href="peerj-cs-06-271-g008"/>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col span="1"/>
            <col span="1"/>
            <col span="1"/>
            <col span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Type</th>
              <th rowspan="1" colspan="1">Flag’s name</th>
              <th rowspan="1" colspan="1">Type</th>
              <th rowspan="1" colspan="1">Description</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="3" colspan="1">Common</td>
              <td rowspan="1" colspan="1">
                <monospace>-sim_run</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">Total simulation runtime</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-disk_amount</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>int</monospace>
              </td>
              <td rowspan="1" colspan="1">Amount of hard-drives</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-num_jobs</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>int</monospace>
              </td>
              <td rowspan="1" colspan="1">The analog of the <monospace>fio</monospace>
<monospace>numjobs</monospace></td>
            </tr>
            <tr>
              <td rowspan="6" colspan="1">Input files</td>
              <td rowspan="1" colspan="1">
                <monospace>-platform</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-packet</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1">Data block’s timing parameters</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-atm_control</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1">A change of atmosphere parameters over time</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-atm_dep</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1">Impact of atmosphere parameters on the system components</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-client</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-num jobs config</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1">Client’s load &amp; quota specification</td>
            </tr>
            <tr>
              <td rowspan="6" colspan="1">Load</td>
              <td rowspan="1" colspan="1">
                <monospace>-file_amount_w</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>int</monospace>
              </td>
              <td rowspan="1" colspan="1">Number of files to be written</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-file_size_w</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">Write files size range</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-load_range_w</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">File write rate</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-file_amount_r</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>int</monospace>
              </td>
              <td rowspan="1" colspan="1">Number of files to be read</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-file_size_r</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">Read files size range</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-load_range_r</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">File read rate</td>
            </tr>
            <tr>
              <td rowspan="4" colspan="1">Anomaly</td>
              <td rowspan="1" colspan="1">
                <monospace>-anomaly_type</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1">Controller, link, disk type anomaly</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-anomaly_amount</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>int</monospace>
              </td>
              <td rowspan="1" colspan="1">Number of anomalies</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-anomaly_tim_range</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">Anomaly ocurring rate</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-anomaly_duration</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">Duration of anomalies</td>
            </tr>
            <tr>
              <td rowspan="6" colspan="1">DC<sup>1</sup> mode</td>
              <td rowspan="1" colspan="1">
                <monospace>-controlling_mode</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>bool</monospace>
              </td>
              <td rowspan="1" colspan="1">Enabling DC</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-host</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>string</monospace>
              </td>
              <td rowspan="1" colspan="1">Hostname</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-port</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>int</monospace>
              </td>
              <td rowspan="1" colspan="1">A communication endpoint</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-protocol</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>tcp,</monospace>
              </td>
              <td rowspan="1" colspan="1">SANgo-DC communication protocol</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1"/>
              <td rowspan="1" colspan="1">
                <monospace>udp</monospace>
              </td>
              <td rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>-delay</monospace>
              </td>
              <td rowspan="1" colspan="1">
                <monospace>float</monospace>
              </td>
              <td rowspan="1" colspan="1">Delay in messaging between GT and DC</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
    </table-wrap>
    <p>For example, the SANgo code was used to produce synthetic data for training diagnostic and predictive software. The software relies on data-driven algorithms to assess the state of the storage system, diagnose its malfunction, and calculate the probability of failures in the near future. Using SANgo helps to significantly reduce the amount of collected real SAN operation data, which is quite expensive in most cases.</p>
    <p>The application of SANgo software is somewhat limited outside the intended scope. The simulator intentionally describes the storage infrastructure in low detail and, therefore, can be used only for deterministic and approximate emulation of the SAN operation. However, the general approach of combining the basic simulator with an RL agent is very scalable for other uses where one needs to simulate a complex apparatus or a system with many loosely controlled parameters, but with available real data collected during its operation.</p>
    <table-wrap id="table-5" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.7717/peerjcs.271/table-5</object-id>
      <label>Table 5</label>
      <caption>
        <title>An example of hard drive parameter values for 8 Kb block size, where “t” is time in seconds.</title>
        <p>.</p>
      </caption>
      <alternatives>
        <graphic xlink:href="peerj-cs-06-271-g009"/>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col span="1"/>
            <col span="1"/>
            <col span="1"/>
            <col span="1"/>
            <col span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">transmission t</th>
              <th rowspan="1" colspan="1">latency t</th>
              <th rowspan="1" colspan="1">read processing t</th>
              <th rowspan="1" colspan="1">write processing t</th>
              <th rowspan="1" colspan="1">sequential read rate t</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">3.96e−05</td>
              <td rowspan="1" colspan="1">0.01784</td>
              <td rowspan="1" colspan="1">0.01229</td>
              <td rowspan="1" colspan="1">0.02331</td>
              <td rowspan="1" colspan="1">0.00065</td>
            </tr>
          </tbody>
        </table>
      </alternatives>
    </table-wrap>
    <p>The SANgo alone has limited precision in terms of simulation quality. The storage system model describes only high-level components and provides a very simplified description of their failure mechanics. However, the strong side of our approach is the adjustable parameters of these components. When the parameters are controlled by an RL-trained agent, the simulation quality can be improved. At the same time, the physical model within the SANgo framework ensures the results are interpretable and physically consistent.</p>
    <p>While the software itself is not used in any commercial setting, the product of its application, the diagnostic and prediction tool for the SAN malfunction, is bundled with an undisclosed commercial storage system. The tool is developed and trained using real data and synthetic data obtained from the digital twin of the SAN.</p>
  </sec>
  <sec>
    <title>Conclusion</title>
    <p>A flexible framework SANgo for the creation of an event-driven storage simulator was presented. Within this framework, the storage system models have simplified design, but researchers are allowed to adjust the components’ effective parameters during runtime to improve the quality of the simulation. This approach complies with a hybrid simulation method, where a reinforcement learning algorithm adjusts a physical model.</p>
    <p>The SANgo framework allows the user to emulate the I/O load on the storage system, as well as failures of its components. It was initially designed to work in tandem with the DeepController program, implementing the RL algorithm. The simulator can also be used as a benchmark for comparison of different learning algorithms, due to support of the OpenAI/gym interface.</p>
    <p>The purpose of such a hybrid simulator is to serve as a storage system digital twin and provide large amounts of synthetic data. This data can be further used for storage system optimization, diagnostic, and failure prediction.</p>
  </sec>
</body>
<back>
  <sec sec-type="additional-information">
    <title>Additional Information and Declarations</title>
    <fn-group content-type="competing-interests">
      <title>Competing Interests</title>
      <fn id="conflict-1" fn-type="COI-statement">
        <p>Ivan Tchoub and Artem Ikoev are employees of YADRO Inc., Russia. The authors declare there are no competing interests.</p>
      </fn>
    </fn-group>
    <fn-group content-type="author-contributions">
      <title>Author Contributions</title>
      <fn id="contribution-1" fn-type="con">
        <p><xref ref-type="contrib" rid="author-1">Kenenbek Arzymatov</xref> conceived and designed the experiments, performed the experiments, performed the computation work, prepared figures and/or tables, and approved the final draft.</p>
      </fn>
      <fn id="contribution-2" fn-type="con">
        <p><xref ref-type="contrib" rid="author-2">Andrey Sapronov</xref> conceived and designed the experiments, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
      <fn id="contribution-3" fn-type="con">
        <p><xref ref-type="contrib" rid="author-3">Vladislav Belavin</xref> performed the experiments, performed the computation work, prepared figures and/or tables, and approved the final draft.</p>
      </fn>
      <fn id="contribution-4" fn-type="con">
        <p><xref ref-type="contrib" rid="author-4">Leonid Gremyachikh</xref> performed the experiments, prepared figures and/or tables, and approved the final draft.</p>
      </fn>
      <fn id="contribution-5" fn-type="con">
        <p><xref ref-type="contrib" rid="author-5">Maksim Karpov</xref> analyzed the data, prepared figures and/or tables, and approved the final draft.</p>
      </fn>
      <fn id="contribution-6" fn-type="con">
        <p><xref ref-type="contrib" rid="author-6">Andrey Ustyuzhanin</xref> analyzed the data, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
      <fn id="contribution-7" fn-type="con">
        <p><xref ref-type="contrib" rid="author-7">Ivan Tchoub</xref> and <xref ref-type="contrib" rid="author-8">Artem Ikoev</xref> conceived and designed the experiments, authored or reviewed drafts of the paper, and approved the final draft.</p>
      </fn>
    </fn-group>
    <fn-group content-type="other">
      <title>Data Availability</title>
      <fn id="addinfo-1">
        <p>The following information was supplied regarding data availability:</p>
        <p>SANgo, a discrete-event based simulator, is available at Code Ocean: <ext-link ext-link-type="uri" xlink:href="https://codeocean.com/capsule/9707185">https://codeocean.com/capsule/9707185</ext-link>.</p>
        <p>Code is available at GitHub: <ext-link ext-link-type="uri" xlink:href="https://github.com/HSE-LAMBDA/sango">https://github.com/HSE-LAMBDA/sango</ext-link>.</p>
      </fn>
    </fn-group>
  </sec>
  <ref-list content-type="authoryear">
    <title>References</title>
    <ref id="ref-1">
      <label>Aoyagi (2005)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Aoyagi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <year>2005</year>
        <article-title>Temperature characteristics of stress-induced migration based on atom migration</article-title>
        <source>Journal of Vacuum Science &amp; Technology B: Microelectronics and Nanometer Structures Processing, Measurement, and Phenomena</source>
        <volume>23</volume>
        <issue>6</issue>
        <fpage>2384</fpage>
        <lpage>2389</lpage>
        <pub-id pub-id-type="doi">10.1116/1.2123447</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-2">
      <label>Berg &amp; Paulson (1980)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berg</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Paulson</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <year>1980</year>
        <article-title>Chip corrosion in plastic packages</article-title>
        <source>Microelectronics Reliability</source>
        <volume>20</volume>
        <issue>3</issue>
        <fpage>247</fpage>
        <lpage>263</lpage>
        <pub-id pub-id-type="doi">10.1016/0026-2714(80)90204-8</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-3">
      <label>Blanks (1990)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blanks</surname>
            <given-names>HS</given-names>
          </name>
        </person-group>
        <year>1990</year>
        <article-title>Arrhenius and the temperature dependence of non-constant failure rate</article-title>
        <source>Quality and Reliability Engineering International</source>
        <volume>6</volume>
        <issue>4</issue>
        <fpage>259</fpage>
        <lpage>265</lpage>
        <pub-id pub-id-type="doi">10.1002/qre.4680060408</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-4">
      <label>Brockman et al. (2016)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brockman</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Cheung</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Pettersson</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Schneider</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schulman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zaremba</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <year>2016</year>
        <article-title>OpenAI Gym</article-title>
        <source>CoRR</source>
        <comment>abs/1606.01540</comment>
      </element-citation>
    </ref>
    <ref id="ref-5">
      <label>Cope et al. (2011)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Cope</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Carns</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Carothers</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Ross</surname>
            <given-names>RH</given-names>
          </name>
        </person-group>
        <year>2011</year>
        <article-title>CODES: enabling co-design of multi-layer exascale storage architectures</article-title>
        <uri xlink:href="https://www.mcs.anl.gov/uploads/cels/papers/P1884.pdf">https://www.mcs.anl.gov/uploads/cels/papers/P1884.pdf</uri>
      </element-citation>
    </ref>
    <ref id="ref-6">
      <label>Crockford (2018)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <name>
            <surname>Crockford</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <year>2018</year>
        <data-title>ETF RFC 8259 The javascript object notation (JSON) data interchange format</data-title>
        <uri xlink:href="https://www.json.org/">https://www.json.org/</uri>
      </element-citation>
    </ref>
    <ref id="ref-7">
      <label>Dhariwal et al. (2017)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <name>
            <surname>Dhariwal</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hesse</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Klimov</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Nichol</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Plappert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Radford</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Schulman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sidor</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhokhov</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <year>2017</year>
        <data-title>OpenAI Baselines. GitHub repository. GitHub</data-title>
        <uri xlink:href="https://github.com/openai/baselines">https://github.com/openai/baselines</uri>
      </element-citation>
    </ref>
    <ref id="ref-8">
      <label>d’Heurle (1971)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>D’Heurle</surname>
            <given-names>FM</given-names>
          </name>
        </person-group>
        <year>1971</year>
        <article-title>Electromigration and failure in electronics: an introduction</article-title>
        <source>Proceedings of the IEEE</source>
        <volume>59</volume>
        <issue>10</issue>
        <fpage>1409</fpage>
        <lpage>1418</lpage>
        <pub-id pub-id-type="doi">10.1109/PROC.1971.8447</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-9">
      <label>Dutta &amp; Barnard (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dutta</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Barnard</surname>
            <given-names>AR</given-names>
          </name>
        </person-group>
        <year>2017</year>
        <article-title>Performance of hard disk drives in high noise environments</article-title>
        <source>Noise Control Engineering Journal</source>
        <volume>65</volume>
        <issue>5</issue>
        <fpage>386</fpage>
        <lpage>395</lpage>
        <pub-id pub-id-type="doi">10.3397/1/376555</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-10">
      <label>Fishman (1978)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Fishman</surname>
            <given-names>GS</given-names>
          </name>
        </person-group>
        <year>1978</year>
        <article-title>Principles of discrete event simulation</article-title>
        <source>Wiley Series on Systems Engineering and Analysis</source>
        <publisher-name>John Wily &amp; Sons</publisher-name>
        <publisher-loc>New York</publisher-loc>
        <fpage>23</fpage>
        <lpage>58</lpage>
      </element-citation>
    </ref>
    <ref id="ref-11">
      <label>Hamidi &amp; Coquery (1997)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hamidi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Coquery</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <year>1997</year>
        <article-title>Effects of current density and chip temperature distribution on lifetime of high power IGBT modules in traction working conditions</article-title>
        <source>Microelectronics Reliability</source>
        <volume>37</volume>
        <issue>10</issue>
        <fpage>1755</fpage>
        <lpage>1758</lpage>
        <pub-id pub-id-type="doi">10.1016/S0026-2714(97)00154-6</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-12">
      <label>Hill et al. (2018)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <name>
            <surname>Hill</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Raffin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ernestus</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gleave</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kanervisto</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Traore</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Dhariwal</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hesse</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Klimov</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Nichol</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Plappert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Radford</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Schulman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Sidor</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <year>2018</year>
        <data-title>Stable baselines. GitHub repository. GitHub</data-title>
        <uri xlink:href="https://github.com/hill-a/stable-baselines">https://github.com/hill-a/stable-baselines</uri>
      </element-citation>
    </ref>
    <ref id="ref-13">
      <label>Hushchyn, Sapronov &amp; Ustyuzhanin (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hushchyn</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sapronov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ustyuzhanin</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year>2019</year>
        <article-title>Machine learning algorithms for automatic anomalies detection in data storage systems operation</article-title>
        <source>Advances in Systems Science and Applications</source>
        <volume>19</volume>
        <issue>2</issue>
        <fpage>23</fpage>
        <lpage>32</lpage>
        <pub-id pub-id-type="doi">10.25728/assa.2019.19.2.725</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-14">
      <label>Karpov et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Karpov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Arzymatov</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Belavin</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Sapronov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ustyuzhanin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Nevolin</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year>2018</year>
        <article-title>Hybrid approach to design of storage attached network simulation systems</article-title>
        <source>International Journal of Civil Engineering and Technology</source>
        <volume>9</volume>
        <issue>11</issue>
        <fpage>220</fpage>
        <lpage>226</lpage>
      </element-citation>
    </ref>
    <ref id="ref-15">
      <label>Koch et al. (2019)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koch</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Mancuso</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>West</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bestavros</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year>2019</year>
        <article-title>Reinforcement learning for UAV attitude control</article-title>
        <source>ACM Transactions on Cyber-Physical Systems</source>
        <volume>3</volume>
        <issue>2</issue>
        <fpage>22</fpage>
        <lpage>24</lpage>
      </element-citation>
    </ref>
    <ref id="ref-16">
      <label>Kolesnikov (2018)</label>
      <element-citation publication-type="software">
        <person-group person-group-type="author">
          <name>
            <surname>Kolesnikov</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <year>2018</year>
        <data-title>Reproducible and fast DL &amp; RL. GitHub repository. GitHub</data-title>
        <uri xlink:href="https://github.com/catalyst-team/catalyst">https://github.com/catalyst-team/catalyst</uri>
      </element-citation>
    </ref>
    <ref id="ref-17">
      <label>Lakshminarayanan &amp; Sriraam (2014)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Lakshminarayanan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Sriraam</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <year>2014</year>
        <article-title>The effect of temperature on the reliability of electronic components</article-title>
        <conf-name>2014 IEEE international conference on electronics, computing and communication technologies (CONECCT)</conf-name>
        <conf-loc>Piscataway</conf-loc>
        <publisher-name>IEEE</publisher-name>
        <fpage>1</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1109/CONECCT.2014.6740182</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-18">
      <label>Lillicrap et al. (2015)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lillicrap</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Pritzel</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Heess</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Erez</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Tassa</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Silver</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wierstra</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <year>2015</year>
        <article-title>Continuous control with deep reinforcement learning</article-title>
        <source>CoRR</source>
        <comment>abs/1509.02971</comment>
      </element-citation>
    </ref>
    <ref id="ref-19">
      <label>Matsunaga &amp; Uegai (2006)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Matsunaga</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Uegai</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <year>2006</year>
        <article-title>Thermal fatigue life evaluation of aluminum wire bonds</article-title>
        <volume>2</volume>
        <conf-name>2006 1st electronic systemintegration technology conference</conf-name>
        <fpage>726</fpage>
        <lpage>731</lpage>
        <pub-id pub-id-type="doi">10.1109/ESTC.2006.280092</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-20">
      <label>Mitchel (1996)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Mitchel</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <year>1996</year>
        <article-title>International disk drive equipment and materials association Japan</article-title>
        <conf-name>Proceeding of Diskcon ’96 international disk forum</conf-name>
        <fpage>1</fpage>
        <lpage>10</lpage>
        <uri xlink:href="https://ci.nii.ac.jp/naid/10007265434/en/">https://ci.nii.ac.jp/naid/10007265434/en/</uri>
      </element-citation>
    </ref>
    <ref id="ref-21">
      <label>Molero et al. (2000a)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Molero</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Silla</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Santonja</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Duato</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <year>2000a</year>
        <article-title>Modeling and simulation of storage area networks</article-title>
        <conf-name>Proceedings of the 8th international symposium on modeling, analysis and simulation of computer and telecommunication systems, MASCOTS ’00</conf-name>
        <conf-sponsor>IEEE Computer Society</conf-sponsor>
        <conf-loc>Washington, D.C.</conf-loc>
        <fpage>307</fpage>
        <uri xlink:href="http://dl.acm.org/citation.cfm?id=580760.823773">http://dl.acm.org/citation.cfm?id=580760.823773</uri>
      </element-citation>
    </ref>
    <ref id="ref-22">
      <label>Molero et al. (2000b)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Molero</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Silla</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Santonja</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Duato</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <year>2000b</year>
        <article-title>Performance analysis of storage area networks using high-speed LAN interconnects</article-title>
        <conf-name>Proceedings IEEE international conference on networks 2000 (ICON 2000). Networking trends and challenges in the new millennium</conf-name>
        <fpage>474</fpage>
        <lpage>478</lpage>
      </element-citation>
    </ref>
    <ref id="ref-23">
      <label>Molero et al. (2001)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Molero</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Silla</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Santonja</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Duato</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <year>2001</year>
        <article-title>A tool for the design and evaluation of fibre channel storage area networks</article-title>
        <conf-name>Proceedings of the 34th annual simulation symposium (SS01), SS ’01</conf-name>
        <conf-sponsor>IEEE Computer Society</conf-sponsor>
        <conf-loc>Washington, D.C.</conf-loc>
        <fpage>133</fpage>
        <uri xlink:href="http://dl.acm.org/citation.cfm?id=882496.884475">http://dl.acm.org/citation.cfm?id=882496.884475</uri>
      </element-citation>
    </ref>
    <ref id="ref-24">
      <label>Mubarak et al. (2017)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mubarak</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carothers</surname>
            <given-names>CD</given-names>
          </name>
          <name>
            <surname>Ross</surname>
            <given-names>RB</given-names>
          </name>
          <name>
            <surname>Carns</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <year>2017</year>
        <article-title>Enabling parallel simulation of large-scale HPC network systems</article-title>
        <source>IEEE Transactions on Parallel and Distributed Systems</source>
        <volume>28</volume>
        <issue>1</issue>
        <fpage>87</fpage>
        <lpage>100</lpage>
        <pub-id pub-id-type="doi">10.1109/TPDS.2016.2543725</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-25">
      <label>Muknahallipatna et al. (2010)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muknahallipatna</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Miles</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hamann</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year>2010</year>
        <article-title>Large fabric storage area networks: fabric simulator development and preliminary performance analysis</article-title>
        <source>International Journal of Computers and Applications</source>
        <volume>32</volume>
        <issue>2</issue>
        <fpage>167</fpage>
        <lpage>180</lpage>
        <pub-id pub-id-type="doi">10.1080/1206212X.2010.11441973</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-26">
      <label>Perles et al. (2001)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Perles</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Molero</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Marti</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Santonja</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Serrano</surname>
            <given-names>JJ</given-names>
          </name>
        </person-group>
        <year>2001</year>
        <article-title>Improving the execution of groups of simulations on a cluster of workstations and its application to storage area networks</article-title>
        <conf-name>Proceedings. 34th annual simulation symposium</conf-name>
        <fpage>227</fpage>
        <lpage>234</lpage>
        <pub-id pub-id-type="doi">10.1109/SIMSYM.2001.922136</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-27">
      <label>Rabiei &amp; Evans (2000)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rabiei</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Evans</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year>2000</year>
        <article-title>Failure mechanisms associated with the thermally grown oxide in plasma-sprayed thermal barrier coatings</article-title>
        <source>Acta Materialia</source>
        <volume>48</volume>
        <issue>15</issue>
        <fpage>3963</fpage>
        <lpage>3976</lpage>
        <pub-id pub-id-type="doi">10.1016/S1359-6454(00)00171-3</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-28">
      <label>Riley &amp; Henderson (2010)</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Riley</surname>
            <given-names>GF</given-names>
          </name>
          <name>
            <surname>Henderson</surname>
            <given-names>TR</given-names>
          </name>
        </person-group>
        <year>2010</year>
        <article-title>The ns-3 network simulator</article-title>
        <source>Modeling and tools for network simulation</source>
        <publisher-name>Springer Berlin Heidelberg</publisher-name>
        <publisher-loc>Berlin</publisher-loc>
        <person-group person-group-type="editor">
          <name>
            <surname>Wehrle</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Güneş</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gross</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <fpage>15</fpage>
        <lpage>34</lpage>
        <pub-id pub-id-type="other">978-3-642-12331-3</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-29">
      <label>Roesch &amp; Jittinorasett (2004)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roesch</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Jittinorasett</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <year>2004</year>
        <article-title>Cycling copper flip chip interconnects</article-title>
        <source>Microelectronics Reliability</source>
        <volume>44</volume>
        <issue>7</issue>
        <fpage>1047</fpage>
        <lpage>1054</lpage>
        <pub-id pub-id-type="doi">10.1016/j.microrel.2004.03.010</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-30">
      <label>Sankar, Shaw &amp; Vaid (2011)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Sankar</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shaw</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Vaid</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <year>2011</year>
        <article-title>Impact of temperature on hard disk drive reliability in large datacenters</article-title>
        <conf-name>2011 IEEE/IFIP 41st international conference on dependable systems networks (DSN)</conf-name>
        <fpage>530</fpage>
        <lpage>537</lpage>
        <pub-id pub-id-type="doi">10.1109/DSN.2011.5958265</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-31">
      <label>Sapronov et al. (2018)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sapronov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Belavin</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Arzymatov</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Karpov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Nevolin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ustyuzhanin</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year>2018</year>
        <article-title>Tuning hybrid distributed storage system digital twins by reinforcement learning</article-title>
        <source>Advances in Systems Science and Applications</source>
        <volume>18</volume>
        <issue>4</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
      </element-citation>
    </ref>
    <ref id="ref-32">
      <label>Strom et al. (2007)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Strom</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tyndall</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Khurshudov</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <year>2007</year>
        <article-title>Hard disk drive reliability modeling and failure prediction</article-title>
        <source>Magnetics, IEEE Transactions on</source>
        <volume>43</volume>
        <fpage>3676</fpage>
        <lpage> 3684</lpage>
        <pub-id pub-id-type="doi">10.1109/TMAG.2007.902969</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-33">
      <label>Varga &amp; Hornig (2008)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Varga</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hornig</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <year>2008</year>
        <article-title>An overview of the OMNeT++ simulation environment</article-title>
        <conf-name>Proceedings of the 1st international conference on simulation tools and techniques for communications, networks and systems &amp; workshops, Simutools ’08</conf-name>
        <conf-sponsor>ICST (Institute for Computer Sciences, Social-Informatics and Telecommunications Engineering)</conf-sponsor>
        <conf-loc>ICST, Brussels, Belgium, Belgium</conf-loc>
        <fpage>60:1</fpage>
        <lpage>60:10</lpage>
        <uri xlink:href="http://dl.acm.org/citation.cfm?id=1416222.1416290">http://dl.acm.org/citation.cfm?id=1416222.1416290</uri>
      </element-citation>
    </ref>
    <ref id="ref-34">
      <label>Wang et al. (2003)</label>
      <element-citation publication-type="confproc">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>C-Y</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>Y-L</given-names>
          </name>
          <name>
            <surname>Chong</surname>
            <given-names>CT</given-names>
          </name>
          <name>
            <surname>Hou</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Xi</surname>
            <given-names>W-Y</given-names>
          </name>
        </person-group>
        <year>2003</year>
        <article-title>Simulation of fibre channel storage area network using SANSim</article-title>
        <conf-name>The 11th IEEE international conference on networks, 2003. ICON2003</conf-name>
        <fpage>349</fpage>
        <lpage>354</lpage>
        <pub-id pub-id-type="doi">10.1109/ICON.2003.1266215</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-35">
      <label>Yeh et al. (2002)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yeh</surname>
            <given-names>ECC</given-names>
          </name>
          <name>
            <surname>Choi</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Tu</surname>
            <given-names>KN</given-names>
          </name>
          <name>
            <surname>Elenius</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Balkan</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <year>2002</year>
        <article-title>Current-crowding-induced electromigration failure in flip chip solder joints</article-title>
        <source>Applied Physics Letters</source>
        <volume>80</volume>
        <issue>4</issue>
        <fpage>580</fpage>
        <lpage>582</lpage>
        <pub-id pub-id-type="doi">10.1063/1.1432443</pub-id>
      </element-citation>
    </ref>
    <ref id="ref-36">
      <label>Zhou &amp; Hashida (2002)</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhou</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hashida</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <year>2002</year>
        <article-title>Thermal fatigue failure induced by delamination in thermal barrier coating</article-title>
        <source>International Journal of Fatigue</source>
        <volume>24</volume>
        <issue>2</issue>
        <fpage>407</fpage>
        <lpage>417</lpage>
        <pub-id pub-id-type="doi">10.1016/S0142-1123(01)00096-2</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10166583</article-id>
    <article-id pub-id-type="pmid">37097893</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad287</article-id>
    <article-id pub-id-type="publisher-id">btad287</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Note</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>pyInfinityFlow: optimized imputation and analysis of high-dimensional flow cytometry data for millions of cells</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-3470-3623</contrib-id>
        <name>
          <surname>Ferchen</surname>
          <given-names>Kyle</given-names>
        </name>
        <aff><institution>Cancer and Cellular Biology, University of Cincinnati</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
        <aff><institution>Immunobiology, Cincinnati Children’s Hospital Medical Center</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9689-2469</contrib-id>
        <name>
          <surname>Salomonis</surname>
          <given-names>Nathan</given-names>
        </name>
        <aff><institution>Biomedical Informatics, Cincinnati Children’s Hospital Medical Center</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
        <aff><institution>Department of Pediatrics, University of Cincinnati</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8162-6758</contrib-id>
        <name>
          <surname>Grimes</surname>
          <given-names>H Leighton</given-names>
        </name>
        <aff><institution>Immunobiology, Cincinnati Children’s Hospital Medical Center</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
        <aff><institution>Department of Pediatrics, University of Cincinnati</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
        <aff><institution>Experimental Hematology and Cancer Biology, Cincinnati Children’s Hospital Medical Center</institution>, Cincinnati, OH 45229, <country country="US">United States</country></aff>
        <xref rid="btad287-cor1" ref-type="corresp"/>
        <!--lee.grimes@cchmc.org-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kelso</surname>
          <given-names>Janet</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad287-cor1">Corresponding author. Immunobiology, Cincinnati Children’s Hospital Medical Center, Cincinnati, OH, USA. E-mail: <email>lee.grimes@cchmc.org</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>5</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-04-25">
      <day>25</day>
      <month>4</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>4</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>5</issue>
    <elocation-id>btad287</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>11</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>09</day>
        <month>3</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>12</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>24</day>
        <month>4</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>08</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad287.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>While conventional flow cytometry is limited to dozens of markers, new experimental and computational strategies, such as Infinity Flow, allow for the generation and imputation of hundreds of cell surface protein markers in millions of cells. Here, we describe an end-to-end analysis workflow for Infinity Flow data in Python.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>pyInfinityFlow enables the efficient analysis of millions of cells, without down-sampling, through direct integration with well-established Python packages for single-cell genomics analysis. pyInfinityFlow accurately identifies both common and extremely rare cell populations which are challenging to define from single-cell genomics studies alone. We demonstrate that this workflow can nominate novel markers to design new flow cytometry gating strategies for predicted cell populations. pyInfinityFlow can be extended to diverse cell discovery analyses with flexibility to adapt to diverse Infinity Flow experimental designs.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>pyInfinityFlow is freely available in GitHub (<ext-link xlink:href="https://github.com/KyleFerchen/pyInfinityFlow" ext-link-type="uri">https://github.com/KyleFerchen/pyInfinityFlow</ext-link>) and on PyPI (<ext-link xlink:href="https://pypi.org/project/pyInfinityFlow/" ext-link-type="uri">https://pypi.org/project/pyInfinityFlow/</ext-link>). Package documentation with tutorials on a test dataset is available by Read the Docs (pyinfinityflow.readthedocs.io). The scripts and data for reproducing the results are available at <ext-link xlink:href="https://github.com/KyleFerchen/pyInfinityFlow/tree/main/analysis_scripts" ext-link-type="uri">https://github.com/KyleFerchen/pyInfinityFlow/tree/main/analysis_scripts</ext-link>, along with the raw flow cytometry input data.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>S10OD025045</award-id>
        <award-id>U24HL148865</award-id>
        <award-id>R01DK121062</award-id>
        <award-id>RC2DK122376</award-id>
        <award-id>R01HL122661</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="4"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Flow cytometry enables single-cell proteomic profiling of millions of cells, using fluorescent-conjugated antibodies to extracellular or intracellular proteins. The number of molecules that can be profiled using antibody-based strategies has increased with the development of new technologies, such as novel fluorescent proteins, spectral deconvolution (<xref rid="btad287-B9" ref-type="bibr">Liechti et al. 2021</xref>), heavy-metal-conjugated antibodies detected with mass spectrometry (<xref rid="btad287-B1" ref-type="bibr">Bandura et al. 2009</xref>), and oligo-nucleotide-conjugated antibodies detected with next-generation sequencing (<xref rid="btad287-B11" ref-type="bibr">Stoeckius et al. 2017</xref>). While approaches such as fluorescence-based Flow Cytometry Activated Cell Sorting (FACS) provide the means to effectively enrich for cell populations, they are limited by the number of simultaneously measurable fluorophores. Thus, to develop reliable flow cytometry panels to detect rare cell populations for diverse lineages, methods are required to simultaneously measure potentially hundreds of markers across millions of cells.</p>
    <p>Infinity Flow was originally developed as a low cost and efficient experimental protocol to scale conventional flow cytometry from dozens to hundreds of markers, without increasing the repertoire of simultaneously measured spectra (<xref rid="btad287-B7" ref-type="bibr">Dutertre et al. 2019</xref>). The associated R package computational workflow, called infinityFlow, is able to integrate markers (infinity markers) measured in individual flow cytometry captures, as long as each capture shares a common set of backbone markers (<xref rid="btad287-B2" ref-type="bibr">Becht et al. 2021</xref>). An optimal backbone panel consists of a sufficiently diverse and informative set of antibodies that span all major evaluated cell lineages. Cells are stained with backbone antibodies, split into individual wells and stained for the additional query target. The query antibodies share a fluorochrome [e.g. phycoerythrin (PE)]. Using nonlinear regression with machine learning, infinityFlow imputes the expression of exploratory Infinity markers in individual Flow Cytometry Stand (FCS) files (sharing the backbone markers) to the pool. With this strategy, imputed flow cytometry datasets can span a diversity of features to distinguish broad and subtle cell population differences, comparable to high-throughput genomic assays. Thus, Infinity Flow allows for the integration of hundreds of separately profiled markers. While powerful, the existing R package infinityFlow workflow cannot be readily applied to millions of cells and hundreds of imputed markers (down-sampling required), is not flexible to new types of Infinity Flow study designs, has significant memory requirements, and does not directly interface with downstream supervised or unsupervised clustering approaches.</p>
    <p>To improve upon and expand the original workflow, we introduce pyInfinityFlow, a Python implementation of infinityFlow with improved efficiency in speed and memory, and support for advanced unsupervised and supervised anndata-dependent single-cell analyses (Scanpy, pytometry, MarkerFinder, cellHarmony) (<xref rid="btad287-B15" ref-type="bibr">Wolf et al. 2018</xref>; <xref rid="btad287-B5" ref-type="bibr">DePasquale et al. 2019</xref>; <xref rid="btad287-B3" ref-type="bibr">Büttner et al. 2022</xref>). pyInfinityFlow is more flexible to the options applied, and is extensible to more complex study designs that include multiple Infinity markers per panel (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Information</xref>).</p>
  </sec>
  <sec>
    <title>2 Design</title>
    <p>Similar to the original R package infinityFlow workflow, pyInfinityFlow was developed to impute new surface markers into an existing flow cytometry backbone panel using XGBoost regression. XGBoost (<xref rid="btad287-B4" ref-type="bibr">Chen and Guestrin 2016</xref>) has been well-demonstrated to provide optimal balance of performance time and prediction accuracy (<xref rid="btad287-B2" ref-type="bibr">Becht et al. 2021</xref>). The predictors of the model are referred to as “Backbone markers” and the response variable is referred to as an “Infinity marker.” The pipeline processes one or more sets of Infinity marker FCS files to train the regression model. The model is then used to predict the Infinity marker signal on either a single FCS reference file or a pool of events from the Infinity marker FCS files to build a final dataset with all features (held in memory as an AnnData object). Each FCS file records the light emitted after an event of a cell, multiplet, or debris moving over the detectors is recorded in multiple channels. Isotype background correction can optionally be used in pyInfinityFlow and was re-implemented with a linear model as previously described (<xref rid="sup1" ref-type="supplementary-material">Supplemental Methods</xref>) (<xref rid="btad287-B2" ref-type="bibr">Becht et al. 2021</xref>).</p>
    <p>In addition to these options, pyInfinityFlow includes additional options for data scaling and normalization; flexibility for more complex study designs; and downstream analyses for dimensionality reduction, clustering, and cell-type marker identification (<xref rid="btad287-F1" ref-type="fig">Fig. 1A</xref>). These include both new interfaces (MarkerFinder, cellHarmony) and calls to existing interfaces where possible (<xref rid="sup1" ref-type="supplementary-material">Supplemental Methods</xref>). Specifically, the user can pool events from the Infinity marker FCS files or supply a separate FCS file to serve as the Backbone data for the final Infinity Flow object. The workflow can be run as a full pipeline (single command) or as independent steps, making it usable by both data scientists and biologists. Alternative normalization and correction strategies are introduced to improve data imputation. These include Isotype background correction and logicle normalization. The final Infinity Flow object can be stored as sparse data objects (h5ad) or as a data frame stored in a binary feather file format, enabling direct manipulation with Scanpy, or other tools, to identify broad and rare cell populations with Leiden clustering (<xref rid="btad287-B12" ref-type="bibr">Traag et al. 2019</xref>) and run UMAP dimensionality reduction on millions of cells (<xref rid="btad287-B10" ref-type="bibr">McInnes et al. 2018</xref>). The MarkerFinder algorithm (<xref rid="btad287-B14" ref-type="bibr">Venkatasubramanian et al. 2020</xref>) is used in pyInfinityFlow to identify unique distinguishing cell surface markers for Leiden-defined cell populations. Finally, this package provides both an API for fine tuning of the analysis pipeline parameters as well as command line utilities for simple execution. The API is split into four modules (fcsio, Transformations, Plotting Utilities, and Debugging Utilities) that handle different aspects of processing Flow Cytometry data with Python.</p>
    <fig position="float" id="btad287-F1">
      <label>Figure 1.</label>
      <caption>
        <p>pyInfinityFlow: overview of features and performance. (A) Graphical abstract of pyInfinityFlow package. (B–D) Comparison of pyInfinityFlow and R infinityFlow packages using the mouse lung dataset with varying numbers of Infinity markers. pyInfinityFlow required a lower CPU time (B), lower Peak Memory (C), and had similar accuracy in regression as measured by mean squared error on a log10 scale (D).</p>
      </caption>
      <graphic xlink:href="btad287f1" position="float"/>
    </fig>
  </sec>
  <sec>
    <title>3 Performance</title>
    <p>To assess the performance of pyInfinityFlow, we analyzed a prior mouse lung Infinity Flow dataset using the same parameters as previously described (<xref rid="btad287-B2" ref-type="bibr">Becht et al. 2021</xref>) (<xref rid="sup1" ref-type="supplementary-material">Supplementary Information</xref>). For each Infinity marker, an FCS file was captured with at least 20 000 events. These events are first split into training and validation sets by randomly sampling 50% for training and using the remaining 50% for validation. Thus, for each individual capture, half of the cells were used to train the XGBoost regression model and the other half were used to compute the validation metrics. To build the final dataset, 10 000 events from the validation sets are randomly selected and concatenated into a single expression matrix. We find that pyInfinityFlow outperforms the R implementation in terms of computational speed and memory efficiency with increasing panel size (<xref rid="btad287-F1" ref-type="fig">Fig. 1B and C</xref>). The increased performance does not impact the regression accuracy, as measured by mean absolute error (<xref rid="btad287-F1" ref-type="fig">Fig. 1D</xref>). We were able to observe similar performance improvements with pyInfinityFlow for increasing cell numbers relative to the R version (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). pyInfinityFlow is compatible with datasets of over 332 imputed markers (<xref rid="btad287-B7" ref-type="bibr">Dutertre et al. 2019</xref>) and &gt;3 million input cells for imputation, without down-sampling (32 504 s with 40 GB of RAM). In contrast, the R implementation encountered a memory error when given 800 GB of RAM. The calculation of the MSE values to compare accuracy between the R-package infinityFlow and pyInfinityFlow was done on the 10 000 events that are pooled into the final Infinity Flow object. This ensures that MSE values are not biased by changes in the number of input cells. The output of pyInfinityFlow consists of the concatenated backbone channels, imputed Infinity marker channels, and original channels not imputed and not part of the backbone. This single-cell dataset, stored as an AnnData object in memory, was dimensionally reduced and clustered using wrapper functions in pyInfinityFlow to Scanpy methods for principal component analysis (PCA), UMAP, and Leiden clustering. The embedded pyInfinityFlow MarkerFinder implementation was then used to identify markers for these Leiden clusters.</p>
    <p><italic toggle="yes">Z</italic>-score normalization has been noted as a necessary feature of the R-package infinityFlow method but has not been previously assessed to determine its requirement. To assess the necessity of <italic toggle="yes">z</italic>-score normalization, we profiled over 2 million murine hematopoietic progenitors with 21 backbone markers with Infinity Flow. We selected 11 out of the 21 backbone markers as a surrogate backbone to evaluate prediction of the remaining 10. Using the established ground-state truth, we find that <italic toggle="yes">z</italic>-score normalization (designed to reduce batch effects between samples), introduces significant artifacts in the regression predictions (<xref rid="sup1" ref-type="supplementary-material">Supplementary Information</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2</xref>). Hence, while <italic toggle="yes">z</italic>-score normalization is included in the method, by default, it is not applied.</p>
    <p>To illustrate the utility of high-dimensional datasets generated by pyInfinityFlow, we mapped scRNA-seq defined populations from the mouse lung cell atlas to the surface protein expression using an embedded call to the cellHarmony (<xref rid="btad287-B5" ref-type="bibr">DePasquale et al. 2019</xref>) module of pyInfinityFlow. The gene names encoding the surface proteins defined in the pyInfinityFlow dataset were used to rename the protein feature labels to provide links between the scRNA-seq and Infinity Flow dataset features. We find that the cellHarmony mapping of labels to the pyInfinityFlow dataset identifies challenging-to-detect rare lung cell populations that can be resolved through sub-clustering of tens of thousands of cells (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>). While the mapping RNA to antibody profiles has been shown to be highly inferential (<xref rid="btad287-B13" ref-type="bibr">Triana et al. 2021</xref>; <xref rid="btad287-B6" ref-type="bibr">Dou et al. 2022</xref>), lineage predictions broadly matched to those made by the original authors, while highlighting potential novel cellular subsets (<xref rid="btad287-B2" ref-type="bibr">Becht et al. 2021</xref>). These novel populations included highly similar mesenchymal alveolar fibroblasts (AF1, AF2), smooth muscle (VSMC, ASMC), pericytes, and secondary crest myofibroblasts (SCMF). To determine whether pyInfinityFlow could resolve these rare predicted subtypes, we further sub-clustered our initial predicted fibroblasts cluster, to define multiple new sub-clusters (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4A and B</xref>). This analysis confirms the presence of fibroblast and smooth muscle cell populations that could previously only be resolved through extensive single-cell genomics and functional studies and nominates new cell-surface markers for their isolation (<xref rid="btad287-B8" ref-type="bibr">Guo et al. 2022</xref>) (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4C–E</xref>). Such analyses open the door for gating and isolating these other rare cell populations, with a novel repertoire of distinguishing marker antibodies (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figs S3 and S4</xref>).</p>
  </sec>
  <sec>
    <title>4 Conclusions</title>
    <p>pyInfinityFlow represents an optimal workflow for the analysis of millions of flow cytometry profiles in Python, significantly extending the repertoire of analyses of the original implementation. This allows users to build datasets with larger numbers of cells, which is necessary to profile rare and transitional cell populations. To this point, we have shown that pyInfinityFlow in combination with label transfer using cellHarmony can be used to identify rare populations that were not previously found in scRNA-seq from mouse lung (e.g. SVEC, respiratory airway secretory cells). Additionally, the user has more flexibility to specify a separate FCS reference file, to use the pipeline without isotype controls, to generate AnnData structured outputs, to cluster the flow cytometry data, and to find markers for populations. The AnnData data structure allows for the quick and simple application of single-cell analysis tools built into Scanpy, such as dimensionality reduction and clustering. Extensions of Scanpy such as pytometry, a package built for analyzing cytometry data, can also be quickly applied to datasets generated using pyInfinityFlow (<xref rid="btad287-B3" ref-type="bibr">Büttner et al. 2022</xref>). The package provides both a command line tool, enabling wide adoption by users without programming experience, as well as an API to provide precise control of analysis parameters. While approaches for normalization were shown to be more deleterious than advantageous, it will be necessary to assess alternative approaches to further optimize the imputation of antibody signals in extremely large datasets. Looking forward, we hope to develop extensions to this approach to improve the identification of rare cell populations similarly reflected in emerging single-cell genomics studies.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad287_Supplementary_Data</label>
      <media xlink:href="btad287_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank M. Carlino and G. Li for testing pyInfinityFlow. Flow cytometric data were acquired using Aurora analyzers maintained by the Research Flow Cytometry Core in the Division of Rheumatology at Cincinnati Children’s Hospital Medical Center.</p>
  </ack>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the National Institutes of Health [S10OD025045 to K.F., U24HL148865 to N.S.; and R01DK121062, RC2DK122376, and R01HL122661 to H.L.G. and by U54 DK126108 Hematology Center of Excellence].</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad287-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bandura</surname><given-names>DR</given-names></string-name>, <string-name><surname>Baranov</surname><given-names>VI</given-names></string-name>, <string-name><surname>Ornatsky</surname><given-names>OI</given-names></string-name></person-group><etal>et al</etal><article-title>Mass cytometry: technique for real time single cell multitarget immunoassay based on inductively coupled plasma time-of-flight mass spectrometry</article-title>. <source>Anal Chem</source><year>2009</year>;<volume>81</volume>:<fpage>6813</fpage>–<lpage>22</lpage>.<pub-id pub-id-type="pmid">19601617</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Becht</surname><given-names>E</given-names></string-name>, <string-name><surname>Tolstrup</surname><given-names>D</given-names></string-name>, <string-name><surname>Dutertre</surname><given-names>C-A</given-names></string-name></person-group><etal>et al</etal><article-title>High-throughput single-cell quantification of hundreds of proteins using conventional flow cytometry and machine learning</article-title>. <source>Sci Adv</source><year>2021</year>;<volume>7</volume>:<fpage>eabg0505</fpage>.<pub-id pub-id-type="pmid">34550730</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B3">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Büttner</surname><given-names>M</given-names></string-name>, <string-name><surname>Hempel</surname><given-names>F</given-names></string-name>, <string-name><surname>Ryborz</surname><given-names>T.</given-names></string-name></person-group><etal>et al</etal> Pytometry: flow and mass cytometry analytics in Python. <italic toggle="yes">bioRxiv</italic>, <year>2022</year>.10.10.511546.</mixed-citation>
    </ref>
    <ref id="btad287-B4">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>T</given-names></string-name>, <string-name><surname>Guestrin</surname><given-names>C.</given-names></string-name></person-group> .XGBoost: a scalable tree boosting system. In: <italic toggle="yes">Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining</italic>. Seattle, WA, USA: University of Washington. p. 10, <year>2016</year>.</mixed-citation>
    </ref>
    <ref id="btad287-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>DePasquale</surname><given-names>EAK</given-names></string-name>, <string-name><surname>Schnell</surname><given-names>D</given-names></string-name>, <string-name><surname>Dexheimer</surname><given-names>P</given-names></string-name></person-group><etal>et al</etal><article-title>cellHarmony: cell-level matching and holistic comparison of single-cell transcriptomes</article-title>. <source>Nucleic Acids Res</source><year>2019</year>;<volume>47</volume>:<fpage>e138</fpage>.<pub-id pub-id-type="pmid">31529053</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dou</surname><given-names>J</given-names></string-name>, <string-name><surname>Liang</surname><given-names>S</given-names></string-name>, <string-name><surname>Mohanty</surname><given-names>V</given-names></string-name></person-group><etal>et al</etal><article-title>Bi-order multimodal integration of single-cell data</article-title>. <source>Genome Biol</source><year>2022</year>;<volume>23</volume>:<fpage>112</fpage>.<pub-id pub-id-type="pmid">35534898</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dutertre</surname><given-names>C-A</given-names></string-name>, <string-name><surname>Becht</surname><given-names>E</given-names></string-name>, <string-name><surname>Irac</surname><given-names>SE</given-names></string-name></person-group><etal>et al</etal><article-title>Single-cell analysis of human mononuclear phagocytes reveals subset-defining markers and identifies circulating inflammatory dendritic cells</article-title>. <source>Immunity</source><year>2019</year>;<volume>51</volume>:<fpage>573</fpage>–<lpage>89.e578</lpage>.<pub-id pub-id-type="pmid">31474513</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B8">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Guo</surname><given-names>M</given-names></string-name>, <string-name><surname>Morley</surname><given-names>MP</given-names></string-name>, <string-name><surname>Wu</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> Guided construction of single cell reference for human and mouse lung. <italic toggle="yes">bioRxiv</italic>, <year>2022</year>.05.18.491687.</mixed-citation>
    </ref>
    <ref id="btad287-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liechti</surname><given-names>T</given-names></string-name>, <string-name><surname>Weber</surname><given-names>LM</given-names></string-name>, <string-name><surname>Ashhurst</surname><given-names>TM</given-names></string-name></person-group><etal>et al</etal><article-title>An updated guide for the perplexed: cytometry in the high-dimensional era</article-title>. <source>Nat Immunol</source><year>2021</year>;<volume>22</volume>:<fpage>1190</fpage>–<lpage>7</lpage>.<pub-id pub-id-type="pmid">34489590</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B10">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McInnes</surname><given-names>L</given-names></string-name>, <string-name><surname>Healy</surname><given-names>J</given-names></string-name>, <string-name><surname>Melville</surname><given-names>J.</given-names></string-name></person-group> UMAP: uniform manifold approximation and projection. <italic toggle="yes">arXiv</italic>, <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="btad287-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stoeckius</surname><given-names>M</given-names></string-name>, <string-name><surname>Hafemeister</surname><given-names>C</given-names></string-name>, <string-name><surname>Stephenson</surname><given-names>W</given-names></string-name></person-group><etal>et al</etal><article-title>Simultaneous epitope and transcriptome measurement in single cells</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>865</fpage>–<lpage>8</lpage>.<pub-id pub-id-type="pmid">28759029</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Traag</surname><given-names>VA</given-names></string-name>, <string-name><surname>Waltman</surname><given-names>L</given-names></string-name>, <string-name><surname>van Eck</surname><given-names>NJ.</given-names></string-name></person-group><article-title>From Louvain to Leiden: guaranteeing well-connected communities</article-title>. <source>Sci Rep</source><year>2019</year>;<volume>9</volume>:<fpage>5233</fpage>.<pub-id pub-id-type="pmid">30914743</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Triana</surname><given-names>S</given-names></string-name>, <string-name><surname>Vonficht</surname><given-names>D</given-names></string-name>, <string-name><surname>Jopp-Saile</surname><given-names>L</given-names></string-name></person-group><etal>et al</etal><article-title>Single-cell proteo-genomic reference maps of the hematopoietic system enable the purification and massive profiling of precisely defined cell states</article-title>. <source>Nat Immunol</source><year>2021</year>;<volume>22</volume>:<fpage>1577</fpage>–<lpage>89</lpage>.<pub-id pub-id-type="pmid">34811546</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Venkatasubramanian</surname><given-names>M</given-names></string-name>, <string-name><surname>Chetal</surname><given-names>K</given-names></string-name>, <string-name><surname>Schnell</surname><given-names>DJ</given-names></string-name></person-group><etal>et al</etal><article-title>Resolving single-cell heterogeneity from hundreds of thousands of cells through sequential hybrid clustering and NMF</article-title>. <source>Bioinformatics</source><year>2020</year>;<volume>36</volume>:<fpage>3773</fpage>–<lpage>80</lpage>.<pub-id pub-id-type="pmid">32207533</pub-id></mixed-citation>
    </ref>
    <ref id="btad287-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wolf</surname><given-names>FA</given-names></string-name>, <string-name><surname>Angerer</surname><given-names>P</given-names></string-name>, <string-name><surname>Theis</surname><given-names>FJ.</given-names></string-name></person-group><article-title>SCANPY: large-scale single-cell gene expression data analysis</article-title>. <source>Genome Biol</source><year>2018</year>;<volume>19</volume>:<fpage>15</fpage>.<pub-id pub-id-type="pmid">29409532</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

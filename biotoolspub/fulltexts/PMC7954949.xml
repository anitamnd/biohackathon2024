<?all-math-mml yes?>
<?use-mml?>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD with MathML3 v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1-mathml3.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName nihms2pmcx2.xsl?>
<?ConverterInfo.Version 1?>
<?properties manuscript?>
<?origin nihpa?>
<?iso-abbr Nat Methods?>
<?submitter-system nihms?>
<?submitter-canonical-name Nature Publishing Group?>
<?submitter-canonical-id NATURE-STRUCTUR?>
<?submitter-userid 8068858?>
<?submitter-authority myNCBI?>
<?submitter-login nature-structure?>
<?submitter-name Nature Publishing Group?>
<?domain nihpa?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-journal-id">101215604</journal-id>
    <journal-id journal-id-type="pubmed-jr-id">32338</journal-id>
    <journal-id journal-id-type="nlm-ta">Nat Methods</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nat Methods</journal-id>
    <journal-title-group>
      <journal-title>Nature methods</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1548-7091</issn>
    <issn pub-type="epub">1548-7105</issn>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7954949</article-id>
    <article-id pub-id-type="pmid">33589839</article-id>
    <article-id pub-id-type="doi">10.1038/s41592-020-01050-x</article-id>
    <article-id pub-id-type="manuscript">nihpa1656427</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Joint probabilistic modeling of single-cell multi-omic data with totalVI</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Gayoso</surname>
          <given-names>Adam</given-names>
        </name>
        <xref ref-type="aff" rid="A1">1</xref>
        <xref rid="FN1" ref-type="author-notes">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Steier</surname>
          <given-names>Zoë</given-names>
        </name>
        <xref ref-type="aff" rid="A2">2</xref>
        <xref rid="FN1" ref-type="author-notes">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lopez</surname>
          <given-names>Romain</given-names>
        </name>
        <xref ref-type="aff" rid="A3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Regier</surname>
          <given-names>Jeffrey</given-names>
        </name>
        <xref ref-type="aff" rid="A4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nazor</surname>
          <given-names>Kristopher L</given-names>
        </name>
        <xref ref-type="aff" rid="A5">5</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Streets</surname>
          <given-names>Aaron</given-names>
        </name>
        <xref ref-type="aff" rid="A1">1</xref>
        <xref ref-type="aff" rid="A2">2</xref>
        <xref ref-type="aff" rid="A6">6</xref>
        <xref rid="CR1" ref-type="corresp">†</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yosef</surname>
          <given-names>Nir</given-names>
        </name>
        <xref ref-type="aff" rid="A1">1</xref>
        <xref ref-type="aff" rid="A3">3</xref>
        <xref ref-type="aff" rid="A6">6</xref>
        <xref ref-type="aff" rid="A7">7</xref>
        <xref rid="CR1" ref-type="corresp">†</xref>
      </contrib>
    </contrib-group>
    <aff id="A1"><label>1</label>Center for Computational Biology, University of California, Berkeley, Berkeley, CA, USA</aff>
    <aff id="A2"><label>2</label>Department of Bioengineering, University of California, Berkeley, Berkeley, CA, USA</aff>
    <aff id="A3"><label>3</label>Department of Electrical Engineering and Computer Sciences, University of California, Berkeley, Berkeley, CA, USA</aff>
    <aff id="A4"><label>4</label>Department of Statistics, University of Michigan, Ann Arbor, Ann Arbor, MI, USA</aff>
    <aff id="A5"><label>5</label>BioLegend, Inc., San Diego, CA, USA</aff>
    <aff id="A6"><label>6</label>Chan Zuckerberg Biohub, San Francisco, CA, USA</aff>
    <aff id="A7"><label>7</label>Ragon Institute of MGH, MIT and Harvard</aff>
    <author-notes>
      <fn fn-type="equal" id="FN1">
        <label>*</label>
        <p id="P1">These authors contributed equally.</p>
      </fn>
      <fn fn-type="con" id="FN2">
        <p id="P2">Author contributions</p>
        <p id="P3">A.G. and Z.S. contributed equally. A.G., Z.S., A.S., and N.Y. designed the study. A.G., Z.S, R.L., J.R., and N.Y. conceived of the statistical model. A.G. implemented the totalVI software with input from R.L. K.L.N. designed and produced antibody panels and provided input on the study. Z.S. designed and led experiments with input from A.S. and N.Y. A.G. and Z.S. designed and implemented analysis methods and applied the software to analyze the data with input from A.S. and N.Y. A.S. and N.Y. supervised the work. A.G., Z.S., R.L., J.R., A.S., and N.Y. participated in writing the manuscript.</p>
      </fn>
      <corresp id="CR1"><label>†</label>Corresponding author: <email>astreets@berkeley.edu</email>, <email>niryosef@berkeley.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="nihms-submitted">
      <day>8</day>
      <month>1</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>2</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>8</month>
      <year>2021</year>
    </pub-date>
    <volume>18</volume>
    <issue>3</issue>
    <fpage>272</fpage>
    <lpage>282</lpage>
    <!--elocation-id from pubmed: 10.1038/s41592-020-01050-x-->
    <permissions>
      <license>
        <license-p>Users may view, print, copy, and download text and data-mine the content in such documents, for the purposes of academic research, subject always to the full Conditions of use:<uri xlink:href="http://www.nature.com/authors/editorial_policies/license.html#terms">http://www.nature.com/authors/editorial_policies/license.html#terms</uri></license-p>
      </license>
    </permissions>
    <abstract id="ABS1">
      <p id="P4">The paired measurement of RNA and surface proteins in single cells with CITE-seq is a promising approach to connect transcriptional variation with cell phenotypes and functions. However, combining these paired views into a unified representation of cell state is made challenging by the unique technical characteristics of each measurement. Here we present Total Variational Inference (totalVI; <ext-link ext-link-type="uri" xlink:href="https://scvi-tools.org">https://scvi-tools.org</ext-link>), a framework for end-to-end joint analysis of CITE-seq data that probabilistically represents the data as a composite of biological and technical factors including protein background and batch effects. To evaluate totalVI’s performance, we profiled immune cells from murine spleen and lymph nodes with CITE-seq, measuring over 100 surface proteins. We demonstrate that totalVI provides a cohesive solution for common analysis tasks like dimensionality reduction, the integration of datasets with different measured proteins, estimation of correlations between molecules, and differential expression testing.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec id="S1">
    <title>Introduction</title>
    <p id="P5">The advance of technologies for quantitative, high-throughput measurement of the molecular composition of single cells is continuously expanding our understanding of cell ontology, state, and function [<xref rid="R1" ref-type="bibr">1</xref>–<xref rid="R3" ref-type="bibr">3</xref>]. A growing body of single-cell multi-omic techniques now offers the ability to further refine our definitions of cellular identity by providing multiple views of molecular state [<xref rid="R4" ref-type="bibr">4</xref>, <xref rid="R5" ref-type="bibr">5</xref>]. By extending single-cell RNA-sequencing (scRNA-seq) to simultaneously measure the abundance of proteins on the cell surface, CITE-seq [<xref rid="R6" ref-type="bibr">6</xref>,<xref rid="R7" ref-type="bibr">7</xref>] presents the opportunity to connect the information that can be gleaned from the transcriptome [<xref rid="R8" ref-type="bibr">8</xref>, <xref rid="R9" ref-type="bibr">9</xref>] to the functional information contained in proteins [<xref rid="R10" ref-type="bibr">10</xref>, <xref rid="R11" ref-type="bibr">11</xref>]. Such experimental tools necessitate computational tools to synthesize these high-dimensional views.</p>
    <p id="P6">Recent studies have analyzed CITE-seq data using standard workflows for one modality (often RNA) to cluster cells while contextualizing these results using information from the other modality post-hoc [<xref rid="R12" ref-type="bibr">12</xref>–<xref rid="R14" ref-type="bibr">14</xref>]. This sequential approach biases the analysis to one modality and becomes increasingly inefficient as CITE-seq measurements expand to hundreds of proteins. A joint analysis that combines these two cellular views in an unbiased manner can harness the strengths of each modality and streamline data analysis. However, combining RNA and protein information to define a single representation of cell state poses several challenges. First, the RNA and protein data have unique sources of technical bias and noise. While the technical aspects of the RNA data have been addressed by a flourishing body of computational methods [<xref rid="R15" ref-type="bibr">15</xref>–<xref rid="R18" ref-type="bibr">18</xref>], the protein data present distinct technical bias such as background due to ambient or non-specifically bound antibodies. Second, as large-scale community efforts such as the Human Cell Atlas (HCA) [<xref rid="R8" ref-type="bibr">8</xref>] begin to include CITE-seq datasets, the need arises for scalable computational methods that can integrate datasets with different measured proteins.</p>
    <p id="P7">Here, we present totalVI (Total Variational Inference), a deep generative model that enables multifaceted analysis of CITE-seq data and addresses these challenges. totalVI learns a joint probabilistic representation of the paired measurements that accounts for the distinct noise and technical biases of each modality, as well as batch effects. For RNA, totalVI uses a modeling strategy similar to our previous work (scVI; [<xref rid="R15" ref-type="bibr">15</xref>]). For proteins, totalVI introduces a new model that separates the protein signal into background and foreground components, which enables background correction. The probabilistic representations learned by totalVI are built on a joint low-dimensional representation of the RNA and protein data that is derived using neural networks. totalVI can be used for disparate analysis tasks including joint dimensionality reduction, dataset integration (with and without missing proteins), protein background correction, estimation of correlations between genes and/or proteins, and differential expression testing. To highlight this functionality, we performed CITE-seq on murine spleen and lymph nodes, measuring up to 208 proteins. We used these data, along with public datasets, to evaluate totalVI’s performance across these tasks.</p>
  </sec>
  <sec id="S2">
    <title>Results</title>
    <sec id="S3">
      <title>The totalVI model</title>
      <p id="P8">totalVI uses a probabilistic latent variable model [<xref rid="R19" ref-type="bibr">19</xref>] to represent the uncertainty in the observed RNA and protein counts from a CITE-seq experiment as a composite of biological and technical sources of variation. The input to totalVI consists of the matrices of RNA and protein unique molecular identifier (UMI) counts (<xref rid="F1" ref-type="fig">Fig. 1a</xref>). Categorical covariates such as experimental batch or donor are optional inputs used for integrating datasets and referred to henceforth as “batch”. Input datasets can have different antibody panels, and a subset can be scRNA-seq datasets (i.e., without proteins).</p>
      <p id="P9">The output of totalVI consists of two components that can be used for downstream analysis (<xref rid="F1" ref-type="fig">Fig. 1b</xref>). The first component encodes each cell as a distribution in a low-dimensional latent space (20 dimensions throughout; <xref rid="SD1" ref-type="supplementary-material">Supplementary Note 1</xref>) that represents the information contained in both the RNA and protein data (<xref rid="SD1" ref-type="supplementary-material">Supplementary Note 2</xref>), while controlling for their respective noise properties and batch effects. The second component provides a way to estimate the parameters of the distributions that underlie the observed RNA and protein measurements (i.e., likelihoods) given a cell’s latent representation. These distributions explicitly account for nuisance factors in the observed data such as sequencing depth, protein background, and batch effects (<xref rid="SD1" ref-type="supplementary-material">Supplementary Note 3</xref>). Both components use neural networks to specify distributions.</p>
      <p id="P10">totalVI optimizes the parameters of both of its components simultaneously using the variational autoencoder (VAE) framework [<xref rid="R20" ref-type="bibr">20</xref>]. Accordingly, totalVI uses highly efficient techniques for stochastic optimization that make it appropriate for the scale of CITE-seq data. Following optimization, totalVI’s components are used for downstream analysis. The latent cell representations can be used as input to methods that stratify cells like clustering, visualization, or pseudotime inference algorithms, thus allowing these methods to leverage both protein and RNA information. Other downstream tasks specific to genes and proteins, like differential expression, are linked to the likelihood parameters from the second component of totalVI. Finally, by constricting the latent space to the standard simplex, the dimensions of the latent space can be related to the expression of genes and proteins with archetypal analysis [<xref rid="R21" ref-type="bibr">21</xref>], adding an alternative way to investigate global and local patterns of variation in the data. A detailed specification of the model along with further description of the quantities used in downstream tasks is in <xref rid="S12" ref-type="sec">Methods</xref>.</p>
    </sec>
    <sec id="S4">
      <title>CITE-seq profiling of murine spleen and lymph nodes</title>
      <p id="P11">We conducted a series of CITE-seq experiments that were designed to test the performance of totalVI on a variety of tasks. As a case study, we profiled murine spleen and lymph nodes, which contain heterogeneous immune cell populations that are well-characterized by surface protein markers. Cells were collected from two wild-type mice that were processed on separate days to serve as biological replicates (<xref rid="S12" ref-type="sec">Methods</xref>). In each experimental run, cells from one mouse were stained with two different panels of barcoded antibodies containing either 111 or 208 antibodies, of which the 111 antibodies were a subset (<xref rid="SD1" ref-type="supplementary-material">Supplementary Data</xref>). Spleen and lymph node cells stained separately with the same antibody panel were combined using hashtag antibodies [<xref rid="R22" ref-type="bibr">22</xref>]. We refer to the four resulting spleen/lymph node datasets by their panel and experimental day (experimental design in <xref rid="SD1" ref-type="supplementary-material">Supplementary Table 1</xref>), After pre-processing and filtering, these datasets contained a total of 32,648 cells (<xref rid="S12" ref-type="sec">Methods</xref>).</p>
    </sec>
    <sec id="S5">
      <title>totalVI fits CITE-seq data well and is scalable</title>
      <p id="P12">The usefulness of probabilistic models like totalVI depends on how well they fit the observed data. Furthermore, they should generalize to unobserved data (i.e., not overfit) and scale to a realistic range of input sizes. To verify that totalVI satisfies these prerequisites, we benchmarked it against factor analysis (FA), which can be viewed as a linear-Gaussian baseline, scHPF [<xref rid="R16" ref-type="bibr">16</xref>], which performs a Poisson matrix factorization via a hierarchical Bayesian model, and scVI [<xref rid="R15" ref-type="bibr">15</xref>], which was restricted to the RNA portion of the data. We expected the performance of totalVI and scVI to be comparable on the RNA data, as they share similar architectures. Our evaluation relied on fitting the models to several CITE-seq datasets spanning different species and tissues, including peripheral blood mononuclear cells (PBMC10k) [<xref rid="R23" ref-type="bibr">23</xref>] and mucosa-associated lymphoid tissue (MALT) [<xref rid="R24" ref-type="bibr">24</xref>] from humans, and our murine spleen and lymph node data (SLN111-D1).</p>
      <p id="P13">We first estimated how well each model fit data that was available to it during training using posterior predictive checks (PPC) [<xref rid="R16" ref-type="bibr">16</xref>, <xref rid="R25" ref-type="bibr">25</xref>]. To conduct PPCs, we generated replicated datasets (i.e., posterior predictive samples) by sampling from the fitted model (<xref rid="S12" ref-type="sec">Methods</xref>). We then assessed how well these replicated datasets maintained the properties of the observed data with two metrics. First, we measured the similarity between the coefficient of variation (CV) per gene and protein of the replicated data to the observed CVs, thus evaluating how well the mean-variance relationship of the data is preserved. Second, we compared the replicated and raw data at the gene and protein level using the Mann-Whitney U statistic, which measures the extent to which the replicated and raw data come from the same distribution. totalVI had superior performance on both metrics (<xref rid="F6" ref-type="fig">Extended Data Fig. 1a</xref>, <xref rid="F6" ref-type="fig">b</xref>).</p>
      <p id="P14">We then evaluated how well each model generalizes to cells that were not available during training by generating replicated datasets conditioned on the held-out cells and computing two opposing metrics of predictive performance. First, we assessed how well the average replicated data set matched the observed held-out data by mean absolute error. Second, we quantified how well the interval of values from replicated data sets covered the observed held-out data values (calibration error [<xref rid="R26" ref-type="bibr">26</xref>]). These two metrics were computed separately for genes and proteins. On the held-out protein data, totalVI outperformed FA in both the mean absolute error and calibration error metrics. Comparing totalVI to scHPF revealed a tradeoff between calibration and held-out error for both the RNA and protein data. On the held-out RNA data, totalVI and scVI were largely comparable and outperformed FA (<xref rid="F7" ref-type="fig">Extended Data Fig. 2a</xref>, <xref rid="F7" ref-type="fig">b</xref>). totalVI and scVI also had a comparable held-out predictive log-likelihood for the RNA data (<xref rid="F7" ref-type="fig">Extended Data Fig. 2c</xref>). Finally, totalVI’s performance was also stable across multiple initializations (<xref rid="F7" ref-type="fig">Extended Data Fig. 2d</xref>, <xref rid="F7" ref-type="fig">e</xref>).</p>
      <p id="P15">To assess the scalability of totalVI, we concatenated all of our spleen and lymph node data (SLN-all) and recorded the training time for different sizes of subsets of this data. totalVI and scVI had similar dependence between run time and input size (<xref rid="F7" ref-type="fig">Extended Data Fig. 2e</xref>). Furthermore, we observed that totalVI can readily handle large data sets, for instance, processing the complete set of approximately 33,000 cells with over 4,100 features (genes and proteins) in under one hour.</p>
    </sec>
    <sec id="S6">
      <title>totalVI identifies and corrects for protein background</title>
      <p id="P16">To analyze protein data in an accurate and quantitative manner, it is necessary to distinguish between true biological signal and technical bias in the protein measurement. Background is a type of technical bias that is characteristic of antibody-based measurements [<xref rid="R6" ref-type="bibr">6</xref>, <xref rid="R7" ref-type="bibr">7</xref>, <xref rid="R27" ref-type="bibr">27</xref>]. In CITE-seq data, protein measurements include non-negligible background that arises experimentally from a combination of ambient antibodies, which can be detected in empty droplets, and non-specific antibody binding, which can be detected above ambient levels in cells with no expected expression of a protein, such as CD19 in T cells (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="F8" ref-type="fig">Extended Data Fig. 3a</xref>–<xref rid="F8" ref-type="fig">c</xref>, <xref rid="F8" ref-type="fig">g</xref>). Recent methods have described background from ambient RNA [<xref rid="R28" ref-type="bibr">28</xref>–<xref rid="R30" ref-type="bibr">30</xref>], but the presence of background is more pronounced in protein measurements (<xref rid="F8" ref-type="fig">Extended Data Fig. 3d</xref>–<xref rid="F8" ref-type="fig">f</xref>, <xref rid="SD1" ref-type="supplementary-material">Supplementary Note 3</xref>).</p>
      <p id="P17">Previous studies of CITE-seq data derived a single decision rule for every protein, specifying the minimum number of counts required to be considered foreground by using either spiked-in negative control cells [<xref rid="R6" ref-type="bibr">6</xref>] or a Gaussian mixture model (GMM) to distinguish a background and foreground component for each protein [<xref rid="R31" ref-type="bibr">31</xref>]. Using the same boundary for all cells, however, relies on the assumption that all cells are subject to a similar background distribution of the protein in question and, in the case of a two-component GMM, that the foreground component is comparable across cell types.</p>
      <p id="P18">totalVI instead models protein background as cell- and protein-specific. To do this, totalVI models each protein measurement as a mixture of foreground and background components that depends on the cell’s representation in the latent space, and therefore the full transcriptomic and proteomic profile of that cell. The mixture is weighted by the probability that the counts of a protein in a given cell came from the background component (<xref rid="F1" ref-type="fig">Fig. 1b</xref>, <xref rid="S12" ref-type="sec">Methods</xref>).</p>
      <p id="P19">To evaluate totalVI’s ability to quantitatively identify protein background, we tested how well major cell types could be predicted by the foreground probability (one minus the background probability) of common marker proteins in the SLN111-D1 dataset (<xref rid="S12" ref-type="sec">Methods</xref>). As a baseline for comparison, we used the assignment probabilities from a two-component GMM. For nine out of eleven known marker proteins, both totalVI and the GMM performed well at classifying cell types by marker foreground probability (ROC AUC &gt; 0.97; <xref rid="SD1" ref-type="supplementary-material">Supplementary Table 2</xref>). For these proteins, such as the B cell marker CD19, the distributions of foreground and background expression were easily separated (<xref rid="F8" ref-type="fig">Extended Data Fig. 3a</xref> and <xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 1a</xref>–<xref rid="SD1" ref-type="supplementary-material">d</xref>). However, for the B cell marker CD20 and the T cell marker CD28, distributions of foreground and background expression were highly overlapping (<xref rid="F8" ref-type="fig">Extended Data Fig. 3b</xref>, <xref rid="F8" ref-type="fig">c</xref>), and totalVI noticeably outperformed the GMM (<xref rid="F8" ref-type="fig">Extended Data Fig. 3h</xref>). totalVI also performed better at distinguishing foreground and background for this set of proteins in the SLN208-D1 dataset, even after normalizing the raw data using isotype control antibodies [<xref rid="R32" ref-type="bibr">32</xref>] prior to fitting the GMM (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="SD1" ref-type="supplementary-material">Supplementary Table 3</xref>). Across all proteins, the totalVI foreground probability tended to fall near zero or one, indicating the model’s certainty about most measurements (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 1e</xref>).</p>
      <p id="P20">Using CD20 and CD28 as examples, we see how totalVI’s identification of protein foreground and background is more accurate than a single decision boundary. In the case of CD20 (encoded by Ms4a1 RNA), a GMM-based cutoff resulted in numerous false negatives (blue cells in <xref rid="F2" ref-type="fig">Fig. 2a</xref>–<xref rid="F2" ref-type="fig">c</xref>, <xref rid="S12" ref-type="sec">Methods</xref>). These cells, identified by totalVI as having high foreground probability despite low CD20 expression, clustered with B cells and expressed Ms4a1 RNA, confirming their identity as B cells. In contrast, cells with similarly low CD20 expression but with low totalVI foreground probability (green cells) clustered with T cells and did not express Ms4a1 (<xref rid="F2" ref-type="fig">Fig. 2a</xref>–<xref rid="F2" ref-type="fig">c</xref>). In the case of CD28, a GMM-based cutoff resulted in numerous false positives (red cells in <xref rid="F2" ref-type="fig">Fig. 2d</xref>–<xref rid="F2" ref-type="fig">f</xref>), while totalVI correctly identified that these cells with high CD28 had low foreground probability, and were in fact B cells rather than T cells. totalVI is not limited to distinguishing globally bimodal distributions (e.g., CD4 in peripheral blood mononuclear cells globally follows a trimodal distribution (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="F9" ref-type="fig">Extended Data Fig. 4a</xref>, <xref rid="F9" ref-type="fig">b</xref>)).</p>
      <p id="P21">For downstream analysis, totalVI uses foreground probabilities in a quantitative manner to remove protein background. Specifically, totalVI can denoise the protein data by setting the background component to zero, while also accounting for the measurement uncertainty of the foreground component (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="F2" ref-type="fig">Fig. 2g</xref>–<xref rid="F2" ref-type="fig">j</xref>, <xref rid="F9" ref-type="fig">Extended Data Fig. 4f</xref>, <xref rid="F9" ref-type="fig">g</xref>). We use the expectation of denoised values for visualization (<xref rid="F9" ref-type="fig">Extended Data Fig. 4c</xref>–<xref rid="F9" ref-type="fig">e</xref>).</p>
      <p id="P22">For statistical analyses like differential expression testing, totalVI uses distributions over the denoised values as opposed to testing directly on a denoised data matrix, which could introduce bias [<xref rid="R33" ref-type="bibr">33</xref>]. For analyses focused on the relationships between features, we developed a novel sampling method that controls for nuisance variation while avoiding denoising-induced artifacts (<xref rid="S12" ref-type="sec">Methods</xref>). We applied this method to construct denoised feature-feature correlation matrices and found that totalVI preserved the independence of negative control genes (<xref rid="F10" ref-type="fig">Extended Data Fig. 5a</xref>, <xref rid="F10" ref-type="fig">b</xref>, <xref rid="F10" ref-type="fig">d</xref>, <xref rid="F10" ref-type="fig">e</xref>), lending confidence that downstream analysis with totalVI is not subject to spurious feature relationships arising from data denoising. Observing the correlations between proteins and their encoding RNA, we found that totalVI correlations were generally higher in magnitude than raw correlations (<xref rid="F10" ref-type="fig">Extended Data Fig. 5c</xref>, <xref rid="F10" ref-type="fig">f</xref>).</p>
    </sec>
    <sec id="S7">
      <title>totalVI integrates CITE-seq datasets</title>
      <p id="P23">We next evaluated totalVI’s ability to integrate data from CITE-seq experiments that measured different sets of proteins. Integration is built into totalVI via an assumption of independence between the latent space and the batch. Consequently, totalVI produces both an integrated latent space, as well as corrected expression values. In the case of unmatched protein panels, totalVI can impute missing proteins for a particular dataset by using the information learned from those proteins in the datasets in which they were observed (<xref rid="S12" ref-type="sec">Methods</xref>). We applied totalVI to the SLN111-D1 and SLN208-D2 datasets, which had a clear batch effect that was revealed by principal component analysis (<xref rid="F3" ref-type="fig">Fig. 3a</xref>). We benchmarked totalVI against three state-of-the-art integration methods: Seurat v3 [<xref rid="R34" ref-type="bibr">34</xref>], Scanorama [<xref rid="R35" ref-type="bibr">35</xref>], and Harmony [<xref rid="R36" ref-type="bibr">36</xref>]. We assessed totalVI in the case of matched panels (using only the 111 overlapping proteins between the two panels; denoted as totalVI-intersect) and unmatched panels (using the union of the two protein panels, which results in missing data for some proteins; denoted as totalVI-union). Despite being designed for scRNA-seq, the other methods could be extended to handle CITE-seq data, though only in the case of matched panels (<xref rid="S12" ref-type="sec">Methods</xref>).</p>
      <p id="P24">We used four metrics to quantify how well each method mixed datasets along with how well they maintained the original structure of each dataset (<xref rid="S12" ref-type="sec">Methods</xref>). The first two metrics (the latent mixing metric and the measurement mixing metric) quantify how well cells mix across datasets in the low-dimensional latent space and the observed expression space (per feature), respectively. The second two metrics (the feature retention metric and clustering metric) summarize how well each method preserves each dataset’s original structure, either at the feature-level through autocorrelation (feature retention metric), or at the cell-level through clusters (clustering metric). Finally, we benchmarked totalVI’s accuracy of predicting protein expression in cases where measurements are available in only one of the datasets.</p>
      <p id="P25">We found that after integration, cells of similar types were co-located in the latent space, as evidenced by the shared expression of key marker proteins like CD4, CD8a, and CD19 (<xref rid="F3" ref-type="fig">Fig. 3b</xref>, <xref rid="F3" ref-type="fig">c</xref>; <xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 2</xref>). Moreover, totalVI outperformed the other methods in the feature retention and clustering metrics, while comparing favorably in the remaining metrics (<xref rid="F3" ref-type="fig">Fig. 3d</xref>, <xref rid="F3" ref-type="fig">e</xref>). totalVI-union and totalVI-intersect performed similarly, indicating that the presence of missing data did not diminish totalVI’s integration capabilities. We repeated this analysis on two public datasets of PBMCs (PBMC10k [<xref rid="R23" ref-type="bibr">23</xref>], PBMC5k [<xref rid="R37" ref-type="bibr">37</xref>]), which also had very different sequencing depths, and observed similarly favorable performance for totalVI (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 3a</xref>–<xref rid="SD1" ref-type="supplementary-material">f</xref>).</p>
      <p id="P26">Since totalVI-union can integrate CITE-seq datasets with different protein panels, we reasoned it could also integrate a CITE-seq dataset with a standard scRNA-seq dataset that has not measured proteins and impute the missing protein measurements. We assessed this by integrating SLN111-D1 and SLN111-D2, where we held out the proteins of SLN111-D2. We first observed that totalVI can learn a biologically meaningful integrated latent representation despite the large amount of missing data (<xref rid="F3" ref-type="fig">Fig. 3f</xref>). Indeed, the location of observed protein expression in the latent space revealed the same broad immune cell types. Next, we imputed the protein expression for the cells in SLN111-D2 (<xref rid="S12" ref-type="sec">Methods</xref>). For key cell type marker proteins, totalVI-imputed proteins shared similar patterns of expression as the held-out observed proteins (<xref rid="F3" ref-type="fig">Fig. 3g</xref>).</p>
      <p id="P27">To further quantify imputation accuracy, we ran totalVI 30 times with resampled training sets and, for each run, computed the root mean squared log error between imputed and observed protein values. We compared totalVI to Seurat v3, which imputes protein values based on smoothing of protein values from mutual nearest RNA neighbors. The accuracy of 80 proteins was significantly different between totalVI and Seurat v3 (Student’s T-test, Benjamini–Hochberg (BH)-adjusted p-value &lt;0.05). The mean error of totalVI was better than the Seurat v3 error for approximately 68% of the 80 proteins (<xref rid="F3" ref-type="fig">Fig. 3h</xref>). We also performed this task on PBMCs (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 3h</xref>, <xref rid="SD1" ref-type="supplementary-material">i</xref>), in which we also compared to another protein imputation method, cTP-net [<xref rid="R38" ref-type="bibr">38</xref>]. We found that totalVI and Seurat v3 performed more similarly, while outperforming cTP-net. For further discussion on the merits and limitations of imputing missing proteins, see <xref rid="SD1" ref-type="supplementary-material">Supplementary Note 4</xref>.</p>
    </sec>
    <sec id="S8">
      <title>totalVI identifies differentially expressed genes and proteins</title>
      <p id="P28">totalVI can leverage its estimates of uncertainty from a single model fit to detect differentially expressed features between two sets of cells while controlling for noise and other modeled technical biases like sequencing depth (RNA), background (protein), and batch effects (both). To do so, totalVI estimates a distribution over the log fold change (LFC) of expression between the two sets of cells, which is then used to quantify how well the data support a hypothesis of differential expression (using Bayes factors [<xref rid="R15" ref-type="bibr">15</xref>, <xref rid="R39" ref-type="bibr">39</xref>, <xref rid="R40" ref-type="bibr">40</xref>]; <xref rid="S12" ref-type="sec">Methods</xref>).</p>
      <p id="P29">To evaluate totalVI as a framework for differential expression (DE) analysis in the common scenario of multiple experiments, we integrated all four spleen and lymph node datasets (SLN-all; totalVI-intersect). totalVI provided a descriptive representation of this data, as inspection of established cell type markers associated clusters of cells in the latent space with immune cell types or states (<xref rid="F4" ref-type="fig">Fig. 4a</xref>, <xref rid="F11" ref-type="fig">Extended Data Fig. 6</xref>, <xref rid="S12" ref-type="sec">Methods</xref>).</p>
      <p id="P30">Beyond markers used for annotation, we found that a totalVI one-vs-all DE test (in which one cell type is compared to all others) identified many additional features as differentially expressed (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="F4" ref-type="fig">Fig. 4b</xref>, <xref rid="F4" ref-type="fig">c</xref>; <xref rid="SD1" ref-type="supplementary-material">Supplementary Data</xref>). For example, totalVI identified the gene Klrc2 as differentially expressed in both natural killer (NK) cells and gamma/delta T cells, which has previously been shown to be upregulated in these populations relative to alpha/beta T cells [<xref rid="R41" ref-type="bibr">41</xref>]. For proteins, totalVI identified CD335 (NKp46) as among the top markers for NK cells, which is a canonical marker used for sorting [<xref rid="R42" ref-type="bibr">42</xref>], and CD43, which is associated with the development of NK cells [<xref rid="R43" ref-type="bibr">43</xref>].</p>
      <p id="P31">Overall, the Bayes factors inferred by totalVI for the RNA data were highly correlated with those produced by scVI (<xref rid="F12" ref-type="fig">Extended Data Fig. 7a</xref>), which has been independently evaluated [<xref rid="R40" ref-type="bibr">40</xref>]; therefore, we focused on evaluating the protein DE test. Throughout, we compared totalVI to two baseline methods: a Welch’s t-test and a Wilcoxon rank-sum test. We also compared to a version of totalVI in which the protein background was not corrected (totalVI-wBG).</p>
      <p id="P32">We first evaluated the extent of false positives using isotype control antibodies. As isotype controls lack target specificity, differences in their abundance between cell types likely stem from background or other technical sources of variation. Applying each method to the SLN208-D1 dataset, which contained nine isotype controls, we found that totalVI called the fewest (and often zero) isotype controls as differentially expressed in one-vs-all tests (<xref rid="F12" ref-type="fig">Extended Data Fig. 7b</xref>). We next tested the reproducibility of the methods across biological replicates, finding that totalVI outperformed the baseline methods (<xref rid="F12" ref-type="fig">Extended Data Fig. 7c</xref>–<xref rid="F12" ref-type="fig">e</xref>). The totalVI DE test was also reproducible across experimental designs: one in which the two CITE-seq datasets had the same protein panel, and another in which proteins were measured in only one of the datasets (<xref rid="F12" ref-type="fig">Extended Data Fig. 7f</xref>).</p>
      <p id="P33">To gain further insight into the extent of false positive and false negative DE calls, we compared ICOS-high regulatory T cells (ICOS-high Tregs) and conventional CD4 T cells from SLN-all. This test is challenging because these two cell types share many of the same upregulated and downregulated features when compared with other immune cell types. Our analysis was based on a list of putative positive and negative surface proteins curated from previous studies that used flow cytometry (<xref rid="S12" ref-type="sec">Methods</xref>).</p>
      <p id="P34">We found that totalVI and the baseline methods identified these putative positives as significantly upregulated; however, the two baseline methods also incorrectly called all putative negatives as upregulated (<xref rid="F4" ref-type="fig">Fig. 4d</xref>). Globally, the two baseline methods both called 78 out of 110 proteins as differentially expressed, many of which are likely the result of differences in background. While filtering proteins by the observed LFC in the baseline methods may reduce these false positives, the improvement would be limited (e.g., CD5 and IgD had similar LFCs and therefore could not be distinguished; <xref rid="F4" ref-type="fig">Fig. 4d</xref>). The totalVI test, in contrast, correctly classified all putative negatives and positives (<xref rid="F4" ref-type="fig">Fig. 4e</xref>), calling 28 proteins differentially expressed in total. To further support the utility of correcting for protein background, we performed this test using totalVI-wBG, which improved upon the baseline methods, but also falsely called some putative negatives as positives (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 4a</xref>).</p>
      <p id="P35">Finally, totalVI’s LFC estimates (defined as the median of the LFC distribution) better captured the underlying biological signal. For example, in a test of CD4 T cells vs all from SLN-all, the canonical marker CD4 had a higher LFC than in the raw data (<xref rid="F4" ref-type="fig">Fig. 4f</xref>). Additional markers like CD28 (T cell marker) and CD20 (B cell marker), which we previously highlighted as having highly overlapping foreground and background components, had respectively higher and lower LFCs compared to LFCs derived from the raw data.</p>
    </sec>
    <sec id="S9">
      <title>totalVI provides an interpretable latent space</title>
      <p id="P36">Deep-learning-based methods for dimensionality reduction tend to rely on “black-box” models, making it difficult to interpret the coordinates of their inferred low-dimensional latent spaces. Despite the non-linear relationship between the totalVI latent space and the expression space, totalVI provides a way to relate each latent dimension to the expression of individual features via archetypal analysis [<xref rid="R21" ref-type="bibr">21</xref>, <xref rid="R44" ref-type="bibr">44</xref>, <xref rid="R45" ref-type="bibr">45</xref>] (<xref rid="S12" ref-type="sec">Methods</xref>). Archetypes, which correspond to dimensions of the latent space, represent a summary of expression programs, the combination of which characterizes a cell. To demonstrate archetypal analysis, we ranked the features most associated with each archetype in the SLN-all dataset (<xref rid="F13" ref-type="fig">Extended Data Fig. 8a</xref>, <xref rid="F13" ref-type="fig">b</xref>), finding that some archetypes corresponded to specific cell types, and others captured more global variation (<xref rid="F14" ref-type="fig">Extended Data Fig. 9a</xref>). For example, archetype 16 was associated with high protein expression of CD93 and CD24, which mark the transitional B cell subset (<xref rid="F14" ref-type="fig">Extended Data Fig. 9b</xref>). In contrast, archetype 7 was associated with interferon-response genes such as Ifit3 and Isg20 and reflected within-cell-type variability in several subsets, including CD4 and CD8 T cells, B cells, Ly6-high monocytes, and neutrophils (<xref rid="F14" ref-type="fig">Extended Data Fig. 9c</xref> and <xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 5</xref>). We also used archetypal analysis to evaluate the influence of proteins on the latent space, and found that all but one archetype had proteins overrepresented in its top features (<xref rid="F13" ref-type="fig">Extended Data Fig. 8c</xref>). This suggests that the inclusion of proteins significantly influences representations in the totalVI latent space.</p>
    </sec>
    <sec id="S10">
      <title>Characterization of B cell heterogeneity in the spleen and lymph nodes with RNA and proteins</title>
      <p id="P37">We next demonstrate how a joint representation of RNA and protein can be used to characterize cell identities within a specific immune compartment and in the context of multiple samples. Here, we used the totalVI-intersect model fit on the SLN-all dataset and focused on the B cell population (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="F4" ref-type="fig">Fig. 4a</xref>).</p>
      <p id="P38">We started with characterizing cell identities using prior biological knowledge by visualizing the expression of six surface proteins commonly used for isolating B cell subsets (<xref rid="F5" ref-type="fig">Fig. 5b</xref>, <xref rid="SD1" ref-type="supplementary-material">Supplementary Table 4</xref>). These subsets included transitional (marked by CD93 and CD24), mature (marked by IgD and CD23), B1 (marked by CD43) and marginal zone (MZ, marked by CD21) B cells. These markers stratified the B cells into groups that were largely consistent with unsupervised clustering (<xref rid="S12" ref-type="sec">Methods</xref>). RNA expression of these markers followed similar patterns to the proteins they encode (<xref rid="F5" ref-type="fig">Fig. 5c</xref>).</p>
      <p id="P39">The difference in subset composition between the spleen and lymph nodes (<xref rid="F5" ref-type="fig">Fig. 5d</xref>) was consistent with previous studies (<xref rid="F5" ref-type="fig">Fig. 5e</xref>, [<xref rid="R46" ref-type="bibr">46</xref>, <xref rid="R47" ref-type="bibr">47</xref>]). In particular, clusters spanned the developmental range from recent bone-marrow emigrants in the splenic transitional B cell subset to mature cells present in both tissues. As expected, the B1 and MZ B cell subsets were found primarily in the spleen.</p>
      <p id="P40">In a more unbiased approach, we quantified the differences between the B cell clusters with the totalVI one-vs-all DE test (<xref rid="F5" ref-type="fig">Fig. 5f</xref>, <xref rid="F5" ref-type="fig">g</xref>, <xref rid="S12" ref-type="sec">Methods</xref>). As expected, the six known surface markers were among the top differentially expressed protein markers (<xref rid="F5" ref-type="fig">Fig. 5f</xref>). Most RNA molecules encoding the marker proteins were also differentially expressed along with informative genes whose products are not present on the cell surface, such as the transcription factor Bhlhe41 that marks B1 B cells (<xref rid="F5" ref-type="fig">Fig. 5g</xref>, [<xref rid="R48" ref-type="bibr">48</xref>]).</p>
      <p id="P41">Globally, protein data combined with a transcriptome-wide view enabled a more refined characterization of variation within the four major sub-populations identified above by surface markers. For example, a sub-population of mature B cells labeled here as Ifit3-high B cells expressed all of the protein and RNA markers of mature B cells and could not be clearly distinguished from the remaining mature B cells based on protein data alone (maximum LFC across all proteins was less than 0.19). Nevertheless, with transcriptome-wide DE analysis, this cluster could be distinguished as a sub-type of mature cells by the elevated expression of interferon response genes (<xref rid="F5" ref-type="fig">Fig. 5g</xref>). This observation was supported by a gene signature analysis with Vision [<xref rid="R49" ref-type="bibr">49</xref>], which identified two interferon response signatures enriched in the Ifit3-high B cell cluster (<xref rid="S12" ref-type="sec">Methods</xref>, <xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 5a</xref>, <xref rid="SD1" ref-type="supplementary-material">b</xref>). The expression of interferon response genes was not expected since no inflammation was induced, however we found the Ifit3-high B cell cluster as well as Ifit3-high T cell clusters to be represented in both biological replicates, and therefore took it to capture part of the biology in the SLN-all dataset (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 5c</xref>, <xref rid="SD1" ref-type="supplementary-material">d</xref>).</p>
      <p id="P42">Next, we explored the variability within transitional B cells and its relationship with B cell development. Interestingly, latent dimension 16 (<inline-formula><mml:math display="inline" id="M1"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>) captured a gradual transition within this cluster: from a small population of Rag1 expressing cells (indicating early development [<xref rid="R46" ref-type="bibr">46</xref>]) to cells that were closer to the mature cluster (<xref rid="F5" ref-type="fig">Fig. 5i</xref>, <xref rid="F15" ref-type="fig">Extended Data Fig. 10a</xref>, <xref rid="F15" ref-type="fig">b</xref>). To explore how development from transitional to mature B cells may be associated with coordinated changes in gene and protein expression, we calculated the totalVI Spearman correlations separately within transitional and mature B cells for a set of features that distinguished the two subsets (<xref rid="S12" ref-type="sec">Methods</xref>). Hierarchical clustering of the correlation matrix within the transitional B cells clearly stratified these features into two anti-correlated modules: one associated with transitional B cells and the other with mature B cells (<xref rid="F5" ref-type="fig">Fig. 5h</xref>). These modules, however, were not present in mature B cells, indicating that the apparent coordination may be a characteristic of the transitional state (<xref rid="F15" ref-type="fig">Extended Data Fig. 10c</xref>). Within transitional B cells, we found that the features in the two modules significantly correlated with the axis of maturation captured by <inline-formula><mml:math display="inline" id="M2"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (<xref rid="F15" ref-type="fig">Extended Data Fig. 10d</xref>). Along this axis, features in the transitional module decreased while those in the mature module increased (<xref rid="F5" ref-type="fig">Fig. 5j</xref>, <xref rid="S12" ref-type="sec">Methods</xref>). These results point to a program of transitional B cell maturation that consists of coordinated activation and repression of multiple genes and proteins, leading to a gradual transition in cell state that is captured by a specific dimension of the totalVI latent space.</p>
    </sec>
  </sec>
  <sec id="S11">
    <title>Discussion</title>
    <p id="P43">totalVI is a scalable, probabilistic framework for end-to-end analysis of paired transcriptome and protein measurements in single cells. Like other multi-omics analysis methods [<xref rid="R31" ref-type="bibr">31</xref>, <xref rid="R50" ref-type="bibr">50</xref>, <xref rid="R51" ref-type="bibr">51</xref>], totalVI assumes that RNA and protein measurements are generated from the same latent space of cells that captures their state. A distinction of totalVI is that it explicitly models modality-specific technical factors like protein background, which we demonstrated can enable a denoised view of the data and more accurate differential expression results. totalVI is also unique in its ability to handle missing protein data, which enables integration with growing public data resources like the Human Cell Atlas [<xref rid="R8" ref-type="bibr">8</xref>].</p>
    <p id="P44">Beyond the characterization of cell types, totalVI can also uncover relationships between RNA and protein molecules within a cell. For example, totalVI could be used to investigate the relationship between the level of an RNA transcript and the level of its encoded protein in different biological settings, which remains an open question [<xref rid="R52" ref-type="bibr">52</xref>]. We found that the totalVI correlations were higher in magnitude than raw correlations across the majority of RNA-protein pairs, suggesting that the low correlations observed previously [<xref rid="R6" ref-type="bibr">6</xref>, <xref rid="R7" ref-type="bibr">7</xref>] could have been due to technical noise. Future work quantifying correlations and regulatory relationships between RNA and protein features could inform our understanding of signal transduction pathways or transcription and translation dynamics [<xref rid="R53" ref-type="bibr">53</xref>].</p>
    <p id="P45">While the totalVI model was designed to reflect our understanding of the CITE-seq experimental data-generating process (<xref rid="SD1" ref-type="supplementary-material">Supplementary Note 3</xref>), totalVI can also be used to inform experimental design. For instance, totalVI could help identify antibody titrations or experimental methods that improve signal-to-noise. totalVI could also identify sequencing depths for RNA and protein libraries that balance the information gained per measurement in various analysis tasks with the cost of additional sequencing [<xref rid="R54" ref-type="bibr">54</xref>, <xref rid="R55" ref-type="bibr">55</xref>].</p>
    <p id="P46">Through a single pipeline that jointly analyzes paired RNA and protein measurements, totalVI simplifies data analysis and interpretation that would otherwise be conducted in separate pipelines whose disparate results must be reconciled post hoc. totalVI is available through the scvi-tools software package, which connects it with the popular Scanpy [<xref rid="R56" ref-type="bibr">56</xref>] and Seurat [<xref rid="R34" ref-type="bibr">34</xref>] pipelines, and enables analysis on free cloud computing environments like Google Colab. The flexibility and scalability of totalVI make it easily applicable to future datasets with larger protein panels, and enable extensions that incorporate additional paired measurements. For example, we expect totalVI to naturally handle intracellular proteins measured with barcoded antibodies. Further additions of modalities like chromatin accessibility [<xref rid="R57" ref-type="bibr">57</xref>] or clonotype features [<xref rid="R58" ref-type="bibr">58</xref>] can also be implemented within the totalVI codebase with consideration of the modality-specific likelihood. By combining multiple views of cellular processes, totalVI can reveal a more complete picture that redefines cell states and elucidates mechanistic relationships between molecular components of the cell.</p>
  </sec>
  <sec id="S12">
    <title>Methods</title>
    <sec id="S13">
      <title>The totalVI model</title>
      <p id="P47">totalVI estimates a conditional distribution for cell <inline-formula><mml:math display="inline" id="M3"><mml:mi>n</mml:mi></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M4"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, in which <inline-formula><mml:math display="inline" id="M5"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the <inline-formula><mml:math display="inline" id="M6"><mml:mi>G</mml:mi></mml:math></inline-formula>-dimensional vector of observed RNA counts (<inline-formula><mml:math display="inline" id="M7"><mml:mi>G</mml:mi></mml:math></inline-formula> genes), <inline-formula><mml:math display="inline" id="M8"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the <inline-formula><mml:math display="inline" id="M9"><mml:mi>T</mml:mi></mml:math></inline-formula>-dimensional vector of observed protein counts (<inline-formula><mml:math display="inline" id="M10"><mml:mi>T</mml:mi></mml:math></inline-formula> proteins) and <inline-formula><mml:math display="inline" id="M11"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the <inline-formula><mml:math display="inline" id="M12"><mml:mi>B</mml:mi></mml:math></inline-formula>-dimensional one-hot vector describing the batch index (experiment identifier). In total, there are <inline-formula><mml:math display="inline" id="M13"><mml:mi>N</mml:mi></mml:math></inline-formula> cells. We use <inline-formula><mml:math display="inline" id="M14"><mml:mi>v</mml:mi></mml:math></inline-formula> to refer to the set of all generative parameters, which are described throughout this section. This distribution is estimated using the framework of variational autoencoders (VAE; [<xref rid="R20" ref-type="bibr">20</xref>]).</p>
      <p id="P48">We begin by describing the generative process, for which a graphical summary is in <xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 6</xref> and an algorithmic summary is in <xref rid="FD10" ref-type="disp-formula">Algorithm 1</xref>. We then describe the inference procedure, as well as how downstream analysis tasks are directly linked to posterior queries of the model.</p>
      <sec id="S14">
        <title>Priors</title>
        <p id="P49">The latent cell representation <inline-formula><mml:math display="inline" id="M15"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>LogisticNormal</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where the logistic normal distribution is a distribution over the probability simplex. This specification, which has also been applied in the context of linear VAEs for scRNA-seq [<xref rid="R59" ref-type="bibr">59</xref>], enables cells to be interpreted with archetypal analysis. Typically in VAEs, <inline-formula><mml:math display="inline" id="M16"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> follows an isotropic normal distribution, which is chosen for computational convenience [<xref rid="R20" ref-type="bibr">20</xref>]. In this setting, a logistic normal distribution arises as transforming a sample from a normal distribution with a softmax function. For all experiments, we set <inline-formula><mml:math display="inline" id="M17"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to 20 dimensions. We discuss the choice of number of latent dimensions in <xref rid="SD1" ref-type="supplementary-material">Supplementary Note 1</xref>.</p>
        <p id="P50">The latent RNA size factor <inline-formula><mml:math display="inline" id="M18"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>~</mml:mo><mml:mtext>LogNormal</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>ℓ</mml:mi><mml:mi>μ</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>ℓ</mml:mi><mml:mrow><mml:msup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>⊤</mml:mo></mml:msubsup><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math display="inline" id="M19"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>μ</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>B</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M20"><mml:mrow><mml:msubsup><mml:mi>ℓ</mml:mi><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>∈</mml:mo><mml:msubsup><mml:mi>ℝ</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> are set to the empirical mean and variance of the log RNA library size (defined as total RNA counts of a cell) per batch. We use a protein-specific prior for the protein background intensity, where <inline-formula><mml:math display="inline" id="M21"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>∼</mml:mo><mml:mtext>LogNormal</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>t</mml:mi><mml:mo>⊤</mml:mo></mml:msubsup><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The parameters for the background intensity, <inline-formula><mml:math display="inline" id="M22"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mi>ℝ</mml:mi><mml:mi>B</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M23"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msubsup><mml:mi>ℝ</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, are protein specific and are treated as model parameters learned during inference. This prior is motivated by the observation that some component of the background is due to ambient antibodies. By being batch specific, these priors on <inline-formula><mml:math display="inline" id="M24"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M25"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> account for differences in sequencing depth between datasets. A prior can also be thought of as regularizing the posterior distribution, thus reducing the influence of outliers [<xref rid="R60" ref-type="bibr">60</xref>]. The selection of prior distribution was guided by the computational tractability and by properties that are of interest (e.g., non-negativity).</p>
      </sec>
      <sec id="S15">
        <title>RNA likelihood</title>
        <p id="P51">Given <inline-formula><mml:math display="inline" id="M26"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M27"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and <inline-formula><mml:math display="inline" id="M28"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, an observed expression level <inline-formula><mml:math display="inline" id="M29"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> follows a negative binomial distribution, which we present here as a Gamma-Poisson mixture:
<disp-formula id="FD1"><label>(1)</label><mml:math display="block" id="M30"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>ρ</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD2"><label>(2)</label><mml:math display="block" id="M31"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>Gamma</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD3"><label>(3)</label><mml:math display="block" id="M32"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>Poisson</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
The gamma distribution is parameterized by its shape and mean. The mean is equal to <inline-formula><mml:math display="inline" id="M33"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math display="inline" id="M34"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, a scaling factor, is multiplied by <inline-formula><mml:math display="inline" id="M35"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, interpreted as a normalized gene frequency (because <inline-formula><mml:math display="inline" id="M36"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is nonnegative and sums to one). <inline-formula><mml:math display="inline" id="M37"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is the output of a neural network <inline-formula><mml:math display="inline" id="M38"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>ρ</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which takes <inline-formula><mml:math display="inline" id="M39"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M40"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as input (<xref rid="FD10" ref-type="disp-formula">Algorithm 1</xref>).</p>
        <p id="P52">Integrating out <inline-formula><mml:math display="inline" id="M41"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> results in the following conditional distribution:
<disp-formula id="FD4"><label>(4)</label><mml:math display="block" id="M42"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>NegativeBinomial</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>θ</mml:mi><mml:mi>g</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
The parameter <inline-formula><mml:math display="inline" id="M43"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which is the shape of the gamma distribution, is also the inverse dispersion of the negative binomial (<xref rid="SD1" ref-type="supplementary-material">Supplementary Note 5</xref>). We perform inference on the model with <inline-formula><mml:math display="inline" id="M44"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> integrated out. We also treat <inline-formula><mml:math display="inline" id="M45"><mml:mrow><mml:msub><mml:mi>θ</mml:mi><mml:mi>g</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> as a model parameter learned during inference. Overall, this likelihood is equivalent to that presented in scVI [<xref rid="R15" ref-type="bibr">15</xref>], without zero-inflation. The negative binomial distribution has been shown to adequately handle the limited sensitivity and over-dispersion that are characteristic of this data [<xref rid="R61" ref-type="bibr">61</xref>].</p>
      </sec>
      <sec id="S16">
        <title>Protein likelihood</title>
        <p id="P53">To capture observed protein counts arising from the background or foreground, we model <inline-formula><mml:math display="inline" id="M46"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with a negative binomial mixture, given <inline-formula><mml:math display="inline" id="M47"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M48"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M49"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. This conditional distribution is described by the following process:
<disp-formula id="FD5"><label>(5)</label><mml:math display="block" id="M50"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>h</mml:mi><mml:mi>π</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD6"><label>(6)</label><mml:math display="block" id="M51"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD7"><label>(7)</label><mml:math display="block" id="M52"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>Bernoulli</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD8"><label>(8)</label><mml:math display="block" id="M53"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>Gamma</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
<disp-formula id="FD9"><label>(9)</label><mml:math display="block" id="M54"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>Poisson</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P54">Here <italic>v<sub>nt</sub></italic> controls which mixture component generates the counts. Its parameter, <inline-formula><mml:math display="inline" id="M55"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, is the output of the neural network <inline-formula><mml:math display="inline" id="M56"><mml:mrow><mml:msub><mml:mi>h</mml:mi><mml:mi>π</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Notably, <inline-formula><mml:math display="inline" id="M57"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, which is the output of the neural network <inline-formula><mml:math display="inline" id="M58"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mi>α</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, is greater than one. This ensures that one of the mixture components is always larger than the other, allowing us to interpret one component as background and one component as foreground. Furthermore, <inline-formula><mml:math display="inline" id="M59"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is interpreted as the probability that any cell-protein pair has observed counts due to background alone. For one mixture component, <inline-formula><mml:math display="inline" id="M60"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M61"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M62"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M63"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> follows a negative binomial distribution, as can be seen by integrating out <inline-formula><mml:math display="inline" id="M64"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Finally, integrating out <inline-formula><mml:math display="inline" id="M65"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> too shows that <inline-formula><mml:math display="inline" id="M66"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> given <inline-formula><mml:math display="inline" id="M67"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M68"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> follows a negative binomial mixture distribution, where <inline-formula><mml:math display="inline" id="M69"><mml:mrow><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is a protein-specific inverse dispersion parameter.</p>
        <disp-formula id="FD10">
          <mml:math display="block" id="M70">
            <mml:mrow>
              <mml:mover accent="true">
                <mml:mrow>
                  <mml:munder accentunder="true">
                    <mml:mtable columnalign="left">
                      <mml:mtr>
                        <mml:mtd>
                          <mml:munder accentunder="true">
                            <mml:mtable columnalign="left">
                              <mml:mtr>
                                <mml:mtd>
                                  <mml:mtext mathvariant="bold">Algorithm</mml:mtext>
                                  <mml:mo> </mml:mo>
                                  <mml:mn mathvariant="bold">1</mml:mn>
                                  <mml:mo>:</mml:mo>
                                  <mml:mtext>The totalVI generative model. The gamma distriution is parameterized by</mml:mtext>
                                </mml:mtd>
                              </mml:mtr>
                              <mml:mtr>
                                <mml:mtd>
                                  <mml:mtext>its shape and mean. Let</mml:mtext>
                                  <mml:mo> </mml:mo>
                                  <mml:mi>ν</mml:mi>
                                  <mml:mo> </mml:mo>
                                  <mml:mtext>be the set of model parameters described here. A dataset has</mml:mtext>
                                  <mml:mo> </mml:mo>
                                  <mml:mi>G</mml:mi>
                                  <mml:mo> </mml:mo>
                                </mml:mtd>
                              </mml:mtr>
                              <mml:mtr>
                                <mml:mtd>
                                  <mml:mtext>genes and</mml:mtext>
                                  <mml:mo> </mml:mo>
                                  <mml:mi>T</mml:mi>
                                  <mml:mo> </mml:mo>
                                  <mml:mtext>measured proteins</mml:mtext>
                                  <mml:mo>.</mml:mo>
                                </mml:mtd>
                              </mml:mtr>
                            </mml:mtable>
                            <mml:mo stretchy="true">_</mml:mo>
                          </mml:munder>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mtext>Define</mml:mtext>
                          <mml:mo>:</mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>Neural networks</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:msub>
                            <mml:mi>f</mml:mi>
                            <mml:mi>ρ</mml:mi>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>z</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo>:</mml:mo>
                          <mml:msup>
                            <mml:mi>Δ</mml:mi>
                            <mml:mrow>
                              <mml:mi>K</mml:mi>
                              <mml:mo>−</mml:mo>
                              <mml:mn>1</mml:mn>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo>×</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mo>{</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo>,</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo>}</mml:mo>
                            </mml:mrow>
                            <mml:mi>B</mml:mi>
                          </mml:msup>
                          <mml:mo>→</mml:mo>
                          <mml:msup>
                            <mml:mi>Δ</mml:mi>
                            <mml:mrow>
                              <mml:mi>G</mml:mi>
                              <mml:mo>−</mml:mo>
                              <mml:mn>1</mml:mn>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo>,</mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mtext>Softmax output activation</mml:mtext>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:msub>
                            <mml:mi>g</mml:mi>
                            <mml:mi>α</mml:mi>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>z</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo>:</mml:mo>
                          <mml:msup>
                            <mml:mi>Δ</mml:mi>
                            <mml:mrow>
                              <mml:mi>K</mml:mi>
                              <mml:mo>−</mml:mo>
                              <mml:mn>1</mml:mn>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo>×</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mo>{</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo>,</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo>}</mml:mo>
                            </mml:mrow>
                            <mml:mi>B</mml:mi>
                          </mml:msup>
                          <mml:mo>→</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mo stretchy="false">[</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo>,</mml:mo>
                              <mml:mi>∞</mml:mi>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                            <mml:mi>T</mml:mi>
                          </mml:msup>
                          <mml:mo>,</mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mtext>ReLU</mml:mtext>
                          <mml:mo>+</mml:mo>
                          <mml:mn>1</mml:mn>
                          <mml:mtext>output activation</mml:mtext>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:msub>
                            <mml:mi>h</mml:mi>
                            <mml:mi>π</mml:mi>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>z</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo>:</mml:mo>
                          <mml:msup>
                            <mml:mi>Δ</mml:mi>
                            <mml:mrow>
                              <mml:mi>K</mml:mi>
                              <mml:mo>−</mml:mo>
                              <mml:mn>1</mml:mn>
                            </mml:mrow>
                          </mml:msup>
                          <mml:mo>×</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mo>{</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo>,</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo>}</mml:mo>
                            </mml:mrow>
                            <mml:mi>B</mml:mi>
                          </mml:msup>
                          <mml:mo>→</mml:mo>
                          <mml:msup>
                            <mml:mrow>
                              <mml:mo stretchy="false">(</mml:mo>
                              <mml:mn>0</mml:mn>
                              <mml:mo>,</mml:mo>
                              <mml:mn>1</mml:mn>
                              <mml:mo stretchy="false">)</mml:mo>
                            </mml:mrow>
                            <mml:mi>T</mml:mi>
                          </mml:msup>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo stretchy="false">(</mml:mo>
                          <mml:mtext>Sigmoid output activation</mml:mtext>
                          <mml:mo stretchy="false">)</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mtext>Require</mml:mtext>
                          <mml:mo>:</mml:mo>
                          <mml:mtext>Inverse dispersion parameters</mml:mtext>
                          <mml:mo> </mml:mo>
                          <mml:mi>θ</mml:mi>
                          <mml:mo>∈</mml:mo>
                          <mml:msubsup>
                            <mml:mi>ℝ</mml:mi>
                            <mml:mo>+</mml:mo>
                            <mml:mi>G</mml:mi>
                          </mml:msubsup>
                          <mml:mo>,</mml:mo>
                          <mml:mi>ϕ</mml:mi>
                          <mml:mo>∈</mml:mo>
                          <mml:msubsup>
                            <mml:mi>ℝ</mml:mi>
                            <mml:mo>+</mml:mo>
                            <mml:mi>T</mml:mi>
                          </mml:msubsup>
                          <mml:mo>.</mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>Neural network parameters</mml:mtext>
                          <mml:mo>.</mml:mo>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mtext mathvariant="bold">for</mml:mtext>
                          <mml:mo> </mml:mo>
                          <mml:mi>e</mml:mi>
                          <mml:mi>a</mml:mi>
                          <mml:mi>c</mml:mi>
                          <mml:mi>h</mml:mi>
                          <mml:mi>c</mml:mi>
                          <mml:mi>e</mml:mi>
                          <mml:mi>l</mml:mi>
                          <mml:mi>l</mml:mi>
                          <mml:mi>n</mml:mi>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">do</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>z</mml:mi>
                            <mml:mi>n</mml:mi>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>LogisticNormal</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mn>0</mml:mn>
                              <mml:mo>,</mml:mo>
                              <mml:mi>I</mml:mi>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>K</mml:mtext>
                          <mml:mo>−</mml:mo>
                          <mml:mtext>dim.cellular state variable</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>ρ</mml:mi>
                            <mml:mi>n</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                          <mml:msub>
                            <mml:mi>f</mml:mi>
                            <mml:mi>ρ</mml:mi>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>z</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>G</mml:mtext>
                          <mml:mo>−</mml:mo>
                          <mml:mtext>dim. RNA frequency</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>α</mml:mi>
                            <mml:mi>n</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                          <mml:msub>
                            <mml:mi>g</mml:mi>
                            <mml:mi>α</mml:mi>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>z</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>T</mml:mtext>
                          <mml:mo>−</mml:mo>
                          <mml:mtext>dim. foreground increment protein scaling</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>π</mml:mi>
                            <mml:mi>n</mml:mi>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                          <mml:msub>
                            <mml:mi>h</mml:mi>
                            <mml:mi>π</mml:mi>
                          </mml:msub>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>z</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>T</mml:mtext>
                          <mml:mo>−</mml:mo>
                          <mml:mtext>dim. mixture parameter</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>ℓ</mml:mi>
                            <mml:mi>n</mml:mi>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Lognormal</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msubsup>
                                <mml:mi>ℓ</mml:mi>
                                <mml:mi>μ</mml:mi>
                                <mml:mo>⊤</mml:mo>
                              </mml:msubsup>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msubsup>
                                <mml:mi>ℓ</mml:mi>
                                <mml:mrow>
                                  <mml:msup>
                                    <mml:mi>σ</mml:mi>
                                    <mml:mn>2</mml:mn>
                                  </mml:msup>
                                </mml:mrow>
                                <mml:mo>⊤</mml:mo>
                              </mml:msubsup>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>Cell scaling factor for RNA</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mtext mathvariant="bold">for</mml:mtext>
                          <mml:mo> </mml:mo>
                          <mml:mi>e</mml:mi>
                          <mml:mi>a</mml:mi>
                          <mml:mi>c</mml:mi>
                          <mml:mi>h</mml:mi>
                          <mml:mtext> </mml:mtext>
                          <mml:mi>g</mml:mi>
                          <mml:mi>e</mml:mi>
                          <mml:mi>n</mml:mi>
                          <mml:mi>e</mml:mi>
                          <mml:mtext> </mml:mtext>
                          <mml:mi>g</mml:mi>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">do</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>w</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Gamma</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>θ</mml:mi>
                                <mml:mi>g</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>ℓ</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:msub>
                                <mml:mi>ρ</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>g</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>x</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>g</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Poisson</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>w</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>g</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">for</mml:mtext>
                          <mml:mo> </mml:mo>
                          <mml:mi>e</mml:mi>
                          <mml:mi>a</mml:mi>
                          <mml:mi>c</mml:mi>
                          <mml:mi>h</mml:mi>
                          <mml:mtext> </mml:mtext>
                          <mml:mi>p</mml:mi>
                          <mml:mi>r</mml:mi>
                          <mml:mi>o</mml:mi>
                          <mml:mi>t</mml:mi>
                          <mml:mi>e</mml:mi>
                          <mml:mi>i</mml:mi>
                          <mml:mi>n</mml:mi>
                          <mml:mtext> </mml:mtext>
                          <mml:mi>t</mml:mi>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">do</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>β</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Lognormal</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msubsup>
                                <mml:mi>c</mml:mi>
                                <mml:mi>t</mml:mi>
                                <mml:mo>⊤</mml:mo>
                              </mml:msubsup>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msubsup>
                                <mml:mi>d</mml:mi>
                                <mml:mi>t</mml:mi>
                                <mml:mo>⊤</mml:mo>
                              </mml:msubsup>
                              <mml:msub>
                                <mml:mi>s</mml:mi>
                                <mml:mi>n</mml:mi>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>Scalar background mean</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>v</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Bernoulli</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>π</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>t</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext>Scalar mixture assignment</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">if</mml:mtext>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>v</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>=</mml:mo>
                          <mml:mn>1</mml:mn>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">then</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>r</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Gamma</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>ϕ</mml:mi>
                                <mml:mi>t</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>β</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>t</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>y</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Poisson</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>r</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>t</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mtext mathvariant="bold">else</mml:mtext>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>r</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Gamma</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>ϕ</mml:mi>
                                <mml:mi>t</mml:mi>
                              </mml:msub>
                              <mml:mo>,</mml:mo>
                              <mml:msub>
                                <mml:mi>β</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>t</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                              <mml:msub>
                                <mml:mi>α</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>t</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                      <mml:mtr>
                        <mml:mtd>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:mo> </mml:mo>
                          <mml:msub>
                            <mml:mi>y</mml:mi>
                            <mml:mrow>
                              <mml:mi>n</mml:mi>
                              <mml:mi>t</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                          <mml:mo>∼</mml:mo>
                          <mml:mtext>Poisson</mml:mtext>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:msub>
                                <mml:mi>r</mml:mi>
                                <mml:mrow>
                                  <mml:mi>n</mml:mi>
                                  <mml:mi>t</mml:mi>
                                </mml:mrow>
                              </mml:msub>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mtd>
                      </mml:mtr>
                    </mml:mtable>
                    <mml:mo stretchy="true">_</mml:mo>
                  </mml:munder>
                </mml:mrow>
                <mml:mo stretchy="true">¯</mml:mo>
              </mml:mover>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </sec>
    </sec>
    <sec id="S17">
      <title>Inference for totalVI</title>
      <sec id="S18">
        <title>Inference in the case of fully observed proteins</title>
        <p id="P55">The model evidence, <inline-formula><mml:math display="inline" id="M71"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>N</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, cannot be computed as the integrals are analytically intractable, so Bayes rule cannot be directly applied to find the posterior distribution. Therefore, we use variational inference [<xref rid="R62" ref-type="bibr">62</xref>] to approximate the posterior distribution with a distribution having the following factorization:
<disp-formula id="FD11"><label>(10)</label><mml:math display="block" id="M72"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P56">Here <inline-formula><mml:math display="inline" id="M73"><mml:mi>η</mml:mi></mml:math></inline-formula> is the set of parameters of an inference network, commonly called the <italic>encoder</italic> – a neural network that takes a cell’s combined expression as input and outputs the parameters of the approximate posterior (e.g., mean and variance). Factors of the posterior approximation share the same family as their respective priors (e.g., <inline-formula><mml:math display="inline" id="M74"><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is lognormal). The approximate posterior <inline-formula><mml:math display="inline" id="M75"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, whose expectation we use as the latent cell representation, is integral to many cell-level and feature-level analyses.</p>
        <p id="P57">For the likelihoods, as described previously, we integrate out the latent variables <inline-formula><mml:math display="inline" id="M76"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M77"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M78"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (<xref rid="FD10" ref-type="disp-formula">Algorithm 1</xref>), yielding <inline-formula><mml:math display="inline" id="M79"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, which is a mixture of negative binomials and <inline-formula><mml:math display="inline" id="M80"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, which is a negative binomial distribution.</p>
        <p id="P58">The evidence lower bound (ELBO) [<xref rid="R62" ref-type="bibr">62</xref>] of <inline-formula><mml:math display="inline" id="M81"><mml:mrow><mml:mtext>log</mml:mtext><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is optimized with respect to the variational parameters <inline-formula><mml:math display="inline" id="M82"><mml:mi>η</mml:mi></mml:math></inline-formula> and model parameters <inline-formula><mml:math display="inline" id="M83"><mml:mi>ν</mml:mi></mml:math></inline-formula> using stochastic gradients [<xref rid="R20" ref-type="bibr">20</xref>]. In other words, the model parameters and approximate posterior parameters are learned simultaneously. In the VAE framework, the generative neural network is referred to as the <italic>decoder</italic>. Each iteration of training consists of randomly choosing a mini-batch of data (256 cells), estimating the ELBO based on this mini-batch, and updating the parameters via automatic differentiation operators. The terms corresponding to Kullback-Leibler divergences of the ELBO (<xref rid="SD1" ref-type="supplementary-material">Supplementary Note 6</xref>) follow a deterministic warm-up scheme [<xref rid="R63" ref-type="bibr">63</xref>], which helps to avoid shallow local maxima. We use the Adam optimizer [<xref rid="R64" ref-type="bibr">64</xref>] with weight decay to update the model parameters. Learning rate reductions and early stopping are performed based on the ELBO of a validation set. As a result of mini-batching, totalVI’s memory usage is constant in the number of features in the dataset and number of neural network parameters. For example, in the runtime experiment presented in <xref rid="F7" ref-type="fig">Extended Data Fig. 2f</xref>, totalVI used a constant 753 megabytes of memory on an NVIDIA Titan XP GPU. totalVI’s runtime is linear in the number of cells and linear in the number of features; however, as we use early stopping, convergence may vary with the dataset size.</p>
        <p id="P59">All neural networks are feedforward and use standard activations (e.g., exponential, softmax, sigmoid) to encode the variational and generative distributions. We use the same hyperparameters for all of our experiments. <xref rid="SD1" ref-type="supplementary-material">Supplementary Note 6</xref> gives further implementation details.</p>
      </sec>
      <sec id="S19">
        <title>Inference in the case of missing proteins</title>
        <p id="P60">Here we adapted the training procedure from [<xref rid="R65" ref-type="bibr">65</xref>] to handle missing protein data. As any single batch may correspond to an experiment that used a different protein panel (or no proteins in the case of a scRNA-seq experiment), the missingness of protein features depends on the batch index <inline-formula><mml:math display="inline" id="M84"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Further, suppose all batches share the same set of genes. Across all batches, there are <inline-formula><mml:math display="inline" id="M85"><mml:mi>T</mml:mi></mml:math></inline-formula> proteins. For cell <inline-formula><mml:math display="inline" id="M86"><mml:mi>n</mml:mi></mml:math></inline-formula>, we denote the observed protein expressions <inline-formula><mml:math display="inline" id="M87"><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mi>o</mml:mi><mml:mi>b</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> and the unobserved protein expressions <inline-formula><mml:math display="inline" id="M88"><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mtext>mis</mml:mtext></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula>. The log likelihood of the observed data decomposes as
<disp-formula id="FD12"><label>(11)</label><mml:math display="block" id="M89"><mml:mrow><mml:mtext>log</mml:mtext><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>obs</mml:mtext></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msubsup><mml:mo mathsize="big">∑</mml:mo><mml:mrow><mml:mtext>n</mml:mtext><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mtext>N</mml:mtext></mml:msubsup><mml:mrow><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mtext>obs</mml:mtext></mml:mrow></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p>
        <p id="P61">The generative process for the observed data is the same as in <xref rid="FD10" ref-type="disp-formula">Algorithm 1</xref>, with appropriate modification to only generate the features present in a particular batch. Thus, <inline-formula><mml:math display="inline" id="M90"><mml:mi>ν</mml:mi></mml:math></inline-formula> is the same set of model parameters described previously. Again, we use variational inference to approximate the posterior distribution with the distribution in <xref rid="FD11" ref-type="disp-formula">Equation 10</xref>. In fact, all approximate posteriors share the same encoder parameters <inline-formula><mml:math display="inline" id="M91"><mml:mi>η</mml:mi></mml:math></inline-formula>. We optimize the ELBO of <xref rid="FD12" ref-type="disp-formula">Equation 11</xref> similarly to the procedure used when there is no missing data (i.e., we optimize the ELBO with respect to the model parameters <inline-formula><mml:math display="inline" id="M92"><mml:mi>ν</mml:mi></mml:math></inline-formula> and variational parameters <inline-formula><mml:math display="inline" id="M93"><mml:mi>η</mml:mi></mml:math></inline-formula>). To handle mismatched dimensions in the encoder, we substitute zeros for missing proteins, and for the decoder, we only calculate the ELBO terms corresponding to observed data [<xref rid="R66" ref-type="bibr">66</xref>]. Therefore, this procedure naturally extends to the case when there is no observed protein data for a cell <inline-formula><mml:math display="inline" id="M94"><mml:mi>n</mml:mi></mml:math></inline-formula>, which would be the case when the cell is obtained from a scRNA-seq experiment. Since the quality of missing protein imputation depends on (i) the goodness of fit of totalVI to the protein for the data in which it was observed and (ii) the statistical distance of the aggregated posterior distributions of <inline-formula><mml:math display="inline" id="M95"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for each of the batches [<xref rid="R65" ref-type="bibr">65</xref>, <xref rid="R67" ref-type="bibr">67</xref>], we add a domain adaptation regularization term to the ELBO when training [<xref rid="R68" ref-type="bibr">68</xref>]. A scaling factor on this regularization term decays from one to zero early in training.</p>
      </sec>
    </sec>
    <sec id="S20">
      <title>Posterior predictive distributions linked to downstream tasks</title>
      <p id="P62">For tasks like differential expression, denoising, and finding correlations, totalVI estimates functionals of posterior predictive distributions [<xref rid="R19" ref-type="bibr">19</xref>]. Define <inline-formula><mml:math display="inline" id="M96"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> as the set of observed data for cell <inline-formula><mml:math display="inline" id="M97"><mml:mi>n</mml:mi></mml:math></inline-formula>. First, consider the connection between the posterior predictive distribution of RNA data to totalVI denoised RNA expression. The posterior predictive RNA expression <inline-formula><mml:math display="inline" id="M98"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> for gene <inline-formula><mml:math display="inline" id="M99"><mml:mi>g</mml:mi></mml:math></inline-formula> given <inline-formula><mml:math display="inline" id="M100"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is distributed following:
<disp-formula id="FD13"><label>(12)</label><mml:math display="block" id="M101"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>≈</mml:mo><mml:mrow><mml:mo mathsize="big">∫</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>ν</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext>l</mml:mtext><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext>l</mml:mtext><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mi>d</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mi>d</mml:mi><mml:msub><mml:mtext>l</mml:mtext><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p>
      <p id="P63">To produce denoised RNA expression, we compute the posterior predictive mean of <inline-formula><mml:math display="inline" id="M102"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>. To further control for variation due to <inline-formula><mml:math display="inline" id="M103"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, we condition on <inline-formula><mml:math display="inline" id="M104"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>. By the law of total expectation,
<disp-formula id="FD14"><label>(13)</label><mml:math display="block" id="M105"><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>ν</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD15"><label>(14)</label><mml:math display="block" id="M106"><mml:mrow><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math display="inline" id="M107"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the expectation of the RNA likelihood with the additional condition that <inline-formula><mml:math display="inline" id="M108"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math></inline-formula>.</p>
      <p id="P64">For each cell <italic>n</italic>, we can compute the denoised RNA expression by averaging samples of <inline-formula><mml:math display="inline" id="M109"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> generated by the following process:
<list list-type="order" id="L1"><list-item><p id="P65">Sample <inline-formula><mml:math display="inline" id="M110"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math display="inline" id="M111"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item><list-item><p id="P66">Set <inline-formula><mml:math display="inline" id="M112"><mml:mrow><mml:msub><mml:mi>ρ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>ρ</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item></list></p>
      <p id="P67">There are two important considerations for these posterior predictive distributions. First, we use the approximate posterior as a surrogate for the posterior. Second, these posterior predictive distributions are not tractable to compute in closed form, so we can only sample from them with ancestral sampling. Functionals of the posterior are computed using Monte Carlo integration.</p>
      <sec id="S21">
        <title>Denoised protein expression</title>
        <p id="P68">After training the model, we can generate “denoised” protein expression – protein expression effectively absent of background and controlled for sampling noise. Consider the perturbed protein generative process in which we set the background intensity to zero:
<disp-formula id="FD16"><label>(15)</label><mml:math display="block" id="M113"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mtext>Bernoulli</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></disp-formula>
<disp-formula id="FD17"><label>(16)</label><mml:math display="block" id="M114"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>~</mml:mo><mml:mo> </mml:mo><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mtext>Gamma</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>ϕ</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>δ</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
        <p id="P69">Here <inline-formula><mml:math display="inline" id="M115"><mml:mrow><mml:msub><mml:mi>δ</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> is a point mass distribution at <inline-formula><mml:math display="inline" id="M116"><mml:mn>0</mml:mn></mml:math></inline-formula>. After marginalizing out <inline-formula><mml:math display="inline" id="M117"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M118"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M119"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M120"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> follows a zero-inflated Gamma distribution with mean <inline-formula><mml:math display="inline" id="M121"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
        <p id="P70">For denoising, we return the posterior predictive mean of <inline-formula><mml:math display="inline" id="M122"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Indeed, the posterior predictive mean is equal to <inline-formula><mml:math display="inline" id="M123"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> averaged over many posterior samples of <inline-formula><mml:math display="inline" id="M124"><mml:mrow><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. In other words, we return the foreground mean, weighted by the probability that the observation was derived from the foreground. This can also be stated as subtracting the expected background from the expected total signal.</p>
      </sec>
      <sec id="S22">
        <title>Missing protein imputation</title>
        <p id="P71">To impute protein expression <inline-formula><mml:math display="inline" id="M125"><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> for cell <inline-formula><mml:math display="inline" id="M126"><mml:mi>n</mml:mi></mml:math></inline-formula> and protein <inline-formula><mml:math display="inline" id="M127"><mml:mi>t</mml:mi></mml:math></inline-formula> missing in batch <inline-formula><mml:math display="inline" id="M128"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, but that is observed in a batch <inline-formula><mml:math display="inline" id="M129"><mml:mrow><mml:msup><mml:mi>s</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>≠</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, do the following:
<list list-type="order" id="L2"><list-item><p id="P72">Sample <inline-formula><mml:math display="inline" id="M130"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math display="inline" id="M131"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item><list-item><p id="P73">Sample <inline-formula><mml:math display="inline" id="M132"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math display="inline" id="M133"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item><list-item><p id="P74">Sample <inline-formula><mml:math display="inline" id="M134"><mml:mrow><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> from <inline-formula><mml:math display="inline" id="M135"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula></p></list-item></list></p>
        <p id="P75">This process returns samples of <inline-formula><mml:math display="inline" id="M136"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Intuitively, we encode the cell into the latent space, which is designed to mix the batches (i.e., be an integrated low-dimensional representation of the data), and obtain the parameters for the protein likelihood (decode) conditioned on the cell being in batch <inline-formula><mml:math display="inline" id="M137"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:math></inline-formula>. Thus, the quality of imputation relies on how well batches mix in the totalVI latent space. Ultimately, we report the expected value of the imputed distribution
<disp-formula id="FD18"><label>(17)</label><mml:math display="block" id="M138"><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p>
        <p id="P76">We may also impute the denoised expression, by exchanging <inline-formula><mml:math display="inline" id="M139"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with <inline-formula><mml:math display="inline" id="M140"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. This change would additionally remove the protein background contribution to the prediction.</p>
      </sec>
      <sec id="S23">
        <title>Differential expression</title>
        <p id="P77">With a single model fit, totalVI can detect differentially expressed features between sets of cells, i.e., the model does not need to be retrained for every test. Here we use the Bayesian framework of [<xref rid="R40" ref-type="bibr">40</xref>] to detect differential expression (DE) of genes and proteins. Let
<disp-formula id="FD19"><label>(18)</label><mml:math display="block" id="M141"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>Λ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mtext>log</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>ρ</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mtext>log</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>ρ</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></disp-formula>
be the log fold change (LFC) of RNA expression between cells <inline-formula><mml:math display="inline" id="M142"><mml:mi>a</mml:mi></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M143"><mml:mi>b</mml:mi></mml:math></inline-formula>. Then the probability that gene <inline-formula><mml:math display="inline" id="M144"><mml:mi>g</mml:mi></mml:math></inline-formula> is differentially expressed (DE) is
<disp-formula id="FD20"><label>(19)</label><mml:math display="block" id="M145"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:mrow><mml:mo mathsize="big">∫</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>{</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi><mml:mo>}</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>d</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mi>d</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math display="inline" id="M146"><mml:mi>δ</mml:mi></mml:math></inline-formula> is a threshold for the effect size. Intuitively, we are measuring the fraction of posterior samples that the absolute LFC greater than or equal to <inline-formula><mml:math display="inline" id="M147"><mml:mi>δ</mml:mi></mml:math></inline-formula>. For all experiments we set <inline-formula><mml:math display="inline" id="M148"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>=</mml:mo><mml:mn>0.2</mml:mn></mml:mrow></mml:math></inline-formula>. We compare the DE probability to the probability that the LFC is in the null region <inline-formula><mml:math display="inline" id="M149"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula> using a Bayes factor:
<disp-formula id="FD21"><label>(20)</label><mml:math display="block" id="M150"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>BF</mml:mtext></mml:mrow><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msubsup><mml:mo>|</mml:mo><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>|</mml:mo><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msubsup><mml:mo>|</mml:mo><mml:mo>&lt;</mml:mo><mml:mi>δ</mml:mi><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P78">This can also be extended to groups of cells. Let <inline-formula><mml:math display="inline" id="M151"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>…</mml:mo><mml:mo> </mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> be the indices of one subpopulation of interest, and <inline-formula><mml:math display="inline" id="M152"><mml:mrow><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>…</mml:mo><mml:mo> </mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>b</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> be the other subpopulation of interest. We then exchange the posterior distributions in <xref rid="FD20" ref-type="disp-formula">Equation 19</xref> with the aggregated posterior:
<disp-formula id="FD22"><label>(21)</label><mml:math display="block" id="M153"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>A</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>B</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:munder><mml:mo mathsize="big">∑</mml:mo><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi>A</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mo>|</mml:mo><mml:mi>B</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:munder><mml:mo mathsize="big">∑</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P79">In this sampling procedure, a cell representation <inline-formula><mml:math display="inline" id="M154"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> (resp.<inline-formula><mml:math display="inline" id="M155"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>) is sampled given one randomly chosen cell in subpopulation <inline-formula><mml:math display="inline" id="M156"><mml:mi>A</mml:mi></mml:math></inline-formula> (resp. subpopulation <inline-formula><mml:math display="inline" id="M157"><mml:mi>B</mml:mi></mml:math></inline-formula>). Then, it is determined if <inline-formula><mml:math display="inline" id="M158"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi></mml:mrow></mml:math></inline-formula> via an indicator function. The DE probability is estimated based on many samples.</p>
        <p id="P80">Furthermore, by integrating over the batch variable <inline-formula><mml:math display="inline" id="M159"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, we effectively compare cells as if they were in the same batch [<xref rid="R15" ref-type="bibr">15</xref>]. For genes, this is equivalent to computing
<disp-formula id="FD23"><label>(22)</label><mml:math display="block" id="M160"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>g</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:munder><mml:mo mathsize="big">∑</mml:mo><mml:mrow><mml:mi>s</mml:mi><mml:mo>′</mml:mo></mml:mrow></mml:munder><mml:mrow><mml:mrow><mml:mo mathsize="big">∫</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>{</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>Λ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mi>g</mml:mi></mml:msup><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi><mml:mo>}</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>d</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mi>d</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P81">Here <inline-formula><mml:math display="inline" id="M161"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>′</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a uniform prior over batches. Every time we sample from the posterior, we decode the samples using the same batch indicator, averaging the DE probability over every possible batch indicator.</p>
        <p id="P82">For proteins, we use the same framework, but define
<disp-formula id="FD24"><label>(23)</label><mml:math display="block" id="M162"><mml:mrow><mml:msubsup><mml:mi>γ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mtext>log</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="double-struck">E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mi>ϵ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mtext>log</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="double-struck">E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>b</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>b</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mi>ϵ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where the conditional expectation is equal to
<disp-formula id="FD25"><label>(24)</label><mml:math display="block" id="M163"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P83">This is interpreted as the foreground mean if the cell was generated from the foreground, and zero otherwise. The added constant <inline-formula><mml:math display="inline" id="M164"><mml:mi>ϵ</mml:mi></mml:math></inline-formula> is a “prior count” that helps define the log fold change when <inline-formula><mml:math display="inline" id="M165"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. For all analysis, we set ϵ = 0.5. As with genes, we are interested in calculating <inline-formula><mml:math display="inline" id="M166"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi>γ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:mo>≥</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, where in this case we integrate with respect to the distribution
<disp-formula id="FD26"><label>(25)</label><mml:math display="block" id="M167"><mml:mrow><mml:munder><mml:mo mathsize="big">∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P84">We consider features with a <inline-formula><mml:math display="inline" id="M168"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mtext>BF</mml:mtext><mml:mo stretchy="false">)</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0.7</mml:mn></mml:mrow></mml:math></inline-formula> as differentially expressed. This is roughly equivalent to calling features significant if the odds ratio (here equivalent to a Bayes factor) is greater than <inline-formula><mml:math display="inline" id="M169"><mml:mn>2</mml:mn></mml:math></inline-formula>. Finally, we use the posterior samples of <inline-formula><mml:math display="inline" id="M170"><mml:mrow><mml:msub><mml:mi>λ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (resp. <inline-formula><mml:math display="inline" id="M171"><mml:mrow><mml:msub><mml:mi>γ</mml:mi><mml:mrow><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for proteins) as the estimate of effect size for each gene (resp. protein). Specifically, we use the median of the samples, which is robust to outliers and is also the Bayes estimator under <inline-formula><mml:math display="inline" id="M172"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> loss.</p>
      </sec>
      <sec id="S24">
        <title>Denoised correlation matrix construction</title>
        <p id="P85">We seek a feature-feature correlation matrix (e.g., gene-gene correlations, gene-protein cross-correlations) that summarizes biological variation, instead of technical variation. As totalVI explicitly models nuisance factors (for genes as well as proteins), we can query the model while controlling for this nuisance variation. Furthermore, because naive computations of correlations on denoised values (parameters of conditional distributions) were shown to induce spurious gene-gene correlations [<xref rid="R33" ref-type="bibr">33</xref>], we develop a novel sampling scheme that helps remove technical variation while avoiding such artifacts.</p>
        <p id="P86">In order to ensure our correlation matrix does not include variation from the modeled technical factors, we perturb the data generating process to fix the library size (<italic>ℓ</italic> = 10000) as well as incorporate the denoised protein expression conditional distribution. In particular, we compute a correlation matrix using samples from the distribution
<disp-formula id="FD27"><label>(26)</label><mml:math display="block" id="M173"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>log</mml:mtext><mml:msub><mml:mi>w</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mtext>log</mml:mtext><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P87">This is also a posterior predictive density whose samples are generated with ancestral sampling. As <inline-formula><mml:math display="inline" id="M174"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>r</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is zero-inflated, we add the same “prior count” before taking the logarithm. For this distribution, we sample ancestrally using the aggregated posterior
<disp-formula id="FD28"><label>(27)</label><mml:math display="block" id="M175"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mn>1</mml:mn><mml:mo>:</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:munderover><mml:mo mathsize="big">∑</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P88">One could in principle replace the aggregated posterior with the prior in case of analyzing dataset-wide correlations. However, this approach is more flexible as it can be applied to calculate the correlation matrix for a subpopulation <inline-formula><mml:math display="inline" id="M176"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>…</mml:mo><mml:mo> </mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mi>m</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math display="inline" id="M177"><mml:mi>A</mml:mi></mml:math></inline-formula> is the set of indices for the subpopulation, by conditioning the distribution on <inline-formula><mml:math display="inline" id="M178"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M179"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>A</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
        <p id="P89">The distinction between this procedure and those that induced spurious correlations is that the latter effectively estimates a correlation matrix using the expected value of the posterior predictive distribution, rather than estimating the correlation matrix of the posterior predictive distribution.</p>
      </sec>
      <sec id="S25">
        <title>Out-of-batch generalization</title>
        <p id="P90">totalVI learns a transformation from <inline-formula><mml:math display="inline" id="M180"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M181"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to the parameters of the conditional distributions for each feature (decoder). In an out-of-batch prediction, we predict the expression of a cell (e.g., the mean of conditional distribution) given any of the other <inline-formula><mml:math display="inline" id="M182"><mml:mi>B</mml:mi></mml:math></inline-formula> observed batches <inline-formula><mml:math display="inline" id="M183"><mml:mi>s</mml:mi></mml:math></inline-formula> such that <inline-formula><mml:math display="inline" id="M184"><mml:mrow><mml:mi>s</mml:mi><mml:mo>≠</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>. Here we describe a general way to sample posterior quantities for a cell while also “transforming” it into a different batch that was also observed for other cells [<xref rid="R69" ref-type="bibr">69</xref>]. Special cases of this have already been described in the protein imputation and differential expression sections. Consider, for instance, the RNA counts in cell <inline-formula><mml:math display="inline" id="M185"><mml:mi>n</mml:mi></mml:math></inline-formula> and gene <inline-formula><mml:math display="inline" id="M186"><mml:mi>g</mml:mi></mml:math></inline-formula>. We can calculate posterior predictive samples of <inline-formula><mml:math display="inline" id="M187"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> while conditioning on any arbitrary observed batch <inline-formula><mml:math display="inline" id="M188"><mml:mi>b</mml:mi></mml:math></inline-formula>. Then,
<disp-formula id="FD29"><label>(28)</label><mml:math display="block" id="M189"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>≈</mml:mo><mml:mrow><mml:mo mathsize="big">∫</mml:mo><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>v</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>η</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>d</mml:mi><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula></p>
        <p id="P91">Furthermore, we can integrate over the choice of batch by sampling from
<disp-formula id="FD30"><label>(29)</label><mml:math display="block" id="M190"><mml:mrow><mml:munder><mml:mo mathsize="big">∑</mml:mo><mml:mi>b</mml:mi></mml:munder><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>*</mml:mo></mml:msubsup><mml:mo>|</mml:mo><mml:msub><mml:mi>C</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math display="inline" id="M191"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is a uniform prior over batches. We take the expected value of this particular distribution as batch-corrected, denoised gene expression data. This “transforming” can also be applied to other likelihood parameters like <inline-formula><mml:math display="inline" id="M192"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>.</p>
      </sec>
    </sec>
    <sec id="S26">
      <title>CITE-seq experiment on mouse spleen and lymph node</title>
      <p id="P92"><xref rid="SD1" ref-type="supplementary-material">Supplementary Table 1</xref> shows a summary of the experimental design that generated the mouse spleen and lymph node CITE-seq datasets. Below, we describe in further detail how these datasets were collected and processed.</p>
      <sec id="S27">
        <title>Cell preparation</title>
        <p id="P93">Mice were group housed with enrichment in standard cages on ventilated racks at an ambient temperature of 26C and 40% humidity. Mice were kept in a dark/light cycle of 12 hours on and 12 hours off. Two female C57BL/6 (B6) mice at 5 weeks of age were euthanized using CO2. From each mouse, six lymph nodes were harvested, pooled in RPMI <inline-formula><mml:math display="inline" id="M193"><mml:mo>+</mml:mo></mml:math></inline-formula>10% FBS media on ice, mechanically dissociated with a syringe plunger, and passed through a 70 <italic>μ</italic>m strainer to generate a single cell suspension. Likewise, the spleen was harvested, placed in RPMI <inline-formula><mml:math display="inline" id="M194"><mml:mo>+</mml:mo></mml:math></inline-formula>10% FBS media on ice, mechanically dissociated with a syringe plunger, and passed through a 70 <italic>μ</italic>m strainer to generate a single cell suspension. For the spleen, red blood cells were lysed in Red Blood Cell Lysis Buffer (BioLegend <inline-formula><mml:math display="inline" id="M195"><mml:mrow><mml:mo>#</mml:mo><mml:mn>420302</mml:mn></mml:mrow></mml:math></inline-formula>) following the manufacturer’s protocol. All animal care and procedures were carried out in accordance with guidelines approved by the Institutional Animal Care and Use Committee at BioLegend, Inc.</p>
      </sec>
      <sec id="S28">
        <title>Antibody panel preparation</title>
        <p id="P94">We prepared panels containing either 111 antibodies (TotalSeq-A mouse antibody panel 1, BioLegend <inline-formula><mml:math display="inline" id="M196"><mml:mrow><mml:mo>#</mml:mo><mml:mn>900003217</mml:mn></mml:mrow></mml:math></inline-formula>) or 208 antibodies (TotalSeq-A mouse antibody panel 2, BioLegend <inline-formula><mml:math display="inline" id="M197"><mml:mrow><mml:mo>#</mml:mo><mml:mn>900003218</mml:mn></mml:mrow></mml:math></inline-formula>), which are enumerated in <xref rid="SD1" ref-type="supplementary-material">Supplementary Data</xref>. We performed a buffer exchange on each panel using a 50kDa Amicon spin column (Millipore <inline-formula><mml:math display="inline" id="M198"><mml:mrow><mml:mo>#</mml:mo><mml:mtext>UFC</mml:mtext><mml:mn>505096</mml:mn></mml:mrow></mml:math></inline-formula>) following the manufacturer’s protocol to transfer antibodies into RPMI + 10% FBS. Spleen and lymph node cell suspensions were stained with different hashtag antibodies [<xref rid="R22" ref-type="bibr">22</xref>].</p>
      </sec>
      <sec id="S29">
        <title>CITE-seq protocol and library preparation</title>
        <p id="P95">The CITE-seq experiment was performed following the TotalSeq protocol with two slight modifications. First, the 10 minute centrifugation at 14,000g to remove antibody aggregates was conducted prior to buffer exchange. Second, cells were stained, washed, and resuspended in RPMI + 10% FBS to maintain viability. After staining, washing, and counting, 12,000 spleen cells and 12,000 lymph node cells were mixed and loaded into a single 10x lane. We followed the 10x Genomics Chromium Single Cell 3’ v3 protocol to prepare RNA, antibody-derived-tag (ADT) and hashtag-oligo (HTO) libraries [<xref rid="R70" ref-type="bibr">70</xref>].</p>
      </sec>
      <sec id="S30">
        <title>Sequencing and data processing</title>
        <p id="P96">RNA, ADT, and HTO libraries were sequenced with an Illumina NovaSeq S1. Reads were processed with Cell Ranger v3.1.0 with feature barcoding, where RNA reads were mapped to the mouse mm10–2.1.0 reference (10x Genomics, STAR aligner [<xref rid="R71" ref-type="bibr">71</xref>]) and antibody reads were mapped to known barcodes (<xref rid="SD1" ref-type="supplementary-material">Supplementary Table 5</xref>). Hashtags were demultiplexed separately for each 10x lane with HTODemux in Seurat v3 using the kmeans function [<xref rid="R34" ref-type="bibr">34</xref>]. No read depth normalization was applied when aggregating datasets.</p>
      </sec>
    </sec>
    <sec id="S31">
      <title>Additional datasets</title>
      <p id="P97">We also used publicly available CITE-seq datasets from 10x Genomics. These included “10k PBMCs from a Healthy Donor - Gene Expression and Cell Surface Protein” (PBMC10k, [<xref rid="R23" ref-type="bibr">23</xref>]), “5k Peripheral blood mononuclear cells (PBMCs) from a healthy donor with cell surface proteins (v3 chemistry)” (PBMC5k, [<xref rid="R37" ref-type="bibr">37</xref>]), and “10k Cells from a MALT Tumor - Gene Expression and Cell Surface Protein” (MALT, [<xref rid="R24" ref-type="bibr">24</xref>]). PBMC10k had 14,010 mean reads per cell for antibodies (5,816 median UMI counts per cell), while PBMC5k had 7,451 mean reads per cell for antibodies (2,752 median UMI counts per cell).</p>
    </sec>
    <sec id="S32">
      <title>CITE-seq data pre-processing</title>
      <p id="P98">For each dataset, after initial cell and gene filtering, we retained at least the top 4,000 highly variable genes (HVGs) as defined by the Seurat v3 method, merging HVGs from different batches when appropriate [<xref rid="R34" ref-type="bibr">34</xref>]. Dataset specific filtering is described below.</p>
      <sec id="S33">
        <title>Spleen and lymph node</title>
        <p id="P99">An initial cell filter removed cells expressing fewer than 200 genes. Cells labeled as either doublets or negative for hashtag antibodies by HTODemux were also removed. A protein library size filter retained cells with between 400 and 10,000 total protein UMI counts. We also filtered on the number of proteins detected. For cells stained with the 111 antibody panel, we removed cells with fewer than 90 proteins detected, while the cutoff was set to 170 for cells stained with the 208 antibody panel. Cells with a high percentage of UMIs from mitochondrial genes (15% or more of the cell’s total UMI count) were removed. An initial gene filter removed genes expressed in 3 or fewer cells in any given batch. In addition to the top 4,000 HVGs selected by the Seurat v3 method, we retained genes that encode the proteins targeted by the 111 antibody panel. This resulted in 4,005 total genes. After all filters, the distribution of cells per dataset was: (SLN111-D1, 9,264 cells), (SLN111-D2, 7,564 cells), (SLN208-D1, 8,715 cells), (SLN208-D2, 7,105 cells). This is a total of 32,648 cells. Unless otherwise stated, we filtered out isotype control antibodies (9 total in the 208 panel) and hashtag antibodies. The protein CD49f was also removed due to having very low total UMI counts.</p>
      </sec>
      <sec id="S34">
        <title>PBMC10k, PBMC5k, &amp; MALT</title>
        <p id="P100">For each of these datasets, we first removed doublets using DoubletDetection [<xref rid="R72" ref-type="bibr">72</xref>]. Cells with high mitochondrial content (percentage of UMIs from mitochondrial genes), high number of genes detected, high UMI counts, and with fewer than 200 genes expressed were removed. Next, cells with outlier protein library size (on either end) were removed. Genes with expression in three or fewer cells were removed. Finally, the top 4,000 HVGs were retained. Dataset specific parameters are in <xref rid="SD1" ref-type="supplementary-material">Supplementary Table 6</xref>. In the case where the PBMC datasets are integrated, the 4,000 HVGs are selected by merging HVGs computed on each dataset separately as in the Seurat v3 method.</p>
      </sec>
    </sec>
    <sec id="S35">
      <title>Posterior predictive checks and held-out metrics</title>
      <p id="P101">Posterior predictive checks are useful to check the fit of Bayesian models. They work by comparing the observed data to posterior predictive samples from the model [<xref rid="R25" ref-type="bibr">25</xref>]. Much of the benchmarking done here was inspired by previous work done to benchmark the scHPF model [<xref rid="R16" ref-type="bibr">16</xref>]. We compared totalVI to factor analysis, which is a linear-Gaussian alternative to totalVI, and is easily extendable to multiple modalities as features are treated conditionally independent of the latent representation. Furthermore, we compared to scHPF, which received the concatenated RNA and protein count matrices as input. As a control, we also compared performance on RNA only to scVI [<xref rid="R15" ref-type="bibr">15</xref>]. Posterior predictive samples for totalVI and scVI were obtained by calling the generate function in the scVI package, which samples from the variational posterior distributions, and subsequently from the likelihood distributions given the posterior samples. We ran scVI with 20 latent dimensions and negative binomial conditional distribution in order to be consistent with totalVI. Factor analysis (FA) models were fit using the sklearn package [<xref rid="R73" ref-type="bibr">73</xref>] on the combined RNA and protein measurements using one of two normalization procedures. The first procedure consisted of transforming each value by <inline-formula><mml:math display="inline" id="M199"><mml:mrow><mml:mtext>log</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>count</mml:mtext><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The second procedure consisted of log library size normalizing the RNA features and protein features separately. For example, considering only the RNA measurements for a cell, we normalized each cell to sum to 1 by dividing by the library size of RNA, multiplied by 10,000, added 1 to each value, and took a log transformation:
<disp-formula id="FD31"><label>(30)</label><mml:math display="block" id="M200"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>log</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>L</mml:mi><mml:mfrac><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>g</mml:mi></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math display="inline" id="M201"><mml:mrow><mml:mi>L</mml:mi><mml:mo>=</mml:mo><mml:mn>10000</mml:mn></mml:mrow></mml:math></inline-formula>. This process was then applied to the protein measurements. We refer to this type of normalization as <italic>log library size normalization</italic>, and for short, <italic>log rate</italic>. These normalization procedures are necessary as FA assumes a Gaussian distribution, so training on the raw data would lead to poor model fit. Posterior predictive samples for FA models were computed using the fitted parameters and posterior distribution derived in [<xref rid="R74" ref-type="bibr">74</xref>]. We note that normalization procedures were inverted so that FA posterior predictive samples were on the same scale as the raw data.</p>
      <p id="P102">For each dataset, each model was trained on a train set comprising of 85% of the cells. An additional 5% of cells were held-out as a validation set for totalVI early stopping. The remaining 10% of cells were also held-out as a test set. For each model’s posterior predictive samples (25 for each model) based on the train set, we calculated the coefficient of variation (CV) for each feature, and calculated the mean absolute error between the average CV and the observed raw data CV. Furthermore, we computed the Mann-Whitney U statistic (implementation in <monospace>scipy.stats.mannwhitneyu</monospace>) for each feature between the posterior predictive sample and the raw data. We averaged the statistic across all posterior predictive samples for each feature. We also used posterior predictive samples to assess generalization to unseen data. In this setup, we generated posterior predictive samples (150 for each model) conditioned on the test set. We considered the mean absolute error between the observed held-out data and the posterior predictive mean.</p>
      <p id="P103">Moreover, we computed a held-out calibration error [<xref rid="R26" ref-type="bibr">26</xref>] for each model based on the test set. For each cell <italic>n</italic> and gene <inline-formula><mml:math display="inline" id="M202"><mml:mi>g</mml:mi></mml:math></inline-formula>, let <inline-formula><mml:math display="inline" id="M203"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> be the indicator that the observed value is contained in the interval of all posterior predictive samples. The calibration error for genes is then calculated as
<disp-formula id="FD32"><label>(31)</label><mml:math display="block" id="M204"><mml:mrow><mml:msup><mml:mrow><mml:mtext>Cal</mml:mtext></mml:mrow><mml:mrow><mml:mtext>RNA</mml:mtext></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>N</mml:mi><mml:mi>G</mml:mi></mml:mrow></mml:mfrac><mml:munder><mml:mo mathsize="big">∑</mml:mo><mml:mi>n</mml:mi></mml:munder><mml:mrow><mml:munder><mml:mo mathsize="big">∑</mml:mo><mml:mi>g</mml:mi></mml:munder><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>
The calibration error for proteins is computed separately following the same procedure.</p>
      <p id="P104">Finally, for totalVI and scVI only, and for only the RNA data, we computed the held-out predictive log likelihood. In this metric, <italic>z<sub>n</sub></italic> and <inline-formula><mml:math display="inline" id="M205"><mml:mrow><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> were sampled from the variational posterior for each cell <inline-formula><mml:math display="inline" id="M206"><mml:mi>n</mml:mi></mml:math></inline-formula> and the average negative conditional log likelihood, <inline-formula><mml:math display="inline" id="M207"><mml:mrow><mml:mo>−</mml:mo><mml:mtext>log</mml:mtext><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> was computed. This is also called the reconstruction loss in the VAE literature. This is also an approximation of <inline-formula><mml:math display="inline" id="M208"><mml:mrow><mml:mo>−</mml:mo><mml:mtext>log</mml:mtext><mml:mi>p</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, the negative predictive log likelihood. We note that we cannot compare the log likelihood of totalVI and scVI, which use discrete conditional distributions to factor analysis models, which use continuous conditional distributions.</p>
      <p id="P105">We further evaluated model misfit through posterior dispersion indices [<xref rid="R75" ref-type="bibr">75</xref>]. This metric highlights cells that are not well explained by the model. This analysis is described in <xref rid="SD1" ref-type="supplementary-material">Supplementary Note 7</xref>.</p>
    </sec>
    <sec id="S36">
      <title>Background decoupling benchmarking</title>
      <p id="P106">We reported the totalVI background probability as the posterior predictive mean of <inline-formula><mml:math display="inline" id="M209"><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, thus
<disp-formula id="FD33"><label>(32)</label><mml:math display="block" id="M210"><mml:mrow><mml:mtable columnalign="right"><mml:mtr columnalign="right"><mml:mtd columnalign="right"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>cell </mml:mtext><mml:mi>n</mml:mi><mml:mtext>, protein </mml:mtext><mml:mi>t</mml:mi><mml:mtext> is background</mml:mtext></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mtext>|</mml:mtext><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>π</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
where the expectation is approximated using Monte Carlo integration. The totalVI foreground probability is one minus the background probability.</p>
      <sec id="S37">
        <title>Observing protein background in empty droplets and non-expressing cell types</title>
        <p id="P107">To observe different sources of protein background, we considered both empty droplets and cell types with known expression of surface markers. We defined empty droplets as non-cell barcodes from the SLN111-D1 dataset with between 20 and 100 RNA UMI counts (approximately 75,358 barcodes). We chose these criteria so that empty droplets were likely to represent ambient molecules rather than sequencing errors (with very low UMI counts) or cell debris (with higher UMI counts) [<xref rid="R76" ref-type="bibr">76</xref>]. To observe non-specific binding of antibodies, we considered B cells (which are known to express CD19 and CD20, but not CD28) and T cells (which are known to express CD28, but not CD19 or CD20). Using cell type annotations as described below, we grouped all high-quality, non-doublet B cell clusters (excluding plasma B cells), and alpha/beta T cell clusters (including all CD4, Treg, and CD8 T cell clusters). We observed that for these three proteins, both empty droplets and the non-expressing cell type contained protein background (non-zero protein counts) with varying degrees of overlap with the foreground signal of the expressing cell type. In this text, we describe the protein counts of the non-expressing cell type above the counts in empty droplets as non-specific antibody binding, although we acknowledge there could be multiple sources of this cell-specific background (<xref rid="SD1" ref-type="supplementary-material">Supplementary Note 3</xref>).</p>
      </sec>
      <sec id="S38">
        <title>Classification of cell type by marker proteins</title>
        <p id="P108">We sought to evaluate totalVI against a Gaussian mixture model (GMM) at predicting major cell types by the foreground probability of commonly used surface markers. For these markers, protein counts were expected to come from the foreground component in some cell types and from the background component in others. For example, a high foreground probability for CD4 could be used as a positive predictor of CD4 T cells. We applied scikit-learn’s <monospace>GaussianMixture</monospace> with default parameters to fit a GMM with two components to the <inline-formula><mml:math display="inline" id="M211"><mml:mrow><mml:mtext>log(protein counts</mml:mtext><mml:mo>+</mml:mo><mml:mtext> 1)</mml:mtext></mml:mrow></mml:math></inline-formula> for each protein for all cells in the SLN111-D1 dataset. We interpreted the posterior probability of the component with the higher mean as the foreground probability and that of the lower mean as the background probability. Restricting all cells to just those that fell into the categories of B cells or T cells as described above, we tested how well totalVI or a GMM could classify cell types based on commonly used protein surface markers. For each marker protein, we computed a receiver operating characteristic curve (ROC) (<monospace>sklearn.metrics</monospace>) by thresholding the totalVI or GMM foreground probability estimates, using manual cell type annotations as true labels (stratification and annotation described below). We reported the area under the ROC (ROC AUC). The cell type considered as the positive population was either B cells, T cells, CD4 T cells, or CD8 T cells depending on the marker. In tests considering each of these positive populations, all remaining cells among the B and T cells were considered the negative population. Marker proteins tested included, for B cells: CD19, CD45R-B220, CD20, I-A-I-E (MHC II); for T cells: CD5, TCRb, CD28, CD90.2; for CD4 T cells: CD4; for CD8T cells: CD8a, CD8b [<xref rid="R77" ref-type="bibr">77</xref>–<xref rid="R80" ref-type="bibr">80</xref>]. Although we are aware of documented exceptions to these markers appearing strictly on a single cell type (e.g., CD5 is expressed on a portion of B1 B cells), these exceptions are rare. In these cases where marker expression is not mutually exclusive, cell types can still be distinguished by the gradation in levels of the marker between cell populations. Thus, these exceptions do not negate the utility of these markers in broad cell type classification (which is apparent in both totalVI and GMM performance at this classification task).</p>
      </sec>
      <sec id="S39">
        <title>GMM-based cutoff for protein foreground/background</title>
        <p id="P109">As a baseline determination of a cutoff to distinguish cells with foreground or background protein expression, we used a GMM fit on all cells of the SLN111-D1 dataset for each protein as described above. The GMM-based cutoff between foreground and background was determined to be the protein expression level at which the GMM foreground probability (described above) was closest to 0.5.</p>
      </sec>
      <sec id="S40">
        <title>Protein normalization using isotype controls</title>
        <p id="P110">Although totalVI does not make use of isotype controls in its model of protein background, some CITE-seq studies include isotype control antibodies as negative controls to adjust for protein background. To compare totalVI to a method that uses isotype controls to normalize protein data, we applied two different normalization strategies prior to fitting a GMM and performing the classification task described above. First, we applied the normalization strategy used by Cumulus [<xref rid="R32" ref-type="bibr">32</xref>]:
<disp-formula id="FD34"><label>(33)</label><mml:math display="block" id="M212"><mml:mrow><mml:mtext>norm1</mml:mtext><mml:mo>:</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mtext>max</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtext>log</mml:mtext><mml:mfrac><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msubsup><mml:mi>k</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>
where <inline-formula><mml:math display="inline" id="M213"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the observed UMI counts for protein <inline-formula><mml:math display="inline" id="M214"><mml:mi>t</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math display="inline" id="M215"><mml:mi>n</mml:mi></mml:math></inline-formula>, and <inline-formula><mml:math display="inline" id="M216"><mml:mrow><mml:msubsup><mml:mi>k</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> is the observed UMI counts of the corresponding isotype control for protein <inline-formula><mml:math display="inline" id="M217"><mml:mi>t</mml:mi></mml:math></inline-formula> in cell <inline-formula><mml:math display="inline" id="M218"><mml:mi>n</mml:mi></mml:math></inline-formula>. In the case where the corresponding isotype control for a given antibody is not present in the data, normalized expression is calculated as
<disp-formula id="FD35"><label>(34)</label><mml:math display="block" id="M219"><mml:mrow><mml:mtable columnalign="right"><mml:mtr columnalign="right"><mml:mtd columnalign="right"><mml:mrow><mml:mtext>norm1</mml:mtext><mml:mo>:</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mtext>log</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula>
Because this normalization method restricts normalized values to be non-negative, the resulting distribution might not be fit well by a GMM. We therefore applied a second normalization strategy as a modification to the Cumulus method that adjusts for the relative isotype control level but does not restrict the distribution of normalized values to be non-negative:
<disp-formula id="FD36"><label>(35)</label><mml:math display="block" id="M220"><mml:mrow><mml:mtable columnalign="right"><mml:mtr columnalign="right"><mml:mtd columnalign="right"><mml:mrow><mml:mtext>norm2</mml:mtext><mml:mo>:</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>→</mml:mo><mml:mtext>log</mml:mtext><mml:mfrac><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msubsup><mml:mi>k</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>t</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msubsup><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p>
        <p id="P111">If an isotype control is not present, <italic>norm2</italic> values are calculated as in <xref rid="FD35" ref-type="disp-formula">Equation 34</xref>.</p>
        <p id="P112">For the SLN208-D1 dataset, which contained a limited number of isotype control antibodies, we fit a GMM as described above to the <inline-formula><mml:math display="inline" id="M221"><mml:mrow><mml:mtext>log(protein counts </mml:mtext><mml:mo>+</mml:mo><mml:mtext> 1)</mml:mtext></mml:mrow></mml:math></inline-formula>
<italic>(GMM)</italic>, to the Cumulus normalized values <italic>(GMM norm1)</italic>, and to the values normalized with the modified Cumulus method <italic>(GMM norm2)</italic>. We performed the same classification of cell types by marker proteins as described for the SLN111-D1 dataset, noting that the isotype control for CD28 (Syrian Hamster IgG) was not contained in the dataset.</p>
      </sec>
    </sec>
    <sec id="S41">
      <title>Visualization and raw data normalization</title>
      <p id="P113">For the SLN111-D1 dataset, we visualized the totalVI latent space in two dimensions using Scanpy’s [<xref rid="R56" ref-type="bibr">56</xref>] implementation of the UMAP algorithm [<xref rid="R81" ref-type="bibr">81</xref>]. We applied log library-size normalization to the raw RNA counts as in <xref rid="FD31" ref-type="disp-formula">Equation 30</xref>. All cells of the SLN111-D1 dataset are plotted (i.e., doublets were not removed).</p>
      <sec id="S42">
        <title>Distribution of foreground probabilities</title>
        <p id="P114">We observed the totalVI foreground probability for all proteins across all cells in the SLN111-D1 dataset (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 1e</xref>). The totalVI foreground probability tended to fall near zero or one. Measurements for which totalVI estimates a foreground probability near 0.5 are instances where the model is uncertain about whether the measurement is likely to be derived from foreground or background.</p>
      </sec>
      <sec id="S43">
        <title>Distinguishing foreground and background in trimodal protein distributions</title>
        <p id="P115">Despite using a two-component mixture, totalVI can decouple the background and foreground of proteins that have more than two modes globally. totalVI is capable of distinguishing foreground and background in this setting because the mixture is conditionally dependent on <inline-formula><mml:math display="inline" id="M222"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which allows the foreground and background expression modes to be defined locally in the latent space. For example, as has been reported using flow cytometry [<xref rid="R82" ref-type="bibr">82</xref>], CITE-seq data of peripheral blood mononuclear cells contains three modes of CD4 expression corresponding to CD4 T cells, monocytes, and background. totalVI detected that both CD4 T cells and monocytes had foreground expression of CD4, while the CD4 expression of the remaining cells was attributable to background expression.</p>
      </sec>
      <sec id="S44">
        <title>Denoised protein expression</title>
        <p id="P116">Denoised protein expression was calculated as previously described. B cells and T cells were defined by annotations, as described above.</p>
      </sec>
    </sec>
    <sec id="S45">
      <title>RNA-protein correlation analysis</title>
      <sec id="S46">
        <title>Evaluation of correlation calculation with permuted features</title>
        <p id="P117">Using totalVI, we aimed to calculate a correlation matrix between all RNA and protein features free from nuisance variation such as sequencing depth and protein background. We took care to avoid the naive calculation of correlations directly between denoised features, noting that a recent study reported false positive correlations in smoothed scRNA-seq data [<xref rid="R33" ref-type="bibr">33</xref>]. Instead, we developed a novel sampling method for the calculation of denoised feature correlations that removes nuisance variation while avoiding imputation-induced artifacts (described above).</p>
        <p id="P118">To evaluate whether totalVI could calculate a denoised feature correlation matrix without introducing spurious relationships in the data, we permuted the expression of a set of genes to serve as a negative control. To create this set of negative control genes from the SLN111-D1 dataset, we selected the 100 genes with highest mean expression that were not already among the top highly variable genes used in the model. We randomly permuted the counts of these genes within each cell, rendering these genes independent of all other gene and protein features. After concatenating the SLN111-D1 dataset with the permuted gene expression for all cells, we ran the totalVI model.</p>
        <p id="P119">We then calculated Pearson and Spearman correlations between features using three methods, referred to here as raw, naive totalVI, and totalVI correlations. Raw correlations were calculated between log library-size normalized RNA (<xref rid="FD31" ref-type="disp-formula">Equation 30</xref>) and log(protein counts <inline-formula><mml:math display="inline" id="M223"><mml:mo>+</mml:mo></mml:math></inline-formula> 1). Naive totalVI correlations were calculated between totalVI denoised RNA and totalVI denoised proteins. totalVI correlations were calculated by sampling denoised RNA and denoised protein values from the posterior (as described above).</p>
        <p id="P120">We observed the correlations between all RNA and protein features as well as the 100 additional genes whose expression was randomly permuted. By comparing the raw correlations with denoised correlations, we observed whether the method of denoising could maintain the relationship between these permuted genes and other features, which, in expectation, are independent from each other. Here, we highlighted the correlations between all proteins and the randomly permuted genes, whose correlations are expected to be near zero.</p>
      </sec>
      <sec id="S47">
        <title>Correlations of RNA-protein pairs</title>
        <p id="P121">We calculated a feature correlation matrix for the SLN111-D1 dataset using either the totalVI sampling method or by calculating raw correlations as described above. The resulting feature correlation matrices for both Pearson and Spearman correlations were subset to each protein and its encoding RNA for all proteins with a unique encoding RNA in the dataset (i.e., excluding RNA with multiple isoforms such as Ptprc). It is worth noting that the totalVI model has no explicit information about the relationship between RNA-protein pairs, such that any correlation learned by the model is not predetermined by known RNA-protein relationships.</p>
      </sec>
    </sec>
    <sec id="S48">
      <title>Integration of multiple datasets</title>
      <p id="P122">We compared totalVI’s integration performance to that of Scanorama[<xref rid="R35" ref-type="bibr">35</xref>], Seurat v3 [<xref rid="R34" ref-type="bibr">34</xref>], and Harmony [<xref rid="R36" ref-type="bibr">36</xref>]. The two former methods, like totalVI, produce both integrated expression values and integrated low-dimensional cell representations. The input to both Scanorama (<monospace>scanorama.correct</monospace>), Seurat v3 (<monospace>FindIntegrationAnchors, IntegrateData</monospace>) methods was a normalized matrix of concatenated genes and proteins. Genes were subset to the same subset used as input to totalVI. The RNA counts of this matrix were normalized following standard log library size normalization (<xref rid="FD31" ref-type="disp-formula">Equation 30</xref>). For proteins, we used a <inline-formula><mml:math display="inline" id="M224"><mml:mrow><mml:mi>y</mml:mi><mml:mo>→</mml:mo><mml:mtext>log</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>y</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> transformation. Finally, we standard scaled each feature. Harmony (<monospace>harmonypy</monospace>) received latent spaces for each dataset computed with PCA on the concatenated, normalized, and scaled datasets. All methods were run with default parameters. We compared the performance of the methods using the following metrics:</p>
      <sec id="S49">
        <title>Latent mixing metric</title>
        <p id="P123">The latent mixing metric measures how well the latent cell representations are mixed between batches relative to the global frequency of batches. First, a cell-cell similarity matrix is computed from a latent representation of cells. Next, select 100 cells uniformly at random, and calculate the frequency of batches represented in each cell’s 100 nearest neighbors. Let <inline-formula><mml:math display="inline" id="M225"><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msubsup></mml:mrow></mml:math></inline-formula> be the frequency of batch <inline-formula><mml:math display="inline" id="M226"><mml:mi>i</mml:mi></mml:math></inline-formula> in the 100 nearest neighbors of cell <inline-formula><mml:math display="inline" id="M227"><mml:mi>n</mml:mi></mml:math></inline-formula>. Let <inline-formula><mml:math display="inline" id="M228"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> be the global frequency of batch <inline-formula><mml:math display="inline" id="M229"><mml:mi>i</mml:mi></mml:math></inline-formula>. Compute the negative relative entropy between the frequency of observed batches in the neighborhood, and the global frequency of batches:
<disp-formula id="FD37"><label>(36)</label><mml:math display="block" id="M230"><mml:mrow><mml:mtable columnalign="right"><mml:mtr columnalign="right"><mml:mtd columnalign="right"><mml:mrow><mml:mtext>KL</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msup><mml:mi>p</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msup><mml:mo> </mml:mo><mml:mo>∥</mml:mo><mml:mo> </mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo mathsize="big">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>B</mml:mi></mml:munderover><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msubsup><mml:mtext>log</mml:mtext><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>p</mml:mi><mml:mi>i</mml:mi><mml:mrow><mml:mrow><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p>
        <p id="P124">Repeat this 50 times and return the average negative relative entropy. This is conceptually similar to the entropy of mixing that has been used in other studies [<xref rid="R83" ref-type="bibr">83</xref>].</p>
      </sec>
      <sec id="S50">
        <title>Measurement mixing metric</title>
        <p id="P125">The measurement mixing metric describes how well the high-dimensional measurements are batch corrected, and for each feature, is related to the Mann-Whitney U statistic. Consider one feature in the batch-corrected data matrix placed in rank order. Let <inline-formula><mml:math display="inline" id="M231"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> be the sum of the ranks of the cells in batch <inline-formula><mml:math display="inline" id="M232"><mml:mn>1</mml:mn></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M233"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> be the number of cells in batch <inline-formula><mml:math display="inline" id="M234"><mml:mn>1</mml:mn></mml:math></inline-formula>. Define <inline-formula><mml:math display="inline" id="M235"><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>R</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:math></inline-formula>. Similarly, compute <inline-formula><mml:math display="inline" id="M236"><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> for batch <inline-formula><mml:math display="inline" id="M237"><mml:mn>2</mml:mn></mml:math></inline-formula> and return <inline-formula><mml:math display="inline" id="M238"><mml:mrow><mml:mtext>min</mml:mtext><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>U</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>U</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Higher values of this metric indicate better mixing within that feature. This metric could not be applied for Harmony, which only produces an integrated latent representation.</p>
      </sec>
      <sec id="S51">
        <title>Feature retention metric</title>
        <p id="P126">The feature retention metric describes how spatial autocorrelation of both RNA and protein change when comparing cells from an integrated latent representation to a latent representation derived from each batch separately. Lower values of this metric indicate that the integration procedure reduced the localization of feature expression, indicating some degree of random mixing. We calculate it as follows. For two batches and a particular integration method, we calculate <inline-formula><mml:math display="inline" id="M239"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M240"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, the latent representations of the cells of batch <inline-formula><mml:math display="inline" id="M241"><mml:mn>1</mml:mn></mml:math></inline-formula> and batch <inline-formula><mml:math display="inline" id="M242"><mml:mn>2</mml:mn></mml:math></inline-formula>, respectively. The latent space computation of the individual batches was chosen to closely match the integration method (see below). We also calculate an integrated latent representation of both batches <inline-formula><mml:math display="inline" id="M243"><mml:mrow><mml:msup><mml:mi>Z</mml:mi><mml:mo>⊤</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Let <inline-formula><mml:math display="inline" id="M244"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> be the combined RNA and protein batch <inline-formula><mml:math display="inline" id="M245"><mml:mn>1</mml:mn></mml:math></inline-formula> in which RNA is library size log normalized and proteins are log-transformed. Let <inline-formula><mml:math display="inline" id="M246"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>H</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> be the expected feature autocorrelation score as calculated by Hotspot [<xref rid="R84" ref-type="bibr">84</xref>]. Furthermore, let <inline-formula><mml:math display="inline" id="M247"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>H</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> be the analogous quantity calculated using the latent cell representations of batch <inline-formula><mml:math display="inline" id="M248"><mml:mn>1</mml:mn></mml:math></inline-formula> subsetted from the joint, integrated representation. The feature retention metric is calculated as <inline-formula><mml:math display="inline" id="M249"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:msubsup><mml:mo mathsize="big">∑</mml:mo><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>H</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>H</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>. In the case of totalVI union, features were intersected to compute this metric.</p>
        <p id="P127">For Scanorama, we define <inline-formula><mml:math display="inline" id="M250"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M251"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> to be a 100-dimensional matrix produced with principal components analysis (PCA), which is the same dimension reduction used in the integration method. For Seurat v3, we similarly use PCA to reduce <inline-formula><mml:math display="inline" id="M252"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M253"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> to 30 dimensions, the same number of dimensions used for integration. The input to PCA was the same as the input for the respective method, except for Scanorama, where we additionally <inline-formula><mml:math display="inline" id="M254"><mml:mrow><mml:msub><mml:mi>L</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> normalized each cell, because this step is done automatically by Scanorama’s correct method.</p>
      </sec>
      <sec id="S52">
        <title>Clustering metric</title>
        <p id="P128">The clustering metric quantifies the extent to which clusters defined on the unintegrated latent spaces are preserved in the integrated latent space. Using the same notation as before, we compute for each method, clusters based on <inline-formula><mml:math display="inline" id="M255"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M256"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math></inline-formula>, individually. Clusters were inferred using the standard Scanpy workflow: computing a neighbors graph, and running the Leiden [<xref rid="R85" ref-type="bibr">85</xref>] algorithm, with default parameters. Next, the silhouette coefficient <inline-formula><mml:math display="inline" id="M257"><mml:mrow><mml:mi mathvariant="script">S</mml:mi></mml:mrow></mml:math></inline-formula> was computed for every cell with respect to its latent representation and cluster label:<inline-formula><mml:math display="inline" id="M258"><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M259"><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math display="inline" id="M260"><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>,<inline-formula><mml:math display="inline" id="M261"><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. Finally, a score for each dataset was defined as <inline-formula><mml:math display="inline" id="M262"><mml:mrow><mml:mi mathvariant="double-struck">E</mml:mi><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>Z</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mi mathvariant="script">S</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. The final score was averaged across each dataset. Thus, lower scores suggest clusters are not preserved as well in the integrated latent space. We emphasize that this metric can only be taken as a proxy for cell type preservation, which requires “ground truth” cell type labels, or well-established datasets -- none of which exist for CITE-seq.</p>
      </sec>
      <sec id="S53">
        <title>Missing protein imputation</title>
        <p id="P129">For Seurat v3, we imputed proteins based on mutual nearest neighbors in the RNA data using the FindTransferAnchors and TransferData functions. Again, RNA data were log library size normalized. Proteins were not normalized as input to Seurat. For totalVI, after fitting the model, cells from the batch with held-out proteins were decoded conditioned on being in the batch with observed protein data. Note, we did not correct for background in this analysis since the comparison is to the observed data. We used the root mean squared error of values on the log scale to assess imputation accuracy. To produce error bars, we ran totalVI 30 times, resampling the dataset into the train/validation sets (validation used for early stopping), computing the mean and 95% confidence interval. For the PBMC datasets, we compared to cTP-net [<xref rid="R38" ref-type="bibr">38</xref>], which is a neural network that was pre-trained on specific CITE-seq datasets from human cells, with no option to train a new dataset. The inputs to cTP-net were the log-normalized RNA data. cTP-net did not provide predictions for CD127, CD15, CD25, PD-1, or TIGIT. To the best of our knowledge, neither of the PBMC datasets used in this study were used to train the pre-trained cTP-net model. Thus, a direct comparison of the results to those of totalVI or Seurat v3 is not straightforward.</p>
      </sec>
    </sec>
    <sec id="S54">
      <title>Stratification of cells in SLN-all</title>
      <p id="P130">We stratified cells of the mouse spleen and lymph node based on the SLN-all dataset (totalVI-intersect model fit as described above). We clustered cells in the totalVI latent space with Scanpy’s implementation of the Leiden algorithm at resolution 1, resulting in 32 clusters [<xref rid="R56" ref-type="bibr">56</xref>, <xref rid="R85" ref-type="bibr">85</xref>]. We repeated this approach to sub-cluster cells, finding a total of 43 clusters. We used Vision [<xref rid="R49" ref-type="bibr">49</xref>] with default parameters for data exploration, including its implementation of the Wilcoxon rank sum test, to identify cluster markers. Clusters were manually annotated based on a curated list of cell type markers (<xref rid="SD1" ref-type="supplementary-material">Supplementary Table 4</xref>). Clusters annotated as doublets, low quality cells (e.g., high percentage of UMI counts from mitochondrial genes), or cells undergoing the cell cycle were removed from further analysis. Again, we visualized the totalVI latent space in two dimensions using Scanpy’s implementation of the UMAP algorithm. These annotations were also consistent with the latent space derived with totalVI-union (<xref rid="SD1" ref-type="supplementary-material">Supplementary Fig. 7</xref>).</p>
    </sec>
    <sec id="S55">
      <title>Differential expression analysis</title>
      <p id="P131">The Welch’s t-test and Wilcoxon rank-sum test for each differential expression scenario were run on protein features (log-transformed) using the Scanpy library, which produces adjusted <inline-formula><mml:math display="inline" id="M263"><mml:mi>p</mml:mi></mml:math></inline-formula>-values corrected for multiple testing by the Benjamini-Hochberg procedure [<xref rid="R86" ref-type="bibr">86</xref>]. Both tests are two-sided. A protein was considered to be differentially expressed if the adjusted <inline-formula><mml:math display="inline" id="M264"><mml:mi>p</mml:mi></mml:math></inline-formula>-value was less than <inline-formula><mml:math display="inline" id="M265"><mml:mrow><mml:mn>0.05</mml:mn></mml:mrow></mml:math></inline-formula>. Each application of totalVI differential expression tests to a dataset requires a trained totalVI model. For each dataset used in DE analysis, all cells were included to train the model. Throughout, we used our manual annotations from the SLN-all totalVI-intersect model run. The cells in nuisance clusters (described in previous section) were removed before running totalVI differential expression functions.</p>
      <p id="P132">In a given totalVI differential expression test, we identified cell type markers by first filtering features for significance (log Bayes factor <inline-formula><mml:math display="inline" id="M266"><mml:mrow><mml:mo>&gt;</mml:mo><mml:mn>0.7</mml:mn></mml:mrow></mml:math></inline-formula>), and then sorting by the median log fold change. We only retained genes with non-zero UMI counts in at least 10% of the subset of cells.</p>
      <p id="P133">In the comparison to scVI gene Bayes factors, each method was trained independently on the SLN111-D1 dataset. We ran scVI with 20 latent dimensions and negative binomial conditional distribution to be consistent with totalVI. Differential expression of genes in scVI was computed using the same LFC-based method, which is implemented in the scvi-tools package. In reproducibility benchmarking, totalVI was trained independently on the replicates.</p>
      <p id="P134">In the test between ICOS-high Tregs and CD4 conventional T cells, we used the same totalVI-intersect model fit that was used to manually annotate the cells. In this test, we expected CD73, CD357 (GITR), CD122, and CD5 to be upregulated (positives) in ICOS-high Tregs relative to conventional CD4 T cells [<xref rid="R87" ref-type="bibr">87</xref>–<xref rid="R90" ref-type="bibr">90</xref>]. The list of putative negatives included I-A/I-E (MHC II), IgD, CD19, CD8b, and CD8a, which have no expected expression in either of these cell types.</p>
      <sec id="S56">
        <title>DE on imputed proteins</title>
        <p id="P135">In one totalVI model fit, SLN111-D1 and SLN111-D2 were integrated with the proteins of SLN111-D2 held out. In the second totalVI model fit, these two datasets were integrated with all data. In testing differential expression of proteins, and for each model fit, we conditioned on SLN111-D1. This is an application of <xref rid="FD23" ref-type="disp-formula">Equation 22</xref>, except that the prior <inline-formula><mml:math display="inline" id="M267"><mml:mrow><mml:mi>p</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:msup><mml:mi>s</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> is 1 if <inline-formula><mml:math display="inline" id="M268"><mml:mrow><mml:msup><mml:mi>s</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mtext>SLN111-D1</mml:mtext></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math display="inline" id="M269"><mml:mn>0</mml:mn></mml:math></inline-formula> otherwise.</p>
      </sec>
    </sec>
    <sec id="S57">
      <title>Archetypal analysis</title>
      <p id="P136">This analysis was performed on the SLN-all totalVI-intersect model run. As <inline-formula><mml:math display="inline" id="M270"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is distributed as logistic normal, the latent space is then constrained to the probability simplex (i.e., each <inline-formula><mml:math display="inline" id="M271"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> is non-negative and sums to one). Archetypes correspond to vertices of the totalVI latent space, which means they can be represented by the identity matrix <inline-formula><mml:math display="inline" id="M272"><mml:mrow><mml:msub><mml:mi>I</mml:mi><mml:mi>d</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, where <inline-formula><mml:math display="inline" id="M273"><mml:mi>d</mml:mi></mml:math></inline-formula> is the number of latent dimensions (20 in all experiments). In this setting, the latent space is the 19-dimensional standard simplex.</p>
      <p id="P137">We first identified and removed four archetypes from further interpretation that suffered from inactivity (a known issue in training VAEs) [<xref rid="R91" ref-type="bibr">91</xref>]. For the remaining 16 latent dimensions, we decoded the archetypes to obtain denoised RNA and protein archetypal expression profiles, all conditioned on batch <inline-formula><mml:math display="inline" id="M274"><mml:mn>0</mml:mn></mml:math></inline-formula> (the SLN111-D1 experiment). We then computed denoised RNA and protein expression profiles for all cells in SLN-all, conditioned on SLN111-D1. To derive signatures for each archetype, we computed the mean and standard deviation of each feature in the denoised RNA and protein expression matrices (without the archetypes) and standard scaled the archetypal profiles with respect to this mean and standard deviation. We refer to this quantity as the archetype score. The top features for each archetype were those with an archetype score greater than 2. The distance to the archetype is computed as the Manhattan distance from each cell’s latent representation to the archetype. The distances per archeytpe were scaled into the range <inline-formula><mml:math display="inline" id="M275"><mml:mrow><mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mo>]</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>.</p>
    </sec>
    <sec id="S58">
      <title>B cell analysis</title>
      <p id="P138">For this analysis, we used the totalVI-intersect model fit on the SLN-all dataset as described above. The SLN-all dataset was filtered to include all high-quality, non-doublet clusters annotated as B cells (excluding plasma B cells), resulting in 15,560 cells.</p>
      <sec id="S59">
        <title>Calculation of signature scores</title>
        <p id="P139">Gene signature analysis was conducted using Vision [<xref rid="R49" ref-type="bibr">49</xref>] with default parameters. Gene signatures, including interferon response signatures, were downloaded from MSigDB gene sets [<xref rid="R92" ref-type="bibr">92</xref>]. Signature scores were calculated on all cells in the SLN-all dataset based on cell similarities defined by t latent space.</p>
      </sec>
      <sec id="S60">
        <title>Identification of transitional and mature B cell feature modules</title>
        <p id="P140">totalVI Spearman correlations between all features were calculated separately within the transitional B cell cluster and the mature B cell cluster. Features were subset by the following method. From a one-vs-one DE test between transitional and mature B cells, we selected the top ten marker genes and top three marker proteins for each cluster (as described above). We added to this list the four features most highly correlated with each differentially expressed feature within its respective cluster. This resulted in a list of both transitional and mature features which we used to subset the full feature correlation matrix. Features were hierarchically clustered separately for transitional and mature B cells using Seaborn’s clustermap with default parameters.</p>
        <p id="P141">When plotting totalVI expression of each feature as a function of <inline-formula><mml:math display="inline" id="M276"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, each feature was standard scaled and smoothed with a loess curve. Spearman correlations were calculated between each feature and <inline-formula><mml:math display="inline" id="M277"><mml:mrow><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. The p-values of these correlations were all significant (BH-adjusted <inline-formula><mml:math display="inline" id="M278"><mml:mi>p</mml:mi></mml:math></inline-formula>-value <inline-formula><mml:math display="inline" id="M279"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.001</mml:mn></mml:mrow></mml:math></inline-formula>).</p>
      </sec>
    </sec>
    <sec sec-type="data-availability" id="S61">
      <title>Data availability</title>
      <p id="P142">The data discussed in this manuscript (SLN-all) have been deposited in NCBI’s Gene Expression Omnibus [<xref rid="R93" ref-type="bibr">93</xref>] and are accessible through GEO Series accession number GSE150599 (<ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE150599">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE150599</ext-link>). Processed data are also available in the reproducibility GitHub repository (<ext-link ext-link-type="uri" xlink:href="https://github.com/YosefLab/totalVI_reproducibility">https://github.com/YosefLab/totalVI_reproducibility</ext-link>). The SLN-all dataset processed with totalVI can be explored interactively with Vision at <ext-link ext-link-type="uri" xlink:href="http://s133.cs.berkeley.edu:9000/Results.html">http://s133.cs.berkeley.edu:9000/Results.html</ext-link>. Public datasets were downloaded from 10x Genomics (PBMC5k: <ext-link ext-link-type="uri" xlink:href="https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_protein_v3">https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.2/5k_pbmc_protein_v3</ext-link>; PBMC10k: <ext-link ext-link-type="uri" xlink:href="https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.0/pbmc_10k_protein_v3">https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.0/pbmc_10k_protein_v3</ext-link>; MALT: <ext-link ext-link-type="uri" xlink:href="https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.0/malt_10k_protein_v3">https://support.10xgenomics.com/single-cell-gene-expression/datasets/3.0.0/malt_10k_protein_v3</ext-link>). Mouse mm10 reference was downloaded from 10x Genomics</p>
    </sec>
    <sec id="S62">
      <title>Code availability</title>
      <p id="P143">The code to reproduce the results in this manuscript is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/YosefLab/totalVI_reproducibility">https://github.com/YosefLab/totalVI_reproducibility</ext-link> and has been deposited at <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.4330368">https://doi.org/10.5281/zenodo.4330368</ext-link> [<xref rid="R94" ref-type="bibr">94</xref>]. The reference implementation of totalVI is available via the scvi-tools package at <ext-link ext-link-type="uri" xlink:href="https://github.com/YosefLab/scvi-tools">https://github.com/YosefLab/scvi-tools</ext-link></p>
    </sec>
  </sec>
  <sec sec-type="extended-data" id="S63">
    <title>Extended Data</title>
    <fig id="F6" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 1</label>
      <caption>
        <p id="P144">Evaluation of totalVI model.</p>
        <p id="P145"><bold>a</bold>, Posterior predictive check of coefficient of variation (CV) of genes and proteins. For each of the PBMC10k, MALT, and SLN111-D1 datasets and for each model (totalVI, scVI, factor analysis with normalized input, scHPF) the average coefficient of variation from posterior predictive samples was computed for each feature. Violin plots summarize the distribution of CVs for genes and proteins. Mean absolute error (MAE) between raw data CVs and average posterior predictive CV are reported. <bold>b</bold>, For each gene and protein, the Mann-Whitney U statistic between posterior predictive samples and observed data averaged over samples. Shown are boxplots of this statistic for each set of features (genes and proteins), model, and dataset (n=4000 genes across datasets and n=14 proteins for PBMC10k and MALT, n=110 proteins for SLN111-D1). Box plots indicate the median (center line), interquartile range (hinges), and whiskers at 1.5x interquartile range. Higher is better.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0006"/>
    </fig>
    <fig id="F7" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 2</label>
      <caption>
        <p id="P146">Evaluation of totalVI model (continued).</p>
        <p id="P147"><bold>a</bold>, Mean absolute error (MAE) between held out data and posterior predictive mean separated by genes and proteins for each model and dataset. <bold>b</bold>, Calibration error of held-out data reported separately for genes and proteins. <bold>c</bold>, Held-out reconstruction loss of RNA for scVI and totalVI. <bold>d, e</bold>, Stability of held-out results (n=5 initializations) for totalVI on SLN111-D1. Metrics displayed are the <bold>(d)</bold> Held out MAE, and <bold>(e)</bold> held out calibration error. Box plots indicate the median (center line), interquartile range (hinges), and whiskers at 1.5x interquartile range. <bold>f</bold>, Inference time for totalVI and scVI across cells randomly subsampled to different levels from SLN-all. scVI was run with only genes. totalVI was applied with 20 latent dimensions and 100 latent dimensions.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0007"/>
    </fig>
    <fig id="F8" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 3</label>
      <caption>
        <p id="P148">Protein background in cells and empty droplets</p>
        <p id="P149"><bold>a–c</bold>, Histogram of log(protein counts + 1) in the SLN111-D1 dataset for B cells, T cells, and empty droplets (<xref rid="S12" ref-type="sec">Methods</xref>) for CD19 <bold>(a)</bold>, CD20 <bold>(b)</bold>, and CD28 <bold>(c)</bold>. d-f, Fraction of empty droplets, B cells, or T cells with &gt; 0 UMIs detected for a given RNA (left, hatched) or protein (right, solid). RNA/proteins displayed are Cd19/CD19 <bold>(d)</bold>, Ms4a1/CD20 <bold>(e)</bold>, and Cd28/CD28 <bold>(f)</bold>. <bold>g</bold>, Barcode rank plot for all barcodes detected in the SLN111-D1 dataset. Red lines at 20 and 100 RNA UMI counts indicate the lower and upper bounds, respectively, used to define empty droplets in <bold>(a–f)</bold>. <bold>h</bold>, Performance of totalVI and a Gaussian mixture model (GMM) fit on all cells for each protein of the SLN111-D1 dataset to classify cell types by marker proteins (<xref rid="S12" ref-type="sec">Methods</xref>). Receiver operating characteristic (ROC) curves shown for CD19 (B cells), CD20 (B cells), or CD28 (T cells). Area under the receiver operating characteristic curve (ROC AUC score) was calculated using as input either the totalVI foreground probability or GMM foreground probability where the indicated cell type was the positive population out of all B and T cells.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0008"/>
    </fig>
    <fig id="F9" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 4</label>
      <caption>
        <p id="P150">totalVI decouples foreground and background for trimodal protein distributions and denoises protein data</p>
        <p id="P151"><bold>a, b</bold>, CD4 protein expression in the PBMC10k dataset. <bold>(a)</bold> Trimodal distribution of log(protein counts + 1). <bold>(b)</bold> UMAP plot of the totalVI latent space colored by totalVI foreground probability. <bold>c-e</bold>, UMAP plots of the totalVI latent space for the SLN111-D1 dataset. Plots are colored by log(protein counts+1) (top) and log(totalVI denoised protein+1) (bottom) for CD19 <bold>(c)</bold>, CD20 <bold>(d)</bold>, and CD28 (e). <bold>f, g</bold>, Distributions of log(protein counts + 1) <bold>(f)</bold> and log(totalVI denoised protein + 1) <bold>(g)</bold> for CD19 protein in B and T cells. y-axis is truncated at 3.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0009"/>
    </fig>
    <fig id="F10" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 5</label>
      <caption>
        <p id="P152">RNA-protein correlations</p>
        <p id="P153"><bold>a, b</bold>, 2d density plots of Pearson correlations between all RNA and protein features in the SLN111-D1 dataset as well as 100 additional genes whose expression was randomly permuted. Correlations between all proteins and the randomly permuted genes are colored in red. Raw correlations were calculated between log library-size normalized RNA and log(protein counts + 1). <bold>(a)</bold>, Naive totalVI correlations were calculated between totalVI denoised RNA and totalVI denoised proteins. <bold>(b)</bold>, totalVI correlations were calculated between denoised RNA and proteins sampled from the posterior (<xref rid="S12" ref-type="sec">Methods</xref>). <bold>c</bold>, Pearson correlations between each protein and its encoding RNA for all proteins with a unique encoding RNA, colored by the mean probability foreground of the protein across all cells. totalVI correlations were calculated as in (b) and raw correlation were calculated as in <bold>(a, b)</bold>. <bold>d-f</bold>, Same as <bold>(a-c)</bold>, but for Spearman correlations.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0010"/>
    </fig>
    <fig id="F11" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 6</label>
      <caption>
        <p id="P154">Integration of SLN-all with totalVI-intersect</p>
        <p id="P155"><bold>a, b</bold>, UMAP plot of SLN-all colored by <bold>(a)</bold> dataset, and <bold>(b)</bold> tissue. <bold>c</bold>, Heatmap of proteins used for annotation. Proteins (columns) are log(protein counts + 1) scaled by column for visualization. <bold>d</bold>, Dotplot of RNA markers used for annotation. RNA is log library size normalized.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0011"/>
    </fig>
    <fig id="F12" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 7</label>
      <caption>
        <p id="P156">Differential expression analysis</p>
        <p id="P157"><bold>a</bold>, 2d density plot of totalVI and scVI log Bayes factors for genes. Bayes factors were computed for each gene in one-vs-all tests on the SLN111-D1 dataset. <bold>b</bold>, Number of isotype controls called differentially expressed in one-vs-all tests (n=27) for totalVI, totalVI-wBG (totalVI test without background removal), Wilcoxon rank-sum, and t-test. Tests were applied to SLN208-D1, for which isotype controls were retained. Box plots indicate the median (center lines), interquartile range (hinges), whiskers at 1.5x interquartile range. Red dashed line indicates the maximum number of isotype controls. <bold>c-e</bold>, Significance level (Bayes factors for totalVI, adjusted p-value for frequentist tests) for proteins in one-vs-all tests computed on SLN111-D1 and SLN111-D2 for each of <bold>(c)</bold> totalVI, <bold>(d)</bold> t-test, <bold>(e)</bold> Wilcoxon. <bold>f</bold>, Bayes factors for proteins in one-vs-all tests computed on the SLN111 datasets integrated with and without the SLN111-D2 proteins held-out. Differential expression tests for both model fits were conditioned on SLN111-D1. Bayes factors are colored by the average protein expression from SLN111-D1.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0012"/>
    </fig>
    <fig id="F13" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 8</label>
      <caption>
        <p id="P158">Interpreting totalVI latent dimensions with archetypal analysis.</p>
        <p id="P159"><bold>a, b</bold>, Heatmap of top <bold>(a)</bold> gene and <bold>(b)</bold> protein features for each archetype. The archetype score corresponds to the standard scaled archetypal expression profiles (<xref rid="S12" ref-type="sec">Methods</xref>). Heatmaps are individually column normalized for visualization. <bold>c</bold>, Fraction of proteins in top archetypal features for each archetype. Features in each archetype were selected in the “top” if they had an archetype score of greater than 2. For these features, we performed a one-sided hypergeometric test to determine if proteins were over-represented in this feature set relative to the global distribution of feature types. Archetypes with over-representation of proteins (one-sided hypergeometric test, BH-adjusted p-value &lt;0.05) are denoted.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0013"/>
    </fig>
    <fig id="F14" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 9</label>
      <caption>
        <p id="P160">Visualization of archetypes in totalVI-intersect model of SLN-all</p>
        <p id="P161"><bold>a</bold>, UMAP plots of SLN-all cells colored by latent dimension value. <bold>b</bold>, totalVI protein expression for CD24 and CD93 proteins as a function of distance to archetype 16. <bold>c</bold>, totalVI denoised expression for Isg20 and Ifit3 genes as a function of distance to archetype 7. Archetype is colored in blue, all other cells in grey.</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0014"/>
    </fig>
    <fig id="F15" orientation="portrait" position="anchor">
      <label>Extended Data Fig. 10</label>
      <caption>
        <p id="P162">totalVI identifies correlated modules of RNA and proteins that are associated with the maturation of transitional B cells</p>
        <p id="P163"><bold>a</bold>, totalVI Spearman correlations in mature B cells between the same RNA and proteins as in <xref rid="F5" ref-type="fig">Figure 5h</xref>. Features were hierarchically clustered within mature B cells. <bold>b</bold>, UMAP of the totalVI latent space colored by totalVI RNA expression of Rag1. <bold>c</bold>, totalVI RNA expression of Rag1 as a function of <inline-formula><mml:math display="inline" id="M280"><mml:mrow><mml:mn>1</mml:mn><mml:mtext> </mml:mtext><mml:mo>−</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (the totalVI latent dimension associated with transitional B cells). <bold>d</bold>, Histogram of Spearman correlations between each feature in <bold>(a)</bold> and <inline-formula><mml:math display="inline" id="M281"><mml:mrow><mml:mn>1</mml:mn><mml:mtext> </mml:mtext><mml:mo>−</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (n = 2,735 cells).</p>
      </caption>
      <graphic xlink:href="nihms-1656427-f0015"/>
    </fig>
  </sec>
  <sec sec-type="supplementary-material" id="SM1">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="SD1">
      <label>1</label>
      <media xlink:href="NIHMS1656427-supplement-1.pdf" orientation="portrait" id="d40e10070" position="anchor"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="S64">
    <title>Acknowledgements</title>
    <p id="P164">We thank Ellen Robey, Lydia Lutes, and Derek Bangs for help designing experiments. We thank BioLegend Inc. and their proteogenomics team, especially Bertrand Yeung, Andre Fernandes, Qing Gao, Hong Zhang, Tse Shun Huang, for providing reagents and expertise and for help with sample preparation, library generation, and sequencing of CITE-seq libraries. We thank David DeTomaso for general data analysis advice, and Pierre Boyeau, Achille Nazaret, and Galen Xing for help with integrating totalVI in the scvi-tools package. We thank members of the Streets and Yosef laboratories for helpful feedback. Research reported in this manuscript was supported by the NIGMS of the National Institutes of Health under award number R35GM124916 (A.S), the Chan-Zuckerberg Foundation Network under grant number 2019–02452 (N.Y.), and the National Institutes of Mental Health under grant number U19MH114821 (N.Y.). A.G. is supported by NIH Training Grant 5T32HG000047–19. Z.S. is supported by the National Science Foundation Graduate Research Fellowship. N.Y. was supported by the Koret-Berkeley-Tel Aviv (KBT) Initiative in Computational Biology. A.S. and N.Y. are Chan Zuckerberg Biohub investigators.</p>
  </ack>
  <fn-group>
    <fn id="FN3">
      <p id="P165">Ethics declaration</p>
    </fn>
    <fn id="FN4">
      <p id="P166">K.L.N. is an employee of BioLegend Inc. The other authors declare no competing interests.</p>
    </fn>
  </fn-group>
  <ref-list>
    <title>References</title>
    <ref id="R1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><name><surname>Stubbington</surname><given-names>MJT</given-names></name>, <name><surname>Rozenblatt-Rosen</surname><given-names>O</given-names></name>, <name><surname>Regev</surname><given-names>A</given-names></name> &amp; <name><surname>Teichmann</surname><given-names>SA</given-names></name>
<article-title>Single-cell transcriptomics to explore the immune system in health and disease</article-title>. <source>Science</source>
<volume>358</volume>, <fpage>58</fpage>–<lpage>63</lpage> (<year>2017</year>).<pub-id pub-id-type="pmid">28983043</pub-id></mixed-citation>
    </ref>
    <ref id="R2">
      <label>2.</label>
      <mixed-citation publication-type="other"><name><surname>Papalexi</surname><given-names>E</given-names></name> &amp; <name><surname>Satija</surname><given-names>R</given-names></name>
<article-title>Single-cell RNA sequencing to explore immune cell heterogeneity</article-title>. <source>Nature Reviews Immunology</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.1038/nri.2017.76</pub-id>.</mixed-citation>
    </ref>
    <ref id="R3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><name><surname>Labib</surname><given-names>M</given-names></name> &amp; <name><surname>Kelley</surname><given-names>SO</given-names></name>
<article-title>Single-cell analysis targeting the proteome</article-title>. <source>Nature Reviews Chemistry</source>
<volume>4</volume>, <fpage>143</fpage>–<lpage>158</lpage> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R4">
      <label>4.</label>
      <mixed-citation publication-type="other"><name><surname>Wagner</surname><given-names>A</given-names></name>, <name><surname>Regev</surname><given-names>A</given-names></name> &amp; <name><surname>Yosef</surname><given-names>N</given-names></name>
<article-title>Revealing the vectors of cellular identity with single-cell genomics</article-title>. <source>Nature Biotechnology</source> (<year>2016</year>) <pub-id pub-id-type="doi">10.1038/nbt.3711</pub-id>.</mixed-citation>
    </ref>
    <ref id="R5">
      <label>5.</label>
      <mixed-citation publication-type="other"><name><surname>Efremova</surname><given-names>M</given-names></name> &amp; <name><surname>Tiechmann</surname><given-names>SA</given-names></name>
<article-title>Computational methods for single-cell omics across modalities</article-title>. <source>Nature Methods</source> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R6">
      <label>6.</label>
      <mixed-citation publication-type="other"><name><surname>Stoeckius</surname><given-names>M</given-names></name><etal/><article-title>Simultaneous epitope and transcriptome measurement in single cells</article-title>. <source>Nature Methods</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.1038/nmeth.4380</pub-id>.</mixed-citation>
    </ref>
    <ref id="R7">
      <label>7.</label>
      <mixed-citation publication-type="other"><name><surname>Peterson</surname><given-names>VM</given-names></name><etal/><article-title>Multiplexed quantification of proteins and transcripts in single cells</article-title>. <source>Nature Biotechnology</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.1038/nbt.3973</pub-id>.</mixed-citation>
    </ref>
    <ref id="R8">
      <label>8.</label>
      <mixed-citation publication-type="other"><name><surname>Regev</surname><given-names>A</given-names></name><etal/><article-title>The Human Cell Atlas</article-title>. <source>eLife</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.7554/eLife.27041</pub-id>.</mixed-citation>
    </ref>
    <ref id="R9">
      <label>9.</label>
      <mixed-citation publication-type="other"><name><surname>Tanay</surname><given-names>A</given-names></name> &amp; <name><surname>Regev</surname><given-names>A</given-names></name>
<article-title>Scaling single-cell genomics from phenomenology to mechanism</article-title>. <source>Nature</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.1038/nature21350</pub-id>.</mixed-citation>
    </ref>
    <ref id="R10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><name><surname>Todorovic</surname><given-names>V</given-names></name><article-title>Single-cell RNA-seq—now with protein</article-title>. <source>Nature Methods</source><volume>14</volume>, <fpage>1028</fpage>–<lpage>1029</lpage> (<year>2017</year>).</mixed-citation>
    </ref>
    <ref id="R11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><name><surname>Haque</surname><given-names>A</given-names></name>, <name><surname>Engel</surname><given-names>J</given-names></name>, <name><surname>Teichmann</surname><given-names>SA</given-names></name> &amp; <name><surname>Lönnberg</surname><given-names>T</given-names></name>
<article-title>A practical guide to single-cell RNA-sequencing for biomedical research and clinical applications</article-title>. <source>Genome Medicine</source>
<volume>9</volume>, <fpage>1</fpage>–<lpage>12</lpage> (<year>2017</year>).<pub-id pub-id-type="pmid">28081715</pub-id></mixed-citation>
    </ref>
    <ref id="R12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><name><surname>Granja</surname><given-names>JM</given-names></name><etal/><article-title>Single-cell multiomic analysis identifies regulatory programs in mixed-phenotype acute leukemia</article-title>. <source>Nature Biotechnology</source><volume>37</volume>, <fpage>1458</fpage>–<lpage>1465</lpage> (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><name><surname>Praktiknjo</surname><given-names>SD</given-names></name><etal/><article-title>Tracing tumorigenesis in a solid tumor model at single-cell resolution</article-title>. <source>Nature Communications</source><volume>11</volume>, <fpage>991</fpage> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><name><surname>Kotliarov</surname><given-names>Y</given-names></name><etal/><article-title>Broad immune activation underlies shared set point signatures for vaccine responsiveness in healthy individuals and disease activity in patients with lupus</article-title>. <source>Nature Medicine</source><volume>26</volume>, <fpage>618</fpage>–<lpage>629</lpage> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><name><surname>Lopez</surname><given-names>R</given-names></name>, <name><surname>Regier</surname><given-names>J</given-names></name>, <name><surname>Cole</surname><given-names>MB</given-names></name>, <name><surname>Jordan</surname><given-names>MI</given-names></name> &amp; <name><surname>Yosef</surname><given-names>N</given-names></name>
<article-title>Deep generative modeling for single-cell transcriptomics</article-title>. <source>Nature Methods</source>
<volume>15</volume>, <fpage>1053</fpage>–<lpage>1058</lpage> (<year>2018</year>).<pub-id pub-id-type="pmid">30504886</pub-id></mixed-citation>
    </ref>
    <ref id="R16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><name><surname>Levitin</surname><given-names>HM</given-names></name><etal/><article-title>De novo gene signature identification from single‐cell RNA ‐seq with hierarchical Poisson factorization</article-title>. <source>Molecular Systems Biology</source><volume>15</volume>, (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R17">
      <label>17.</label>
      <mixed-citation publication-type="other"><name><surname>Azizi</surname><given-names>E</given-names></name>, <name><surname>Prabhakaran</surname><given-names>S</given-names></name>, <name><surname>Carr</surname><given-names>A</given-names></name> &amp; <name><surname>Pe’er</surname><given-names>D</given-names></name>
<article-title>Bayesian inference for single-cell clustering and imputing</article-title>. <source>Genomics and Computational Biology</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.18547/gcb.2017.vol3.iss1.e46</pub-id>.</mixed-citation>
    </ref>
    <ref id="R18">
      <label>18.</label>
      <mixed-citation publication-type="other"><name><surname>Risso</surname><given-names>D</given-names></name>, <name><surname>Perraudeau</surname><given-names>F</given-names></name>, <name><surname>Gribkova</surname><given-names>S</given-names></name>, <name><surname>Dudoit</surname><given-names>S</given-names></name> &amp; <name><surname>Vert</surname><given-names>JP</given-names></name>
<article-title>A general and flexible method for signal extraction from single-cell RNA-seq data</article-title>. <source>Nature Communications</source> (<year>2018</year>) <pub-id pub-id-type="doi">10.1038/s41467-017-02554-5</pub-id>.</mixed-citation>
    </ref>
    <ref id="R19">
      <label>19.</label>
      <mixed-citation publication-type="other"><name><surname>Blei</surname><given-names>DM</given-names></name><article-title>Build, compute, critique, repeat: Data analysis with latent variable models</article-title>. <source>Annual Review of Statistics and Its Application</source> (<year>2014</year>) <pub-id pub-id-type="doi">10.1146/annurev-statistics-022513-115657</pub-id>.</mixed-citation>
    </ref>
    <ref id="R20">
      <label>20.</label>
      <mixed-citation publication-type="confproc"><name><surname>Kingma</surname><given-names>DP</given-names></name> &amp; <name><surname>Welling</surname><given-names>M</given-names></name>
<article-title>Auto-Encoding variational Bayes</article-title>. in <conf-name>International conference on learning representations</conf-name> (<year>2014</year>).</mixed-citation>
    </ref>
    <ref id="R21">
      <label>21.</label>
      <mixed-citation publication-type="other"><name><surname>Cutler</surname><given-names>A</given-names></name> &amp; <name><surname>Breiman</surname><given-names>L</given-names></name>
<source>Archetypal analysis. Technometrics</source> (<year>1994</year>) <pub-id pub-id-type="doi">10.1080/00401706.1994.10485840</pub-id>.</mixed-citation>
    </ref>
    <ref id="R22">
      <label>22.</label>
      <mixed-citation publication-type="other"><name><surname>Stoeckius</surname><given-names>M</given-names></name><etal/><article-title>Cell Hashing with barcoded antibodies enables multiplexing and doublet detection for single cell genomics</article-title>. <source>Genome Biology</source> (<year>2018</year>) <pub-id pub-id-type="doi">10.1186/s13059-018-1603-1</pub-id>.</mixed-citation>
    </ref>
    <ref id="R23">
      <label>23.</label>
      <mixed-citation publication-type="other"><collab>10X Genomics</collab>. <source>10k PBMCs from a Healthy Donor - gene expression and cell surface protein</source>. (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R24">
      <label>24.</label>
      <mixed-citation publication-type="other"><collab>10X Genomics</collab>. <source>10k Cells from a MALT Tumor - gene expression and cell surface protein</source>. (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R25">
      <label>25.</label>
      <mixed-citation publication-type="other"><name><surname>Gelman</surname><given-names>A</given-names></name>, <name><surname>Meng</surname><given-names>XL</given-names></name> &amp; <name><surname>Stern</surname><given-names>H</given-names></name>
<article-title>Posterior predictive assessment of model fitness via realized discrepancies</article-title>. <source>Statistica Sinica</source> (<year>1996</year>).</mixed-citation>
    </ref>
    <ref id="R26">
      <label>26.</label>
      <mixed-citation publication-type="confproc"><name><surname>Kuleshov</surname><given-names>V</given-names></name>, <name><surname>Fenner</surname><given-names>N</given-names></name> &amp; <name><surname>Ermon</surname><given-names>S</given-names></name>
<article-title>Accurate uncertainties for deep learning using calibrated regression</article-title>. in <conf-name>International conference on machine learning</conf-name> (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R27">
      <label>27.</label>
      <mixed-citation publication-type="other"><name><surname>Hulspas</surname><given-names>R</given-names></name>, <name><surname>O’Gorman</surname><given-names>MRG</given-names></name>, <name><surname>Wood</surname><given-names>BL</given-names></name>, <name><surname>Gratama</surname><given-names>JW</given-names></name> &amp; <name><surname>Sutherland</surname><given-names>DR</given-names></name>
<article-title>Considerations for the control of background fluorescence in clinical flow cytometry</article-title>. <source>Cytometry Part B: Clinical Cytometry</source> (<year>2009</year>) <pub-id pub-id-type="doi">10.1002/cyto.b.20485</pub-id>.</mixed-citation>
    </ref>
    <ref id="R28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><name><surname>Yang</surname><given-names>S</given-names></name><etal/><article-title>Decontamination of ambient RNA in single-cell RNA-seq with DecontX</article-title>. <source>Genome Biology</source><volume>21</volume>, <fpage>57</fpage> (<year>2020</year>).<pub-id pub-id-type="pmid">32138770</pub-id></mixed-citation>
    </ref>
    <ref id="R29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><name><surname>Young</surname><given-names>MD</given-names></name> &amp; <name><surname>Behjati</surname><given-names>S</given-names></name>
<article-title>SoupX removes ambient RNA contamination from droplet based single cell RNA sequencing data</article-title>. <source>bioRxiv</source>
<volume>303727</volume> (<year>2018</year>) <pub-id pub-id-type="doi">10.1101/303727</pub-id>.</mixed-citation>
    </ref>
    <ref id="R30">
      <label>30.</label>
      <mixed-citation publication-type="other"><name><surname>Fleming</surname><given-names>SJ</given-names></name>, <name><surname>Marioni</surname><given-names>JC</given-names></name> &amp; <name><surname>Babadi</surname><given-names>M</given-names></name>
<article-title>CellBender remove-background: a deep generative model for unsupervised removal of background noise from scRNA-seq datasets</article-title>. <source>bioRxiv</source> (<year>2019</year>) <pub-id pub-id-type="doi">10.1101/791699</pub-id>.</mixed-citation>
    </ref>
    <ref id="R31">
      <label>31.</label>
      <mixed-citation publication-type="other"><name><surname>Ngo Trong</surname><given-names>T</given-names></name><etal/><article-title>Semisupervised generative autoencoder for single-cell data</article-title>. <source>Journal of Computational Biology</source> (<year>2019</year>) <pub-id pub-id-type="doi">10.1089/cmb.2019.0337</pub-id>.</mixed-citation>
    </ref>
    <ref id="R32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><name><surname>Li</surname><given-names>B</given-names></name><etal/><article-title>Cumulus provides cloud-based data analysis for large-scale single-cell and single-nucleus RNA-seq</article-title>. <source>Nature Methods</source><volume>17</volume>, <fpage>793</fpage>–<lpage>798</lpage> (<year>2020</year>).<pub-id pub-id-type="pmid">32719530</pub-id></mixed-citation>
    </ref>
    <ref id="R33">
      <label>33.</label>
      <mixed-citation publication-type="other"><name><surname>Andrews</surname><given-names>TS</given-names></name> &amp; <name><surname>Hemberg</surname><given-names>M</given-names></name>
<article-title>False signals induced by single-cell imputation</article-title>. <source>F1000Research</source> (<year>2019</year>) <pub-id pub-id-type="doi">10.12688/f1000research.16613.2</pub-id>.</mixed-citation>
    </ref>
    <ref id="R34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><name><surname>Stuart</surname><given-names>T</given-names></name><etal/><article-title>Comprehensive Integration of Single-Cell Data</article-title>. <source>Cell</source><volume>177</volume>, <fpage>1888</fpage>–<lpage>1902</lpage> (<year>2019</year>).<pub-id pub-id-type="pmid">31178118</pub-id></mixed-citation>
    </ref>
    <ref id="R35">
      <label>35.</label>
      <mixed-citation publication-type="other"><name><surname>Hie</surname><given-names>B</given-names></name>, <name><surname>Bryson</surname><given-names>B</given-names></name> &amp; <name><surname>Berger</surname><given-names>B</given-names></name>
<article-title>Efficient integration of heterogeneous single-cell transcriptomes using Scanorama</article-title>. <source>Nature Biotechnology</source> (<year>2019</year>) <pub-id pub-id-type="doi">10.1038/s41587-019-0113-3</pub-id>.</mixed-citation>
    </ref>
    <ref id="R36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><name><surname>Korsunsky</surname><given-names>I</given-names></name><etal/><article-title>Fast, sensitive and accurate integration of single-cell data with Harmony</article-title>. <source>Nature Methods</source><volume>16</volume>, (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R37">
      <label>37.</label>
      <mixed-citation publication-type="other"><collab>10X Genomics</collab>. <source>5k Peripheral blood mononuclear cells (PBMCs) from a healthy donor with cell surface proteins (v3 chemistry)</source>. (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><name><surname>Zhou</surname><given-names>Z</given-names></name>, <name><surname>Ye</surname><given-names>C</given-names></name>, <name><surname>Wang</surname><given-names>J</given-names></name> &amp; <name><surname>Zhang</surname><given-names>NR</given-names></name>
<article-title>Surface protein imputation from single cell transcriptomes by deep neural networks</article-title>. <source>Nature Communications</source>
<volume>11</volume>, <fpage>1</fpage>–<lpage>10</lpage> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><name><surname>Kass</surname><given-names>RE</given-names></name> &amp; <name><surname>Raftery</surname><given-names>AE</given-names></name>
<article-title>Bayes factors</article-title>. <source>Journal of the American Statistical Association</source>
<volume>90</volume>, <fpage>773</fpage>–<lpage>795</lpage> (<year>1995</year>).</mixed-citation>
    </ref>
    <ref id="R40">
      <label>40.</label>
      <mixed-citation publication-type="other"><name><surname>Boyeau</surname><given-names>P</given-names></name><etal/><article-title>Deep Generative Models for Detecting Differential Expression in Single Cells</article-title>. in <source>Machine learning in computational biology</source> (<year>2019</year>). <pub-id pub-id-type="doi">10.1101/794289</pub-id>.</mixed-citation>
    </ref>
    <ref id="R41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><name><surname>Bezman</surname><given-names>NA</given-names></name><etal/><article-title>Molecular definition of the identity and activation of natural killer cells</article-title>. <source>Nature Immunology</source><volume>13</volume>, <fpage>1000</fpage>–<lpage>1008</lpage> (<year>2012</year>).<pub-id pub-id-type="pmid">22902830</pub-id></mixed-citation>
    </ref>
    <ref id="R42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><name><surname>Walzer</surname><given-names>T</given-names></name><etal/><article-title>Identification, activation, and selective in vivo ablation of mouse NK cells via NKp46</article-title>. <source>Proceedings of the National Academy of Sciences of the United States of America</source><volume>104</volume>, <fpage>3384</fpage>–<lpage>3389</lpage> (<year>2007</year>).<pub-id pub-id-type="pmid">17360655</pub-id></mixed-citation>
    </ref>
    <ref id="R43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><name><surname>Gordon</surname><given-names>SM</given-names></name><etal/><article-title>The transcription factors T-bet and Eomes control key checkpoints of natural killer cell maturation</article-title>. <source>Immunity</source><volume>36</volume>, <fpage>55</fpage>–<lpage>67</lpage> (<year>2012</year>).<pub-id pub-id-type="pmid">22261438</pub-id></mixed-citation>
    </ref>
    <ref id="R44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><name><surname>Korem</surname><given-names>Y</given-names></name><etal/><article-title>Geometry of the gene expression space of individual cells</article-title>. <source>PLoS Computational Biology</source><volume>11</volume>, <fpage>1</fpage>–<lpage>27</lpage> (<year>2015</year>).</mixed-citation>
    </ref>
    <ref id="R45">
      <label>45.</label>
      <mixed-citation publication-type="other"><name><surname>Dijk</surname><given-names>D</given-names></name> van <etal/>
<article-title>Finding archetypal spaces for data using neural networks</article-title>. <source>arXiv</source> (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><name><surname>Thomas</surname><given-names>MD</given-names></name>, <name><surname>Srivastava</surname><given-names>B</given-names></name> &amp; <name><surname>Allman</surname><given-names>D</given-names></name>
<article-title>Regulation of peripheral B cell maturation</article-title>. <source>Cellular Immunology</source>
<volume>239</volume>, <fpage>92</fpage>–<lpage>102</lpage> (<year>2006</year>).<pub-id pub-id-type="pmid">16797504</pub-id></mixed-citation>
    </ref>
    <ref id="R47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><name><surname>Loder</surname><given-names>F</given-names></name><etal/><article-title>B cell development in the spleen takes place in discrete steps and is determined by the quality of B cell receptor-derived signals</article-title>. <source>Journal of Experimental Medicine</source><volume>190</volume>, <fpage>75</fpage>–<lpage>89</lpage> (<year>1999</year>).</mixed-citation>
    </ref>
    <ref id="R48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><name><surname>Kreslavsky</surname><given-names>T</given-names></name><etal/><article-title>Essential role for the transcription factor Bhlhe41 in regulating the development, self-renewal and BCR repertoire of B-1a cells</article-title>. <source>Nature Immunology</source><volume>18</volume>, <fpage>442</fpage>–<lpage>455</lpage> (<year>2017</year>).<pub-id pub-id-type="pmid">28250425</pub-id></mixed-citation>
    </ref>
    <ref id="R49">
      <label>49.</label>
      <mixed-citation publication-type="other"><name><surname>DeTomaso</surname><given-names>D</given-names></name><etal/><article-title>Functional interpretation of single cell similarity maps</article-title>. <source>Nature Communications</source> (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><name><surname>Lock</surname><given-names>EF</given-names></name>, <name><surname>Hoadley</surname><given-names>KA</given-names></name>, <name><surname>Marron</surname><given-names>JS</given-names></name> &amp; <name><surname>Nobel</surname><given-names>AB</given-names></name>
<article-title>Joint and individual variation explained (JIVE) for integrated analysis of multiple data types</article-title>. <source>Annals of Applied Statistics</source>
<volume>7</volume>, <fpage>523</fpage>–<lpage>542</lpage> (<year>2013</year>).</mixed-citation>
    </ref>
    <ref id="R51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><name><surname>Argelaguet</surname><given-names>R</given-names></name><etal/><article-title>Multi‐Omics Factor Analysis—a framework for unsupervised integration of multi‐omics data sets</article-title>. <source>Molecular Systems Biology</source><volume>14</volume>, <fpage>1</fpage>–<lpage>13</lpage> (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><name><surname>Liu</surname><given-names>Y</given-names></name>, <name><surname>Beyer</surname><given-names>A</given-names></name> &amp; <name><surname>Aebersold</surname><given-names>R</given-names></name>
<article-title>On the dependency of cellular protein levels on mRNA abundance</article-title>. <source>Cell</source>
<volume>165</volume>, <fpage>535</fpage>–<lpage>550</lpage> (<year>2016</year>).<pub-id pub-id-type="pmid">27104977</pub-id></mixed-citation>
    </ref>
    <ref id="R53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><name><surname>Gorin</surname><given-names>G</given-names></name>, <name><surname>Svensson</surname><given-names>V</given-names></name> &amp; <name><surname>Pachter</surname><given-names>L</given-names></name>
<article-title>Protein velocity and acceleration from single-cell multiomics experiments</article-title>. <source>Genome Biology</source>
<volume>21</volume>, <fpage>1</fpage>–<lpage>6</lpage> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R54">
      <label>54.</label>
      <mixed-citation publication-type="other"><name><surname>Svensson</surname><given-names>V</given-names></name>, <name><surname>Beltrame</surname><given-names>E. da V.</given-names></name> &amp; <name><surname>Pachter</surname><given-names>L</given-names></name>
<article-title>Quantifying the tradeoff between sequencing depth and cell number in single-cell RNA-seq</article-title>. <source>bioRxiv</source> (<year>2019</year>) <pub-id pub-id-type="doi">10.1101/762773</pub-id>.</mixed-citation>
    </ref>
    <ref id="R55">
      <label>55.</label>
      <mixed-citation publication-type="journal"><name><surname>Heimberg</surname><given-names>G</given-names></name>, <name><surname>Bhatnagar</surname><given-names>R</given-names></name>, <name><surname>El-Samad</surname><given-names>H</given-names></name> &amp; <name><surname>Thomson</surname><given-names>M</given-names></name>
<article-title>Low dimensionality in gene expression data enables the accurate extraction of transcriptional programs from shallow sequencing</article-title>. <source>Cell Systems</source>
<volume>2</volume>, <fpage>239</fpage>–<lpage>250</lpage> (<year>2016</year>).<pub-id pub-id-type="pmid">27135536</pub-id></mixed-citation>
    </ref>
    <ref id="R56">
      <label>56.</label>
      <mixed-citation publication-type="other"><name><surname>Wolf</surname><given-names>FA</given-names></name>, <name><surname>Angerer</surname><given-names>P</given-names></name> &amp; <name><surname>Theis</surname><given-names>FJ</given-names></name>
<article-title>SCANPY: Large-scale single-cell gene expression data analysis</article-title>. <source>Genome Biology</source> (<year>2018</year>) <pub-id pub-id-type="doi">10.1186/s13059-017-1382-0</pub-id>.</mixed-citation>
    </ref>
    <ref id="R57">
      <label>57.</label>
      <mixed-citation publication-type="journal"><name><surname>Clark</surname><given-names>SJ</given-names></name><etal/><article-title>ScNMT-seq enables joint profiling of chromatin accessibility DNA methylation and transcription in single cells e</article-title>. <source>Nature Communications</source><volume>9</volume>, <fpage>1</fpage>–<lpage>9</lpage> (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R58">
      <label>58.</label>
      <mixed-citation publication-type="journal"><name><surname>Mimitou</surname><given-names>EP</given-names></name><etal/><article-title>Multiplexed detection of proteins, transcriptomes, clonotypes and CRISPR perturbations in single cells</article-title>. <source>Nature Methods</source><volume>16</volume>, <fpage>409</fpage>–<lpage>412</lpage> (<year>2019</year>).<pub-id pub-id-type="pmid">31011186</pub-id></mixed-citation>
    </ref>
    <ref id="R59">
      <label>59.</label>
      <mixed-citation publication-type="other"><name><surname>Svensson</surname><given-names>V</given-names></name>, <name><surname>Gayoso</surname><given-names>A</given-names></name>, <name><surname>Yosef</surname><given-names>N</given-names></name> &amp; <name><surname>Pachter</surname><given-names>L</given-names></name>
<article-title>Interpretable factor models of single-cell RNA-seq via variational autoencoders</article-title>. <source>Bioinformatics</source> (<year>2020</year>) <pub-id pub-id-type="doi">10.1101/737601</pub-id>.</mixed-citation>
    </ref>
    <ref id="R60">
      <label>60.</label>
      <mixed-citation publication-type="other"><name><surname>Wang</surname><given-names>C</given-names></name> &amp; <name><surname>Blei</surname><given-names>DM</given-names></name>
<article-title>A general method for robust Bayesian modeling</article-title>. <source>Bayesian Analysis</source> (<year>2018</year>) <pub-id pub-id-type="doi">10.1214/17-BA1090</pub-id>.</mixed-citation>
    </ref>
    <ref id="R61">
      <label>61.</label>
      <mixed-citation publication-type="other"><name><surname>Svensson</surname><given-names>V</given-names></name><article-title>Droplet scRNA-seq is not zero-inflated</article-title>. <source>Nature Biotechnology</source> (<year>2020</year>).</mixed-citation>
    </ref>
    <ref id="R62">
      <label>62.</label>
      <mixed-citation publication-type="journal"><name><surname>Blei</surname><given-names>DM</given-names></name>, <name><surname>Kucukelbir</surname><given-names>A</given-names></name> &amp; <name><surname>McAuliffe</surname><given-names>JD</given-names></name>
<article-title>Variational Inference: A review for statisticians</article-title>. <source>Journal of the American Statistical Association</source>
<volume>112</volume>, <fpage>859</fpage>–<lpage>877</lpage> (<year>2017</year>).</mixed-citation>
    </ref>
    <ref id="R63">
      <label>63.</label>
      <mixed-citation publication-type="other"><name><surname>Sønderby</surname><given-names>CK</given-names></name>, <name><surname>Raiko</surname><given-names>T</given-names></name>, <name><surname>Maaløe</surname><given-names>L</given-names></name>, <name><surname>Sønderby</surname><given-names>SK</given-names></name> &amp; <name><surname>Winther</surname><given-names>O</given-names></name>
<article-title>Ladder variational autoencoders</article-title>. in <source>Neural information processing systems</source> (<year>2016</year>).</mixed-citation>
    </ref>
    <ref id="R64">
      <label>64.</label>
      <mixed-citation publication-type="confproc"><name><surname>Kingma</surname><given-names>DP</given-names></name> &amp; <name><surname>Ba</surname><given-names>JL</given-names></name>
<article-title>Adam: A method for stochastic optimization</article-title>. in <conf-name>International conference on learning representations</conf-name> (<year>2015</year>).</mixed-citation>
    </ref>
    <ref id="R65">
      <label>65.</label>
      <mixed-citation publication-type="other"><name><surname>Lopez</surname><given-names>R</given-names></name><etal/><article-title>A joint model of unpaired data from scRNA-seq and spatial transcriptomics for imputing missing gene expression measurements</article-title>. in <source>ICML workshop in computational biology</source> (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R66">
      <label>66.</label>
      <mixed-citation publication-type="confproc"><name><surname>Mattei</surname><given-names>PA</given-names></name> &amp; <name><surname>Freiisen</surname><given-names>J</given-names></name>
<article-title>Miwae: Deep generative modelling and imputation of incomplete data sets</article-title>. in <conf-name>International conference on machine learning</conf-name> (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R67">
      <label>67.</label>
      <mixed-citation publication-type="other"><name><surname>Blitzer</surname><given-names>J</given-names></name>, <name><surname>Crammer</surname><given-names>K</given-names></name>, <name><surname>Kulesza</surname><given-names>A</given-names></name>, <name><surname>Pereira</surname><given-names>F</given-names></name> &amp; <name><surname>Wortman</surname><given-names>J</given-names></name>
<article-title>Learning bounds for domain adaptation</article-title>. in <source>Advances in neural information processing systems</source> (<year>2008</year>).</mixed-citation>
    </ref>
    <ref id="R68">
      <label>68.</label>
      <mixed-citation publication-type="journal"><name><surname>Ganin</surname><given-names>Y</given-names></name><etal/><article-title>Domain-adversarial training of neural networks</article-title>. <source>The Journal of Machine Learning Research</source><volume>17</volume>, <fpage>2096</fpage>–<lpage>2030</lpage> (<year>2016</year>).</mixed-citation>
    </ref>
    <ref id="R69">
      <label>69.</label>
      <mixed-citation publication-type="other"><name><surname>Lotfollahi</surname><given-names>M</given-names></name>, <name><surname>Naghipourfar</surname><given-names>M</given-names></name>, <name><surname>Theis</surname><given-names>FJ</given-names></name> &amp; <name><surname>Wolf</surname><given-names>FA</given-names></name>
<article-title>Conditional out-of-sample generation for unpaired data using trVAE</article-title>. <source>arXiv</source> (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R70">
      <label>70.</label>
      <mixed-citation publication-type="other"><name><surname>Zheng</surname><given-names>GXY</given-names></name><etal/><article-title>Massively parallel digital transcriptional profiling of single cells</article-title>. <source>Nature Communications</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.1038/ncomms14049</pub-id>.</mixed-citation>
    </ref>
    <ref id="R71">
      <label>71.</label>
      <mixed-citation publication-type="other"><name><surname>Dobin</surname><given-names>A</given-names></name><etal/><article-title>STAR: Ultrafast universal RNA-seq aligner</article-title>. <source>Bioinformatics</source> (<year>2013</year>) <pub-id pub-id-type="doi">10.1093/bioinformatics/bts635</pub-id>.</mixed-citation>
    </ref>
    <ref id="R72">
      <label>72.</label>
      <mixed-citation publication-type="other"><name><surname>Gayoso</surname><given-names>Adam</given-names></name>, <name><surname>Shor</surname><given-names>Jonathan</given-names></name>, <name><surname>Carr</surname><given-names>Ambrose J.</given-names></name>, <name><surname>Sharma</surname><given-names>Roshan</given-names></name>, <name><surname>Pe’er</surname><given-names>Dana</given-names></name> (<year>2018</year>, <month>7</month>
<day>17</day>). <article-title>DoubletDetection (Version v2.4)</article-title>. <source>Zenodo</source>. doi: <pub-id pub-id-type="doi">10.5281/zenodo.2678041</pub-id></mixed-citation>
    </ref>
    <ref id="R73">
      <label>73.</label>
      <mixed-citation publication-type="other"><name><surname>Pedregosa</surname><given-names>F</given-names></name><etal/><article-title>Scikit-learn: machine learning in Python</article-title>. <source>Journal of Machine Learning Research</source> (<year>2011</year>).</mixed-citation>
    </ref>
    <ref id="R74">
      <label>74.</label>
      <mixed-citation publication-type="other"><name><surname>Bishop</surname><given-names>CM</given-names></name><source>Pattern Recoginiton and Machine Learning</source>. (<year>2006</year>).</mixed-citation>
    </ref>
    <ref id="R75">
      <label>75.</label>
      <mixed-citation publication-type="confproc"><name><surname>Kucukelbir</surname><given-names>A</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name> &amp; <name><surname>Blei</surname><given-names>DM</given-names></name>
<article-title>Evaluating Bayesian models with posterior dispersion indices</article-title>. in <conf-name>International Conference on Machine Learning</conf-name> (<year>2017</year>).</mixed-citation>
    </ref>
    <ref id="R76">
      <label>76.</label>
      <mixed-citation publication-type="journal"><name><surname>Lun</surname><given-names>ATL</given-names></name><etal/><article-title>EmptyDrops: distinguishing cells from empty droplets in droplet-based single-cell RNA sequencing data</article-title>. <source>Genome Biology</source><volume>20</volume>, <fpage>63</fpage> (<year>2019</year>).<pub-id pub-id-type="pmid">30902100</pub-id></mixed-citation>
    </ref>
    <ref id="R77">
      <label>77.</label>
      <mixed-citation publication-type="other"><name><surname>Lai</surname><given-names>L</given-names></name>, <name><surname>Alaverdi</surname><given-names>N</given-names></name>, <name><surname>Maltais</surname><given-names>L</given-names></name> &amp; <name><surname>Morse</surname><given-names>HC</given-names></name>
<article-title>Immunophenotyping mouse cell surface antigens: Nomenclature and immunophenotyping</article-title>. <source>The Journal of Immunology</source> (<year>1998</year>).</mixed-citation>
    </ref>
    <ref id="R78">
      <label>78.</label>
      <mixed-citation publication-type="journal"><name><surname>Watts</surname><given-names>C</given-names></name><article-title>Capture and processing of exogenous antigens for presentation on MHC molecules</article-title>. <source>Annual Review of Immunology</source><volume>15</volume>, <fpage>821</fpage>–<lpage>850</lpage> (<year>1997</year>).</mixed-citation>
    </ref>
    <ref id="R79">
      <label>79.</label>
      <mixed-citation publication-type="other"><name><surname>Uchida</surname><given-names>J</given-names></name><etal/><article-title>Mouse CD20 expression and function</article-title>. <source>International Immunology</source> (<year>2004</year>) <pub-id pub-id-type="doi">10.1093/intimm/dxh009</pub-id>.</mixed-citation>
    </ref>
    <ref id="R80">
      <label>80.</label>
      <mixed-citation publication-type="journal"><name><surname>Hünig</surname><given-names>T</given-names></name>, <name><surname>Beyersdorf</surname><given-names>N</given-names></name> &amp; <name><surname>Kerkau</surname><given-names>T</given-names></name>
<article-title>CD28 co-stimulation in T-cell homeostasis: a recent perspective</article-title>. <source>ImmunoTargets and Therapy</source>
<volume>4</volume>, <fpage>111</fpage> (<year>2015</year>).<pub-id pub-id-type="pmid">27471717</pub-id></mixed-citation>
    </ref>
    <ref id="R81">
      <label>81.</label>
      <mixed-citation publication-type="other"><name><surname>McInnes</surname><given-names>L</given-names></name>, <name><surname>Healy</surname><given-names>J</given-names></name> &amp; <name><surname>Melville</surname><given-names>J</given-names></name>
<article-title>UMAP: Uniform manifold approximation and projection for dimension reduction</article-title>. <source>arXiv</source> (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R82">
      <label>82.</label>
      <mixed-citation publication-type="journal"><name><surname>Filion</surname><given-names>LG</given-names></name>, <name><surname>Izaguirre</surname><given-names>CA</given-names></name>, <name><surname>Garber</surname><given-names>GE</given-names></name>, <name><surname>Huebsh</surname><given-names>L</given-names></name> &amp; <name><surname>Aye</surname><given-names>MT</given-names></name>
<article-title>Detection of surface and cytoplasmic CD4 on blood monocytes from normal and HIV-1 infected individuals</article-title>. <source>Journal of Immunological Methods</source>
<volume>135</volume>, <fpage>59</fpage>–<lpage>69</lpage> (<year>1990</year>).<pub-id pub-id-type="pmid">1703191</pub-id></mixed-citation>
    </ref>
    <ref id="R83">
      <label>83.</label>
      <mixed-citation publication-type="journal"><name><surname>Haghverdi</surname><given-names>L</given-names></name>, <name><surname>Lun</surname><given-names>ATL</given-names></name>, <name><surname>Morgan</surname><given-names>MD</given-names></name> &amp; <name><surname>Marioni</surname><given-names>JC</given-names></name>
<article-title>Batch effects in single-cell RNA-sequencing data are corrected by matching mutual nearest neighbors</article-title>. <source>Nature Biotechnology</source>
<volume>36</volume>, <fpage>421</fpage>–<lpage>427</lpage> (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R84">
      <label>84.</label>
      <mixed-citation publication-type="other"><name><surname>DeTomaso</surname><given-names>D</given-names></name> &amp; <name><surname>Yosef</surname><given-names>N</given-names></name>
<article-title>Identifying informative gene modules across modalities of single cell genomics</article-title>. <source>bioRxiv</source> (<year>2020</year>) <pub-id pub-id-type="doi">10.1101/2020.02.06.937805</pub-id>.</mixed-citation>
    </ref>
    <ref id="R85">
      <label>85.</label>
      <mixed-citation publication-type="journal"><name><surname>Traag</surname><given-names>V</given-names></name>, <name><surname>Waltman</surname><given-names>L</given-names></name> &amp; <name><surname>Eck</surname><given-names>NJ</given-names></name> van. <article-title>From Louvain to Leiden: guaranteeing well-connected communities</article-title>. <source>Scientific Reports</source>
<volume>9</volume>, (<year>2019</year>).</mixed-citation>
    </ref>
    <ref id="R86">
      <label>86.</label>
      <mixed-citation publication-type="journal"><name><surname>Benjamini</surname><given-names>Y</given-names></name> &amp; <name><surname>Hochberg</surname><given-names>Y</given-names></name>
<article-title>Controlling the false discovery rate: A practical and powerful approach to multiple testing</article-title>. <source>Journal of the Royal Statistical Society: Series B (Methodological)</source>
<volume>57</volume>, <fpage>289</fpage>–<lpage>300</lpage> (<year>1995</year>).</mixed-citation>
    </ref>
    <ref id="R87">
      <label>87.</label>
      <mixed-citation publication-type="other"><name><surname>Zhao</surname><given-names>H</given-names></name>, <name><surname>Liao</surname><given-names>X</given-names></name> &amp; <name><surname>Kang</surname><given-names>Y</given-names></name>
<article-title>Tregs: Where we are and what comes next?</article-title>
<source>Frontiers in Immunology</source> (<year>2017</year>) <pub-id pub-id-type="doi">10.3389/fimmu.2017.01578</pub-id>.</mixed-citation>
    </ref>
    <ref id="R88">
      <label>88.</label>
      <mixed-citation publication-type="journal"><name><surname>Roncarolo</surname><given-names>M-G</given-names></name> &amp; <name><surname>Gregori</surname><given-names>S</given-names></name>
<article-title>Is FOXP3 a bona fide marker for human regulatory T cells?</article-title>
<source>European Journal of Immunology</source>
<volume>38</volume>, <fpage>925</fpage>–<lpage>927</lpage> (<year>2008</year>).<pub-id pub-id-type="pmid">18395862</pub-id></mixed-citation>
    </ref>
    <ref id="R89">
      <label>89.</label>
      <mixed-citation publication-type="journal"><name><surname>Fontenot</surname><given-names>JD</given-names></name>, <name><surname>Rasmussen</surname><given-names>JP</given-names></name>, <name><surname>Gavin</surname><given-names>MA</given-names></name> &amp; <name><surname>Rudensky</surname><given-names>AY</given-names></name>
<article-title>A function for interleukin 2 in Foxp3-expressing regulatory T cells</article-title>. <source>Nature Immunology</source>
<volume>6</volume>, <fpage>1142</fpage>–<lpage>1151</lpage> (<year>2005</year>).<pub-id pub-id-type="pmid">16227984</pub-id></mixed-citation>
    </ref>
    <ref id="R90">
      <label>90.</label>
      <mixed-citation publication-type="journal"><name><surname>Sprouse</surname><given-names>ML</given-names></name><etal/><article-title>High self-reactivity drives T-bet and potentiates Treg function in tissue-specific autoimmunity</article-title>. <source>JCI Insight</source><volume>3</volume>, <fpage>1</fpage>–<lpage>14</lpage> (<year>2018</year>).</mixed-citation>
    </ref>
    <ref id="R91">
      <label>91.</label>
      <mixed-citation publication-type="confproc"><name><surname>Burda</surname><given-names>Y</given-names></name>, <name><surname>Grosse</surname><given-names>R</given-names></name> &amp; <name><surname>Salakhutdinov</surname><given-names>R</given-names></name>
<article-title>Importance weighted Autoencoders</article-title>. in <conf-name>International conference on learning representations</conf-name> (<year>2016</year>).</mixed-citation>
    </ref>
    <ref id="R92">
      <label>92.</label>
      <mixed-citation publication-type="journal"><name><surname>Liberzon</surname><given-names>A</given-names></name><etal/><article-title>Databases and ontologies Molecular signatures database (MSigDB) 3.0</article-title>. <source>Bioinformatics</source><volume>27</volume>, <fpage>1739</fpage>–<lpage>1740</lpage> (<year>2011</year>).<pub-id pub-id-type="pmid">21546393</pub-id></mixed-citation>
    </ref>
    <ref id="R93">
      <label>93.</label>
      <mixed-citation publication-type="journal"><name><surname>Edgar</surname><given-names>R</given-names></name>, <name><surname>Domrachev</surname><given-names>M</given-names></name> &amp; <name><surname>Lash</surname><given-names>AE</given-names></name>
<article-title>Gene Expression Omnibus: NCBI gene expression and hybridization array data repository</article-title>. <source>Nucleic Acids Research</source>
<volume>30</volume>, <fpage>207</fpage>–<lpage>210</lpage> (<year>2002</year>).<pub-id pub-id-type="pmid">11752295</pub-id></mixed-citation>
    </ref>
    <ref id="R94">
      <label>94.</label>
      <mixed-citation publication-type="other"><name><surname>Gayoso</surname><given-names>A</given-names></name> and <name><surname>Steier</surname><given-names>Z</given-names></name> (<year>2020</year>, <month>12</month>
<day>18</day>). <article-title>YosefLab/totalVI_reproducibility: totalVI reproducibility v0.3 (Version v0.3)</article-title>. <source>Zenodo</source>. <pub-id pub-id-type="doi">10.5281/zenodo.4330368</pub-id>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig id="F1" orientation="portrait" position="float">
    <label>Figure 1:</label>
    <caption>
      <title>Schematic of a CITE-seq data analysis pipeline with totalVI.</title>
      <p id="P167"><bold>a</bold>, A CITE-seq experiment simultaneously measures RNA and surface proteins molecules in single cells, producing paired count matrices for RNA and proteins. These matrices, along with an optional matrix containing sample-level categorical covariates (batch), are the input to totalVI, which concomitantly normalizes the data and learns a joint representation of the data that is suitable for downstream analysis tasks. <bold>b</bold>, Schematic of totalVI model. The RNA counts, protein counts, and batch for each cell <inline-formula><mml:math display="inline" id="M282"><mml:mi>n</mml:mi></mml:math></inline-formula> are jointly transformed by an encoder neural network into the parameters of the posterior distributions for <inline-formula><mml:math display="inline" id="M283"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, a low-dimensional representation of cell state, <inline-formula><mml:math display="inline" id="M284"><mml:mrow><mml:msub><mml:mi>β</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, the protein background mean indexed by protein, and <inline-formula><mml:math display="inline" id="M285"><mml:mrow><mml:msub><mml:mi mathvariant="script">ℓ</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, an RNA size factor. The posterior mean of <inline-formula><mml:math display="inline" id="M286"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, which we refer to as the latent representation, is corrected for batch effects and can be used as input to clustering and visualization algorithms. Next, a decoder neural network maps samples from the posterior distribution of <inline-formula><mml:math display="inline" id="M287"><mml:mrow><mml:msub><mml:mi>z</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, along with the batch, <inline-formula><mml:math display="inline" id="M288"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, to parameters of a negative binomial distribution for each gene and a negative binomial mixture for each protein, which contains a foreground (FG) and background (BG) component (<xref rid="S12" ref-type="sec">Methods</xref>). These parameters are used for feature-level analyses.</p>
    </caption>
    <graphic xlink:href="nihms-1656427-f0001"/>
  </fig>
  <fig id="F2" orientation="portrait" position="float">
    <label>Figure 2:</label>
    <caption>
      <title>totalVI identifies and corrects for protein background.</title>
      <p id="P168">totalVI was applied to the SLN111-D1 dataset. <bold>a-c</bold>, CD20 protein (encoded by Ms4a1 RNA). <bold>(a)</bold> totalVI foreground probability vs <inline-formula><mml:math display="inline" id="M289"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo> </mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Vertical line denotes protein foreground/background cutoff determined by a GMM. Horizontal lines denote totalVI foreground probability of 0.2 and 0.8. Cells with foreground probability greater than 0.8 or less than 0.2 are colored by quadrant, while the remaining cells are gray. <bold>(b)</bold> UMAP plots of the totalVI latent space. Each quadrant contains cells from the corresponding quadrant of (a) in color with the remaining cells in gray. <bold>(c)</bold> RNA expression (log library-size normalized; Methods 4.8) for cells colored in (a). <bold>d-f</bold>, Same as (a-c), but for CD28 protein (encoded by Cd28 RNA). <bold>g, h</bold>, Distributions of <inline-formula><mml:math display="inline" id="M290"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo> </mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>(g)</bold> and <inline-formula><mml:math display="inline" id="M291"><mml:mrow><mml:mtext>log</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>V</mml:mi><mml:mi>I</mml:mi><mml:mo> </mml:mo><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>o</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>e</mml:mi><mml:mi>d</mml:mi><mml:mo> </mml:mo><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>
<bold>(h)</bold> for CD20 protein in B cells (blue) and T cells (yellow). y-axis is truncated at 3. <bold>i, j</bold>, Same as (g, h), but for CD28 protein.</p>
    </caption>
    <graphic xlink:href="nihms-1656427-f0002"/>
  </fig>
  <fig id="F3" orientation="portrait" position="float">
    <label>Figure 3:</label>
    <caption>
      <title>Benchmarking of integration methods for CITE-seq data.</title>
      <p id="P169"><bold>a-c</bold>, UMAP plots of SLN111-D1 and SLN208-D2 with no integration (PCA of paired data with intersection of protein panels), and after integration with totalVI-intersect, in which the protein panels were intersected, and totalVI-union, in which the unequal protein panels were preserved, colored by dataset. <bold>d, e</bold>, Performance of integration methods based on four metrics: <bold>(d)</bold> latent mixing metric, feature retention metric, clustering metric (displayed as point size), and <bold>(e)</bold> measurement mixing metric (computed for <inline-formula><mml:math display="inline" id="M292"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>4000</mml:mn></mml:mrow></mml:math></inline-formula> genes and <inline-formula><mml:math display="inline" id="M293"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>111</mml:mn></mml:mrow></mml:math></inline-formula> proteins; higher values are better for each; <xref rid="S12" ref-type="sec">Methods</xref>). Box plots indicate the median (center lines), interquartile range (hinges), whiskers at 1.5x interquartile range. <bold>f</bold>, UMAP plot of SLN111-D1 integrated with SLN111-D2 (proteins held out) by totalVI. <bold>g</bold>, UMAP plots colored by totalVI imputed and observed protein expression (log scale) of key cell type markers (range 0–99th percentile of held-out values for each protein). <bold>h</bold>, Root mean squared error (RMSLE) of imputed versus observed protein expression (log scale) for totalVI-union and Seurat v3. totalVI performance per protein is presented as mean RMSLE with error bars representing 95% confidence intervals of the mean estimate (<inline-formula><mml:math display="inline" id="M294"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>30</mml:mn></mml:mrow></mml:math></inline-formula> model initializations). Proteins colored in black are not significantly different in performance, while those in red are significantly different (two-sided Student’s <inline-formula><mml:math display="inline" id="M295"><mml:mi>t</mml:mi></mml:math></inline-formula>-test, BH-adjusted <inline-formula><mml:math display="inline" id="M296"><mml:mi>p</mml:mi></mml:math></inline-formula>-value &lt; 0.05). Inset displays ratio in performance across proteins for totalVI and Seurat v3.</p>
    </caption>
    <graphic xlink:href="nihms-1656427-f0003"/>
  </fig>
  <fig id="F4" orientation="portrait" position="float">
    <label>Figure 4:</label>
    <caption>
      <title>totalVI identifies differentially expressed genes and proteins.</title>
      <p id="P170">totalVI intersect was applied to the SLN-all dataset. <bold>a</bold>, UMAP plot of SLN-all, after clustering and annotating the data (<xref rid="S12" ref-type="sec">Methods</xref> 4.11). <bold>b, c</bold>, Heatmap of markers derived from one-vs-all tests for <bold>(b)</bold> RNA and <bold>(c)</bold> proteins. For each cell type, we display the top three protein markers and top two RNA markers in terms of LFC. <bold>d</bold>, Volcano plot of protein differential expression test between ICOS-high Tregs and CD4 T cells for a Welch’s t-test and Wilcoxon rank-sum test. Putative positives and negatives are denoted by green and orange arrows, respectively. Significant proteins (BH-adjusted <inline-formula><mml:math display="inline" id="M297"><mml:mi>p</mml:mi></mml:math></inline-formula>-value &lt; 0.05) are colored in grey, all others are in black. <bold>e</bold>, totalVI protein expression for proteins (columns) upregulated in ICOS-high Tregs versus CD4 T cells. Cells (rows) are ordered by cluster, and subsampled to be equal in number per cluster. Columns are normalized in the range [0, 1]. The left section in the heatmap contains all the proteins called differentially expressed by totalVI with a positive log fold change. Proteins are sorted by Bayes factor (significance). The rightmost section contains the putative negatives, which are not called differentially expressed by totalVI. <bold>f</bold>, Comparison of log fold changes estimated by totalVI and observed in the raw data from a one-vs-all test of CD4 T cells.</p>
    </caption>
    <graphic xlink:href="nihms-1656427-f0004"/>
  </fig>
  <fig id="F5" orientation="portrait" position="float">
    <label>Figure 5:</label>
    <caption>
      <title>Characterization of B cell heterogeneity in the spleen and lymph nodes with RNA and protein.</title>
      <p id="P171">totalVI-intersect was applied to the SLN-all dataset. Data were filtered to include B cells. <bold>a</bold>, UMAP plot of totalVI latent space labeled by cell type. <bold>b, c</bold>, UMAP plots of totalVI latent space colored by <bold>(b)</bold> totalVI protein expression of six marker proteins and <bold>(c)</bold> totalVI RNA expression of the six genes that encode the corresponding proteins in (b). <bold>d</bold>, UMAP plot of totalVI latent space labeled by tissue. <bold>e</bold>, Cell type composition per tissue. <bold>f, g</bold>, totalVI one-vs-all differential expression test on B cell subsets filtered for significance (<xref rid="S12" ref-type="sec">Methods</xref>) and sorted by the totalVI median LFC. <bold>(f)</bold> The top three differentially expressed proteins per subset and <bold>(g)</bold> the top ten differentially expressed genes per subset, arranged by the subset in which the LFC is highest. <bold>h</bold>, totalVI Spearman correlations in transitional B cells between RNA and proteins, which were selected as described in Methods. Features were hierarchically clustered and are labeled as either RNA or protein, and by the cell type with which the feature is associated. <bold>i</bold>, UMAP plot of totalVI latent space colored by <inline-formula><mml:math display="inline" id="M298"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> (the totalVI latent dimension associated with transitional B cells). <bold>j</bold>, totalVI expression of features in (h) as a function of <inline-formula><mml:math display="inline" id="M299"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mn>16</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. Each feature was standard scaled and smoothed with a loess curve.</p>
    </caption>
    <graphic xlink:href="nihms-1656427-f0005"/>
  </fig>
</floats-group>

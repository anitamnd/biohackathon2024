<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Acta Crystallogr D Struct Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Acta Crystallogr D Struct Biol</journal-id>
    <journal-id journal-id-type="publisher-id">Acta Cryst. D</journal-id>
    <journal-title-group>
      <journal-title>Acta Crystallographica. Section D, Structural Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2059-7983</issn>
    <publisher>
      <publisher-name>International Union of Crystallography</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6465985</article-id>
    <article-id pub-id-type="publisher-id">rr5175</article-id>
    <article-id pub-id-type="doi">10.1107/S2059798319003875</article-id>
    <article-id pub-id-type="coden">ACSDAD</article-id>
    <article-id pub-id-type="pii">S2059798319003875</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Papers</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Building and rebuilding N-glycans in protein structure models</article-title>
      <alt-title>Building and rebuilding N-glycans in protein structure models</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-2183-2901</contrib-id>
        <name>
          <surname>van Beusekom</surname>
          <given-names>Bart</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wezel</surname>
          <given-names>Natasja</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-9081-4707</contrib-id>
        <name>
          <surname>Hekkelman</surname>
          <given-names>Maarten L.</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-1151-6227</contrib-id>
        <name>
          <surname>Perrakis</surname>
          <given-names>Anastassis</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Emsley</surname>
          <given-names>Paul</given-names>
        </name>
        <xref ref-type="aff" rid="b">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="true">https://orcid.org/0000-0002-2323-2686</contrib-id>
        <name>
          <surname>Joosten</surname>
          <given-names>Robbie P.</given-names>
        </name>
        <xref ref-type="aff" rid="a">a</xref>
        <xref ref-type="corresp" rid="cor">*</xref>
      </contrib>
      <aff id="a"><label>a</label>Department of Biochemistry, <institution>The Netherlands Cancer Institute</institution>, Plesmanlaan 121, 1066 CX Amsterdam, <country>The Netherlands</country></aff>
      <aff id="b"><label>b</label><institution>MRC Laboratory for Molecular Biology</institution>, Francis Crick Avenue, Cambridge Biomedical Campus, Cambridge CB2 0QH, <country>England</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor">Correspondence e-mail: <email>r.joosten@nki.nl</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>04</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>04</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>75</volume>
    <issue>Pt 4</issue>
    <issue-id pub-id-type="publisher-id">d190400</issue-id>
    <fpage>416</fpage>
    <lpage>425</lpage>
    <history>
      <date date-type="received">
        <day>31</day>
        <month>1</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>20</day>
        <month>3</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© van Beusekom et al. 2019</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open-access article distributed under the terms of the Creative Commons Attribution (CC-BY) Licence, which permits unrestricted
use, distribution, and reproduction in any medium, provided the original authors and source are cited.</license-p>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/">http://creativecommons.org/licenses/by/4.0/</ali:license_ref>
      </license>
    </permissions>
    <self-uri xlink:href="https://doi.org/10.1107/S2059798319003875">A full version of this article is available from Crystallography Journals Online.</self-uri>
    <abstract abstract-type="toc">
      <p>Carbohydrates are automatically built and rebuilt using <italic>Coot</italic> in the <italic>PDB-REDO</italic> pipeline.</p>
    </abstract>
    <abstract>
      <p>N-Glycosylation is one of the most common post-translational modifications and is implicated in, for example, protein folding and interaction with ligands and receptors. N-Glycosylation trees are complex structures of linked carbohydrate residues attached to asparagine residues. While carbohydrates are typically modeled in protein structures, they are often incomplete or have the wrong chemistry. Here, new tools are presented to automatically rebuild existing glycosylation trees, to extend them where possible, and to add new glycosylation trees if they are missing from the model. The method has been incorporated in the <italic>PDB-REDO</italic> pipeline and has been applied to build or rebuild 16 452 carbohydrate residues in 11 651 glycosylation trees in 4498 structure models, and is also available from the <italic>PDB-REDO</italic> web server. With better modeling of N-glycosylation, the biological function of this important modification can be better and more easily understood.</p>
    </abstract>
    <kwd-group>
      <kwd>carbohydrates</kwd>
      <kwd>crystallography</kwd>
      <kwd>model building</kwd>
      <kwd>
        <italic>PDB-REDO</italic>
      </kwd>
      <kwd>
        <italic>Coot</italic>
      </kwd>
      <kwd>N-glycans</kwd>
      <kwd>validation</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>Nederlandse Organisatie voor Wetenschappelijk Onderzoek</funding-source>
        <award-id>723.013.003</award-id>
      </award-group>
      <award-group>
        <funding-source>Horizon 2020 Framework Programme, H2020 Research Infrastructures</funding-source>
        <award-id>653706</award-id>
      </award-group>
      <award-group>
        <funding-source>Horizon 2020 Framework Programme</funding-source>
        <award-id>675858</award-id>
      </award-group>
      <funding-statement>This work was funded by <funding-source>Nederlandse Organisatie voor Wetenschappelijk Onderzoek</funding-source> grant <award-id>723.013.003</award-id>. <funding-source>Horizon 2020 Framework Programme, H2020 Research Infrastructures</funding-source> grant <award-id>653706</award-id>. <funding-source>Horizon 2020 Framework Programme</funding-source> grant <award-id>675858</award-id>. </funding-statement>
    </funding-group>
    <counts>
      <page-count count="10"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="introduction" id="sec1">
    <label>1.</label>
    <title>Introduction   </title>
    <p>Proteins are frequently regulated by post-translational modifications. One of the most common forms of such modifications is glycosylation (Zhang <italic>et al.</italic>, 2016<xref ref-type="bibr" rid="bb42"> ▸</xref>); however, this is also one of the most complex forms. Glycans fulfill important roles in several biological processes, such as protein folding, stability and the recognition of other compounds (Varki &amp; Lowe, 2010<xref ref-type="bibr" rid="bb36"> ▸</xref>). They also greatly influence cancer progression and treatment, for instance by modifying the functionality of cell-surface receptors and adhesion molecules (Taniguchi &amp; Kizuka, 2015<xref ref-type="bibr" rid="bb33"> ▸</xref>).</p>
    <p>This study focuses on the glycosylation of asparagine side chains (N-glycosylation), which is the most common form of glycosylation (Apweiler <italic>et al.</italic>, 1999<xref ref-type="bibr" rid="bb4"> ▸</xref>). N-Glycosylation trees are assembled from monosaccharide moieties by glycosyltransferases and glycoside hydrolases, which handle a limited range of building blocks (Rini <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb30"> ▸</xref>). Therefore, the structures of N-glycans are predictable: they have a complex biosynthesis, but share a common five-residue core which is conserved across all eukaryotes and at least part of the Archaea (Varki &amp; Lowe, 2010<xref ref-type="bibr" rid="bb36"> ▸</xref>). The tree structures differ between taxa owing to their specific pathways of N-glycan processing (Rini <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb30"> ▸</xref>), and also between tissues and even between copies of a protein in the same cell. Asparagines can only be glycosylated if there is a recognition site for glycosylation. These sites, referred to as sequons, commonly have the sequence Asn-<italic>X</italic>-Ser/Thr, where <italic>X</italic> can be anything but proline (Stanley <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb32"> ▸</xref>).</p>
    <p>Despite the important biological role of glycosylation, the structure quality of carbohydrates in the Protein Data Bank (PDB; wwPDB consortium, 2019<xref ref-type="bibr" rid="bb39"> ▸</xref>) is in general inferior to protein structure quality (Crispin <italic>et al.</italic>, 2007<xref ref-type="bibr" rid="bb13"> ▸</xref>). Carbohydrates exhibit many nomenclature problems (Lütteke &amp; von der Lieth, 2004<xref ref-type="bibr" rid="bb25"> ▸</xref>) and conformational errors (Agirre <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb3"> ▸</xref>). They are difficult to model because they are generally less well ordered, as they are typically exposed to the solvent and display high flexibility. Additionally, the median resolution of the data for glycoproteins (2.4 Å) is somewhat lower than that for PDB entries in general (2.0 Å) (van Beusekom, Lütteke <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb7"> ▸</xref>), and crystallographers are less well trained in modeling carbohydrates than protein. Also, importantly, almost all software tools for structural biology focus on the protein and deal less well with carbohydrates. Annotation at the wwPDB (Young <italic>et al.</italic>, 2017<xref ref-type="bibr" rid="bb41"> ▸</xref>) deals less extensively with carbohydrates than with proteins. Recently, tools to handle carbohydrates more easily have become available, as described in, for example, Agirre <italic>et al.</italic> (2015<xref ref-type="bibr" rid="bb3"> ▸</xref>) and Emsley &amp; Crispin (2018<xref ref-type="bibr" rid="bb14"> ▸</xref>). Although carbohydrates are frequently modeled wrongly or are not modeled at all, both the quality of carbohydrate residues and the fraction of structures in the PDB containing N-glycosylation are increasing (Fig. 1<xref ref-type="fig" rid="fig1"> ▸</xref>; Agirre, 2017<xref ref-type="bibr" rid="bb1"> ▸</xref>).</p>
    <p><italic>PDB-REDO</italic> is a project that strives to improve crystallo­graphic structure models, helping crystallographers to submit better models to the PDB (Joosten <italic>et al.</italic>, 2014<xref ref-type="bibr" rid="bb23"> ▸</xref>), but also makes retroactively re-refined and rebuilt models available to the user community <italic>via</italic> the PDB-REDO databank (van Beusekom, Touw <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb8"> ▸</xref>). Previously, improved handling of carbohydrates was introduced into the <italic>PDB-REDO</italic> pipeline (Joosten &amp; Lütteke, 2016<xref ref-type="bibr" rid="bb24"> ▸</xref>). This focused on correcting annotation issues that influenced the re-refinement process, improving some issues with carbohydrate structures. Also, it opened new opportunities for model refinement of carbo­hydrates in <italic>PDB-REDO</italic> (van Beusekom, Lütteke <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb7"> ▸</xref>).</p>
    <p>Here, we describe a new software module for the <italic>PDB-REDO</italic> pipeline that focuses on the automated building and rebuilding of carbohydrate residues. The method uses the carbohydrate-building module recently introduced in <italic>Coot</italic> (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>), which has been modified and extended for the purpose of this work. Three distinct operations are performed on N-glycosylation trees: poor-quality carbohydrate residues are rebuilt, existing trees are extended, and trees are added at asparagines that had not yet been modeled as glycosylated in the PDB. Also, we further improve the annotation of N-glycosylation by adding more missing LINK records between asparagine and the primary carbohydrate residue in the N-glycosylation tree, <italic>N</italic>-acetylglucosamine (NAG). By using these methods, the quality of carbohydrates can be greatly enhanced in a large number of existing PDB structure models.</p>
  </sec>
  <sec sec-type="methods" id="sec2">
    <label>2.</label>
    <title>Methods   </title>
    <p>All methods were developed specifically for N-glycosylation, and not O-glycosylation, because this is the most prevalent and straightforward type of glycosylation and because the carbohydrate module in <italic>Coot</italic> (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>), which is used extensively in this work, currently only deals with N-glycosylation.</p>
    <p>The glycosylation-tree types are exactly those that were defined in the carbohydrate module of <italic>Coot</italic> (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>): high-mannose, hybrid mammal, complex mammal, hybrid plant and complex plant. The following names are abbreviated to their PDB residue names: <italic>N</italic>-acetyl-β-<sc>d</sc>-glucosamine (β-<sc>d</sc>-GlcpNAc) to NAG; <italic>N</italic>-acetyl-α-<sc>d</sc>-glucosamine (α-<sc>d</sc>-GlcpNAc) to NDG; α-<sc>d</sc>-mannose (α-<sc>d</sc>-Man<italic>p</italic>) to MAN; β-<sc>d</sc>-mannose (β-<sc>d</sc>-Man<italic>p</italic>) to BMA; α-<sc>l</sc>-fucose (α-<sc>l</sc>-Fuc<italic>p</italic>) to FUC; β-<sc>l</sc>-fucose (β-<sc>l</sc>-Fuc<italic>p</italic>) to FUL; β-<sc>d</sc>-glucose (β-<sc>d</sc>-Glc<italic>p</italic>) to BGC and α-<sc>d</sc>-glucose (α-<sc>d</sc>-Glc<italic>p</italic>) to GLC.</p>
    <sec id="sec2.1">
      <label>2.1.</label>
      <title>Carbohydrate links to asparagine   </title>
      <p>Within <italic>PDB-REDO</italic>, <italic>pdb-care</italic> (Lütteke &amp; von der Lieth, 2004<xref ref-type="bibr" rid="bb25"> ▸</xref>) is run to correct wrongly assigned N-glycosylation names (for example, NDG to NAG) and also to generate LINK records between asparagines and the first carbohydrate residues (Joosten &amp; Lütteke, 2016<xref ref-type="bibr" rid="bb24"> ▸</xref>). However, the detection of N-glycosylation in <italic>pdb-care</italic> is purposely conservative. Hence, glycosylation was often not detected if, for instance, the carbohydrate residue was rotated such that the C1 atom was not directly facing the asparagine. Therefore, a new program called <italic>Carbonanza</italic> was written which generates LINK records between asparagines and NAGs or NDGs.</p>
      <p>For each NAG or NDG that is not linked to anything by its C1 atom, it is computed whether the C1 atom is within 6 Å of the N<sup>δ</sup> atom of an asparagine. If so, the distance to the O<sup>δ</sup> atom of the same asparagine is calculated: if this distance is smaller, the asparagine side chain is temporarily flipped. Next, three filters are applied: (i) the asparagine should follow the common N-glycosylation sequence Asn-<italic>X</italic>-Ser/Thr, where <italic>X</italic> is anything except proline (Stanley <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb32"> ▸</xref>); (ii) if the distance between the N<sup>δ</sup> and C1 atoms is larger than 4 Å, a link will only be generated if one of the other carbohydrate atoms is within 3.5 Å of the N<sup>δ</sup> atom; and (iii) to prevent the linkage of one carbohydrate residue to multiple asparagines, no link is generated if more than one asparagine fulfills all of the previous criteria. Upon generation of the LINK record, <italic>Carbonanza</italic> also checks whether any leaving atoms (O1 in NAG or O1L in NDG) are present: if so, these are removed.</p>
    </sec>
    <sec id="sec2.2">
      <label>2.2.</label>
      <title>Carbohydrate building and rebuilding   </title>
      <sec id="sec2.2.1">
        <label>2.2.1.</label>
        <title>Changes to <italic>Coot</italic>   </title>
        <p>Recently, the possibility of adding single residues or whole N-glycosylation trees <italic>via</italic> the <italic>Coot</italic> graphics interface was reported (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>). This module allows users to add single carbohydrate residues and subsequently judge whether they are of sufficient quality to be kept, and it allows users to build entire glycosylation trees at user-defined positions. The former functionality is not used owing to the automated character of the methodology described here, while the latter is used extensively.</p>
        <p>In the whole-tree addition, after building each residue it is decided whether this residue fits the density well enough, and it terminates automatically when all possibilities have been attempted. For the purpose of this work, the whole-tree addition method was extended such that partial N-glycosyl­ation trees can also be built. This allows the extension of existing trees in the PDB by a single residue or by multiple residues. Additionally, the carbohydrate module in <italic>Coot</italic> was modified such that all functionality can also be used in non­graphics mode to allow high-throughput calculations on a ‘headless’ compute server.</p>
      </sec>
      <sec id="sec2.2.2">
        <label>2.2.2.</label>
        <title>Tree-type selection   </title>
        <p>As <italic>Coot</italic> allows scripts to be run directly <italic>via</italic> the command line (Emsley <italic>et al.</italic>, 2010<xref ref-type="bibr" rid="bb15"> ▸</xref>), a new <italic>PDB-REDO</italic> program, <italic>Carbivore</italic>, was written to generate a Scheme script to run the carbohydrate module in <italic>Coot</italic> (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>). The script generated by <italic>Carbivore</italic> rebuilds and extends existing trees and builds new trees at previously nonglycosylated asparagines.</p>
        <p>In its first step, <italic>Carbivore</italic> checks whether the protein structure model has existing N-glycosylation. <italic>Carbivore</italic> then determines the most suitable tree type for N-glycosylation. By default, the tree type for tree extension is set to high-mannose plus fucoses. However, if the existing tree extends beyond the five-residue core, a tree type is selected based on the residues already present: for instance, if these form a hybrid mammal tree, <italic>Carbivore</italic> attempts to build another hybrid mammal tree.</p>
      </sec>
      <sec id="sec2.2.3">
        <label>2.2.3.</label>
        <title>Carbohydrate rebuilding and extension   </title>
        <p>For tree rebuilding, poor-quality carbohydrate residues are cropped from the tree. Tree rebuilding then follows the same procedure as tree extension. The three-tier validation state for carbohydrates in <italic>Privateer</italic> (Agirre <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb3"> ▸</xref>) is used to assess the quality of carbohydrate residues in the input structure model. N-Glycans with the status ‘yes’ are of high quality and are kept; those with the status ‘check’ or ‘no’ are discarded. Additionally, all carbohydrate residues that do not fit into any of the standard glycosylation trees are deleted. Any carbo­hydrate residues further along the tree from a carbohydrate residue that was deleted are also deleted. After cropping, the tree-extension code is written to the <italic>Coot</italic> script for all existing trees. If a tree was fully deleted because the first carbohydrate residue was of poor quality, a whole-tree addition code is written instead.</p>
      </sec>
      <sec id="sec2.2.4">
        <label>2.2.4.</label>
        <title>Whole-tree addition   </title>
        <p>N-Glycosylation is regularly left unmodeled. Therefore, potential glycosylation sites are identified followed by tree addition (which can be regarded as extension from zero). Glycosylation sites are found using the sequon Asn-<italic>X</italic>-Ser/Thr. Optionally, the methodology for dealing with homologous structure models (van Beusekom, Touw <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb8"> ▸</xref>) is used to add asparagines to the list of asparagines of interest if homologous asparagines are glycosylated. This feature, however, is switched off by default, as it is only useful in the rare case of sequencing errors (see Section 3.3<xref ref-type="sec" rid="sec3.3"/>). Then, for each of the asparagines in the list it is checked that a chitobiose (a NAG dimer; PDB ligand code CBS) is not linked to the asparagine. If so, it is removed from the list to prevent an attempt to build a second tree at the same location. It should be noted that upon the planned remediation of the wwPDB (PDB annotators, personal communication) CBS will be replaced by two NAGs and these will be handled like all other carbohydrates automatically. Finally, code is written to try and build whole trees for each asparagine of interest.</p>
        <p>Existing trees are first extended, followed by the attempted modeling of new trees. This decreases the risk of modeling glycosylation at the wrong asparagine when it should be modeled at another asparagine (that was already glycosylated in the input model) close by.</p>
      </sec>
      <sec id="sec2.2.5">
        <label>2.2.5.</label>
        <title>Temporary deletion of carbohydrates and waters   </title>
        <p>Before attempting to build new carbohydrate residues, some compounds that could potentially prevent correct carbo­hydrate residues from being built are temporarily removed. Firstly, chains of linked carbohydrate residues that are not linked to the protein are deleted if they are very close (&lt;2.5 Å) to an ‘asparagine of interest’ (see above). Secondly, unlinked carbohydrate residues that are often found in N-glycosylation chains are deleted because we observed that many N-glycosyl­ation chains were poorly defined simply because the LINK records were missing. Usually, the missing LINK records lead to a distorted N-glycosylation chain because a van der Waals restraint is applied that pushes the atoms apart, instead of a distance restraint that keeps the bonded atoms together. The residue types that are allowed to be removed are limited to NAG, NDG, MAN, BMA, FUC and FUL to reduce the risk of accidentally deleting carbohydrate ligands.</p>
        <p>All water molecules are also temporarily deleted, since they are often modeled in empty patches of density into which new carbohydrates should be modeled.</p>
      </sec>
      <sec id="sec2.2.6">
        <label>2.2.6.</label>
        <title>Validation   </title>
        <p><italic>Coot</italic> is run at this point to build and rebuild carbohydrates. <italic>Carbivore</italic> then first determines whether there are any newly built carbohydrate residues. If so, <italic>Privateer</italic> is run again to assess the quality of these carbo­hydrate residues. Any newly built carbohydrate residues that are not of high quality according to <italic>Privateer</italic> are immediately discarded. Also, newly built carbohydrate residues are deleted if they clash strongly (&lt;2.1 Å) with symmetry copies of existing atoms. At this point, no further checks on residue types (for example, NAG versus NDG) are required because only carbohydrate residues of the appropriate type are built by <italic>Coot</italic>.</p>
        <p>Carbohydrate residues that have been built are also validated against their electron density. Note that this is already performed by <italic>Coot</italic> (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>); however, since here glycans are added in an automated fashion, the limits for acceptance are somewhat more stringent. The new <italic>PDB-REDO</italic> program <italic>stats</italic> is run, which computes several density metrics, of which the RSCC (Jones <italic>et al.</italic>, 1991<xref ref-type="bibr" rid="bb21"> ▸</xref>) and EDIAm (Meyder <italic>et al.</italic>, 2017<xref ref-type="bibr" rid="bb27"> ▸</xref>) are used.</p>
        <p>Calculating the metrics consists of several steps: recalculation of map coefficients based on the new model (for which we typically use <italic>REFMAC</italic>; Murshudov <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb28"> ▸</xref>), calculation of the RSCC in <italic>EDSTATS</italic> (Tickle, 2012<xref ref-type="bibr" rid="bb34"> ▸</xref>), generation of an electron-density map (for example with the <italic>CCP</italic>4 program <italic>FFT</italic>; Winn <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb37"> ▸</xref>) and calculation of the EDIAm metric using the <italic>EDIAscorer</italic> program (Meyder <italic>et al.</italic>, 2017<xref ref-type="bibr" rid="bb27"> ▸</xref>). By capturing all of these steps in a single program, <italic>stats</italic> speeds up the calculation and avoids additional dependencies on third-party software. <italic>Stats</italic> takes a structure model in mmCIF or PDB format and reflection data in mmCIF or MTZ format. Optionally, users can provide a restraint file for compounds that are not in the CCP4 dictionary (Winn <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb37"> ▸</xref>). From these data, map coefficients are calculated using the Clipper library (Cowtan, 2003<xref ref-type="bibr" rid="bb11"> ▸</xref>). The use of anisotropic scaling and bulk-solvent correction are optional. Because <italic>PDB-REDO</italic> can use either X-ray or electron diffraction data, support for electron scattering factors was added to Clipper. If map coefficients are already present in the MTZ file these can also be used. The calculation of RSCC and EDIAm reimplement the published algorithms (Tickle, 2012<xref ref-type="bibr" rid="bb34"> ▸</xref>; Meyder <italic>et al.</italic>, 2017<xref ref-type="bibr" rid="bb27"> ▸</xref>), with a few modifications: the computation of the interpolated cumulative probabilities were not calculated per protein chain (as in <italic>EDSTATS</italic>) but by <monospace>_struct_asym</monospace> as defined in mmCIF space, and the electron-density radii for EDIAm computation were not tabulated as in <italic>EDIAscorer</italic>, but were calculated on the fly as in <italic>EDSTATS</italic>, dependent on the resolution and the <italic>B</italic> factor.</p>
        <p>The electron-density metrics are calculated with the <italic>B</italic> factors of all carbohydrates set to 30.0 Å<sup>2</sup>. The lack of proper <italic>B</italic>-factor refinement is thus compensated by using a constant, relatively low <italic>B</italic> factor, which ensures that good density metrics are only obtained if there is electron density at decent contour levels (±1.0σ and higher in the 2<italic>mF</italic>
<sub>o</sub> − <italic>DF</italic>
<sub>c</sub> map). Empirical cutoffs were established to guarantee that few false positives will be accepted. Newly built carbohydrate residues are accepted if either the RSCC is at least 0.70 or if the sum of the RSCC and EDIAm is greater than 1.20. There is no lower boundary for the EDIAm score because we found that low EDIAm scores were often a poor indicator of carbohydrate quality; in contrast, carbohydrate residues with a good EDIAm score were indeed mostly of high quality. At a resolution of better than 3.0 Å, the density ratio that we used earlier in homology-based loop building is used (van Beusekom, Joosten <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb6"> ▸</xref>): in borderline cases, where the RSCC is between 0.60 and 0.70, if the ratio of density values between the carbohydrate residue and the main chain is at least 0.25 then the carbohydrate residue is kept. In these cases, we often observed clear electron density but with small errors in the carbohydrate modeling (causing the low RSCC) that are usually corrected by subsequent refinement. This cutoff of 0.25 was also used for loop building. It is not used at low resolution, however, because carbohydrate residues can be wrongly added in a low-resolution density blob, for instance at the end of an α-helix. For loop building, this problem was not observed: their attachment to both their N-terminus and C-terminus helps their modeling in the correct area and, compared with carbohydrate modeling, fewer candidates have to be tried because the sequence identifies exactly which loops are missing.</p>
      </sec>
      <sec id="sec2.2.7">
        <label>2.2.7.</label>
        <title>Placing back carbohydrates and waters   </title>
        <p>The remaining newly built carbohydrate residues are placed back into the model. For glycosylation trees on which rebuilding has been attempted, the old and the new versions are compared and the ‘best’ is kept. The three-tier validation by <italic>Privateer</italic> (Agirre <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb3"> ▸</xref>) is decisive in determining which is best: this is the tree with the largest number of carbohydrate residues that are of good quality. If this is equal, the tree with more ‘check’ statuses is kept; if this is also equal, the tree with the most carbohydrate residues is kept. If all are equal, the newly built tree is kept. If the model was refined with a flat <italic>B</italic>-factor model, the <italic>B</italic> factor of the carbohydrates is adapted to match this <italic>B</italic>-factor value.</p>
        <p>Before simply deciding between the glycosylation trees before and after <italic>Coot</italic>, however, it is sometimes possible to generate an even better combination of the two trees. For example, if a tree of three carbohydrate residues has been deleted because the first one was poorly modeled, but only one residue has been built back, the two remaining units may be added back. This is of course only performed if the carbo­hydrates from the old tree fit the geometry of the rebuilt carbohydrate residue. Hence, the linking atoms have to be close (&lt;2.5 Å) and the existing glycosylation chain should not clash (&lt;2.0 Å) with the carbohydrate residues that have been restored. If this is the case, the tree is generated from parts of the old and the new glycosylation chains. If the grafted tree is kept, the necessary LINK records are also generated.</p>
        <p>At this point, other deleted carbohydrates and water molecules can be restored. Firsly, any water molecule that does not clash (&lt;2.5 Å) with any of the newly built residues is placed back. The same is applied to single unlinked carbohydrate residues that were deleted before. Carbohydrate chains that were unattached to the protein are restored only if none of the units in the chain clash with newly built glycans. Symmetry is always taken into account while checking clashes. Also, newly built carbohydrate residues are renumbered if there are duplicated residue numbers after restoring water molecules and other carbohydrate residues. Finally, owing to the refinement of the tree in <italic>Coot</italic>, the positions of the asparagine at the root of the tree and the amino acids directly before and after it are updated.</p>
      </sec>
    </sec>
    <sec id="sec2.3">
      <label>2.3.</label>
      <title>Implementation in <italic>PDB-REDO</italic>   </title>
      <p>The new carbohydrate-handling procedures were added in <italic>PDB-REDO</italic> v.7.20. <italic>Carbonanza</italic> is run at the start of the <italic>PDB-REDO</italic> pipeline, just before <italic>pdb-care</italic> is run. <italic>Carbivore</italic> is run after the first refinement in <italic>REFMAC</italic> (Murshudov <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb28"> ▸</xref>) and all other model-rebuilding steps in the pipeline (Joosten <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb22"> ▸</xref>; van Beusekom, Joosten <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb6"> ▸</xref>), just before the second round of refinement in <italic>REFMAC</italic>. Carbohydrate building is switched on by default, independent of data resolution. It can be switched off from the command line if desired. Any carbohydrate residues that are added or deleted are annotated by the program <italic>modelcompare</italic> that writes out a visualization script for <italic>Coot</italic>.</p>
    </sec>
    <sec id="sec2.4">
      <label>2.4.</label>
      <title>Testing   </title>
      <p><italic>Carbivore</italic> and <italic>Carbonanza</italic> were executed on all PDB-REDO databank entries as of 31 October 2018. Hundreds of carbohydrates built in <italic>Carbivore</italic> were manually inspected to determine the optimal density cutoffs and to observe other potential shortcomings, which led to the development of the various filters in the program. Many links generated by <italic>Carbonanza</italic> were also checked manually, which helped to establish distance cutoffs for link generation. 2000 entries were then randomly selected from all entries in which <italic>Carbivore</italic> built new carbohydrate residues for optimization in <italic>PDB-REDO</italic>. For comparison, these entries were subjected to <italic>PDB-REDO</italic> once with and once without carbohydrate building. The final test set consisted of 1978 entries because some entries were not completed owing to various limitations (unrelated to carbohydrate building).</p>
    </sec>
  </sec>
  <sec sec-type="results" id="sec3">
    <label>3.</label>
    <title>Results   </title>
    <sec id="sec3.1">
      <label>3.1.</label>
      <title>Carbohydrate linking   </title>
      <p>Upon the application of <italic>Carbonanza</italic> to the entries present in the PDB-REDO databank, LINK records were generated for 448 NAG and 60 NDG residues in 194 entries. It should be noted that <italic>pdb-care</italic> (Lütteke &amp; von der Lieth, 2004<xref ref-type="bibr" rid="bb25"> ▸</xref>) had already been applied in the PDB-REDO databank to correct such cases. When <italic>Carbonanza</italic> was applied to the corresponding PDB entries, LINK records could be generated for 842 NAG and 85 NDG residues in 354 entries. The added LINK records ensure that a covalent bond is assumed by crystallographic refinement; without them, the atoms would be pushed apart by van der Waals restraints. The NDG residues that are now linked will be corrected to NAG by <italic>PDB-REDO</italic> using <italic>pdb-care</italic>.</p>
    </sec>
    <sec id="sec3.2">
      <label>3.2.</label>
      <title>Rebuilding carbohydrates   </title>
      <p><italic>Carbivore</italic> was applied to the 119 377 entries present in the PDB-REDO databank as of 31 October 2018. The current version of <italic>Carbivore</italic> is able to build 16 452 new carbohydrate residues in 11 651 trees in 4498 entries. Table 1<xref ref-type="table" rid="table1"> ▸</xref> lists how many were built in each of the three separate building methods: rebuilding, extending and whole-tree addition. Also, 5818 carbohydrate residues were removed definitively: these are either poor-quality carbohydrate residues that were removed and rebuilt (note that in some cases fewer carbohydrate residues are built back than the number that were deleted) or carbohydrates that were not linked to protein and that were in the way of tree building or extension. Additionally, 6397 water molecules were removed to allow carbohydrate building.</p>
      <p>The number of carbohydrate residues that can be built into the maps of deposited structure models does not depend strongly on the year of deposition: the number of carbo­hydrate residues built per 100 sequons (with sequence Asn-<italic>X</italic>-Ser/Thr; Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref>
<italic>a</italic>) does not change much over the course of the years; if anything, there is a slight trend that more carbo­hydrate residues have been built or rebuilt in recent years. The trend is very nearly the same if plotted against the number of amino-acid residues deposited that year. The absolute number of carbohydrate residues built increases over the years because more structure models are available.</p>
      <p>The number of carbohydrate trees that were added is 4475; for most of these trees (3288) only the first NAG was built (Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref>
<italic>b</italic>). For the 22 291 trees that were already present, the great majority keep the same length (17 926 cases; 80.4%). A considerable minority of 4195 trees (18.8%) are extended and only 170 trees (0.8%) are shortened. The latter occurs when poorly built carbohydrate residues are deleted and replaced by fewer, but higher quality carbohydrate residues.</p>
      <p>The density metrics for the built carbohydrates are decent: the values are good enough to allow the modeling of these carbohydrate residues but, as expected, are relatively poor compared with the values for the protein. The values of the density metrics are also an obvious consequence of the filtering performed based on these metrics. The average and median RSCC are both 0.78 (Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref>
<italic>c</italic>); these values for EDIAm are 0.38 and 0.40, respectively. The geometry of the newly built carbohydrate residues is excellent: the θ angle (which ideally should be around 0° for non-FUC residues and 180° for FUC) has average and median values of 4.8° and 1.7° for all non-FUC residues, respectively; for FUCs, the average and median are 173.3° and 175.5°, respectively. All newly built carbohydrate residues have a good geometry according to the three-tier validation state of <italic>Privateer</italic> (‘yes/check/no’; Agirre <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb3"> ▸</xref>).</p>
      <p>The remodeling of carbohydrates can lead to large improvements in protein structure models. In Fig. 3<xref ref-type="fig" rid="fig3"> ▸</xref>, we show one example each of rebuilding, tree extension and whole-tree addition.</p>
      <p>When <italic>Carbivore</italic> was run within <italic>PDB-REDO</italic> for 1978 entries (randomly selected from the 4498 entries in which carbohydrates could be built), it built 7001 carbo­hydrate residues. 2869 poorly built carbohydrate residues were also deleted, as well as 2562 water molecules. Most carbohydrate residues (50) were built in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=4ubd">4ubd</ext-link> (Wu <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb38"> ▸</xref>), while 22 residues were deleted in this entry to allow rebuilding; thus, a net gain of 28 carbohydrate residues was achieved. As expected, the impact of carbohydrate building on the overall performance of <italic>PDB-REDO</italic> is minimal. On average, the <italic>R</italic>
<sub>work</sub> and <italic>R</italic>
<sub>free</sub> increase by negligible amounts (1.2 × 10<sup>−5</sup> and 2.6 × 10<sup>−4</sup>, respectively). The geometrical scores change even less: the Ramachandran <italic>Z</italic> score and the first-generation packing <italic>Z</italic> score, both computed by <italic>WHAT_CHECK</italic> (Hooft <italic>et al.</italic>, 1996<xref ref-type="bibr" rid="bb19"> ▸</xref>), decrease by 0.008 and 0.003, respectively.</p>
      <p>It was observed that the <italic>R</italic>
<sub>free</sub> deteriorated in some cases where a flat <italic>B</italic>-factor model was applied in refinement. The modeled carbohydrates are clearly supported by electron-density evidence, although negative electron difference density appears. This is owing to the carbohydrate residues having greater mobility than the protein average, yet they are modeled with the same <italic>B</italic> factor. This is a clear drawback of the flat <italic>B</italic>-factor model that is applied to reduce the overall number of model parameters. These cases may therefore be improved by using alternative, low-parameter <italic>B</italic>-factor models where at least the <italic>B</italic> factors of the carbohydrate residues are separated from those of the protein. Without taking all flat <italic>B</italic>-factor entries into account, there is a (tiny) overall improvement in <italic>R</italic>
<sub>free</sub> of 1.9 × 10<sup>−4</sup> instead of a deterioration of 2.6 × 10<sup>−4</sup>.</p>
      <p>We have not ‘redone’ all structure models in which carbohydrates can be built yet owing to computational constraints. The entries that were not part of the test set will be renewed gradually.</p>
    </sec>
    <sec id="sec3.3">
      <label>3.3.</label>
      <title>Whole-tree addition   </title>
      <p>Based on the methodology that we previously developed to map homologous structure models onto one another (van Beusekom, Touw <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb8"> ▸</xref>), we added the option to try to build trees if homologous asparagines are glycosylated. However, we disabled this functionality by default because the computational cost outweighs the value of the results. In total, only 35 trees were built that could not be built based on the sequence. Of these trees, ten cases were built near gaps in the protein model: the Asn-<italic>X</italic>-Ser/Thr sequence criterion was not fulfilled because either the <italic>X</italic> or the Ser/Thr was disordered. In such cases, it is better not to build trees because the electron density is usually relatively poor and carbohydrates were sometimes built into the density of the missing main chain. In 14 cases, the built carbohydrate residues seemed correct but the sequence may be wrong; 10 of these 14 cases were found in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=3red">3red</ext-link> (C. B. C. Cielo, T. Yamane, Y. Asano, N. Watanabe, A. Suzuki &amp; Y. Fukuta, unpublished work) at Asn118 in different chains. The local sequence, Asn-Thr-Lys, does not fulfill the Asn-<italic>X</italic>-Ser/Thr sequence motif. However, HSSP alignment (Touw <italic>et al.</italic>, 2015<xref ref-type="bibr" rid="bb35"> ▸</xref>) shows that in the gene associated with the PDB entry and in the closest homologs there is a serine at the position of the lysine. The protein-sequencing procedure is not detailed, but the gene associated with the PDB entry is only 89% identical and the protein was isolated from a natural source. Hence, we cannot conclude from the sequence data whether this is an error or not, but the lack of density for the side chain of Lys120 suggests that it may indeed be a sequence error. Finally, the remaining 11 cases in which carbohydrate residues were built on homology were probably or unequivocally wrong. Either the density was uninterpretable, the density was not carbohydrate density or there was density from another glycosylated asparagine nearby into which the carbohydrate residues were modeled.</p>
    </sec>
  </sec>
  <sec sec-type="discussion|interpretation" id="sec4">
    <label>4.</label>
    <title>Discussion   </title>
    <p>Building carbohydrates in protein structure models has been difficult, in part owing to a lack of suitable computational tools. Therefore, the structural quality of carbohydrates has traditionally been poor. Recently, much improved tools for carbohydrate building have become available. This motivated us to apply them to existing protein structure models to make improved structure models available for glycosylated protein structures determined in the past and to simultaneously make these tools available to crystallo­graphers <italic>via</italic> an automated web server.</p>
    <p>Previously, we have dealt with the annotation issues of glycosylated protein models, as this is crucial for carbohydrate refinement and subsequently for building N-glycosylation trees. Here, we first present an improved methodology to improve the linking of NAGs and (wrongly named) NDGs to asparagine. Generating these links goes beyond improvement in annotation, as the refinement of the subsequent model is improved because the covalent bond is now taken into account. At present, we have only dealt with links from asparagine to the first carbohydrate residue in the glycosylation tree. This may be extended to also generate links between two carbohydrate residues further in the chain, which would potentially improve the refinement of glycosylation trees such as in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1mql">1mql</ext-link> (Ha <italic>et al.</italic>, 2003<xref ref-type="bibr" rid="bb17"> ▸</xref>; Fig. 4<xref ref-type="fig" rid="fig4"> ▸</xref>). However, automatically generating such links leads to new problems since unlinked carbohydrate residues are often too far away from one another. If multiple LINK records are then generated to pull them together, this leads to incorrect conformations and to bonds that are too long. Therefore, we chose instead to attempt to rebuild such carbohydrate residues by first removing them and then extending the tree.</p>
    <p>We show here that in many cases carbohydrates may be built fully automatically. However, for multiple reasons, N-glycosylation trees are difficult to build to completion. First and foremost, the electron-density quality rapidly falls along the glycosylation chain as disorder increases away form the protein surface. This often makes it difficult to decide whether a carbohydrate residue is ‘good enough’, especially in an automated fashion. Additionally, carbohydrate residues can only be built well if the previous units in the tree are properly modeled. If a single unit is not built in the optimal position, building the next one is likely to be unsuccessful. Moreover, the six-membered ring is symmetrical enough to sometimes be wrongly flipped 180°, despite the presence of (small) chemical groups on the ring. It therefore remains important that crystallographers manually inspect, and if necessary modify, automatically built glycans: they cannot (yet) be automatically built as well as protein.</p>
    <p>Since this work depends on the carbohydrate-building module in <italic>Coot</italic>, it also has similar limitations as those discussed in Emsley &amp; Crispin (2018<xref ref-type="bibr" rid="bb14"> ▸</xref>): glycosylation trees are not always built to completion (especially at lower resolution), temperature factors are crudely estimated, which impacts the density-fit calculations, and the range of glycosylation trees that may be built is limited. In the current work, the available range is even much more limited, since no ‘expert user mode’ is available to add any carbohydrate residues outside of the five standard trees defined within the method. The <italic>B</italic>-factor estimates could be improved by a short refinement (as we have performed previously for loop modeling; van Beusekom, Joosten <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb7"> ▸</xref>) or by using shift-field maps (Cowtan &amp; Agirre, 2018<xref ref-type="bibr" rid="bb12"> ▸</xref>); however, the computational costs currently outweigh the merits of better <italic>B</italic>-factor estimation. The carbohydrate building here is also more conservative than in <italic>Coot</italic>, since we apply additional filtering steps. This leads to fewer cases where ‘probably (but not unequivocally) wrong’ (Emsley &amp; Crispin, 2018<xref ref-type="bibr" rid="bb14"> ▸</xref>) carbohydrate residues are built, but also further increases the limitation that glycosylation trees are not built to completion. In the context of <italic>PDB-REDO</italic>, carbohydrate remodeling is followed by reciprocal-space refinement, which may lead to more interpretable maps that allow users to attempt to further extend carbohydrate trees, both manually and automatically, in subsequent model-improvement rounds.</p>
    <p>In earlier work (van Beusekom, Lütteke <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb7"> ▸</xref>), we showed that <italic>Privateer</italic> labeled over 10 000 carbohydrate residues as wrong or doubtful both in the PDB and in the PDB-REDO databank. Since that analysis, the number of entries in the PDB-REDO databank has increased by 10 266 entries (9.2%). Hence, the expected number of problematic carbohydrate residues is now above 11 000. In this paper, we show that we can rebuild 6364 carbohydrate residues: this accounts for about half of the problematic residues. The other problematic carbohydrate residues cannot be rebuilt automatically, for instance because of a lack of electron-density evidence or current limitations to our methods. This illustrates again that automated carbohydrate building can solve many, but not all, problems.</p>
    <p>We observed that small changes in the coordinates and in the electron density can lead to different numbers of carbohydrate residues being built. Unrelated changes in the <italic>PDB-REDO</italic> pipeline, such as an update of the <italic>REFMAC</italic>5 program (Murshudov <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb28"> ▸</xref>), can lead to different results, because the coordinate file and the map coefficients submitted to <italic>Carbivore</italic> are slightly different. Sometimes this leads to better results and sometimes the results deteriorate; averaged over many entries, these are minor differences. As stated before, manual analysis is thus still required for optimal results.</p>
    <p>A potential improvement to our methods is better selection of which carbohydrate tree type is built. Currently, by default, we attempt to build a mannose tree with two FUCs on the first NAG: a tree that is not found in nature. Building of such an unnatural tree currently happens in one case (the glycosyl­ation tree at AsnA638 in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=4p44">4p44</ext-link>; Novakova <italic>et al.</italic>, 2016<xref ref-type="bibr" rid="bb29"> ▸</xref>). However, residues are rarely built past the common core of five residues equivalent in all glycosylation trees (Fig. 2<xref ref-type="fig" rid="fig2"> ▸</xref>
<italic>b</italic>). To circumvent cases like this as much as possible, we revert to building other tree types if other glycosylation trees in the structure model extend past the common core: this type then becomes the most likely candidate. For example, in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=5fji">5fji</ext-link> (Agirre <italic>et al.</italic>, 2016<xref ref-type="bibr" rid="bb2"> ▸</xref>) high-mannose trees are found: we therefore attempted to build more high-mannose trees. However, this tree type is also not necessarily correct since different glycosylation trees can be found within a single protein molecule [for example in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=5t3x">5t3x</ext-link> (Gristick <italic>et al.</italic>, 2016<xref ref-type="bibr" rid="bb16"> ▸</xref>), where we find high-mannose trees but also trees that are complex plant or complex mammal]. It is even possible that different glycosylation states are found in protein copies within the same crystal. Hence, it is possible that incorrect carbohydrate residues are sometimes built. Also, there are likely to be a few carbohydrate residues that were not built because an attempt was made to build the wrong tree type, and building the wrong carbohydrate residue type into the density of another is likely to be less successful.</p>
    <p>To improve choosing the correct tree type to build, outside annotation could be helpful. For instance, if a protein is expressed in a human cell line it should not contain plant glycosylation trees. In principle, the PDB file contains information about the source organism in which the protein was expressed. However, we do not find this annotation to be very reliable: for example, a large fraction of N-glycosylation trees are found in entries that were supposedly expressed in <italic>Escherichia coli</italic>. While glycosylation exists in Gram-negative bacteria (Benz &amp; Schmidt, 2002<xref ref-type="bibr" rid="bb5"> ▸</xref>), it is not very common and such a large number of entries would not be expected. However, the annotation has been improved over the years (Henrick <italic>et al.</italic>, 2008<xref ref-type="bibr" rid="bb18"> ▸</xref>; Sen <italic>et al.</italic>, 2014<xref ref-type="bibr" rid="bb31"> ▸</xref>), so the use of species information may be possible for more recent entries.</p>
    <p>The methodology presented here is another step in the automated handling of carbohydrate moieties in crystallo­graphic methodology. Instead of only identifying the issues, they can now be corrected by automated rebuilding. Additionally, carbohydrate residues are automatically built to extend existing glycosylation trees and to add glycosylation trees where they were missing. Although we still recommend manual checking, building correct N-glycosylation trees has become much easier.</p>
  </sec>
  <sec id="sec5">
    <label>5.</label>
    <title>Availability   </title>
    <p>Both the PDB-REDO databank and web server are hosted at <ext-link ext-link-type="uri" xlink:href="https://pdb-redo.eu">https://pdb-redo.eu</ext-link>. Crystallographers can submit work-in-progress models on the web server to run <italic>PDB-REDO</italic> including the carbohydrate-building procedure. The 1978 models from the test set are available through the databank. Other databank entries will be updated gradually to include the carbohydrate-building procedure. On the PDB-REDO databank entry pages, registered users can submit an update request to prioritize the update of that entry. Binary executables for <italic>Carbivore</italic>, <italic>Carbonanza</italic> and <italic>stats</italic> are available from the PDB-REDO website and the source code is available on request. Non-graphics-dependent carbohydrate modeling in <italic>Coot</italic> has been available since June 2018.</p>
  </sec>
</body>
<back>
  <ack>
    <p>The authors thank the NKI Research high-performance computing facility for providing computational resources.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="bb1">
      <mixed-citation publication-type="other">Agirre, J. (2017). <italic>Acta Cryst.</italic> D<bold>73</bold>, 171–186.</mixed-citation>
    </ref>
    <ref id="bb2">
      <mixed-citation publication-type="other">Agirre, J., Ariza, A., Offen, W. A., Turkenburg, J. P., Roberts, S. M., McNicholas, S., Harris, P. V., McBrayer, B., Dohnalek, J., Cowtan, K. D., Davies, G. J. &amp; Wilson, K. S. (2016). <italic>Acta Cryst.</italic> D<bold>72</bold>, 254–265.</mixed-citation>
    </ref>
    <ref id="bb3">
      <mixed-citation publication-type="other">Agirre, J., Iglesias-Fernández, J., Rovira, C., Davies, G. J., Wilson, K. S. &amp; Cowtan, K. D. (2015). <italic>Nature Struct. Mol. Biol.</italic>
<bold>22</bold>, 833–834.</mixed-citation>
    </ref>
    <ref id="bb4">
      <mixed-citation publication-type="other">Apweiler, R., Hermjakob, H. &amp; Sharon, N. (1999). <italic>Biochim. Biophys. Acta</italic>, <bold>1473</bold>, 4–8.</mixed-citation>
    </ref>
    <ref id="bb5">
      <mixed-citation publication-type="other">Benz, I. &amp; Schmidt, M. A. (2002). <italic>Mol. Microbiol.</italic>
<bold>45</bold>, 267–276.</mixed-citation>
    </ref>
    <ref id="bb6">
      <mixed-citation publication-type="other">Beusekom, B. van, Joosten, K., Hekkelman, M. L., Joosten, R. P. &amp; Perrakis, A. (2018). <italic>IUCrJ</italic>, <bold>5</bold>, 585–594.</mixed-citation>
    </ref>
    <ref id="bb7">
      <mixed-citation publication-type="other">Beusekom, B. van, Lütteke, T. &amp; Joosten, R. P. (2018). <italic>Acta Cryst.</italic> F<bold>74</bold>, 463–472.</mixed-citation>
    </ref>
    <ref id="bb8">
      <mixed-citation publication-type="other">Beusekom, B. van, Touw, W. G., Tatineni, M., Somani, S., Rajagopal, G., Luo, J., Gilliland, G. L., Perrakis, A. &amp; Joosten, R. P. (2018). <italic>Protein Sci.</italic>
<bold>27</bold>, 798–808.</mixed-citation>
    </ref>
    <ref id="bb9">
      <mixed-citation publication-type="other">Boel, E., Brady, L., Brzozowski, A. M., Derewenda, Z., Dodson, G. G., Jensen, V. J., Petersen, S. B., Swift, H., Thim, L. &amp; Woldike, H. F. (1990). <italic>Biochemistry</italic>, <bold>29</bold>, 6244–6249.</mixed-citation>
    </ref>
    <ref id="bb11">
      <mixed-citation publication-type="other">Cowtan, K. (2003). <italic>IUCr Comput. Commun. Newsl.</italic>
<bold>2</bold>, 4–9. https://www.iucr.org/resources/commissions/crystallographic-computing/newsletters/2.</mixed-citation>
    </ref>
    <ref id="bb12">
      <mixed-citation publication-type="other">Cowtan, K. &amp; Agirre, J. (2018). <italic>Acta Cryst.</italic> D<bold>74</bold>, 125–131.</mixed-citation>
    </ref>
    <ref id="bb13">
      <mixed-citation publication-type="other">Crispin, M., Stuart, D. I. &amp; Jones, E. Y. (2007). <italic>Nature Struct. Mol. Biol.</italic>
<bold>14</bold>, 354.</mixed-citation>
    </ref>
    <ref id="bb14">
      <mixed-citation publication-type="other">Emsley, P. &amp; Crispin, M. (2018). <italic>Acta Cryst.</italic> D<bold>74</bold>, 256–263.</mixed-citation>
    </ref>
    <ref id="bb15">
      <mixed-citation publication-type="other">Emsley, P., Lohkamp, B., Scott, W. G. &amp; Cowtan, K. (2010). <italic>Acta Cryst.</italic> D<bold>66</bold>, 486–501.</mixed-citation>
    </ref>
    <ref id="bb16">
      <mixed-citation publication-type="other">Gristick, H. B., von Boehmer, L., West, A. P. Jr, Schamber, M., Gazumyan, A., Golijanin, J., Seaman, M. S., Fätkenheuer, G., Klein, F., Nussenzweig, M. C. &amp; Bjorkman, P. J. (2016). <italic>Nature Struct. Mol. Biol.</italic>
<bold>23</bold>, 906–915.</mixed-citation>
    </ref>
    <ref id="bb17">
      <mixed-citation publication-type="other">Ha, Y., Stevens, D. J., Skehel, J. J. &amp; Wiley, D. C. (2003). <italic>Virology</italic>, <bold>309</bold>, 209–218.</mixed-citation>
    </ref>
    <ref id="bb18">
      <mixed-citation publication-type="other">Henrick, K., Feng, Z., Bluhm, W. F., Dimitropoulos, D., Doreleijers, J. F., Dutta, S., Flippen-Anderson, J. L., Ionides, J., Kamada, C., Krissinel, E., Lawson, C. L., Markley, J. L., Nakamura, H., Newman, R., Shimizu, Y., Swaminathan, J., Velankar, S., Ory, J., Ulrich, E. L., Vranken, W., Westbrook, J., Yamashita, R., Yang, H., Young, J., Yousufuddin, M. &amp; Berman, H. M. (2008). <italic>Nucleic Acids Res.</italic>
<bold>36</bold>, D426–D433.</mixed-citation>
    </ref>
    <ref id="bb19">
      <mixed-citation publication-type="other">Hooft, R. W. W., Vriend, G., Sander, C. &amp; Abola, E. E. (1996). <italic>Nature (London)</italic>, <bold>381</bold>, 272.</mixed-citation>
    </ref>
    <ref id="bb20">
      <mixed-citation publication-type="other">Hussein, W. M., Feder, D., Schenk, G., Guddat, L. W. &amp; McGeary, R. P. (2018). <italic>Eur. J. Med. Chem.</italic>
<bold>157</bold>, 462–479.</mixed-citation>
    </ref>
    <ref id="bb21">
      <mixed-citation publication-type="other">Jones, T. A., Zou, J.-Y., Cowan, S. W. &amp; Kjeldgaard, M. (1991). <italic>Acta Cryst.</italic> A<bold>47</bold>, 110–119.</mixed-citation>
    </ref>
    <ref id="bb22">
      <mixed-citation publication-type="other">Joosten, R. P., Joosten, K., Cohen, S. X., Vriend, G. &amp; Perrakis, A. (2011). <italic>Bioinformatics</italic>, <bold>27</bold>, 3392–3398.</mixed-citation>
    </ref>
    <ref id="bb23">
      <mixed-citation publication-type="other">Joosten, R. P., Long, F., Murshudov, G. N. &amp; Perrakis, A. (2014). <italic>IUCrJ</italic>, <bold>1</bold>, 213–220.</mixed-citation>
    </ref>
    <ref id="bb24">
      <mixed-citation publication-type="other">Joosten, R. P. &amp; Lütteke, T. (2017). <italic>Curr. Opin. Struct. Biol.</italic>
<bold>44</bold>, 9–17.</mixed-citation>
    </ref>
    <ref id="bb25">
      <mixed-citation publication-type="other">Lütteke, T. &amp; von der Lieth, C.-W. (2004). <italic>BMC Bioinformatics</italic>, <bold>5</bold>, 69.</mixed-citation>
    </ref>
    <ref id="bb26">
      <mixed-citation publication-type="other">McNicholas, S., Potterton, E., Wilson, K. S. &amp; Noble, M. E. M. (2011). <italic>Acta Cryst.</italic> D<bold>67</bold>, 386–394.</mixed-citation>
    </ref>
    <ref id="bb27">
      <mixed-citation publication-type="other">Meyder, A., Nittinger, E., Lange, G., Klein, R. &amp; Rarey, M. (2017). <italic>J. Chem. Inf. Model.</italic>
<bold>57</bold>, 2437–2447.</mixed-citation>
    </ref>
    <ref id="bb28">
      <mixed-citation publication-type="other">Murshudov, G. N., Skubák, P., Lebedev, A. A., Pannu, N. S., Steiner, R. A., Nicholls, R. A., Winn, M. D., Long, F. &amp; Vagin, A. A. (2011). <italic>Acta Cryst.</italic> D<bold>67</bold>, 355–367.</mixed-citation>
    </ref>
    <ref id="bb29">
      <mixed-citation publication-type="other">Novakova, Z., Cerny, J., Choy, C. J., Nedrow, J. R., Choi, J. K., Lubkowski, J., Berkman, C. E. &amp; Barinka, C. (2016). <italic>FEBS J.</italic>
<bold>283</bold>, 130–143.</mixed-citation>
    </ref>
    <ref id="bb30">
      <mixed-citation publication-type="other">Rini, J., Esko, J. &amp; Varki, A. (2010). <italic>Essentials of Glycobiology</italic>, edited by A. Varki, R. D. Cummings, J. D. Esko, H. H. Freeze, P. Stanley, C. R. Bertozzi, G. W. Hart &amp; M. E. Etzler, pp. 63–74. New York: Cold Spring Harbor Laboratory Press.</mixed-citation>
    </ref>
    <ref id="bb31">
      <mixed-citation publication-type="other">Sen, S., Young, J., Berrisford, J. M., Chen, M., Conroy, M. J., Dutta, S., Di Costanzo, L., Gao, G., Ghosh, S., Hudson, B. P., Igarashi, R., Kengaku, Y., Liang, Y., Peisach, E., Persikova, I., Mukhopadhyay, A., Narayanan, B. C., Sahni, G., Sato, J., Sekharan, M., Shao, C., Tan, L. &amp; Zhuravleva, M. A. (2014). <italic>Database</italic>, <bold>2014</bold>, bau116.</mixed-citation>
    </ref>
    <ref id="bb32">
      <mixed-citation publication-type="other">Stanley, P., Schachter, H. &amp; Taniguchi, N. (2010). <italic>Essentials of Glycobiology</italic>, edited by A. Varki, R. D. Cummings, J. D. Esko, H. H. Freeze, P. Stanley, C. R. Bertozzi, G. W. Hart &amp; M. E. Etzler, pp. 101–114. New York: Cold Spring Harbor Laboratory Press.</mixed-citation>
    </ref>
    <ref id="bb33">
      <mixed-citation publication-type="other">Taniguchi, N. &amp; Kizuka, Y. (2015). <italic>Adv. Cancer Res.</italic>
<bold>126</bold>, 11–51.</mixed-citation>
    </ref>
    <ref id="bb34">
      <mixed-citation publication-type="other">Tickle, I. J. (2012). <italic>Acta Cryst.</italic> D<bold>68</bold>, 454–467.</mixed-citation>
    </ref>
    <ref id="bb35">
      <mixed-citation publication-type="other">Touw, W. G., Baakman, C., Black, J., te Beek, T. A. H., Krieger, E., Joosten, R. P. &amp; Vriend, G. (2015). <italic>Nucleic Acids Res.</italic>
<bold>43</bold>, D364–D368.</mixed-citation>
    </ref>
    <ref id="bb36">
      <mixed-citation publication-type="other">Varki, A. &amp; Lowe, J. B. (2010). <italic>Essentials of Glycobiology</italic>, edited by A. Varki, R. D. Cummings, J. D. Esko, H. H. Freeze, P. Stanley, C. R. Bertozzi, G. W. Hart &amp; M. E. Etzler, pp. 75–88. New York: Cold Spring Harbor Laboratory Press.</mixed-citation>
    </ref>
    <ref id="bb37">
      <mixed-citation publication-type="other">Winn, M. D., Ballard, C. C., Cowtan, K. D., Dodson, E. J., Emsley, P., Evans, P. R., Keegan, R. M., Krissinel, E. B., Leslie, A. G. W., McCoy, A., McNicholas, S. J., Murshudov, G. N., Pannu, N. S., Potterton, E. A., Powell, H. R., Read, R. J., Vagin, A. &amp; Wilson, K. S. (2011). <italic>Acta Cryst.</italic> D<bold>67</bold>, 235–242.</mixed-citation>
    </ref>
    <ref id="bb38">
      <mixed-citation publication-type="other">Wu, Y., Cho, M., Shore, D., Song, M., Choi, J., Jiang, T., Deng, Y.-Q., Bourgeois, M., Almli, L., Yang, H., Chen, L.-M., Shi, Y., Qi, J., Li, A., Yi, K. S., Chang, M. S., Bae, J. S., Lee, H. J., Shin, J., Stevens, J., Hong, S., Qin, C.-F., Gao, G. F., Chang, S. J. &amp; Donis, R. O. (2015). <italic>Nature Commun.</italic>
<bold>6</bold>, 7708.</mixed-citation>
    </ref>
    <ref id="bb39">
      <mixed-citation publication-type="other">wwPDB consortium (2019). <italic>Nucleic Acids Res.</italic>
<bold>47</bold>, D520–D528.</mixed-citation>
    </ref>
    <ref id="bb40">
      <mixed-citation publication-type="other">Xu, K., Rajashankar, K. R.-P., Chan, Y.-P., Himanen, J. P., Broder, C. C. &amp; Nikolov, D. B. (2008). <italic>Proc. Natl Acad. Sci. USA</italic>, <bold>105</bold>, 9953–9958.</mixed-citation>
    </ref>
    <ref id="bb41">
      <mixed-citation publication-type="other">Young, J. Y., Westbrook, J. D., Feng, Z., Sala, R., Peisach, E., Oldfield, T. J., Sen, S., Gutmanas, A., Armstrong, D. R., Berrisford, J. M., Chen, L., Chen, M., Di Costanzo, L., Dimitropoulos, D., Gao, G., Ghosh, S., Gore, S., Guranovic, V., Hendrickx, P. M. S., Hudson, B. P., Igarashi, R., Ikegawa, Y., Kobayashi, N., Lawson, C. L., Liang, Y., Mading, S., Mak, L., Mir, M. S., Mukhopadhyay, A., Patwardhan, A., Persikova, I., Rinaldi, L., Sanz-Garcia, E., Sekharan, M. R., Shao, C., Swaminathan, G. J., Tan, L., Ulrich, E. L., van Ginkel, G., Yamashita, R., Yang, H., Zhuravleva, M. A., Quesada, M., Kleywegt, G. J., Berman, H. M., Markley, J. L., Nakamura, H., Velankar, S. &amp; Burley, S. K. (2017). <italic>Structure</italic>, <bold>25</bold>, 536–545.</mixed-citation>
    </ref>
    <ref id="bb42">
      <mixed-citation publication-type="other">Zhang, P., Woen, S., Wang, T., Liau, B., Zhao, S., Chen, C., Yang, Y., Song, Z., Wormald, M. R., Yu, C. &amp; Rudd, P. M. (2016). <italic>Drug Discov. Today</italic>, <bold>21</bold>, 740–765.</mixed-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig id="fig1" orientation="portrait" position="float">
    <label>Figure 1</label>
    <caption>
      <p>The percentage of PDB entries, per year of deposition, that contain carbohydrates or are glycosylated for the past 20 years. The percentage of carbohydrate-containing entries has been growing steadily over the last ten years.</p>
    </caption>
    <graphic xlink:href="d-75-00416-fig1"/>
  </fig>
  <fig id="fig2" orientation="portrait" position="float">
    <label>Figure 2</label>
    <caption>
      <p>(<italic>a</italic>) The number of carbohydrate residues built by <italic>Carbivore</italic> by year of deposition in total and per 100 sequons (with sequence motif Asn-<italic>X</italic>-S/T). (<italic>b</italic>) The number of carbohydrate residues per glycosylation tree in the PDB <italic>versus</italic> the PDB-REDO databank. The length of most glycosylation trees remains unchanged, a considerable number of trees become longer and only a small portion of trees are shortened. The number of asparagines that are glycosylated in neither the PDB nor the PDB-REDO databank is not determined because it is not relevant here. (<italic>c</italic>) The distribution of the RSCC for each carbohydrate residue that was built in by <italic>Carbivore</italic> in current PDB-REDO entries. The sharp increases at 0.60 and 0.70 are caused by the RSCC filters (see Section 2<xref ref-type="sec" rid="sec2"/>).</p>
    </caption>
    <graphic xlink:href="d-75-00416-fig2"/>
  </fig>
  <fig id="fig3" orientation="portrait" position="float">
    <label>Figure 3</label>
    <caption>
      <p>Carbohydrate remodeling: a comparison between PDB (left) and PDB-REDO (right). Top: new glycosylation-tree modeling at AsnA24 in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=2aaa">2aaa</ext-link> (Boel <italic>et al.</italic>, 1990<xref ref-type="bibr" rid="bb9"> ▸</xref>). Clear difference density is visible at this asparagine, which follows the glycosylation sequence motif. After flipping the side chain of AsnA24, four carbohydrate residues can be built at this position; there is also partial density for a fifth mannose, but this was not built. Middle: glycosylation-tree rebuilding at AsnA529 in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=3d12">3d12</ext-link> (Xu <italic>et al.</italic>, 2008<xref ref-type="bibr" rid="bb40"> ▸</xref>). The seven carbohydrate moieties in the PDB entry (and indicated in the figure) are carbohydrate residues that are not commonly found in N-glycosylation, which can now be replaced automatically with the correct residues. It may be possible that the wrong residue names have arisen as an unwanted side effect from PDB remediation efforts (Henrick <italic>et al.</italic>, 2008<xref ref-type="bibr" rid="bb18"> ▸</xref>). The residues for which the abbreviations have not been defined (LXZ, NGA and GL0) are similar to NAG, NAG and GAL, respectively, but with one or more inverted chiral centers. Bottom: glycosylation-tree extension at AsnC81 in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=6g46">6g46</ext-link> (Hussein <italic>et al.</italic>, 2018<xref ref-type="bibr" rid="bb20"> ▸</xref>). Three residues could be added at this position, which was enabled partly because of improved refinement in <italic>PDB-REDO</italic> (<italic>R</italic>
<sub>free</sub> decreased from 23.1% to 21.5%). Ten water molecules were deleted. In all cases, amino acids are shown in blue and carbohydrate residues in gold. For sake of clarity, the 2<italic>mF</italic>
<sub>o</sub> − <italic>DF</italic>
<sub>c</sub> map is contoured at 1.2σ (top), 1.5σ (middle) and 1.0σ (bottom). The <italic>mF</italic>
<sub>o</sub> − <italic>DF</italic>
<sub>c</sub> map is shown at 3.0σ in all cases. <italic>CCP</italic>4<italic>mg</italic> (McNicholas <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb26"> ▸</xref>) was used to generate this figure.</p>
    </caption>
    <graphic xlink:href="d-75-00416-fig3"/>
  </fig>
  <fig id="fig4" orientation="portrait" position="float">
    <label>Figure 4</label>
    <caption>
      <p>Glycosylation tree at AsnG165 in PDB entry <ext-link ext-link-type="uri" xlink:href="http://scripts.iucr.org/cgi-bin/cr.cgi?rm=pdb&amp;pdbId=1mql">1mql</ext-link>. The LINK records between the different carbohydrate residues are missing, causing the carbohydrate residues to be pushed apart owing to van der Waals restraints. This is exacerbated by the leaving ‘O1’ atoms that were not removed when the carbohydrate tree was built. The 2<italic>mF</italic>
<sub>o</sub> − <italic>DF</italic>
<sub>c</sub> map and the <italic>mF</italic>
<sub>o</sub> − <italic>DF</italic>
<sub>c</sub> map are contoured at 1.5σ and 3.0σ, respectively. <italic>CCP</italic>4<italic>mg</italic> (McNicholas <italic>et al.</italic>, 2011<xref ref-type="bibr" rid="bb26"> ▸</xref>) was used to generate this figure.</p>
    </caption>
    <graphic xlink:href="d-75-00416-fig4"/>
  </fig>
  <table-wrap id="table1" orientation="portrait" position="float">
    <label>Table 1</label>
    <caption>
      <title>Number of carbohydrate residues built in PDB-REDO entries available as of 31 October 2018</title>
    </caption>
    <table frame="hsides" rules="groups">
      <thead valign="bottom">
        <tr>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" valign="bottom">Process</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" char="." charoff="50" valign="bottom">No. of residues built</th>
          <th style="border-bottom:1px solid black;" rowspan="1" colspan="1" align="left" char="." charoff="50" valign="bottom">No. of entries modified</th>
        </tr>
      </thead>
      <tbody valign="top">
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Rebuilding<xref ref-type="table-fn" rid="tfn1">†</xref>
</td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">6364</td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">1961</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Tree extension</td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">4031</td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">1721</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">Whole-tree addition</td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">6057</td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">2372</td>
        </tr>
        <tr>
          <td rowspan="1" colspan="1" align="left" valign="top">
            <bold>Total</bold>
          </td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">
            <bold>16452</bold>
          </td>
          <td rowspan="1" colspan="1" align="char" char="." charoff="50" valign="top">
            <bold>4498</bold>
          </td>
        </tr>
      </tbody>
    </table>
    <table-wrap-foot>
      <fn id="tfn1">
        <label>†</label>
        <p>This also includes carbohydrate residues that were built when a rebuilt tree could be further extended.</p>
      </fn>
    </table-wrap-foot>
  </table-wrap>
</floats-group>

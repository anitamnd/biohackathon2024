<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9486594</article-id>
    <article-id pub-id-type="pmid">36124808</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac455</article-id>
    <article-id pub-id-type="publisher-id">btac455</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Genes Track</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Efficient permutation-based genome-wide association studies for normal and skewed phenotypic distributions</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>John</surname>
          <given-names>Maura</given-names>
        </name>
        <aff><institution>Technical University of Munich, Campus Straubing for Biotechnology and Sustainability, Bioinformatics</institution>, 94315 Straubing, <country country="DE">Germany</country></aff>
        <aff><institution>Weihenstephan-Triesdorf University of Applied Sciences, Bioinformatics</institution>, 94315 Straubing, <country country="DE">Germany</country></aff>
        <xref rid="btac455-cor1" ref-type="corresp"/>
        <!--maura.john@hswt.de-->
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ankenbrand</surname>
          <given-names>Markus J</given-names>
        </name>
        <aff><institution>Center for Computational and Theoretical Biology, University of Würzburg</institution>, 97078 Würzburg, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Artmann</surname>
          <given-names>Carolin</given-names>
        </name>
        <aff><institution>Center for Computational and Theoretical Biology, University of Würzburg</institution>, 97078 Würzburg, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Freudenthal</surname>
          <given-names>Jan A</given-names>
        </name>
        <aff><institution>Center for Computational and Theoretical Biology, University of Würzburg</institution>, 97078 Würzburg, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Korte</surname>
          <given-names>Arthur</given-names>
        </name>
        <aff><institution>Center for Computational and Theoretical Biology, University of Würzburg</institution>, 97078 Würzburg, <country country="DE">Germany</country></aff>
        <xref rid="btac455-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Grimm</surname>
          <given-names>Dominik G</given-names>
        </name>
        <aff><institution>Technical University of Munich, Campus Straubing for Biotechnology and Sustainability, Bioinformatics</institution>, 94315 Straubing, <country country="DE">Germany</country></aff>
        <aff><institution>Weihenstephan-Triesdorf University of Applied Sciences, Bioinformatics</institution>, 94315 Straubing, <country country="DE">Germany</country></aff>
        <aff><institution>Department of Informatics, Technical University of Munich</institution>, 85748 Garching, <country country="DE">Germany</country></aff>
        <xref rid="btac455-FM1" ref-type="author-notes"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <fn id="btac455-FM1">
        <p>The authors wish it to be known that, in their opinion, Arthur Korte and Dominik G. Grimm should be regarded as Joint Last Authors.</p>
      </fn>
      <corresp id="btac455-cor1">To whom correspondence should be addressed. Email: <email>arthur.korte@uni-wuerzburg.de</email> or <email>maura.john@hswt.de</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-09-18">
      <day>18</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>9</month>
      <year>2022</year>
    </pub-date>
    <volume>38</volume>
    <issue>Suppl 2</issue>
    <issue-title>Proceedings of ECCB2022</issue-title>
    <fpage>ii5</fpage>
    <lpage>ii12</lpage>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac455.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Genome-wide association studies (GWAS) are an integral tool for studying the architecture of complex genotype and phenotype relationships. Linear mixed models (LMMs) are commonly used to detect associations between genetic markers and a trait of interest, while at the same time allowing to account for population structure and cryptic relatedness. Assumptions of LMMs include a normal distribution of the residuals and that the genetic markers are independent and identically distributed—both assumptions are often violated in real data. Permutation-based methods can help to overcome some of these limitations and provide more realistic thresholds for the discovery of true associations. Still, in practice, they are rarely implemented due to the high computational complexity.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We propose <monospace>permGWAS</monospace>, an efficient LMM reformulation based on 4D tensors that can provide permutation-based significance thresholds. We show that our method outperforms current state-of-the-art LMMs with respect to runtime and that permutation-based thresholds have lower false discovery rates for skewed phenotypes compared to the commonly used Bonferroni threshold. Furthermore, using <monospace>permGWAS</monospace> we re-analyzed more than 500 <italic toggle="yes">Arabidopsis thaliana</italic> phenotypes with 100 permutations each in less than 8 days on a single GPU. Our re-analyses suggest that applying a permutation-based threshold can improve and refine the interpretation of GWAS results.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><monospace>permGWAS</monospace> is open-source and publicly available on GitHub for download: <ext-link xlink:href="https://github.com/grimmlab/permGWAS" ext-link-type="uri">https://github.com/grimmlab/permGWAS</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Federal Ministry of Education and Research</institution>
            <institution-id institution-id-type="DOI">10.13039/501100002347</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>ECCB2022</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>BMBF</institution>
            <institution-id institution-id-type="DOI">10.13039/501100002347</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>01—S21038B</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Genome-wide association studies (GWAS) are an integral tool to detect associations between genetic markers within a population of individuals and a complex trait or disease that is measured in the same population (<xref rid="btac455-B2" ref-type="bibr">Atwell <italic toggle="yes">et al.</italic>, 2010</xref>; <xref rid="btac455-B26" ref-type="bibr">The 1001 Genomes Consortium, 2016</xref>; <xref rid="btac455-B27" ref-type="bibr">Todesco <italic toggle="yes">et al.</italic>, 2020</xref>). State-of-the-art methods can easily analyze millions of markers in populations of thousands of individuals (<xref rid="btac455-B10" ref-type="bibr">Kang <italic toggle="yes">et al.</italic>, 2008</xref>, <xref rid="btac455-B11" ref-type="bibr">2010</xref>; <xref rid="btac455-B12" ref-type="bibr">Korte <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="btac455-B13" ref-type="bibr">Lippert <italic toggle="yes">et al.</italic>, 2011</xref>; <xref rid="btac455-B16" ref-type="bibr">Loh <italic toggle="yes">et al.</italic>, 2015</xref>). Here, the critical step is to define a threshold to distinguish true and spurious associations. Classically, one controls the family-wise error rate (FWER), that is the probability of making at least one type-1 error (or false positive), using the commonly used Bonferroni correction (<xref rid="btac455-B3" ref-type="bibr">Bonferroni, 1936</xref>). However, due to the large number of tests the Bonferroni correction is in practice often too conservative (<xref rid="btac455-B7" ref-type="bibr">Gumpinger <italic toggle="yes">et al.</italic>, 2021</xref>; <xref rid="btac455-B15" ref-type="bibr">Llinares-López <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btac455-B30" ref-type="bibr">Westfall and Young, 1993</xref>), as it assumes that all tested markers are independent, which is clearly not the case for high-density genomic data that are nowadays routinely generated. Here, many markers are correlated with each other and the actual number of independent tests performed is lower than the number of markers analyzed. Therefore, many studies propose a significance threshold that is based on the false discovery rate (FDR) (<xref rid="btac455-B23" ref-type="bibr">Storey and Tibshirani, 2003</xref>). On the other hand, naïve thresholds, such as Bonferroni or FDR, cannot account for model mis-specifications that easily arise in biological data, which are often non-normally distributed. Variance-stabilizing transformations have been proposed to account for phenotypic variability (<xref rid="btac455-B24" ref-type="bibr">Sun <italic toggle="yes">et al.</italic>, 2013</xref>), but are not non-controversial (<xref rid="btac455-B22" ref-type="bibr">Shen and Rönnegård, 2013</xref>) and might complicate comparability across different phenotypes. Permutation-based thresholds could provide an alternative approach to overcome some of these limitations (<xref rid="btac455-B4" ref-type="bibr">Che <italic toggle="yes">et al.</italic>, 2014</xref>). Here, the main limitations are the computational burden to run permutations routinely, as current implementations are still too slow and inefficient [such as our deprecated method <monospace>GWAS-Flow</monospace> (<xref rid="btac455-B5" ref-type="bibr">Freudenthal <italic toggle="yes">et al.</italic>, 2019</xref>)], or focus only on linear regression without the possibility to correct for confounding factors on specialized Field Programmable Gate Arrays hardware (<xref rid="btac455-B25" ref-type="bibr">Swiel <italic toggle="yes">et al.</italic>, 2022</xref>).</p>
    <p>We propose <monospace>permGWAS</monospace>, an efficient permutation-based linear mixed model (LMM) to compute adjusted significance thresholds that are able to account for correlated markers and skewed phenotypic distributions without the need to arbitrarily transform phenotypes. To account for multiple hypotheses, correlated markers and skewed phenotypes, we compute permutation-based significance thresholds based on the <italic toggle="yes">maxT</italic> method proposed by <xref rid="btac455-B30" ref-type="bibr">Westfall and Young (1993)</xref>. To enable efficient computation of different permutation-based tests, we provide a scaleable batch-wise reformulation of a permutation-based LMM using 4D tensors. We propose to implement permutation-based thresholds as the default choice for GWAS and provide both simulations and re-analysis of more than 500 <italic toggle="yes">Arabidopsis thaliana</italic> phenotypes to underpin its benefits.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>We will first provide the necessary background of LMMs for GWAS, the multiple hypothesis testing problem and how to empirically estimate the FWER using the Westfall–Young permutation testing procedure (<xref rid="btac455-B30" ref-type="bibr">Westfall and Young, 1993</xref>). Finally, we will present our approach on how to efficiently compute associations with LMMs using a permutation-based significance threshold. An overview of all mathematical symbols and notations can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>.</p>
    <sec>
      <title>2.1 Linear mixed model</title>
      <p>Let <italic toggle="yes">n</italic> be the number of samples and <italic toggle="yes">m</italic> the number of genetic markers. Then for each genetic marker we consider a LMM of the form
<disp-formula id="E1"><label>(1)</label><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>β</mml:mo><mml:mo>+</mml:mo><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mo>+</mml:mo><mml:mi>ϵ</mml:mi></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>where <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is a vector of observed phenotypic values and <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is a matrix of fixed effects containing columns for the mean, covariates and the genetic marker. Fixed effects are denoted by <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>c</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> and random effects <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">u</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> follow a Gaussian distribution with zero mean and a (genetic) variance of <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi mathvariant="bold-italic">K</mml:mi></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">K</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denotes the kinship matrix and <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϵ</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is a vector of residual effects with <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϵ</mml:mi><mml:mo>∼</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. As described in <xref rid="btac455-B10" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> (2008</xref>, <xref rid="btac455-B11" ref-type="bibr">2010</xref>) and <xref rid="btac455-B13" ref-type="bibr">Lippert <italic toggle="yes">et al.</italic> (2011)</xref>, we estimate the variance components <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> by maximizing the following likelihood function
<disp-formula id="E2"><label>(2)</label><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mi>L</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mo>,</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>|</mml:mo><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo>β</mml:mo><mml:mo>;</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi mathvariant="bold-italic">K</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi mathvariant="bold-italic">I</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>once for a null model, which includes no genetic markers and reuse them for the alternative model, which includes the marker of interest. Finally, an F-test is used to test the null hypothesis that the marker has no effect against the alternative hypothesis that it has an effect on the phenotypic value. We reject the null hypothesis and call a statistical test significant, if the <italic toggle="yes">P</italic>-value of the F-test is below a predefined significance threshold <italic toggle="yes">α</italic> (e.g. 5%).</p>
    </sec>
    <sec>
      <title>2.2 Multiple hypothesis testing</title>
      <p>Since we have to test thousands to millions of markers simultaneously, we have to take these multiple tests into account, otherwise we would obtain thousands of false positive associations deemed to be significant.</p>
      <sec>
        <label>2.2.1</label>
        <title>Family-wise error rate</title>
        <p>The FWER is the probability of making at least one type-1 error (or false positive). One has to find an appropriate corrected significance threshold <italic toggle="yes">δ</italic> for each hypothesis, such that the FWER(<italic toggle="yes">δ</italic>) <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo>≤</mml:mo><mml:mo>α</mml:mo></mml:mrow></mml:math></inline-formula>. To determine the optimal threshold <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mo>δ</mml:mo><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula> one has to solve the following optimization problem:
<disp-formula id="E3"><label>(3)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mo>δ</mml:mo><mml:mo>*</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi>max</mml:mi><mml:mo>⁡</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo>δ</mml:mo><mml:mo>|</mml:mo><mml:mtext>FWER</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mo>δ</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mo>α</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula></p>
        <p>Evaluating this optimization problem in closed form is not possible in general. For this purpose, the widely used Bonferroni approximation (<xref rid="btac455-B3" ref-type="bibr">Bonferroni, 1936</xref>) can be used to control the FWER. To estimate the adjusted significance threshold <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>δ</mml:mo><mml:mi>b</mml:mi><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula> after Bonferroni, one simply divides the target significance level <italic toggle="yes">α</italic> by the number of simultaneous tests, i.e. <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>δ</mml:mo><mml:mi>b</mml:mi><mml:mo>*</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mo>α</mml:mo><mml:mo>/</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math></inline-formula>. However, due to the large number of tests, the Bonferroni correction is in practice often too conservative, i.e. FWER(<inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mo>δ</mml:mo><mml:mi>b</mml:mi><mml:mo>*</mml:mo></mml:msubsup></mml:mrow></mml:math></inline-formula>) <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mo>≪</mml:mo><mml:msup><mml:mo>δ</mml:mo><mml:mo>*</mml:mo></mml:msup></mml:mrow></mml:math></inline-formula>, as shown in <xref rid="btac455-B15" ref-type="bibr">Llinares-López <italic toggle="yes">et al.</italic> (2015)</xref> and <xref rid="btac455-B7" ref-type="bibr">Gumpinger <italic toggle="yes">et al.</italic> (2021)</xref>. In addition, when performing GWAS one typically makes the assumption that the residuals are normally distributed and that the genetic markers are independent and identically distributed. However, these assumptions are often violated in practice, which leads to the fact that the Bonferroni threshold is either overly conservative for normally distributed phenotypes (leading to many false negatives) or not stringent enough for phenotypes with skewed distributions (leading to many false positives).</p>
      </sec>
      <sec>
        <label>2.2.2</label>
        <title>Westfall–Young permutations</title>
        <p>Permutation-based methods can help to overcome some of these problems, by empirically estimating the FWER(<italic toggle="yes">δ</italic>). One could either approximate the null distribution by using permutations to then compute adjusted <italic toggle="yes">P</italic>-values or use the unadjusted <italic toggle="yes">P</italic>-values and provide a permutation-based significance threshold based on the <italic toggle="yes">maxT</italic> permutation-method proposed by <xref rid="btac455-B30" ref-type="bibr">Westfall and Young (1993)</xref>. With this adjusted threshold we can account for non-Gaussian distributed phenotypes, correlated markers due to linkage disequilibrium and the large number of tests. In the following we will describe how to compute both, adjusted <italic toggle="yes">P</italic>-values and adjusted significance thresholds.</p>
        <p>To compute adjusted <italic toggle="yes">P</italic>-values, we first permute the phenotype <italic toggle="yes">q</italic> times and calculate the test statistic <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for the <italic toggle="yes">k</italic>th permutation, with <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">j</italic>th marker, with <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>. After randomizing, any correlation left between the genotypic and phenotypic values will be of non-genetic origin, but the distribution of the phenotypic values stays the same. To compute the permutation-based <italic toggle="yes">P</italic>-values, let <italic toggle="yes">T<sub>j</sub></italic> denote the random variable corresponding to the observed test statistic of the <italic toggle="yes">j</italic>th marker. We test the hypothesis <italic toggle="yes">H</italic><sub>0</sub> that <italic toggle="yes">T<sub>j</sub></italic> follows the permutation distribution empirically given by <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">k</italic> and all <italic toggle="yes">j</italic>. Then we compute the adjusted permutation-based <italic toggle="yes">P</italic>-value as:
<disp-formula id="E4"><label>(4)</label><mml:math id="M4" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:msubsup><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>q</mml:mi></mml:msubsup><mml:mrow><mml:mi mathvariant="double-struck">1</mml:mi><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>q</mml:mi><mml:mi>m</mml:mi></mml:mrow></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>where <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mi mathvariant="double-struck">1</mml:mi></mml:math></inline-formula> takes the value 1 if the argument is true and 0 otherwise. The FWER can be controlled in this multiple hypothesis testing setting using <xref rid="btac455-B3" ref-type="bibr">Bonferroni (1936)</xref>.</p>
        <p>For the adjusted significance threshold we follow a permutation testing procedure proposed by <xref rid="btac455-B30" ref-type="bibr">Westfall and Young (1993)</xref>. For each permutation we take the maximal test statistic over all markers, <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>max</mml:mi><mml:mo>⁡</mml:mo></mml:mrow><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>}</mml:mo></mml:mrow></mml:msub><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and compute the corresponding minimal <italic toggle="yes">P</italic>-value <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Let again <italic toggle="yes">T<sub>j</sub></italic> denote the random variable corresponding to the observed test statistic of the <italic toggle="yes">j</italic>th marker. We now test the hypothesis <italic toggle="yes">H</italic><sub>0</sub> that <italic toggle="yes">T<sub>j</sub></italic> follows the permutation distribution empirically given by <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">k</italic>. Then the adjusted <italic toggle="yes">P</italic>-value is given by <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula> and
<disp-formula id="E5"><label>(5)</label><mml:math id="M5" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>q</mml:mi></mml:msubsup><mml:mi mathvariant="double-struck">1</mml:mi><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:msub><mml:mi>t</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mi>q</mml:mi></mml:mfrac><mml:mo>≤</mml:mo><mml:mo>α</mml:mo></mml:mrow></mml:math></disp-formula>is equivalent to <italic toggle="yes">t<sub>j</sub></italic> being larger than the <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mn>100</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo>α</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mtext>th</mml:mtext></mml:mrow></mml:math></inline-formula> percentile of the <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>t</mml:mi><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. Hence, the <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mo>α</mml:mo><mml:mtext>th</mml:mtext></mml:mrow></mml:math></inline-formula> percentile of the minimal <italic toggle="yes">P</italic>-values <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mtext>min</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> leaves us with an adjusted threshold that controls the FWER.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 p<monospace>ermGWAS</monospace> architecture</title>
      <p>These permutation-based strategies are computationally highly demanding, which makes them often inapplicable in practice. Further, current state-of-the-art GWAS implementations sequentially compute univariate test statistics for one marker and a given phenotype (<xref rid="btac455-B6" ref-type="bibr">Grimm <italic toggle="yes">et al.</italic>, 2017</xref>; <xref rid="btac455-B10" ref-type="bibr">Kang <italic toggle="yes">et al.</italic>, 2008</xref>, <xref rid="btac455-B11" ref-type="bibr">2010</xref>; <xref rid="btac455-B13" ref-type="bibr">Lippert <italic toggle="yes">et al.</italic>, 2011</xref>). We propose <monospace>permGWAS</monospace>, which is able to simultaneously compute univariate test statistics of several SNPs batch-wise on modern multi-CPU and GPU environments, while at the same time controlling the FWER using Westfall–Young permutation testing. First, we will introduce the mathematical framework for batch-wise LMM without permutations, followed by an efficient formulation for permutation-based LMM.</p>
      <sec>
        <label>2.3.1</label>
        <title>Batch-wise linear mixed models</title>
        <p>Denote by <italic toggle="yes">n</italic> the number of samples, <italic toggle="yes">c</italic> the number of fixed effects (i.e. the SNP of interest and all covariates) and <italic toggle="yes">b</italic> the batch size. Let <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denote the matrix of fixed effects, including a column of ones for the intercept, the covariates and the <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mrow><mml:mi>j</mml:mi><mml:mrow><mml:mtext>th</mml:mtext></mml:mrow></mml:mrow></mml:math></inline-formula> SNP <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> (<xref rid="btac455-F1" ref-type="fig">Fig. 1A</xref>). Let <inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> be the 3D tensor containing the matrices <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and let <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denote the 3D tensor containing <italic toggle="yes">b</italic> copies of the phenotype vector <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> (<xref rid="btac455-F1" ref-type="fig">Fig. 1B</xref>). Further, let <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">V</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi mathvariant="bold-italic">K</mml:mi><mml:mo>+</mml:mo><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mi mathvariant="bold-italic">I</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denote the variance–covariance matrix. For computational efficiency, instead of using generalized least squares, we first compute the Cholesky decomposition <inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">V</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="bold-italic">C</mml:mi><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> and linearly transform <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>, before computing the coefficients using ordinary least squares. Let <inline-formula id="IE42"><mml:math id="IM42" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denote the 3D tensor containing <italic toggle="yes">b</italic> copies of <bold><italic toggle="yes">C</italic></bold>. Then, the linearly transformed data is given by
<disp-formula id="E6"><label>(6)</label><mml:math id="M6" display="block" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
 <disp-formula id="E7"><label>(7)</label><mml:math id="M7" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>.</mml:mo></mml:math></disp-formula></p>
        <fig position="float" id="btac455-F1">
          <label>Fig. 1.</label>
          <caption>
            <p>Schematic illustration of matrices and tensors of the <monospace>permGWAS</monospace> architecture. (<bold>A</bold>) Commonly used matrix representation when computing sequential univariate tests, where <inline-formula id="IE43"><mml:math id="IM43" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is the phenotypic vector for <italic toggle="yes">n</italic> samples and <inline-formula id="IE44"><mml:math id="IM44" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denotes the matrix of fixed effects, including a column of ones for the intercept, the covariates and the <italic toggle="yes">j</italic>th SNP <inline-formula id="IE45"><mml:math id="IM45" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>. (<bold>B</bold>) 3D-tensor representation of a LMM to compute univariate tests batch-wise. The phenotype is represented as a 3D tensor containing <italic toggle="yes">b</italic> copies of the phenotype vector <inline-formula id="IE46"><mml:math id="IM46" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold-italic">y</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE47"><mml:math id="IM47" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is a 3D tensor containing the matrices <inline-formula id="IE48"><mml:math id="IM48" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> to <inline-formula id="IE49"><mml:math id="IM49" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>. (<bold>C</bold>) 4D-tensor representation of a permutation-based batch-wise LMM. The phenotype is represented as a 4D tensor containing for each permutation <inline-formula id="IE50"><mml:math id="IM50" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">y</mml:mi></mml:mrow></mml:math></inline-formula> the 3D tensor <inline-formula id="IE51"><mml:math id="IM51" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">q</italic> permutations and <inline-formula id="IE52"><mml:math id="IM52" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> is a 4D tensor containing <italic toggle="yes">q</italic> copies of <inline-formula id="IE53"><mml:math id="IM53" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula></p>
          </caption>
          <graphic xlink:href="btac455f1" position="float"/>
        </fig>
        <p>Now, we can compute the coefficients <inline-formula id="IE54"><mml:math id="IM54" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and the residual sums of squares <inline-formula id="IE55"><mml:math id="IM55" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> for those <italic toggle="yes">b</italic> SNPs starting at the <inline-formula id="IE56"><mml:math id="IM56" display="inline" overflow="scroll"><mml:mrow><mml:mi>j</mml:mi><mml:mtext>th</mml:mtext></mml:mrow></mml:math></inline-formula> SNP as follows:
<disp-formula id="E8"><label>(8)</label><mml:math id="M8" display="block" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></disp-formula>
 <disp-formula id="E9"><label>(9)</label><mml:math id="M9" display="block" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:msup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup><mml:mo>−</mml:mo><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:msup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE57"><mml:math id="IM57" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msub><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mi>b</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Finally, we can compute the test statistics <inline-formula id="IE58"><mml:math id="IM58" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">t</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">b</italic> SNPs:
<disp-formula id="E10"><label>(10)</label><mml:math id="M10" display="block" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">t</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="true">)</mml:mo><mml:mfrac><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mn>0</mml:mn><mml:mi>b</mml:mi></mml:msubsup><mml:mo>−</mml:mo><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE59"><mml:math id="IM59" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mn>0</mml:mn><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>contains <italic toggle="yes">b</italic> copies of the residual sum of squares of the null model. Once we have computed the test statistics for all SNPs, we can sequentially calculate all <italic toggle="yes">P</italic>-values.</p>
      </sec>
      <sec>
        <label>2.3.2</label>
        <title>Efficient permutation-based linear mixed models</title>
        <p>When performing GWAS with permutations, let additionally <italic toggle="yes">q</italic> denote the number of permutations. Then for each permutation <inline-formula id="IE60"><mml:math id="IM60" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi>y</mml:mi></mml:mrow></mml:math></inline-formula> of <italic toggle="yes">y</italic> with <inline-formula id="IE61"><mml:math id="IM61" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>q</mml:mi></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math></inline-formula>, we get a new 3D tensor <inline-formula id="IE62"><mml:math id="IM62" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Let <inline-formula id="IE63"><mml:math id="IM63" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> be the 4D tensor containing <inline-formula id="IE64"><mml:math id="IM64" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">k</italic> and let <inline-formula id="IE65"><mml:math id="IM65" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> be the 4D tensor containing <italic toggle="yes">q</italic> copies of <inline-formula id="IE66"><mml:math id="IM66" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula> (<xref rid="btac455-F1" ref-type="fig">Fig. 1C</xref>). Now for each permutation <inline-formula id="IE67"><mml:math id="IM67" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi>y</mml:mi></mml:mrow></mml:math></inline-formula> of <italic toggle="yes">y</italic>, we estimate associated variance components <inline-formula id="IE68"><mml:math id="IM68" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE69"><mml:math id="IM69" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msubsup><mml:mo>σ</mml:mo><mml:mi>e</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:math></inline-formula> and obtain a new variance–covariance matrix <inline-formula id="IE70"><mml:math id="IM70" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">V</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. We compute the Cholesky decomposition <inline-formula id="IE71"><mml:math id="IM71" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mi mathvariant="bold-italic">V</mml:mi><mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> for each <italic toggle="yes">k</italic> and again linearly transform the data. Let <inline-formula id="IE72"><mml:math id="IM72" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> denote the 4D tensor containing the 3D tensors <inline-formula id="IE73"><mml:math id="IM73" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">k</italic>. Then, we can transform the data via
<disp-formula id="E11"><label>(11)</label><mml:math id="M11" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
 <disp-formula id="E12"><label>(12)</label><mml:math id="M12" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula></p>
        <p>Now similar to above, we compute the coefficients <inline-formula id="IE74"><mml:math id="IM74" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, the residual sums of squares <inline-formula id="IE75"><mml:math id="IM75" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and the test statistics <inline-formula id="IE76"><mml:math id="IM76" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">t</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> for all <italic toggle="yes">q</italic> permutations and <italic toggle="yes">b</italic> SNPs at once:
<disp-formula id="E13"><label>(13)</label><mml:math id="M13" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup></mml:mrow></mml:math></disp-formula>
 <disp-formula id="E14"><label>(14)</label><mml:math id="M14" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup><mml:msup><mml:mo>−</mml:mo><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">Y</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:msup><mml:msup><mml:mo>−</mml:mo><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">β</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>
 <disp-formula id="E15"><label>(15)</label><mml:math id="M15" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">t</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="true">)</mml:mo><mml:mfrac><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mn>0</mml:mn><mml:mi>b</mml:mi></mml:msubsup><mml:msup><mml:mo>−</mml:mo><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>where
<disp-formula id="E16"><label>(16)</label><mml:math id="M16" display="block" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mo stretchy="false">˜</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="true">(</mml:mo><mml:mrow><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:msup><mml:mrow/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mi mathvariant="bold-italic">C</mml:mi><mml:mi>b</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msubsup><mml:mi mathvariant="bold-italic">X</mml:mi><mml:mi>j</mml:mi><mml:mi>b</mml:mi></mml:msubsup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow><mml:mi>T</mml:mi></mml:msup></mml:mrow><mml:mo stretchy="true">)</mml:mo></mml:mrow></mml:mrow></mml:math></disp-formula>is a 4D tensor in <inline-formula id="IE77"><mml:math id="IM77" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi><mml:mo>×</mml:mo><mml:mi>c</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE78"><mml:math id="IM78" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>q</mml:mi></mml:msup><mml:msubsup><mml:mi mathvariant="normal">RSS</mml:mi><mml:mn>0</mml:mn><mml:mi>b</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:msup><mml:mo>ℝ</mml:mo><mml:mrow><mml:mi>q</mml:mi><mml:mo>×</mml:mo><mml:mi>b</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> contains <italic toggle="yes">b</italic> copies of the RSS of the null model for each permutation.</p>
      </sec>
    </sec>
    <sec>
      <title>2.4 Implementation</title>
      <p>The <monospace>permGWAS</monospace> framework is implemented in Python3 using commonly used libraries for scientific computing, such as <monospace>numpy</monospace> (<xref rid="btac455-B8" ref-type="bibr">Harris <italic toggle="yes">et al.</italic>, 2020</xref>), <monospace>scipy</monospace> (<xref rid="btac455-B29" ref-type="bibr">Virtanen <italic toggle="yes">et al.</italic>, 2020</xref>), <monospace>pandas</monospace> (<xref rid="btac455-B17" ref-type="bibr">McKinney <italic toggle="yes">et al.</italic>, 2011</xref>) and <monospace>PyTorch</monospace> (<xref rid="btac455-B18" ref-type="bibr">Paszke <italic toggle="yes">et al.</italic>, 2019</xref>) to support efficient tensor arithmetic as well as multi-core and GPU support. In addition, specialized packages for estimating the variance components [<monospace>limix</monospace> (<xref rid="btac455-B14" ref-type="bibr">Lippert <italic toggle="yes">et al.</italic>, 2014</xref>)] and file IO (<monospace>h5py</monospace>, <monospace>pandas-plink</monospace>) are used. <monospace>permGWAS</monospace> can be used as a standalone command line tool or directly within Python. Our implementation allows both, the usage of multi-core CPU architectures with and without GPU support. To ensure a smooth experience on different environments and machines, we provide a standardized Docker environment. Our framework supports several common genotype and phenotype file formats, including HDF5, CSV and PLINK (<xref rid="btac455-B20" ref-type="bibr">Purcell <italic toggle="yes">et al.</italic>, 2007</xref>). Further, <monospace>permGWAS</monospace> supports filtering for minor allele frequency and also including one or more covariates to account for certain fixed effects. By default, <monospace>permGWAS</monospace> computes as a kinship matrix the realized relationship kernel (<xref rid="btac455-B9" ref-type="bibr">Hayes <italic toggle="yes">et al.</italic>, 2009</xref>); however, it is also possible to provide any other type of genetic similarity matrix. In order to run the tool on different machines, the batch size for the simultaneous computation of univariate tests as well as the batch size for permutation-based tests can be adjusted. To reduce the memory footprint, it is also possible to load genotypic data continuously in chunks from a HDF5 file, in case a pre-computed kinship matrix is provided. All code is open-source and publicly available on GitHub, including more details and information on how to run the tool: <ext-link xlink:href="https://github.com/grimmlab/permGWAS" ext-link-type="uri">https://github.com/grimmlab/permGWAS</ext-link>.</p>
    </sec>
    <sec>
      <title>2.5 Data and simulations</title>
      <p>We evaluate the performance and runtime of <monospace>permGWAS</monospace> on simulated data as well as on publicly available genotype and phenotype data from the model plant <italic toggle="yes">A.thaliana</italic>.</p>
      <sec>
        <label>2.5.1</label>
        <title><italic toggle="yes">Arabidopsis thaliana</italic> data</title>
        <p>As genotypic data a fully imputed SNP-Matrix of 2029 accessions and approximately 3M segregating markers is used (<xref rid="btac455-B1" ref-type="bibr">Arouisse <italic toggle="yes">et al.</italic>, 2020</xref>). Phenotypic data for 516 different traits were downloaded from the central and manually curated AraPheno database (<xref rid="btac455-B21" ref-type="bibr">Seren <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btac455-B28" ref-type="bibr">Togninalli <italic toggle="yes">et al.</italic>, 2020</xref>).</p>
      </sec>
      <sec>
        <label>2.5.2</label>
        <title>Simulations</title>
        <p>Artificial phenotypes were simulated for 200 random <italic toggle="yes">A.thaliana</italic> accessions using the fully imputed SNP matrix from above. For each synthetic phenotype, 1001 SNPs with a minor allele frequency of 5% or higher were randomly sampled, where 1 SNP was considered causative and the other 1000 were used to simulate the polygenic background. Here, each background SNP contributed a small random amount, drawn from a normal distribution with <italic toggle="yes">μ </italic>= 0 and <inline-formula id="IE79"><mml:math id="IM79" display="inline" overflow="scroll"><mml:mrow><mml:mo>σ</mml:mo><mml:mo>=</mml:mo><mml:mn>0.1</mml:mn></mml:mrow></mml:math></inline-formula> to the phenotypic value. Random noise drawn from a gamma or normal distribution was added, such that the polygenic background accounts for 70% of the total phenotypic variance. Finally, a fixed effect for the causative SNP was added to explain roughly 20% of the total genetic variance. In this manner, 6 different sets containing 50 phenotypes each, were simulated. The sets differed by the distribution of the noise, where 1 set had normally distributed noise and the other 5 sets used gamma-distributed noise with shape parameters of 0.1, 1, 2, 3 and 4. For evaluation, <monospace>permGWAS</monospace> was applied with 100 permutations on each of the 300 simulated phenotypes. Each phenotype was classified as true positive (TP) if any SNP in a 50 kbp window around the causative marker was significant. In addition, each phenotype was classified as false positive (FP) if any SNP outside the 50 kbp window around the causative marker was significant. In this way, a phenotype can be true positive and false positive at the same time. We define the phenotype-wise FDR as FDR := <inline-formula id="IE80"><mml:math id="IM80" display="inline" overflow="scroll"><mml:mfrac><mml:mrow><mml:mi mathvariant="normal">FP</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">TP</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="normal">FP</mml:mi><mml:mo> </mml:mo></mml:mrow></mml:mfrac></mml:math></inline-formula>. These values were calculated separately for the <italic toggle="yes">P</italic>-value thresholds based on both, the Bonferroni and permutation-based thresholds.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results and discussion</title>
    <p>In the following, we evaluate <monospace>permGWAS</monospace> with respect to runtime and statistical power using simulated data, as well as more than 500 public available phenotypes from the model species <italic toggle="yes">A.thaliana</italic>.</p>
    <sec>
      <title>3.1 Results on synthetic data</title>
      <sec>
        <label>3.1.1</label>
        <title>Runtime comparisons</title>
        <p>We analyzed the runtime of <monospace>permGWAS</monospace> with respect to (i) the number of markers, (ii) the number of samples and (iii) the number of permutations. For all runtime experiments, we used data from a flowering time related phenotype in <italic toggle="yes">A.thaliana</italic>, FT10 (flowering time at 10 degrees; DOI: 10.21958/phenotype:261) (<xref rid="btac455-B26" ref-type="bibr">The 1001 Genomes Consortium, 2016</xref>), and down- and up-sampled the phenotype and corresponding SNP matrix to generate synthetic data with varying numbers of samples. We compared the runtime of <monospace>permGWAS</monospace> with two state-of-the-art and commonly used LMMs, <monospace>EMMAX</monospace> (<xref rid="btac455-B11" ref-type="bibr">Kang <italic toggle="yes">et al.</italic>, 2010</xref>) and <monospace>FaST-LMM</monospace> (<xref rid="btac455-B13" ref-type="bibr">Lippert <italic toggle="yes">et al.</italic>, 2011</xref>). For both, we used the binary C/C++ implementations. All runtime experiments were conducted on the same machine running Ubuntu 20.04.3 LTS with a total of 52 CPUs, 756 GB of memory and 4 NVIDIA GeForce RTX 3090 GPUs, each with 24 GB of memory. For our experiments, we restricted the number of CPUs to 1 and 8 cores and a single GPU using dedicated Docker containers. We took the mean of the runtime over three runs for each experiment.</p>
        <p>First, we compared the runtime on environments with a single CPU and GPU. For this purpose, we fixed the number of samples to 1000 and varied the markers between 10<sup>4</sup> and <inline-formula id="IE81"><mml:math id="IM81" display="inline" overflow="scroll"><mml:mrow><mml:mn>5</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mn>6</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> to evaluate the effect of an increasing number of SNPs. As summarized in <xref rid="btac455-F2" ref-type="fig">Figure 2A</xref>, all models show a linear dependency with respect to the number of SNPs. <monospace>permGWAS</monospace> (the GPU and CPU version) outperforms both, the binary implementation of <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace>. Our dockerized Python implementation of permGWAS is almost one order of magnitude faster than the C/C++ implementation of <monospace>FaST-LMM</monospace> (for 1000 samples and <inline-formula id="IE82"><mml:math id="IM82" display="inline" overflow="scroll"><mml:mrow><mml:mn>5</mml:mn><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mn>6</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula> markers 0.33 and 2.8 h, respectively). This can be mainly explained due to the batch-wise computation of several univariate statistical tests simultaneously.</p>
        <fig position="float" id="btac455-F2">
          <label>Fig. 2.</label>
          <caption>
            <p>Runtime comparison of <monospace>permGWAS</monospace> versus <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace>. Note that all axes are log-scaled. (<bold>A</bold>) Computational time as function of number of SNPs with fixed number of 1000 samples. (<bold>B</bold>) Computational time as function of number of samples with 10<sup>6</sup> markers each. (<bold>C</bold>) Computational time as function of number of permutations with 1000 samples and 10<sup>6</sup> markers each. Dashed lines for <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace> are estimated based on the computational time for 1000 samples and 10<sup>6</sup> markers times the number of permutations</p>
          </caption>
          <graphic xlink:href="btac455f2" position="float"/>
        </fig>
        <p>Next, to estimate the effect of the number of samples on the runtime, we fixed the number of SNPs to 10<sup>6</sup> and varied the number of samples between 100 and 10<sup>4</sup>. In <xref rid="btac455-F2" ref-type="fig">Figure 2B</xref>, we can observe that <monospace>EMMAX</monospace> outperforms all other comparison partners for sample sizes smaller than 500. However, the runtime increases quickly for larger samples sizes. Again <monospace>permGWAS</monospace> outperforms both comparison partners by at least one order of magnitude. Here, the runtime of the GPU version of <monospace>permGWAS</monospace> for 10<sup>4</sup> samples and 10<sup>6</sup> markers was approximately 1.7 h, while for <monospace>FaST-LMM</monospace> and <monospace>EMMAX</monospace> the runtime was more than 7 and 19 h, respectively.</p>
        <p>Finally, to compare the runtime of the permutation-based approach, we fixed the number of samples to 1000 and the number of SNPs to 10<sup>6</sup> and conducted between 10 and 500 permutations with <monospace>permGWAS</monospace> using a single GPU architecture versus a single CPU. Since <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace> only perform one univariate test at a time and are not designed for permutation-based tests, we took the runtime for 1000 samples and 10<sup>6</sup> markers from the previous experiment and estimated the runtime for permutations by multiplying with the number of permutations. This is just an estimate of the minimal runtime, since no data pre-processing and post-processing steps are included (e.g. preparing permuted phenotypes, merging result files to estimate adjusted <italic toggle="yes">P</italic>-values/thresholds). The advantage of the GPU architecture becomes most obvious when using permutations, as illustrated in <xref rid="btac455-F2" ref-type="fig">Figure 2C</xref>. The GPU version of <monospace>permGWAS</monospace> is at least an order of magnitude faster than the CPU version of <monospace>permGWAS</monospace>. More importantly, <monospace>permGWAS</monospace> (GPU) is more than one order of magnitude faster than <monospace>EMMAX</monospace> and more than two orders of magnitude faster than <monospace>FaST-LMM</monospace>. Even for 1000 samples, 10<sup>6</sup> SNPs and 500 permutations <monospace>permGWAS</monospace> (GPU) takes less than 1.8 h. In contrast, <monospace>EMMAX</monospace> would require at least more than 2.7 days, while <monospace>FaST-LMM</monospace> might take more than 11 days for 500 permutations. Results for environments with 8 cores are summarized in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref> and show similar results.</p>
        <p>In addition, we re-analyzed over 500 <italic toggle="yes">A.thaliana</italic> phenotypes with 100 permutations each on a single GPU (Nvidia RTX A5000 with 24 GB RAM) in less than 8 days. The respective runtimes are shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S2</xref>. Notable, for phenotypes with a sample size above 800 individuals, the 24 GB RAM weren’t sufficient and the analysis has been performed on an HPC environment allowing for additional RAM.</p>
        <p>In summary, <monospace>permGWAS</monospace> is more efficient than the commonly used state-of-the-art LMMs, such as <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace>, due to its tensor-based and batch-wise reformulation. Especially when performing GWAS with more than a few hundred of samples and permutations, <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace> take several days to weeks to compute the results, while our implementation only needs a few hours. Although the GPU implementation of <monospace>permGWAS</monospace> is faster than the corresponding CPU implementation, the CPU version still outperforms existing methods.</p>
      </sec>
      <sec>
        <label>3.1.2</label>
        <title>FDR for skewed phenotypes</title>
        <p>Our simulations show that the phenotype-wise FDR increases, if the respective phenotypes become more skewed. Using a static Bonferroni threshold, the phenotype-wise FDR increases from 30% for slightly skewed phenotypes to 50% in the most extreme case (<xref rid="btac455-F3" ref-type="fig">Fig. 3D</xref>). The latter means that in nearly all of the simulated phenotypes, not only true, but also false associations have been found (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>).</p>
        <fig position="float" id="btac455-F3">
          <label>Fig. 3.</label>
          <caption>
            <p>Simulated phenotypes with gamma-distributed noise. Shape parameters of the gamma distributions were set at 4, 3, 2, 1 and 0.1. (<bold>A</bold>) Shape of the gamma distribution. (<bold>B</bold>) Exemplary phenotypic value distribution for each shape parameter. (<bold>C</bold>) Permutation-based thresholds over 50 simulated phenotypes as box plots for each gamma shape parameter. Red dashed line illustrates the fixed Bonferroni significance threshold. (<bold>D</bold>) Phenotype-wise FDR for both the fixed Bonferroni significance threshold and the permutation-based significance threshold</p>
          </caption>
          <graphic xlink:href="btac455f3" position="float"/>
        </fig>
        <p>Noticeably, the permutation-based threshold becomes more and more stringent, if the phenotypic distribution becomes more skewed (<xref rid="btac455-F3" ref-type="fig">Fig. 3C</xref>), thereby controlling the phenotype-based FDR more reliable (<xref rid="btac455-F3" ref-type="fig">Fig. 3D</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). Skewed phenotypic distributions will violate model assumptions, and associations with low <italic toggle="yes">P</italic>-values can arise randomly. This will get controlled by permutations that can account for model violations, as underlying assumptions are also violated in a model without genetic signal. Hence, permutations can control for false associations that arise through non-normal phenotypic distributions.</p>
        <p>On the other hand, for normally distributed phenotypes, the permutation-based threshold is less stringent compared to the Bonferroni threshold (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3C</xref>) and increases the power to recover true associations (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3D</xref>). However, also slightly more false positives are detected. To summarize, simulations suggest that a permutation-based threshold is more flexible compared to a static Bonferroni threshold and will provide a higher power to detect true associations for normally distributed phenotypes, as well as control FDR for skewed phenotypes.</p>
      </sec>
    </sec>
    <sec>
      <title>3.2 Permutation-based GWAS in <italic toggle="yes">Arabidopsis thaliana</italic></title>
      <p>After we highlighted the advantages of a permutation-based threshold with simulated data, we re-analyzed 516 real phenotypes that we have downloaded from the phenotypic data repository AraPheno (<xref rid="btac455-B21" ref-type="bibr">Seren <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btac455-B28" ref-type="bibr">Togninalli <italic toggle="yes">et al.</italic>, 2020</xref>). As expected for real data, many of these are non-normally distributed. Using the Shapiro–Wilk test on the phenotypic data, only 90 phenotypes had a <italic toggle="yes">P</italic>-value &gt; 0.05, indicating a normal distribution (<xref rid="sup1" ref-type="supplementary-material">Supplementary File S1</xref>). As expected by our simulations, we observed a correlation between the phenotypic distribution and the calculated permutation-based threshold (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref>). All but two phenotypes that are normally distributed (Shapiro–Wilk test &gt; 0.05) show a less stringent permutation-based threshold compared to the Bonferroni threshold (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S4</xref> inset). In summary, for the 516 analyzed phenotypes, the permutation-based thresholds are 293 times more stringent and 223 less stringent compared to the Bonferroni threshold. Although, we do not know the ground truth of true and false associations for this data, permutation-based thresholds markedly reduce the overall number of associations, especially for skewed phenotypes. Comparing the 100 most skewed phenotypes (<italic toggle="yes">P</italic>-value from the Shapiro–Wilk test <inline-formula id="IE83"><mml:math id="IM83" display="inline" overflow="scroll"><mml:mrow><mml:mo>&lt;</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>19</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>), nearly all (96) show a significant association using the Bonferroni threshold, while only six of the most normal distributed phenotypes (<italic toggle="yes">P</italic>-value from the Shapiro–Wilk test &gt; 0.02) have a significant association. Using the permutation-based threshold, these numbers change to 53 and 15, respectively (summary results of all analyzes can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary File S1</xref>). <italic toggle="yes">A priori</italic>, there is no reason why skewed phenotypes should more often show true associations. Therefore, the number of reported associations with the permutation-based threshold seems more realistic. In general, we can observe different scenarios: (1) for some cases, a less stringent permutation-based threshold will identify a significant signal that would not have been significant using the Bonferroni threshold (<xref rid="btac455-F4" ref-type="fig">Fig. 4A</xref>). This scenario is true for 22 different phenotypes, especially if their phenotypic distribution is normal (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S5A</xref>); (2) We observed 123 cases, where the Bonferroni threshold would indicate significant associations, but the permutation-based threshold would rather assume that these are false positives (<xref rid="btac455-F4" ref-type="fig">Fig. 4B</xref>) and (3) for another 111 cases, even after using a permutation-based threshold, skewed phenotypes show still significant associations (<xref rid="btac455-F4" ref-type="fig">Fig. 4C</xref>). Most phenotypes that belong to scenario (2) or (3) are non-normally distributed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S5B and C</xref>).</p>
      <fig position="float" id="btac455-F4">
        <label>Fig. 4.</label>
        <caption>
          <p>GWAS of three different <italic toggle="yes">A.thaliana</italic> phenotypes. Manhattan plots display the associations of all markers for the three phenotypes (<bold>A</bold>) #744 (<ext-link xlink:href="https://arapheno.1001genomes.org/phenotype/744/" ext-link-type="uri">https://arapheno.1001genomes.org/phenotype/744/</ext-link>), which is nearly normal distributed, (<bold>B</bold>) #118 (<ext-link xlink:href="https://arapheno.1001genomes.org/phenotype/118/" ext-link-type="uri">https://arapheno.1001genomes.org/phenotype/118/</ext-link>) and (<bold>C</bold>) #325 (<ext-link xlink:href="https://arapheno.1001genomes.org/phenotype/325/" ext-link-type="uri">https://arapheno.1001genomes.org/phenotype/325/</ext-link>). Where the two latter phenotypes are non-normally distributed. The Bonferroni threshold is denoted by a red horizontal dashed line and the respective permutation-based threshold by a horizontal blue line</p>
        </caption>
        <graphic xlink:href="btac455f4" position="float"/>
      </fig>
      <p>Although follow-up experiments would be needed to confirm that associations deemed positive in the scenarios (1) and (3) are true positives, anecdotally many of this candidates seem plausible.</p>
    </sec>
    <sec>
      <label>3.3</label>
      <title>Number of permutations and minor allele frequencies</title>
      <p>In the previous paragraph, we emphasized the benefits of using a permutation-based threshold instead of a Bonferroni threshold. We performed 100 permutations for each phenotype, but more permutations could give a more accurate estimate of the threshold. To investigate the effect of the number of permutations on the permutation-based threshold, we performed additional permutations for two different <italic toggle="yes">A.thaliana</italic> phenotypes. One phenotype is nearly normally distributed, while the other is markedly skewed (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S6A and C</xref>). We performed 100, 200, 300, 400, 500 and 1000 permutations. Here the used 5% threshold is nearly identical and stable across the different number of permutations performed for both phenotypes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S6B and D</xref>). Thus, our empirical results suggest that 100 permutations will give rise to a reliable estimate of the threshold and enable a fast analysis of many phenotypes and or huge data.</p>
      <p>Next, we analyzed if minor allele frequency has an effect on false positives and the respective calculated permutation-based thresholds. It has been suggested that rare variants can easily associate with phenotypic extremes and thus that false positive associations of rare alleles are more prone in non-normally distributed phenotypes (<xref rid="btac455-B19" ref-type="bibr">Peloso <italic toggle="yes">et al.</italic>, 2016</xref>). If this is true, a permutation-based threshold should be able to account for excessive false associations of rare alleles. Using <monospace>permGWAS</monospace> with increasing minor allele filters and thereby excluding rare alleles from the analysis, the Bonferroni threshold is just reflecting the lower amount of markers tested, while the permutation-based threshold has a non-linear dependency. For normally distributed phenotypes, the change in the permutation-based threshold is similar to Bonferroni (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S7A</xref>), while for a skewed phenotype a clear effect of excluding rare alleles is observed. As an example, in the analysis of phenotype #372 (DOI: 10.21958/phenotype:372) from <italic toggle="yes">A.thaliana</italic>, the calculated permutation-based threshold increases from <inline-formula id="IE84"><mml:math id="IM84" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>16</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> if all markers are analyzed to <inline-formula id="IE85"><mml:math id="IM85" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> if only alleles with a minor allele count of at least 10 are considered (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S7B</xref>). For skewed phenotypes, the permutation-based threshold is clearly dependent on the allele frequency. <monospace>permGWAS</monospace> can compute and provide a distinct threshold for different allele frequencies that is—unlike Bonferroni—dependent on the phenotpic distribution and not the amount of markers tested.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Conclusions</title>
    <p>We introduced <monospace>permGWAS</monospace>, an efficient LMM for GWAS with population structure correction and permutation-based significance thresholds that can reliably control false positives for phenotypes with skewed distributions. Our method uses a 4D tensor reformulation of a LMM using a permutation strategy proposed by Westfall–Young (<xref rid="btac455-B30" ref-type="bibr">Westfall and Young, 1993</xref>) to compute univariate association tests batch-wise, on both modern multi-core and GPU environments. We compared <monospace>permGWAS</monospace> in terms of runtime with <monospace>EMMAX</monospace> (<xref rid="btac455-B11" ref-type="bibr">Kang <italic toggle="yes">et al.</italic>, 2010</xref>) and <monospace>FaST-LMM</monospace> (<xref rid="btac455-B13" ref-type="bibr">Lippert <italic toggle="yes">et al.</italic>, 2011</xref>), two state-of-the-art LMMs. We could show that <monospace>permGWAS</monospace> outperformed both models in terms of computational and statistical performance. Especially, <monospace>permGWAS</monospace> is highly efficient in a permutation-based setting, due to the 4D tensor reformulation and the available GPU support [2 h for <monospace>permGWAS (GPU)</monospace> versus several days for <monospace>EMMAX</monospace> and <monospace>FaST-LMM</monospace> for 1000 samples, 10<sup>6</sup> markers and 500 permutations]. These reformulations enable performing permutation-based thresholds in practice.</p>
    <p>We demonstrated through simulations and the re-analyses of publicly available data from the model plant species <italic toggle="yes">A.thaliana</italic> that the use of a permutation-based threshold has many advantages compared to the classically used Bonferroni threshold. Bonferroni correction is thought as a very conservative way to control false positives in GWAS, and indeed for normal distributed phenotypes, we could show that the permutation-based threshold is less stringent and can identify more true positive associations. Further, for non-normally distributed phenotypes, as often observed in biological data, the permutation-based threshold is quite often even more stringent. Here, our data suggest that we could reliably control false positives under those scenarios. A sensible next step would be to investigate how to extend <monospace>permGWAS</monospace> to Generalized LMMs, e.g. to properly handle the analysis of binary traits. To summarize, we highlight that the use of permutation-based thresholds should be considered the default choice in any GWAS and with <monospace>permGWAS</monospace> we provide the tool to enable this.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This paper was published as part of a special issue financially supported by ECCB2022. The work was supported in parts by funds of the Federal Ministry of Education and Research (BMBF), Germany [01—S21038B, D.G.G.].</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btac455_Supplementary_Data</label>
      <media xlink:href="btac455_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac455-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Arouisse</surname><given-names>B.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>Imputation of 3 million SNPs in the Arabidopsis regional mapping population</article-title>. <source>Plant J</source>., <volume>102</volume>, <fpage>872</fpage>–<lpage>882</lpage>.<pub-id pub-id-type="pmid">31856318</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Atwell</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2010</year>) <article-title>Genome-wide association study of 107 phenotypes in <italic toggle="yes">Arabidopsis thaliana</italic> inbred lines</article-title>. <source>Nature</source>, <volume>465</volume>, <fpage>627</fpage>–<lpage>631</lpage>.<pub-id pub-id-type="pmid">20336072</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bonferroni</surname><given-names>C.</given-names></string-name></person-group> (<year>1936</year>) <article-title>Teoria statistica delle classi e calcolo delle probabilita</article-title>. <source>Pubblicazioni del R Istituto Superiore di Scienze Economiche e Commericiali di Firenze</source>, <volume>8</volume>, <fpage>3</fpage>–<lpage>62</lpage>.</mixed-citation>
    </ref>
    <ref id="btac455-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Che</surname><given-names>R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) <article-title>An adaptive permutation approach for genome-wide association study: evaluation and recommendations for use</article-title>. <source>BioData Min</source>., <volume>7</volume>, <fpage>9</fpage>.<pub-id pub-id-type="pmid">24976866</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B5">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Freudenthal</surname><given-names>J.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) GWAS-flow: a GPU accelerated framework for efficient permutation based genome-wide association studies. <italic toggle="yes">BioRxiv</italic>, <fpage>783100</fpage>.</mixed-citation>
    </ref>
    <ref id="btac455-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Grimm</surname><given-names>D.G.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) <article-title>easyGWAS: a cloud-based platform for comparing the results of genome-wide association studies</article-title>. <source>Plant Cell</source>, <volume>29</volume>, <fpage>5</fpage>–<lpage>19</lpage>.<pub-id pub-id-type="pmid">27986896</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gumpinger</surname><given-names>A.C.</given-names></string-name></person-group>  <etal>et al</etal>; <collab>International Headache Genetics Consortium</collab>. (<year>2021</year>) <article-title>Network-guided search for genetic heterogeneity between gene pairs</article-title>. <source>Bioinformatics</source>, <volume>37</volume>, <fpage>57</fpage>–<lpage>65</lpage>.<pub-id pub-id-type="pmid">32573681</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>C.R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>Array programming with NumPy</article-title>. <source>Nature</source>, <volume>585</volume>, <fpage>357</fpage>–<lpage>362</lpage>.<pub-id pub-id-type="pmid">32939066</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hayes</surname><given-names>B.J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2009</year>) <article-title>Increased accuracy of artificial selection by using the realized relationship matrix</article-title>. <source>Genet. Res. (Camb.)</source>, <volume>91</volume>, <fpage>47</fpage>–<lpage>60</lpage>.<pub-id pub-id-type="pmid">19220931</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>H.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2008</year>) <article-title>Efficient control of population structure in model organism association mapping</article-title>. <source>Genetics</source>, <volume>178</volume>, <fpage>1709</fpage>–<lpage>1723</lpage>.<pub-id pub-id-type="pmid">18385116</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>H.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2010</year>) <article-title>Variance component model to account for sample structure in genome-wide association studies</article-title>. <source>Nat. Genet</source>., <volume>42</volume>, <fpage>348</fpage>–<lpage>354</lpage>.<pub-id pub-id-type="pmid">20208533</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Korte</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2012</year>) <article-title>A mixed-model approach for genome-wide association studies of correlated traits in structured populations</article-title>. <source>Nat. Genet</source>., <volume>44</volume>, <fpage>1066</fpage>–<lpage>1071</lpage>.<pub-id pub-id-type="pmid">22902788</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lippert</surname><given-names>C.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) <article-title>Fast linear mixed models for genome-wide association studies</article-title>. <source>Nat. Methods</source>, <volume>8</volume>, <fpage>833</fpage>–<lpage>835</lpage>.<pub-id pub-id-type="pmid">21892150</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B14">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Lippert</surname><given-names>C.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) LIMIX: genetic analysis of multiple traits. <italic toggle="yes">BioRxiv.</italic></mixed-citation>
    </ref>
    <ref id="btac455-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Llinares-López</surname><given-names>F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Genome-wide detection of intervals of genetic heterogeneity associated with complex traits</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>i240</fpage>–<lpage>i249</lpage>.<pub-id pub-id-type="pmid">26072488</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Loh</surname><given-names>P.-R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Efficient Bayesian mixed-model analysis increases association power in large cohorts</article-title>. <source>Nat. Genet</source>., <volume>47</volume>, <fpage>284</fpage>–<lpage>290</lpage>.<pub-id pub-id-type="pmid">25642633</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McKinney</surname><given-names>W.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) <article-title>pandas: a foundational Python library for data analysis and statistics</article-title>. <source>Python High Performance Sci. Comput</source>., <volume>14</volume>, <fpage>1</fpage>–<lpage>9</lpage>.</mixed-citation>
    </ref>
    <ref id="btac455-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Paszke</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>PyTorch: an imperative style, high-performance deep learning library</article-title>. <source>Adv. Neural Inf. Process. Syst</source>., <volume>32</volume>.</mixed-citation>
    </ref>
    <ref id="btac455-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Peloso</surname><given-names>G.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Phenotypic extremes in rare variant study designs</article-title>. <source>Eur. J. Hum. Genet</source>., <volume>24</volume>, <fpage>924</fpage>–<lpage>930</lpage>.<pub-id pub-id-type="pmid">26350511</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Purcell</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2007</year>) <article-title>PLINK: a tool set for whole-genome association and population-based linkage analyses</article-title>. <source>Am. J. Hum. Genet</source>., <volume>81</volume>, <fpage>559</fpage>–<lpage>575</lpage>.<pub-id pub-id-type="pmid">17701901</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Seren</surname><given-names>Ü.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>). <article-title>AraPheno: a public database for <italic toggle="yes">Arabidopsis thaliana</italic> phenotypes</article-title>. <source>Nucleic Acids Res</source>., <volume>45</volume>, <fpage>D1054</fpage>–<lpage>D1059</lpage>.<pub-id pub-id-type="pmid">27924043</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shen</surname><given-names>X.</given-names></string-name>, <string-name><surname>Rönnegård</surname><given-names>L.</given-names></string-name></person-group> (<year>2013</year>) <article-title>Issues with data transformation in genome-wide association studies for phenotypic variability</article-title>. <source>F1000Res</source>, <volume>2</volume>, <fpage>200</fpage>. [pmid].<pub-id pub-id-type="pmid">24555098</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Storey</surname><given-names>J.D.</given-names></string-name>, <string-name><surname>Tibshirani</surname><given-names>R.</given-names></string-name></person-group> (<year>2003</year>) <article-title>Statistical significance for genomewide studies</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>100</volume>, <fpage>9440</fpage>–<lpage>9445</lpage>.<pub-id pub-id-type="pmid">12883005</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sun</surname><given-names>X.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2013</year>) <article-title>What is the significance of difference in phenotypic variability across SNP genotypes?</article-title>  <source>Am. J. Hum. Genet</source>., <volume>93</volume>, <fpage>390</fpage>–<lpage>397</lpage>. 23910463[pmid].<pub-id pub-id-type="pmid">23910463</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B25">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Swiel</surname><given-names>Y.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2022</year>) FPGA acceleration of GWAS permutation testing. <italic toggle="yes">bioRxiv.</italic></mixed-citation>
    </ref>
    <ref id="btac455-B26">
      <mixed-citation publication-type="journal"><collab>The 1001 Genomes Consortium</collab>. (<year>2016</year>) <article-title>1,135 genomes reveal the global pattern of polymorphism in <italic toggle="yes">Arabidopsis thaliana</italic></article-title>. <source>Cell</source>, <volume>166</volume>, <fpage>481</fpage>–<lpage>491</lpage>.<pub-id pub-id-type="pmid">27293186</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Todesco</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>Massive haplotypes underlie ecotypic differentiation in sunflowers</article-title>. <source>Nature</source>, <volume>584</volume>, <fpage>602</fpage>–<lpage>607</lpage>.<pub-id pub-id-type="pmid">32641831</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Togninalli</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>AraPheno and the AraGWAS Catalog 2020: a major database update including RNA-seq and knockout mutation data for <italic toggle="yes">Arabidopsis thaliana</italic></article-title>. <source>Nucleic Acids Res</source>., <volume>48</volume>, <fpage>D1063</fpage>–<lpage>D1068</lpage>.<pub-id pub-id-type="pmid">31642487</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Virtanen</surname><given-names>P.</given-names></string-name></person-group>  <etal>et al</etal>; <collab>SciPy 1.0 Contributors</collab>. (<year>2020</year>) <article-title>Scipy 1.0: fundamental algorithms for scientific computing in python</article-title>. <source>Nat. Methods</source>, <volume>17</volume>, <fpage>261</fpage>–<lpage>272</lpage>.<pub-id pub-id-type="pmid">32015543</pub-id></mixed-citation>
    </ref>
    <ref id="btac455-B30">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Westfall</surname><given-names>P.H.</given-names></string-name>, <string-name><surname>Young</surname><given-names>S.S.</given-names></string-name></person-group> (<year>1993</year>) <source>Resampling-Based Multiple Testing: Examples and Methods for p-Value Adjustment</source>. <volume>Vol. 279</volume>. <publisher-name>John Wiley &amp; Sons, New York</publisher-name>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4262078</article-id>
    <article-id pub-id-type="pmid">25128196</article-id>
    <article-id pub-id-type="publisher-id">6686</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-15-281</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>BESST - Efficient scaffolding of large fragmented assemblies</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Sahlin</surname>
          <given-names>Kristoffer</given-names>
        </name>
        <address>
          <email>ksahlin@kth.se</email>
        </address>
        <xref ref-type="aff" rid="Aff47"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Vezzi</surname>
          <given-names>Francesco</given-names>
        </name>
        <address>
          <email>francesco.vezzi@scilifelab.se</email>
        </address>
        <xref ref-type="aff" rid="Aff47"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nystedt</surname>
          <given-names>Björn</given-names>
        </name>
        <address>
          <email>bjorn.nystedt@scilifelab.se</email>
        </address>
        <xref ref-type="aff" rid="Aff48"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lundeberg</surname>
          <given-names>Joakim</given-names>
        </name>
        <address>
          <email>joakim.lundeberg@scilifelab.se</email>
        </address>
        <xref ref-type="aff" rid="Aff49"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Arvestad</surname>
          <given-names>Lars</given-names>
        </name>
        <address>
          <email>lars.arvestad@scilifelab.se</email>
        </address>
        <xref ref-type="aff" rid="Aff50"/>
      </contrib>
      <aff id="Aff47"><label/>Science for Life Laboratory, School of Computer Science and Communication, KTH Royal Institute of Technology, Solna, Sweden </aff>
      <aff id="Aff48"><label/>Science for Life Laboratory, Department of Biochemistry and Biophysics, Stockholm University, Stockholm, Sweden </aff>
      <aff id="Aff49"><label/>Science for Life Laboratory, School of Biotechnology, Division of Gene Technology, KTH Royal Institute of Technology, Stockholm, Sweden </aff>
      <aff id="Aff50"><label/>Swedish e-Science Research Centre (SeRC), Department of Numerical Analysis and Computer Science, Stockholm University, Stockholm, Sweden </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>8</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>8</month>
      <year>2014</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2014</year>
    </pub-date>
    <volume>15</volume>
    <issue>1</issue>
    <elocation-id>281</elocation-id>
    <history>
      <date date-type="received">
        <day>11</day>
        <month>1</month>
        <year>2014</year>
      </date>
      <date date-type="accepted">
        <day>18</day>
        <month>7</month>
        <year>2014</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Sahlin et al.; licensee BioMed Central Ltd. 2014</copyright-statement>
      <license license-type="open-access">
        <license-p>This article is published under license to BioMed Central Ltd. This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly credited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>The use of short reads from High Throughput Sequencing (HTS) techniques is now commonplace in <italic>de novo</italic> assembly. Yet, obtaining contiguous assemblies from short reads is challenging, thus making scaffolding an important step in the assembly pipeline. Different algorithms have been proposed but many of them use the number of read pairs supporting a linking of two contigs as an indicator of reliability. This reasoning is intuitive, but fails to account for variation in link count due to contig features.</p>
        <p>We have also noted that published scaffolders are only evaluated on small datasets using output from only one assembler. Two issues arise from this. Firstly, some of the available tools are not well suited for complex genomes. Secondly, these evaluations provide little support for inferring a software’s general performance.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We propose a new algorithm, implemented in a tool called BESST, which can scaffold genomes of all sizes and complexities and was used to scaffold the genome of <italic>P. abies</italic> (20 Gbp). We performed a comprehensive comparison of BESST against the most popular stand-alone scaffolders on a large variety of datasets. Our results confirm that some of the popular scaffolders are not practical to run on complex datasets. Furthermore, no single stand-alone scaffolder outperforms the others on all datasets. However, BESST fares favorably to the other tested scaffolders on GAGE datasets and, moreover, outperforms the other methods when library insert size distribution is wide.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>We conclude from our results that information sources other than the quantity of links, as is commonly used, can provide useful information about genome structure when scaffolding.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/1471-2105-15-281) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genome assembly</kwd>
      <kwd>Scaffolding</kwd>
      <kwd>Genome analysis</kwd>
      <kwd>Mate pair next-generation sequencing</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2014</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>Recent high-throughput sequencing (HTS) technologies are attractive for <italic>de novo</italic> assembly projects since they produce millions of short DNA-sequences (referred to as <italic>reads</italic>) at low cost. However, these reads are only a couple of hundred base pairs long making it difficult for an assembler (<italic>e.g.</italic>, [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]) to reconstruct the genome. As a result, the output of an assembly often consists of <italic>contigs</italic>, <italic>i.e.</italic>, subsets of reads assembled into longer fragments of genomic sequence.</p>
    <p>However, HTS-technologies provide protocols for creating read pairs that can be used to increase the contiguity of an assembly. We define a <italic>read pair</italic> as two reads that are sequenced at a known distance and orientation where the distance between the reads, is referred to as <italic>insert size</italic>. If the two reads within a read pair belong to different contigs <italic>c</italic><sub><italic>a</italic></sub> and <italic>c</italic><sub><italic>b</italic></sub>, a <italic>link</italic> is created between <italic>c</italic><sub><italic>a</italic></sub> and <italic>c</italic><sub><italic>b</italic></sub>, see Figure <xref rid="Fig1" ref-type="fig">1</xref>a. From this link, we can infer a relative order, orientation and distance between <italic>c</italic><sub><italic>a</italic></sub> and <italic>c</italic><sub><italic>b</italic></sub>. <fig id="Fig1"><label>Figure 1</label><caption><p><bold>Notation.</bold><bold>a)</bold> A read pair with insert size <italic>x</italic> (unknown distance) aligns to two contigs <italic>c</italic>
<sub><italic>a</italic></sub> and <italic>c</italic>
<sub><italic>b</italic></sub>, thus creates a link between <italic>c</italic>
<sub><italic>a</italic></sub> and <italic>c</italic>
<sub><italic>b</italic></sub>. The read pair gives rise to observations <italic>o</italic>
<sub><italic>a</italic></sub>,<italic>o</italic>
<sub><italic>b</italic></sub> and they are used to infer the unknown distance <italic>d</italic>. Distances for <italic>o</italic>
<sub><italic>a</italic></sub>,<italic>o</italic>
<sub><italic>b</italic></sub>,<italic>d</italic> and <italic>r</italic> are illustrated. <bold>b)</bold> Graph structure and notations of the scaffold graph <inline-formula id="IEq1"><inline-graphic xlink:href="12859_2014_6686_IEq1_HTML.gif"/></inline-formula>. Two contigs <italic>c</italic>
<sub><italic>a</italic></sub> and <italic>c</italic>
<sub><italic>b</italic></sub> connected by an edge <italic>e</italic> created from alignments of read pairs.</p></caption><graphic xlink:href="12859_2014_6686_Fig1_HTML" id="d30e464"/></fig></p>
    <p>The process of linking and ordering contigs is called <italic>scaffolding</italic>. In addition to paired reads, information such as reference sequences of related organisms [<xref ref-type="bibr" rid="CR3">3</xref>], restriction maps [<xref ref-type="bibr" rid="CR4">4</xref>] and RNA-seq data [<xref ref-type="bibr" rid="CR5">5</xref>], can be used for contig linking. However, reference based assembly is not applicable to most <italic>de novo</italic> sequencing projects, restriction maps are often not available, and RNA-seq data only have coverage over genes and contains no information about distance between reads which makes contig placement ambiguous. This makes read pair information the most commonly used (and often also the only applicable) source of information for scaffolding.</p>
    <p>Unfortunately, scaffolding with read pairs poses challenges: reads may create spurious links because of read errors, heterozygosity and the repeated nature of the genome, and these spurious links make ordering and orientations among the contigs ambiguous. Hence, the scaffolding problem can be summarized as detecting and utilizing the correct links in order to find a consistent ordering and orientation of the contigs. The existing formalizations of scaffolding have been proven to be NP-complete, but it is still unclear if these formulations, even when finding the optimal solution with respect to the objective, solves the real (<italic>i.e.</italic> biological) problem. These approaches have focused on structural properties of the graph induced by contig links, with little emphasis on assessing correctness of individual links. Our approach focuses on removing incorrect links and employing sophisticated statistics to evaluate whether linking reads come from the underlying library distribution, or from misalignments. Only in a second step are structural properties used.</p>
    <p>The following section discusses the formalization of scaffolding and related work, as well as gives an outline and motivation for our work. Our algorithm, realized in an implementation called BESST (Bias Estimating Stepwise Scaffolding Tool), is presented in detail in the Methods section. The algorithm scales well and is practical on very large and complex genomes, as proved by its use in the <italic>Picea abies</italic> genome project (20 Gbp) [<xref ref-type="bibr" rid="CR6">6</xref>]. Furthermore, it excels at scaffolding with wider insert size distributions.</p>
    <p>We present an evaluation of BESST against other popular stand-alone scaffolders on a large variety of datasets from GAGE [<xref ref-type="bibr" rid="CR7">7</xref>]. Compared to previous assessments of novel scaffolding methodologies, the results obtained from our evaluation allows us to draw conclusions about the general performance of stand-alone scaffolders to a much higher extent. Another recent extensive evaluation of scaffolding tools is given in [<xref ref-type="bibr" rid="CR8">8</xref>]. In our study we primarily compare stand-alone scaffolders because they have access to the same amount of information and are applicable in the same contexts (<italic>e.g.</italic> scaffolding with mate pair libraries that was not use in the original assembly). Nonetheless, we also include GAGE results on integrated scaffolders.</p>
    <p>Our results indicate that no single scaffolder outperforms the others on all datasets although in total, BESST shows the most favorable results among stand-alone scaffolders. Furthermore, our algorithm outperforms other stand-alone scaffolders when the library insert-size distribution has a high standard deviation. Although there is wide performance variation around integrated scaffolders, overall, GAGE results demonstrate that Allpaths-LG’s assemblies scaffolded with its integrated scaffolder have the highest quality.</p>
    <sec id="Sec2">
      <title>The problem</title>
      <sec id="Sec3">
        <title>Formalizing Scaffolding</title>
        <p>As input for scaffolding we assume a set of contigs <inline-formula id="IEq2"><inline-graphic xlink:href="12859_2014_6686_IEq2_HTML.gif"/></inline-formula> produced by an assembler and a number of read pairs <inline-formula id="IEq3"><inline-graphic xlink:href="12859_2014_6686_IEq3_HTML.gif"/></inline-formula> from a read pair library that have been aligned to the contigs. These read pairs have an insert size distribution with mean <italic>μ</italic> and standard deviation <italic>σ</italic>. By aligning all reads in <inline-formula id="IEq4"><inline-graphic xlink:href="12859_2014_6686_IEq4_HTML.gif"/></inline-formula> on <inline-formula id="IEq5"><inline-graphic xlink:href="12859_2014_6686_IEq5_HTML.gif"/></inline-formula> we can define the graph <inline-formula id="IEq6"><inline-graphic xlink:href="12859_2014_6686_IEq6_HTML.gif"/></inline-formula> as follows: Each contig gives rise to precisely two vertices <italic>c</italic><sub><italic>i</italic>,<italic>L</italic></sub> and <italic>c</italic><sub><italic>i</italic>,<italic>R</italic></sub> in <inline-formula id="IEq7"><inline-graphic xlink:href="12859_2014_6686_IEq7_HTML.gif"/></inline-formula> where <italic>c</italic><sub><italic>i</italic>,<italic>L</italic></sub> denotes it’s 5’ end and <italic>c</italic><sub><italic>i</italic>,<italic>R</italic></sub> denotes it’s 3’ end (see Figure <xref rid="Fig1" ref-type="fig">1</xref>b). In a read pair, if <inline-formula id="IEq8"><inline-graphic xlink:href="12859_2014_6686_IEq8_HTML.gif"/></inline-formula> aligns to precisely one contig <italic>c</italic><sub><italic>k</italic></sub> and <inline-formula id="IEq9"><inline-graphic xlink:href="12859_2014_6686_IEq9_HTML.gif"/></inline-formula> aligns to precisely one contig <italic>c</italic><sub><italic>m</italic></sub>, with <italic>k</italic> ≠ <italic>m</italic>, this read pair induces a relative orientation and an approximate distance between <italic>c</italic><sub><italic>k</italic></sub> and <italic>c</italic><sub><italic>m</italic></sub>. This relationship is represented as an edge <italic>e</italic>, see Figure <xref rid="Fig1" ref-type="fig">1</xref>b. We let <bold>V</bold> and <bold>E</bold> denote the set of vertices and edges respectively in <inline-formula id="IEq10"><inline-graphic xlink:href="12859_2014_6686_IEq10_HTML.gif"/></inline-formula>. Given <inline-formula id="IEq11"><inline-graphic xlink:href="12859_2014_6686_IEq11_HTML.gif"/></inline-formula>, several formulations and methods have been proposed for scaffolding. We will discuss some of them below.</p>
      </sec>
      <sec id="Sec4">
        <title>Problem formulations in related works</title>
        <p>The scaffolding problem (SP) defined by <italic>Huson et al.</italic>[<xref ref-type="bibr" rid="CR9">9</xref>] is a formulation that is commonly referred to. Using their notation, let <inline-formula id="IEq12"><inline-graphic xlink:href="12859_2014_6686_IEq12_HTML.gif"/></inline-formula> be defined as above and let <italic>n</italic> links between two contigs induce a weight <italic>n</italic> on the edge <italic>e</italic> between these two contigs. Furthermore, let <italic>Φ</italic> : <italic>V</italic> → <italic>N</italic> be an ordering, orientation and distance map of <inline-formula id="IEq13"><inline-graphic xlink:href="12859_2014_6686_IEq13_HTML.gif"/></inline-formula>, that is, an assignment of non negative integer coordinates to the vertices <italic>V</italic> in <inline-formula id="IEq14"><inline-graphic xlink:href="12859_2014_6686_IEq14_HTML.gif"/></inline-formula> that preserves the contig lengths. Given such a mapping instance <italic>ϕ</italic>, [<xref ref-type="bibr" rid="CR9">9</xref>] states that an edge <italic>e</italic> between <italic>c</italic><sub><italic>i</italic></sub> and <italic>c</italic><sub><italic>j</italic></sub> is consistent if <italic>c</italic><sub><italic>i</italic></sub> and <italic>c</italic><sub><italic>j</italic></sub> have the correct relative orientation (induced by aligned read pairs), and the distance between <italic>c</italic><sub><italic>i</italic></sub> and <italic>c</italic><sub><italic>j</italic></sub> is approximately correct. Here, approximately correct means that <italic>e</italic> suggests a distance between <italic>c</italic><sub><italic>i</italic></sub> and <italic>c</italic><sub><italic>j</italic></sub> that is less than <italic>μ</italic> + 3 <italic>σ</italic>, a heuristically chosen bound. If an edge does not satisfy these constraints, it is called inconsistent. Huson et al. [<xref ref-type="bibr" rid="CR9">9</xref>] define SP to be the problem of finding a maximum weight consistent edge subset. SP has been used as foundation for a number of other works discussing scaffolding and proposed heuristics for solving it can generally be categorized as either “greedy” or “graph-structure” optimization algorithms.</p>
        <p>Greedy algorithms proposed to solve SP include SSPACE and Bambus [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR11">11</xref>]. SSPACE extends scaffolds in a greedy fashion applying a heuristic stopping criterion. Bambus builds scaffolds greedily with heuristics to remove inconsistent link constraints.</p>
        <p>Graph-structure optimization algorithms that have been proposed to solve the SP are for instance: SOPRA [<xref ref-type="bibr" rid="CR12">12</xref>] formulates a global optimization problem for solving relative contig orientation (exact for simple regions while a simulated annealing approach is employed in more complex regions of the graph). In a second step, read-pair distribution is used to determine the relative positions of contigs within a scaffold. If an inconsistency is found in the positioning step, the link causing the inconsistency is removed and the algorithm restarts at the orientation step. OPERA [<xref ref-type="bibr" rid="CR13">13</xref>] builds scaffolds using the number of inconsistent edges <italic>p</italic> in a subgraph as a design criterion (the subgraph represents a potential scaffold). By treating <italic>p</italic> as fixed, they can obtain a polynomial time algorithm to find an optimal (with respect to a given <italic>p</italic>) solution to their slightly modified version of SP. The algorithm then tries all <italic>p</italic> starting from <italic>p</italic> = 0 and stops when a scaffold can be constructed. SLIQ [<xref ref-type="bibr" rid="CR14">14</xref>] formulates a set of linear inequalities together with majority voting to predict placements of contigs. MIP Scaffolder [<xref ref-type="bibr" rid="CR15">15</xref>] and GRASS [<xref ref-type="bibr" rid="CR16">16</xref>] formulate SP as a mixed integer programming problem, but uses different techniques to find a solution. MIP Scaffolder resolves conflicting regions in the obtained MIP solution using heuristics such as removing edges that are stretched or contracted more than a given threshold. GRASS uses an Expectation-Maximization algorithm. The maximization step obtains degrees of penalties on contig links given fixed contig orientations. The penalties are set according to what magnitude the constraints for a link is violated. If a penalty is higher than a given threshold, the penalty of the link is “de-activated”, <italic>i.e.,</italic> its constraints are not considered. The expectation step is used to obtain the expected contig orientation of links given (the “activated”) penalties set in the maximization step. Links that are activated in the final solution are used for scaffolding.</p>
        <p>There are advantages and disadvantages with these two classes of methods. Algorithms that are solving a local problem using a greedy approach often have better runtime and scale well on larger genomes but use oversimplified methods to find a solution which may only work for some genomes. Graph-structure optimization methods are instead hindered by their time complexity for finding a solution. The runtime scales poorly and it is difficult to predict if such an algorithm will ever finish on a larger dataset (see section Results).</p>
        <p>Additionally, current methods that use insert sizes of paired reads for contig placement are built on false assumptions as we have previously shown [<xref ref-type="bibr" rid="CR17">17</xref>]. This can complicate scaffolding when libraries with large insert-size variation are used.</p>
      </sec>
      <sec id="Sec5">
        <title>Link inconsistency detection</title>
        <p>The methods previously described define SP similar to [<xref ref-type="bibr" rid="CR9">9</xref>] with modifications on how to define a consistent edge. Different heuristics are used between the methods to obtain a solution to SP. Yet, a common denominator is that the number of links supporting an edge is used as an indicator of reliability; edges with many links are preferred and those with few links are avoided. This reasoning is intuitive, but fails to account for variation in link count due to contig features. Firstly, the number of links between two contigs depends on the real (<italic>i.e.</italic>, biologically) distance between the two contigs and on their size [<xref ref-type="bibr" rid="CR17">17</xref>]. Secondly, in SP we face structural features such as repeated regions, heterozygosity, and chimeric contigs. These features create clusters with reads being misaligned which cannot be seen as individual random events. It is our assumption that the number of random, non-structural, misalignments caused by, <italic>e.g.</italic>, sequencing errors are almost negligible compared to the structural misalignments. Link count is therefore a poor indicator of edge reliability.</p>
        <p>We take a different approach to SP and, instead of link count, evaluate edges based on link statistics. When read pairs are mapped to contigs, are they placed on and connecting contigs in a reasonable way? In other words, we want to answer the question: given an edge <italic>e</italic>, is the cluster of read-pairs forming <italic>e</italic> coming from the read-pair library, or are they a consequence of a structural feature? If these reads together show similar properties as the read pair library we are scaffolding with (<italic>e.g.</italic>, mean, standard deviation), the edge is more likely to be correct.</p>
        <p>We propose an algorithm, BESST (Bias-Estimating Stepwise Scaffolding Tool), that puts focus on analyzing the scaffold graph in local regions using statistics to filter out spurious edges created by structural errors. BESST starts scaffolding with contigs that meet a length criterion for the library (definition given in section Methods). It then continues with smaller contigs in an optional step. If several different paired-read libraries are used, BESST scaffolds with one library at a time in an increasing order of insert size of the library. Separating contigs with respect to size is mainly due to two reasons: <bold>(i)</bold> Links between large contigs make gap size estimation more stable (see [<xref ref-type="bibr" rid="CR17">17</xref>]) giving a more robust statistical analysis. <bold>(ii)</bold> The gain in speed is significant since correct regions are simple path components in <inline-formula id="IEq15"><inline-graphic xlink:href="12859_2014_6686_IEq15_HTML.gif"/></inline-formula> which are found by visiting each edge once, thus, the time complexity is <italic>O</italic> (|<bold>E</bold>|).</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results and discussion</title>
    <p><italic>De novo</italic> assembly validation is a task as difficult as <italic>de novo</italic> assembly itself. Recent evaluation efforts like GAGE [<xref ref-type="bibr" rid="CR7">7</xref>] and Assemblathon [<xref ref-type="bibr" rid="CR18">18</xref>] encountered several problems in identifying the best assembler. GAGE clearly demonstrated how the same assembler can have <italic>completely</italic> different performances (<italic>e.g.</italic>, quality) even on similar datasets (<italic>e.g.</italic>, bacterial genomes). This predicament was also supported in recent evaluation efforts [<xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]. Despite this, as noted by [<xref ref-type="bibr" rid="CR21">21</xref>], all new published assemblers and scaffolders have been compared to the then-existing tools highlighting better performances on a specific dataset using some specific metrics. We argue that evaluation of tools should be performed on multiple datasets and/or scenarios to avoid over-generalization and confirmation bias. For standalone scaffolders without stated dependencies, it is advisable to test on output from several assemblers to investigate overall performance.</p>
    <p>We have tried to address the above issues in our evaluation of BESST, using a wide range of different datasets and assemblers. BESST has been compared with three other state-of-the-art scaffolders: OPERA, SOPRA, and SSPACE.</p>
    <sec id="Sec7">
      <title>Datasets</title>
      <p>Evaluation has been performed using the three GAGE datasets [<xref ref-type="bibr" rid="CR7">7</xref>] which gave us the possibility to evaluate scaffolders on three highly different genomes: <italic>Staphylococcus aureus</italic>, <italic>Rhodobacter spaeroides</italic>, and Human chromosome 14 (hereafter referred to as Hs14). All three datasets have been sequenced with high coverage Illumina paired-end (<italic>i.e.</italic>, PE-reads) and mate-pairs (<italic>i.e.</italic>, MP-reads) libraries. Moreover each organism has been assembled with up to 8 different assemblers.</p>
      <p>GAGE provides high quality MP-libraries with narrow insert size distributions with standard deviation lower than 10% of the mean. However, narrow insert size libraries cannot be obtained in assembly projects where only small amounts of DNA are available. The MP libraries obtained in these cases are wide and the standard deviation can be up to 50% of the mean. BESST uses a technique that works well for larger uncertainties in insert size as this was one of the design assumptions. Therefore we have included the MP library provided in [<xref ref-type="bibr" rid="CR22">22</xref>] which is characterised by a large variation in insert size. We used picard [<xref ref-type="bibr" rid="CR23">23</xref>] to estimate the mean and standard deviation of insert size to 2600 and 1250 base pairs respectively. This library will from now on be referred to as the “wide MP” library. An insert size histogram of this distribution is available in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S2.</p>
    </sec>
    <sec id="Sec8">
      <title>Evaluation</title>
      <p>We scaffolded all 23 available (contig level) GAGE-assemblies with BESST v1.0.4.2, and the standalone scaffolders OPERA v1.2, SOPRA v1.4.6, and SSPACE-basic v2.0 using both PE and MP libraries provided by GAGE. Results for assembler-integrated scaffolders, as computed by GAGE, are also presented, but we primarily compare with the standalone scaffolders because they have access to the same amount of information as BESST and are applicable in similar situations. Note that in GAGE evaluation, Bambus2 was used both for contig and scaffold assembly (with unitigs provided by Celera Assembler).</p>
      <p>All scaffolders were run with default parameters (see Additional file <xref rid="MOESM1" ref-type="media">1</xref> for details) on a 1 TB RAM machine equipped with 24 CPUs. Read pairs were mapped to contigs using BWA v0.6.1 for BESST, OPERA, and SOPRA. SSPACE-basic is distributed with Bowtie, thus we used the included version of Bowtie (v0.12.5) for alignments with SSPACE. SSPACE also have a commercial version that supports alignments with BWA. The difference in read alignment method may have an impact on the scaffolding result but we did not investigate this. Out of the 124 scaffolding experiments, 117 successfully terminated within our runtime limit of 48 hours (OPERA and SOPRA were not able to scaffold the Hs14 dataset within this time limit in 3 and 4 cases respectively). Moreover, for the <italic>Rhodobacter</italic> genome, we also scaffolded the 8 available contig-level assemblies employing the wide MP library. To summarize, a total of 156 scaffolding experiments have been run, and of these, 149 terminated within the runtime limit and were evaluated.</p>
      <p>Each of the 149 results have been evaluated with GAGE validation scripts <ext-link ext-link-type="uri" xlink:href="http://gage.cbcb.umd.edu/results/gage-validation.tar.gz">http://gage.cbcb.umd.edu/results/gage-validation.tar.gz</ext-link>for scaffolds, using the available reference sequence. For each assembly, we used GAGE evaluation scripts to compute:</p>
      <p>
        <list list-type="bullet">
          <list-item>
            <p> Scaffold errors: number of indels, inversions, relocations, and translocations (as defined by [<xref ref-type="bibr" rid="CR7">7</xref>]).</p>
          </list-item>
          <list-item>
            <p> Scaffold NG50: size of the longest scaffold such that the sum of the lengths of all scaffolds longer than it is at least half of the (known) reference genome size.</p>
          </list-item>
          <list-item>
            <p> Scaffold E-size: The expected scaffold size at a randomly chosen position on the genome (introduced and defined by [<xref ref-type="bibr" rid="CR7">7</xref>]). The E-size is calculated as <inline-formula id="IEq16"><inline-graphic xlink:href="12859_2014_6686_IEq16_HTML.gif"/></inline-formula> where <italic>L</italic><sub><italic>c</italic></sub> is the length of scaffold <italic>c</italic> and <italic>G</italic> is the genome length estimated by the sum of all scaffold lengths. E-size is computed similarly for contigs.</p>
          </list-item>
          <list-item>
            <p> Scaffold corrNG50: NG50 after scaffolds have been broken at every position a scaffold error is found.</p>
          </list-item>
          <list-item>
            <p> Scaffold corrE-size: E-size after scaffolds have been broken at every position a scaffold error is found.</p>
          </list-item>
        </list>
      </p>
      <p>Moreover, for each entry, we also compute:</p>
      <p>
        <list list-type="bullet">
          <list-item>
            <p> Number of initial contigs and number of produced scaffolds.</p>
          </list-item>
          <list-item>
            <p> Time used by the scaffolder (without considering time required to align reads).</p>
          </list-item>
        </list>
      </p>
      <p>NG50 is a common metric to evaluate an assembly, often offering a good indication of the connectivity as it gives the weighted median contig length. However, the size of one scaffold can be misleading as a measure of the general connectivity of an assembly (as discussed in [<xref ref-type="bibr" rid="CR7">7</xref>]) Consider, for example, a simple case of two error free assemblies <italic>a</italic> and <italic>b</italic> of a 1000 bp genome. If assembly <italic>a</italic> has one contig of 499 bp and 5 contigs of 100 bp while assembly <italic>b</italic> has 10 contigs of 100 bp, both will have an NG50 of 100 bp. The measure will therefore not expose the difference in quality between <italic>a</italic> and <italic>b</italic>. However, the respective E-sizes for assembly <italic>a</italic> and <italic>b</italic> are 299 and 100, and thus better capturing the average assembly fragmentation.</p>
    </sec>
    <sec id="Sec9">
      <title>Results</title>
      <p>Tables <xref rid="Tab1" ref-type="table">1</xref>, <xref rid="Tab2" ref-type="table">2</xref> and <xref rid="Tab3" ref-type="table">3</xref> presents the scaffolding performances for high quality libraries provided by GAGE. With the evaluation metrics provided here, no stand-alone scaffolder is a clear winner (as expected [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]). In general, BESST produces favorable results on all of the organisms. Contrary to the results in [<xref ref-type="bibr" rid="CR8">8</xref>], SOPRA does not perform well on the metrics provided by GAGE. The results for assembler-integrated scaffolders, as computed by GAGE, are presented alongside the stand-alone scaffolders results. There is a large variation in performance of integrated scaffolders but in general, BESST fares well also here. We note that only Allpaths-LG has better scaffolded assembly on all three GAGE datasets. Scaffolds from Bambus2 on <italic>S. aureus</italic> and SGA on Hs14 are two other instances where the integrated scaffolder outperforms the stand-alone ones.<table-wrap id="Tab1"><label>Table 1</label><caption><p><bold><italic>Staphylococcus aureus</italic></bold><bold>GAGE data</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="2">BESST</th><th colspan="2">OPERA</th><th colspan="2">SOPRA</th><th colspan="2">SSPACE</th><th colspan="2">Integrated scaffolder</th><th>Unscaffolded</th></tr></thead><tbody><tr><td align="left"/><td align="center"><bold>CorrEsize</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td></tr><tr><td align="left">ABySS</td><td align="center">263,4</td><td align="center"><bold>1</bold></td><td align="center"><bold>316,7</bold></td><td align="center">12</td><td align="center">103,4</td><td align="center">2</td><td align="center">126,3</td><td align="center">5</td><td align="center">35,3</td><td align="center">1</td><td align="center">31,4</td></tr><tr><td align="left">Allpaths-LG</td><td align="center">436,4</td><td align="center"><bold>0</bold></td><td align="center">607,4</td><td align="center">12</td><td align="center">295,5</td><td align="center"><bold>0</bold></td><td align="center"><bold>1030,0</bold></td><td align="center">1</td><td align="center">1136,2</td><td align="center">0</td><td align="center">90,0</td></tr><tr><td align="left">Bambus2</td><td align="center"><bold>827,3</bold></td><td align="center"><bold>1</bold></td><td align="center">560,0</td><td align="center">4</td><td align="center">125,2</td><td align="center">2</td><td align="center">665,7</td><td align="center">2</td><td align="center">1119,5</td><td align="center">0</td><td align="center">19,6</td></tr><tr><td align="left">MSR-CA</td><td align="center">744,7</td><td align="center">3</td><td align="center">302,4</td><td align="center">11</td><td align="center">117,4</td><td align="center"><bold>0</bold></td><td align="center"><bold>781,6</bold></td><td align="center">2</td><td align="center">999,9</td><td align="center">3</td><td align="center">50,3</td></tr><tr><td align="left">SGA</td><td align="center">75,1</td><td align="center"><bold>0</bold></td><td align="center"><bold>920,1</bold></td><td align="center">3</td><td align="center">239,9</td><td align="center">6</td><td align="center">32,6</td><td align="center">2</td><td align="center">162,9</td><td align="center">1</td><td align="center">4,7</td></tr><tr><td align="left">SOAPdenovo</td><td align="center"><bold>346,9</bold></td><td align="center"><bold>0</bold></td><td align="center">333,1</td><td align="center">7</td><td align="center">227,2</td><td align="center"><bold>0</bold></td><td align="center">286,7</td><td align="center">5</td><td align="center">229,3</td><td align="center">0</td><td align="center">68,0</td></tr><tr><td align="left">Velvet</td><td align="center">204,2</td><td align="center">4</td><td align="center"><bold>236,8</bold></td><td align="center">5</td><td align="center">154,4</td><td align="center"><bold>1</bold></td><td align="center">162,2</td><td align="center">12</td><td align="center">194,6</td><td align="center">17</td><td align="center">48,5</td></tr><tr><td align="left">SUM</td><td align="center">2898,1</td><td align="center"><bold>9</bold></td><td align="center"><bold>3276,6</bold></td><td align="center">54</td><td align="center">1263,0</td><td align="center">11</td><td align="center">3085,1</td><td align="center">29</td><td align="center"/><td align="center"/><td align="center"/></tr></tbody></table><table-wrap-foot><p>The numbers in bold face style indicate the best corrected E-size and number of errors among the stand-alone scaffolders for each assembly.</p></table-wrap-foot></table-wrap><table-wrap id="Tab2"><label>Table 2</label><caption><p><bold><italic>Rhodobacter sphaeroides</italic></bold><bold>, GAGE data</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="2">BESST</th><th colspan="2">OPERA</th><th colspan="2">SOPRA</th><th colspan="2">SSPACE</th><th colspan="2">Integrated scaffolder</th><th>Unscaffolded</th></tr></thead><tbody><tr><td align="left"/><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td></tr><tr><td align="left">ABySS</td><td align="center"><bold>70,2</bold></td><td align="center">13</td><td align="center">65,8</td><td align="center">20</td><td align="center">44,9</td><td align="center">17</td><td align="center">34,7</td><td align="center"><bold>4</bold></td><td align="center">73,4</td><td align="center">3</td><td align="center">6,9</td></tr><tr><td align="left">Allpaths-LG</td><td align="center"><bold>2005,7</bold></td><td align="center"><bold>0</bold></td><td align="center">852,1</td><td align="center">4</td><td align="center">425,4</td><td align="center">2</td><td align="center">1271,9</td><td align="center">1</td><td align="center">2401,7</td><td align="center">0</td><td align="center">35,9</td></tr><tr><td align="left">Bambus2</td><td align="center">1426,0</td><td align="center">4</td><td align="center">1446,0</td><td align="center">8</td><td align="center"><bold>1469,0</bold></td><td align="center">3</td><td align="center">789,9</td><td align="center"><bold>1</bold></td><td align="center">1348,4</td><td align="center">2</td><td align="center">16,2</td></tr><tr><td align="left">CABOG</td><td align="center"><bold>474,0</bold></td><td align="center"><bold>2</bold></td><td align="center">362,6</td><td align="center">7</td><td align="center">293,4</td><td align="center"><bold>2</bold></td><td align="center">419,1</td><td align="center">4</td><td align="center">211,3</td><td align="center">5</td><td align="center">21,5</td></tr><tr><td align="left">MSR-CA</td><td align="center"><bold>1757,5</bold></td><td align="center">3</td><td align="center">573,5</td><td align="center">8</td><td align="center">138,2</td><td align="center"><bold>1</bold></td><td align="center">1579,8</td><td align="center">2</td><td align="center">2001,1</td><td align="center">5</td><td align="center">21,6</td></tr><tr><td align="left">SGA</td><td align="center">100,5</td><td align="center">6</td><td align="center"><bold>148,3</bold></td><td align="center"><bold>5</bold></td><td align="center">105,7</td><td align="center">41</td><td align="center">44,9</td><td align="center">9</td><td align="center">48,0</td><td align="center">1</td><td align="center">3,2</td></tr><tr><td align="left">SOAPdenovo</td><td align="center"><bold>1551,2</bold></td><td align="center"><bold>0</bold></td><td align="center">841,5</td><td align="center">7</td><td align="center">1477,1</td><td align="center">3</td><td align="center">1500,6</td><td align="center">3</td><td align="center">687,6</td><td align="center">0</td><td align="center">18,6</td></tr><tr><td align="left">Velvet</td><td align="center">332,9</td><td align="center"><bold>2</bold></td><td align="center"><bold>336,1</bold></td><td align="center">10</td><td align="center">175,6</td><td align="center">11</td><td align="center">329,6</td><td align="center">6</td><td align="center">348,1</td><td align="center">19</td><td align="center">16,7</td></tr><tr><td align="left">SUM</td><td align="center"><bold>7718,1</bold></td><td align="center"><bold>30</bold></td><td align="center">4626,0</td><td align="center">69</td><td align="center">4129,2</td><td align="center">80</td><td align="center">5970,5</td><td align="center"><bold>30</bold></td><td align="center"/><td align="center"/><td align="center"/></tr></tbody></table><table-wrap-foot><p>The numbers in bold face style indicate the best corrected E-size and number of errors among the stand-alone scaffolders for each assembly.</p></table-wrap-foot></table-wrap><table-wrap id="Tab3"><label>Table 3</label><caption><p><bold>Hs14, GAGE data</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="2">BESST</th><th colspan="2">OPERA</th><th colspan="2">SOPRA</th><th colspan="2">SSPACE</th><th colspan="2">Integrated scaffolder</th><th>Unscaffolded</th></tr></thead><tbody><tr><td align="left"/><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td></tr><tr><td align="left">ABySS</td><td align="center"><bold>21,6</bold></td><td align="center"><bold>13</bold></td><td align="center">15,8</td><td align="center">200</td><td align="center">-</td><td align="center">-</td><td align="center">15,3</td><td align="center">47</td><td align="center">2,8</td><td align="center">9</td><td align="center">3,1</td></tr><tr><td align="left">Allpaths-LG</td><td align="center">513,6</td><td align="center">32</td><td align="center">311,0</td><td align="center">104</td><td align="center">194,9</td><td align="center">17</td><td align="center"><bold>559,0</bold></td><td align="center"><bold>22</bold></td><td align="center">4652,3</td><td align="center">45</td><td align="center">27,1</td></tr><tr><td align="left">Bambus2</td><td align="center">88,2</td><td align="center"><bold>75</bold></td><td align="center">61,7</td><td align="center">331</td><td align="center">-</td><td align="center">-</td><td align="center"><bold>99,0</bold></td><td align="center">109</td><td align="center">157,6</td><td align="center">143</td><td align="center">6,3</td></tr><tr><td align="left">CABOG</td><td align="center"><bold>421,9</bold></td><td align="center">31</td><td align="center">349,1</td><td align="center">77</td><td align="center">234,0</td><td align="center"><bold>19</bold></td><td align="center">411,0</td><td align="center">23</td><td align="center">347,7</td><td align="center">597</td><td align="center">30,7</td></tr><tr><td align="left">MSR-CA</td><td align="center">51,3</td><td align="center"><bold>95</bold></td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center"><bold>51,9</bold></td><td align="center">146</td><td align="center">111,9</td><td align="center">1068</td><td align="center">5,9</td></tr><tr><td align="left">SGA</td><td align="center"><bold>57,2</bold></td><td align="center">58</td><td align="center">3,5</td><td align="center"><bold>39</bold></td><td align="center">22,2</td><td align="center">2253</td><td align="center">24,8</td><td align="center">42</td><td align="center">89,9</td><td align="center">19</td><td align="center">3,7</td></tr><tr><td align="left">SOAPdenovo</td><td align="center"><bold>94,1</bold></td><td align="center">211</td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center">-</td><td align="center">75,3</td><td align="center"><bold>205</bold></td><td align="center">99,2</td><td align="center">268</td><td align="center">9,8</td></tr><tr><td align="left">Velvet</td><td align="center">35,7</td><td align="center"><bold>52</bold></td><td align="center">-</td><td align="center">-</td><td align="center"><bold>75,4</bold></td><td align="center">734</td><td align="center">22,6</td><td align="center">140</td><td align="center">26,6</td><td align="center">9156</td><td align="center">3,0</td></tr><tr><td align="left">SUM</td><td align="center"><bold>1283,6</bold></td><td align="center"><bold>567</bold></td><td align="center">741,0</td><td align="center">751</td><td align="center">526,5</td><td align="center">3023</td><td align="center">1259,0</td><td align="center">734</td><td align="center"/><td align="center"/><td align="center"/></tr></tbody></table><table-wrap-foot><p>The numbers in bold face style indicate the best corrected E-size and number of errors among the stand-alone scaffolders for each assembly.</p></table-wrap-foot></table-wrap></p>
      <p>High quality datasets where insert size variation does not deviate much from the mean are not always available (see Additional file <xref rid="MOESM1" ref-type="media">1</xref> for a discussion of this). The wide MP library has higher variation, and thus, increases the difficulty in scaffolding by introducing more uncertainty for contig placement. Table <xref rid="Tab4" ref-type="table">4</xref> shows scaffolding results for the wide MP library. Considering this scenario, BESST is outperforming the other stand-alone scaffolders having the highest total connectivity whilst giving the fewest errors. OPERA shows a slightly higher connectivity in some cases yet produces 17 times more errors in total. Withstanding the SGA assembly, SOPRA shows few errors in all cases. Yet in most cases, SOPRA also shows extremely low connectivity close to the original contig assembly. Similarly, SSPACE is shown to produce few errors but also struggle with connectivity. As mentioned, larger variation in library insert-size introduces more uncertainty of distance estimates and placement of contigs. Thus, scaffolding becomes more error prone. We believe that our performance here is a consequence of BESST’s ability to infer correct link-statistics despite wide library distribution.<table-wrap id="Tab4"><label>Table 4</label><caption><p><bold><italic>Rhodobacter sphaeroides</italic></bold><bold>on GAGE contig assemblies using the wide MP library</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="2">BESST</th><th colspan="2">OPERA</th><th colspan="2">SOPRA</th><th colspan="2">SSPACE</th><th>Unscaffolded</th></tr></thead><tbody><tr><td align="left"/><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td><td align="center"><bold>err</bold></td><td align="center"><bold>CorrEsize (kbp)</bold></td></tr><tr><td align="left">ABySS</td><td align="center">17,6</td><td align="center">5</td><td align="center"><bold>19,7</bold></td><td align="center">51</td><td align="center">6,7</td><td align="center">4</td><td align="center">9,9</td><td align="center"><bold>1</bold></td><td align="center">6,9</td></tr><tr><td align="left">Allpaths-LG</td><td align="center"><bold>318,1</bold></td><td align="center"><bold>0</bold></td><td align="center">314,5</td><td align="center">1</td><td align="center">44,4</td><td align="center"><bold>0</bold></td><td align="center">70,3</td><td align="center">2</td><td align="center">35,9</td></tr><tr><td align="left">Bambus2</td><td align="center"><bold>460,6</bold></td><td align="center"><bold>0</bold></td><td align="center">267,1</td><td align="center">0</td><td align="center">93,9</td><td align="center"><bold>0</bold></td><td align="center">137,9</td><td align="center"><bold>0</bold></td><td align="center">16,2</td></tr><tr><td align="left">CABOG</td><td align="center"><bold>199,8</bold></td><td align="center">3</td><td align="center">97,3</td><td align="center">4</td><td align="center">22,3</td><td align="center"><bold>0</bold></td><td align="center">33,5</td><td align="center"><bold>0</bold></td><td align="center">21,5</td></tr><tr><td align="left">MSR-CA</td><td align="center">192,1</td><td align="center">1</td><td align="center"><bold>203,7</bold></td><td align="center">6</td><td align="center">24,0</td><td align="center"><bold>0</bold></td><td align="center">38,1</td><td align="center">1</td><td align="center">21,6</td></tr><tr><td align="left">SGA</td><td align="center">4,3</td><td align="center"><bold>0</bold></td><td align="center"><bold>13,3</bold></td><td align="center">111</td><td align="center">3,3</td><td align="center">12</td><td align="center">6,5</td><td align="center">3</td><td align="center">3,2</td></tr><tr><td align="left">SOAPdenovo</td><td align="center"><bold>756,7</bold></td><td align="center"><bold>0</bold></td><td align="center">720,5</td><td align="center">10</td><td align="center">156,2</td><td align="center"><bold>0</bold></td><td align="center">206,4</td><td align="center">2</td><td align="center">18,6</td></tr><tr><td align="left">Velvet</td><td align="center"><bold>350,2</bold></td><td align="center"><bold>2</bold></td><td align="center">62,3</td><td align="center">4</td><td align="center">17,8</td><td align="center">3</td><td align="center">30,9</td><td align="center">3</td><td align="center">16,7</td></tr><tr><td align="left">SUM</td><td align="center"><bold>2299,3</bold></td><td align="center"><bold>11</bold></td><td align="center">1698,4</td><td align="center">187</td><td align="center">368,7</td><td align="center">19</td><td align="center">533,6</td><td align="center">12</td><td align="center"/></tr></tbody></table><table-wrap-foot><p>The numbers in bold face style indicate the best corrected E-size and number of errors among the stand-alone scaffolders for each assembly. Note that the corrected E-size for SOPRA is slightly less than the corrected contig size in the ABySS assembly. This can happen for low contiguity scaffolded assemblies that contains more bases than the contig assemblies (5,0Mbp and 4,5Mbp respectively on this instance). The difference in number of bases is due to the facts that GAGE evaluation script only compute statistics on contigs and scaffolds that are longer than 200bp. GAGE evaluation script returned an error when computing statistics for seven, two and one scaffolds on SSPACE results of ABySS, CABOG and MSR-CA assemblies respectively. On SOPRA and OPERA results, 1 respectively 3 scaffolds of the SGA assembly returned this error. We removed these scaffolds from the evaluation in order to compute the results. In all cases, the scaffolds removed summed up to a total length of less than 110 kbp. Thus, this has a negligible (either positive or negative) effect on E-size computation and an eventual positive effect on the number of errors. Results for BESST contained no scaffolds giving this error.</p></table-wrap-foot></table-wrap></p>
      <p>Tables <xref rid="Tab5" ref-type="table">5</xref>, <xref rid="Tab6" ref-type="table">6</xref>, <xref rid="Tab7" ref-type="table">7</xref> and <xref rid="Tab8" ref-type="table">8</xref> illustrates the types of errors that the stand-alone scaffolders make on the different data sets and Tables <xref rid="Tab9" ref-type="table">9</xref>, <xref rid="Tab10" ref-type="table">10</xref>, <xref rid="Tab11" ref-type="table">11</xref> and <xref rid="Tab12" ref-type="table">12</xref> shows runtime of the scaffolders excluding alignment time. An upper bound on runtime was set to 48 hours. BESST and SSPACE present good time scalability in contrast to SOPRA and OPERA which did not finish after 48 hours on 3 and 4 Hs14 instances respectively.<table-wrap id="Tab5"><label>Table 5</label><caption><p><bold>Types of errors on</bold><bold><italic>S. aureus</italic></bold><bold>summed over all assemblies</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Assembly</th><th>BESST</th><th>OPERA</th><th>SOPRA</th><th>SSPACE</th></tr></thead><tbody><tr><td align="left">Indels</td><td align="center">2</td><td align="center">17</td><td align="center">2</td><td align="center">6</td></tr><tr><td align="left">Inversions</td><td align="center">6</td><td align="center">30</td><td align="center">6</td><td align="center">16</td></tr><tr><td align="left">Translocations</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">1</td></tr><tr><td align="left">Relocations</td><td align="center">1</td><td align="center">7</td><td align="center">3</td><td align="center">6</td></tr></tbody></table></table-wrap><table-wrap id="Tab6"><label>Table 6</label><caption><p><bold>Types of errors on</bold><bold><italic>Rhodobacter sphaeroides</italic></bold><bold>summed over all assemblies</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Assembly</th><th>BESST</th><th>OPERA</th><th>SOPRA</th><th>SSPACE</th></tr></thead><tbody><tr><td align="left">Indels</td><td align="center">16</td><td align="center">28</td><td align="center">13</td><td align="center">7</td></tr><tr><td align="left">Inversions</td><td align="center">4</td><td align="center">9</td><td align="center">7</td><td align="center">3</td></tr><tr><td align="left">Translocations</td><td align="center">2</td><td align="center">26</td><td align="center">21</td><td align="center">14</td></tr><tr><td align="left">Relocations</td><td align="center">8</td><td align="center">6</td><td align="center">39</td><td align="center">6</td></tr></tbody></table></table-wrap><table-wrap id="Tab7"><label>Table 7</label><caption><p><bold>Types of errors on Hs14 summed over all assemblies</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Assembly</th><th>BESST</th><th>OPERA</th><th>SOPRA</th><th>SSPACE</th></tr></thead><tbody><tr><td align="left">Indels</td><td align="center">398</td><td align="center">149</td><td align="center">1062</td><td align="center">442</td></tr><tr><td align="left">Inversions</td><td align="center">163</td><td align="center">383</td><td align="center">154</td><td align="center">289</td></tr><tr><td align="left">Translocations</td><td align="center">0</td><td align="center">0</td><td align="center">0</td><td align="center">0</td></tr><tr><td align="left">Relocations</td><td align="center">6</td><td align="center">219</td><td align="center">1807</td><td align="center">3</td></tr></tbody></table></table-wrap><table-wrap id="Tab8"><label>Table 8</label><caption><p><bold>Types of errors on</bold><bold><italic>Rhodobacter sphaeroides</italic></bold><bold>with wide MP library summed over all assemblies</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Assembly</th><th>BESST</th><th>OPERA</th><th>SOPRA</th><th>SSPACE</th></tr></thead><tbody><tr><td align="left">Indels</td><td align="center">5</td><td align="center">87</td><td align="center">4</td><td align="center">3</td></tr><tr><td align="left">Inversions</td><td align="center">3</td><td align="center">5</td><td align="center">1</td><td align="center">0</td></tr><tr><td align="left">Translocations</td><td align="center">1</td><td align="center">9</td><td align="center">1</td><td align="center">7</td></tr><tr><td align="left">Relocations</td><td align="center">2</td><td align="center">86</td><td align="center">13</td><td align="center">2</td></tr></tbody></table></table-wrap><table-wrap id="Tab9"><label>Table 9</label><caption><p><bold>Runtime for scaffolders on</bold><bold><italic>Staphylococcus aureus</italic></bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="4">Runtime (hh:mm:ss)</th></tr></thead><tbody><tr><td align="left"><bold>Assembly</bold></td><td align="center"><bold>BESST</bold></td><td align="center"><bold>OPERA</bold></td><td align="center"><bold>SOPRA</bold></td><td align="center"><bold>SSPACE</bold></td></tr><tr><td align="left">ABySS</td><td align="center">00:00:40</td><td align="center">00:28:47</td><td align="center">01:18:24</td><td align="center">00:00:26</td></tr><tr><td align="left">Allpaths</td><td align="center">00:00:25</td><td align="center">00:00:47</td><td align="center">00:11:56</td><td align="center">00:00:20</td></tr><tr><td align="left">Bambus2</td><td align="center">00:00:26</td><td align="center">00:00:49</td><td align="center">00:22:11</td><td align="center">00:00:21</td></tr><tr><td align="left">MSR-CA</td><td align="center">00:00:26</td><td align="center">00:01:05</td><td align="center">00:19:21</td><td align="center">00:00:21</td></tr><tr><td align="left">SGA</td><td align="center">00:01:03</td><td align="center">00:05:58</td><td align="center">04:30:08</td><td align="center">00:00:51</td></tr><tr><td align="left">SOAPdenovo</td><td align="center">00:00:25</td><td align="center">00:00:50</td><td align="center">00:26:51</td><td align="center">00:00:19</td></tr><tr><td align="left">Velvet</td><td align="center">00:00:27</td><td align="center">00:00:53</td><td align="center">00:39:25</td><td align="center">00:00:21</td></tr></tbody></table></table-wrap><table-wrap id="Tab10"><label>Table 10</label><caption><p><bold>Runtime for scaffolders on</bold><bold><italic>Rhodobacter sphaeroides</italic></bold><bold>with GAGE data</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="4">Runtime (hh:mm:ss)</th></tr></thead><tbody><tr><td align="left"><bold>Assembly</bold></td><td align="center"><bold>BESST</bold></td><td align="center"><bold>OPERA</bold></td><td align="center"><bold>SOPRA</bold></td><td align="center"><bold>SSPACE</bold></td></tr><tr><td align="left">ABySS</td><td align="center">00:01:22</td><td align="center">00:12:38</td><td align="center">01:17:49</td><td align="center">00:00:40</td></tr><tr><td align="left">Allpaths-LG</td><td align="center">00:00:32</td><td align="center">00:01:13</td><td align="center">00:10:35</td><td align="center">00:00:27</td></tr><tr><td align="left">Bambus2</td><td align="center">00:00:33</td><td align="center">00:01:38</td><td align="center">00:10:42</td><td align="center">00:00:25</td></tr><tr><td align="left">CABOG</td><td align="center">00:00:35</td><td align="center">00:00:59</td><td align="center">00:11:13</td><td align="center">00:00:27</td></tr><tr><td align="left">MSR-CA</td><td align="center">00:00:38</td><td align="center">00:01:12</td><td align="center">00:18:10</td><td align="center">00:00:29</td></tr><tr><td align="left">SGA</td><td align="center">00:01:45</td><td align="center">00:01:35</td><td align="center">01:30:44</td><td align="center">00:00:45</td></tr><tr><td align="left">SOAPdenovo</td><td align="center">00:00:33</td><td align="center">00:03:48</td><td align="center">00:18:08</td><td align="center">00:00:27</td></tr><tr><td align="left">Velvet</td><td align="center">00:00:49</td><td align="center">00:01:16</td><td align="center">00:36:54</td><td align="center">00:00:27</td></tr></tbody></table></table-wrap><table-wrap id="Tab11"><label>Table 11</label><caption><p><bold>Runtime for scaffolders on Hs14 with GAGE data (upper bound time requirement was set to 48 hours)</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="4">Runtime (hh:mm:ss)</th></tr></thead><tbody><tr><td align="left"><bold>Assembly</bold></td><td align="center"><bold>BESST</bold></td><td align="center"><bold>OPERA</bold></td><td align="center"><bold>SOPRA</bold></td><td align="center"><bold>SSPACE</bold></td></tr><tr><td align="left">ABySS</td><td align="center">00:19:37</td><td align="center">00:58:22</td><td align="center">-</td><td align="center">00:32:55</td></tr><tr><td align="left">Allpaths-LG</td><td align="center">00:05:06</td><td align="center">00:53:24</td><td align="center">22:02:09</td><td align="center">00:12:55</td></tr><tr><td align="left">Bambus2</td><td align="center">00:07:43</td><td align="center">01:18:06</td><td align="center">-</td><td align="center">00:14:26</td></tr><tr><td align="left">CABOG</td><td align="center">00:04:16</td><td align="center">00:16:16</td><td align="center">11:50:23</td><td align="center">00:08:33</td></tr><tr><td align="left">MSR-CA</td><td align="center">00:11:22</td><td align="center">-</td><td align="center">-</td><td align="center">00:15:38</td></tr><tr><td align="left">SGA</td><td align="center">00:53:42</td><td align="center">00:23:18</td><td align="center">16:15:22</td><td align="center">00:38:42</td></tr><tr><td align="left">SOAPdenovo</td><td align="center">00:07:50</td><td align="center">-</td><td align="center">-</td><td align="center">00:10:46</td></tr><tr><td align="left">Velvet</td><td align="center">00:10:07</td><td align="center">-</td><td align="center">01:27:16</td><td align="center">00:15:35</td></tr></tbody></table></table-wrap><table-wrap id="Tab12"><label>Table 12</label><caption><p><bold>Runtime for scaffolders on</bold><bold><italic>Rhodobacter sphaeroides</italic></bold><bold>with wide mate pair library</bold></p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th colspan="4">Runtime (hh:mm:ss)</th></tr></thead><tbody><tr><td align="left"><bold>Assembly</bold></td><td align="center"><bold>BESST</bold></td><td align="center"><bold>OPERA</bold></td><td align="center"><bold>SOPRA</bold></td><td align="center"><bold>SSPACE</bold></td></tr><tr><td align="left">ABySS</td><td align="center">00:00:52</td><td align="center">00:04:33</td><td align="center">00:14:49</td><td align="center">00:00:50</td></tr><tr><td align="left">Allpaths-LG</td><td align="center">00:00:31</td><td align="center">00:04:03</td><td align="center">00:08:48</td><td align="center">00:00:36</td></tr><tr><td align="left">Bambus2</td><td align="center">00:00:25</td><td align="center">00:03:50</td><td align="center">00:09:08</td><td align="center">00:00:33</td></tr><tr><td align="left">CABOG</td><td align="center">00:00:31</td><td align="center">00:03:10</td><td align="center">00:07:17</td><td align="center">00:00:37</td></tr><tr><td align="left">MSR-CA</td><td align="center">00:00:30</td><td align="center">00:03:46</td><td align="center">00:08:29</td><td align="center">00:00:39</td></tr><tr><td align="left">SGA</td><td align="center">00:00:36</td><td align="center">00:04:06</td><td align="center">00:16:29</td><td align="center">00:00:49</td></tr><tr><td align="left">SOAPdenovo</td><td align="center">00:00:27</td><td align="center">00:04:35</td><td align="center">00:09:54</td><td align="center">00:00:35</td></tr><tr><td align="left">Velvet</td><td align="center">00:00:33</td><td align="center">00:03:58</td><td align="center">00:09:38</td><td align="center">00:00:40</td></tr></tbody></table></table-wrap></p>
    </sec>
  </sec>
  <sec id="Sec10" sec-type="conclusions">
    <title>Conclusion</title>
    <p>We proposed a new algorithm, BESST, for the scaffolding problem. This algorithm works well on both small and large datasets. Moreover, we performed a large evaluation of our software against other popular stand-alone scaffolders. BESST places favorably compared to the other scaffolders on GAGE datasets and outperforms the other methods on libraries with a wide insert-size distribution.</p>
  </sec>
  <sec id="Sec11" sec-type="methods">
    <title>Methods</title>
    <sec id="Sec12">
      <title>Scaffolding of larger contigs</title>
      <p>BESST works on a graph structure <inline-formula id="IEq17"><inline-graphic xlink:href="12859_2014_6686_IEq17_HTML.gif"/></inline-formula> (as defined under <italic>Formalizing scaffolding</italic> in the <italic>Background</italic> section). We apply statistics to assess similarity of observed link distribution to the expected link distribution between contigs larger than <italic>μ</italic>+4<italic>σ</italic>: a value chosen so that it is very unlikely that a properly mapped read pair will span over a contig of such size. This means that a correctly assembled contig that is not a perfect repeat will have at most one true edge to a neighboring contig of this size. However, the graph structure created for contigs of this size is in practice often far from linear due to <italic>e.g.</italic> small repeated regions and chimeric regions and that is why we want a way to assess edge quality.</p>
      <p>The assessment of edges are realized in a score designed to reflect how reads from a read pair library should be placed on contigs if they were in fact correctly assembled close to each other on the genome. It consists of two parts, a link variation score <italic>π</italic><sub><italic>σ</italic></sub> and a link dispersity score <italic>π</italic><sub><italic>ζ</italic></sub>, which we present in following subsections.</p>
      <sec id="Sec13">
        <title>Link variation score (π<sub>σ</sub>):</title>
        <p>Let <italic>c</italic><sub><italic>i</italic></sub>,<italic>c</italic><sub><italic>j</italic></sub> be two correctly assembled contigs at distance <italic>d</italic> away from each other on the genome (with <italic>d</italic> small enough for the read-pair library to span). Reads linking <italic>c</italic><sub><italic>i</italic></sub> and <italic>c</italic><sub><italic>j</italic></sub> follow different distributions depending on the size of <italic>d</italic>, and a good estimate of <italic>d</italic> can be calculated using ML-estimation <inline-formula id="IEq18"><inline-graphic xlink:href="12859_2014_6686_IEq18_HTML.gif"/></inline-formula> with the tool GapEst introduced in [<xref ref-type="bibr" rid="CR17">17</xref>]. Here, we go one step further and answer the question: Given <italic>μ</italic>,<italic>σ</italic> and <inline-formula id="IEq19"><inline-graphic xlink:href="12859_2014_6686_IEq19_HTML.gif"/></inline-formula> obtained from links observed over <italic>c</italic><sub><italic>i</italic></sub> and <italic>c</italic><sub><italic>j</italic></sub>, what should the standard deviation of these links be? We denote this quantity with <italic>σ</italic><sub><italic>o</italic>|<italic>d</italic></sub> (standard deviation of observations given a gap size) to be consistent with the notation used for GapEst. Theorem 1 gives the theoretical expected value of <italic>σ</italic><sub><italic>o</italic>|<italic>d</italic></sub> which is dependent on the read length <italic>r</italic> and the length of the longer and shorter contig giving rise to the gap (denoted <italic>c</italic><sub><italic>min</italic></sub>,<italic>c</italic><sub><italic>max</italic></sub>).</p>
        <p><bold>Theorem 1.</bold><italic>Given μ</italic>,<italic>σ and d</italic>, <italic>σ</italic><sub><italic>o</italic>|<italic>d</italic></sub><italic>is given by</italic><disp-formula id="Equa"><graphic xlink:href="12859_2014_6686_Equa_HTML.gif" position="anchor"/></disp-formula></p>
        <p>where <italic>g</italic> (<italic>d</italic>) and <italic>q</italic> (<italic>d</italic>) are defined in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
        <p><italic>Proof</italic>. Derivation shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
        <p>We now define <italic>π</italic><sub><italic>σ</italic></sub> as
<disp-formula id="Equb"><graphic xlink:href="12859_2014_6686_Equb_HTML.gif" position="anchor"/></disp-formula></p>
        <p>This quantity is a measure of how far observed distances are from the theoretical distance. Note that 0≤<italic>π</italic><sub><italic>σ</italic></sub>≤1.</p>
      </sec>
      <sec id="Sec14">
        <title>
          <bold>
            <italic>Link dispersity score (</italic>
          </bold>
          <bold>
            <italic>π</italic>
          </bold>
          <sub>
            <bold>
              <italic>ζ</italic>
            </bold>
          </sub>
          <bold>
            <italic>)</italic>
          </bold>
        </title>
        <p>The other part of the scoring function is an indicator of how well dispersed links are over the contigs they are connecting, given an estimated gap <italic>d</italic> between them. This dispersity is scored by the two sample Kolmogorov-Smirnov statistic [<xref ref-type="bibr" rid="CR24">24</xref>] that gives a measure of difference in distribution between two independent samples. Letting observations on a contig be a sample, the independence between samples comes from the fact that the aligner has no information about which contigs lie close together, thus links between contigs can be seen as two independent alignment events.</p>
        <p>By observing if link distribution is similar for two linked contigs, we can detect abnormal edges that might come from one or several smaller repeats residing within a contig (see Figure <xref rid="Fig2" ref-type="fig">2</xref>b). We call this score the dispersity score and it is calculated as follows. Before testing, translation and reflection of the observations are necessary (see Figure <xref rid="Fig2" ref-type="fig">2</xref>a).<fig id="Fig2"><label>Figure 2</label><caption><p><bold>Dispersity score.</bold> Illustration of dispersity measurement. Read pairs linking contigs <italic>c</italic>
<sub>1</sub> and <italic>c</italic>
<sub>2</sub> of lengths n and m respectively are transformed to data tested with the KS-test. <bold>(a)</bold> Observations from contig <italic>c</italic>
<sub>1</sub> are translated and reflected on the x-axis while observations from contig <italic>c</italic>
<sub>2</sub> are translated. The two sample KS statistic will indicate high similarity in read distribution. <bold>(b)</bold> Strange placement of linked reads occur. Several explanations are possible. One possible explanation is that contig <italic>c</italic>
<sub>2</sub> is misassembled (chimeric) and another explanation is that <italic>c</italic>
<sub>2</sub> is a correctly assembled contig with small repeated regions solved on assembly level. The repeat might not be present in other contigs from the assembly and therefore, the alignments to these regions are reported as unique. Contig <italic>c</italic>
<sub>2</sub> is however not close to the to contig <italic>c</italic>
<sub>1</sub> on the genome and linked reads fail to place at the non-repeated regions on <italic>c</italic>
<sub>2</sub>. The KS test will indicate low similarity</p></caption><graphic xlink:href="12859_2014_6686_Fig2_HTML" id="d30e4504"/></fig></p>
        <p>Let <italic>n</italic> read pairs link two contigs <italic>c</italic><sub>1</sub> and <italic>c</italic><sub>2</sub> where <italic>c</italic><sub>1</sub> is of length <italic>m</italic>. Recall that <inline-formula id="IEq20"><inline-graphic xlink:href="12859_2014_6686_IEq20_HTML.gif"/></inline-formula> are the <italic>i</italic>th observations on <italic>c</italic><sub>1</sub> and <italic>c</italic><sub>2</sub> respectively. Let <inline-formula id="IEq21"><inline-graphic xlink:href="12859_2014_6686_IEq21_HTML.gif"/></inline-formula>, <inline-formula id="IEq22"><inline-graphic xlink:href="12859_2014_6686_IEq22_HTML.gif"/></inline-formula> where <inline-formula id="IEq23"><inline-graphic xlink:href="12859_2014_6686_IEq23_HTML.gif"/></inline-formula> is the mean observation on <italic>c</italic><sub>1</sub> and similar for <inline-formula id="IEq24"><inline-graphic xlink:href="12859_2014_6686_IEq24_HTML.gif"/></inline-formula>. Samples <italic>y</italic><sup><italic>i</italic></sup> are therefore the transformed observations as seen in Figure <xref rid="Fig2" ref-type="fig">2</xref>. The empirical distribution of samples is given by
<disp-formula id="Equc"><graphic xlink:href="12859_2014_6686_Equc_HTML.gif" position="anchor"/></disp-formula></p>
        <p>where <inline-formula id="IEq25"><inline-graphic xlink:href="12859_2014_6686_IEq25_HTML.gif"/></inline-formula> is the indicator function. Let <inline-formula id="IEq26"><inline-graphic xlink:href="12859_2014_6686_IEq26_HTML.gif"/></inline-formula> and <inline-formula id="IEq27"><inline-graphic xlink:href="12859_2014_6686_IEq27_HTML.gif"/></inline-formula> be the two empirical distributions for the samples on <italic>c</italic><sub>1</sub> respectively <italic>c</italic><sub>2</sub>, the two-sample KS statistic of the observations is then obtained by
<disp-formula id="Equd"><graphic xlink:href="12859_2014_6686_Equd_HTML.gif" position="anchor"/></disp-formula></p>
        <p>It follows that <italic>D</italic><sub><italic>n</italic></sub>∈ [0,1] since this quantity measures the largest distance between the two empirical cumulative distributions. The similarity score is defined as <italic>π</italic><sub><italic>ζ</italic></sub>= 1 - <italic>D</italic><sub><italic>n</italic></sub>.</p>
      </sec>
      <sec id="Sec15">
        <title>Scoring edges:</title>
        <p>To sum up the two previous subsections, we first derived a score for the ratio of the expected to the observed standard deviation of distance for links spanning a gap. Secondly, we gave a similarity score of expected to observed dispersity of links spanning a gap using the two-sample KS statistic. The total score of a gap-edge is defined as
<disp-formula id="Eque"><graphic xlink:href="12859_2014_6686_Eque_HTML.gif" position="anchor"/></disp-formula></p>
        <p>By definition, we have 0 ≤ <italic>π</italic> ≤ 2. We have used the heuristic cutoff 0.5 which means that if any of the two quantities deviates more than twice from the assumed value, the score is set to 0, <italic>i.e.</italic>, the edge is discarded from the graph. <italic>π</italic> is only calculated on edges where <italic>c</italic><sub><italic>i</italic></sub>,<italic>c</italic><sub><italic>j</italic></sub>&gt;<italic>μ</italic> + 4 <italic>σ</italic>. That is, any vertex that has more than 2 neighbors in this subgraph is considered to be involved in a region with linking errors since by the constraints of the contig lengths, the library should not be able to link more than one such contig. The score is used to choose the edge with links that best resemble the library. If the two highest scores in such a region are close to each other (their ratio higher than 0.9 set heuristically), we chose to not make a decision. This can for instance occur from larger repeated contigs. This approach finds a mapping <italic>ϕ</italic> on <inline-formula id="IEq28"><inline-graphic xlink:href="12859_2014_6686_IEq28_HTML.gif"/></inline-formula>, representing a scaffolding, in <inline-formula id="IEq29"><inline-graphic xlink:href="12859_2014_6686_IEq29_HTML.gif"/></inline-formula> time.</p>
      </sec>
      <sec id="Sec16">
        <title>Note about scoring edges</title>
        <p>It might be inviting to start using <italic>p</italic>-values that can be estimated from the distributions we have defined. This would lead to a statistical test for keeping or discarding edges in the scaffold graph. However, this is not suitable for the problem in hand. Fewer links between contigs gives more uncertainty (leading to volatile <italic>p</italic>-values) and can lead to inability to discard many edges with low link support. Edges with many links would also be sensitive to smaller aberrations by increased sensitivity of statistical testing with larger sample sizes. In the case of multiple edges from a contig, we want to compare edges to see which observations have matching distributions. Comparing significance levels of <italic>p</italic>-values to make this decision is bad practice since <italic>p</italic>-values are nonlinear transforms of data that should only be interpreted under the null hypothesis. That is, the <italic>p</italic>-value is a measure of evidence; it is not an estimate of effect size. Looking at the similarity ratio for <italic>π</italic><sub><italic>σ</italic></sub> and the KS statistic for <italic>π</italic><sub><italic>s</italic></sub> provides a measure that is robust to the number of links and can be used to measure the fit of data when a decision is needed.</p>
      </sec>
    </sec>
    <sec id="Sec17">
      <title>Including smaller contigs</title>
      <p>Small contigs are defined as having a length less than <italic>μ</italic> + 4 <italic>σ</italic>, <italic>i.e.</italic>, all contigs not treated in the previous section. This limit varies with respect to the current library and is used to efficiently create linear scaffolds (as explained in previous section). There are limitations when scaffolding with contigs of size over a particular threshold. Firstly, one will have gaps in these scaffolds where shorter contigs could be placed. Secondly, several small contigs can occur between two large scaffolds making read pairs unable to link them together. We address this issue as follows.</p>
      <p>In graph theory, a <italic>simple</italic> path in <inline-formula id="IEq30"><inline-graphic xlink:href="12859_2014_6686_IEq30_HTML.gif"/></inline-formula> is a path without repeated vertices. Let a <italic>connection</italic> between two large contigs <italic>c</italic><sub><italic>a</italic></sub> and <italic>c</italic><sub><italic>b</italic></sub> in <inline-formula id="IEq31"><inline-graphic xlink:href="12859_2014_6686_IEq31_HTML.gif"/></inline-formula> be defined as a simple path starting at <italic>c</italic><sub><italic>a</italic></sub> and ending at <italic>c</italic><sub><italic>b</italic></sub> with the rest of its vertices as small contigs. For a connection <italic>γ</italic> consisting of a sequence of <italic>n</italic> contigs {<italic>c</italic><sub>1</sub>,…,<italic>c</italic><sub><italic>n</italic></sub>}, we define <italic>g</italic>(<italic>c</italic><sub><italic>i</italic></sub>) to be the number of links that goes from <italic>c</italic><sub><italic>i</italic></sub> to any other contig <italic>c</italic><sub><italic>j</italic></sub>∈ <italic>γ</italic>. Similarly, let <italic>b</italic>(<italic>c</italic><sub><italic>i</italic></sub>) be the number of links that go from <italic>c</italic><sub><italic>i</italic></sub> to any other contig <italic>c</italic><sub><italic>j</italic></sub>∉ <italic>γ</italic>. The notation of <italic>g</italic> and <italic>b</italic> are chosen to indicate “good” links and “bad” links respectively, for a given connection <italic>γ</italic>. The score of <italic>γ</italic> is defined as
<disp-formula id="Equf"><graphic xlink:href="12859_2014_6686_Equf_HTML.gif" position="anchor"/></disp-formula></p>
      <p><italic>i.e.</italic>, the sum of differences of good and bad links for all contigs belonging in <italic>γ</italic>. An example region of connections is shown in Figure <xref rid="Fig3" ref-type="fig">3</xref>. To find connections between two large contigs <italic>c</italic><sub><italic>a</italic></sub>,<italic>c</italic><sub><italic>b</italic></sub>, we use breadth-first search in <inline-formula id="IEq32"><inline-graphic xlink:href="12859_2014_6686_IEq32_HTML.gif"/></inline-formula>. If more than one connection is found, the highest scoring one is chosen if the score is positive. <fig id="Fig3"><label>Figure 3</label><caption><p><bold>Small contigs.</bold> An example of a region in <inline-formula id="IEq33"><inline-graphic xlink:href="12859_2014_6686_IEq33_HTML.gif"/></inline-formula> containing smaller contigs. There are 5 possible paths to connect <italic>c</italic>
<sub>1</sub> and <italic>c</italic>
<sub>6</sub>. The highest scoring one is [<italic>c</italic>
<sub>1</sub>,<italic>c</italic>
<sub>4</sub>,<italic>c</italic>
<sub>5</sub>,<italic>c</italic>
<sub>6</sub>], with <inline-formula id="IEq34"><inline-graphic xlink:href="12859_2014_6686_IEq34_HTML.gif"/></inline-formula>, giving <italic>π</italic>
<sub><italic>p</italic></sub>= 34 and it is the selected path between <italic>c</italic>
<sub>1</sub> and <italic>c</italic>
<sub>6</sub>. In this path the good edges are represented as solid lines and bad edges are represented as dotted lines. A lower-score alternative is [<italic>c</italic>
<sub>1</sub>,<italic>c</italic>
<sub>2</sub>,<italic>c</italic>
<sub>4</sub>,<italic>c</italic>
<sub>5</sub>,<italic>c</italic>
<sub>6</sub>] with (<italic>g</italic>(<italic>c</italic>
<sub><italic>i</italic></sub>),<italic>b</italic>(<italic>c</italic>
<sub><italic>i</italic></sub>))=(47,18), giving <italic>π</italic>
<sub><italic>p</italic></sub>= 29. <italic>c</italic>
<sub>2</sub> is a problematic contig that can be chimeric or consists of repeated sequence(s). The three remaining paths, all of them with negative score, are [<italic>c</italic>
<sub>1</sub>,<italic>c</italic>
<sub>2</sub>,<italic>c</italic>
<sub>3</sub>,<italic>c</italic>
<sub>8</sub>,<italic>c</italic>
<sub>6</sub>],[<italic>c</italic>
<sub>1</sub>,<italic>c</italic>
<sub>4</sub>,<italic>c</italic>
<sub>6</sub>],[<italic>c</italic>
<sub>1</sub>,<italic>c</italic>
<sub>2</sub>,<italic>c</italic>
<sub>4</sub>,<italic>c</italic>
<sub>6</sub>].</p></caption><graphic xlink:href="12859_2014_6686_Fig3_HTML" id="d30e5096"/></fig></p>
      <p>If <italic>c</italic><sub><italic>a</italic></sub> and <italic>c</italic><sub><italic>b</italic></sub> is within an already created scaffold, the algorithm will look for paths with length less than <italic>d</italic> + 2 <italic>σ</italic>, where 2 <italic>σ</italic> allows for uncertainty of the estimate of <italic>d</italic>. If <italic>c</italic><sub><italic>a</italic></sub> and <italic>c</italic><sub><italic>b</italic></sub> are not within an already created scaffold, there is no distance constraint on the length of the connection. For dense regions in <inline-formula id="IEq35"><inline-graphic xlink:href="12859_2014_6686_IEq35_HTML.gif"/></inline-formula>, there can be an exponential blow-up in the number of possible connections. We have set a threshold limiting the breadth-first search to 1000 iterations. This restricting threshold is motivated by two reasons. Firstly, dense regions are likely to be caused by spurious edges. Thus, paths created in these regions will often have a negative score. Secondly, we have seen from large datasets that correct connections tend to be short. This makes higher ordered layers in the breadth first search contain connections with negative score or paths that does not lead to a valid end vertex (to form a connection).</p>
      <p>All connections with a positive score are used to improve the contiguity of the scaffolds. First, gaps within existing scaffolds are filled if a connection with a positive score has been found. In a second step, connections between scaffolds are considered. The extension starts with the highest scoring connection first and proceeds in a descending order of the score. If a contig is found in multiple connections with positive scores, it is only used in the one with the highest score.</p>
    </sec>
    <sec id="Sec18">
      <title>Using multiple libraries</title>
      <p>If given multiple libraries, BESST uses these libraries in an increasing order of library insert size. Scaffolds created in earlier steps are seen as contigs for the next library.</p>
    </sec>
    <sec id="Sec19">
      <title>Implementation</title>
      <p>BESST source code is available under the GNU GPL v3 license. It is implemented in Python using Networkx [<xref ref-type="bibr" rid="CR25">25</xref>] graph library to represent the scaffolding graph and pysam [<xref ref-type="bibr" rid="CR26">26</xref>] for parsing BAM files. As input BESST takes contigs in a FASTA file and the alignments of the paired reads to the contigs as sorted BAM files. BESST can use several paired-read libraries with different insert sizes. The main output consists of scaffolds in a FASTA file. If several libraries are used, a scaffold FASTA file is given as output in each scaffolding step. The output also consists of AGP- and GFF-files that contain information about the scaffolds, such as position of each contig in the scaffold and length of the gaps. The contigs that were classified as repeats are output in a separate FASTA file.</p>
      <sec id="Sec20">
        <title>Preprocessing of <inline-formula id="IEq36"><inline-graphic xlink:href="12859_2014_6686_IEq36_HTML.gif"/></inline-formula></title>
        <p>When initializing <inline-formula id="IEq37"><inline-graphic xlink:href="12859_2014_6686_IEq37_HTML.gif"/></inline-formula>, BESST computes different statistics of the read library such as mean and standard deviation of insert size (<italic>μ</italic>,<italic>σ</italic>) and of the coverage (<italic>μ</italic><sub><italic>c</italic></sub>,<italic>σ</italic><sub><italic>c</italic></sub>). Links with inconsistent insert size defined as <italic>o</italic><sub>1</sub>+ <italic>o</italic><sub>2</sub>&gt;<italic>μ</italic> + <italic>l</italic><italic>σ</italic> are not considered in the scaffolding since they are likely to be placed on chimeric contigs or misaligned. Here, <italic>l</italic> is a user defined constant which defaults to 6.</p>
        <p>BESST removes the contigs that, based on coverage, behave as repeats. A contig <italic>c</italic><sub><italic>i</italic></sub> is classified as a repeat if coverage of <italic>c</italic><sub><italic>i</italic></sub> is larger than max {2 <italic>μ</italic><sub><italic>c</italic></sub>,<italic>μ</italic><sub><italic>c</italic></sub>+ <italic>t</italic><italic>σ</italic><sub><italic>c</italic></sub>}, where <italic>t</italic> is calculated with the same principle as computing <italic>k</italic> for <italic>π</italic><sub><italic>ζ</italic></sub>.</p>
      </sec>
      <sec id="Sec21">
        <title>Data and optional parameters as input to BESST</title>
        <p>BESST uses alignments of paired reads to contigs in format of sorted BAM files. A read aligner such as BWA or Bowtie [<xref ref-type="bibr" rid="CR27">27</xref>, <xref ref-type="bibr" rid="CR28">28</xref>] can be used to map the paired reads in forward reverse mode. We use those read pairs whose both ends map to a unique position in the collection of contigs.</p>
        <p>Several parameters for BESST can optionally be set on the command line:</p>
        <p>
          <list list-type="bullet">
            <list-item>
              <p> <italic>μ</italic> and <italic>σ</italic> can be specified instead of being computed internally. This can be good if the assembly is very fragmented.</p>
            </list-item>
            <list-item>
              <p> Minimum number of links needed to create an edge (with 5 as default value).</p>
            </list-item>
            <list-item>
              <p> Coverage cutoff for repeat identification.</p>
            </list-item>
            <list-item>
              <p> Duplicate read remover (based on identical map positions of both fragments in a paired read).</p>
            </list-item>
            <list-item>
              <p> The inclusion of small contigs can be inactivated.</p>
            </list-item>
          </list>
        </p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec22">
    <title>Availability</title>
    <p>Implementation of BESST is provided at <ext-link ext-link-type="uri" xlink:href="https://pypi.python.org/pypi/BESST">https://pypi.python.org/pypi/BESST</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/ksahlin/BESST">https://github.com/ksahlin/BESST</ext-link>.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Electronic supplementary material</title>
    <sec id="Sec23">
      <supplementary-material content-type="local-data" id="MOESM1">
        <media xlink:href="12859_2014_6686_MOESM1_ESM.pdf">
          <caption>
            <p>Additional file 1: <bold>Supplementary Material.</bold> Document with supplemental information. This document contains additional evaluation results and proof of Theorem 1. (PDF 545 KB)</p>
          </caption>
        </media>
      </supplementary-material>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Competing interests</bold>
      </p>
      <p>The authors declare that they have no competing interests.</p>
    </fn>
    <fn>
      <p>
        <bold>Authors’ contributions</bold>
      </p>
      <p>The contributors are listed in order of significance. Designing the algorithm: KS, BN and FV. Developed the program: KS. Performed the data analysis: FV, KS. Wrote the manuscript: KS, LA. Supervised the project: LA, BN, JL. All authors read and approved the final manuscript.</p>
    </fn>
  </fn-group>
  <ack>
    <p>This work was in part funded by the Swedish Research Council (grant 2010-4634) and the Spruce Genome Project grant from the Knut and Alice Wallenberg Foundation.</p>
    <p>We thank Lex Nederbragt and Ole Kristian Tørressen for comments and suggestions that greatly improved the manuscript and Carly Schott for help with editing.</p>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>
        <source>Genome Res</source>
        <year>2008</year>
        <volume>18</volume>
        <issue>5</issue>
        <fpage>821</fpage>
        <lpage>829</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.074492.107</pub-id>
        <?supplied-pmid 18349386?>
        <pub-id pub-id-type="pmid">18349386</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>MacCallum</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Przybylski</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gnerre</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Burton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Shlyakhter</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Gnirke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Malek</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>McKernan</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ranade</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Shea</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Young</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Nusbaum</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Jaffe</surname>
            <given-names>DB</given-names>
          </name>
        </person-group>
        <article-title>ALLPATHS 2: small genomes assembled accurately and with high continuity from short paired reads</article-title>
        <source>Genome Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>10</issue>
        <fpage>103</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-10-r103</pub-id>
        <pub-id pub-id-type="pmid">19344496</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Richter</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Schuster</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Huson</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>OSLay: optimal syntenic layout of unfinished assemblies</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2007</year>
        <volume>23</volume>
        <issue>13</issue>
        <fpage>1573</fpage>
        <lpage>1579</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm153</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Read</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Scaffolding and validation of bacterial genome assemblies using optical scaffolding and validation of bacterial genome assemblies using optical restriction maps</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>1229</fpage>
        <lpage>1235</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn102</pub-id>
        <?supplied-pmid 18356192?>
        <pub-id pub-id-type="pmid">18356192</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mortazavi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Schwarz</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Schaeffer</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Antoshechkin</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Wold</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Sternberg</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Scaffolding a Caenorhabditis nematode genome with RNA-seq</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <issue>12</issue>
        <fpage>1740</fpage>
        <lpage>1747</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.111021.110</pub-id>
        <?supplied-pmid 20980554?>
        <pub-id pub-id-type="pmid">20980554</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nystedt</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Street</surname>
            <given-names>NR</given-names>
          </name>
          <name>
            <surname>Wetterbom</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zuccolo</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y-C</given-names>
          </name>
          <name>
            <surname>Scofield</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Vezzi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Delhomme</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Giacomello</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Alexeyenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vicedomini</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Sherwood</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Elfstrand</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gramzow</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Holmberg</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Hällman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Keech</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Klasson</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Koriabine</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kucukoglu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Käller</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Luthman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lysholm</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Rilakovic</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Ritland</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sena</surname>
            <given-names>J</given-names>
          </name>
          <collab>Niittylä T</collab>
          <etal/>
        </person-group>
        <article-title>The Norway spruce genome sequence and conifer genome evolution</article-title>
        <source>Nature</source>
        <year>2013</year>
        <volume>497</volume>
        <issue>7451</issue>
        <fpage>579</fpage>
        <lpage>584</lpage>
        <pub-id pub-id-type="doi">10.1038/nature12211</pub-id>
        <?supplied-pmid 23698360?>
        <pub-id pub-id-type="pmid">23698360</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Zimin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Puiu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Magoc</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Marcais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>GAGE: a critical evaluation of genome assemblies and assembly algorithms</article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>22</volume>
        <issue>3</issue>
        <fpage>557</fpage>
        <lpage>567</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.131383.111</pub-id>
        <?supplied-pmid 22147368?>
        <pub-id pub-id-type="pmid">22147368</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hunt</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Newbold</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Berriman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Otto</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>A comprehensive evaluation of assembly scaffolding tools</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>3</issue>
        <fpage>42</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-3-r42</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huson</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
        </person-group>
        <article-title>The greedy path-merging algorithm for contig scaffolding</article-title>
        <source>J ACM</source>
        <year>2002</year>
        <volume>49</volume>
        <issue>5</issue>
        <fpage>603</fpage>
        <lpage>615</lpage>
        <pub-id pub-id-type="doi">10.1145/585265.585267</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boetzer</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Henkel</surname>
            <given-names>CV</given-names>
          </name>
          <name>
            <surname>Jansen</surname>
            <given-names>HJ</given-names>
          </name>
          <name>
            <surname>Butler</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pirovano</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Scaffolding pre-assembled contigs using SSPACE</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>4</issue>
        <fpage>578</fpage>
        <lpage>579</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq683</pub-id>
        <?supplied-pmid 21149342?>
        <pub-id pub-id-type="pmid">21149342</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kosack</surname>
            <given-names>DS</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Hierarchical scaffolding with Bambus</article-title>
        <source>Genome Res</source>
        <year>2004</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>149</fpage>
        <lpage>159</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.1536204</pub-id>
        <?supplied-pmid 14707177?>
        <pub-id pub-id-type="pmid">14707177</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dayarian</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Michael</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Sengupta</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>SOPRA: scaffolding algorithm for paired reads via statistical optimization</article-title>
        <source>BMC Bioinformatics</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>345</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-345</pub-id>
        <?supplied-pmid 20576136?>
        <pub-id pub-id-type="pmid">20576136</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gao</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sung</surname>
            <given-names>W-K</given-names>
          </name>
          <name>
            <surname>Nagarajan</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Opera: reconstructing optimal genomic scaffolds with high-throughput paired-end sequences</article-title>
        <source>J Comput Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <issue>11</issue>
        <fpage>1681</fpage>
        <lpage>1691</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2011.0170</pub-id>
        <?supplied-pmid 21929371?>
        <pub-id pub-id-type="pmid">21929371</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roy</surname>
            <given-names>RS</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Sengupta</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Schliep</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>SLIQ: Simple linear inequalities for efficient contig scaffolding</article-title>
        <source>J Comput Biol</source>
        <year>2012</year>
        <volume>19</volume>
        <issue>10</issue>
        <fpage>1162</fpage>
        <lpage>1175</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2011.0263</pub-id>
        <?supplied-pmid 23057825?>
        <pub-id pub-id-type="pmid">23057825</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salmela</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Mäkinen</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Välimäki</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Ylinen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ukkonen</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Fast scaffolding with small independent mixed integer programs</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>23</issue>
        <fpage>3259</fpage>
        <lpage>3265</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr562</pub-id>
        <?supplied-pmid 21998153?>
        <pub-id pub-id-type="pmid">21998153</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gritsenko</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Nijkamp</surname>
            <given-names>JF</given-names>
          </name>
          <name>
            <surname>Reinders</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>de Ridder</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>GRASS: a generic algorithm for scaffolding next-generation sequencing assemblies</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>11</issue>
        <fpage>1429</fpage>
        <lpage>1437</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts175</pub-id>
        <?supplied-pmid 22492642?>
        <pub-id pub-id-type="pmid">22492642</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Street</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lundeberg</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Arvestad</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Improved gap size estimation for scaffolding algorithms</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>17</issue>
        <fpage>2215</fpage>
        <lpage>2222</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts441</pub-id>
        <?supplied-pmid 22923455?>
        <pub-id pub-id-type="pmid">22923455</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Earl</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bradnam</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>St John</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Darling</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Fass</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>HO</given-names>
          </name>
          <name>
            <surname>Buffalo</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Diekhans</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Nguyen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Ariyaratne</surname>
            <given-names>PN</given-names>
          </name>
          <name>
            <surname>Sung</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Ning</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Haimel</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Fonseca</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Birol</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Docking</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Ho</surname>
            <given-names>IY</given-names>
          </name>
          <name>
            <surname>Rokhsar</surname>
            <given-names>DS</given-names>
          </name>
          <name>
            <surname>Chikhi</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Lavenier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Chapuis</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Naquin</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Maillet</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Kelley</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Assemblathon 1: a competitive assessment of de novo short read assembly methods</article-title>
        <source>Genome Res</source>
        <year>2011</year>
        <volume>21</volume>
        <issue>12</issue>
        <fpage>2224</fpage>
        <lpage>2241</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.126599.111</pub-id>
        <?supplied-pmid 21926179?>
        <pub-id pub-id-type="pmid">21926179</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vezzi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Narzisi</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mishra</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Feature-by-feature–evaluating de novo sequence assembly</article-title>
        <source>PLoS ONE</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>2</issue>
        <fpage>31002</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0031002</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vezzi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Narzisi</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mishra</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Reevaluating assembly evaluations with feature response curves: GAGE and assemblathons</article-title>
        <source>PLoS ONE</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>12</issue>
        <fpage>52210</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0052210</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miller</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sutton</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Assembly algorithms for next-generation sequencing data</article-title>
        <source>Genomics</source>
        <year>2010</year>
        <volume>95</volume>
        <issue>6</issue>
        <fpage>315</fpage>
        <lpage>327</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ygeno.2010.03.001</pub-id>
        <?supplied-pmid 20211242?>
        <pub-id pub-id-type="pmid">20211242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ribeiro</surname>
            <given-names>FJ</given-names>
          </name>
          <name>
            <surname>Przybylski</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Yin</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sharpe</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Gnerre</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Abouelleil</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Berlin</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Montmayeur</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Shea</surname>
            <given-names>TP</given-names>
          </name>
          <name>
            <surname>Walker</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Young</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Russ</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Nusbaum</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>MacCallum</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Jaffe</surname>
            <given-names>DB</given-names>
          </name>
        </person-group>
        <article-title>Finished bacterial genomes from shotgun sequence data</article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>22</volume>
        <issue>11</issue>
        <fpage>2270</fpage>
        <lpage>2277</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.141515.112</pub-id>
        <?supplied-pmid 22829535?>
        <pub-id pub-id-type="pmid">22829535</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other"><bold>Picard</bold>. [<ext-link ext-link-type="uri" xlink:href="http://picard.sourceforge.net">http://picard.sourceforge.net</ext-link>]</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>AN</given-names>
          </name>
        </person-group>
        <article-title>Sulla determinazione empirica di una legge di distribuzione (On the empirical determination of a distribution law)</article-title>
        <source>Giornale dell’Istituto Italiano degli Attuari</source>
        <year>1933</year>
        <volume>4</volume>
        <fpage>83</fpage>
        <lpage>91</lpage>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other"><bold>Networkx</bold>. [<ext-link ext-link-type="uri" xlink:href="http://networkx.lanl.gov/">http://networkx.lanl.gov/</ext-link>]</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other"><bold>Pysam</bold>. [<ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/pysam/">http://code.google.com/p/pysam/</ext-link>]</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate long-read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>5</issue>
        <fpage>589</fpage>
        <lpage>595</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp698</pub-id>
        <?supplied-pmid 20080505?>
        <pub-id pub-id-type="pmid">20080505</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Algorithms Mol Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Algorithms Mol Biol</journal-id>
    <journal-title-group>
      <journal-title>Algorithms for Molecular Biology : AMB</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1748-7188</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9277797</article-id>
    <article-id pub-id-type="publisher-id">221</article-id>
    <article-id pub-id-type="doi">10.1186/s13015-022-00221-z</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Binning long reads in metagenomics datasets using composition and coverage information</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Wickramarachchi</surname>
          <given-names>Anuradha</given-names>
        </name>
        <address>
          <email>anuradha.wickramarachchi@anu.edu.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Lin</surname>
          <given-names>Yu</given-names>
        </name>
        <address>
          <email>yu.lin@anu.edu.au</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.1001.0</institution-id><institution-id institution-id-type="ISNI">0000 0001 2180 7477</institution-id><institution>School of Computing, </institution><institution>Australian National University, </institution></institution-wrap>Canberra, Australia </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>7</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>7</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>17</volume>
    <elocation-id>14</elocation-id>
    <history>
      <date date-type="received">
        <day>31</day>
        <month>12</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>26</day>
        <month>6</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Advancements in metagenomics sequencing allow the study of microbial communities directly from their environments. Metagenomics binning is a key step in the species characterisation of microbial communities. Next-generation sequencing reads are usually assembled into contigs for metagenomics binning mainly due to the limited information within short reads. Third-generation sequencing provides much longer reads that have lengths similar to the contigs assembled from short reads. However, existing contig-binning tools cannot be directly applied on long reads due to the absence of coverage information and the presence of high error rates. The few existing long-read binning tools either use only composition or use composition and coverage information separately. This may ignore bins that correspond to low-abundance species or erroneously split bins that correspond to species with non-uniform coverages. Here we present a reference-free binning approach, LRBinner, that combines composition and coverage information of complete long-read datasets. LRBinner also uses a distance-histogram-based clustering algorithm to extract clusters with varying sizes.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">The experimental results on both simulated and real datasets show that LRBinner achieves the best binning accuracy in most cases while handling the complete datasets without any sampling. Moreover, we show that binning reads using LRBinner prior to assembly reduces computational resources required for assembly while attaining satisfactory assembly qualities.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">LRBinner shows that deep-learning techniques can be used for effective feature aggregation to support the metagenomics binning of long reads. Furthermore, accurate binning of long reads supports improvements in metagenomics assembly, especially in complex datasets. Binning also helps to reduce the resources required for assembly. Source code for LRBinner is freely available at https://github.com/anuradhawick/LRBinner.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13015-022-00221-z.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Metagenomics binning</kwd>
      <kwd>Long reads</kwd>
      <kwd>Machine learning</kwd>
      <kwd>Clustering</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par4">Metagenomics binning is an important area of study in metagenomics analysis. Broadly, metagenomics enables the study of microbial genetic material directly from the source environment [<xref ref-type="bibr" rid="CR1">1</xref>]. This eliminates the necessity of lab culturing thus revealing the microbial content of an environment as it is without culturing biases. <italic>Metagenomics binning</italic> is one key problem in metagenomics studies that facilitates the clustering of sequences into different taxonomic groups. Mainly there are two approaches to address this problem; (1) reference-based binning and (2) reference-free binning. Reference-based binning tools (e.g., Kraken [<xref ref-type="bibr" rid="CR2">2</xref>], Centrifuge [<xref ref-type="bibr" rid="CR3">3</xref>] and Kaiju [<xref ref-type="bibr" rid="CR4">4</xref>]) bin sequences based on similarity by comparing with a database of known reference genomes and thus face challenges when the reference database is unavailable or incomplete. At present, reference-free binning tools have been gaining popularity over reference-based binning tools, especially in discovering novel or rare species in complex metagenomics datasets. While Next-Generation Sequencing (NGS) technologies produce short reads, existing reference-free binning tools typically rely on longer <italic>contigs</italic> that are assembled from short reads and contain richer information for binning. Reference-free binning tools (e.g., MetaBAT [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>], MaxBin [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>], BMC3C [<xref ref-type="bibr" rid="CR9">9</xref>], BusyBeeWeb [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR11">11</xref>], SolidBin [<xref ref-type="bibr" rid="CR12">12</xref>], MetaProb2 [<xref ref-type="bibr" rid="CR13">13</xref>] and VAMB [<xref ref-type="bibr" rid="CR14">14</xref>], etc.) bin contigs based on their composition and coverage information, without using any reference database. For example, a recent work VAMB [<xref ref-type="bibr" rid="CR14">14</xref>] introduced the use of deep variational auto-encoders to perform reference-free unsupervised binning of contigs incorporating both the composition and coverage information. VAMB then uses an iterative medoid clustering algorithm which extracts clusters (bins) in a local search fashion. Thanks to the accurate composition and coverage information of contigs, reference-free approaches show promising results in binning contigs from metagenomics assemblies.</p>
    <p id="Par5">With the advent of Third Generation Sequencing (TGS) technologies such as Pacific Biosciences (PacBio) and Oxford Nanopore Technologies (ONT), reads obtained are much longer than NGS reads (&gt;10kbp). Therefore, more information becomes available in the reads themselves to support direct reads binning. However, contig-binning tools cannot be directly applied to bin long reads (by treating them as contigs) because there is no coverage information available for each long read. Moreover, while certain contig-binning tools make use of single-copy marker genes to estimate the number of bins in the sample, the high error rates of long reads and the varying coverages of different species make it infeasible to derive accurate estimations. Furthermore, datasets containing raw long reads are much larger in size compared to typical datasets containing contigs, and hence, demand more scalable reference-free binning tools. Recently, a long-read binning tool named, MetaBCC-LR [<xref ref-type="bibr" rid="CR15">15</xref>] was introduced to bin error-prone long reads. While MetaBCC-LR shows very promising results in binning long reads, it still suffers from accuracy and scalability issues, especially in complex metagenomics datasets. Firstly, MetaBCC-LR uses the composition and coverage information of long reads in a separate manner (<italic>i.e.</italic>, in two different stages). This can result in the ignorance of bins for species with low abundance and incorrect bin split for species with non-uniform composition or coverage. Secondly, due to its scalability issue, MetaBCC-LR has to employ a sampling strategy to work on a subset of reads for large datasets, which affects its overall binning accuracy. MetaBCC-LR [<xref ref-type="bibr" rid="CR15">15</xref>] showed that concatenation of coverage and composition features causes inaccuracies in clustering as the TSNE dimension reduction considers the input to be a single vector. More recently, VAMB [<xref ref-type="bibr" rid="CR14">14</xref>] showed that for the contig coverage (computed from read alignments) can be combined with its composition successfully using deep learning followed by iterative medoid clustering. However, neither read alignments nor iterative medoid clustering are suitable to handle long-read datasets because long reads are typically orders of magnitude more than contigs. In addition, binning of long read datasets requires novel algorithms to detect clusters of vastly varying sizes (hundreds to millions of reads per species), which is different from the contig-binning scenarios (few hundreds of contigs per species [<xref ref-type="bibr" rid="CR16">16</xref>]). Therefore, it is persistently demanding better approaches to bin massive long-read datasets accurately and efficiently. The requirement is further supported by the advent of PacBio HiFi technology [<xref ref-type="bibr" rid="CR17">17</xref>] which produces accurate and massive long-read datasets in metagenomics studies.</p>
    <p id="Par6">In this paper, we present LRBinner to bin TGS long reads without using any reference databases. LRBinner combines the composition and coverage features and eliminates the need to sub-sample large datasets. More specifically, LRBinner uses a variational auto-encoder to obtain lower dimensional representations by simultaneously incorporating both composition and coverage information of the complete dataset, which was initially presented in contigs binning tool, VAMB [<xref ref-type="bibr" rid="CR14">14</xref>]. LRBinner further uses a distance-histogram-based clustering algorithm that can capture confident clusters of varying sizes. LRBinner finally assigns unclustered reads to obtained clusters using their statistical profiles. The experimental results of LRBinner compared against other baselines show that LRBinner achieves better binning results on both simulated and real datasets. Moreover, we show that binning long reads by LRBinner prior to assembly helps to improve genome fraction of assemblies while reducing the memory consumption for metagenomics assembly.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <p id="Par7">
      <fig id="Fig1">
        <label>Fig. 1</label>
        <caption>
          <p>Overall workflow of LRBinner. (Step 1) The feature vectors of composition and coverage information are computed from long reads. Composition vectors are the normalized <italic>k</italic>-mer counts where as the coverage vectors are the normalized <italic>k</italic>-mer counts histograms for each read. The feature vectors are input into a variational auto-encoder to obtain low-dimensional latent representations. Note that variational auto-encoders learn a lower dimensional representation while learning to reconstruct the original. (Step 2) Sample a seed point (read) in the latent space. Use this seed to estimate a confident cluster (bin) that contains this seed point. Step 2 is iterated until there are no seed points. (Step 3) The unclustered points are assigned to the clusters using a statistical model. Note that the 2-dimensional representation of points is only for the illustration purpose</p>
        </caption>
        <graphic xlink:href="13015_2022_221_Fig1_HTML" id="MO1"/>
      </fig>
    </p>
    <p id="Par8">LRBinner consists of three main steps; (1) learning lower dimensional latent representations of composition and coverage, (2) clustering the latent representations and (3) obtaining complete clusters. The complete workflow for LRBinner is demonstrated in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. In the following sections, we will explain these three steps in details.</p>
    <sec id="Sec3">
      <title>Step 1</title>
      <p id="Par9">LRBinner uses two typical binning features of metagenomic sequences, composition and coverage. The composition and coverage of each long read is represented as trimer frequency vectors and <italic>k</italic>-mer coverage histograms [<xref ref-type="bibr" rid="CR15">15</xref>], respectively.</p>
      <sec id="Sec4">
        <title>Computing composition vectors</title>
        <p id="Par10">Previous studies show that different species demonstrate unique genomic patterns [<xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR19">19</xref>] and thus can be used in composition-based metagenomics binning. Oligonucleotide frequency vectors are one such genomic representation that can be used in metagenomics binning. Small <italic>k</italic>-mer sizes (<italic>k</italic> varying from 3-7) have been used in the past to discriminate assembled contigs of different origins [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR21">21</xref>] and 3-mers have been used in metagenomics binning of error-prone long reads [<xref ref-type="bibr" rid="CR15">15</xref>] which shows that trinucleotide frequency vectors provide stable binning despite the noise level exist in TGS reads. Therefore in LRBinner, we utilise <italic>k</italic>=3 by default which results in trinucleotide composition vectors. For each long read, we count the frequencies of all 64 3-mers in this read and merge the reverse complements to form a vector of 32 dimensions. The resulting vector is then normalised by the total number of 3-mers observed in the read. We refer to this trimer frequency vector as <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^T$$\end{document}</tex-math><mml:math id="M2"><mml:msup><mml:mi>V</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq1.gif"/></alternatives></inline-formula>.</p>
      </sec>
      <sec id="Sec5">
        <title>Computing coverage vectors</title>
        <p id="Par11">While an all-vs-all alignment of long reads may provide coverage information for each long read, it is usually too time-consuming to perform the quadratic number of pairwise alignments on large scale long-read datasets. Given a sufficiently large <italic>k</italic>, the frequency of a <italic>k</italic>-mer is defined as the number of occurrences of this <italic>k</italic>-mer in the entire dataset. Long reads from high-abundance species tend to contain <italic>k</italic>-mers with higher frequencies compared to long reads from low-abundance species. Hence, a <italic>k</italic>-mer frequency vector can be computed for each long read to represent coverage information without performing alignments [<xref ref-type="bibr" rid="CR15">15</xref>] to represent read coverage. In order to obtain such coverage histograms, we first compute the <italic>k</italic>-mer counts of all long reads in the entire dataset by DSK [<xref ref-type="bibr" rid="CR22">22</xref>] (the default value of <italic>k</italic>=15). The counts are then indexed in memory by encoding each nucleotide in 2 bits as per the encoding (<italic>i.e.</italic>, A=00, C=01, T=10 and G=11) [<xref ref-type="bibr" rid="CR22">22</xref>]. The resulting index is in the form <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(k_i, coverage(k_i))$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq2.gif"/></alternatives></inline-formula> (as <italic>key</italic>, <italic>value</italic> pairs), where <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$coverage(k_i)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>c</mml:mi><mml:mi>o</mml:mi><mml:mi>v</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>g</mml:mi><mml:mi>e</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq3.gif"/></alternatives></inline-formula> is the number of occurrences of the <italic>k</italic>-mer <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_i$$\end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq4.gif"/></alternatives></inline-formula> in the entire dataset. Now for each <italic>k</italic>-mer <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_i$$\end{document}</tex-math><mml:math id="M10"><mml:msub><mml:mi>k</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq5.gif"/></alternatives></inline-formula> of a read, we obtain the frequency from the index. These frequencies are then used to build a normalised histogram, <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^C$$\end{document}</tex-math><mml:math id="M12"><mml:msup><mml:mi>V</mml:mi><mml:mi>C</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq6.gif"/></alternatives></inline-formula>. We chose a preset bin width (<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$bin\_width$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>b</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq7.gif"/></alternatives></inline-formula>) for the histogram and obtain a vector of <italic>bins</italic> dimensions. By default we set <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$bin\_width$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mi>b</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq8.gif"/></alternatives></inline-formula>
<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M18"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq9.gif"/></alternatives></inline-formula>
<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$10$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq10.gif"/></alternatives></inline-formula> and <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$bins$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:mi mathvariant="italic">bins</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq11.gif"/></alternatives></inline-formula>
<inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M24"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq12.gif"/></alternatives></inline-formula>
<inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$32$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mn>32</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq13.gif"/></alternatives></inline-formula>. All the <italic>k</italic>-mers with counts exceeding the histogram limits are added into the last index of the histogram. We also normalise the histogram by the total number of <italic>k</italic>-mers observed in the read.</p>
      </sec>
      <sec id="Sec6">
        <title>Obtaining latent representations</title>
        <p id="Par12">For each long read, its coverage (<inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^C$$\end{document}</tex-math><mml:math id="M28"><mml:msup><mml:mi>V</mml:mi><mml:mi>C</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq14.gif"/></alternatives></inline-formula>) and composition (<inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^T$$\end{document}</tex-math><mml:math id="M30"><mml:msup><mml:mi>V</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq15.gif"/></alternatives></inline-formula>) vectors are concatenated to form a single vector <italic>V</italic> of 64 dimensions. We use a variational auto-encoder to obtain lower dimensional latent representations. The key motivation for using a variational auto-encoder is to combine coverage and composition features in an effective way. Previous work shows that a simple concatenation of coverage and composition vectors made TSNE less effective [<xref ref-type="bibr" rid="CR15">15</xref>]. This is mainly because TSNE does not attempt to learn how to effectively combine composition and coverage features, but rather sticks with the spatial distances on concatenated features. However, the variational auto-encoder is able to learn lower dimensional representations by combining both composition and coverage features through a deep neural network.</p>
        <p id="Par13">Our implementation of the variational auto-encoder consists of two hidden-layers in the encoder and decoder. Each layer uses batch normalisation and dropout with <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M32"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq16.gif"/></alternatives></inline-formula>
<inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M34"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq17.gif"/></alternatives></inline-formula>
<inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0.1$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mn>0.1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq18.gif"/></alternatives></inline-formula> during the training phase. For each input vector <italic>V</italic>, the auto-encoder learns a latent representation <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^{L}_{i}$$\end{document}</tex-math><mml:math id="M38"><mml:msubsup><mml:mi>V</mml:mi><mml:mi>i</mml:mi><mml:mi>L</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq19.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^{L}_{i} \sim {\mathcal {N}}(\mu _i, \sigma _i)$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>i</mml:mi><mml:mi>L</mml:mi></mml:msubsup><mml:mo>∼</mml:mo><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq20.gif"/></alternatives></inline-formula>. The latent representation consists of 8 dimensions. Each layer in the encoder and decoder contains 128 neurons. Similar to previous studies [<xref ref-type="bibr" rid="CR14">14</xref>], we use <italic>LeakyRELU</italic> (leaky rectified linear unit function) for <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M42"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq21.gif"/></alternatives></inline-formula> and <italic>softplus</italic> function for <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M44"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq22.gif"/></alternatives></inline-formula> layers. Note that <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu$$\end{document}</tex-math><mml:math id="M46"><mml:mi>μ</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq23.gif"/></alternatives></inline-formula> and <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M48"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq24.gif"/></alternatives></inline-formula> represent neural network layers intended to learn the lower dimensional means and standard deviations of each read’s distribution. We use the weighted sum of reconstruction error <italic>E</italic> (Eq. <xref rid="Equ1" ref-type="">1</xref>, where <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V_{in}$$\end{document}</tex-math><mml:math id="M50"><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="italic">in</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq25.gif"/></alternatives></inline-formula> and <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V_{out}$$\end{document}</tex-math><mml:math id="M52"><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="italic">out</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq26.gif"/></alternatives></inline-formula> represents the inputs and the outputs of the auto-encoder. Note that they are the same for an auto-encoder) and Kullback-Leibler divergence [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR23">23</xref>] <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_{KL}$$\end{document}</tex-math><mml:math id="M54"><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi mathvariant="italic">KL</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq27.gif"/></alternatives></inline-formula> (Eq.<xref rid="Equ2" ref-type="">2</xref>) as the loss function. <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{cov}$$\end{document}</tex-math><mml:math id="M56"><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">cov</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq28.gif"/></alternatives></inline-formula> and <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{com}$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">com</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq29.gif"/></alternatives></inline-formula> represent reconstruction errors of coverage and composition respectively. Eq. <xref rid="Equ3" ref-type="">3</xref> demonstrates the complete loss function used.<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E= &amp; {} \sum (V_{in} - V_{out})^2 \end{aligned}$$\end{document}</tex-math><mml:math id="M60" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>∑</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="italic">in</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>V</mml:mi><mml:mrow><mml:mi mathvariant="italic">out</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} D_{KL}(latent|prior)= &amp; {} - \sum \frac{1}{2} (1+ln(\sigma )-\mu ^2-\sigma ) \end{aligned}$$\end{document}</tex-math><mml:math id="M62" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi mathvariant="italic">KL</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi>p</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>-</mml:mo><mml:mo>∑</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:msup><mml:mi>μ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>-</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \textit{Total Loss}= &amp; {} w_{cov}E_{cov} + w_{com}E_{com} + w_{kld}D_{KL} \end{aligned}$$\end{document}</tex-math><mml:math id="M64" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="italic">Total Loss</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">cov</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">cov</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">com</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">com</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">kld</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi mathvariant="italic">KL</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula>Here we set <inline-formula id="IEq30"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{cov}$$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">cov</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq30.gif"/></alternatives></inline-formula>
<inline-formula id="IEq31"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M68"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq31.gif"/></alternatives></inline-formula>
<inline-formula id="IEq32"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0.1$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:mn>0.1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq32.gif"/></alternatives></inline-formula>, <inline-formula id="IEq33"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{com}$$\end{document}</tex-math><mml:math id="M72"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">com</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq33.gif"/></alternatives></inline-formula>
<inline-formula id="IEq34"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M74"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq34.gif"/></alternatives></inline-formula>
<inline-formula id="IEq35"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq35.gif"/></alternatives></inline-formula> and <inline-formula id="IEq36"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{kld}$$\end{document}</tex-math><mml:math id="M78"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">kld</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq36.gif"/></alternatives></inline-formula>
<inline-formula id="IEq37"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M80"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq37.gif"/></alternatives></inline-formula>
<inline-formula id="IEq38"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1/500$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mn>500</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq38.gif"/></alternatives></inline-formula> as determined empirically using simulated data. The decoder output was obtained through LeakyRELU activation in order to reconstruct the scaled positive inputs. We train the auto-encoder with read batches of size 10,240 for 200 epochs. Finally, we obtain the predicted latent means of the input data from the encoder for clustering. Each point in the latent mean corresponds to the relevant read in the original input.</p>
      </sec>
    </sec>
    <sec id="Sec7">
      <title>Step 2</title>
      <p id="Par14">
        <fig id="Fig2">
          <label>Fig. 2</label>
          <caption>
            <p>Illustration of the clustering algorithm. First, we select a seed point and compute a histogram using the distances to every other point. Then, we derive a <italic>candidate cluster</italic> by observing the peak of the histogram. Note that this cluster is only an estimation for the chosen point’s cluster. Sample points from the <italic>candidate cluster</italic> and choose a point with the minimum valley-to-peak ratio. Extract points before the <italic>valley</italic> to form a <italic>confident cluster</italic>. Valley-to-peak ratio is an indicator of density which is the highest at cluster centre. Note that the 2D representation of points is only for the illustration purposes</p>
          </caption>
          <graphic xlink:href="13015_2022_221_Fig2_HTML" id="MO5"/>
        </fig>
      </p>
      <p id="Par15">In this step, we perform clustering of the latent means learnt by the variational auto-encoder. The complete clustering algorithm of LRBinner is illustrated in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. Similar to previous studies [<xref ref-type="bibr" rid="CR14">14</xref>], we use the cosine distance as the distance measure for clustering. Note that cosine distance between point <italic>a</italic> and <italic>b</italic> in latent space <inline-formula id="IEq39"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^L$$\end{document}</tex-math><mml:math id="M84"><mml:msup><mml:mi>V</mml:mi><mml:mi>L</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq39.gif"/></alternatives></inline-formula> is defined as <italic>d</italic>(<italic>a</italic>, <italic>b</italic>)=<inline-formula id="IEq40"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{V^L_a\cdot V^L_b}{||V^L_a|| ||V^L_b||}$$\end{document}</tex-math><mml:math id="M86"><mml:mfrac><mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>a</mml:mi><mml:mi>L</mml:mi></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>b</mml:mi><mml:mi>L</mml:mi></mml:msubsup></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>a</mml:mi><mml:mi>L</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi>V</mml:mi><mml:mi>b</mml:mi><mml:mi>L</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq40.gif"/></alternatives></inline-formula>. Given a point <italic>a</italic>, a distance histogram <inline-formula id="IEq41"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_a$$\end{document}</tex-math><mml:math id="M88"><mml:msub><mml:mi>H</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq41.gif"/></alternatives></inline-formula> can be generated by computing the pairwise distances between <italic>a</italic> and all other points and setting the bin width as <inline-formula id="IEq42"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Delta$$\end{document}</tex-math><mml:math id="M90"><mml:mi mathvariant="normal">Δ</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq42.gif"/></alternatives></inline-formula> (<inline-formula id="IEq43"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Delta$$\end{document}</tex-math><mml:math id="M92"><mml:mi mathvariant="normal">Δ</mml:mi></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq43.gif"/></alternatives></inline-formula>
<inline-formula id="IEq44"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M94"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq44.gif"/></alternatives></inline-formula>
<inline-formula id="IEq45"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0.005$$\end{document}</tex-math><mml:math id="M96"><mml:mrow><mml:mn>0.005</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq45.gif"/></alternatives></inline-formula> in our experiments). We define <italic>peak</italic> as the index of the first maximal of the distance histogram <inline-formula id="IEq46"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_a$$\end{document}</tex-math><mml:math id="M98"><mml:msub><mml:mi>H</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq46.gif"/></alternatives></inline-formula>. Similarly, the <italic>valley</italic> is defined as the index of the first minimal after the <italic>peak</italic> in the distance histogram <inline-formula id="IEq47"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_a$$\end{document}</tex-math><mml:math id="M100"><mml:msub><mml:mi>H</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq47.gif"/></alternatives></inline-formula>. Refer to the top right figure in Fig. <xref rid="Fig2" ref-type="fig">2</xref> for an example of the <italic>peak</italic> and <italic>valley</italic> in a distance histogram.</p>
      <p id="Par16">As shown in VAMB [<xref ref-type="bibr" rid="CR14">14</xref>], a point with smaller valley-to-peak ratio <italic>H</italic>[<italic>valley</italic>]/<italic>H</italic>[<italic>peak</italic>] is more likely to be the medoid of a cluster, where <italic>H</italic>[<italic>valley</italic>] and <italic>H</italic>[<italic>peak</italic>] are the number of points corresponding to the <italic>valley</italic> and <italic>peak</italic> in the distance histogram <italic>H</italic>, respectively. Therefore, VAMB randomly samples points, searches within a distance of 0.05 (up to 25 neighbouring points) and moves to another point if <italic>H</italic>[<italic>valley</italic>]/<italic>H</italic>[<italic>peak</italic>] can be further reduced. This step is iterated until a local minimal point of <italic>H</italic>[<italic>valley</italic>]/<italic>H</italic>[<italic>peak</italic>] is inferred as a proper cluster medoid and then the corresponding cluster is extracted by removing points within a distance <inline-formula id="IEq48"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Delta \times valley$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>×</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq48.gif"/></alternatives></inline-formula> of the distance histogram. However, clusters of long reads are orders of magnitude larger than clusters of contigs, thus mere local search of a cluster medoid may be inefficient. Furthermore, while most contig clusters consist of hundreds of points per species [<xref ref-type="bibr" rid="CR16">16</xref>], the long-read clusters vary in size drastically (from hundreds of points to millions of points), which demand for a more flexible search strategy rather than sampling points within a fixed radius and up to a fixed number of neighbours. Hence, we design the following strategy to dynamically extract clusters of varying sizes. Our algorithm consists of two steps; (1) from a seed point to a candidate cluster and (2) from a candidate cluster to a confident cluster.</p>
      <sec id="Sec8">
        <title>From a seed point to a candidate cluster</title>
        <p id="Par17">A point <italic>s</italic> is called a <italic>seed point</italic> if its valley-to-peak ratio <inline-formula id="IEq49"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_s[valley]/H_s[peak]&lt;0.5$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq49.gif"/></alternatives></inline-formula> in its distance histogram <inline-formula id="IEq50"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_s$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>H</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq50.gif"/></alternatives></inline-formula>. Initially, LRBinner randomly picks a seed point <italic>s</italic> from the entire dataset and obtains its distance histogram <inline-formula id="IEq51"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_s$$\end{document}</tex-math><mml:math id="M108"><mml:msub><mml:mi>H</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq51.gif"/></alternatives></inline-formula>. Note that a distance histogram demonstrates a <italic>candidate cluster</italic>. This <italic>candidate cluster</italic> consists of the points within the distance <inline-formula id="IEq52"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Delta \times valley$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>×</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq52.gif"/></alternatives></inline-formula> in <inline-formula id="IEq53"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_s$$\end{document}</tex-math><mml:math id="M112"><mml:msub><mml:mi>H</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq53.gif"/></alternatives></inline-formula>, referred to as <italic>candidate cluster points</italic>. Compared to the seed point, some candidate cluster points may have lower valley-to-peak ratio that results in more confident clusters. However, the number of candidate cluster points may vary significantly depending on the size of the ground-truth clusters. In the next section, we will show how to use sampling strategies to find a confident cluster from a candidate cluster.</p>
      </sec>
      <sec id="Sec9">
        <title>From a candidate cluster to a confident cluster</title>
        <p id="Par18">Given a <italic>candidate cluster</italic>, we sample 10% of candidate cluster points (up to 1,000 points) to compare their corresponding distance histograms. For each point <italic>p</italic> in <italic>candidate cluster points</italic>, we compute the valley-to-peak ratio <inline-formula id="IEq54"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_p[valley]/H_p[peak]$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>H</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>y</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>H</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>p</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq54.gif"/></alternatives></inline-formula> in its corresponding distance histogram <inline-formula id="IEq55"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_p$$\end{document}</tex-math><mml:math id="M116"><mml:msub><mml:mi>H</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq55.gif"/></alternatives></inline-formula>. We chose a point <italic>x</italic> from the sample with the minimum <italic>H</italic>[<italic>valley</italic>]/<italic>H</italic>[<italic>peak</italic>] value and extract a <italic>confident cluster</italic> which consists of points within a distance <inline-formula id="IEq56"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Delta \times valley$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi mathvariant="normal">Δ</mml:mi><mml:mo>×</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>y</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq56.gif"/></alternatives></inline-formula> of the distance histogram <inline-formula id="IEq57"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$H_x$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>H</mml:mi><mml:mi>x</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq57.gif"/></alternatives></inline-formula>. In contrast with the iterative medoid search in VAMB [<xref ref-type="bibr" rid="CR14">14</xref>], this approach takes advantage of the rough estimation of the <italic>candidate cluster</italic> from a seed point and thus allows us to dynamically and efficiently discover clusters with varying sizes. This process is iterated until no further <italic>candidate clusters</italic> or <italic>seed</italic> points are observed. Please refer to Implementation Section for detailed information. The resulting clusters are depicted as detected clusters in Fig. <xref rid="Fig1" ref-type="fig">1</xref>. Note that few reads still remain unclustered due to the noise present in composition and coverage vectors of error-prone long reads and we will show how to assign them to existing bins in the next section.</p>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Step 3</title>
      <sec id="Sec11">
        <title>Obtaining final bins</title>
        <p id="Par19">Once all the clusters have been yielded, the points that are sparsely located are left aside. However, such points could have the potential to improve the downstream assembly processes. Hence, we assign such points to the detected clusters using the statistical model from MetaBCC-LR [<xref ref-type="bibr" rid="CR15">15</xref>]. For each cluster <inline-formula id="IEq58"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_k$$\end{document}</tex-math><mml:math id="M122"><mml:msub><mml:mi>C</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq58.gif"/></alternatives></inline-formula> the mean <inline-formula id="IEq59"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu ^{C}_k$$\end{document}</tex-math><mml:math id="M124"><mml:msubsup><mml:mi>μ</mml:mi><mml:mi>k</mml:mi><mml:mi>C</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq59.gif"/></alternatives></inline-formula>, <inline-formula id="IEq60"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu ^{T}_k$$\end{document}</tex-math><mml:math id="M126"><mml:msubsup><mml:mi>μ</mml:mi><mml:mi>k</mml:mi><mml:mi>T</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq60.gif"/></alternatives></inline-formula> and standard deviation <inline-formula id="IEq61"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma ^{C}_k$$\end{document}</tex-math><mml:math id="M128"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>k</mml:mi><mml:mi>C</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq61.gif"/></alternatives></inline-formula>, <inline-formula id="IEq62"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma ^{T}_k$$\end{document}</tex-math><mml:math id="M130"><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>k</mml:mi><mml:mi>T</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq62.gif"/></alternatives></inline-formula> is computed using the coverage and composition vectors; <inline-formula id="IEq63"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^C$$\end{document}</tex-math><mml:math id="M132"><mml:msup><mml:mi>V</mml:mi><mml:mi>C</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq63.gif"/></alternatives></inline-formula> and <inline-formula id="IEq64"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^T$$\end{document}</tex-math><mml:math id="M134"><mml:msup><mml:mi>V</mml:mi><mml:mi>T</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq64.gif"/></alternatives></inline-formula> respectively.<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} PDF({\bar{v}},{\bar{\mu }},{\bar{\sigma }}) = \prod _{j}^{|{\bar{v}}|} \frac{1}{\sqrt{2\pi }\sigma _j} e^{-\frac{(x_j-\mu _j)^2}{2\sigma _j^2}} \end{aligned}$$\end{document}</tex-math><mml:math id="M136" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mi>D</mml:mi><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>μ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>σ</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>j</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:munderover><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:msqrt><mml:mrow><mml:mn>2</mml:mn><mml:mi>π</mml:mi></mml:mrow></mml:msqrt><mml:msub><mml:mi>σ</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfrac><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mfrac><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>μ</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mrow><mml:mn>2</mml:mn><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mfrac></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>Finally the unclustered reads are assigned to the cluster <inline-formula id="IEq65"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_i$$\end{document}</tex-math><mml:math id="M138"><mml:msub><mml:mi>C</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq65.gif"/></alternatives></inline-formula> using a maximum likelihood computed using Eq. <xref rid="Equ4" ref-type="">4</xref>. The assignment of reads is performed such that Eq. <xref rid="Equ5" ref-type="">5</xref> is maximised. <inline-formula id="IEq66"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^C_l$$\end{document}</tex-math><mml:math id="M140"><mml:msubsup><mml:mi>V</mml:mi><mml:mi>l</mml:mi><mml:mi>C</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq66.gif"/></alternatives></inline-formula> and <inline-formula id="IEq67"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$V^T_l$$\end{document}</tex-math><mml:math id="M142"><mml:msubsup><mml:mi>V</mml:mi><mml:mi>l</mml:mi><mml:mi>T</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq67.gif"/></alternatives></inline-formula> are the coverage histogram and trimer frequency vectors of the unclustered read <italic>l</italic>.<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} C_i = \mathop {\mathrm{argmax}}\limits _{i} \bigg \{PDF(V^{C}_l,\mu ^{C}_i,\sigma ^{C}_i)\times PDF(V^T_l,\mu ^T_i,\sigma ^T_i)\bigg \} \end{aligned}$$\end{document}</tex-math><mml:math id="M144" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mi mathvariant="normal">argmax</mml:mi><mml:mi>i</mml:mi></mml:munder><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em" stretchy="true">{</mml:mo></mml:mrow><mml:mi>P</mml:mi><mml:mi>D</mml:mi><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>l</mml:mi><mml:mi>C</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>μ</mml:mi><mml:mi>i</mml:mi><mml:mi>C</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mi>C</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi>P</mml:mi><mml:mi>D</mml:mi><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>V</mml:mi><mml:mi>l</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>μ</mml:mi><mml:mi>i</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo maxsize="2.047em" minsize="2.047em" stretchy="true">}</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Experimental setup</title>
    <sec id="Sec13">
      <title>Datasets</title>
      <p id="Par20">We evaluated LRBinner using several simulated and real datasets containing long reads. Detailed information about the datasets and constituent species are tabulated in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Tables S1 and S2.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of binning results of BuseBeeWeb, MetaBCC-LR and LRBinner</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Dataset</th><th align="left">Actual no. of bins</th><th align="left">Evaluation criteria</th><th align="left">MetaBCC-LR</th><th align="left">LRBinner</th></tr></thead><tbody><tr><td align="left" rowspan="4">Sim-8</td><td align="left" rowspan="4">8</td><td align="left">Precision</td><td align="left">90.78%</td><td align="left"><bold>99.14%</bold></td></tr><tr><td align="left">Recall</td><td align="left">96.18%</td><td align="left"><bold>99.14%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">93.40 %</td><td align="left"><bold>99.14%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left">13</td><td align="left"><bold>8</bold></td></tr><tr><td align="left" rowspan="4">Sim-20</td><td align="left" rowspan="4">20</td><td align="left">Precision</td><td align="left">82.97%</td><td align="left"><bold>90.53%</bold></td></tr><tr><td align="left">Recall</td><td align="left">81.95%</td><td align="left"><bold>88.23%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">82.46%</td><td align="left"><bold>89.36%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left">29</td><td align="left"><bold>18</bold></td></tr><tr><td align="left" rowspan="4">Sim-50</td><td align="left" rowspan="4">50</td><td align="left">Precision</td><td align="left"> 82.23%</td><td align="left"><bold>91.92%</bold></td></tr><tr><td align="left">Recall</td><td align="left">70.56%</td><td align="left"><bold>77.03%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">75.95%</td><td align="left"><bold>83.82%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left"><bold>32</bold></td><td align="left">31</td></tr><tr><td align="left" rowspan="4">Sim-100</td><td align="left" rowspan="4">100</td><td align="left">Precision</td><td align="left"><bold>90.50%</bold></td><td align="left">82.60%</td></tr><tr><td align="left">Recall</td><td align="left">84.54%</td><td align="left"><bold>92.78%</bold></td></tr><tr><td align="left">F1 score</td><td align="left"><bold>88.54%</bold></td><td align="left">87.39%</td></tr><tr><td align="left">Bins detected</td><td align="left"><bold>89</bold></td><td align="left">63</td></tr><tr><td align="left" rowspan="4">ZymoEVEN</td><td align="left" rowspan="4">10</td><td align="left">Precision</td><td align="left">72.41%</td><td align="left"><bold>91.26%</bold></td></tr><tr><td align="left">Recall</td><td align="left"><bold>92.97%</bold></td><td align="left">75.36%</td></tr><tr><td align="left">F1 score</td><td align="left">81.41%</td><td align="left"><bold>82.55%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left"><bold>8</bold></td><td align="left">17</td></tr><tr><td align="left" rowspan="4">MSA-1003</td><td align="left" rowspan="4">10</td><td align="left">Precision</td><td align="left">93.69%</td><td align="left"><bold>95.30%</bold></td></tr><tr><td align="left">Recall</td><td align="left">95.50%</td><td align="left"><bold>95.99%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">94.59%</td><td align="left"><bold>95.64%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left">14</td><td align="left"><bold>10</bold></td></tr><tr><td align="left" rowspan="4">SRX9569057</td><td align="left" rowspan="4">17</td><td align="left">Precision</td><td align="left"><bold>80.94</bold></td><td align="left">80.47%</td></tr><tr><td align="left">Recall</td><td align="left">85.82</td><td align="left"><bold>90.68%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">83.31</td><td align="left"><bold>85.27%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left">23</td><td align="left"><bold>16</bold></td></tr><tr><td align="left" rowspan="4">SRX9569058</td><td align="left" rowspan="4">17</td><td align="left">Precision</td><td align="left">70.18%</td><td align="left"><bold>73.72%</bold></td></tr><tr><td align="left">Recall</td><td align="left">86.63%</td><td align="left"><bold>91.03%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">77.54%</td><td align="left"><bold>81.46%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left">37</td><td align="left"><bold>22</bold></td></tr><tr><td align="left" rowspan="4">SRX9569059</td><td align="left" rowspan="4">17</td><td align="left">Precision</td><td align="left">66.69%</td><td align="left"><bold>79.70%</bold></td></tr><tr><td align="left">Recall</td><td align="left">73.76%</td><td align="left"><bold>91.25%</bold></td></tr><tr><td align="left">F1 score</td><td align="left">70.05%</td><td align="left"><bold>85.08%</bold></td></tr><tr><td align="left">Bins detected</td><td align="left"><bold>16</bold></td><td align="left">20</td></tr></tbody></table><table-wrap-foot><p>The best performance values and bin estimations are highlighted in bold text</p></table-wrap-foot></table-wrap><table-wrap id="Tab2"><label>Table 2</label><caption><p>Comparison of assembled genome fractions, CPU time consumed for assembly and peak memory usage of assembly before and after binning the reads</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Dataset</th><th align="left" rowspan="2">Assembly tool</th><th align="left" colspan="2">Genome fraction</th><th align="left" colspan="2">CPU hours</th><th align="left" colspan="2">Peak memory (GB)</th></tr><tr><th align="left">Raw</th><th align="left">Binned</th><th align="left">Raw</th><th align="left">Binned</th><th align="left">Raw</th><th align="left">Binned</th></tr></thead><tbody><tr><td align="left" rowspan="2">Sim-8</td><td align="left">Wtdbg2</td><td align="left">98.80%</td><td align="left"><bold>98.90%</bold></td><td align="left"><bold>0.26</bold></td><td align="left">0.84</td><td align="left">9.28</td><td align="left"><bold>0.96</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left"><bold>99.90%</bold></td><td align="left">99.85%</td><td align="left">16.13</td><td align="left"><bold>11.64</bold></td><td align="left">44.12</td><td align="left"><bold>10.65</bold></td></tr><tr><td align="left" rowspan="2">Sim-20</td><td align="left">Wtdbg2</td><td align="left">97.84%</td><td align="left"><bold>99.19%</bold></td><td align="left"><bold>0.16</bold></td><td align="left">2.28</td><td align="left">10.60</td><td align="left"><bold>0.92</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left"><bold>99.80%</bold></td><td align="left">99.75%</td><td align="left"><bold>19.44</bold></td><td align="left">20.28</td><td align="left">44.70</td><td align="left"><bold>11.23</bold></td></tr><tr><td align="left" rowspan="2">Sim-50</td><td align="left">Wtdbg2</td><td align="left">97.83%</td><td align="left"><bold>98.06%</bold></td><td align="left">6.03</td><td align="left"><bold>5.98</bold></td><td align="left">15.7</td><td align="left"><bold>2.68</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left"><bold>99.35%</bold></td><td align="left">98.43%</td><td align="left">23.03</td><td align="left"><bold>20.01</bold></td><td align="left">64.21</td><td align="left"><bold>14.58</bold></td></tr><tr><td align="left" rowspan="2">Sim-100</td><td align="left">Wtdbg2</td><td align="left">91.70%</td><td align="left"><bold>93.67%</bold></td><td align="left">9.2</td><td align="left"><bold>9.1</bold></td><td align="left">36.16</td><td align="left"><bold>10.84</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left">97.68%</td><td align="left"><bold>98.01%</bold></td><td align="left">69.79</td><td align="left"><bold>59.89</bold></td><td align="left">116.11</td><td align="left"><bold>27.48</bold></td></tr><tr><td align="left" rowspan="2">ZymoEVEN</td><td align="left">Wtdbg2</td><td align="left">55.17%</td><td align="left"><bold>58.63%</bold></td><td align="left"><bold>1.37</bold></td><td align="left">1.38</td><td align="left">11.07</td><td align="left"><bold>2.88</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left">86.51%</td><td align="left"><bold>86.55%</bold></td><td align="left">15.17</td><td align="left"><bold>13.05</bold></td><td align="left">31.67</td><td align="left"><bold>14.57</bold></td></tr><tr><td align="left" rowspan="2">MSA-1003<inline-formula id="IEq68"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^{\dagger }$$\end{document}</tex-math><mml:math id="M146"><mml:msup><mml:mrow/><mml:mo>†</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq68.gif"/></alternatives></inline-formula></td><td align="left">Wtdbg2</td><td align="left">67.45%</td><td align="left"><bold>82.50%</bold></td><td align="left"><bold>0.31</bold></td><td align="left">1.05</td><td align="left">23.43</td><td align="left"><bold>19.61</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left">91.40%</td><td align="left"><bold>91.74%</bold></td><td align="left"><bold>155.96</bold></td><td align="left">158.59</td><td align="left">62.28</td><td align="left"><bold>45.38</bold></td></tr><tr><td align="left" rowspan="2">SRX9569057</td><td align="left">Wtdbg2</td><td align="left">40.40%</td><td align="left"><bold>73.02%</bold></td><td align="left"><bold>0.26</bold></td><td align="left">1.56</td><td align="left">21.72</td><td align="left"><bold>3.88</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left"><bold>77.73%</bold></td><td align="left">73.68%</td><td align="left">122.00</td><td align="left"><bold>116.20</bold></td><td align="left">57.91</td><td align="left"><bold>26.31</bold></td></tr><tr><td align="left" rowspan="2">SRX9569058</td><td align="left">Wtdbg2</td><td align="left">37.51%</td><td align="left"><bold>80.65%</bold></td><td align="left"><bold>0.30</bold></td><td align="left">1.98</td><td align="left">30.79</td><td align="left"><bold>3.86</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left">79.16%</td><td align="left"><bold>79.63%</bold></td><td align="left"><bold>211.61</bold></td><td align="left">212.58</td><td align="left">87.62</td><td align="left"><bold>41.37</bold></td></tr><tr><td align="left" rowspan="2">SRX9569059</td><td align="left">Wtdbg2</td><td align="left">41.00%</td><td align="left"><bold>80.38%</bold></td><td align="left"><bold>0.26</bold></td><td align="left">1.82</td><td align="left">25.63</td><td align="left"><bold>3.80</bold></td></tr><tr><td align="left">MetaFlye</td><td align="left"><bold>79.69%</bold></td><td align="left">77.46%</td><td align="left">152.64</td><td align="left"><bold>129.41</bold></td><td align="left">62.62</td><td align="left"><bold>30.56</bold></td></tr></tbody></table><table-wrap-foot><p><inline-formula id="IEq69"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\dagger$$\end{document}</tex-math><mml:math id="M148"><mml:mo>†</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq69.gif"/></alternatives></inline-formula> Genome fraction computed from species with at least 0.1% abundance</p><p>The best performance values and bin estimations are highlighted in bold text</p></table-wrap-foot></table-wrap></p>
      <sec id="Sec14">
        <title>Simulated datasets</title>
        <p id="Par21">We simulated four datasets using SimLoRD [<xref ref-type="bibr" rid="CR24">24</xref>] to evaluate the performance of our method. The datasets consist of 8, 20, 50 and 100 species. These datasets are named as <bold>Sim-8</bold>, <bold>Sim-20</bold>, <bold>Sim-50</bold> and <bold>Sim-100</bold> respectively. We set the average read length to be 5,000bp with default error model of SimLoRD (insertion probability=0.11, deletion probability=0.04 and substitution probability=0.01).</p>
      </sec>
      <sec id="Sec15">
        <title>Real datasets</title>
        <p id="Par22">In order to evaluate LRBinner, we used several real datasets with known ground-truth references. To determine the origins of the reads in these datasets, the reads were mapped to the respective reference species using Minimap2 [<xref ref-type="bibr" rid="CR25">25</xref>]. The information about the datasets are as follows.<list list-type="bullet"><list-item><p id="Par23">Reads from ZymoEVEN Mock Microbial Community with Oxford nanopore reads from NCBI Accession Number <italic>ERR3152364</italic> [<xref ref-type="bibr" rid="CR26">26</xref>]. We removed shorter reads (less than 1000bp) and reads that did not align with any of the reference species in the mock community for evaluation purposes.</p></list-item><list-item><p id="Par24">Reads from ATCC MSA-1003 Mock Microbial Community with PacBio CCS reads from NCBI BioProject number <italic>PRJNA546278</italic> (<bold>MSA-1003</bold>). For the evaluation we used the top 10 species which have more than 1% abundance.</p></list-item><list-item><p id="Par25">PacBio-HiFi reads obtained from NCBI BioProject number <italic>PRJNA680590</italic>. There are 3 read samples (NCBI BioSample number <italic>SAMN16885726</italic>) and each sample consists of 21 strains for 17 species as follows;<list list-type="bullet"><list-item><p id="Par26"><bold>SRX9569057</bold>: Standard input library</p></list-item><list-item><p id="Par27"><bold>SRX9569058</bold>: Low input library</p></list-item><list-item><p id="Par28"><bold>SRX9569059</bold>: Ultra low input library (PCR amplified sample)</p></list-item></list></p></list-item></list></p>
      </sec>
    </sec>
    <sec id="Sec16">
      <title>Tools for benchmarking</title>
      <p id="Par29">There is a limited number of tools that support binning of long reads. Remind that most contig-binning tools cannot be directly applied to bin long reads (even for highly accurate PacBio HiFi reads) because there is no coverage information available for each long read. Hence, in our evaluation we benchmark LRBinner against MetaBCC-LR [<xref ref-type="bibr" rid="CR15">15</xref>] which support large error prone long-reads. Note that, BusyBeeWeb only supports up to 200MB of FASTA formatted data. Hence, we omit BusyBeeWeb from our evaluations although it can handle a smaller amount of long reads for a fair comparison.</p>
    </sec>
    <sec id="Sec17">
      <title>Evaluation criteria</title>
      <p id="Par30">In our evaluation we report precision (Eq. <xref rid="Equ6" ref-type="">6</xref>), recall (Eq. <xref rid="Equ7" ref-type="">7</xref>) and F1-score (Eq. <xref rid="Equ8" ref-type="">8</xref>) of binning. We transform the binning result to a matrix <italic>a</italic> of size <inline-formula id="IEq70"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$K\times S$$\end{document}</tex-math><mml:math id="M150"><mml:mrow><mml:mi>K</mml:mi><mml:mo>×</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq70.gif"/></alternatives></inline-formula>, where <italic>K</italic> denotes the number of bins and <italic>S</italic> denotes the number of species. Note that <inline-formula id="IEq71"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a_{ks}$$\end{document}</tex-math><mml:math id="M152"><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi mathvariant="italic">ks</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq71.gif"/></alternatives></inline-formula> denotes the number of reads assigned to bin <italic>k</italic> with ground truth species <italic>s</italic>. In order to evaluate the quality of binning, we used AMBER [<xref ref-type="bibr" rid="CR27">27</xref>] to obtain the completeness (defined as <inline-formula id="IEq72"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{\textit{true positives}_b}{\textit{true positives}_b+\textit{false negatives}_b}$$\end{document}</tex-math><mml:math id="M154"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">true</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi mathvariant="italic">positives</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="italic">true</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi mathvariant="italic">positives</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="italic">false</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi mathvariant="italic">negatives</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq72.gif"/></alternatives></inline-formula> for each bin <italic>b</italic>) and contamination (defined as <inline-formula id="IEq73"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1-\frac{\textit{true positives}_b}{\textit{true positives}_b+\textit{false positives}_b}$$\end{document}</tex-math><mml:math id="M156"><mml:mrow><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">true</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi mathvariant="italic">positives</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:mi mathvariant="italic">true</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi mathvariant="italic">positives</mml:mi><mml:mi>b</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi mathvariant="italic">false</mml:mi><mml:mspace width="4pt"/><mml:msub><mml:mi mathvariant="italic">positives</mml:mi><mml:mi>b</mml:mi></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq73.gif"/></alternatives></inline-formula> for each bin <italic>b</italic>). Furthermore, we assemble the reads before and after binning using LRBinner. Metagenomics assemblies were performed using wtdbg2 [<xref ref-type="bibr" rid="CR28">28</xref>] and metaFlye [<xref ref-type="bibr" rid="CR29">29</xref>]. We compare genome fractions, CPU-time and memory usage in assembly evaluation. We used MetaQUAST [<xref ref-type="bibr" rid="CR30">30</xref>] to obtain the average genome fraction (average over all the reference genomes) for the qualitative evaluation of assembled contigs.<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} Precision= &amp; {} \frac{\sum _{k}max_s \{a_{ks}\}}{\sum _{k}\sum _{s}a_{ks}} \end{aligned}$$\end{document}</tex-math><mml:math id="M158" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mfrac><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi mathvariant="italic">ks</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mo>∑</mml:mo><mml:mi>s</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi mathvariant="italic">ks</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ7"><label>7</label><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} Recall= &amp; {} \frac{\sum _{s}max_k \{a_{ks}\}}{\sum _{k}\sum _{s}a_{ks}} \end{aligned}$$\end{document}</tex-math><mml:math id="M160" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>R</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mfrac><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>s</mml:mi></mml:msub><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi mathvariant="italic">ks</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:msub><mml:mo>∑</mml:mo><mml:mi>s</mml:mi></mml:msub><mml:msub><mml:mi>a</mml:mi><mml:mrow><mml:mi mathvariant="italic">ks</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equ8"><label>8</label><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} F1= &amp; {} 2\times \frac{Precision\times Recall}{Precision+Recall} \end{aligned}$$\end{document}</tex-math><mml:math id="M162" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>F</mml:mi><mml:mn>1</mml:mn><mml:mo>=</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>2</mml:mn><mml:mo>×</mml:mo><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>×</mml:mo><mml:mi>R</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>R</mml:mi><mml:mi>e</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2022_221_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
  </sec>
  <sec id="Sec18">
    <title>Results and discussion</title>
    <p id="Par31">We first compare precision, recall, F1 score and the estimated number of bins for binning performance. We further present the completeness and contamination results of bins produced by different binners. We finally evaluate assembly results using genome fraction and recorded the resource utilisation for the chosen assembly tools.</p>
    <sec id="Sec19">
      <title>Binning results</title>
      <p id="Par32">We benchmarked the binning performance MetaBCC-LR and LRBinner using typical metrics for evluating binning performance [<xref ref-type="bibr" rid="CR15">15</xref>]. Table <xref rid="Tab1" ref-type="table">1</xref> demonstrates the binning results in terms of precision, recall, F1-score and the number of inferred bins. While MetaBCC-LR and LRBinner perform in a comparable fashion on simulated datasets, LRBinner achieves the best estimation on the number of bins with respect to the ground truth for most of the datasets. Note that LRBinner improves binning results for all the real datasets as indicated by the higher F1 scores.<fig id="Fig3"><label>Fig. 3</label><caption><p>Comparison of bin completeness between MetaBCC-LR and LRBinner for the simulated datasets</p></caption><graphic xlink:href="13015_2022_221_Fig3_HTML" id="MO11"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>Comparison of bin completeness between MetaBCC-LR and LRBinner for the real datasets</p></caption><graphic xlink:href="13015_2022_221_Fig4_HTML" id="MO12"/></fig><fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison of bin contamination between MetaBCC-LR and LRBinner for the simulated datasets</p></caption><graphic xlink:href="13015_2022_221_Fig5_HTML" id="MO13"/></fig><fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison of bin contamination between MetaBCC-LR and LRBinner for the real datasets</p></caption><graphic xlink:href="13015_2022_221_Fig6_HTML" id="MO14"/></fig><fig id="Fig7"><label>Fig. 7</label><caption><p>Comparison of bin completeness and contamination between MetaBCC-LR and LRBinner for the real nanopore dataset</p></caption><graphic xlink:href="13015_2022_221_Fig7_HTML" id="MO15"/></fig></p>
      <p id="Par33">Figures <xref rid="Fig3" ref-type="fig">3</xref> and  <xref rid="Fig4" ref-type="fig">4</xref> illustrates the completeness of bins produced by MetaBCC-LR and LRBinner, for simulated and real datasets respectively. LRBinner has been able to produce bins with better average completeness over MetaBCC-LR. Figures <xref rid="Fig5" ref-type="fig">5</xref> and <xref rid="Fig6" ref-type="fig">6</xref> also illustrates the contamination levels of bins produced by MetaBCC-LR and LRBinner, for simulated and real datasets respectively. From the plots it is evident that LRBinner produces bins with lower contamination in all datasets except for <bold>SRX9569059</bold>. Note that the dataset <bold>SRX9569059</bold> has been generated from a PCR amplified sample leading to a significant deviation from the original sample abundances in contrast with <bold>SRX9569057</bold> and <bold>SRX9569058</bold> datasets. For example, in <bold>SRX9569059</bold>, the abundance of <italic>Faecalibacterium prausnitzii</italic> drops from <inline-formula id="IEq74"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 16\%$$\end{document}</tex-math><mml:math id="M164"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>16</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq74.gif"/></alternatives></inline-formula> to <inline-formula id="IEq75"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 8\%$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>8</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq75.gif"/></alternatives></inline-formula> whereas the abundance of <italic>Fusobacterium nucleatum</italic> surges from <inline-formula id="IEq76"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 4\%$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>4</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq76.gif"/></alternatives></inline-formula> to <inline-formula id="IEq77"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 7\%$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>7</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq77.gif"/></alternatives></inline-formula>, which may result in contamination of long reads in binning results. Figure <xref rid="Fig7" ref-type="fig">7</xref> illustrates completeness and contamination for binning result of <bold>ZymoEVEN</bold> dataset. Both tools have comparable completeness over bins. LRBinner produce 8 bins with less than 20% contamination where as MetaBCC-LR has only 5 such bins. This observation is likely due to the higher error-rate observed among nanopore reads which deviate both coverage and composition vectors from the origin species. Since coverage and composition are not combined in MetaBCC-LR, it can still perform comparable to LRBinner.</p>
    </sec>
    <sec id="Sec20">
      <title>Assembly results</title>
      <p id="Par34">We assembled the reads binned by LRBinner to evaluate the potential assembly quality changes. For the assembly, we chose the two state-of-the-art long-read assemblers wtdbg2 [<xref ref-type="bibr" rid="CR28">28</xref>] and metaFlye [<xref ref-type="bibr" rid="CR29">29</xref>]. Table <xref rid="Tab2" ref-type="table">2</xref>, demonstrates that binning long reads prior to assembly by LRBinner improves the genome fraction for all wtdbg2 assemblies (up to 40%) and maintains comparable genome fractions for metaFlye assemblies. This is not surprising as metaFlye is a metagenomics specialised assembler in contrast with wtdbg2. For example, in the datasets SRX9569057, SRX9569058 and SRX9569059, binning via LRBinner enabled wtdbg2 to recover low-abundance species which were ignored in the assembly of the entire raw dataset, <italic>e.g., Methanobrevibacter smithii</italic> (from 0 to 96%), <italic>Saccharomyces cerevisiae</italic> (from 0 to 75%) and <italic>Candida albican</italic> (from 0 to 70%). This is because LRBinner allows wtdbg2 to estimate more appropriate parameters in each bin rather than applying the same parameters across the entire dataset.</p>
      <p id="Par35">Another advantage of binning prior to assembly is the reduction of the computing resources for assembly. As demonstrated in Table <xref rid="Tab2" ref-type="table">2</xref>, the peak-memory usage has been drastically reduced in both wtdbg2 (upto <inline-formula id="IEq78"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$10\times$$\end{document}</tex-math><mml:math id="M172"><mml:mrow><mml:mn>10</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq78.gif"/></alternatives></inline-formula>) and metaFlye (upto <inline-formula id="IEq79"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4\times$$\end{document}</tex-math><mml:math id="M174"><mml:mrow><mml:mn>4</mml:mn><mml:mo>×</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq79.gif"/></alternatives></inline-formula>) assemblies. Note that the CPU time is comparable as binning long reads may not lead to significant reduction of <italic>k</italic>-mer indexing cost and the construction and simplification of assembly graphs.</p>
    </sec>
  </sec>
  <sec id="Sec21">
    <title>Implementation</title>
    <p id="Par36">In order to restrict the iterative search for clusters, we use early termination parameters in our algorithm. We stop drawing seed points when the remaining number of reads reaches below <inline-formula id="IEq80"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$min\_cluster\_size$$\end{document}</tex-math><mml:math id="M176"><mml:mrow><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>c</mml:mi><mml:mi>l</mml:mi><mml:mi>u</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>z</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq80.gif"/></alternatives></inline-formula> (=5000 by default) or the number of iterations has passed <inline-formula id="IEq81"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$max\_iterations$$\end{document}</tex-math><mml:math id="M178"><mml:mrow><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>x</mml:mi><mml:mi>_</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>o</mml:mi><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq81.gif"/></alternatives></inline-formula> (=1000 by default). In order to evaluate the performance of with varying size of the composition vectors (<italic>k</italic>-mer size) we executed LRBinner with <italic>k</italic>=3, <italic>k</italic>=4 and <italic>k</italic>=5. The resource utilization and performance are shown in <xref rid="MOESM1" ref-type="media">1</xref>: Tables S3 and S4. The GPU utilization was below 4GB during all the experiments due to fixed batch size of 1024 reads. Coverage vectors were fixed at <inline-formula id="IEq82"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$bins$$\end{document}</tex-math><mml:math id="M180"><mml:mrow><mml:mi mathvariant="italic">bins</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq82.gif"/></alternatives></inline-formula>
<inline-formula id="IEq83"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M182"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq83.gif"/></alternatives></inline-formula>
<inline-formula id="IEq84"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$32$$\end{document}</tex-math><mml:math id="M184"><mml:mrow><mml:mn>32</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq84.gif"/></alternatives></inline-formula> and <inline-formula id="IEq85"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$bin\_width$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:mi>b</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>_</mml:mi><mml:mi>w</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq85.gif"/></alternatives></inline-formula>
<inline-formula id="IEq86"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$=$$\end{document}</tex-math><mml:math id="M188"><mml:mo>=</mml:mo></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq86.gif"/></alternatives></inline-formula>
<inline-formula id="IEq87"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$10$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2022_221_Article_IEq87.gif"/></alternatives></inline-formula>. Furthermore, the parameters for training auto-encoder, <italic>i.e.</italic>, loss function weights, were empirically determined based on the intuition of giving more prominence towards clustering. Hence, we have weighted composition more than coverage as composition (computed from smaller <italic>k</italic>-mer sizes) is usually more accurate compared to coverage (estimated from larger <italic>k</italic>-mer sizes). Furthermore, we have weighed the KL-divergence the least, to facilitate learning of disentangled representations enabling clustering.</p>
    <p id="Par37">LRBinner was implemented using C++ and Python version 3.7. The deep learning component is implemented using PyTorch [<xref ref-type="bibr" rid="CR31">31</xref>] and Numpy [<xref ref-type="bibr" rid="CR32">32</xref>]. We conducted our assemblies on NCI Australia with 2 x 28-core Intel Xeon Platinum 8274 (Cascade Lake) 3.2 GHz CPUs 192GB RAM and binning on Ubuntu 20.04.3 LTS system running on AMD Ryzen 9 5950X with 16-core Processor with 32 threads and 128GB of RAM with NVIDIA RTX 3090 GPU with 24GB VRAM. We used 56 threads for assembly and 32 threads for binning with GPU acceleration.</p>
  </sec>
  <sec id="Sec22">
    <title>Conclusion</title>
    <p id="Par38">In this paper, we presented LRBinner, a long read binner capable of binning error-prone long reads using both coverage and composition information. Our work extends the use of variational auto-encoders to combine raw features and learn a better latent representation for long-read binning. Furthermore, we presented a novel clustering strategy that can perform clustering on large datasets with varying cluster sizes. Performance of LRBinner was evaluated against existing long-read binners using simulated and real datasets. Our experimental results show that LRBinner outperforms state-of-the-art long-read binning tools and also improves resource usage of downstream assembly.</p>
    <p id="Par39">However, LRBinner still suffers from the following limitations. Firstly, it is challenging for LRBinner to distinguish long reads from similar regions shared between different species. Reads from such regions are likely to be assigned to any one of the species because LRBinner currently does not support overlapped binning. Similar to GraphBin2 [<xref ref-type="bibr" rid="CR33">33</xref>], LRBinner can be extended to detect such long reads and improve on the functionality of overlapped binning among distinct species. Secondly, LRBinner uses the valley-to-peak ratio to find candidate clusters which depends on the seed points. We intend to extend LRBinner to incorporate cluster scoring techniques such as Silhouette score to automatically find best candidate clusters. Thirdly, while the use of LRBinner prior to assembly increases the genome fraction, it may also result in a more fragmented assemblies (refer to <xref rid="MOESM1" ref-type="media">1</xref>: Table S5 in the Additional material). Hence, we are keen to explore the possibility of combining binning and assembly of long reads simultaneously in the future.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec23">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13015_2022_221_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Information about datasets. LR_Binner_BMC___Supp_ESM.pdf. Evaluation of LRBinner for varying composition k-mer sizes. Extended assembly quality evaluation.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>This research was undertaken with the assistance of resources and services from the National Computational Infrastructure (NCI Australia), an NCRIS enabled capability supported by the Australian Government. Furthermore, as an extension manuscript, we would like to thank anonymous reviewers from WABI 2021 and anonymous reviewers of this manuscript for their valuable input on our manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>All authors contributed to developing LRBinner and writing the paper. AW implemented LRBinner and performed all the experiments. YL directed the work. Both authors read and approved the final manuscript.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par40">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Bioinformatics for whole-genome shotgun sequencing of microbial communities</article-title>
        <source>PLOS Comput Biol</source>
        <year>2005</year>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0010024</pub-id>
        <?supplied-pmid 16201009?>
        <pub-id pub-id-type="pmid">16201009</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Kraken: ultrafast metagenomic sequence classification using exact alignments</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>3</issue>
        <fpage>46</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-3-r46</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Centrifuge: rapid and sensitive classification of metagenomic sequences</article-title>
        <source>Genome Res</source>
        <year>2016</year>
        <volume>26</volume>
        <issue>12</issue>
        <fpage>1721</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.210641.116</pub-id>
        <pub-id pub-id-type="pmid">27852649</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Menzel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ng</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Krogh</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Fast and sensitive taxonomic classification for metagenomics with Kaiju</article-title>
        <source>Nat Commun</source>
        <year>2016</year>
        <volume>7</volume>
        <fpage>11257</fpage>
        <pub-id pub-id-type="doi">10.1038/ncomms11257</pub-id>
        <pub-id pub-id-type="pmid">27071849</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kang</surname>
            <given-names>DD</given-names>
          </name>
          <name>
            <surname>Froula</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Egan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>MetaBAT, an efficient tool for accurately reconstructing single genomes from complex microbial communities</article-title>
        <source>PeerJ</source>
        <year>2015</year>
        <volume>3</volume>
        <fpage>1165</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.1165</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kang</surname>
            <given-names>DD</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kirton</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Thomas</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>MetaBAT 2: an adaptive binning algorithm for robust and efficient genome reconstruction from metagenome assemblies</article-title>
        <source>PeerJ</source>
        <year>2019</year>
        <volume>7</volume>
        <fpage>7359</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.7359</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>Y-W</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>Y-H</given-names>
          </name>
          <name>
            <surname>Tringe</surname>
            <given-names>SG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Maxbin: an automated binning method to recover individual genomes from metagenomes using an expectation-maximization algorithm</article-title>
        <source>Microbiome</source>
        <year>2014</year>
        <volume>2</volume>
        <issue>1</issue>
        <fpage>26</fpage>
        <pub-id pub-id-type="doi">10.1186/2049-2618-2-26</pub-id>
        <pub-id pub-id-type="pmid">25136443</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>Y-W</given-names>
          </name>
          <name>
            <surname>Simmons</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Singer</surname>
            <given-names>SW</given-names>
          </name>
        </person-group>
        <article-title>MaxBin 2.0: an automated binning algorithm to recover genomes from multiple metagenomic datasets</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>32</volume>
        <issue>4</issue>
        <fpage>605</fpage>
        <lpage>607</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv638</pub-id>
        <pub-id pub-id-type="pmid">26515820</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yu</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BMC3C: binning metagenomic contigs using codon usage, sequence composition and read coverage</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>24</issue>
        <fpage>4172</fpage>
        <lpage>4179</lpage>
        <?supplied-pmid 29947757?>
        <pub-id pub-id-type="pmid">29947757</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Laczny</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Kiefer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Galata</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BusyBee Web: metagenomic data analysis by bootstrapped supervised binning and annotation</article-title>
        <source>Nucleic Acids Res</source>
        <year>2017</year>
        <volume>45</volume>
        <issue>W1</issue>
        <fpage>171</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkx348</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Laczny</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Sternal</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Plugaru</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gawron</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Atashpendar</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Margossian</surname>
            <given-names>HH</given-names>
          </name>
          <name>
            <surname>Coronado</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Van der Maaten</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Vlassis</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Wilmes</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Vizbin-an application for reference-independent visualization and human-augmented binning of metagenomic data</article-title>
        <source>Microbiome</source>
        <year>2015</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1186/s40168-014-0066-1</pub-id>
        <pub-id pub-id-type="pmid">25621171</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>YY</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SolidBin: improving metagenome binning with semi-supervised normalized cut</article-title>
        <source>Bioinformatics</source>
        <year>2019</year>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btz253</pub-id>
        <?supplied-pmid 31888442?>
        <pub-id pub-id-type="pmid">31888442</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andreace</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Pizzi</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Comin</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Metaprob 2: metagenomic reads binning based on assembly using minimizers and k-mers statistics</article-title>
        <source>J Comput Biol</source>
        <year>2021</year>
        <volume>28</volume>
        <issue>11</issue>
        <fpage>1052</fpage>
        <lpage>1062</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2021.0270</pub-id>
        <pub-id pub-id-type="pmid">34448593</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nissen</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Johansen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Allesøe</surname>
            <given-names>RL</given-names>
          </name>
          <name>
            <surname>Sønderby</surname>
            <given-names>CK</given-names>
          </name>
          <name>
            <surname>Armenteros</surname>
            <given-names>JJA</given-names>
          </name>
          <name>
            <surname>Grønbech</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Jensen</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>HB</given-names>
          </name>
          <name>
            <surname>Petersen</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Winther</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Rasmussen</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Improved metagenome binning and assembly using deep variational autoencoders</article-title>
        <source>Nat Biotechnol</source>
        <year>2021</year>
        <pub-id pub-id-type="doi">10.1038/s41587-020-00777-4</pub-id>
        <?supplied-pmid 33398153?>
        <pub-id pub-id-type="pmid">33398153</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wickramarachchi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Mallawaarachchi</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Rajan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>MetaBCC-LR: metagenomics binning by coverage and composition for long reads</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <issue>Supplement 1</issue>
        <fpage>3</fpage>
        <lpage>11</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa441</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>H-H</given-names>
          </name>
          <name>
            <surname>Liao</surname>
            <given-names>Y-C</given-names>
          </name>
        </person-group>
        <article-title>Accurate binning of metagenomic contigs via automated clustering sequences using information of genomic signatures and marker genes</article-title>
        <source>Sci Rep.</source>
        <year>2016</year>
        <volume>6</volume>
        <fpage>24175</fpage>
        <pub-id pub-id-type="doi">10.1038/srep24175.27067514</pub-id>
        <?supplied-pmid 27067514?>
        <pub-id pub-id-type="pmid">27067514</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wenger</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Peluso</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Rowell</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>P-C</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>RJ</given-names>
          </name>
          <name>
            <surname>Concepcion</surname>
            <given-names>GT</given-names>
          </name>
          <name>
            <surname>Ebler</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fungtammasan</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kolesnikov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>ND</given-names>
          </name>
          <name>
            <surname>Töpfer</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Alonge</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Mahmoud</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Qian</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Chin</surname>
            <given-names>C-S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Marschall</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Sedlazeck</surname>
            <given-names>FJ</given-names>
          </name>
          <name>
            <surname>Zook</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Carroll</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rank</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Hunkapiller</surname>
            <given-names>MW</given-names>
          </name>
        </person-group>
        <article-title>Accurate circular consensus long-read sequencing improves variant detection and assembly of a human genome</article-title>
        <source>Nat Biotechnol</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>10</issue>
        <fpage>1155</fpage>
        <lpage>1162</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0217-9</pub-id>
        <?supplied-pmid 31406327?>
        <pub-id pub-id-type="pmid">31406327</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Abe</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kanaya</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kinouchi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ichiba</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Kozuki</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ikemura</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Informatics for unveiling hidden genome signatures</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <volume>13</volume>
        <issue>4</issue>
        <fpage>693</fpage>
        <lpage>702</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.634603</pub-id>
        <pub-id pub-id-type="pmid">12671005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Deschavanne</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Giron</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vilain</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Fagot</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Fertil</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Genomic signature: characterization and classification of species assessed by chaos game representation of sequences</article-title>
        <source>Mol Biol Evol</source>
        <year>1999</year>
        <volume>16</volume>
        <issue>10</issue>
        <fpage>1391</fpage>
        <lpage>1399</lpage>
        <pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a026048</pub-id>
        <pub-id pub-id-type="pmid">10563018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alneberg</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bjarnason</surname>
            <given-names>BS</given-names>
          </name>
          <name>
            <surname>de Bruijn</surname>
            <given-names>I</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Binning metagenomic contigs by coverage and composition</article-title>
        <source>Nat Methods</source>
        <year>2014</year>
        <volume>11</volume>
        <fpage>1144</fpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3103</pub-id>
        <pub-id pub-id-type="pmid">25218180</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pellow</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Mizrahi</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Shamir</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Plasclass improves plasmid sequence classification</article-title>
        <source>PLOS Comput Biol</source>
        <year>2020</year>
        <volume>16</volume>
        <issue>4</issue>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1007781</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rizk</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lavenier</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Chikhi</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>DSK: k-mer counting with very low memory usage</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>652</fpage>
        <lpage>653</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt020</pub-id>
        <pub-id pub-id-type="pmid">23325618</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kullback</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Leibler</surname>
            <given-names>RA</given-names>
          </name>
        </person-group>
        <article-title>On information and sufficiency</article-title>
        <source>Ann Math Stat</source>
        <year>1951</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>79</fpage>
        <lpage>86</lpage>
        <pub-id pub-id-type="doi">10.1214/aoms/1177729694</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stöcker</surname>
            <given-names>BK</given-names>
          </name>
          <name>
            <surname>Köster</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rahmann</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>SimLoRD: simulation of long read data</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>17</issue>
        <fpage>2704</fpage>
        <lpage>2706</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw286</pub-id>
        <pub-id pub-id-type="pmid">27166244</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>18</issue>
        <fpage>3094</fpage>
        <lpage>3100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nicholls</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Quick</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Loman</surname>
            <given-names>NJ</given-names>
          </name>
        </person-group>
        <article-title>Ultra-deep, long-read nanopore sequencing of mock microbial community standards</article-title>
        <source>Gigascience</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>043</fpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/giz043</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Meyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Hofmann</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Belmann</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Garrido-Oter</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Fritz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Sczyrba</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>McHardy</surname>
            <given-names>AC</given-names>
          </name>
        </person-group>
        <article-title>AMBER: assessment of metagenome BinnERs</article-title>
        <source>GigaScience.</source>
        <year>2018</year>
        <pub-id pub-id-type="doi">10.1093/gigascience/giy069</pub-id>
        <?supplied-pmid 30053290?>
        <pub-id pub-id-type="pmid">30053290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate long-read assembly with wtdbg2</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <issue>2</issue>
        <fpage>155</fpage>
        <lpage>158</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-019-0669-3</pub-id>
        <?supplied-pmid 31819265?>
        <pub-id pub-id-type="pmid">31819265</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kolmogorov</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bickhart</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Behsaz</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rayko</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shin</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Kuhn</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Polevikov</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>TPL</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>PA</given-names>
          </name>
        </person-group>
        <article-title>Metaflye: scalable long-read metagenome assembly using repeat graphs</article-title>
        <source>Nat Methods</source>
        <year>2020</year>
        <volume>17</volume>
        <issue>11</issue>
        <fpage>1103</fpage>
        <lpage>1110</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-020-00971-x</pub-id>
        <?supplied-pmid 33020656?>
        <pub-id pub-id-type="pmid">33020656</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mikheenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Saveliev</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>MetaQUAST: evaluation of metagenome assemblies</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>32</volume>
        <issue>7</issue>
        <fpage>1088</fpage>
        <lpage>1090</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv697</pub-id>
        <pub-id pub-id-type="pmid">26614127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Paszke A, Gross S, Massa F, Lerer A, Bradbury J, Chanan G, Killeen T, Lin Z, Gimelshein N, Antiga L, Desmaison A, Kopf A, Yang E, DeVito Z, Raison M, Tejani A, Chilamkurthy S, Steiner B, Fang L, Bai J, Chintala S. Pytorch: An imperative style, high-performance deep learning library. In: Wallach H, Larochelle H, Beygelzimer A, d’ Alché-Buc F, Fox E, Garnett R. (eds.) Advances in Neural Information Processing Systems 32, Curran Associates Inc, New York. 2019, 8024–8035</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Harris CR, Millman KJ, Van Der Walt SJ, Gommers R, Virtanen P, Cournapeau D, Wieser E, Taylor J, Berg S, Smith NJ, Kern R. Array programming with NumPy. Nature. 2020;585:357–62. 10.1038/s41586-020-2649-2.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mallawaarachchi</surname>
            <given-names>VG</given-names>
          </name>
          <name>
            <surname>Wickramarachchi</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Improving metagenomic binning results with overlapped bins using assembly graphs</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2021</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>18</lpage>
        <pub-id pub-id-type="doi">10.1186/s13015-021-00185-6</pub-id>
        <pub-id pub-id-type="pmid">33639968</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

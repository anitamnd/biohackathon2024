<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Database (Oxford)</journal-id>
    <journal-id journal-id-type="iso-abbrev">Database (Oxford)</journal-id>
    <journal-id journal-id-type="publisher-id">databa</journal-id>
    <journal-title-group>
      <journal-title>Database: The Journal of Biological Databases and Curation</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-0463</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
      <publisher-loc>UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9547537</article-id>
    <article-id pub-id-type="doi">10.1093/database/baac087</article-id>
    <article-id pub-id-type="publisher-id">baac087</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Article</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00960</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Ontology Development Kit: a toolkit for building, maintaining and standardizing biomedical ontologies</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Matentzoglu</surname>
          <given-names>Nicolas</given-names>
        </name>
        <aff><institution>Semanticly</institution>, Spaces Ermou Ermou 56, Athens 10563 ΓΕΜΗ 160976003000, <country country="GR">Greece</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6095-8718</contrib-id>
        <name>
          <surname>Goutte-Gattat</surname>
          <given-names>Damien</given-names>
        </name>
        <aff><institution content-type="department">Department of Physiology, Development and Neuroscience, University of Cambridge</institution>, Downing Street, Cambridge, CB2 3DY, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7258-9596</contrib-id>
        <name>
          <surname>Tan</surname>
          <given-names>Shawn Zheng Kai</given-names>
        </name>
        <aff><institution content-type="department">Samples Phenotypes and Ontologies Team (SPOT), European Bioinformatics Institute (EMBL-EBI)</institution>, Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8688-6599</contrib-id>
        <name>
          <surname>Balhoff</surname>
          <given-names>James P</given-names>
        </name>
        <aff><institution>RENCI, University of North Carolina</institution>, Chapel Hill, NC, North Carolina 27517, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Carbon</surname>
          <given-names>Seth</given-names>
        </name>
        <aff><institution content-type="department">Berkeley Bioinformatics Open-source Projects (BBOP), Lawrence Berkeley National Laboratory (LBNL)</institution>, 1 Cyclotron Road, Mailstop 977-0257, Berkeley, CA 94720, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Caron</surname>
          <given-names>Anita R</given-names>
        </name>
        <aff><institution content-type="department">Samples Phenotypes and Ontologies Team (SPOT), European Bioinformatics Institute (EMBL-EBI)</institution>, Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9625-1899</contrib-id>
        <name>
          <surname>Duncan</surname>
          <given-names>William D</given-names>
        </name>
        <aff><institution content-type="department">Berkeley Bioinformatics Open-source Projects (BBOP), Lawrence Berkeley National Laboratory (LBNL)</institution>, 1 Cyclotron Road, Mailstop 977-0257, Berkeley, CA 94720, <country country="US">USA</country></aff>
        <aff><institution content-type="department">College of Dentistry; Health Outcomes and Biomedical Informatics, College of Medicine, University of Florida</institution>, William D. Duncan: 1395 Center Dr, Gainesville, William R. Hogan: 1600 SW Archer Rd, Gainesville, FL 32610, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Flack</surname>
          <given-names>Joe E</given-names>
        </name>
        <aff><institution content-type="department">School of Medicine, Johns Hopkins University</institution>, 733 N Broadway, Baltimore, Baltimore, MD 21205, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9114-8737</contrib-id>
        <name>
          <surname>Haendel</surname>
          <given-names>Melissa</given-names>
        </name>
        <aff><institution>University of Colorado Anschutz Medical Campus</institution>, 13001 E 17th Pl, Aurora, CO 80045, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-6315-3707</contrib-id>
        <name>
          <surname>Harris</surname>
          <given-names>Nomi L</given-names>
        </name>
        <aff><institution content-type="department">Berkeley Bioinformatics Open-source Projects (BBOP), Lawrence Berkeley National Laboratory (LBNL)</institution>, 1 Cyclotron Road, Mailstop 977-0257, Berkeley, CA 94720, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-9881-1017</contrib-id>
        <name>
          <surname>Hogan</surname>
          <given-names>William R</given-names>
        </name>
        <aff><institution content-type="department">College of Dentistry; Health Outcomes and Biomedical Informatics, College of Medicine, University of Florida</institution>, William D. Duncan: 1395 Center Dr, Gainesville, William R. Hogan: 1600 SW Archer Rd, Gainesville, FL 32610, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-4423-4370</contrib-id>
        <name>
          <surname>Hoyt</surname>
          <given-names>Charles Tapley</given-names>
        </name>
        <aff><institution content-type="department">Laboratory of Systems Pharmacology, Harvard Medical School</institution>, 200 Longwood Avenue Armenise Building Room 109, Boston, MA 02115, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-4871-5569</contrib-id>
        <name>
          <surname>Jackson</surname>
          <given-names>Rebecca C</given-names>
        </name>
        <aff><institution>Bend Informatics LLC</institution>, 5305 RIVER RD NORTH, STE B, KEIZER, OR 97303, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kim</surname>
          <given-names>HyeongSik</given-names>
        </name>
        <aff><institution>Robert Bosch LLC</institution>, Sunnyvale, CA 94085, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kir</surname>
          <given-names>Huseyin</given-names>
        </name>
        <aff><institution content-type="department">Samples Phenotypes and Ontologies Team (SPOT), European Bioinformatics Institute (EMBL-EBI)</institution>, Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Larralde</surname>
          <given-names>Martin</given-names>
        </name>
        <aff><institution content-type="department">Structural and Computational Biology Unit, European Molecular Biology Laboratory</institution>, Meyerhofstraße 1, Heidelberg 69117, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>McMurry</surname>
          <given-names>Julie A</given-names>
        </name>
        <aff><institution>University of Colorado Anschutz Medical Campus</institution>, 13001 E 17th Pl, Aurora, CO 80045, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5139-5557</contrib-id>
        <name>
          <surname>Overton</surname>
          <given-names>James A</given-names>
        </name>
        <aff><institution>Knocean Inc.</institution>, Toronto, Ontario, ON M6P 2T3, <country country="CA">Canada</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8457-6693</contrib-id>
        <name>
          <surname>Peters</surname>
          <given-names>Bjoern</given-names>
        </name>
        <aff><institution content-type="department">Institute for Allergy &amp; Immunology, La Jolla Institute for Immunology</institution>, 9420 Athena Circle, La Jolla, CA 92037, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-1373-1705</contrib-id>
        <name>
          <surname>Pilgrim</surname>
          <given-names>Clare</given-names>
        </name>
        <aff><institution content-type="department">Department of Physiology, Development and Neuroscience, University of Cambridge</institution>, Downing Street, Cambridge, CB2 3DY, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stefancsik</surname>
          <given-names>Ray</given-names>
        </name>
        <aff><institution content-type="department">Samples Phenotypes and Ontologies Team (SPOT), European Bioinformatics Institute (EMBL-EBI)</institution>, Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Robb</surname>
          <given-names>Sofia MC</given-names>
        </name>
        <aff><institution>Stowers Institute for Medical Research</institution>, 1000 E. 50th St., Kansas City, MO 64110, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Toro</surname>
          <given-names>Sabrina</given-names>
        </name>
        <aff><institution>University of Colorado Anschutz Medical Campus</institution>, 13001 E 17th Pl, Aurora, CO 80045, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Vasilevsky</surname>
          <given-names>Nicole A</given-names>
        </name>
        <aff><institution>University of Colorado Anschutz Medical Campus</institution>, 13001 E 17th Pl, Aurora, CO 80045, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Walls</surname>
          <given-names>Ramona</given-names>
        </name>
        <aff><institution>Critical Path Institute</institution>, 1730 E River Road, Tucson, AZ 85718, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6601-2165</contrib-id>
        <name>
          <surname>Mungall</surname>
          <given-names>Christopher J</given-names>
        </name>
        <aff><institution content-type="department">Berkeley Bioinformatics Open-source Projects (BBOP), Lawrence Berkeley National Laboratory (LBNL)</institution>, 1 Cyclotron Road, Mailstop 977-0257, Berkeley, CA 94720, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Osumi-Sutherland</surname>
          <given-names>David</given-names>
        </name>
        <xref rid="COR0001" ref-type="corresp"/>
        <!--davidos@ebi.ac.uk-->
        <aff><institution content-type="department">Samples Phenotypes and Ontologies Team (SPOT), European Bioinformatics Institute (EMBL-EBI)</institution>, Wellcome Genome Campus, Hinxton, Cambridgeshire, CB10 1SD, <country country="GB">UK</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR0001">*Corresponding author: Tel: +44 1223 494 144; Fax: +44 1223 48 46 96; Email: <email xlink:href="davidos@ebi.ac.uk">davidos@ebi.ac.uk</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-10-08">
      <day>08</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>08</day>
      <month>10</month>
      <year>2022</year>
    </pub-date>
    <volume>2022</volume>
    <elocation-id>baac087</elocation-id>
    <history>
      <date date-type="received">
        <day>07</day>
        <month>7</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>19</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>12</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>08</day>
        <month>10</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution-NonCommercial License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">https://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="baac087.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Similar to managing software packages, managing the ontology life cycle involves multiple complex workflows such as preparing releases, continuous quality control checking and dependency management. To manage these processes, a diverse set of tools is required, from command-line utilities to powerful ontology-engineering environmentsr. Particularly in the biomedical domain, which has developed a set of highly diverse yet inter-dependent ontologies, standardizing release practices and metadata and establishing shared quality standards are crucial to enable interoperability. The Ontology Development Kit (ODK) provides a set of standardized, customizable and automatically executable workflows, and packages all required tooling in a single Docker image. In this paper, we provide an overview of how the ODK works, show how it is used in practice and describe how we envision it driving standardization efforts in our community.</p>
      <p><bold>Database URL</bold>: <ext-link xlink:href="https://github.com/INCATools/ontology-development-kit" ext-link-type="uri">https://github.com/INCATools/ontology-development-kit</ext-link></p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Director, Office of Science, Office of Basic Energy Sciences, of the US Department of Energy</institution>
          </institution-wrap>
        </funding-source>
        <award-id>DE-AC0205CH11231</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Mental Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>1RF1MH123220-01</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>UK Biotechnology and Biological Sciences Research Council / US National Science Foundation Directorate of Biological Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>BBSRC-NSF/BIO BB/T014008/1</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Human Genome Research Institute “Phenomics First”</institution>
          </institution-wrap>
        </funding-source>
        <award-id>RM1HG010860</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Office of the Director, National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R24-OD011883</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Heart, Lung, and Blood Institute</institution>
            <institution-id institution-id-type="DOI">10.13039/100000050</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>5U01HG009453-03</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="s3">
    <title>Introduction</title>
    <p>In a time of increasing biomedical data output, ontologies have become crucial in research, playing an important role in making data findable, accessible, interoperable and reusable (FAIR) (<xref rid="R1" ref-type="bibr">1</xref>) by providing standard identifiers (<xref rid="R2" ref-type="bibr">2–5</xref>), vocabulary, metadata and machine-readable axioms (<xref rid="R6" ref-type="bibr">6</xref>). Developing high-quality and scalable ontologies requires reusing parts of other ontologies, the use of reasoning to automate classification and extensive quality control (QC) testing. Managing development while following this approach can be a complex process involving tasks such as import management, release file compilation, integration testing and QC. This difficulty is compounded by the fact that ontologies in the biomedical domain are generally under-resourced and that biologists, who need to be an integral part of their development, are often not trained in software engineering and therefore lack exposure to standard best practices for software development. Furthermore, the complexity of the ontology development process is a huge barrier to entry for the community to contribute, limiting the democratization (and arguably the quality) of these ontologies. Over the years, some ontology communities developed their own workflows for managing the ontology life cycle using a variety of tools and technical approaches. However, given the complexity of the technologies involved, it is very difficult for even the most experienced ontology pipeline developers to maintain and extend these workflows.</p>
    <p>The Open Biomedical Ontologies (OBO) Foundry aims to unify ontologies in the biomedical domain through an evolving set of shared principles governing ontology development, allowing interoperability between ontologies (<xref rid="R7" ref-type="bibr">7</xref>, <xref rid="R8" ref-type="bibr">8</xref>). However, to effectively achieve this, tools that enable standardization of these shared principles are needed (i) to support ontology developers (ODs) to conform to the principles (e.g. through standardized QC as well as standardised release pipelines) and (ii) to allow less technical ontology curators to abide by these standards without the need for intensive engineering training.</p>
    <p>Ontology engineering is a complex task involving many different workflows such as:</p>
    <list list-type="roman-lower">
      <list-item>
        <p>Running releases: transforming the ontology through a variety of pipelines involving reasoning, removing redundant content, adding versioning information and exporting to the variety of ontology formats consumed by users such as RDF-XML (<ext-link xlink:href="https://www.w3.org/TR/owl2-xml-serialization/" ext-link-type="uri">https://www.w3.org/TR/owl2-xml-serialization/</ext-link>), OBO (<ext-link xlink:href="https://owlcollab.github.io/oboformat/doc/GO.format.obo-1_4.html" ext-link-type="uri">https://owlcollab.github.io/oboformat/doc/GO.format.obo-1_4.html</ext-link>), Turtle (<ext-link xlink:href="https://www.w3.org/TR/2014/REC-turtle-20140225/" ext-link-type="uri">https://www.w3.org/TR/2014/REC-turtle-20140225/</ext-link>), and OBO-graphs JSON (<ext-link xlink:href="https://github.com/geneontology/obographs" ext-link-type="uri">https://github.com/geneontology/obographs</ext-link>)s.</p>
      </list-item>
      <list-item>
        <p>Requesting changes in the form of issues on an issue tracker and discussing the merit of the proposed changes.</p>
      </list-item>
      <list-item>
        <p>Applying changes to the ontology: adding or editing terms, removing logical axioms or changing labels.</p>
      </list-item>
      <list-item>
        <p>Reviewing change requests, usually in the form of pull requests.</p>
      </list-item>
      <list-item>
        <p>QC checking: ensuring that the ontology conforms to a variety of integrity checks, such as logical coherence, label uniqueness and provenance standards.</p>
      </list-item>
      <list-item>
        <p>Dependency management: providing methods to import terms from other ontologies and keep those terms up-to-date in the light of changes.</p>
      </list-item>
      <list-item>
        <p>Documentation management: providing methods to keep documentation current in the light of changes to the ontology and the ontology workflows.</p>
      </list-item>
    </list>
    <p>In this paper, we present the Ontology Development Kit (ODK), a tool for managing the ontology life cycle. ODK is currently used to maintain more than 70 ontologies, mostly in the biomedical domain, such as the widely used Human Phenotype Ontology (<xref rid="R9" ref-type="bibr">9</xref>), the Cell ontology (CL) (<xref rid="R10" ref-type="bibr">10</xref>, <xref rid="R11" ref-type="bibr">11</xref>), Uberon (<xref rid="R12" ref-type="bibr">12</xref>), PATO (<xref rid="R13" ref-type="bibr">13</xref>), the Brain Data Standards Ontology and Provisional Cell Ontology (PCL) (<xref rid="R14" ref-type="bibr">14</xref>).</p>
    <p>The ODK comprises two major components: a set of executable ontology-engineering workflows and a toolbox. It delivers these workflows, which reflect standard best practices recommended by the OBO Foundry, as a customizable git repository set-up including all the different files and scripts necessary to run, for example, releases and QC tests, and import terms from other ontologies. The toolbox is delivered as a Docker image and includes all tools necessary to execute these workflows, from command-line utilities (sed, git and rsync) to ontology pipeline tools such as ROBOT (<xref rid="R15" ref-type="bibr">15</xref>) and dosdp-tools (<xref rid="R16" ref-type="bibr">16</xref>).</p>
    <p>The ODK simplifies the process of maintaining an ontology, allowing ODs to focus on content rather than technical aspects of maintenance. It also allows ODs to fully leverage modern ‘social coding’ open-source development practices exemplified by many GitHub repositories, such as allowing community contributions via GitHub pull requests and using cloud-based continuous integration (CI) tools to help with QC.</p>
  </sec>
  <sec id="s4">
    <title>Motivation</title>
    <sec id="s4-s1">
      <title>Sharing best practices</title>
      <p>Best practices for ontology engineering evolve over time. For example, it took years of discussions and collective learning to define the OBO Foundry principles, a set of best practices for open, FAIR and interoperable ontology development in the biomedical domain (<xref rid="R8" ref-type="bibr">8</xref>) and their refinement is ongoing. While those practices are slowly adopted through a mix of community engagement activities and improved tooling such as the OBO Dashboard (<xref rid="R8" ref-type="bibr">8</xref>), the need for extending those practices never stops. For example, there is currently no agreed-upon metadata schema for reflecting contributions to ontology terms, which is critical not only for attribution (grant proposals and individual editors) but more generally important for provenance-related questions (Who wrote that definition? Who suggested that term to be added?). To drive this forward, a group of organizations decided to collect this information using a specific property (<ext-link xlink:href="http://purl.org/dc/terms/contributor" ext-link-type="uri">http://purl.org/dc/terms/contributor</ext-link>) and uniquely identifying Internationalized Resource Identifiers (IRIs) for contributors,such as (ORCID) Open Researcher and Contributor IDentifier, Wikidata or (ROR) Research Organization Registry identifiers. To ensure that these metadata are captured correctly, a schema check needs to be defined. This is typically realized using SPARQL (<ext-link xlink:href="https://www.w3.org/TR/rdf-sparql-query/" ext-link-type="uri">https://www.w3.org/TR/rdf-sparql-query/</ext-link>) in ODK and then shared across all participating ontology repositories.</p>
      <p>Having a centralized infrastructure like the ODK means that when one ontology faces such an issue, tests (and fixes) can be rolled out via the executable workflows defined by the ODK to all ontologies using it, not just to that particular ontology. This reduces the overhead needed to fix multiple ontologies and provides a more collaborative environment for problem-solving.</p>
    </sec>
    <sec id="s4-s2">
      <title>Standardized repository architecture and release products</title>
      <p>Ontologies, even if built with OBO principles in mind, vary in the forms in which they are made available. For example, should the ontology be published with import statements or should the imports be merged in? Should the ontology be published with or without the logical inferences computed by a reasoner? Furthermore, users frequently want ontology files in alternative formats, like RDF/XML, OBO Flatfile format, OBO Graphs JSON or Turtle. Another problem is that the ontology repositories are not usually standardized. Editors who edit more than one ontology have to adjust to the idiosyncrasies of each repository: Which files to edit? How to run tests? How to provide versioned releases? How to add new terms? To address some of these issues, the ODK can automatically generate a standardized file and directory structure that is delivered as a git repository.</p>
      <p>Git has become the most widely used version control system in the biomedical ontologies domain. Git repository hosting providers such as GitHub and GitLab have become powerful tools beyond simple version control that cover most aspects of modern software (and ontology) project management, including code review, issue tracking, CI testing, discussions and milestone planning. While not entirely tied in with git and git hosting tools such as GitHub, the ODK is designed in a way that leverages their capabilities. The idea is to encourage best practices promoted by these platforms such as creating and reviewing pull requests that are automatically tested before applying a change, separating source files from release files and deploying documentation pages side-by-side with the code for ontology development.</p>
      <p>The ODK promotes a ‘convention-over-configuration’ model by imposing a standardized repository structure where all files are stored in predictable paths within the repository. This ensures that ontology editors are on familiar ground even if they work on multiple different ontologies. The standardized structure includes a strict separation between ‘source files’, which are manipulated by ontology editors and from which the ontology is built (OWL files, files containing DOSDP patterns or SPARQL queries, helper scripts, etc.), and ‘release files’, which result from running the release workflow and are intended for downstream users.</p>
      <p>The released version of an ontology can take several forms, depending for example on whether the ontology has been reasoned over or whether it contains imported axioms from foreign ontologies. To facilitate interoperability and modular reuse of ontologies, the ODK defines a few standardized release products, such as the ‘base’ product, which contains only native axioms and the ‘full’ product, which in addition also includes imported axioms and axioms inferred by logical reasoning.</p>
      <p>An example of implementation of the approach described above can be found in the ODK ontologies CL and Uberon—both ontologies have release files in OWL, OBO and JSON, in full, base and simple formats, which are located in the main directory and are never edited directly. Source files, which are the files that get edited, are located separately, but in the same location for both ontologies (e.g. the main edit file is located in src/ontology for both ontologies).</p>
    </sec>
  </sec>
  <sec id="s5">
    <title>The ODK toolbox</title>
    <p>The ODK can be divided into two principal architectural components:</p>
    <list list-type="roman-lower">
      <list-item>
        <p>A toolbox containing everything needed to develop, build and maintain ontologies, from Unix command-line development tools (e.g. rsync and git) to specialized ontology pipeline programs (e.g. ROBOT and fastobo-validator).</p>
      </list-item>
      <list-item>
        <p>A set of executable ontology-engineering workflows, delivered as a directory of scripts, build rules (e.g. to prepare releases or refresh imports) and source files. These workflows are described in the next section.</p>
      </list-item>
    </list>
    <p>The goal of the ODK toolbox is to provide ontology editors with all the tools they need to build, test and release their ontologies. Tools are chosen for their ability to support the core workflows for managing the ontology life cycle, such as running releases and QC. A selection of tools (<xref rid="R15" ref-type="bibr">15–21</xref>) included in the ODK can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>. As those tools are very diverse and use different technologies, we cannot merely provide installation instructions that work reliably across the operating systems and computer architectures routinely used by ontology editors. We also lack the resources to provide customized installation packages for all those systems and architectures.</p>
    <p>We, therefore, decided to use a Docker image (<xref rid="R22" ref-type="bibr">22</xref>) as a software distribution mechanism. Docker is a tool that automates the deployment of applications inside software containers. While it originated on GNU (<ext-link xlink:href="https://www.gnu.org/" ext-link-type="uri">https://www.gnu.org/</ext-link>)/Linux systems, it is now available on Windows and MacOS as well. The ODK Docker image is based on the Ubuntu base image, in which all the tools listed in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref> are already installed. All of the core ontology tools and most of the python dependencies are explicitly versioned by the ODK developers, and upgrading them has to be done explicitly, requiring extensive testing. Ontology editors just need to install Docker itself on their platform and fetch the ODK image from the Docker Hub (<ext-link xlink:href="https://hub.docker.com/r/obolibrary/odkfull" ext-link-type="uri">https://hub.docker.com/r/obolibrary/odkfull</ext-link>). This saves a great deal of time for both the developers/system administrators and the editors, since the Docker image is effectively a ‘plug and play’ application that can run on any major operating system.</p>
    <p>We provide two distinct Docker images. The ODK-Lite (obolibrary/odklite) image contains only the minimal set of tools needed by the standard workflows described in the next section. The ODK-Full (obolibrary/odkfull) image includes additional tools that an OD may need for some customized, ontology-specific workflows. With one of the ODK images available to the local Docker daemon, ontology editors can invoke any of the provided tools inside the container, without needing to do any additional set-up.</p>
  </sec>
  <sec id="s6">
    <title>Executable ontology development workflows</title>
    <p>The executable ontology-engineering workflows are delivered as an ODK-generated Makefile. Targets in that Makefile can roughly be divided into those that provide the recipe for generating a specific file (such as the release file of an ontology) and those that provide simple workflows, such as ‘clean’ to delete temporary files, ‘prepare_release’ to execute the release workflow or ‘refresh-imports’ to update the terms in all imported ontologies. In the rest of this section, we will discuss some of the workflows prevalent in the biomedical ontology community and describe how they are supported by ODK.</p>
    <sec id="s6-s1">
      <title>The initialization and update workflows</title>
      <p>The initialization workflow is performed once in the lifetime of an ontology to create a new ODK set-up. Unlike the other workflows, it is launched not from a Makefile but from a small wrapper script that uses the ODK Docker image to:</p>
      <list list-type="roman-lower">
        <list-item>
          <p>create a new directory which contains all files necessary for editing and managing the new ontology (importantly, this includes the automatically generated Makefile that will pilot all the other standard workflows described in the rest of this section);</p>
        </list-item>
        <list-item>
          <p>make a Git repository of the newly created directory and</p>
        </list-item>
        <list-item>
          <p>generate an initial release based on the empty ontology.</p>
        </list-item>
      </list>
      <p>This initialization process can be parameterized using either command-line arguments to the wrapper script or a small, YAML (<ext-link xlink:href="https://yaml.org/" ext-link-type="uri">https://yaml.org/</ext-link><bold>)</bold>-formatted configuration file. Once the repository is set up, it can be pushed to a git hosting service such as GitHub. The choice of the hosting provider is left to the user, but when GitHub is used, the ODK provides special support for automatically triggering a few server-side workflows (as GitHub Actions) upon certain conditions, e.g. to run a CI test suite whenever a pull request is submitted.</p>
      <p>The ODK is continually being updated with new functions, better support and updated tooling. This allows us to be highly adaptive to the ever-changing landscape of ontology development and maintain relevance to the community. ODK updates are semi-automated, with a three-step process:</p>
      <list list-type="roman-lower">
        <list-item>
          <p>Update the ODK Docker image.</p>
        </list-item>
        <list-item>
          <p>Run the ‘update_repo’ command.</p>
        </list-item>
        <list-item>
          <p>Commit the changes into the ontology repository.</p>
        </list-item>
      </list>
      <p>We have decided to leave the process of updating the repository to the user rather than folding the workflow into the ODK Docker image itself. This way, the dissemination of new features is a bit slower, but it also gives more control to the ontology engineer to postpone the implementation of potentially breaking changes, such as QC checks added to the default set-up.</p>
    </sec>
    <sec id="s6-s2">
      <title>The editors’ workflow</title>
      <p>Editors frequently change the contents of an ontology by adding or obsoleting terms, revising logical axioms or updating the metadata. While there are many variants of the editors’ workflow, i.e. the sequence of actions that lead to the final application of a change, it can be roughly divided into the following steps:</p>
      <list list-type="order">
        <list-item>
          <p>The OD opens the editor’s file in their preferred ontology development environment (e.g. Protégé) and makes a change (e.g. adding a term and changing a label). Alternatively, a template file (like a ROBOT template) is edited that first needs to be transformed into OWL.</p>
        </list-item>
        <list-item>
          <p>The OD creates a new git branch locally, commits the change and opens a pull request on the ontology’s public repository on GitHub.</p>
        </list-item>
        <list-item>
          <p>A CI test suite job configured by the ODK is executed automatically once a pull request is created. This job executes a series of standard and customizable tests, such as looking for unsatisfiable classes, malformed cross-references or missing labels.</p>
        </list-item>
        <list-item>
          <p>If the test fails, the developer can inspect the execution log and proceed to fix the problem.</p>
        </list-item>
        <list-item>
          <p>Once the test passes, another member of the ontology’s editorial team reviews the change. Depending on the ontology, one or more approvals may be required before a change is merged in, after which the changes will appear in the release products when the release pipeline is run.</p>
        </list-item>
      </list>
      <p>The ODK plays two major roles in the workflow, applying changes from templates and coordinating and executing the test suite that ensures that the edit did not ‘break anything’, i.e. violate one or more of the QC rules. Templating systems are integrated into the ODK and will be covered in detail in the ‘Support ODK Features’ section later in the manuscript. The test suite provides built-in QC and CI that can be customized to the individual users’ needs.</p>
    </sec>
    <sec id="s6-s3">
      <title>QC and CI</title>
      <p>Even the most experienced ontology curators make mistakes when editing an ontology, from simple ones such as introducing unwanted whitespace in an ontology term label (i.e. a trailing or leading space character), to more complicated errors that lead to unintended logical consequences (e.g. axioms that render a class unsatisfiable or that cause two distinct classes to be wrongly inferred to be equivalent). To avoid adding such ‘breaking changes’ to the ontology, the ODK uses continuous integration to automatically run QC tests when a pull request is created or updated. These tests can easily be adopted by other version control providers such as Bitbucket and GitLab, as long as they provide a way to run Docker-based workflows. The QC tests are on the ODK Docker image via a Makefile target, ‘make test’.</p>
      <p>The ODK comes with a wide range of standard QC checks that utilize ROBOT (<xref rid="R15" ref-type="bibr">15</xref>), including SPARQL-based validation and logic-based validation. ROBOT incorporates a customizable validation framework for ontologies (called ROBOT report) that performs checks like ‘illegal trailing whitespace’, ‘illegal cross-reference syntax’, ‘missing license’ and others. These checks reflect the best practices of the OBO Foundry—if any are not applicable to a specific ontology, they can be skipped and other checks can be added. Custom SPARQL-based validation provided by the ODK in addition to the standard ROBOT checks follows the same general idea as ROBOT report: an ‘anti-pattern’, e.g. an undesirable situation like a non-obsolete term without a label, is specified as a SPARQL select query and then executed using ROBOT verify. Logical checks involve running the reasoner using the reason function in ROBOT and ensuring logical coherency (i.e. the absence of unsatisfiable classes) and the absence of unintended logical equivalencies (i.e. cases where a change to the logical axioms lead to two classes being inferred as logically equivalent that are conceptually distinct). The validation framework is made to be easily customizable. For example, an organization might have the requirement that new terms are always signed with a (valid) ORCID (<xref rid="R23" ref-type="bibr">23</xref>), so they could implement a SPARQL query which looks for terms in the ontologies’ namespace that do not have the respective annotation present and further checks that if the annotation is present, the annotation value is a valid ORCID.</p>
      <p>An example of QC implemented in ODK can be found in CL, which has both standard QC checks that come with the ODK like that mentioned above and also custom checks like ‘no label check’, ‘pmid not in dbxref’, ‘illegal annotation property’ and others. A list of custom checks is included in the ODK yaml set-up file, with corresponding SPARQL query files of the same name in a separate folder called ‘sparql’.</p>
    </sec>
    <sec id="s6-s4">
      <title>The release workflow</title>
      <p>Generating release versions of the ontology, including different syntaxes (e.g. JSON, OBO and RDF/XML) and variants (see Section X) is entirely automated as part of an ODK workflow called ‘prepare release’. To execute this workflow, the OD simply runs a single command on the command line (sh run.sh make prepare_release). The release workflow executes the following steps:</p>
      <list list-type="order">
        <list-item>
          <p>Ensure that any automatically generated components [such as portions of the ontology managed as ROBOT or Dead Simple Ontology Design Patterns (DOSDP) templates] are converted into OWL.</p>
        </list-item>
        <list-item>
          <p>Ensure that dynamically imported terms are up-to-date.</p>
        </list-item>
        <list-item>
          <p>Generate all release variants, such as the ‘base’, ‘full’ and ‘simple’ variants using standardized ROBOT pipelines. This includes serializing these release variants into all configured formats such as RDF/XML and OBO format and adding versioning information.</p>
        </list-item>
        <list-item>
          <p>Execute all QC tests and generate QC reports.</p>
        </list-item>
      </list>
      <p>Under the hood, ‘make prepare_release’ builds all release targets (release file variants which are configured as Makefile targets) by loading the editors file and performing (mostly ROBOT-based) transformation pipelines such as merging, reasoning and adding version information. These release targets in turn depend on others, such as up-to-date imports, which are executed as part of the pipeline. After all the release files (also called release assets) are generated, the OD will usually commit the release files to a branch and optionally ask for a review to ensure that all the changes to the release files are intended. Depending on how releases are being managed, which differs from ontology to ontology, the last step in the release workflow is to publish the release, which usually involves merging the release to the ‘main’ or production branch and publishing a release (e.g. GitHub release). There are some experimental workflows in ODK that automate even this last part of the release process, but in our experience, ontology curators value the opportunity for a ‘final check’ before an ontology release is published.</p>
    </sec>
    <sec id="s6-s5">
      <title>Dependency management: importing and reusing existing ontologies</title>
      <p>Ontologies, just like software, can be developed in a modular fashion. Many ontologies make use of an external ontology to provide logical definitions. Previously the ontology community has had a wide range of practices for managing these kinds of inter-ontology dependencies, ranging from copying-and-pasting external terms into an ontology, making duplicative terms in their own ID space or using the owl:imports mechanism. Using imports is considered best practice, but even here there is a range of different practices. Some ontologies import an external ontology in its entirety, while others import subsets of external ontologies, with a diverse range of methods for creating these subsets. Importing an entire ontology can lead to scalability issues, especially when the external ontology is large (e.g. CHEBI(<xref rid="R24" ref-type="bibr">24</xref>)). Importing subsets of external ontologies can also be problematic, since these may be transitively imported by other ontologies. Additionally, external subsets can get stale.</p>
      <p>The ODK supports what is considered best practice in OBO and aims to make it easy for ontology editors to manage imports. An OD can list the external terms they require in a text file managed in git. They can then trigger an ODK workflow that uses ROBOT to generate an ‘import module’ using the appropriate ontology modularization method, such as syntactic-locality-based module extraction (SLME) (<xref rid="R25" ref-type="bibr">25</xref>).</p>
      <p>ODK will also take care of making special releases of ontologies that avoid the stale subset problem. A special reusable component release called a base ontology is created. This component includes any terms belonging to the ontology natively and all their axioms, but does not include any of the imported axioms. This base module can then be used as a modular component by other ontologies. Examples of ontologies that import base files are CL, PATO and PCL. The ODK will continue to evolve with best practices in this area.</p>
    </sec>
    <sec id="s6-s6">
      <title>Support ODK features</title>
      <sec id="s6-s6-s1">
        <title>Using template-based workflows for ontology editing</title>
        <p>The ODK supports templating systems such as DOSDP (<xref rid="R16" ref-type="bibr">16</xref>) and ROBOT templates (<xref rid="R15" ref-type="bibr">15</xref>), which allow ontology content to be curated in the form of spreadsheets, which could include new terms, axioms or annotations. These spreadsheets are compiled by the ODK into their OWL representation using a simple pattern. Many such patterns have been developed in recent years and are available to be reused. Increasing commitment to patterns will ensure consistent axiomatization in a scalable manner and increase interoperability and reuse between open ontologies. DOSDP configuration files and templates can be placed in fixed folders in the standard ODK set-up, which will then be automatically integrated into the ontology during the build process.</p>
      </sec>
      <sec id="s6-s6-s2">
        <title>Auto-generated documentation</title>
        <p>Given the complexity of the entire development life cycle of an ontology, it is important to carefully document all workflows. This documentation includes instructions on how to contribute, how to run a release and how to refresh an import. The ODK repository generation process generates a template for such a documentation system and auto-generates documentation of the most important ontology workflows tailored to the ontology. For example, rather than providing generic examples of which files to edit during the editors workflow, the specific files used by the ontology (e.g. cl-edit.owl for the Cell Ontology) are mentioned. The documentation system is based on mkdocs (<xref rid="R26" ref-type="bibr">26</xref>) and is easily extensible to accommodate the documentation of custom workflows. When using GitHub as the git hosting provider, updates to the documentation can be automatically deployed using GitHub actions. In addition to auto-generated documentation, we have written a number of tutorials on how to set up a new repository or update an existing one (<ext-link xlink:href="https://oboacademy.github.io/obook/" ext-link-type="uri">https://oboacademy.github.io/obook/</ext-link>).</p>
      </sec>
    </sec>
    <sec id="s6-s7">
      <title>Governance, community requests, QC and releases</title>
      <p>The core ODK team selected and centralized the tools required to optimally support the executable workflows described above. In addition to the core tools required (such as ROBOT (<xref rid="R15" ref-type="bibr">15</xref>)), we include a wide range of other tools that are useful for processing of ontologies. The ODK is set up as a community-driven resource in which tool requests and suggestions are encouraged on the issue tracker (<ext-link xlink:href="https://github.com/INCATools/ontology-development-kit" ext-link-type="uri">https://github.com/INCATools/ontology-development-kit</ext-link>). The possible addition of tools is assessed by the core team. In addition to being open source and free to use, tools should be demonstrably useful for managing some part of the ontology life cycle.</p>
      <p>The workflows available in the ODK and reported here were designed with OBO principles in mind. We are also working with members of the FAIR semantics (<xref rid="R27" ref-type="bibr">27</xref>) community to incorporate practices beyond the OBO standards (for example, by including the owl:versionInfo property as part of the ontology metadata).</p>
      <p>Any change to the ODK Docker image, in particular upgrading the tools in the ODK toolbox, is carefully evaluated by a large set of integration tests, which are executed every time a new feature or upgrade is proposed in a pull request and just before every ODK release. These tests include building and running a large variety of different configurations of ontologies, as well as testing the integrity of some of the support tools directly using a shell script which is executed as part of the build process.</p>
      <p>The ODK is scheduled for a new release every 3 months, but occasionally, an additional release is required to update a tool that has implemented a critical bug fix. Overall, more than 30 releases were created in the last 3 years. All new tool additions are documented in the changelog of each release. Users can subscribe to be informed about new releases through GitHub’s ‘Notification’ feature.</p>
    </sec>
  </sec>
  <sec id="s7">
    <title>Use across OBO and beyond</title>
    <p>The ODK is designed to allow use at different levels of ‘buy in’. Some ontologies are entirely automated using ODK. Others have partial adoption, such as using the ODK container to run custom-built workflows/checks.</p>
    <p>We evaluated the use of ODK using a number of methods, but we do not claim to provide a full account of the usage, just a lower bound. We first gathered some of the ontologies that we already knew were using ODK. We also performed GitHub searches to see which additional repositories were using ODK (using search terms like ‘ontology development kit’ or ‘ontology starter kit’). Lastly, we performed an informal user survey targeting the OBO ontology community (distributed via the obo-discuss mailing list), which got 35 responses, 23 of which had used the ODK. Among the surveyed ontologies, 61.3% were in the OBO Foundry.</p>
    <p>The ODK Docker image was pulled 74 611 times from Docker Hub at the time of this writing (22.06.2022). Note that this merely establishes a lower bound, as the Docker image is cached locally, and therefore does not need to be pulled more than once per 3 months by most developers. Most of these pulls are probably generated by various continuous integration tools, which are difficult to differentiate from human users. A table of all ODK-based ontology repositories and a summary of ODK versions used can be found in the <xref rid="sup1" ref-type="supplementary-material">supplemental materials</xref> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>, <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref>).</p>
  </sec>
  <sec id="s8">
    <title>Related work</title>
    <p>The ODK is not the only ontology development toolkit used by ODs. In this section, we will highlight some popular tools that are currently being used and how the ODK compares with them.</p>
    <p>Firstly, arguably the most popular ontology development tool is Protégé. Protégé (<xref rid="R28" ref-type="bibr">28</xref>) is a visual ontology editor that is free and open source. Protégé has a few key features that make it a highly useful tool. Firstly, it has a graphical user interface that is relatively easy to use and navigate, making it highly accessible to non-technical users. It also has a library of plugins that can further extend its functionality, and since it is open source, it is possible to develop new custom plugins. The ODK was developed not as a replacement for Protégé, but rather a complement to it. The ODK is not aimed at the actual process of ontology editing and therefore lacks any support for data entry (such as visual editors). Protégé also has a lightweight cloud-based version (webProtégé) (<xref rid="R29" ref-type="bibr">29</xref>) that can be accessed either through their or a hosted server, allowing better support for simultaneous collaborative editing of OWL ontologies. The ODK does not currently integrate with WebProtégé editing workflows, but exploring this integration is on our list for the future.</p>
    <p>The OntoAnimal set of tools in conjunction with the eXtensible ontology development (XOD) principles (<xref rid="R30" ref-type="bibr">30</xref>) is another toolkit that is widely used across OBO. Our work builds upon the general XOD principles, such as ‘reuse’ and ‘bulk-import’, and we hope to reconcile some of our workflows over the coming years. There are some differences to overcome. Firstly, the OntoAnimals toolkit does not provide standardized executable workflows (releases workflows and dynamic imports for an entire project), which is at the heart of the ODK design. Some of the OntoAnimals best practices could therefore simply be integrated into the ODK workflow system. Additionally, the preferred way to extract modules in the wider OntoAnimals culture is to use (MIREOT) Minimum Information to Reference an External Ontology Term (<xref rid="R31" ref-type="bibr">31</xref>) modules through a web service. This is different from the ODK culture in two ways: (i) one key design decision of ODK is to go straight to a source ontology from which to import terms, download it and extract a module from the file, while the OntoAnimals approach tends to use the OntoFox web service to extract terms. We prefer our approach because of the lack of intermediary (the imports are less often out-of-date when not using an intermediary) and less pronounced network dependency (the web service might become unavailable or a network could be down). For example, we can extract a module from a ‘mirror’ over and over without downloading the mirror again. However, there are downsides to our approach: the often quite large ontologies require large amounts of resources (memory and Central Processing Unit (CPU) usage). The best approach has not been definitively determined, but it should be mentioned that OntoAnimals module extraction workflows can be easily integrated into the ODK through its customization features. (ii) A second conceptual ‘conflict’ between OntoFox and ODK is the use of MIREOT modules vs. SLME (syntactic-locality-based modules). MIREOT modules are often more intuitive for downstream consumers of the ontology, because they only expose the terms that are deliberately imported by the OD, while SLME-based modules import all terms that are necessary to preserve the semantics of the source ontology (which is usually a lot). While we believe that SLME modules are necessary to ensure that our ontology is logically compatible with our dependencies at development time, we believe that neither MIREOT nor SLME modules are sufficient for downstream users. We are currently designing a module extraction algorithm that not only traverses the subclass hierarchy (like MIREOT does) but also takes into account other kinds of relationships like mereological ones (part of, has part) which are, for biological use cases, equally important (often more important).</p>
    <p>The NeOn Toolkit (<xref rid="R32" ref-type="bibr">32</xref>) is an open-source ontology-engineering environment, built on the code base of OntoStudio (<xref rid="R33" ref-type="bibr">33</xref>) (formally known as OntoEdit (<xref rid="R34" ref-type="bibr">34</xref>)), that aims to provide comprehensive support for the entire engineering lifecycle by providing an extensive set of plugins. It organizes projects in a workspace; each project can contain multiple ontologies that can be edited in a graphical user interface, which requires more knowledge than Protégé as much of the interface is pretty technical. A major advantage of the NeOn Toolkit is an open platform to which anybody can contribute, hence allowing for a wide variety of plugins developed by the community.</p>
    <p>WebODE (<xref rid="R35" ref-type="bibr">35</xref>) is an extensible ontology-engineering suite developed over 16 years ago that aimed to be a common workbench for ontology development and management, middleware services (such as access and query services) and ontology-based application development. WebODE has many functionalities including a simple user interface, complete consistency checks, edition through a form-based user interface or a graphical editor and term import. However, WebODE was built to support ontology languages that are no longer in use. Support for the tool was discontinued in 2006, and while it remains open source, no support will be provided when problems are encountered.</p>
  </sec>
  <sec id="s9">
    <title>Limitations</title>
    <p>The dependency on Docker is one of the most significant limitations of the ODK architecture. While Docker itself is not needed to run a Docker container (Docker containers can be run with other container systems such as singularity, which are also widely supported), the non-availability of Docker for some of our users with (i) older Windows machines or (ii) no access to admin privileges on their work machines has been challenging. To mitigate this, we have worked on integrating many of the workflows as GitHub actions. For example, rather than running the command to build and deploy the documentation manually, a GitHub action can be launched to do this. The problem with doing the same for other key workflows like ontology import management or releases is that GitHub actions are limited in how much memory they can use (7 GB at the time of writing), which is often exceeded, especially for larger ontologies.</p>
  </sec>
  <sec id="s10">
    <title>Discussion and conclusions</title>
    <p>Creating and managing biomedical ontologies are complex tasks that require deep technical knowledge. Developing an ontology that is standardized to other ontologies and reuses them compounds this difficulty. This is often prohibitively difficult for many biologists and domain experts whose input is needed to make biomedical ontologies accurate and useful. The ODK provides tools and features that allow non-experts to build and edit ontologies with minimal training. The ODK helps ontologies conform to basic standards and sets users up with structures and documentation for good ontology-engineering practices. The import management system allows non-technical users to reuse existing ontologies, which would otherwise be incredibly complex. The ODK’s built-in tools, such as templating systems, further enhance the users’ tool belt, allowing highly powerful automation with minimal technical knowledge. Overall, the simplification achieved through the ODK allows users and developers to focus on the content while standardizing good practices and democratizing ontology development.</p>
    <p>In a future release of the ODK, we plan to reconcile some of its workflows with other existing frameworks such as OntoAnimals, in particular OntoFox, and work with their developers towards a common solution for, at least, biomedical ontologies. Furthermore, there is a great need for better module extraction techniques for downstream usages as both SLME and MIREOT (the most prevalent approaches) fall short in various ways. Lastly, the ODK does not currently prevent bad ontology modelling—we hope to be able to make stronger use of design pattern-based validation and advanced semantic validation techniques such as (SHACL) Shapes Constraint Language; <ext-link xlink:href="https://www.w3.org/TR/shacl/" ext-link-type="uri">https://www.w3.org/TR/shacl/</ext-link>, (SHEX) Shape Expression; <ext-link xlink:href="http://shex.io/" ext-link-type="uri">http://shex.io/</ext-link> or (LinkML) Linked Open Data Modelling Language; <ext-link xlink:href="https://linkml.io/" ext-link-type="uri">https://linkml.io/</ext-link> to further reduce the potential for human error.</p>
    <p>We have already observed significantly lower error rates in many of the ontologies that use the ODK, thanks to the ability of the automated testing system provided by the ODK to catch errors early on. We hope to be able to roll out ever more useful tests to ever wider circles of ontologies to contribute to a community-wide increase in ontology quality. Our update system allows us to rapidly roll out new features, such as new quality tests and improved pipelines, to all our users by pulling the new Docker image from Docker Hub and running the ‘update repo’ workflow. Lastly, we seek to harmonize the representation of ontology release files through the use of standard release workflows, which result in standard release serializations (RDF/XML, OBO Flat File and OBO Graphs JSON) and metadata (version IRIs, licence information and more) to make ontologies more FAIR and interoperable.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>baac087_Supp</label>
      <media xlink:href="baac087_supp.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="s11">
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Database</italic> Online. All code described in this manuscript can be found at <ext-link xlink:href="https://github.com/INCATools/ontology-development-kit" ext-link-type="uri">https://github.com/INCATools/ontology-development-kit</ext-link></p>
  </sec>
  <sec id="s12">
    <title>Funding</title>
    <p>Office of the Director, National Institutes of Health (R24-OD011883); National Human Genome Research Institute, ‘Phenomics First’ (RM1HG010860 to D.O-S., N.M., R.S. and A.R.C.); National Institutes of Mental Health (1RF1MH123220-01 to S.Z-K.T., H.K. and D.O-S.); National Heart, Lung, and Blood Institute 5U01HG009453-03; UK Biotechnology and Biological Sciences Research Council/US National Science Foundation Directorate of Biological Sciences (BBSRC-NSF/BIO BB/T014008/1); The Wellcome Trust, ‘Virtual Fly Brain’ (105023MA); Director, Office of Science, Office of Basic Energy Sciences, of the US Department of Energy (DE-AC0205CH11231 to C.J.M.); European Molecular Biology Laboratory - European Bioinformatics Institute core funds (D.O-S., R.S., A.R.C., S.Z-K.T. and H.K., in part).</p>
  </sec>
  <sec id="s13">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="R1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilkinson</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Dumontier</surname><given-names>M.</given-names></string-name>, <string-name><surname>Aalbersberg</surname><given-names>I.J.J.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2016</year>) <article-title>The FAIR guiding principles for scientific data management and stewardship</article-title>. <source><italic toggle="yes">Sci. Data</italic></source>, <volume>3</volume>, <page-range>160018</page-range>.</mixed-citation>
    </ref>
    <ref id="R2">
      <label>2.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Haendel</surname><given-names>M.</given-names></string-name>, <string-name><surname>Su</surname><given-names>A.</given-names></string-name> and <string-name><surname>McMurry</surname><given-names>J.</given-names></string-name></person-group> (<year>2016</year>) <article-title>FAIR-TLC: metrics to assess value of biomedical digital repositories: response to RFI NOT-OD-16-133; (2016)</article-title>.</mixed-citation>
    </ref>
    <ref id="R3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Goodman</surname><given-names>A.</given-names></string-name>, <string-name><surname>Pepe</surname><given-names>A.</given-names></string-name>, <string-name><surname>Blocker</surname><given-names>A.W.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2014</year>) <article-title>Ten simple rules for the care and feeding of scientific data</article-title>. <source><italic toggle="yes">PLoS Comput. Biol.</italic></source>, <volume>10</volume>, <page-range>e1003542</page-range>.</mixed-citation>
    </ref>
    <ref id="R4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tang</surname><given-names>Y.A.</given-names></string-name>, <string-name><surname>Pichler</surname><given-names>K.</given-names></string-name>, <string-name><surname>Füllgrabe</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2019</year>) <article-title>Ten quick tips for biocuration</article-title>. <source><italic toggle="yes">PLoS Comput. Biol.</italic></source>, <volume>15</volume>, <page-range>e1006906</page-range>.</mixed-citation>
    </ref>
    <ref id="R5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McMurry</surname><given-names>J.A.</given-names></string-name>, <string-name><surname>Juty</surname><given-names>N.</given-names></string-name>, <string-name><surname>Blomberg</surname><given-names>N.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2017</year>) <article-title>Identifiers for the twenty-first century: how to design, provision, and reuse persistent identifiers to maximize utility and impact of life science data</article-title>. <source><italic toggle="yes">PLoS Biol.</italic></source>, <volume>15</volume>, <page-range>e2001414</page-range>.</mixed-citation>
    </ref>
    <ref id="R6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hoehndorf</surname><given-names>R.</given-names></string-name>, <string-name><surname>Schofield</surname><given-names>P.N.</given-names></string-name> and <string-name><surname>Gkoutos</surname><given-names>G.V.</given-names></string-name></person-group> (<year>2015</year>) <article-title>The role of ontologies in biological and biomedical research: a functional perspective</article-title>. <source><italic toggle="yes">Brief. Bioinform.</italic></source>, <volume>16</volume>, <fpage>1069</fpage>–<lpage>1080</lpage>.<pub-id pub-id-type="pmid">25863278</pub-id></mixed-citation>
    </ref>
    <ref id="R7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Smith</surname><given-names>B.</given-names></string-name>, <string-name><surname>Ashburner</surname><given-names>M.</given-names></string-name>, <string-name><surname>Rosse</surname><given-names>C.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2007</year>) <article-title>The OBO Foundry: coordinated evolution of ontologies to support biomedical data integration</article-title>. <source><italic toggle="yes">Nat. Biotechnol.</italic></source>, <volume>25</volume>, <fpage>1251</fpage>–<lpage>1255</lpage>.<pub-id pub-id-type="pmid">17989687</pub-id></mixed-citation>
    </ref>
    <ref id="R8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jackson</surname><given-names>R.</given-names></string-name>, <string-name><surname>Matentzoglu</surname><given-names>N.</given-names></string-name>, <string-name><surname>Overton</surname><given-names>J.A.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2021</year>) <article-title>OBO Foundry in 2021: operationalizing open data principles to evaluate ontologies</article-title>. <source><italic toggle="yes">Database</italic></source>, <volume>2021</volume>.</mixed-citation>
    </ref>
    <ref id="R9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Köhler</surname><given-names>S.</given-names></string-name>, <string-name><surname>Gargano</surname><given-names>M.</given-names></string-name>, <string-name><surname>Matentzoglu</surname><given-names>N.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2021</year>) <article-title>The human phenotype ontology in 2021</article-title>. <source><italic toggle="yes">Nucleic Acids Res.</italic></source>, <volume>49</volume>, <fpage>D1207</fpage>–<lpage>D1217</lpage>.<pub-id pub-id-type="pmid">33264411</pub-id></mixed-citation>
    </ref>
    <ref id="R10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bard</surname><given-names>J.</given-names></string-name>, <string-name><surname>Rhee</surname><given-names>S.Y.</given-names></string-name> and <string-name><surname>Ashburner</surname><given-names>M.</given-names></string-name></person-group> (<year>2005</year>) <article-title>An ontology for cell types</article-title>. <source><italic toggle="yes">Genome Biol.</italic></source>, <volume>6</volume>, <page-range>R21</page-range>.</mixed-citation>
    </ref>
    <ref id="R11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Diehl</surname><given-names>A.D.</given-names></string-name>, <string-name><surname>Meehan</surname><given-names>T.F.</given-names></string-name>, <string-name><surname>Bradford</surname><given-names>Y.M.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2016</year>) <article-title>The cell ontology 2016: enhanced content, modularization, and ontology interoperability</article-title>. <source><italic toggle="yes">J. Biomed. Semant.</italic></source>, <volume>7</volume>, <page-range>44</page-range>.</mixed-citation>
    </ref>
    <ref id="R12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mungall</surname><given-names>C.J.</given-names></string-name>, <string-name><surname>Torniai</surname><given-names>C.</given-names></string-name>, <string-name><surname>Gkoutos</surname><given-names>G.V.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2012</year>) <article-title>Uberon, an integrative multi-species anatomy ontology</article-title>. <source><italic toggle="yes">Genome Biol.</italic></source>, <volume>13</volume>, <page-range>R5</page-range>.</mixed-citation>
    </ref>
    <ref id="R13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gkoutos</surname><given-names>G.V.</given-names></string-name>, <string-name><surname>Green</surname><given-names>E.C.J.</given-names></string-name>, <string-name><surname>Mallon</surname><given-names>A.-M.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2005</year>) <article-title>Using ontologies to describe mouse phenotypes</article-title>. <source><italic toggle="yes">Genome Biol.</italic></source>, <volume>6</volume>, <page-range>R8</page-range>.</mixed-citation>
    </ref>
    <ref id="R14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tan</surname><given-names>S.Z.K.</given-names></string-name>, <string-name><surname>Kir</surname><given-names>H.</given-names></string-name>, <string-name><surname>Aevermann</surname><given-names>B.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2021</year>) <article-title>Brain Data Standards Ontology: a data-driven ontology of transcriptomically defined cell types in the primary motor cortex</article-title>. <source><italic toggle="yes">bioRxiv</italic></source>.doi: <pub-id pub-id-type="doi">10.1101/2021.10.10.463703</pub-id>.</mixed-citation>
    </ref>
    <ref id="R15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jackson</surname><given-names>R.C.</given-names></string-name>, <string-name><surname>Balhoff</surname><given-names>J.P.</given-names></string-name>, <string-name><surname>Douglass</surname><given-names>E.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2019</year>) <article-title>ROBOT: A tool for automating ontology workflows</article-title>. <source><italic toggle="yes">BMC Bioinform.</italic></source>, <volume>20</volume>, <page-range>407</page-range>.</mixed-citation>
    </ref>
    <ref id="R16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Osumi-Sutherland</surname><given-names>D.</given-names></string-name>, <string-name><surname>Courtot</surname><given-names>M.</given-names></string-name>, <string-name><surname>Balhoff</surname><given-names>J.P.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2017</year>) <article-title>Dead simple OWL design patterns</article-title>. <source><italic toggle="yes">J. Biomed. Semant.</italic></source>, <volume>8</volume>, <page-range>18</page-range>.</mixed-citation>
    </ref>
    <ref id="R17">
      <label>17.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Mungall</surname><given-names>C.</given-names></string-name>, <collab>fbastian, kltm</collab>, <string-name><surname>Douglass</surname><given-names>E.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2020</year>) <article-title>owlcollab/owltools: 2020-04-06</article-title>.</mixed-citation>
    </ref>
    <ref id="R18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Steigmiller</surname><given-names>A.</given-names></string-name>, <string-name><surname>Liebig</surname><given-names>T.</given-names></string-name> and <string-name><surname>Glimm</surname><given-names>B.</given-names></string-name></person-group> (<year>2014</year>) <article-title>Konclude: system description</article-title>. <source><italic toggle="yes">J. Web Semant.</italic></source>, <volume>27–28</volume>, <fpage>78</fpage>–<lpage>85</lpage>.</mixed-citation>
    </ref>
    <ref id="R19">
      <label>19.</label>
      <mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Jordan</surname><given-names>H.</given-names></string-name>, <string-name><surname>Scholz</surname><given-names>B.</given-names></string-name> and <string-name><surname>Subotić</surname><given-names>P.</given-names></string-name></person-group> (<year>2016</year>) <article-title>Soufflé: on synthesis of program analyzers</article-title>  <conf-loc>Toronto, ON, Canada</conf-loc> . In: <conf-name>Computer Aided Verification</conf-name>. <publisher-name>Springer International Publishing</publisher-name>, pp. <fpage>422</fpage>–<lpage>430</lpage>.</mixed-citation>
    </ref>
    <ref id="R20">
      <label>20.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Mungall</surname><given-names>C.</given-names></string-name>, <string-name><surname>Hegde</surname><given-names>H.</given-names></string-name>, <string-name><surname>Kalita</surname><given-names>P.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2022</year>) <article-title>INCATools/ontology-access-kit: v0.1.22</article-title>.</mixed-citation>
    </ref>
    <ref id="R21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Matentzoglu</surname><given-names>N.</given-names></string-name>, <string-name><surname>Balhoff</surname><given-names>J.P.</given-names></string-name>, <string-name><surname>Bello</surname><given-names>S.M.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2022</year>) <article-title>A simple standard for sharing ontological mappings (SSSOM)</article-title>. <source><italic toggle="yes">Database</italic></source>, <volume>2022</volume>.</mixed-citation>
    </ref>
    <ref id="R22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Merkel</surname><given-names>D.</given-names></string-name></person-group> (<year>2014</year>) <article-title>Docker: lightweight Linux containers for consistent development and deployment</article-title>. <source><italic toggle="yes">Linux J.</italic></source></mixed-citation>
    </ref>
    <ref id="R23">
      <label>23.</label>
      <mixed-citation publication-type="journal">(<year>2009</year>) <article-title>Credit where credit is due</article-title>. <source><italic toggle="yes">Nature</italic></source>, <volume>462</volume>, <page-range>825</page-range>.</mixed-citation>
    </ref>
    <ref id="R24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hastings</surname>  <given-names>J</given-names></string-name></person-group>  <etal>et al</etal>  <year>2012</year>  <article-title>The ChEBI reference database and ontology for biologically relevant chemistry: enhancements for 2013</article-title>  <source>Nucleic Acids Research</source>  <volume>41</volume>, <fpage>D456</fpage>–<lpage>D463</lpage>. doi: <pub-id pub-id-type="doi">10.1093/nar/gks1146</pub-id>.<pub-id pub-id-type="pmid">23180789</pub-id></mixed-citation>
    </ref>
    <ref id="R25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Grau</surname><given-names>H.</given-names></string-name>, <string-name><surname>Horrocks</surname><given-names>I.</given-names></string-name>, <string-name><surname>Kazakov</surname><given-names>Y.</given-names></string-name></person-group>  <etal>et al.</etal>  <year>2008</year>  <article-title>Modular reuse of ontologies: theory and practice</article-title>. <source><italic toggle="yes">J. Artif. Intell.</italic></source>  <volume>31</volume>, <fpage>273</fpage>–<lpage>318</lpage>.</mixed-citation>
    </ref>
    <ref id="R26">
      <label>26.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Christie</surname><given-names>T.</given-names></string-name></person-group> (<year>2014</year>) <article-title>MkDocs</article-title>. <source>Project documentation with MarkDown</source>.</mixed-citation>
    </ref>
    <ref id="R27">
      <label>27.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Franc</surname><given-names>Y.L.</given-names></string-name>, <string-name><surname>Coen</surname><given-names>G.</given-names></string-name>, <string-name><surname>Essen</surname><given-names>J.P.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2020</year>) <article-title>D2.2 FAIR semantics: first recommendations</article-title>.</mixed-citation>
    </ref>
    <ref id="R28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Musen</surname><given-names>M.A.</given-names></string-name> and <collab>Protégé Team</collab></person-group>. (<year>2015</year>) <article-title>The Protégé project: a look back and a look forward</article-title>. <source><italic toggle="yes">AI Matters</italic></source>, <volume>1</volume>, <fpage>4</fpage>–<lpage>12</lpage>.<pub-id pub-id-type="pmid">27239556</pub-id></mixed-citation>
    </ref>
    <ref id="R29">
      <label>29.</label>
      <mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Horridge</surname><given-names>M.</given-names></string-name>, <string-name><surname>Gonçalves</surname><given-names>R.S.</given-names></string-name>, <string-name><surname>Nyulas</surname><given-names>C.I.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2019</year>) <article-title>WebProtégé: a cloud-based ontology editor</article-title>. In: <conf-name>Companion Proceedings of the 2019 World Wide Web Conference, WWW ’19</conf-name>. <publisher-name>Association for Computing Machinery</publisher-name>, <publisher-loc>New York, USA</publisher-loc>, pp. <fpage>686</fpage>–<lpage>689</lpage>.</mixed-citation>
    </ref>
    <ref id="R30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>He</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Xiang</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Zheng</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2018</year>) <article-title>The eXtensible ontology development (XOD) principles and tool implementation to support ontology interoperability</article-title>. <source><italic toggle="yes">J. Biomed. Semant.</italic></source>, <volume>9</volume>, <page-range>3</page-range>.</mixed-citation>
    </ref>
    <ref id="R31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Courtot</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Courtot</surname>  <given-names>M</given-names></string-name>, <string-name><surname>Gibson</surname>  <given-names>F</given-names></string-name>, <string-name><surname>Lister</surname>  <given-names>A</given-names></string-name>, <string-name><surname>Malone</surname>  <given-names>J</given-names></string-name>, <string-name><surname>Schober</surname>  <given-names>D</given-names></string-name>, <string-name><surname>Brinkman</surname>  <given-names>R</given-names></string-name> and <string-name><surname>Ruttenberg</surname>  <given-names>A</given-names></string-name></person-group>  <year>2009</year>  <article-title>MIREOT: the Minimum Information to Reference an External Ontology Term</article-title>  <source>Nature Precedings</source>. doi: <pub-id pub-id-type="doi">10.1038/npre.2009.3576</pub-id>.</mixed-citation>
    </ref>
    <ref id="R32">
      <label>32.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Erdmann</surname><given-names>M.</given-names></string-name><string-name><surname>Waterfeld</surname><given-names>W.</given-names></string-name></person-group> (<year>2012</year>) <part-title>Overview of the NeOn Toolkit</part-title>. In: <person-group person-group-type="editor"><string-name><surname>Suárez-Figueroa</surname> <given-names>MC</given-names></string-name>, <string-name><surname>Gómez-Pérez</surname> <given-names>A</given-names></string-name>, <string-name><surname>Motta</surname> <given-names>E</given-names></string-name></person-group>  <etal>et al.</etal> (eds). <source><italic toggle="yes">Ontology Engineering in a Networked World</italic></source>. <publisher-name>Springer Berlin Heidelberg</publisher-name>, <publisher-loc>Berlin, Heidelberg</publisher-loc>, pp. <fpage>281</fpage>–<lpage>301</lpage>.</mixed-citation>
    </ref>
    <ref id="R33">
      <label>33.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Weiten</surname><given-names>M.</given-names></string-name></person-group> (<year>2009</year>) <part-title>OntoSTUDIO® as a ontology engineering environment</part-title>. In: <person-group person-group-type="editor"><string-name><surname>Davies</surname> <given-names>J</given-names></string-name>, <string-name><surname>Grobelnik</surname> <given-names>M</given-names></string-name>, <string-name><surname>Mladenić</surname> <given-names>D</given-names></string-name></person-group> (eds). <source><italic toggle="yes">Semantic Knowledge Management: Integrating Ontology Management, Knowledge Discovery, and Human Language Technologies</italic></source>. <publisher-name>Springer Berlin Heidelberg</publisher-name>, <publisher-loc>Berlin, Heidelberg</publisher-loc>, pp. <fpage>51</fpage>–<lpage>60</lpage>.</mixed-citation>
    </ref>
    <ref id="R34">
      <label>34.</label>
      <mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Sure</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Erdmann</surname><given-names>M.</given-names></string-name>, <string-name><surname>Angele</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2002</year>) <article-title>OntoEdit: collaborative ontology development for the semantic web</article-title>  <conf-loc>Sardinia, Italy</conf-loc>. In: <conf-name>The Semantic Web—ISWC 2002</conf-name>. <publisher-name>Springer Berlin Heidelberg</publisher-name>, pp. <fpage>221</fpage>–<lpage>235</lpage>.</mixed-citation>
    </ref>
    <ref id="R35">
      <label>35.</label>
      <mixed-citation publication-type="confproc"><person-group person-group-type="author"><string-name><surname>Arpírez</surname><given-names>J.C.</given-names></string-name>, <string-name><surname>Corcho</surname><given-names>O.</given-names></string-name>, <string-name><surname>Fernández-López</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2001</year>) <article-title>WebODE: a scalable workbench for ontological engineering</article-title>. In: <conf-name>Proceedings of the 1st international conference on Knowledge capture, K-CAP ’01</conf-name>. <publisher-name>Association for Computing Machinery</publisher-name>, <publisher-loc>New York, USA</publisher-loc>, pp. <fpage>6</fpage>–<lpage>13</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

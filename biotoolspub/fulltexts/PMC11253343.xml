<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">11253343</article-id>
    <article-id pub-id-type="pmid">39014298</article-id>
    <article-id pub-id-type="publisher-id">5858</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-024-05858-8</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyChelator: a Python-based Colab and web application for metal chelator calculations</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Spahiu</surname>
          <given-names>Emrulla</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Kastrati</surname>
          <given-names>Esra</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Amrute-Nayak</surname>
          <given-names>Mamta</given-names>
        </name>
        <address>
          <email>amrute.mamta@mh-hannover.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00f2yqf98</institution-id><institution-id institution-id-type="GRID">grid.10423.34</institution-id><institution-id institution-id-type="ISNI">0000 0000 9529 9877</institution-id><institution>Institute of Molecular and Cell Physiology, </institution><institution>Hannover Medical School, </institution></institution-wrap>Carl-Neuberg-Str. 1, 30625 Hannover, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/05fq50484</institution-id><institution-id institution-id-type="GRID">grid.21100.32</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 9430</institution-id><institution>Lassonde School of Engineering, </institution><institution>York University, </institution></institution-wrap>Toronto, M3J 1P3 Canada </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>7</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>7</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>25</volume>
    <elocation-id>239</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>4</month>
        <year>2024</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>7</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Metal ions play vital roles in regulating various biological systems, making it essential to control the concentration of free metal ions in solutions during experimental procedures. Several software applications exist for estimating the concentration of free metals in the presence of chelators, with MaxChelator being the easily accessible choice in this domain. This work aimed at developing a Python version of the software with arbitrary precision calculations, extensive new features, and a user-friendly interface to calculate the free metal ions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We introduce the open-source PyChelator web application and the Python-based Google Colaboratory notebook, PyChelator Colab. Key features aim to improve the user experience of metal chelator calculations including input in smaller units, selection among stability constants, input of user-defined constants, and convenient download of all results in Excel format. These features were implemented in Python language by employing Google Colab, facilitating the incorporation of the calculator into other Python-based pipelines and inviting the contributions from the community of Python-using scientists for further enhancements. Arbitrary-precision arithmetic was employed by using the built-in Decimal module to obtain the most accurate results and to avoid rounding errors. No notable differences were observed compared to the results obtained from the PyChelator web application. However, comparison of different sources of stability constants showed substantial differences among them.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">PyChelator is a user-friendly metal and chelator calculator that provides a platform for further development. It is provided as an interactive web application, freely available for use at <ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator">https://amrutelab.github.io/PyChelator</ext-link>, and as a Python-based Google Colaboratory notebook at <ext-link ext-link-type="uri" xlink:href="https://colab.research.google.com/github/AmruteLab/PyChelator/blob/main/PyChelator_Colab.ipynb">https://colab.research.google.com/github/AmruteLab/PyChelator/blob/main/PyChelator_Colab.ipynb</ext-link>.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-024-05858-8.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Metal</kwd>
      <kwd>Chelator</kwd>
      <kwd>PyChelator</kwd>
      <kwd>Web application</kwd>
      <kwd>Python</kwd>
      <kwd>Calcium</kwd>
      <kwd>EGTA</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001659</institution-id>
            <institution>Deutsche Forschungsgemeinschaft</institution>
          </institution-wrap>
        </funding-source>
        <award-id>AM507/2-1</award-id>
        <principal-award-recipient>
          <name>
            <surname>Amrute-Nayak</surname>
            <given-names>Mamta</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Medizinische Hochschule Hannover (MHH) (3118)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par8">The crucial role of metal ions and their ligands, known as chelators, extends across a myriad of biological phenomena, ranging from hemoglobin interacting with iron to chlorophyll binding magnesium. The term “chelate” originating from the Greek word “chela” (the great claw of lobsters [<xref ref-type="bibr" rid="CR1">1</xref>]), refers to the complex formation between the metal ions and chelators using coordinate bonding.</p>
    <p id="Par9">Maintaining defined free metal ion concentrations in experimental procedures is often critical due to the strong regulatory effects on many isolated protein functions and intracellular systems. Divalent metals like calcium, magnesium, and zinc are commonly encountered in biological studies with chelators like EGTA (ethylene glycol-bis(β-aminoethyl ether)-<italic>N</italic>,<italic>N</italic>,<italic>N</italic>′,<italic>N</italic>′-tetraacetic acid) also known as Egtazic acid, Adenosine triphosphate (ATP), and Ethylenediaminetetraacetic acid (EDTA), which are frequently employed to buffer these metals. However, direct measurement of free metal ions often presents a challenge due to the limited availability of ion-specific electrodes in many laboratories. Consequently, several software calculators have been developed to estimate the free metal concentrations, such as ‘SPECS’ by Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>], ‘Chelator’ by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], ‘Bound and determined’ by Brooks and Storey [<xref ref-type="bibr" rid="CR4">4</xref>], ‘Calcium’ by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>], and ‘MaxChelator’ by Bers et al. [<xref ref-type="bibr" rid="CR6">6</xref>]. The distinguishing factors among these tools lie in their availability, user interface, and the stability constants utilized, with minor variations in calculation methodologies. These calculations take into account the affinity of chelators to metal ions and protons at specific temperature, ionic strength, and pH. As most stability constants are typically measured at standard conditions (e.g., 20 or 25 °C, 0.1 M ionic strength), apparent stability constants are initially computed for the user-defined experimental conditions, followed by the determination of the distribution of species in the solution. Variations in results among different calculators arise from the use of different protonation and metal-affinity stability constants. While older calculators were programmed in languages less accessible today, MaxChelator developed in JavaScript by Chris Patton in 2010 [<xref ref-type="bibr" rid="CR6">6</xref>] is readily available through modern browsers. However, the numerous calculators present in the literature do not allow the selection of constants from other sources, while some allow only manual editing of the existing constants. Therefore, development of a software that allows easy selection of the available constants and entry of user-defined constants, alongside improvements in user interface and accessibility, is expected to be a valuable advancement.</p>
    <p id="Par10">Metal chelator calculations involve multiple arithmetic operations on numbers with many decimal places, potentially introducing rounding errors, as mentioned for JavaScript-based MaxChelator [<xref ref-type="bibr" rid="CR6">6</xref>]. JavaScript implicitly converts between strings and floating-point numbers and it relies on the standard double-precision 64-bit binary format, accurate up to 15 digits for integers and 17 for decimals [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. This inherent limitation in precise representation of the decimals as binary can result in accumulated rounding errors and inaccuracies in computed results. In contrast, Python, a contemporary programming language that achieved high popularity in the scientific community, offers several advantages. Python’s accessibility, extensive scientific libraries and the flexibility in project integration make it an attractive choice [<xref ref-type="bibr" rid="CR9">9</xref>]. Notably, Python supports a rich variety of numeric data types (integer, float, and complex), and includes a built-in Decimals module, facilitating precise handling of the decimals [<xref ref-type="bibr" rid="CR10">10</xref>]. User-defined precision in Python yields more reliable results, particularly in scientific computations. Metal-chelator calculators could benefit from such arbitrary-precision arithmetic with the aim to minimize rounding errors.</p>
    <p id="Par11">To address these needs and concerns, we developed PyChelator web application (<ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator/">https://amrutelab.github.io/PyChelator/</ext-link>), an open source program, based on the well-established and widely used Maxchelator framework. PyChelator offers enhanced user experience and customization options. The Python code in a Google Colaboratory notebook makes the PyChelator functionalities readily available to the Python-using scientific community for further development.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par12">PyChelator web application uses JavaScript for calculations and utilizes HTML &amp; CSS for the frontend interface. In Python format, it is accessible as an interactive research notebook (.ipynb) within Google Colaboratory, where users can enter the input parameters via form fields even without coding experience. Upon initiation of the web application, the setup() method is invoked to load the selected chelators and constants, with default constants sourced from the National Institute of Standards and Technology (NIST) Database [<xref ref-type="bibr" rid="CR11">11</xref>]. A schematic representation of the flow of functions to perform the calculations is depicted in Fig. S1.</p>
  </sec>
  <sec id="Sec3">
    <title>Results and discussion</title>
    <p id="Par13">The graphical user interface (GUI) of the PyChelator web application is designed for simplicity of use and comprises three panels. In the left panel users select the calculation mode (Free or Total metal concentration), enter the values for different environmental parameters (i.e., temperature, pH, and ionic equivalence), specify the unit for concentration input, and customize the content of the final report. The top panel features the fields for users to input the concentrations of chelators and metals, and the middle panel contains the buttons to do the calculations that are appended one after the other. Finally, a download option enables users to export the results as a single Excel file. An easy-to-follow tutorial of an example calculation and manual entry of constants are included inside PyChelator, and shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>Example uses of PyChelator. <bold>A</bold> An example shows how to calculate the free calcium concentration from the total calcium in the assay buffer used in the in vitro motility assay. <bold>B</bold> The manual entry of stability constants for other metals and chelators. In this case, constants for Zinc and Calcium buffered using EDTA and EGTA were used [<xref ref-type="bibr" rid="CR11">11</xref>]</p></caption><graphic xlink:href="12859_2024_5858_Fig1_HTML" id="MO1"/></fig></p>
  </sec>
  <sec id="Sec4">
    <title>User-friendly input and structured output</title>
    <p id="Par14">PyChelator facilitates the entry of smaller concentrations of chelators and metals through a dropdown menu, enabling entry of values from molar (M) to nanomolar range (M, mM, μM, and nM). Users can utilize the top panel to input the desired values for calculations in the selected unit. Notably, all results are consistently expressed in molar units. Temperature is to be written in degrees Celsius (°C) and ionic strength as equivalence of ions (Ie = 0.5∑Ci|zi|), as explained by Smith and Miller, rather than the standard ionic strength [<xref ref-type="bibr" rid="CR12">12</xref>]). A function to calculate the ionic equivalence inside PyChelator is also included. Regarding the output, checkboxes were implemented in the “Show in report” section in the left panel, in order to introduce user control over the comprehensive parameters and the metals/ligands to be included in the report. Additionally, PyChelator includes an option for the log-transformed values of the free metal concentrations (− log<sub>10</sub>[free]), corresponding to the pX values (for example pCa for free calcium). In the top panel, a field for purity of chelators was introduced, aiming at addressing the reported significant impact of the chelator purity on calculations [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. Results are handled in a convenient way. The subsequent calculations are dynamically appended to the middle panel upon clicking the “Calculate” button, and all results can finally be downloaded as a single Excel file. A screenshot of the PyChelator GUI, accompanied by annotations, is presented in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. Collectively, these enhancements contribute to an improved user experience for a more efficient and precise use of the calculator, compared to the pre-existing calculators.<fig id="Fig2"><label>Fig. 2</label><caption><p>Screenshot of PyChelator graphical user interface (GUI), illustrating the intuitive layout and functionality. The left panel offers the selection of the desired mode of calculation (step 1), followed by the choice of the constants to be utilized (step 2). Four different sources of constants are available. Additionally, user-defined constants can be entered. Users can specify the unit for concentration input of metal and chelators (step 3), the buffer conditions (step 4), and the parameters for inclusion in the final report (step 5). Subsequently, concentration values of chelators together with the measured or supplier-indicated purity should be specified (step 6), followed by the metal concentration (step 7). Finally, results can be calculated through the “Calculate” button and downloaded as a single Excel file (step 8)</p></caption><graphic xlink:href="12859_2024_5858_Fig2_HTML" id="MO2"/></fig></p>
  </sec>
  <sec id="Sec5">
    <title>A wide selection and manual input of stability constants</title>
    <p id="Par15">MaxChelator has two sources of absolute stability constants, i.e., the Chelator program by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], and NIST database [<xref ref-type="bibr" rid="CR11">11</xref>]. The user has to choose the calculator and do the calculations using one of these sources. PyChelator is a single page application where users can switch constants by the use of a dropdown menu. Additionally, there are two new constant sets added. One is sourced from Fabiato and Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR14">14</xref>–<xref ref-type="bibr" rid="CR16">16</xref>], and the other from the Calcium program by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>]. The equilibrium constants of ATP were corrected for a temperature of 20 °C, using the standard way by employing the enthalpy of reactions, as explained in Bers et al. [<xref ref-type="bibr" rid="CR6">6</xref>]. Results obtained using the four sets of stability constants were compared using buffers with varying total calcium concentration, keeping other parameters constant (pH 7.0, temperature of 20 °C, ionic equivalent (<italic>I</italic>e) of 100 mM, 2 mM ATP, 1 mM EGTA, 6 mM MgCl<sub>2</sub>) as shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. Results obtained using different stability constants show substantial differences. With a narrow range of pX values playing a significant role, as is the case in muscle physiology, where a pCa range of 5–6 is critical in muscle activation, and with results obtained using different constants, it becomes necessary to report the used set of stability constants during such calculations.<fig id="Fig3"><label>Fig. 3</label><caption><p>Comparison of PyChelator results obtained from different stability constants. <bold>A</bold> PyChelator offers the selection of stability constants from four sources, and allows the input of user-defined constants. <bold>B</bold> Calculations done in PyChelator using the four sets of stability constants, sourced from the National Institute of Standards and Technology ‘NIST’ [<xref ref-type="bibr" rid="CR11">11</xref>], ‘SPECS’ by Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>], ‘Chelator’ by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], and ‘Calcium’ by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>]. Buffers composed of varying total calcium concentration and constant pH of 7.0, temperature of 20 °C, Ionic equivalence (<italic>I</italic>e) of 100 mM, 2 mM ATP, 1 mM EGTA, and 6 mM MgCl<sub>2</sub>. Results represented in a connecting-line plot show that constants sourced from NIST and Calcium software yield similar results to each other and differ from those generated using the constants from SPECS and Chelator program. Notably, the high-precision calculations performed in PyChelator Colab employing the NIST constants and arbitrary precision of 50 decimals in calculations (PyNIST), were similar to those obtained from PyChelator web application using the same constants (NIST)</p></caption><graphic xlink:href="12859_2024_5858_Fig3_HTML" id="MO3"/></fig></p>
    <p id="Par16">PyChelator further enhances user customization by allowing manual input of user-defined stability constants. This feature is accessible under the "Constants" dropdown menu and labeled "Write custom constants". Users can input their data and download it in JSON format for future use. This feature makes it possible to use PyChelator as “Any Metal Any Chelator Calculator”. Some commonly used metal-chelator pairs are included together with references under the “Stability Constants” folder in PyChelator Github repository.</p>
  </sec>
  <sec id="Sec6">
    <title>PyChelator Colab</title>
    <p id="Par17">The aforementioned features of the calculator were composed in a Google Colab Notebook. It is available in the GitHub Repository for download and as a link in the web application. PyChelator Colab offers a cloud-based interactive Python environment that lets users write and execute code in their browsers. Unlike Flask and Django, which are designed to handle server-side operations and require managing server hosting and domain registration (which can be costly), PyChelator Colab and PyChelator web applications do not require server hosting. They can be easily hosted on free platforms like GitHub Pages without the need for managing server hosting and domain registration.</p>
    <p id="Par18">The main steps to do the metal chelator calculations in this environment are summarized in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. The displayed results can be further employed by experienced users as a part of a pipeline, integrating into a larger project where other data are incorporated. PyChelator Colab is also modified to use the built-in Python Decimal module, introducing user-defined precision in the calculations, which are otherwise limited by double precision in the floating-point arithmetic of Python and JavaScript. The use of arbitrary precision arithmetic gives a higher precision in calculations. Nevertheless, the results obtained from the PyChelator web application, which utilizes JavaScript in calculations, compared to PyChelator Colab, did not show a notable difference (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B, NIST vs PyNIST). This implies that any calculations done using MaxChelator algorithms are not limited by precision issues related to the employed JavaScript language. However, although the calculated buffers may offer a good approximation with the measured values, challenges like chelator purity or pH can introduce errors even to the best calculations. Thus, it is always recommended to measure the free metal ions whenever possible [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. A general comparison of the features offered by PyChelator compared to other calculator software is given in Table <xref rid="Tab1" ref-type="table">1</xref>.<fig id="Fig4"><label>Fig. 4</label><caption><p>PyChelator Colab GUI. <bold>A</bold> To run a calculation in PyChelator Colab, the user has to run the first code cell "Constants" which enables the dropdown for selection/entry of constants, followed by saving the options through clicking "Save Values". The user can download the constants from "Files" in the left panel. <bold>B</bold> Next, the user has to run the code in the following “Calculate Metal-chelator” section, to input values related to the buffer and to select the output parameters to be included in the report. A field for decimal precision is included to specify the level of precision in decimal places, employing arbitrary precision provided by the Decimals module of Python</p></caption><graphic xlink:href="12859_2024_5858_Fig4_HTML" id="MO4"/></fig><table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of PyChelator to other software</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">Programming language</th><th align="left">Constants</th><th align="left">Input</th><th align="left">Output</th><th align="left">Refs</th></tr></thead><tbody><tr><td align="left">PyChelator (2024)</td><td align="left">JavaScript, Python</td><td align="left">NIST, Schoenmakers, Fabiato, Chelator, User-defined entry</td><td align="left">M, mM, μM, nM</td><td align="left">Choose parameters, Append, Excel</td><td align="left">This work</td></tr><tr><td align="left">MaxChelator (2010)</td><td align="left">JavaScript</td><td align="left">NIST, Schoenmakers, Editable constants file</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR6">6</xref>]</td></tr><tr><td align="left">Calcium (1993)</td><td align="left">N/A</td><td align="left">Martell and Smith, Editable constants</td><td align="left">mM</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR5">5</xref>]</td></tr><tr><td align="left">Chelator (1992)</td><td align="left">Turbo Pascal</td><td align="left">Schoenmakers, Editable constants file</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR3">3</xref>]</td></tr><tr><td align="left">SPECS (1988)</td><td align="left">Fortran</td><td align="left">Fabiato and Fabiato, Editable using WordStar</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR2">2</xref>]</td></tr></tbody></table></table-wrap></p>
  </sec>
  <sec id="Sec7">
    <title>Limitations</title>
    <p id="Par19">PyChelator validates the input values for temperature (0–40 °C), ionic equivalence (0–500 mM), and pH (0–14). No validation could be introduced to the entry of parameters for the manual entry of constants. PyChelator was prepared to facilitate improvements in these calculations. Future versions may incorporate features such as the possibility to use it for multiple metal-chelator calculations, generation of buffer series with a given composition, calculation of the composition of all complexes in the solution, and downloadable stability constants calculations under different buffer conditions.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusions</title>
    <p id="Par20">The PyChelator delivers a significant improvement over currently available web applications by offering a user-friendly metal chelator calculator that allows, among others, selection out of four sets of stability constants, input in smaller units, the option to specify user-defined constants, and the convenient ability to download results as a single Excel file. The Python-based PyChelator Colab offers easy customization in the modern programming language with user-defined precision in decimal calculations. Overall, this study not only expands accessibility to metal-chelator calculations but also paves the way for further advancements.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec9">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2024_5858_MOESM1_ESM.pdf">
            <caption>
              <p>Supplementary Material 1.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>NIST</term>
        <def>
          <p id="Par4">National institute of standards and technology</p>
        </def>
      </def-item>
      <def-item>
        <term>EGTA</term>
        <def>
          <p id="Par5">Ethylene glycol bis(b-aminoethylether)-N,N,N0,N0-tetraacetic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>EDTA</term>
        <def>
          <p id="Par6">Ethylenediaminetetraacetic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>ATP</term>
        <def>
          <p id="Par7">Adenosine triphosphate</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>Emrulla Spahiu and Esra Kastrati have contributed equally to this work.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Chris Patton for his kind support and feedback during the preparation of the software. We thank Ante Radocaj for his critical comments on the manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>ES and MA conceived the project. ES and EK developed the software. ES, EK and MA wrote and edited the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL. This work was partly supported by a grant from Deutsche Forschungsgemeinschaft (DFG) to MA (AM/507/2-1).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: PyChelator. Project home page: <ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator/">https://amrutelab.github.io/PyChelator/</ext-link>. Source code: <ext-link ext-link-type="uri" xlink:href="https://github.com/AmruteLab/PyChelator">https://github.com/AmruteLab/PyChelator</ext-link>. Archived version: 10.5281/zenodo.10674753. Operating system(s): Platform independent. Programming language: Python, JavaScript. Other requirements: None. License: GNU GPL v2. Any restrictions to use by non-academics: E.g., license needed.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par21">Not Applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par22">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par23">Authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgan</surname>
            <given-names>GT</given-names>
          </name>
          <name>
            <surname>Drew</surname>
            <given-names>HDK</given-names>
          </name>
        </person-group>
        <article-title>CLXII.—Researches on residual affinity and co-ordination. Part II. Acetylacetones of selenium and tellurium</article-title>
        <source>J Chem Soc Trans</source>
        <year>1920</year>
        <volume>117</volume>
        <fpage>1456</fpage>
        <lpage>1465</lpage>
        <pub-id pub-id-type="doi">10.1039/CT9201701456</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Fabiato A. [31] Computer programs for calculating total from specified free or free from specified total ionic concentrations in aqueous solutions containing multiple metals and ligands. In: Methods in enzymology. Academic press; 1988. pp. 378–417.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Schoenmakers TJM, Visser GJ, Flik G, Theuvenet APR. CHELATOR: an improved method for computing metal ion concentrations in physiological solutions; 1992.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brooks</surname>
            <given-names>SPJ</given-names>
          </name>
          <name>
            <surname>Storey</surname>
            <given-names>KB</given-names>
          </name>
        </person-group>
        <article-title>Bound and determined: a computer program for making buffers of defined ion concentrations</article-title>
        <source>Anal Biochem</source>
        <year>1992</year>
        <volume>201</volume>
        <fpage>119</fpage>
        <lpage>126</lpage>
        <pub-id pub-id-type="doi">10.1016/0003-2697(92)90183-8</pub-id>
        <?supplied-pmid 1621949?>
        <pub-id pub-id-type="pmid">1621949</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Föhr KJ, Warchol W, Gratzl M. Calculation and control of free divalent cations in solutions used for membrane fusion studies. In: Methods in enzymology. Academic Press; 1993. pp. 149–57.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bers</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Patton</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Nuccitelli</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A practical guide to the preparation of Ca(<sup>2+</sup>) buffers</article-title>
        <source>Methods Cell Biol</source>
        <year>2010</year>
        <volume>99</volume>
        <fpage>1</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/B978-0-12-374841-6.00001-3</pub-id>
        <?supplied-pmid 21035681?>
        <pub-id pub-id-type="pmid">21035681</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">JavaScript Numbers. <ext-link ext-link-type="uri" xlink:href="https://www.w3schools.com/js/js_numbers.asp">https://www.w3schools.com/js/js_numbers.asp</ext-link>. Accessed 28 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">The Floating-Point Guide—Floating-point cheat sheet for JavaScript. <ext-link ext-link-type="uri" xlink:href="https://floating-point-gui.de/languages/javascript/">https://floating-point-gui.de/languages/javascript/</ext-link>. Accessed 12 Mar 2024.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ekmekci</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>McAnany</surname>
            <given-names>CE</given-names>
          </name>
          <name>
            <surname>Mura</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>An introduction to programming for bioscientists: a python-based primer</article-title>
        <source>PLOS Comput Biol</source>
        <year>2016</year>
        <volume>12</volume>
        <fpage>e1004867</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004867</pub-id>
        <?supplied-pmid 27271528?>
        <pub-id pub-id-type="pmid">27271528</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Decimal—decimal fixed point and floating point arithmetic. Python documentation. <ext-link ext-link-type="uri" xlink:href="https://docs.python.org/3/library/decimal.html">https://docs.python.org/3/library/decimal.html</ext-link>. Accessed 28 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Smith RM, Martell A, Motekaitis R, Smith R, Motekaitis R. NIST critically selected stability constants of metal complexes database; 2004.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Potentiometric measurements of stoichiometric and apparent affinity constants of EGTA for protons and divalent ions including calcium</article-title>
        <source>Biochim Biophys Acta BBA Gen Subj</source>
        <year>1985</year>
        <volume>839</volume>
        <issue>3</issue>
        <fpage>287</fpage>
        <lpage>299</lpage>
        <pub-id pub-id-type="doi">10.1016/0304-4165(85)90011-X</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGuigan</surname>
            <given-names>JAS</given-names>
          </name>
          <name>
            <surname>Kay</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Elder</surname>
            <given-names>HY</given-names>
          </name>
        </person-group>
        <article-title>Ionized concentrations in Ca<sup>2+</sup> and Mg<sup>2+</sup> buffers must be measured, not calculated</article-title>
        <source>Exp Physiol</source>
        <year>2020</year>
        <volume>105</volume>
        <fpage>427</fpage>
        <lpage>437</lpage>
        <pub-id pub-id-type="doi">10.1113/EP088345</pub-id>
        <?supplied-pmid 31758871?>
        <pub-id pub-id-type="pmid">31758871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGuigan</surname>
            <given-names>JAS</given-names>
          </name>
          <name>
            <surname>Kay</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Elder</surname>
            <given-names>HY</given-names>
          </name>
        </person-group>
        <article-title>Ionised concentrations in calcium and magnesium buffers: standards and precise measurement are mandatory</article-title>
        <source>Progress Biophys Mol Biol</source>
        <year>2017</year>
        <volume>126</volume>
        <fpage>48</fpage>
        <lpage>64</lpage>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2017.03.001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fujishiro</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kawata</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A program for calculating the total concentrations of ligands and metals at any temperature, ionic strength and pH for solutions with a controlled metal concentration</article-title>
        <source>Comput Biol Med</source>
        <year>1995</year>
        <volume>25</volume>
        <fpage>61</fpage>
        <lpage>80</lpage>
        <pub-id pub-id-type="doi">10.1016/0010-4825(95)98886-I</pub-id>
        <?supplied-pmid 7600762?>
        <pub-id pub-id-type="pmid">7600762</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fabiato</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fabiato</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Calculator programs for computing the composition of the solutions containing multiple metals and ligands used for experiments in skinned muscle cells</article-title>
        <source>J Physiol</source>
        <year>1979</year>
        <volume>75</volume>
        <fpage>463</fpage>
        <lpage>505</lpage>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">11253343</article-id>
    <article-id pub-id-type="pmid">39014298</article-id>
    <article-id pub-id-type="publisher-id">5858</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-024-05858-8</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyChelator: a Python-based Colab and web application for metal chelator calculations</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Spahiu</surname>
          <given-names>Emrulla</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Kastrati</surname>
          <given-names>Esra</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Amrute-Nayak</surname>
          <given-names>Mamta</given-names>
        </name>
        <address>
          <email>amrute.mamta@mh-hannover.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00f2yqf98</institution-id><institution-id institution-id-type="GRID">grid.10423.34</institution-id><institution-id institution-id-type="ISNI">0000 0000 9529 9877</institution-id><institution>Institute of Molecular and Cell Physiology, </institution><institution>Hannover Medical School, </institution></institution-wrap>Carl-Neuberg-Str. 1, 30625 Hannover, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/05fq50484</institution-id><institution-id institution-id-type="GRID">grid.21100.32</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 9430</institution-id><institution>Lassonde School of Engineering, </institution><institution>York University, </institution></institution-wrap>Toronto, M3J 1P3 Canada </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>7</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>7</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>25</volume>
    <elocation-id>239</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>4</month>
        <year>2024</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>7</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Metal ions play vital roles in regulating various biological systems, making it essential to control the concentration of free metal ions in solutions during experimental procedures. Several software applications exist for estimating the concentration of free metals in the presence of chelators, with MaxChelator being the easily accessible choice in this domain. This work aimed at developing a Python version of the software with arbitrary precision calculations, extensive new features, and a user-friendly interface to calculate the free metal ions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We introduce the open-source PyChelator web application and the Python-based Google Colaboratory notebook, PyChelator Colab. Key features aim to improve the user experience of metal chelator calculations including input in smaller units, selection among stability constants, input of user-defined constants, and convenient download of all results in Excel format. These features were implemented in Python language by employing Google Colab, facilitating the incorporation of the calculator into other Python-based pipelines and inviting the contributions from the community of Python-using scientists for further enhancements. Arbitrary-precision arithmetic was employed by using the built-in Decimal module to obtain the most accurate results and to avoid rounding errors. No notable differences were observed compared to the results obtained from the PyChelator web application. However, comparison of different sources of stability constants showed substantial differences among them.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">PyChelator is a user-friendly metal and chelator calculator that provides a platform for further development. It is provided as an interactive web application, freely available for use at <ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator">https://amrutelab.github.io/PyChelator</ext-link>, and as a Python-based Google Colaboratory notebook at <ext-link ext-link-type="uri" xlink:href="https://colab.research.google.com/github/AmruteLab/PyChelator/blob/main/PyChelator_Colab.ipynb">https://colab.research.google.com/github/AmruteLab/PyChelator/blob/main/PyChelator_Colab.ipynb</ext-link>.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-024-05858-8.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Metal</kwd>
      <kwd>Chelator</kwd>
      <kwd>PyChelator</kwd>
      <kwd>Web application</kwd>
      <kwd>Python</kwd>
      <kwd>Calcium</kwd>
      <kwd>EGTA</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001659</institution-id>
            <institution>Deutsche Forschungsgemeinschaft</institution>
          </institution-wrap>
        </funding-source>
        <award-id>AM507/2-1</award-id>
        <principal-award-recipient>
          <name>
            <surname>Amrute-Nayak</surname>
            <given-names>Mamta</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Medizinische Hochschule Hannover (MHH) (3118)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par8">The crucial role of metal ions and their ligands, known as chelators, extends across a myriad of biological phenomena, ranging from hemoglobin interacting with iron to chlorophyll binding magnesium. The term “chelate” originating from the Greek word “chela” (the great claw of lobsters [<xref ref-type="bibr" rid="CR1">1</xref>]), refers to the complex formation between the metal ions and chelators using coordinate bonding.</p>
    <p id="Par9">Maintaining defined free metal ion concentrations in experimental procedures is often critical due to the strong regulatory effects on many isolated protein functions and intracellular systems. Divalent metals like calcium, magnesium, and zinc are commonly encountered in biological studies with chelators like EGTA (ethylene glycol-bis(β-aminoethyl ether)-<italic>N</italic>,<italic>N</italic>,<italic>N</italic>′,<italic>N</italic>′-tetraacetic acid) also known as Egtazic acid, Adenosine triphosphate (ATP), and Ethylenediaminetetraacetic acid (EDTA), which are frequently employed to buffer these metals. However, direct measurement of free metal ions often presents a challenge due to the limited availability of ion-specific electrodes in many laboratories. Consequently, several software calculators have been developed to estimate the free metal concentrations, such as ‘SPECS’ by Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>], ‘Chelator’ by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], ‘Bound and determined’ by Brooks and Storey [<xref ref-type="bibr" rid="CR4">4</xref>], ‘Calcium’ by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>], and ‘MaxChelator’ by Bers et al. [<xref ref-type="bibr" rid="CR6">6</xref>]. The distinguishing factors among these tools lie in their availability, user interface, and the stability constants utilized, with minor variations in calculation methodologies. These calculations take into account the affinity of chelators to metal ions and protons at specific temperature, ionic strength, and pH. As most stability constants are typically measured at standard conditions (e.g., 20 or 25 °C, 0.1 M ionic strength), apparent stability constants are initially computed for the user-defined experimental conditions, followed by the determination of the distribution of species in the solution. Variations in results among different calculators arise from the use of different protonation and metal-affinity stability constants. While older calculators were programmed in languages less accessible today, MaxChelator developed in JavaScript by Chris Patton in 2010 [<xref ref-type="bibr" rid="CR6">6</xref>] is readily available through modern browsers. However, the numerous calculators present in the literature do not allow the selection of constants from other sources, while some allow only manual editing of the existing constants. Therefore, development of a software that allows easy selection of the available constants and entry of user-defined constants, alongside improvements in user interface and accessibility, is expected to be a valuable advancement.</p>
    <p id="Par10">Metal chelator calculations involve multiple arithmetic operations on numbers with many decimal places, potentially introducing rounding errors, as mentioned for JavaScript-based MaxChelator [<xref ref-type="bibr" rid="CR6">6</xref>]. JavaScript implicitly converts between strings and floating-point numbers and it relies on the standard double-precision 64-bit binary format, accurate up to 15 digits for integers and 17 for decimals [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. This inherent limitation in precise representation of the decimals as binary can result in accumulated rounding errors and inaccuracies in computed results. In contrast, Python, a contemporary programming language that achieved high popularity in the scientific community, offers several advantages. Python’s accessibility, extensive scientific libraries and the flexibility in project integration make it an attractive choice [<xref ref-type="bibr" rid="CR9">9</xref>]. Notably, Python supports a rich variety of numeric data types (integer, float, and complex), and includes a built-in Decimals module, facilitating precise handling of the decimals [<xref ref-type="bibr" rid="CR10">10</xref>]. User-defined precision in Python yields more reliable results, particularly in scientific computations. Metal-chelator calculators could benefit from such arbitrary-precision arithmetic with the aim to minimize rounding errors.</p>
    <p id="Par11">To address these needs and concerns, we developed PyChelator web application (<ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator/">https://amrutelab.github.io/PyChelator/</ext-link>), an open source program, based on the well-established and widely used Maxchelator framework. PyChelator offers enhanced user experience and customization options. The Python code in a Google Colaboratory notebook makes the PyChelator functionalities readily available to the Python-using scientific community for further development.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par12">PyChelator web application uses JavaScript for calculations and utilizes HTML &amp; CSS for the frontend interface. In Python format, it is accessible as an interactive research notebook (.ipynb) within Google Colaboratory, where users can enter the input parameters via form fields even without coding experience. Upon initiation of the web application, the setup() method is invoked to load the selected chelators and constants, with default constants sourced from the National Institute of Standards and Technology (NIST) Database [<xref ref-type="bibr" rid="CR11">11</xref>]. A schematic representation of the flow of functions to perform the calculations is depicted in Fig. S1.</p>
  </sec>
  <sec id="Sec3">
    <title>Results and discussion</title>
    <p id="Par13">The graphical user interface (GUI) of the PyChelator web application is designed for simplicity of use and comprises three panels. In the left panel users select the calculation mode (Free or Total metal concentration), enter the values for different environmental parameters (i.e., temperature, pH, and ionic equivalence), specify the unit for concentration input, and customize the content of the final report. The top panel features the fields for users to input the concentrations of chelators and metals, and the middle panel contains the buttons to do the calculations that are appended one after the other. Finally, a download option enables users to export the results as a single Excel file. An easy-to-follow tutorial of an example calculation and manual entry of constants are included inside PyChelator, and shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>Example uses of PyChelator. <bold>A</bold> An example shows how to calculate the free calcium concentration from the total calcium in the assay buffer used in the in vitro motility assay. <bold>B</bold> The manual entry of stability constants for other metals and chelators. In this case, constants for Zinc and Calcium buffered using EDTA and EGTA were used [<xref ref-type="bibr" rid="CR11">11</xref>]</p></caption><graphic xlink:href="12859_2024_5858_Fig1_HTML" id="MO1"/></fig></p>
  </sec>
  <sec id="Sec4">
    <title>User-friendly input and structured output</title>
    <p id="Par14">PyChelator facilitates the entry of smaller concentrations of chelators and metals through a dropdown menu, enabling entry of values from molar (M) to nanomolar range (M, mM, μM, and nM). Users can utilize the top panel to input the desired values for calculations in the selected unit. Notably, all results are consistently expressed in molar units. Temperature is to be written in degrees Celsius (°C) and ionic strength as equivalence of ions (Ie = 0.5∑Ci|zi|), as explained by Smith and Miller, rather than the standard ionic strength [<xref ref-type="bibr" rid="CR12">12</xref>]). A function to calculate the ionic equivalence inside PyChelator is also included. Regarding the output, checkboxes were implemented in the “Show in report” section in the left panel, in order to introduce user control over the comprehensive parameters and the metals/ligands to be included in the report. Additionally, PyChelator includes an option for the log-transformed values of the free metal concentrations (− log<sub>10</sub>[free]), corresponding to the pX values (for example pCa for free calcium). In the top panel, a field for purity of chelators was introduced, aiming at addressing the reported significant impact of the chelator purity on calculations [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. Results are handled in a convenient way. The subsequent calculations are dynamically appended to the middle panel upon clicking the “Calculate” button, and all results can finally be downloaded as a single Excel file. A screenshot of the PyChelator GUI, accompanied by annotations, is presented in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. Collectively, these enhancements contribute to an improved user experience for a more efficient and precise use of the calculator, compared to the pre-existing calculators.<fig id="Fig2"><label>Fig. 2</label><caption><p>Screenshot of PyChelator graphical user interface (GUI), illustrating the intuitive layout and functionality. The left panel offers the selection of the desired mode of calculation (step 1), followed by the choice of the constants to be utilized (step 2). Four different sources of constants are available. Additionally, user-defined constants can be entered. Users can specify the unit for concentration input of metal and chelators (step 3), the buffer conditions (step 4), and the parameters for inclusion in the final report (step 5). Subsequently, concentration values of chelators together with the measured or supplier-indicated purity should be specified (step 6), followed by the metal concentration (step 7). Finally, results can be calculated through the “Calculate” button and downloaded as a single Excel file (step 8)</p></caption><graphic xlink:href="12859_2024_5858_Fig2_HTML" id="MO2"/></fig></p>
  </sec>
  <sec id="Sec5">
    <title>A wide selection and manual input of stability constants</title>
    <p id="Par15">MaxChelator has two sources of absolute stability constants, i.e., the Chelator program by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], and NIST database [<xref ref-type="bibr" rid="CR11">11</xref>]. The user has to choose the calculator and do the calculations using one of these sources. PyChelator is a single page application where users can switch constants by the use of a dropdown menu. Additionally, there are two new constant sets added. One is sourced from Fabiato and Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR14">14</xref>–<xref ref-type="bibr" rid="CR16">16</xref>], and the other from the Calcium program by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>]. The equilibrium constants of ATP were corrected for a temperature of 20 °C, using the standard way by employing the enthalpy of reactions, as explained in Bers et al. [<xref ref-type="bibr" rid="CR6">6</xref>]. Results obtained using the four sets of stability constants were compared using buffers with varying total calcium concentration, keeping other parameters constant (pH 7.0, temperature of 20 °C, ionic equivalent (<italic>I</italic>e) of 100 mM, 2 mM ATP, 1 mM EGTA, 6 mM MgCl<sub>2</sub>) as shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. Results obtained using different stability constants show substantial differences. With a narrow range of pX values playing a significant role, as is the case in muscle physiology, where a pCa range of 5–6 is critical in muscle activation, and with results obtained using different constants, it becomes necessary to report the used set of stability constants during such calculations.<fig id="Fig3"><label>Fig. 3</label><caption><p>Comparison of PyChelator results obtained from different stability constants. <bold>A</bold> PyChelator offers the selection of stability constants from four sources, and allows the input of user-defined constants. <bold>B</bold> Calculations done in PyChelator using the four sets of stability constants, sourced from the National Institute of Standards and Technology ‘NIST’ [<xref ref-type="bibr" rid="CR11">11</xref>], ‘SPECS’ by Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>], ‘Chelator’ by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], and ‘Calcium’ by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>]. Buffers composed of varying total calcium concentration and constant pH of 7.0, temperature of 20 °C, Ionic equivalence (<italic>I</italic>e) of 100 mM, 2 mM ATP, 1 mM EGTA, and 6 mM MgCl<sub>2</sub>. Results represented in a connecting-line plot show that constants sourced from NIST and Calcium software yield similar results to each other and differ from those generated using the constants from SPECS and Chelator program. Notably, the high-precision calculations performed in PyChelator Colab employing the NIST constants and arbitrary precision of 50 decimals in calculations (PyNIST), were similar to those obtained from PyChelator web application using the same constants (NIST)</p></caption><graphic xlink:href="12859_2024_5858_Fig3_HTML" id="MO3"/></fig></p>
    <p id="Par16">PyChelator further enhances user customization by allowing manual input of user-defined stability constants. This feature is accessible under the "Constants" dropdown menu and labeled "Write custom constants". Users can input their data and download it in JSON format for future use. This feature makes it possible to use PyChelator as “Any Metal Any Chelator Calculator”. Some commonly used metal-chelator pairs are included together with references under the “Stability Constants” folder in PyChelator Github repository.</p>
  </sec>
  <sec id="Sec6">
    <title>PyChelator Colab</title>
    <p id="Par17">The aforementioned features of the calculator were composed in a Google Colab Notebook. It is available in the GitHub Repository for download and as a link in the web application. PyChelator Colab offers a cloud-based interactive Python environment that lets users write and execute code in their browsers. Unlike Flask and Django, which are designed to handle server-side operations and require managing server hosting and domain registration (which can be costly), PyChelator Colab and PyChelator web applications do not require server hosting. They can be easily hosted on free platforms like GitHub Pages without the need for managing server hosting and domain registration.</p>
    <p id="Par18">The main steps to do the metal chelator calculations in this environment are summarized in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. The displayed results can be further employed by experienced users as a part of a pipeline, integrating into a larger project where other data are incorporated. PyChelator Colab is also modified to use the built-in Python Decimal module, introducing user-defined precision in the calculations, which are otherwise limited by double precision in the floating-point arithmetic of Python and JavaScript. The use of arbitrary precision arithmetic gives a higher precision in calculations. Nevertheless, the results obtained from the PyChelator web application, which utilizes JavaScript in calculations, compared to PyChelator Colab, did not show a notable difference (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B, NIST vs PyNIST). This implies that any calculations done using MaxChelator algorithms are not limited by precision issues related to the employed JavaScript language. However, although the calculated buffers may offer a good approximation with the measured values, challenges like chelator purity or pH can introduce errors even to the best calculations. Thus, it is always recommended to measure the free metal ions whenever possible [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. A general comparison of the features offered by PyChelator compared to other calculator software is given in Table <xref rid="Tab1" ref-type="table">1</xref>.<fig id="Fig4"><label>Fig. 4</label><caption><p>PyChelator Colab GUI. <bold>A</bold> To run a calculation in PyChelator Colab, the user has to run the first code cell "Constants" which enables the dropdown for selection/entry of constants, followed by saving the options through clicking "Save Values". The user can download the constants from "Files" in the left panel. <bold>B</bold> Next, the user has to run the code in the following “Calculate Metal-chelator” section, to input values related to the buffer and to select the output parameters to be included in the report. A field for decimal precision is included to specify the level of precision in decimal places, employing arbitrary precision provided by the Decimals module of Python</p></caption><graphic xlink:href="12859_2024_5858_Fig4_HTML" id="MO4"/></fig><table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of PyChelator to other software</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">Programming language</th><th align="left">Constants</th><th align="left">Input</th><th align="left">Output</th><th align="left">Refs</th></tr></thead><tbody><tr><td align="left">PyChelator (2024)</td><td align="left">JavaScript, Python</td><td align="left">NIST, Schoenmakers, Fabiato, Chelator, User-defined entry</td><td align="left">M, mM, μM, nM</td><td align="left">Choose parameters, Append, Excel</td><td align="left">This work</td></tr><tr><td align="left">MaxChelator (2010)</td><td align="left">JavaScript</td><td align="left">NIST, Schoenmakers, Editable constants file</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR6">6</xref>]</td></tr><tr><td align="left">Calcium (1993)</td><td align="left">N/A</td><td align="left">Martell and Smith, Editable constants</td><td align="left">mM</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR5">5</xref>]</td></tr><tr><td align="left">Chelator (1992)</td><td align="left">Turbo Pascal</td><td align="left">Schoenmakers, Editable constants file</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR3">3</xref>]</td></tr><tr><td align="left">SPECS (1988)</td><td align="left">Fortran</td><td align="left">Fabiato and Fabiato, Editable using WordStar</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR2">2</xref>]</td></tr></tbody></table></table-wrap></p>
  </sec>
  <sec id="Sec7">
    <title>Limitations</title>
    <p id="Par19">PyChelator validates the input values for temperature (0–40 °C), ionic equivalence (0–500 mM), and pH (0–14). No validation could be introduced to the entry of parameters for the manual entry of constants. PyChelator was prepared to facilitate improvements in these calculations. Future versions may incorporate features such as the possibility to use it for multiple metal-chelator calculations, generation of buffer series with a given composition, calculation of the composition of all complexes in the solution, and downloadable stability constants calculations under different buffer conditions.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusions</title>
    <p id="Par20">The PyChelator delivers a significant improvement over currently available web applications by offering a user-friendly metal chelator calculator that allows, among others, selection out of four sets of stability constants, input in smaller units, the option to specify user-defined constants, and the convenient ability to download results as a single Excel file. The Python-based PyChelator Colab offers easy customization in the modern programming language with user-defined precision in decimal calculations. Overall, this study not only expands accessibility to metal-chelator calculations but also paves the way for further advancements.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec9">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2024_5858_MOESM1_ESM.pdf">
            <caption>
              <p>Supplementary Material 1.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>NIST</term>
        <def>
          <p id="Par4">National institute of standards and technology</p>
        </def>
      </def-item>
      <def-item>
        <term>EGTA</term>
        <def>
          <p id="Par5">Ethylene glycol bis(b-aminoethylether)-N,N,N0,N0-tetraacetic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>EDTA</term>
        <def>
          <p id="Par6">Ethylenediaminetetraacetic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>ATP</term>
        <def>
          <p id="Par7">Adenosine triphosphate</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>Emrulla Spahiu and Esra Kastrati have contributed equally to this work.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Chris Patton for his kind support and feedback during the preparation of the software. We thank Ante Radocaj for his critical comments on the manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>ES and MA conceived the project. ES and EK developed the software. ES, EK and MA wrote and edited the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL. This work was partly supported by a grant from Deutsche Forschungsgemeinschaft (DFG) to MA (AM/507/2-1).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: PyChelator. Project home page: <ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator/">https://amrutelab.github.io/PyChelator/</ext-link>. Source code: <ext-link ext-link-type="uri" xlink:href="https://github.com/AmruteLab/PyChelator">https://github.com/AmruteLab/PyChelator</ext-link>. Archived version: 10.5281/zenodo.10674753. Operating system(s): Platform independent. Programming language: Python, JavaScript. Other requirements: None. License: GNU GPL v2. Any restrictions to use by non-academics: E.g., license needed.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par21">Not Applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par22">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par23">Authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgan</surname>
            <given-names>GT</given-names>
          </name>
          <name>
            <surname>Drew</surname>
            <given-names>HDK</given-names>
          </name>
        </person-group>
        <article-title>CLXII.—Researches on residual affinity and co-ordination. Part II. Acetylacetones of selenium and tellurium</article-title>
        <source>J Chem Soc Trans</source>
        <year>1920</year>
        <volume>117</volume>
        <fpage>1456</fpage>
        <lpage>1465</lpage>
        <pub-id pub-id-type="doi">10.1039/CT9201701456</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Fabiato A. [31] Computer programs for calculating total from specified free or free from specified total ionic concentrations in aqueous solutions containing multiple metals and ligands. In: Methods in enzymology. Academic press; 1988. pp. 378–417.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Schoenmakers TJM, Visser GJ, Flik G, Theuvenet APR. CHELATOR: an improved method for computing metal ion concentrations in physiological solutions; 1992.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brooks</surname>
            <given-names>SPJ</given-names>
          </name>
          <name>
            <surname>Storey</surname>
            <given-names>KB</given-names>
          </name>
        </person-group>
        <article-title>Bound and determined: a computer program for making buffers of defined ion concentrations</article-title>
        <source>Anal Biochem</source>
        <year>1992</year>
        <volume>201</volume>
        <fpage>119</fpage>
        <lpage>126</lpage>
        <pub-id pub-id-type="doi">10.1016/0003-2697(92)90183-8</pub-id>
        <?supplied-pmid 1621949?>
        <pub-id pub-id-type="pmid">1621949</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Föhr KJ, Warchol W, Gratzl M. Calculation and control of free divalent cations in solutions used for membrane fusion studies. In: Methods in enzymology. Academic Press; 1993. pp. 149–57.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bers</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Patton</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Nuccitelli</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A practical guide to the preparation of Ca(<sup>2+</sup>) buffers</article-title>
        <source>Methods Cell Biol</source>
        <year>2010</year>
        <volume>99</volume>
        <fpage>1</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/B978-0-12-374841-6.00001-3</pub-id>
        <?supplied-pmid 21035681?>
        <pub-id pub-id-type="pmid">21035681</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">JavaScript Numbers. <ext-link ext-link-type="uri" xlink:href="https://www.w3schools.com/js/js_numbers.asp">https://www.w3schools.com/js/js_numbers.asp</ext-link>. Accessed 28 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">The Floating-Point Guide—Floating-point cheat sheet for JavaScript. <ext-link ext-link-type="uri" xlink:href="https://floating-point-gui.de/languages/javascript/">https://floating-point-gui.de/languages/javascript/</ext-link>. Accessed 12 Mar 2024.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ekmekci</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>McAnany</surname>
            <given-names>CE</given-names>
          </name>
          <name>
            <surname>Mura</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>An introduction to programming for bioscientists: a python-based primer</article-title>
        <source>PLOS Comput Biol</source>
        <year>2016</year>
        <volume>12</volume>
        <fpage>e1004867</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004867</pub-id>
        <?supplied-pmid 27271528?>
        <pub-id pub-id-type="pmid">27271528</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Decimal—decimal fixed point and floating point arithmetic. Python documentation. <ext-link ext-link-type="uri" xlink:href="https://docs.python.org/3/library/decimal.html">https://docs.python.org/3/library/decimal.html</ext-link>. Accessed 28 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Smith RM, Martell A, Motekaitis R, Smith R, Motekaitis R. NIST critically selected stability constants of metal complexes database; 2004.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Potentiometric measurements of stoichiometric and apparent affinity constants of EGTA for protons and divalent ions including calcium</article-title>
        <source>Biochim Biophys Acta BBA Gen Subj</source>
        <year>1985</year>
        <volume>839</volume>
        <issue>3</issue>
        <fpage>287</fpage>
        <lpage>299</lpage>
        <pub-id pub-id-type="doi">10.1016/0304-4165(85)90011-X</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGuigan</surname>
            <given-names>JAS</given-names>
          </name>
          <name>
            <surname>Kay</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Elder</surname>
            <given-names>HY</given-names>
          </name>
        </person-group>
        <article-title>Ionized concentrations in Ca<sup>2+</sup> and Mg<sup>2+</sup> buffers must be measured, not calculated</article-title>
        <source>Exp Physiol</source>
        <year>2020</year>
        <volume>105</volume>
        <fpage>427</fpage>
        <lpage>437</lpage>
        <pub-id pub-id-type="doi">10.1113/EP088345</pub-id>
        <?supplied-pmid 31758871?>
        <pub-id pub-id-type="pmid">31758871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGuigan</surname>
            <given-names>JAS</given-names>
          </name>
          <name>
            <surname>Kay</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Elder</surname>
            <given-names>HY</given-names>
          </name>
        </person-group>
        <article-title>Ionised concentrations in calcium and magnesium buffers: standards and precise measurement are mandatory</article-title>
        <source>Progress Biophys Mol Biol</source>
        <year>2017</year>
        <volume>126</volume>
        <fpage>48</fpage>
        <lpage>64</lpage>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2017.03.001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fujishiro</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kawata</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A program for calculating the total concentrations of ligands and metals at any temperature, ionic strength and pH for solutions with a controlled metal concentration</article-title>
        <source>Comput Biol Med</source>
        <year>1995</year>
        <volume>25</volume>
        <fpage>61</fpage>
        <lpage>80</lpage>
        <pub-id pub-id-type="doi">10.1016/0010-4825(95)98886-I</pub-id>
        <?supplied-pmid 7600762?>
        <pub-id pub-id-type="pmid">7600762</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fabiato</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fabiato</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Calculator programs for computing the composition of the solutions containing multiple metals and ligands used for experiments in skinned muscle cells</article-title>
        <source>J Physiol</source>
        <year>1979</year>
        <volume>75</volume>
        <fpage>463</fpage>
        <lpage>505</lpage>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">11253343</article-id>
    <article-id pub-id-type="pmid">39014298</article-id>
    <article-id pub-id-type="publisher-id">5858</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-024-05858-8</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PyChelator: a Python-based Colab and web application for metal chelator calculations</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Spahiu</surname>
          <given-names>Emrulla</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Kastrati</surname>
          <given-names>Esra</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Amrute-Nayak</surname>
          <given-names>Mamta</given-names>
        </name>
        <address>
          <email>amrute.mamta@mh-hannover.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00f2yqf98</institution-id><institution-id institution-id-type="GRID">grid.10423.34</institution-id><institution-id institution-id-type="ISNI">0000 0000 9529 9877</institution-id><institution>Institute of Molecular and Cell Physiology, </institution><institution>Hannover Medical School, </institution></institution-wrap>Carl-Neuberg-Str. 1, 30625 Hannover, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/05fq50484</institution-id><institution-id institution-id-type="GRID">grid.21100.32</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 9430</institution-id><institution>Lassonde School of Engineering, </institution><institution>York University, </institution></institution-wrap>Toronto, M3J 1P3 Canada </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>7</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>7</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>25</volume>
    <elocation-id>239</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>4</month>
        <year>2024</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>7</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <copyright-year>2024</copyright-year>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Metal ions play vital roles in regulating various biological systems, making it essential to control the concentration of free metal ions in solutions during experimental procedures. Several software applications exist for estimating the concentration of free metals in the presence of chelators, with MaxChelator being the easily accessible choice in this domain. This work aimed at developing a Python version of the software with arbitrary precision calculations, extensive new features, and a user-friendly interface to calculate the free metal ions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We introduce the open-source PyChelator web application and the Python-based Google Colaboratory notebook, PyChelator Colab. Key features aim to improve the user experience of metal chelator calculations including input in smaller units, selection among stability constants, input of user-defined constants, and convenient download of all results in Excel format. These features were implemented in Python language by employing Google Colab, facilitating the incorporation of the calculator into other Python-based pipelines and inviting the contributions from the community of Python-using scientists for further enhancements. Arbitrary-precision arithmetic was employed by using the built-in Decimal module to obtain the most accurate results and to avoid rounding errors. No notable differences were observed compared to the results obtained from the PyChelator web application. However, comparison of different sources of stability constants showed substantial differences among them.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">PyChelator is a user-friendly metal and chelator calculator that provides a platform for further development. It is provided as an interactive web application, freely available for use at <ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator">https://amrutelab.github.io/PyChelator</ext-link>, and as a Python-based Google Colaboratory notebook at <ext-link ext-link-type="uri" xlink:href="https://colab.research.google.com/github/AmruteLab/PyChelator/blob/main/PyChelator_Colab.ipynb">https://colab.research.google.com/github/AmruteLab/PyChelator/blob/main/PyChelator_Colab.ipynb</ext-link>.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-024-05858-8.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Metal</kwd>
      <kwd>Chelator</kwd>
      <kwd>PyChelator</kwd>
      <kwd>Web application</kwd>
      <kwd>Python</kwd>
      <kwd>Calcium</kwd>
      <kwd>EGTA</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001659</institution-id>
            <institution>Deutsche Forschungsgemeinschaft</institution>
          </institution-wrap>
        </funding-source>
        <award-id>AM507/2-1</award-id>
        <principal-award-recipient>
          <name>
            <surname>Amrute-Nayak</surname>
            <given-names>Mamta</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Medizinische Hochschule Hannover (MHH) (3118)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par8">The crucial role of metal ions and their ligands, known as chelators, extends across a myriad of biological phenomena, ranging from hemoglobin interacting with iron to chlorophyll binding magnesium. The term “chelate” originating from the Greek word “chela” (the great claw of lobsters [<xref ref-type="bibr" rid="CR1">1</xref>]), refers to the complex formation between the metal ions and chelators using coordinate bonding.</p>
    <p id="Par9">Maintaining defined free metal ion concentrations in experimental procedures is often critical due to the strong regulatory effects on many isolated protein functions and intracellular systems. Divalent metals like calcium, magnesium, and zinc are commonly encountered in biological studies with chelators like EGTA (ethylene glycol-bis(β-aminoethyl ether)-<italic>N</italic>,<italic>N</italic>,<italic>N</italic>′,<italic>N</italic>′-tetraacetic acid) also known as Egtazic acid, Adenosine triphosphate (ATP), and Ethylenediaminetetraacetic acid (EDTA), which are frequently employed to buffer these metals. However, direct measurement of free metal ions often presents a challenge due to the limited availability of ion-specific electrodes in many laboratories. Consequently, several software calculators have been developed to estimate the free metal concentrations, such as ‘SPECS’ by Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>], ‘Chelator’ by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], ‘Bound and determined’ by Brooks and Storey [<xref ref-type="bibr" rid="CR4">4</xref>], ‘Calcium’ by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>], and ‘MaxChelator’ by Bers et al. [<xref ref-type="bibr" rid="CR6">6</xref>]. The distinguishing factors among these tools lie in their availability, user interface, and the stability constants utilized, with minor variations in calculation methodologies. These calculations take into account the affinity of chelators to metal ions and protons at specific temperature, ionic strength, and pH. As most stability constants are typically measured at standard conditions (e.g., 20 or 25 °C, 0.1 M ionic strength), apparent stability constants are initially computed for the user-defined experimental conditions, followed by the determination of the distribution of species in the solution. Variations in results among different calculators arise from the use of different protonation and metal-affinity stability constants. While older calculators were programmed in languages less accessible today, MaxChelator developed in JavaScript by Chris Patton in 2010 [<xref ref-type="bibr" rid="CR6">6</xref>] is readily available through modern browsers. However, the numerous calculators present in the literature do not allow the selection of constants from other sources, while some allow only manual editing of the existing constants. Therefore, development of a software that allows easy selection of the available constants and entry of user-defined constants, alongside improvements in user interface and accessibility, is expected to be a valuable advancement.</p>
    <p id="Par10">Metal chelator calculations involve multiple arithmetic operations on numbers with many decimal places, potentially introducing rounding errors, as mentioned for JavaScript-based MaxChelator [<xref ref-type="bibr" rid="CR6">6</xref>]. JavaScript implicitly converts between strings and floating-point numbers and it relies on the standard double-precision 64-bit binary format, accurate up to 15 digits for integers and 17 for decimals [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>]. This inherent limitation in precise representation of the decimals as binary can result in accumulated rounding errors and inaccuracies in computed results. In contrast, Python, a contemporary programming language that achieved high popularity in the scientific community, offers several advantages. Python’s accessibility, extensive scientific libraries and the flexibility in project integration make it an attractive choice [<xref ref-type="bibr" rid="CR9">9</xref>]. Notably, Python supports a rich variety of numeric data types (integer, float, and complex), and includes a built-in Decimals module, facilitating precise handling of the decimals [<xref ref-type="bibr" rid="CR10">10</xref>]. User-defined precision in Python yields more reliable results, particularly in scientific computations. Metal-chelator calculators could benefit from such arbitrary-precision arithmetic with the aim to minimize rounding errors.</p>
    <p id="Par11">To address these needs and concerns, we developed PyChelator web application (<ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator/">https://amrutelab.github.io/PyChelator/</ext-link>), an open source program, based on the well-established and widely used Maxchelator framework. PyChelator offers enhanced user experience and customization options. The Python code in a Google Colaboratory notebook makes the PyChelator functionalities readily available to the Python-using scientific community for further development.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par12">PyChelator web application uses JavaScript for calculations and utilizes HTML &amp; CSS for the frontend interface. In Python format, it is accessible as an interactive research notebook (.ipynb) within Google Colaboratory, where users can enter the input parameters via form fields even without coding experience. Upon initiation of the web application, the setup() method is invoked to load the selected chelators and constants, with default constants sourced from the National Institute of Standards and Technology (NIST) Database [<xref ref-type="bibr" rid="CR11">11</xref>]. A schematic representation of the flow of functions to perform the calculations is depicted in Fig. S1.</p>
  </sec>
  <sec id="Sec3">
    <title>Results and discussion</title>
    <p id="Par13">The graphical user interface (GUI) of the PyChelator web application is designed for simplicity of use and comprises three panels. In the left panel users select the calculation mode (Free or Total metal concentration), enter the values for different environmental parameters (i.e., temperature, pH, and ionic equivalence), specify the unit for concentration input, and customize the content of the final report. The top panel features the fields for users to input the concentrations of chelators and metals, and the middle panel contains the buttons to do the calculations that are appended one after the other. Finally, a download option enables users to export the results as a single Excel file. An easy-to-follow tutorial of an example calculation and manual entry of constants are included inside PyChelator, and shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>Example uses of PyChelator. <bold>A</bold> An example shows how to calculate the free calcium concentration from the total calcium in the assay buffer used in the in vitro motility assay. <bold>B</bold> The manual entry of stability constants for other metals and chelators. In this case, constants for Zinc and Calcium buffered using EDTA and EGTA were used [<xref ref-type="bibr" rid="CR11">11</xref>]</p></caption><graphic xlink:href="12859_2024_5858_Fig1_HTML" id="MO1"/></fig></p>
  </sec>
  <sec id="Sec4">
    <title>User-friendly input and structured output</title>
    <p id="Par14">PyChelator facilitates the entry of smaller concentrations of chelators and metals through a dropdown menu, enabling entry of values from molar (M) to nanomolar range (M, mM, μM, and nM). Users can utilize the top panel to input the desired values for calculations in the selected unit. Notably, all results are consistently expressed in molar units. Temperature is to be written in degrees Celsius (°C) and ionic strength as equivalence of ions (Ie = 0.5∑Ci|zi|), as explained by Smith and Miller, rather than the standard ionic strength [<xref ref-type="bibr" rid="CR12">12</xref>]). A function to calculate the ionic equivalence inside PyChelator is also included. Regarding the output, checkboxes were implemented in the “Show in report” section in the left panel, in order to introduce user control over the comprehensive parameters and the metals/ligands to be included in the report. Additionally, PyChelator includes an option for the log-transformed values of the free metal concentrations (− log<sub>10</sub>[free]), corresponding to the pX values (for example pCa for free calcium). In the top panel, a field for purity of chelators was introduced, aiming at addressing the reported significant impact of the chelator purity on calculations [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR13">13</xref>]. Results are handled in a convenient way. The subsequent calculations are dynamically appended to the middle panel upon clicking the “Calculate” button, and all results can finally be downloaded as a single Excel file. A screenshot of the PyChelator GUI, accompanied by annotations, is presented in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. Collectively, these enhancements contribute to an improved user experience for a more efficient and precise use of the calculator, compared to the pre-existing calculators.<fig id="Fig2"><label>Fig. 2</label><caption><p>Screenshot of PyChelator graphical user interface (GUI), illustrating the intuitive layout and functionality. The left panel offers the selection of the desired mode of calculation (step 1), followed by the choice of the constants to be utilized (step 2). Four different sources of constants are available. Additionally, user-defined constants can be entered. Users can specify the unit for concentration input of metal and chelators (step 3), the buffer conditions (step 4), and the parameters for inclusion in the final report (step 5). Subsequently, concentration values of chelators together with the measured or supplier-indicated purity should be specified (step 6), followed by the metal concentration (step 7). Finally, results can be calculated through the “Calculate” button and downloaded as a single Excel file (step 8)</p></caption><graphic xlink:href="12859_2024_5858_Fig2_HTML" id="MO2"/></fig></p>
  </sec>
  <sec id="Sec5">
    <title>A wide selection and manual input of stability constants</title>
    <p id="Par15">MaxChelator has two sources of absolute stability constants, i.e., the Chelator program by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], and NIST database [<xref ref-type="bibr" rid="CR11">11</xref>]. The user has to choose the calculator and do the calculations using one of these sources. PyChelator is a single page application where users can switch constants by the use of a dropdown menu. Additionally, there are two new constant sets added. One is sourced from Fabiato and Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR14">14</xref>–<xref ref-type="bibr" rid="CR16">16</xref>], and the other from the Calcium program by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>]. The equilibrium constants of ATP were corrected for a temperature of 20 °C, using the standard way by employing the enthalpy of reactions, as explained in Bers et al. [<xref ref-type="bibr" rid="CR6">6</xref>]. Results obtained using the four sets of stability constants were compared using buffers with varying total calcium concentration, keeping other parameters constant (pH 7.0, temperature of 20 °C, ionic equivalent (<italic>I</italic>e) of 100 mM, 2 mM ATP, 1 mM EGTA, 6 mM MgCl<sub>2</sub>) as shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. Results obtained using different stability constants show substantial differences. With a narrow range of pX values playing a significant role, as is the case in muscle physiology, where a pCa range of 5–6 is critical in muscle activation, and with results obtained using different constants, it becomes necessary to report the used set of stability constants during such calculations.<fig id="Fig3"><label>Fig. 3</label><caption><p>Comparison of PyChelator results obtained from different stability constants. <bold>A</bold> PyChelator offers the selection of stability constants from four sources, and allows the input of user-defined constants. <bold>B</bold> Calculations done in PyChelator using the four sets of stability constants, sourced from the National Institute of Standards and Technology ‘NIST’ [<xref ref-type="bibr" rid="CR11">11</xref>], ‘SPECS’ by Fabiato [<xref ref-type="bibr" rid="CR2">2</xref>], ‘Chelator’ by Schoenmakers et al. [<xref ref-type="bibr" rid="CR3">3</xref>], and ‘Calcium’ by Föhr et al. [<xref ref-type="bibr" rid="CR5">5</xref>]. Buffers composed of varying total calcium concentration and constant pH of 7.0, temperature of 20 °C, Ionic equivalence (<italic>I</italic>e) of 100 mM, 2 mM ATP, 1 mM EGTA, and 6 mM MgCl<sub>2</sub>. Results represented in a connecting-line plot show that constants sourced from NIST and Calcium software yield similar results to each other and differ from those generated using the constants from SPECS and Chelator program. Notably, the high-precision calculations performed in PyChelator Colab employing the NIST constants and arbitrary precision of 50 decimals in calculations (PyNIST), were similar to those obtained from PyChelator web application using the same constants (NIST)</p></caption><graphic xlink:href="12859_2024_5858_Fig3_HTML" id="MO3"/></fig></p>
    <p id="Par16">PyChelator further enhances user customization by allowing manual input of user-defined stability constants. This feature is accessible under the "Constants" dropdown menu and labeled "Write custom constants". Users can input their data and download it in JSON format for future use. This feature makes it possible to use PyChelator as “Any Metal Any Chelator Calculator”. Some commonly used metal-chelator pairs are included together with references under the “Stability Constants” folder in PyChelator Github repository.</p>
  </sec>
  <sec id="Sec6">
    <title>PyChelator Colab</title>
    <p id="Par17">The aforementioned features of the calculator were composed in a Google Colab Notebook. It is available in the GitHub Repository for download and as a link in the web application. PyChelator Colab offers a cloud-based interactive Python environment that lets users write and execute code in their browsers. Unlike Flask and Django, which are designed to handle server-side operations and require managing server hosting and domain registration (which can be costly), PyChelator Colab and PyChelator web applications do not require server hosting. They can be easily hosted on free platforms like GitHub Pages without the need for managing server hosting and domain registration.</p>
    <p id="Par18">The main steps to do the metal chelator calculations in this environment are summarized in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. The displayed results can be further employed by experienced users as a part of a pipeline, integrating into a larger project where other data are incorporated. PyChelator Colab is also modified to use the built-in Python Decimal module, introducing user-defined precision in the calculations, which are otherwise limited by double precision in the floating-point arithmetic of Python and JavaScript. The use of arbitrary precision arithmetic gives a higher precision in calculations. Nevertheless, the results obtained from the PyChelator web application, which utilizes JavaScript in calculations, compared to PyChelator Colab, did not show a notable difference (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B, NIST vs PyNIST). This implies that any calculations done using MaxChelator algorithms are not limited by precision issues related to the employed JavaScript language. However, although the calculated buffers may offer a good approximation with the measured values, challenges like chelator purity or pH can introduce errors even to the best calculations. Thus, it is always recommended to measure the free metal ions whenever possible [<xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR14">14</xref>]. A general comparison of the features offered by PyChelator compared to other calculator software is given in Table <xref rid="Tab1" ref-type="table">1</xref>.<fig id="Fig4"><label>Fig. 4</label><caption><p>PyChelator Colab GUI. <bold>A</bold> To run a calculation in PyChelator Colab, the user has to run the first code cell "Constants" which enables the dropdown for selection/entry of constants, followed by saving the options through clicking "Save Values". The user can download the constants from "Files" in the left panel. <bold>B</bold> Next, the user has to run the code in the following “Calculate Metal-chelator” section, to input values related to the buffer and to select the output parameters to be included in the report. A field for decimal precision is included to specify the level of precision in decimal places, employing arbitrary precision provided by the Decimals module of Python</p></caption><graphic xlink:href="12859_2024_5858_Fig4_HTML" id="MO4"/></fig><table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of PyChelator to other software</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">Programming language</th><th align="left">Constants</th><th align="left">Input</th><th align="left">Output</th><th align="left">Refs</th></tr></thead><tbody><tr><td align="left">PyChelator (2024)</td><td align="left">JavaScript, Python</td><td align="left">NIST, Schoenmakers, Fabiato, Chelator, User-defined entry</td><td align="left">M, mM, μM, nM</td><td align="left">Choose parameters, Append, Excel</td><td align="left">This work</td></tr><tr><td align="left">MaxChelator (2010)</td><td align="left">JavaScript</td><td align="left">NIST, Schoenmakers, Editable constants file</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR6">6</xref>]</td></tr><tr><td align="left">Calcium (1993)</td><td align="left">N/A</td><td align="left">Martell and Smith, Editable constants</td><td align="left">mM</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR5">5</xref>]</td></tr><tr><td align="left">Chelator (1992)</td><td align="left">Turbo Pascal</td><td align="left">Schoenmakers, Editable constants file</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR3">3</xref>]</td></tr><tr><td align="left">SPECS (1988)</td><td align="left">Fortran</td><td align="left">Fabiato and Fabiato, Editable using WordStar</td><td align="left">M</td><td align="left">One at a time</td><td align="left">[<xref ref-type="bibr" rid="CR2">2</xref>]</td></tr></tbody></table></table-wrap></p>
  </sec>
  <sec id="Sec7">
    <title>Limitations</title>
    <p id="Par19">PyChelator validates the input values for temperature (0–40 °C), ionic equivalence (0–500 mM), and pH (0–14). No validation could be introduced to the entry of parameters for the manual entry of constants. PyChelator was prepared to facilitate improvements in these calculations. Future versions may incorporate features such as the possibility to use it for multiple metal-chelator calculations, generation of buffer series with a given composition, calculation of the composition of all complexes in the solution, and downloadable stability constants calculations under different buffer conditions.</p>
  </sec>
  <sec id="Sec8">
    <title>Conclusions</title>
    <p id="Par20">The PyChelator delivers a significant improvement over currently available web applications by offering a user-friendly metal chelator calculator that allows, among others, selection out of four sets of stability constants, input in smaller units, the option to specify user-defined constants, and the convenient ability to download results as a single Excel file. The Python-based PyChelator Colab offers easy customization in the modern programming language with user-defined precision in decimal calculations. Overall, this study not only expands accessibility to metal-chelator calculations but also paves the way for further advancements.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec9">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2024_5858_MOESM1_ESM.pdf">
            <caption>
              <p>Supplementary Material 1.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>NIST</term>
        <def>
          <p id="Par4">National institute of standards and technology</p>
        </def>
      </def-item>
      <def-item>
        <term>EGTA</term>
        <def>
          <p id="Par5">Ethylene glycol bis(b-aminoethylether)-N,N,N0,N0-tetraacetic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>EDTA</term>
        <def>
          <p id="Par6">Ethylenediaminetetraacetic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>ATP</term>
        <def>
          <p id="Par7">Adenosine triphosphate</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>Emrulla Spahiu and Esra Kastrati have contributed equally to this work.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Chris Patton for his kind support and feedback during the preparation of the software. We thank Ante Radocaj for his critical comments on the manuscript.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>ES and MA conceived the project. ES and EK developed the software. ES, EK and MA wrote and edited the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL. This work was partly supported by a grant from Deutsche Forschungsgemeinschaft (DFG) to MA (AM/507/2-1).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: PyChelator. Project home page: <ext-link ext-link-type="uri" xlink:href="https://amrutelab.github.io/PyChelator/">https://amrutelab.github.io/PyChelator/</ext-link>. Source code: <ext-link ext-link-type="uri" xlink:href="https://github.com/AmruteLab/PyChelator">https://github.com/AmruteLab/PyChelator</ext-link>. Archived version: 10.5281/zenodo.10674753. Operating system(s): Platform independent. Programming language: Python, JavaScript. Other requirements: None. License: GNU GPL v2. Any restrictions to use by non-academics: E.g., license needed.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1">
      <title>Ethics approval and consent to participate</title>
      <p id="Par21">Not Applicable.</p>
    </notes>
    <notes id="FPar2">
      <title>Consent for publication</title>
      <p id="Par22">Not applicable.</p>
    </notes>
    <notes id="FPar3" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par23">Authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgan</surname>
            <given-names>GT</given-names>
          </name>
          <name>
            <surname>Drew</surname>
            <given-names>HDK</given-names>
          </name>
        </person-group>
        <article-title>CLXII.—Researches on residual affinity and co-ordination. Part II. Acetylacetones of selenium and tellurium</article-title>
        <source>J Chem Soc Trans</source>
        <year>1920</year>
        <volume>117</volume>
        <fpage>1456</fpage>
        <lpage>1465</lpage>
        <pub-id pub-id-type="doi">10.1039/CT9201701456</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Fabiato A. [31] Computer programs for calculating total from specified free or free from specified total ionic concentrations in aqueous solutions containing multiple metals and ligands. In: Methods in enzymology. Academic press; 1988. pp. 378–417.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Schoenmakers TJM, Visser GJ, Flik G, Theuvenet APR. CHELATOR: an improved method for computing metal ion concentrations in physiological solutions; 1992.</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brooks</surname>
            <given-names>SPJ</given-names>
          </name>
          <name>
            <surname>Storey</surname>
            <given-names>KB</given-names>
          </name>
        </person-group>
        <article-title>Bound and determined: a computer program for making buffers of defined ion concentrations</article-title>
        <source>Anal Biochem</source>
        <year>1992</year>
        <volume>201</volume>
        <fpage>119</fpage>
        <lpage>126</lpage>
        <pub-id pub-id-type="doi">10.1016/0003-2697(92)90183-8</pub-id>
        <?supplied-pmid 1621949?>
        <pub-id pub-id-type="pmid">1621949</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Föhr KJ, Warchol W, Gratzl M. Calculation and control of free divalent cations in solutions used for membrane fusion studies. In: Methods in enzymology. Academic Press; 1993. pp. 149–57.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bers</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Patton</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Nuccitelli</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A practical guide to the preparation of Ca(<sup>2+</sup>) buffers</article-title>
        <source>Methods Cell Biol</source>
        <year>2010</year>
        <volume>99</volume>
        <fpage>1</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/B978-0-12-374841-6.00001-3</pub-id>
        <?supplied-pmid 21035681?>
        <pub-id pub-id-type="pmid">21035681</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">JavaScript Numbers. <ext-link ext-link-type="uri" xlink:href="https://www.w3schools.com/js/js_numbers.asp">https://www.w3schools.com/js/js_numbers.asp</ext-link>. Accessed 28 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">The Floating-Point Guide—Floating-point cheat sheet for JavaScript. <ext-link ext-link-type="uri" xlink:href="https://floating-point-gui.de/languages/javascript/">https://floating-point-gui.de/languages/javascript/</ext-link>. Accessed 12 Mar 2024.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ekmekci</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>McAnany</surname>
            <given-names>CE</given-names>
          </name>
          <name>
            <surname>Mura</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>An introduction to programming for bioscientists: a python-based primer</article-title>
        <source>PLOS Comput Biol</source>
        <year>2016</year>
        <volume>12</volume>
        <fpage>e1004867</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004867</pub-id>
        <?supplied-pmid 27271528?>
        <pub-id pub-id-type="pmid">27271528</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Decimal—decimal fixed point and floating point arithmetic. Python documentation. <ext-link ext-link-type="uri" xlink:href="https://docs.python.org/3/library/decimal.html">https://docs.python.org/3/library/decimal.html</ext-link>. Accessed 28 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Smith RM, Martell A, Motekaitis R, Smith R, Motekaitis R. NIST critically selected stability constants of metal complexes database; 2004.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Potentiometric measurements of stoichiometric and apparent affinity constants of EGTA for protons and divalent ions including calcium</article-title>
        <source>Biochim Biophys Acta BBA Gen Subj</source>
        <year>1985</year>
        <volume>839</volume>
        <issue>3</issue>
        <fpage>287</fpage>
        <lpage>299</lpage>
        <pub-id pub-id-type="doi">10.1016/0304-4165(85)90011-X</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGuigan</surname>
            <given-names>JAS</given-names>
          </name>
          <name>
            <surname>Kay</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Elder</surname>
            <given-names>HY</given-names>
          </name>
        </person-group>
        <article-title>Ionized concentrations in Ca<sup>2+</sup> and Mg<sup>2+</sup> buffers must be measured, not calculated</article-title>
        <source>Exp Physiol</source>
        <year>2020</year>
        <volume>105</volume>
        <fpage>427</fpage>
        <lpage>437</lpage>
        <pub-id pub-id-type="doi">10.1113/EP088345</pub-id>
        <?supplied-pmid 31758871?>
        <pub-id pub-id-type="pmid">31758871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McGuigan</surname>
            <given-names>JAS</given-names>
          </name>
          <name>
            <surname>Kay</surname>
            <given-names>JW</given-names>
          </name>
          <name>
            <surname>Elder</surname>
            <given-names>HY</given-names>
          </name>
        </person-group>
        <article-title>Ionised concentrations in calcium and magnesium buffers: standards and precise measurement are mandatory</article-title>
        <source>Progress Biophys Mol Biol</source>
        <year>2017</year>
        <volume>126</volume>
        <fpage>48</fpage>
        <lpage>64</lpage>
        <pub-id pub-id-type="doi">10.1016/j.pbiomolbio.2017.03.001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fujishiro</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Kawata</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>A program for calculating the total concentrations of ligands and metals at any temperature, ionic strength and pH for solutions with a controlled metal concentration</article-title>
        <source>Comput Biol Med</source>
        <year>1995</year>
        <volume>25</volume>
        <fpage>61</fpage>
        <lpage>80</lpage>
        <pub-id pub-id-type="doi">10.1016/0010-4825(95)98886-I</pub-id>
        <?supplied-pmid 7600762?>
        <pub-id pub-id-type="pmid">7600762</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fabiato</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fabiato</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Calculator programs for computing the composition of the solutions containing multiple metals and ligands used for experiments in skinned muscle cells</article-title>
        <source>J Physiol</source>
        <year>1979</year>
        <volume>75</volume>
        <fpage>463</fpage>
        <lpage>505</lpage>
      </element-citation>
    </ref>
  </ref-list>
</back>

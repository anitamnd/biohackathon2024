<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9881153</article-id>
    <article-id pub-id-type="pmid">36401871</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkac1029</article-id>
    <article-id pub-id-type="publisher-id">gkac1029</article-id>
    <article-categories>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00010</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>Narese/24</subject>
      </subj-group>
      <subj-group subj-group-type="heading">
        <subject>Methods Online</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>LazySampling and LinearSampling: fast stochastic sampling of RNA secondary structure with applications to SARS-CoV-2</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-5877-2167</contrib-id>
        <name>
          <surname>Zhang</surname>
          <given-names>He</given-names>
        </name>
        <aff><institution>Baidu Research</institution>, Sunnyvale, CA, <country country="US">USA</country></aff>
        <aff><institution>School of Electrical Engineering &amp; Computer Science, Oregon State</institution> University, Corvallis, OR, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Sizhen</given-names>
        </name>
        <aff><institution>School of Electrical Engineering &amp; Computer Science, Oregon State</institution> University, Corvallis, OR, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhang</surname>
          <given-names>Liang</given-names>
        </name>
        <aff><institution>School of Electrical Engineering &amp; Computer Science, Oregon State</institution> University, Corvallis, OR, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2907-6557</contrib-id>
        <name>
          <surname>Mathews</surname>
          <given-names>David H</given-names>
        </name>
        <aff><institution>Department of Biochemistry &amp; Biophysics, University of Rochester Medical Center</institution>, Rochester, NY 14642, <country country="US">USA</country></aff>
        <aff><institution>Center for RNA Biology, University of Rochester Medical Center</institution>, Rochester, NY 14642, <country country="US">USA</country></aff>
        <aff><institution>Department of Biostatistics &amp; Computational Biology, University of Rochester Medical Center</institution>, Rochester, NY 14642, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Huang</surname>
          <given-names>Liang</given-names>
        </name>
        <!--liang.huang.sh@gmail.com-->
        <aff><institution>School of Electrical Engineering &amp; Computer Science, Oregon State</institution> University, Corvallis, OR, <country country="US">USA</country></aff>
        <xref rid="COR1" ref-type="corresp"/>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR1">To whom correspondence should be addressed. <email>liang.huang.sh@gmail.com</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>25</day>
      <month>1</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-11-18">
      <day>18</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>18</day>
      <month>11</month>
      <year>2022</year>
    </pub-date>
    <volume>51</volume>
    <issue>2</issue>
    <fpage>e7</fpage>
    <lpage>e7</lpage>
    <history>
      <date date-type="accepted">
        <day>21</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>22</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="received">
        <day>27</day>
        <month>5</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press on behalf of Nucleic Acids Research.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution-NonCommercial License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">https://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact <email>journals.permissions@oup.com</email></license-p>
      </license>
    </permissions>
    <self-uri xlink:href="gkac1029.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Many RNAs fold into multiple structures at equilibrium, and there is a need to sample these structures according to their probabilities in the ensemble. The conventional sampling algorithm suffers from two limitations: (i) the sampling phase is slow due to many repeated calculations; and (ii) the end-to-end runtime scales cubically with the sequence length. These issues make it difficult to be applied to long RNAs, such as the full genomes of severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2). To address these problems, we devise a new sampling algorithm, LazySampling, which eliminates redundant work via on-demand caching. Based on LazySampling, we further derive LinearSampling, an end-to-end linear time sampling algorithm. Benchmarking on nine diverse RNA families, the sampled structures from LinearSampling correlate better with the well-established secondary structures than Vienna RNAsubopt and RNAplfold. More importantly, LinearSampling is orders of magnitude faster than standard tools, being 428× faster (72 s versus 8.6 h) than RNAsubopt on the full genome of SARS-CoV-2 (29 903 nt). The resulting sample landscape correlates well with the experimentally guided secondary structure models, and is closer to the alternative conformations revealed by experimentally driven analysis. Finally, LinearSampling finds 23 regions of 15 nt with high accessibilities in the SARS-CoV-2 genome, which are potential targets for COVID-19 diagnostics and therapeutics.</p>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>R35 GM145283</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Science Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/100000001</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>IIS-1817231</award-id>
        <award-id>IIS-2009071</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="13"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="SEC1">
    <title>INTRODUCTION</title>
    <p>RNAs are involved in many cellular processes, including expressing genes, guiding RNA modification (<xref rid="B1" ref-type="bibr">1</xref>), catalyzing reactions (<xref rid="B2" ref-type="bibr">2</xref>) and regulating diseases (<xref rid="B3" ref-type="bibr">3</xref>). Knowing the spatial structure of RNAs is one of the keys to better understand these biological processes and further harness RNAs for diagnostics and therapeutics, but determining the 3D structures is hard and expensive (<xref rid="B4" ref-type="bibr">4</xref>). Alternatively, RNA secondary structure is helpful for revealing the structure–function relationship, and can be used for inferring the 3D structure (<xref rid="B5" ref-type="bibr">5</xref>,<xref rid="B6" ref-type="bibr">6</xref>). Therefore, being able to rapidly and accurately predict RNA secondary structures is desired.</p>
    <p>Commonly, the minimum free energy (MFE) structure is predicted (<xref rid="B8" ref-type="bibr">8</xref>,<xref rid="B9" ref-type="bibr">9</xref>), but these methods do not capture the fact that many RNAs fold into multiple structures at equilibrium (<xref rid="B10" ref-type="bibr">10</xref>,<xref rid="B11" ref-type="bibr">11</xref>). To address this issue, Ding and Lawrence (<xref rid="B12" ref-type="bibr">12</xref>) pioneered <italic toggle="yes">stochastic sampling</italic>, which samples secondary structures according to their probabilities in the ensemble (see Figure <xref rid="F1" ref-type="fig">1</xref>). These samples are not only informative for describing or probing the ensemble, but are also useful for downstream applications. First, we can model the multiple conformations based on the sampled structures, and further cluster them into representative structures (<xref rid="B7" ref-type="bibr">7</xref>,<xref rid="B13" ref-type="bibr">13</xref>). For example, several studies used sampled structures, together with SHAPE mapping data, to model and cluster the conformations of the frameshifting region in severe acute respiratory syndrome coronavirus 2 (SARS-CoV-2) (<xref rid="B14" ref-type="bibr">14</xref>,<xref rid="B15" ref-type="bibr">15</xref>). Also, we can use a set of samples to estimate the end-to-end distance of an RNA (<xref rid="B16" ref-type="bibr">16</xref>). In addition, we often want to predict the probability that a region is completely unpaired, known as the <italic toggle="yes">accessibility</italic> of that region, which plays an important role in small interfering RNA (siRNA) drug design (<xref rid="B17" ref-type="bibr">17–19</xref>). Accessibility can be easily estimated from the fraction of sampled structures for which the region is completely unpaired (see Figure <xref rid="F1" ref-type="fig">1</xref>).</p>
    <fig position="float" id="F1">
      <label>Figure 1.</label>
      <caption>
        <p>Overview and applications of stochastic sampling of RNA secondary structure. The FMN riboswitch is used as an example, and their centroid structures in the absence of the ligand are shown (<xref rid="B7" ref-type="bibr">7</xref>).</p>
      </caption>
      <graphic xlink:href="gkac1029fig1" position="float"/>
    </fig>
    <p>However, widely used as it is, the standard sampling algorithm suffers from two main limitations. First, the sampling phase is slow due to many repeated and redundant calculations, wasting a substantial amount of time especially for large sample sizes. Note that our notion of ‘redundant’ is unrelated to the one in ‘non-redundant sampling’ (<xref rid="B20" ref-type="bibr">20</xref>), which is a variant to output a collection of unique structures, while standard sampling can sample the same structure more than once. Second, its end-to-end runtime scales cubically with sequence length as it has to calculate the partition function using the standard McCaskill algorithm (<xref rid="B21" ref-type="bibr">21</xref>) <italic toggle="yes">before</italic> sampling. Therefore, both the sampling and partition function phases scale <italic toggle="yes">superlinearly</italic> with the sequence length. This makes it difficult to be applied to long sequences, such as the full-genome of SARS-CoV-2.</p>
    <p>To alleviate these issues, we present three innovations, each built upon the previous one, that together linearize both the sampling and partition function phases to achieve end-to-end linear runtime. The first idea, <italic toggle="yes">Full-Saving Sampling</italic>, eliminates all redundant calculations in the sampling phase by saving all computations during the partition-function phase. The second idea, <italic toggle="yes">LazySampling</italic>, is an even smarter version that only saves computations that are needed during the sampling phase on the fly, greatly reducing the amount of runtime and memory used for saving. These two ideas are based on the observation that node visits are highly unbalanced: most nodes are never visited while a small fraction of ‘important’ nodes are visited repeatedly. Finally, we further improve LazySampling by replacing its <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>)-time partition function calculation by our recently proposed <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic>)-time approximate algorithm, LinearPartition (<xref rid="B22" ref-type="bibr">22</xref>). This combination gives rise to <italic toggle="yes">LinearSampling</italic>, an end-to-end linear time sampling algorithm that is orders of magnitude faster than the standard one (see Figure <xref rid="F6" ref-type="fig">6</xref> for speedup details).</p>
    <fig position="float" id="F2">
      <label>Figure 2.</label>
      <caption>
        <p><bold>Top</bold>: the hypergraph framework and the bottom-up partition function calculation. All nodes and hyperedges are shown. <bold>Bottom</bold>: two sampling instances given the partition function above. The sampling is just top-down stochastic backtracing, i.e. at each visited node, we randomly choose one of its incoming hyperedges, traverse that hyperedge down and recursively visit its children nodes.</p>
      </caption>
      <graphic xlink:href="gkac1029fig2" position="float"/>
    </fig>
    <fig position="float" id="F3">
      <label>Figure 3.</label>
      <caption>
        <p>Illustrations of the three sampling algorithms: classical Non-Saving Sampling, our Full-Saving Sampling and our LazySampling. For each sample, the newly recovered hyperedges are shown with shadow, and the bold hyperedges are the chosen derivation in stochastic backtracing (pointing downwards). Non-Saving Sampling needs to repeatedly recover hyperedges in each sample (most of the node visits are non-unique; see α<sub><italic toggle="yes">k</italic></sub>), whereas Full-Saving Sampling does not need to recover any hyperedge thanks to storing all of them during the bottom-up phase, but rather oversaves (only less than half of the nodes are visited during the first five samples; see β<sub><italic toggle="yes">k</italic></sub>; in fact, six nodes <inline-formula><tex-math id="M0001" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\{ {\rm {\bf x}}_{2,5}, {\rm {\bf x}}_{3,4}, {\rm {\bf x}}_{3,5}, {\rm {\bf x}}_{4,5}, {\rm {\bf x}}_{5,5}, {\rm {\bf x}}_{4,4} \}$\end{document}</tex-math></inline-formula> are <italic toggle="yes">never</italic> visited even when <italic toggle="yes">k</italic> → ∞ as they are not reachable from the goal node <inline-formula><tex-math id="M0001a" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{1,5}$\end{document}</tex-math></inline-formula>). LazySampling is a smart hybrid between the two, using on-demand caching, thus saving only a small fraction of hyperedges.</p>
      </caption>
      <graphic xlink:href="gkac1029fig3" position="float"/>
    </fig>
    <fig position="float" id="F4">
      <label>Figure 4.</label>
      <caption>
        <p>Runtime and memory comparisons against sequence length on the RNAcentral dataset (cut at 4000 nt) under exact partition function. The sample size is 50 000. (<bold>A–C</bold>) Partition function, sampling-only and end-to-end runtime. (<bold>D</bold>) Memory usage.</p>
      </caption>
      <graphic xlink:href="gkac1029fig4" position="float"/>
    </fig>
    <fig position="float" id="F5">
      <label>Figure 5.</label>
      <caption>
        <p>In practice, most node visits are repeated, and only a small portion of all nodes are visited. (<bold>A</bold>) Unique visit ratio α<sub><italic toggle="yes">k</italic></sub>. (<bold>B</bold>) visited ratio β<sub><italic toggle="yes">k</italic></sub>. Note that β<sub><italic toggle="yes">k</italic></sub> is higher in LinearSampling than in RNAsubopt, mainly because the denominator scales quadratically with sequence length <italic toggle="yes">n</italic> in RNAsubopt, while it scales linearly in LinearSampling; see Table <xref rid="tbl1" ref-type="table">1</xref> for the analysis of partition function space complexity (which is related to the number of all nodes in the hypergraph) of different systems. Here <italic toggle="yes">n</italic> = 3048 nt. <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S10</xref> demonstrates the trend with sequence length, and <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S11</xref> shows that most of the visits are concentrated on a few nodes.</p>
      </caption>
      <graphic xlink:href="gkac1029fig5" position="float"/>
    </fig>
    <fig position="float" id="F6">
      <label>Figure 6.</label>
      <caption>
        <p>Runtime and memory usage between RNAsubopt, its local mode (span = 70) and LinearSampling on the RNAcentral dataset and SARS-CoV-2 (sample size 50 000). (<bold>A</bold>) End-to-end runtime. (<bold>B</bold>) Sampling-only runtime. (<bold>C</bold>) Memory usage. The large filled triangles and circles around <italic toggle="yes">n</italic> = 30 000 represent SARS-CoV-2 sequences, and the open triangles are the sequences that RNAsubopt overflows. Note that the sampling-only time of LinearSampling is already the majority of its end-to-end time on SARS-CoV-2 (64.6 out of 123.4 s). See <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S7</xref> for the comparison within 10 000 nt.</p>
      </caption>
      <graphic xlink:href="gkac1029fig6" position="float"/>
    </fig>
    <p>More importantly, in order to fight current and future pandemics, it is of great value to study the SARS-CoV-2 genome structure and find the regions with high accessibilities, which can be potentially used for coronavirus disease (COVID) diagnostics and therapeutics. However, the conventional tools, including the traditional sampling tools, and other methods to estimate accessibility, e.g. constrained partition function (forcing each region of interest to be fully unpaired, and computing the fraction of the resulting constrained partition function over the global one) and direct computation (<xref rid="B23" ref-type="bibr">23</xref>,<xref rid="B24" ref-type="bibr">24</xref>), all run in at least <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>) time and are too slow on such long sequences with the consideration of global, long-range base pairs. In contrast, LinearSampling can easily scale up to the whole SARS-CoV-2 genomes without local window constraints, and sample 10 000 structures in only 72 s, achieving 428× speedup (72 s versus 8.6 h) compared with RNAsubopt, a widely used sampling tool in the ViennaRNA package (<xref rid="B25" ref-type="bibr">25</xref>). We confirm that LinearSampling-derived accessibilities correlate well with the experimentally guided structures (<xref rid="B14" ref-type="bibr">14</xref>), resulting in 23 regions of 15 nt with high accessibilities, which are potential targets of diagnostics and drug design.</p>
    <p>In addition, the lazy saving strategy can also be applied to other stochastic sampling tasks, such as the Gibbs centroid sampling (<xref rid="B26" ref-type="bibr">26</xref>) and structural alignment sampling (<xref rid="B27" ref-type="bibr">27</xref>). Also, LinearSampling can load partition function (hypergraph nodes) dumped from LinearTurboFold (<xref rid="B28" ref-type="bibr">28</xref>), a tool for simultaneous folding and alignment of RNA homologs, which integrates homologous information into the sampled structures to identify conserved and accessible regions.</p>
  </sec>
  <sec sec-type="materials|methods" id="SEC2">
    <title>MATERIALS AND METHODS</title>
    <p>To facilitate our discussion on sampling, we first formulate the search space of RNA folding using the framework of (directed) hypergraphs (<xref rid="B29" ref-type="bibr">29</xref>,<xref rid="B30" ref-type="bibr">30</xref>) which have been used for both the closely related problem of context-free parsing (<xref rid="B31" ref-type="bibr">31</xref>) and RNA folding itself (<xref rid="B30" ref-type="bibr">30</xref>,<xref rid="B32" ref-type="bibr">32</xref>). This formulation makes it possible to present the standard sampling algorithm as top-down stochastic backtracing that is mirror-symmetric to the bottom-up partition function computation. Then we present our two novel sampling algorithms which eliminate redundant computations by saving and on-demand caching, respectively. Finally, we present our LinearSampling algorithm which is the first sampling algorithm to run in end-to-end linear time.</p>
    <sec id="SEC2-1">
      <title>Hypergraph framework</title>
      <p>For RNA sequence <inline-formula><tex-math id="M0002" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbf {x} = x_1 ...\, x_n$\end{document}</tex-math></inline-formula>, we formalize its folding space as a <bold>hypergraph</bold> <inline-formula><tex-math id="M0003" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$H=\langle V, E \rangle$\end{document}</tex-math></inline-formula>. Each <bold>node</bold> <inline-formula><tex-math id="M0004" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula> is a subsequence (i.e. span) <inline-formula><tex-math id="M0005" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{i.j}=x_i...x_j$\end{document}</tex-math></inline-formula>, and each <bold>hyperedge</bold> <inline-formula><tex-math id="M0006" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$e$\end{document}</tex-math></inline-formula> is a pair <inline-formula><tex-math id="M0007" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\langle node(e), subs(e) \rangle$\end{document}</tex-math></inline-formula> representing a decomposition of <inline-formula><tex-math id="M0008" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$node(e)$\end{document}</tex-math></inline-formula> into a list of children nodes <inline-formula><tex-math id="M0009" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathit {subs} (e)$\end{document}</tex-math></inline-formula>, e.g. <inline-formula><tex-math id="M00010" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\langle {\rm {\bf x}}_{i,j}, [{\rm {\bf x}}_{i,k}, {\rm {\bf x}}_{k+1,j}] \rangle$\end{document}</tex-math></inline-formula> divides one span into two smaller ones. For each node <inline-formula><tex-math id="M00011" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>, we define <inline-formula><tex-math id="M00012" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\small{InEdges}}(v)\stackrel{\Delta}{=}\{ e \ | \ node(e)=v \}$\end{document}</tex-math></inline-formula> to be its set of <bold>incoming hyperedges</bold>, i.e. all decompositions of <inline-formula><tex-math id="M00013" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>.</p>
      <p>Hyperedges with one and two child(ren) nodes are called <italic toggle="yes">unary</italic> and <italic toggle="yes">binary</italic> hyperedges, respectively. In order to recursively assemble substructures to form the global structure, each hyperedge <inline-formula><tex-math id="M00014" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$e=\langle v, subs \rangle$\end{document}</tex-math></inline-formula> is associated with a <bold>combination</bold> <bold>function</bold><inline-formula><tex-math id="M00015" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$f(e): \mathbb {S}^{|\mathit {subs} (e)|} \mapsto \mathbb {S}$\end{document}</tex-math></inline-formula> that assembles substructures from <inline-formula><tex-math id="M00016" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$subs$\end{document}</tex-math></inline-formula> into a structure for <inline-formula><tex-math id="M00017" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula> (here <inline-formula><tex-math id="M00018" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbb {S}$\end{document}</tex-math></inline-formula> is the set of dot–bracket strings that represent RNA secondary structure). Each hyperedge <inline-formula><tex-math id="M00019" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$e$\end{document}</tex-math></inline-formula> is associated with an (extra) <bold>energy term</bold> <inline-formula><tex-math id="M00020" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$w(e) \in \mathbb {R}$\end{document}</tex-math></inline-formula>.</p>
      <p>We take the classical Nussinov algorithm (<xref rid="B8" ref-type="bibr">8</xref>) as a concrete example, which scores secondary structures by counting the number of base pairs. The nodes include singleton spans <inline-formula><tex-math id="M00021" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{i,i}$\end{document}</tex-math></inline-formula> that are terminals, and decomposable spans <inline-formula><tex-math id="M00022" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{i,j} \ (1\leq i \,&lt;\, j \leq n)$\end{document}</tex-math></inline-formula> that can be decomposed in three ways depending on base <italic toggle="yes">x</italic><sub><italic toggle="yes">j</italic></sub>:</p>
      <list list-type="bullet">
        <list-item>
          <p><italic toggle="yes">x</italic><sub><italic toggle="yes">j</italic></sub> is unpaired, which corresponds to a unary hyperedge <inline-formula><tex-math id="M00023" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\langle {\rm {\bf x}}_{i,j}, [{\rm {\bf x}}_{i,j-1}] \rangle$\end{document}</tex-math></inline-formula> with the combination function <inline-formula><tex-math id="M00024" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$f_1(a)=``a {{\rm{.}}}$\end{document}</tex-math></inline-formula>’’ and energy term 0:</p>
          <p>
            <graphic xlink:href="gkac1029figeqn1.jpg" position="float"/>
          </p>
        </list-item>
        <list-item>
          <p><italic toggle="yes">x</italic><sub><italic toggle="yes">j</italic></sub> pairs with <italic toggle="yes">x</italic><sub><italic toggle="yes">i</italic></sub> (if allowed), denoted by a unary hyperedge <inline-formula><tex-math id="M00026" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\langle {\rm {\bf x}}_{i,j}, [{\rm {\bf x}}_{i+1,j-1}] \rangle$\end{document}</tex-math></inline-formula> with combination function <inline-formula><tex-math id="M00027" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$f^\prime_{1}(a) = ``{\rm{(}} a {\rm{)}}$\end{document}</tex-math></inline-formula>’’ and energy term −1:</p>
          <p>
            <graphic xlink:href="gkac1029figeqn2.jpg" position="float"/>
          </p>
        </list-item>
        <list-item>
          <p><italic toggle="yes">x</italic><sub><italic toggle="yes">j</italic></sub> pairs with some <italic toggle="yes">x</italic><sub><italic toggle="yes">k</italic></sub>   (<italic toggle="yes">i</italic> &lt; <italic toggle="yes">k</italic> &lt; <italic toggle="yes">j</italic>), dividing <inline-formula><tex-math id="M00029" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{i,j}$\end{document}</tex-math></inline-formula> into two smaller spans <inline-formula><tex-math id="M00030" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{i,k-1}$\end{document}</tex-math></inline-formula> and <inline-formula><tex-math id="M00031" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{k+1,j-1}$\end{document}</tex-math></inline-formula>:</p>
          <p>
            <graphic xlink:href="gkac1029figeqn3.jpg" position="float"/>
          </p>
          <p>These bifurcations correspond to a set of binary hyperedges with combination function <inline-formula><tex-math id="M00033" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$f_2(a,b)=``a {\text{(}} b {\text{)}}$\end{document}</tex-math></inline-formula>’’ and energy term −1:<disp-formula><tex-math id="M00034" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{eqnarray*} {\small Binary} ({\mathbf {x} _{{i,j}}}) = \displaystyle \!\!\!\!\!\! \bigcup _{\substack{i \,&lt;\, k \,&lt;\, j \\ \, (x_k, x_j) \text{ pair}}} \!\!\!\!\!\! \lbrace \langle {{\mathbf {x} _{{i,j}}}, [{\mathbf {x} _{{i, k-1}}}, \; {\mathbf {x} _{{k+1, j-1}}}]} \rangle \rbrace \end{eqnarray*}$$\end{document}</tex-math></disp-formula></p>
        </list-item>
      </list>
      <p>See Figure <xref rid="F2" ref-type="fig">2</xref> for an illustration.</p>
      <p>This framework can easily extend to other folding algorithms such as Zuker (<xref rid="B9" ref-type="bibr">9</xref>) and LinearFold (<xref rid="B33" ref-type="bibr">33</xref>), where nodes are ‘<italic toggle="yes">labeled spans</italic>’ such as <italic toggle="yes">C</italic><sub><italic toggle="yes">i</italic>, <italic toggle="yes">j</italic></sub> for substructures over <inline-formula><tex-math id="M00035" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${\rm {\bf x}}_{i,j}$\end{document}</tex-math></inline-formula> with (<italic toggle="yes">x</italic><sub><italic toggle="yes">i</italic></sub>, <italic toggle="yes">x</italic><sub><italic toggle="yes">j</italic></sub>) paired, <italic toggle="yes">M</italic><sub><italic toggle="yes">i</italic>, <italic toggle="yes">j</italic></sub> for multiloops over <inline-formula><tex-math id="M00036" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbf {x} _{{i,j}}$\end{document}</tex-math></inline-formula>, etc.</p>
    </sec>
    <sec id="SEC2-2">
      <title>Classical sampling algorithm under a hypergraph framework</title>
      <p>All sampling algorithms consist of the (bottom-up) partition function calculation phase and the (top-down) stochastic backtracing phase which is mirror-symmetric to the former.</p>
      <sec id="SEC2-2-1">
        <title>The partition function phase</title>
        <p>In this bottom-up phase, we first calculate the local partition function <italic toggle="yes">Z</italic>(<inline-formula><tex-math id="M00037" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>) of each node <inline-formula><tex-math id="M00038" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula> (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref>), summing up the contributions from each incoming hyperedge <italic toggle="yes">e</italic> (line 7), i.e. <inline-formula><tex-math id="M00039" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$Z(v) = \sum _{e\in \small {InEdges} (v)} Z(e)$\end{document}</tex-math></inline-formula>. This part takes <italic toggle="yes">O</italic>(<italic toggle="yes">E</italic>) = <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>) time as each hyperedge is traversed once and <italic toggle="yes">O</italic>(<italic toggle="yes">V</italic>) = <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>2</sup>) space as we need to store <italic toggle="yes">Z</italic>(<inline-formula><tex-math id="M00040" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>) for each node <inline-formula><tex-math id="M00041" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>. Note that the hyperedges are by default not saved, and will be recalculated on demand during the sampling phase. If we want to save all hyperedges instead, we need <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>) space; the time complexity remains <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>), but in practice the overhead for saving (line 8) is quite costly and it may run out of memory (see Figure <xref rid="F4" ref-type="fig">4</xref>).</p>
      </sec>
      <sec id="SEC2-2-2">
        <title>Classical ‘Non-Saving’ Sampling</title>
        <p>In the sampling phase, the Non-Saving Sampling algorithm (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S2</xref>) recursively and stochastically backtraces from the goal node, in the exact opposite direction to the bottom-up partition function phase (see Figures <xref rid="F2" ref-type="fig">2</xref> and <xref rid="F3" ref-type="fig">3</xref>). When visiting a node <inline-formula><tex-math id="M00042" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>, it tries to sample a hyperedge <italic toggle="yes">e</italic> from <inline-formula><tex-math id="M00043" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>’s incoming hyperedges <inline-formula><tex-math id="M00044" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}${{\small InEdges}}(v)$\end{document}</tex-math></inline-formula> according to the probability <italic toggle="yes">Z</italic>(<italic toggle="yes">e</italic>)/<italic toggle="yes">Z</italic>(<inline-formula><tex-math id="M00045" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>). This is done by first generating a random number <italic toggle="yes">p</italic> between 0 and <italic toggle="yes">Z</italic>(<inline-formula><tex-math id="M00046" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>), and then gradually recovering each incoming hyperedge <italic toggle="yes">e</italic>, accumulating its <italic toggle="yes">Z</italic>(<italic toggle="yes">e</italic>) to a running sum <italic toggle="yes">s</italic>, until <italic toggle="yes">s</italic> exceeds <italic toggle="yes">p</italic>, at which point that current hyperedge <italic toggle="yes">e</italic> is chosen as sampled. Note that this algorithm in general does <italic toggle="yes">not</italic> need to recover <italic toggle="yes">all</italic> incoming hyperedges of <inline-formula><tex-math id="M00047" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula> (see ‘partial recovery of hyperedges’ in Figure <xref rid="F3" ref-type="fig">3</xref>), though in the worst case it would. It then backtraces recursively to the corresponding subnode(s) of hyperedge <italic toggle="yes">e</italic>. See Supplementary Sec. 1.1 for the detailed complexity analysis of Full-Saving Sampling.</p>
        <p>Our presentation resembles the original Ding and Lawrence (<xref rid="B12" ref-type="bibr">12</xref>) algorithm, but is simpler and cleaner thanks to the hypergraph framework and the mirror symmetry between the bottom-up and top-down phases. In contrast, Ding and Lawrence’s recurrences for the two phases are different in nature (see figure 1 of their paper), which results in unnecessarily complicated implementations [see Vienna RNAsubopt for an example; RNAstructure’s (<xref rid="B34" ref-type="bibr">34</xref>) sampling is much closer to our non-saving version, except for being non-recursive]. Ponty (<xref rid="B35" ref-type="bibr">35</xref>) also exploits this symmetry both in theory and in simulations, but his analysis is for the special case under the simplified Nussinov model. Our work is on the full Turner model (<xref rid="B36" ref-type="bibr">36</xref>), being the first to formulate general sampling (Nussinov, Zuker, LinearFold, etc.) under a unified framework.</p>
      </sec>
    </sec>
    <sec id="SEC2-3">
      <title>Idea 1: Full-Saving Sampling</title>
      <p>One observation is that Non-Saving Sampling wastes time on recovering hyperedges during the sampling phase. First, due to the symmetry, all hyperedges recovered in the sampling phase have already been traversed during the inside phase. To make things worse, a great number of hyperedges are recovered multiple times across different samples because, whenever a node is (re-)visited, its hyperedges need to be re-recovered. This situation worsens with the sample size <italic toggle="yes">k</italic>. More formally, we define the ‘unique visit ratio’ among <italic toggle="yes">k</italic> samples,<disp-formula id="M1"><label>(1)</label><tex-math id="M00048" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} \alpha _k \stackrel{\Delta }=\frac{\#\, {\rm of\, unique\, nodes\, visited\, in}\, {k}\,{\rm samples}}{\# {\rm of\, all\, node\, visits\, in}\, {k}\,{\rm samples}} \end{equation*}$$\end{document}</tex-math></disp-formula>which we will see in Figure <xref rid="F5" ref-type="fig">5A</xref> to be extremely small, quickly approaching 0% as <italic toggle="yes">k</italic> increases, meaning most node visits are repeated ones. Actually, all hyperedges could have been saved during the inside phase, thus alleviating the need to recover hyperedges during sampling. Therefore, we devise a new algorithm, Full-Saving Sampling (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Figures S2 and S3</xref> for pseudocode). For each node <inline-formula><tex-math id="M00049" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>, for each of its incoming hyperedges <italic toggle="yes">e</italic>, we save <italic toggle="yes">Z</italic>(<italic toggle="yes">e</italic>), which is <italic toggle="yes">e</italic>’s contribution to the local partition function <italic toggle="yes">Z</italic>(<inline-formula><tex-math id="M00050" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>), once and for all. Then the sampling phase is easier, only requiring sampling a hyperedge <italic toggle="yes">e</italic> according to its relative contribution (or ‘weight’) to <inline-formula><tex-math id="M00051" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>, i.e. <italic toggle="yes">Z</italic>(<italic toggle="yes">e</italic>)/<italic toggle="yes">Z</italic>(<inline-formula><tex-math id="M00052" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>) (line 2 in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref>). See Supplementary Sec. 1.2 for the detailed complexity analysis of generating each sample.</p>
    </sec>
    <sec id="SEC2-4">
      <title>Idea 2: LazySampling = Lazy-Saving Sampling</title>
      <p>Though Full-Saving Sampling avoids all re-calculations, it costs too much more space [<italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>) versus <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>2</sup>)] and significantly more time in practice for saving the whole hypergraph. Actually, the vast majority of nodes are <italic toggle="yes">never</italic> visited during the sampling phase even for a large sample size. To quantify this, we define the ‘visited ratio’ to be:<disp-formula id="M2"><label>(2)</label><tex-math id="M00053" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} \beta _k \stackrel{\Delta }{=} \frac{{\#\ {\rm of\ unique\ nodes\ visited\ in\ {\textit k}\ samples}}}{{\#\ {\rm of\ all\ nodes\ in\ hypergraph}}} \end{equation*}$$\end{document}</tex-math></disp-formula>Our experiments in Figure <xref rid="F5" ref-type="fig">5B</xref> show that only &lt;0.5% of all nodes in the hypergraph are ever visited for 20 000 samples of a 3048 nt sequence (URS0000D5C703_9606) using Vienna RNAsubopt, so most of the saving is indeed wasted. In other words, node visits are greatly unbalanced, i.e. a small portion of nodes are repeatedly visited, while most nodes are barely visited. Based on this observation, we devise an even smarter algorithm, LazySampling, which is a hybrid between Non-Saving and Full-Saving Samplings (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S4</xref>). By ‘lazy’ we mean only recovering and saving a node <inline-formula><tex-math id="M00054" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula>’s hyperedges when needed, i.e. the first time <inline-formula><tex-math id="M00055" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$v$\end{document}</tex-math></inline-formula> is visited during the sampling phase. In this way, each hyperedge is recovered at most once, and most are not recovered at all. This version balances between space and time, and is the fastest among the three versions in most settings in practice.</p>
      <p>The complexity analysis of LazySampling is also a hybrid between the Non- and Full-Saving versions, combined together using the α<sub><italic toggle="yes">k</italic></sub> and β<sub><italic toggle="yes">k</italic></sub> ratios. We note that the sampling time of LazySampling consists of two parts: (i) the hyperedge recovery (and saving) work and (ii) the sampling (backtracing) work after relevant hyperedges are recovered. Part (i) resembles Non-Saving Sampling, but with a ratio of α<sub><italic toggle="yes">k</italic></sub>, because only a tiny fraction of node visits are unique, and hyperedge recovery is only performed at the first visit to each node. Part (ii) is identical to Full-Saving Sampling (in both cases, all needed hyperedges are already saved). Therefore, we have the following relationships among the time complexities for the sampling phase of these three versions:<disp-formula id="M3"><label>(3)</label><tex-math id="M00056" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} T^\text{S} _\text{lazy} (n, k) = \underbrace{\alpha _k {T^\text{S} _\text{non} (n, k)}}_\textit{hyperedge recovery} + \underbrace{ T^\text{S} _\text{full} (n, k)}_\textit{backtracing} \end{equation*}$$\end{document}</tex-math></disp-formula>This holds for both the worst- and best-case scenarios in Table <xref rid="tbl1" ref-type="table">1</xref>. The space complexity is easier: LazySampling saves only a fraction (β<sub><italic toggle="yes">k</italic></sub>) of all nodes in the hypergraph, thus <italic toggle="yes">O</italic>(β<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">n</italic><sup>3</sup>). See Table <xref rid="tbl1" ref-type="table">1</xref> for summary.</p>
      <table-wrap position="float" id="tbl1">
        <label>Table 1.</label>
        <caption>
          <p>Time complexities of four sampling algorithms (<italic toggle="yes">n</italic> is the sequence length, <italic toggle="yes">k</italic> is sample size, α<sub><italic toggle="yes">k</italic></sub> and β<italic toggle="yes"><sub>k</sub></italic> are the ‘unique visit’ (Eq. 1) and ‘visited’ (Eq. 2) node ratios, respectively, and <italic toggle="yes">b</italic> is beam size)</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th colspan="2" align="center" rowspan="1">Partition function</th>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <th rowspan="1" colspan="1">Sampling algorithm</th>
              <th rowspan="1" colspan="1">Time</th>
              <th rowspan="1" colspan="1">Space</th>
              <th rowspan="1" colspan="1">Sample time (worst-case)</th>
              <th rowspan="1" colspan="1">Sample time (best-case)</th>
              <th rowspan="1" colspan="1">Sample space (worst-case)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Classical Non-Saving Sampling</bold>
              </td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>2</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">kn</italic><sup>2</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">kn</italic>log <italic toggle="yes">n</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic>)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Idea 1: Full-Saving Sampling</bold>
              </td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">kn</italic>log <italic toggle="yes">n</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">kn</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic>)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Idea 2: LazySampling</bold>
              </td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>2</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(α<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">kn</italic><sup>2</sup>+ <italic toggle="yes">kn</italic>log <italic toggle="yes">n</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(α<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">kn</italic>log <italic toggle="yes">n</italic>+ <italic toggle="yes">kn</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(β<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">n</italic><sup>3</sup>)</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <bold>Idea 3: LinearSampling</bold>
              </td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">nb</italic><sup>2</sup>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(<italic toggle="yes">nb</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(α<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">knb</italic>+ <italic toggle="yes">kn</italic>log <italic toggle="yes">b</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(α<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">kn</italic>log <italic toggle="yes">b</italic>+ <italic toggle="yes">kn</italic>)</td>
              <td rowspan="1" colspan="1"><italic toggle="yes">O</italic>(β<sub><italic toggle="yes">k</italic></sub><italic toggle="yes">nb</italic><sup>2</sup>)</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="T1TFN1">
            <p>The runtime of LazySampling is a hybrid between those of the Non- and Full-Saving ones, i.e. <inline-formula><tex-math id="M00057" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$T^\text{S} _\text{lazy} = {\alpha _k {T^\text{S} _\text{non} }}({\textit hyperedge\ recovery}) + { T^\text{S} _\text{full}}(\textit{backtracing})$\end{document}</tex-math></inline-formula> (Eq. 3). LinearSampling extends LazySampling by replacing the exact partition function with LinearPartition, and achieves end-to-end linear runtime. Note that the sampled derivations are mostly balanced as the depth of derivation scales O(log <italic toggle="yes">n</italic>) in practice (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S6</xref>), therefore the complexity of the average case is close to that of the best case.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec id="SEC2-5">
      <title>Idea 3: LinearSampling = LazySampling + LinearPartition</title>
      <p>LazySampling is the most efficient among all three sampling algorithms above, but the end-to-end runtime still scales <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3</sup>) due to the partition function computation. To address this problem, we use our recently proposed linear-time approximate algorithm, LinearPartition (<xref rid="B22" ref-type="bibr">22</xref>), to replace the conventional cubic-time algorithm. It can be used with any of the three sampling algorithms and, in particular, we name the combination, ‘<italic toggle="yes">LinearPartition</italic> + <italic toggle="yes">LazySampling</italic>’, the <bold>LinearSampling</bold> algorithm as it is the fastest among all combinations and achieves end-to-end linearity.</p>
      <p><xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S5</xref> describes a simplified pseudocode using the Nussinov–Jacobson energy model. Inspired by LinearPartition, we employ a beam search to prune out nodes with the small partition function (line 11) during the inside phase. So at each position <italic toggle="yes">j</italic>, only the top <italic toggle="yes">b</italic> promising nodes ‘survive’ [i.e. <italic toggle="yes">O</italic>(<italic toggle="yes">nb</italic>) nodes survive in total]. Here the beam size <italic toggle="yes">b</italic> is a user-specified hyperparameter, and the default <italic toggle="yes">b</italic> = 100 is found to be more accurate for structure prediction than an exact search (<xref rid="B22" ref-type="bibr">22</xref>). See Supplementary Sec. 1.3 for the detailed complexity analysis of LinearSampling.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="SEC3">
    <title>RESULTS</title>
    <sec id="SEC3-1">
      <title>Efficiency and scalability</title>
      <p>We benchmark the runtime and memory usage on 36 sequences sampled from RNAcentral (<xref rid="B37" ref-type="bibr">37</xref>), ranging from 100 to 27 985 nt, which we refer to as the RNAcentral dataset; see <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref> for statistics. We use a Linux machine (CentOS 7.7.1908) with 2.30 GHz Intel Xeon E5-2695 v3 CPU and 755 GB memory, and gcc 4.8.5.</p>
      <sec id="SEC3-1-1">
        <title>Comparing Non-Saving, Full-Saving and LazySampling</title>
        <p>Figure <xref rid="F4" ref-type="fig">4</xref> compares the three sampling strategies under the exact partition function calculation. Non-Saving Sampling and LazySampling have identical partition function runtime, which are both faster than Full-Saving Sampling, benefiting from saving no hyperedges. However, for the sampling phase, Non-Saving has to repeatedly recover hyperedges, resulting in a runtime increase in sampling-only time. LazySampling avoids this cost and reduces the runtime to less than half of Non-Saving's, leading to a similar performance as Full-Saving at sampling-only time. Regarding end-to-end runtime, which combines the partition function and the sampling phases, LazySampling is the fastest and Full-Saving is the slowest. For memory usage, Full-Saving uses much more memory, while the other two are close. <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S9</xref> shows the comparisons against sample size <italic toggle="yes">k</italic>, which confirms that LazySampling is the best, especially when <italic toggle="yes">k</italic> is large.</p>
        <p>We also illustrate why LazySampling is a better strategy. Figure <xref rid="F5" ref-type="fig">5A</xref> shows the unique visit ratio, α<sub><italic toggle="yes">k</italic></sub>, is &lt;5% when <italic toggle="yes">k</italic> &gt;1000 for both RNAsubopt and LinearSampling, confirming that LazySampling is able to avoid a large number of re-calculations during the sampling phase. On the other hand, the visited ratio β<sub><italic toggle="yes">k</italic></sub> (Figure <xref rid="F5" ref-type="fig">5B</xref>) is always smaller than 0.5% and 3% for RNAsubopt and LinearSampling, respectively, and grows slower and slower as the sample size increases, suggesting that saving all hyperedges (i.e. Full-Saving) is not ideal. <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S10</xref> further confirms that both α<sub><italic toggle="yes">k</italic></sub> and β<sub><italic toggle="yes">k</italic></sub> do not increase with sequence length; therefore, this analysis applies to both short and long sequences.</p>
      </sec>
      <sec id="SEC3-1-2">
        <title>Comparing LinearSampling with Vienna RNAsubopt global and local modes</title>
        <p>We compare the efficiency and scalability between LinearSampling and Vienna RNAsubopt (version 2.4.14) in Figure <xref rid="F6" ref-type="fig">6</xref>. RNAsubopt (–<monospace>p</monospace> mode) implemented the conventional sampling algorithm based on the exact partition function, and it enables local sampling (<monospace>–maxBPspan</monospace> mode) by limiting the sequence distance between paired nucleotides. Figure <xref rid="F6" ref-type="fig">6A</xref> confirms that LinearSampling scales end-to-end linearly against sequence length <italic toggle="yes">n</italic>, and is much faster than RNAsubopt, which has an empirical runtime of <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>2.8</sup>). For 50 000 samples, LinearSampling is 208× faster (2 m versus 7 h) than RNAsubopt on the longest sequence of the RNAcentral dataset (URS0001BDA28C_9606, 27 985 nt), and 251× faster on the SARS-CoV-2 sequence (29 903 nt). Regarding sampling-only runtime, LinearSampling is &gt;3× faster. Figure <xref rid="F6" ref-type="fig">6C</xref> confirms that the memory usage of LinearSampling is also linear, but RNAsubopt requires <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>2</sup>) memory. LinearSampling uses 1 GB for SARS-CoV-2, while RNAsubopt needs 20 GB.</p>
        <p>It is surprising that RNAsubopt local mode has an empirical complexity of <italic toggle="yes">O</italic>(<italic toggle="yes">n</italic><sup>3.3</sup>) for end-to-end runtime, and is even slower than its global mode. For a 9211 nt sequence (URS00009BB84A_10090), RNAsubopt local mode, using a span of 70, takes 83.8 min, and its global mode takes 18.7 min, while LinearSampling only takes 34.9 s. Memory-wise, RNAsubopt local mode uses as much as its global mode.</p>
        <p>We also observe that RNAsubopt turns to overflow on long sequences, making it less reliable. For example, RNAsubopt overflows on four sequences in the RNAcentral dataset, shown in Figure <xref rid="F6" ref-type="fig">6</xref> with open triangles whose end-to-end and sampling-only runtime drop unreasonably. For one of them (URS00007C400D_9606, 19 071 nt), an overflow happens in the segment [5775, 12619], leading to an unpaired region longer than 6000 nt in all sampled structures. Another one (URS00009C28A8_9606, 22 158 nt) triggers an error during the sampling phase:<disp-formula><tex-math id="M00058" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} {\texttt {ERROR: backtrack failed in qm1}} \end{equation*}$$\end{document}</tex-math></disp-formula>resulting in an abnormal exit, with only a few structures generated. Though a self-adapted partition function scale (named <monospace>pf_scale</monospace>) is used in RNAsubopt, overflow is still unavoidable for some long sequences. In contrast, following LinearPartition, LinearSampling uses log-space for the partition function, which does not have overflow issues.</p>
        <p>LinearSampling benefits from both LinearPartition and LazySampling. Figure <xref rid="F7" ref-type="fig">7A</xref> investigates the runtime of Non-Saving Sampling and LazySampling under the linear partition function, and compares them with LinearPartition with sequence length up to ∼30 000 nt. We observe that the partition function phase is fast and no longer the bottleneck, while the classical Non-Saving Sampling is 5–6× slower than LinearPartition, and takes the majority of end-to-end runtime. LazySampling enjoys ∼3.5× speedup from the Non-Saving Sampling and substantially reduces the sampling runtime to roughly the same as LinearPartition’s runtime.</p>
        <fig position="float" id="F7">
          <label>Figure 7.</label>
          <caption>
            <p>LazySampling can reduce sampling phase runtime with both linear (<bold>A</bold>) and exact (<bold>B</bold>) partition function. (<bold>A</bold>) Linear partition function time (using LinearPartition), Non-Saving Sampling and LazySampling against sequence length. Here LP = LinearPartition. (<bold>B</bold>) The sampling time of RNAsubopt, Non-Saving Sampling and LazySampling under the exact partition function. The runtime of RNAsubopt from Non-Saving Sampling is reduced by ‘Boustrophedon’ optimization. See <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S8</xref> for the comparison within 10 000 nt, and <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S15</xref> for more runtime analysis regarding the ‘Boustrophedon’ method.</p>
          </caption>
          <graphic xlink:href="gkac1029fig7" position="float"/>
        </fig>
        <p>We further compare LazySampling with Non-Saving Sampling and RNAsubopt under the exact partition function. RNAsubopt uses the non-saving strategy, but adopts an optimization called the ‘Boustrophedon’ method (<xref rid="B35" ref-type="bibr">35</xref>), which makes it slightly faster than our Non-Saving Sampling. However, it is clear that LazySampling’s speedup is more significant.</p>
      </sec>
    </sec>
    <sec id="SEC3-2">
      <title>Correlation with well-established structures across diverse families</title>
      <p>We use the ArchiveII dataset (<xref rid="B34" ref-type="bibr">34</xref>,<xref rid="B38" ref-type="bibr">38</xref>) to investigate the correlation between sampled structures and the ground truth structures. This dataset contains diverse families of RNA sequences and their well-established secondary structures, and each family has a reliable source. We follow the pre-processing steps of a previous study (<xref rid="B22" ref-type="bibr">22</xref>), and obtain a subset of 2859 sequences distributed in nine families (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>).</p>
      <p>We investigate the sampled structure’s correlation with the ground truth using ‘ensemble defect’ (<xref rid="B39" ref-type="bibr">39</xref>), the expected number of incorrectly predicted nucleotides over the ensemble. It is defined as:<disp-formula><tex-math id="M00059" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{eqnarray*} \Phi (S, \mathbf {y} ^*) &amp;=&amp; \frac{1}{|S|} \sum _{\mathbf {y} \in S} d(\mathbf {y}, \mathbf {y} ^*) \nonumber \\ &amp;=&amp; |\mathbf {y} ^* | - 2\!\!\!\!\! \sum _{(i,j) \in \mathrm{pairs} (\mathbf {y} ^*)} \!\!\!\!\!\!\! p_{i,j}(S) - \!\!\!\!\!\sum _{j \in \mathrm{unpaired} (\mathbf {y} ^*)} \!\!\!\!\!q_{j}(S) \nonumber \end{eqnarray*}$$\end{document}</tex-math></disp-formula>where <inline-formula><tex-math id="M00060" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbf {y} ^*$\end{document}</tex-math></inline-formula> is the ground truth structure, and <inline-formula><tex-math id="M00061" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$d({\mathbf y}, {\mathbf y}^*)$\end{document}</tex-math></inline-formula> is the distance between <bold>y</bold> and <inline-formula><tex-math id="M00062" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbf {y} ^*$\end{document}</tex-math></inline-formula>, defined as the number of incorrectly predicted nucleotides in <inline-formula><tex-math id="M00063" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$\mathbf {y}$\end{document}</tex-math></inline-formula>. <italic toggle="yes">p</italic><sub><italic toggle="yes">i</italic>, <italic toggle="yes">j</italic></sub>(<italic toggle="yes">S</italic>) is the probability of nucleotide <italic toggle="yes">i</italic> pairing with nucleotide <italic toggle="yes">j</italic> in sample <italic toggle="yes">S</italic>, which can be easily calculated as the number of (<italic toggle="yes">i</italic>, <italic toggle="yes">j</italic>) pairs divided by sample size. Similarly, <italic toggle="yes">q</italic><sub><italic toggle="yes">j</italic></sub>(<italic toggle="yes">S</italic>) is the probability of <italic toggle="yes">j</italic> being unpaired in the sample <italic toggle="yes">S</italic>, i.e. <italic toggle="yes">q</italic><sub><italic toggle="yes">j</italic></sub>(<italic toggle="yes">S</italic>) = 1 − ∑<italic toggle="yes">p</italic><sub><italic toggle="yes">i</italic>, <italic toggle="yes">j</italic></sub>(<italic toggle="yes">S</italic>). For this database of non-coding RNAs with well-defined structures, we expect that a lower ensemble defect indicates better structure prediction accuracy.</p>
      <p>Figure <xref rid="F8" ref-type="fig">8A</xref> shows the ensemble defect differences between LinearSampling and RNAsubopt on each family and overall. Note that the lower ensemble defect suggests better correlation with the ground truth structures. For short families, the differences between LinearSampling and RNAsubopt are either 0 or close to 0, indicating that the sampling qualities of the two systems are similar on these families. However, on the longer families (i.e. 16S and 23S rRNAs), LinearSampling has lower ensemble defects, showing that it performs better on longer sequences. The only family for which LinearSampling performs worse is tmRNA. We also present the results of RNAsubopt local mode, with base pair length limitations of 70 and 150. RNAsubopt local mode does not have a default span size; we choose 70 following the default setting in RNAplfold (<xref rid="B40" ref-type="bibr">40</xref>), and 150 since it is the largest default limit in the local folding literature and software. It is obvious that the local sampling has a much higher (worse) ensemble defect on 23S rRNA, which is probably caused by not predicting the known base pairs beyond the maximum span limit.</p>
      <fig position="float" id="F8">
        <label>Figure 8.</label>
        <caption>
          <p>LinearSampling is better correlated with the ground truth structure. (<bold>A</bold>) The ensemble defect difference of each family and overall (averaged by families) of the ArchiveII dataset, comparing LinearSampling, RNAsubopt and its local modes (span = 70 and 150); RNAsubopt is set to be the baseline. (<bold>B</bold>) The accessibility defect difference among LinearSampling, RNAsubopt, RNAplfold and their local modes, using RNAplfold as the baseline. The sample size is 50 000. The families are ordered by their average sequence lengths, from the shortest to the longest; see <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref> for length and identity information of each family.</p>
        </caption>
        <graphic xlink:href="gkac1029fig8" position="float"/>
      </fig>
      <p>An important application of the sampling algorithm is to calculate a region’s accessibility. Therefore, we follow Ding and Lawrence (<xref rid="B12" ref-type="bibr">12</xref>), calculating accessibilities of window size 4 from structures generated by LinearSampling and RNAsubopt, as well as directly from RNAplfold, which implemented a dynamic programming algorithm for calculating accessibility in cubic time (<xref rid="B24" ref-type="bibr">24</xref>), and compare them based on the ground truth structures. We denote the measurement of <italic toggle="yes">accessibility defect</italic> as <italic toggle="yes">D</italic>, which evaluates the averaged incorrect predictions of the accessibility to the ground truth given a window size. For sampling-based methods, <inline-formula><tex-math id="M00064" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$D(S, {\mathbf y}^*)$\end{document}</tex-math></inline-formula> is generated from the samples <italic toggle="yes">S</italic> and is defined as:<disp-formula><tex-math id="M00065" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} D(S, \mathbf {y} ^*) = \frac{1}{|\mathbf {y} ^* | - 3} \sum _{i=1}^{|\mathbf {y} ^* | - 3} {\Big \vert \text{acc} (\lbrace \mathbf {y} ^* \rbrace , i) - \text{acc} (S, i) \Big \vert } \end{equation*}$$\end{document}</tex-math></disp-formula>where acc(<italic toggle="yes">S</italic>, <italic toggle="yes">i</italic>) is the accessibility of region [<italic toggle="yes">i</italic>, <italic toggle="yes">i</italic> + 3]:<disp-formula><tex-math id="M00066" notation="LaTeX">\documentclass[12pt]{minimal}
\usepackage{amsmath}
\usepackage{wasysym}
\usepackage{amsfonts}
\usepackage{amssymb}
\usepackage{amsbsy}
\usepackage{upgreek}
\usepackage{mathrsfs}
\setlength{\oddsidemargin}{-69pt}
\begin{document}
}{}$$\begin{equation*} \text{acc} (S, i) = \frac{1}{|S|} \sum _{\mathbf {y} \in S} {1\!\!1} [\mathbf {y} _{i,i+3} = ``{{\tt .}}{{\tt .}}{{\tt .}}{{\tt .}}"] \nonumber \end{equation*}$$\end{document}</tex-math></disp-formula></p>
      <p>Figure <xref rid="F8" ref-type="fig">8B</xref> compares the accessibility defect of LinearSampling with RNAsubopt, RNAplfold and their local modes on the ArchiveII dataset. We observe that LinearSampling outperforms (or is as good as) all others on seven out of nine families, and is the best overall. Notably, both RNAsubopt’s and RNAplfold’s local modes are worse than their global modes, with only one exception on Group I Intron, indicating that the local modes are less accurate.</p>
      <p>It is worth noting that the lower ensemble and accessibility defects of LinearSampling are inherited from LinearPartition, which was shown to be better correlated with the ground truth structures (<xref rid="B22" ref-type="bibr">22</xref>) by pruning out structures with low probabilities. To confirm this, we investigate the root-mean-square deviation (RMSD) between the base pairing probability matrices <italic toggle="yes">p</italic>(<italic toggle="yes">S</italic>), which is derived from the sample set <italic toggle="yes">S</italic>, and <italic toggle="yes">p</italic>′, which is generated by Vienna RNAfold or LinearPartition. The results are shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S12</xref>, suggesting that structures generated by LinearSampling strictly match with the ensemble distribution of LinearPartition. Since LinearPartition deviates from the exact partition function of RNAfold with a small margin, the folding landscape structures of LinearSampling have different sampling probabilities compared with RNAsubopt. In most cases, structures with lower folding free energies may have higher probabilities in LinearSampling than in RNAsubopt, while low-probability structures in RNAsubopt may have 0 or close to 0 probabilities in LinearSampling.</p>
    </sec>
    <sec id="SEC3-3">
      <title>Applications to SARS-CoV-2</title>
      <p>The COVID-19 pandemic swept the world in 2020–2022, and is likely to threaten global health for a long time. Therefore, it is valuable to study the structure of the SARS-CoV-2 genome, which helps us better understand biological processes such as virus replication and translation. Now with the significant speedup, LinearSampling is able to quickly sample structures for the whole genome of SARS-CoV-2, providing an efficient tool for SARS-CoV-2 structural studies. In this section, we run LinearSampling, as well as the conventional tools, on NC_0405512.2, the reference sequence of SARS-CoV-2 (<xref rid="B42" ref-type="bibr">42</xref>), investigate the multiple conformations and accessible regions of great interest and show that LinearSampling’s structures correlate better with the experimental models. Then we report the LinearSampling’s findings on new targets with high accessibility, which can be potentially used for COVID-19 diagnostics and drug design.</p>
      <sec id="SEC3-3-1">
        <title>Alternative conformations and base pairs</title>
        <p>Experimental studies on SARS-CoV-2 have inferred that multiple conformations exist. For example, DRACO analysis (<xref rid="B43" ref-type="bibr">43</xref>) suggests two alternative structures in the 3′-untranslated region (UTR) of SARS-CoV-2 based on the clustering of DMS-MaPseq data. To see if LinearSampling’s structures are closer to this experimental analysis, we calculate the normalized structural distance (i.e. the number of incorrectly predicted nucleotides normalized by sequence length) between different algorithms and the two conformations, where the lower (normalized) structural distance indicates better correlation with the DRACO results. Figure <xref rid="F9" ref-type="fig">9</xref> shows the number of sampled structures derived from LinearSampling and RNAsubopt against normalized structural distance, grouped into 10 bins from the lowest (best) to the highest (worst) of the distances. It is clear that the distribution of distance between LinearSampling and conformation A of the DRACO analysis (solid blue bars) shifts to the direction of lower structural distance compared with RNAsubopt’s (striped blue bars). Specifically, for conformation A, there are 7023 among 10 000 of LinearSampling’s structures in the bin of [20, 30), suggesting that 70% of LinearSampling’s structures are similar to conformation A. In contrast, the majority of RNAsubopt’s sample are in the bins that have structural distance &gt;50%, suggesting that the structures of RNAsubopt are similar to neither conformation A nor conformation B. Therefore, LinearSampling’s sample correlates better with the DRACO analysis.</p>
        <fig position="float" id="F9">
          <label>Figure 9.</label>
          <caption>
            <p>The correlation between sampled structures and DRACO-inferred structures of the SARS-CoV-2 3′-UTR. LinearSampling and RNAsubopt are represented in solid bars and striped bars, respectively; the two DRACO-inferred conformations are in blue (conformation A) and red (conformation B), respectively. The normalized structural distance of sampled structures against DRACO-inferred conformations are grouped into 10 bins, where the distance of 0 means a perfect match of the whole structure, and the distance of 1 means that all positions in the region are incorrectly predicted. The numbers of sampled structure in each bin are illustrated. The majority of samples from LinearSampling are distributed in bins with smaller structural distance compared with RNAsubopt for both conformations, suggesting that LinearSampling has a better ability to model alternative conformations. Here the sample size is 10 000.</p>
          </caption>
          <graphic xlink:href="gkac1029fig9" position="float"/>
        </fig>
        <p>Besides the DRACO analysis, COMRADES analysis provides experimental data for short- and long-range base-pairing interactions (<xref rid="B44" ref-type="bibr">44</xref>), which can be used to verify the quality of the folding landscape samples regarding the base pairs in different conformations of SARS-CoV-2 genomes. We observed that LinearSampling’s oracle structure, compared with that of RNAsubopt, has more base pairs matched with COMRADES analysis with varying sample sizes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S13</xref>). Regarding the full sample landscapes, LinearSampling has a higher ratio of matched base pairs to predicted ones, and its total number of unmatched base pairs is substantially smaller than RNAsubopt against different sample sizes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14A and B</xref>), indicating that LinearSampling has a higher hit rate on the COMRADES-inferred base pairs. The COMRADES data also provides the chimeric reads of each interaction region, where a larger number of chimeric reads indicates high credibility of interaction, and we confirm that LinearSampling has higher average chimeric reads per predicted base pairs for all tested sample sizes (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14C</xref>). On the other hand, RNAsubopt has higher coverage of COMRADES base pairs, but costs much longer time (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14D</xref>). The difference in sample landscape between LinearSampling and RNAsubopt is illustrated in a Venn diagram (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S14E</xref>). LinearSampling tends to sample less diverse base pairs, which leads to the benefit of obtaining a higher ratio of matched base pairs and the cost of missing some base pairs shown in the COMRADES analysis; while RNAsubopt tends to sample more diverse base pairs, which has higher coverage but also results in more base pairs that are not supported by experimental data.</p>
      </sec>
      <sec id="SEC3-3-2">
        <title>Accessibility</title>
        <p>We investigate if the accessibilities predicted by LinearSampling match better with the experimentally guided structures, especially on the regions of interest, e.g. the 5′-UTR which has conserved structures and plays a critical role in viral genome replication (<xref rid="B46" ref-type="bibr">46</xref>). A number of studies report structural probing data for SARS-CoV-2 genomes (<xref rid="B14" ref-type="bibr">14</xref>,<xref rid="B15" ref-type="bibr">15</xref>,<xref rid="B41" ref-type="bibr">41</xref>,<xref rid="B43" ref-type="bibr">43</xref>,<xref rid="B47" ref-type="bibr">47</xref>,<xref rid="B48" ref-type="bibr">48</xref>), including the selective 2′-hydroxyl acylation analyzed by primer extension (SHAPE) and dimethyl sulfate (DMS) data. These well-accepted experimental techniques for RNA secondary structure probing have been shown to be able to improve the accuracy of structure prediction (<xref rid="B49" ref-type="bibr">49–51</xref>). Therefore, we utilize two SHAPE-directed structures (<xref rid="B14" ref-type="bibr">14</xref>,<xref rid="B41" ref-type="bibr">41</xref>) to evaluate different systems, i.e. LinearSampling, RNAsubopt and RNAplfold. Figure <xref rid="F10" ref-type="fig">10</xref> compares the accessibilities derived from the three systems with the experimentally guided structures based on SHAPE reactivities (<xref rid="B14" ref-type="bibr">14</xref>). Following the previous study (<xref rid="B12" ref-type="bibr">12</xref>), the accessibilities of window size 4 are visualized in the top sub-figure, and LinearSampling clearly correlates better with the SHAPE-directed structure. For example, RNAsubopt and RNAplfold (span = 150) overestimate the accessibilities around the double-stranded region [174, 181], and RNAplfold (both span = 150 and span = 800) overestimates in the region [276, 284]; in contrast, LinearSampling’s predictions are close to 0. Also, LinearSampling correctly captures the accessible region around 50, with a high predicted accessibility of nearly 1. We further extend the window size to cover a wider range (from 1 to 11), and visualize the computational results versus the SHAPE-directed structure model in the second row (LinearSampling), the third row (RNAsubopt) and the bottom two rows (RNAplfold). For instance, the black circle at position 52 and window size 5 (indicated by a green arrow) represents a highly accessible region [52, 56] predicted by LinearSampling, which is surrounded by a box, indicating that the prediction is supported by the wetlab experiment. In RNAsubopt and RNAplfold predictions, the same positions are in purple or orange, indicating that they have lower accessibility and are less correlated with the SHAPE reactivities. In addition, LinearSampling predicts the region around position 279, indicated by blue arrows, as an inaccessible region, which is supported by the SHAPE-directed structures. The main differences between the three systems are highlighted in gray shades. In general, LinearSampling’s result correlates better with the experimentally guided models.</p>
        <fig position="float" id="F10">
          <label>Figure 10.</label>
          <caption>
            <p>The accessibilities derived from LinearSampling correlate better with the unpaired region in the SHAPE-directed structure of the 5′-UTR of SARS-CoV-2 (<xref rid="B14" ref-type="bibr">14</xref>,<xref rid="B41" ref-type="bibr">41</xref>). Note that the full sequence was used for the accessibility calculation, but only the 5′-UTR is shown. <bold>First row</bold>: accessibilities of window size 4 derived from SHAPE-directed structures (blue plus symbol and purple cross symbol; agreed on &gt;90% positions), RNAsubopt (green line), RNAplfold local mode (blue lines) and LinearSampling (red line). Following the previous study (<xref rid="B12" ref-type="bibr">12</xref>), the accessibility of position <italic toggle="yes">i</italic> stands for the region [<italic toggle="yes">i</italic>, <italic toggle="yes">i</italic> + 3]. <bold>Second row</bold>: accessibilities predicted by LinearSampling with window sizes from 1 to 11. Each prediction is presented with a filled circle, where the color correlates with its accessibility value. The SHAPE-directed structure (<xref rid="B14" ref-type="bibr">14</xref>) is shown in dot–bracket format along the <italic toggle="yes">x</italic>-axis, and its accessible regions are annotated in boxes. <bold>Third, fourth and fifth rows</bold>: accessibilities predicted by RNAsubopt and RNAplfold (with a base pairing limit of 150 and 800), respectively. Note that the first row is a special case (window size 4) of the bottom four rows. The main differences are highlighted in gray shading, where LinearSampling is the most accurate in all cases. For example, the green arrows point to window size 5 at position 52 (representing the region [52, 56]), showing the case of a 5 nt accessible region in which LinearSampling predicts the highest accessibility, correlating better with the experimentally guided models. In addition, the blue arrows, pointing to the region around position 279, illustrate an example where an inaccessible region is accurately predicted by LinearSampling but not by other tools. We chose span = 150 and span = 800 for RNAplfold, the former being the largest default limit of local folding in most literature and software, and the latter following a previous study (<xref rid="B19" ref-type="bibr">19</xref>).</p>
          </caption>
          <graphic xlink:href="gkac1029fig10" position="float"/>
        </fig>
        <p>To further quantify the difference, we calculate the accessibility defects of three important and well-studied regions in SARS-CoV-2, i.e. the 5′-UTR, the frameshifting element (FSE) and the 3′-UTR, shown in Table <xref rid="tbl2" ref-type="table">2</xref>. LinearSampling has lower (better) accessibility defects on all these three regions, except for the FSE region using the reference structure from Manfredonia <italic toggle="yes">et al.</italic>, on which LinearSampling is the second best (behind RNAplfold, span = 150) and has only 0.0025 difference from the best one.</p>
        <table-wrap position="float" id="tbl2">
          <label>Table 2.</label>
          <caption>
            <p>Accessibility defect comparisons between <italic toggle="yes">in silico</italic> predictions (LinearSampling, RNAsubopt and RNAplfold) and experimentally guided models [Huston <italic toggle="yes">et al.</italic> (<xref rid="B14" ref-type="bibr">14</xref>) and Manfredonia <italic toggle="yes">et al.</italic> (<xref rid="B41" ref-type="bibr">41</xref>)] on UTRs and FSE regions</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1">5′-UTR</th>
                <th rowspan="1" colspan="1">FSE</th>
                <th rowspan="1" colspan="1">3′-UTR</th>
                <th rowspan="1" colspan="1">Reference</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">LinearSampling</td>
                <td rowspan="1" colspan="1">
                  <bold>0.0824</bold>
                </td>
                <td rowspan="1" colspan="1">
                  <bold>0.4021</bold>
                </td>
                <td rowspan="1" colspan="1">
                  <bold>0.2151</bold>
                </td>
                <td rowspan="4" colspan="1">Huston <italic toggle="yes">et al.</italic> (<xref rid="B14" ref-type="bibr">14</xref>)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAsubopt</td>
                <td rowspan="1" colspan="1">0.1061</td>
                <td rowspan="1" colspan="1">0.4461</td>
                <td rowspan="1" colspan="1">0.2573</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAplfold (span = 150)</td>
                <td rowspan="1" colspan="1">0.1304</td>
                <td rowspan="1" colspan="1">0.4094</td>
                <td rowspan="1" colspan="1">0.2773</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAplfold (span = 800)</td>
                <td rowspan="1" colspan="1">0.1145</td>
                <td rowspan="1" colspan="1">0.4320</td>
                <td rowspan="1" colspan="1">0.2528</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">LinearSampling</td>
                <td rowspan="1" colspan="1">
                  <bold>0.1007</bold>
                </td>
                <td rowspan="1" colspan="1">0.3578</td>
                <td rowspan="1" colspan="1">
                  <bold>0.1338</bold>
                </td>
                <td rowspan="4" colspan="1">Manfredonia <italic toggle="yes">et al.</italic> (<xref rid="B41" ref-type="bibr">41</xref>)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAsubopt</td>
                <td rowspan="1" colspan="1">0.1113</td>
                <td rowspan="1" colspan="1">0.3647</td>
                <td rowspan="1" colspan="1">0.1879</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAplfold (span =150)</td>
                <td rowspan="1" colspan="1">0.1408</td>
                <td rowspan="1" colspan="1">
                  <bold>0.3553</bold>
                </td>
                <td rowspan="1" colspan="1">0.2154</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">RNAplfold (span = 800)</td>
                <td rowspan="1" colspan="1">0.1201</td>
                <td rowspan="1" colspan="1">0.3595</td>
                <td rowspan="1" colspan="1">0.1793</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="T2TFN1">
              <p>The 5′-UTR, FSE and 3′-UTR are [1, 450], [13470, 13545] and [29550, 29870], respectively (<xref rid="B45" ref-type="bibr">45</xref>). The sample size is 10 000.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec id="SEC3-3-3">
        <title>New findings on accessible targets</title>
        <p>Next, we aim to computationally obtain accessible regions as potential targets for diagnostics and drug discovery. A previous study (<xref rid="B45" ref-type="bibr">45</xref>) locates unstructured regions of SARS-CoV-2 by scanning the reference sequence with windows of 120 nt, sliding by 40 nt and then calculating base-pairing probabilities using CONTRAfold (<xref rid="B52" ref-type="bibr">52</xref>) for these fragments. In total, 75 accessible regions with ≥15 nt are claimed, where each base has the average unpaired probability of at least 0.6. However, this method has two flaws: (i) it is not correct to evaluate accessibility based on unpaired probabilities due to their mutual dependency; and (ii) it neglects long-range base pairs and has to approximate the accessibilities based on local structures, which is less accurate (see Figure <xref rid="F8" ref-type="fig">8</xref>). Instead, we measure the accessibilities based on samples generated by LinearSampling, setting the window size to be 15 following Rangan <italic toggle="yes">et al.</italic> (<xref rid="B45" ref-type="bibr">45</xref>). We only show the fragments whose accessibilities are &gt;0.5, i.e. they are more likely to be open than closed. We list all 23 regions found by LinearSampling in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>. Some of the regions are overlapped, resulting in a total of nine separate accessible regions, which are illustrated in Figure <xref rid="F11" ref-type="fig">11</xref>. Of the nine regions, two are in ORF1ab, one in ORF3a, one in the M gene, three in the N gene and two in the S (spike) gene whose proteins can recognize and bind with its receptor (<xref rid="B53" ref-type="bibr">53</xref>).</p>
        <fig position="float" id="F11">
          <label>Figure 11.</label>
          <caption>
            <p>LinearSampling predicts nine separate accessible regions in the SARS-CoV-2 full genome. <bold>Top</bold>: the predicted accessibilities of window size 4 (the blue curve) and 15 (the purple curve) within the nine regions. <bold>Middle</bold>: accessibilities with window sizes from 1 to 20. The region [25700, 25720] in ORF3a is highly accessible, with an accessibility of &gt;0.9. <bold>Bottom</bold>: the relative position of each accessible region in the full-genome of SARS-CoV-2. Most of the regions are in the last third of the genome, and three out of nine are in the N protein. Note that ORF1ab can be further divided.</p>
          </caption>
          <graphic xlink:href="gkac1029fig11" position="float"/>
        </fig>
        <p>The constant emergence of mutations may lead to changes in new virus variants. Therefore, it is better to target both conserved and accessible regions. LinearSampling is able to integrate conservation information for sampled structures by loading the partition function dumped from LinearTurboFold (<xref rid="B28" ref-type="bibr">28</xref>), which simultaneously folds and aligns homologous sequences and can identify conserved regions. This feature of LinearSampling allows mutation-insensitive diagnostics and drug design. The homology-assisted results have been previously reported (<xref rid="B28" ref-type="bibr">28</xref>).</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="SEC4">
    <title>DISCUSSION</title>
    <p>We focus on simplifying and accelerating the stochastic sampling algorithm for a given RNA sequence. Algorithmically, we present a hypergraph framework under which the classical sampling algorithm can be greatly simplified. We further elaborate this sampling framework to formalize the classical Non-Saving Sampling, and devise two new sampling algorithms, the Full-Saving Sampling that saves all hyperedges <italic toggle="yes">a priori</italic> and avoids re-computing in sampling phase, and LazySampling which eliminates redundant work and avoids unnecessary hyperedges saving via on-demand caching. We show that the LazySampling algorithm, i.e. exact partition function followed by a Lazy-Saving sampling, is the fastest among the three sampling strategies. Then we present LinearSampling, which combines LazySampling and LinearPartition.</p>
    <p>LinearSampling is the first sampling algorithm to run in linear time without imposing constraints on the base pair distance, and is orders of magnitude faster than Vienna RNAsubopt. We conclude that</p>
    <list list-type="bullet">
      <list-item>
        <p>LinearSampling runs linearly both in end-to-end and sampling-only time, and can scale up to long RNA sequence without any overflow issue;</p>
      </list-item>
      <list-item>
        <p>its sampled structures correlate better with the ground truth structures on a diverse database, and with the experimentally guided structure of SARS-CoV-2;</p>
      </list-item>
      <list-item>
        <p>it can be applied to SARS-CoV-2 to discover regions with high accessibilities, which are potential targets for diagnostics and drug design.</p>
      </list-item>
    </list>
  </sec>
  <sec sec-type="data-availability" id="SEC5">
    <title>DATA AVAILABILITY</title>
    <p>Our web server is available at <ext-link xlink:href="http://linearfold.org/sampling" ext-link-type="uri">http://linearfold.org/sampling</ext-link>. Our code and dataset used for benchmark are available at <ext-link xlink:href="https://github.com/LinearFold/LinearSampling" ext-link-type="uri">https://github.com/LinearFold/LinearSampling</ext-link>, and are uploaded to Zenodo (DOI:10.5281/zenodo.7221764). The data is also available in the RNAcentral Dataset at <ext-link xlink:href="https://rnacentral.org/" ext-link-type="uri">https://rnacentral.org/</ext-link> with the accession numbersp>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>gkac1029_Supplemental_Files</label>
      <media xlink:href="gkac1029_supplemental_files.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec id="SEC6">
    <title>SUPPLEMENTARY DATA</title>
    <p><ext-link xlink:href="https://academic.oup.com/nar/article-lookup/doi/10.1093/nar/gkac1029#supplementary-data" ext-link-type="uri">Supplementary Data</ext-link> are available at NAR Online.</p>
  </sec>
  <sec id="SEC7">
    <title>FUNDING</title>
    <p>This work is supported in part by National Institutes of Health [R35 GM145283 to D.H.M.] and National Science Foundation Grants [IIS-1817231 and IIS-2009071 to L.H.].</p>
    <p><italic toggle="yes">Conflict of interest statement</italic>. None declared.</p>
  </sec>
  <ref-list id="REF1">
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Eddy</surname><given-names>S.R.</given-names></string-name></person-group><article-title>Non-coding RNA genes and the modern RNA world</article-title>. <source>Nat. Rev. Genet.</source><year>2001</year>; <volume>2</volume>:<fpage>919</fpage>–<lpage>929</lpage>.<pub-id pub-id-type="pmid">11733745</pub-id></mixed-citation>
    </ref>
    <ref id="B2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Doudna</surname><given-names>J.A.</given-names></string-name>, <string-name><surname>Cech</surname><given-names>T.R.</given-names></string-name></person-group><article-title>The chemical repertoire of natural ribozymes</article-title>. <source>Nature</source>. <year>2002</year>; <volume>418</volume>:<fpage>222</fpage>–<lpage>228</lpage>.<pub-id pub-id-type="pmid">12110898</pub-id></mixed-citation>
    </ref>
    <ref id="B3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kung</surname><given-names>J.T.Y.</given-names></string-name>, <string-name><surname>Colognori</surname><given-names>D.</given-names></string-name>, <string-name><surname>Lee</surname><given-names>J.T.</given-names></string-name></person-group><article-title>Long noncoding RNAs: past, present, and future</article-title>. <source>Genetics</source>. <year>2013</year>; <volume>193</volume>:<fpage>651</fpage>–<lpage>669</lpage>.<pub-id pub-id-type="pmid">23463798</pub-id></mixed-citation>
    </ref>
    <ref id="B4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miao</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Adamiak</surname><given-names>R.W.</given-names></string-name>, <string-name><surname>Antczak</surname><given-names>M.</given-names></string-name>, <string-name><surname>Batey</surname><given-names>R.T.</given-names></string-name>, <string-name><surname>Becka</surname><given-names>A.J.</given-names></string-name>, <string-name><surname>Biesiada</surname><given-names>M.</given-names></string-name>, <string-name><surname>Boniecki</surname><given-names>M.J.</given-names></string-name>, <string-name><surname>Bujnicki</surname><given-names>J.M.</given-names></string-name>, <string-name><surname>Chen</surname><given-names>S.-J.</given-names></string-name>, <string-name><surname>Cheng</surname><given-names>C.Y.</given-names></string-name><etal>et al</etal>.</person-group><article-title>RNA-Puzzles Round III: 3D RNA structure prediction of five riboswitches and one ribozyme</article-title>. <source>RNA</source>. <year>2017</year>; <volume>23</volume>:<fpage>655</fpage>–<lpage>672</lpage>.<pub-id pub-id-type="pmid">28138060</pub-id></mixed-citation>
    </ref>
    <ref id="B5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Flores</surname><given-names>S.C.</given-names></string-name>, <string-name><surname>Altman</surname><given-names>R.B.</given-names></string-name></person-group><article-title>Turning limited experimental information into 3D models of RNA</article-title>. <source>RNA</source>. <year>2010</year>; <volume>16</volume>:<fpage>1769</fpage>–<lpage>1778</lpage>.<pub-id pub-id-type="pmid">20651028</pub-id></mixed-citation>
    </ref>
    <ref id="B6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Seetin</surname><given-names>M.G.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name></person-group><article-title>Automated RNA tertiary structure prediction from secondary structure and low-resolution restraints</article-title>. <source>J. Comput. Chem.</source><year>2011</year>; <volume>32</volume>:<fpage>2232</fpage>–<lpage>2244</lpage>.<pub-id pub-id-type="pmid">21509787</pub-id></mixed-citation>
    </ref>
    <ref id="B7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Spasic</surname><given-names>A.</given-names></string-name>, <string-name><surname>Assmann</surname><given-names>S.M.</given-names></string-name>, <string-name><surname>Bevilacqua</surname><given-names>P.C.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name></person-group><article-title>Modeling RNA secondary structure folding ensembles using SHAPE mapping data</article-title>. <source>Nucleic Acids Res.</source><year>2018</year>; <volume>46</volume>:<fpage>314</fpage>–<lpage>323</lpage>.<pub-id pub-id-type="pmid">29177466</pub-id></mixed-citation>
    </ref>
    <ref id="B8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nussinov</surname><given-names>R.</given-names></string-name>, <string-name><surname>Jacobson</surname><given-names>A.B.</given-names></string-name></person-group><article-title>Fast algorithm for predicting the secondary structure of single-stranded RNA</article-title>. <source>Proc. Natl Acad. Sci. USA</source>. <year>1980</year>; <volume>77</volume>:<fpage>6309</fpage>–<lpage>6313</lpage>.<pub-id pub-id-type="pmid">6161375</pub-id></mixed-citation>
    </ref>
    <ref id="B9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zuker</surname><given-names>M.</given-names></string-name>, <string-name><surname>Stiegler</surname><given-names>P.</given-names></string-name></person-group><article-title>Optimal computer folding of large RNA sequences using thermodynamics and auxiliary information</article-title>. <source>Nucleic Acids Res.</source><year>1981</year>; <volume>9</volume>:<fpage>133</fpage>–<lpage>148</lpage>.<pub-id pub-id-type="pmid">6163133</pub-id></mixed-citation>
    </ref>
    <ref id="B10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cordero</surname><given-names>P.</given-names></string-name>, <string-name><surname>Das</surname><given-names>R.</given-names></string-name></person-group><article-title>Rich RNA structure landscapes revealed by mutate-and-map analysis</article-title>. <source>PLoS Comput. Biol.</source><year>2015</year>; <volume>11</volume>:<fpage>e1004473</fpage>.<pub-id pub-id-type="pmid">26566145</pub-id></mixed-citation>
    </ref>
    <ref id="B11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Serganov</surname><given-names>A.</given-names></string-name>, <string-name><surname>Nudler</surname><given-names>E.</given-names></string-name></person-group><article-title>A decade of riboswitches</article-title>. <source>Cell</source>. <year>2013</year>; <volume>152</volume>:<fpage>17</fpage>–<lpage>24</lpage>.<pub-id pub-id-type="pmid">23332744</pub-id></mixed-citation>
    </ref>
    <ref id="B12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ding</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Lawrence</surname><given-names>C.E.</given-names></string-name></person-group><article-title>A statistical sampling algorithm for RNA secondary structure prediction</article-title>. <source>Nucleic Acids Res.</source><year>2003</year>; <volume>31</volume>:<fpage>7280</fpage>–<lpage>7301</lpage>.<pub-id pub-id-type="pmid">14654704</pub-id></mixed-citation>
    </ref>
    <ref id="B13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ding</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Chan</surname><given-names>C.Y.</given-names></string-name>, <string-name><surname>Lawrence</surname><given-names>C.E.</given-names></string-name></person-group><article-title>RNA secondary structure prediction by centroids in a Boltzmann weighted ensemble</article-title>. <source>RNA</source>. <year>2005</year>; <volume>11</volume>:<fpage>1157</fpage>–<lpage>1166</lpage>.<pub-id pub-id-type="pmid">16043502</pub-id></mixed-citation>
    </ref>
    <ref id="B14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huston</surname><given-names>N.C.</given-names></string-name>, <string-name><surname>Wan</surname><given-names>H.</given-names></string-name>, <string-name><surname>Strine</surname><given-names>M.S.</given-names></string-name>, <string-name><surname>Tavares</surname><given-names>R.d.C.A.</given-names></string-name>, <string-name><surname>Wilen</surname><given-names>C.B.</given-names></string-name>, <string-name><surname>Pyle</surname><given-names>A.M.</given-names></string-name></person-group><article-title>Comprehensive in vivo secondary structure of the SARS-CoV-2 genome reveals novel regulatory motifs and mechanisms</article-title>. <source>Mol. Cell</source>. <year>2021</year>; <volume>81</volume>:<fpage>584</fpage>–<lpage>598</lpage>.<pub-id pub-id-type="pmid">33444546</pub-id></mixed-citation>
    </ref>
    <ref id="B15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lan</surname><given-names>T.C.</given-names></string-name>, <string-name><surname>Allan</surname><given-names>M.F.</given-names></string-name>, <string-name><surname>Malsick</surname><given-names>L.E.</given-names></string-name>, <string-name><surname>Woo</surname><given-names>J.Z.</given-names></string-name>, <string-name><surname>Zhu</surname><given-names>C.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>F.</given-names></string-name>, <string-name><surname>Khandwala</surname><given-names>S.</given-names></string-name>, <string-name><surname>Nyeo</surname><given-names>S.S.</given-names></string-name>, <string-name><surname>Sun</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Guo</surname><given-names>J.U.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Secondary structural ensembles of the SARS-CoV-2 RNA genome in infected cells</article-title>. <source>Nat. Commun.</source><year>2022</year>; <volume>13</volume>:<fpage>1128</fpage>.<pub-id pub-id-type="pmid">35236847</pub-id></mixed-citation>
    </ref>
    <ref id="B16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lai</surname><given-names>W.-J.C.</given-names></string-name>, <string-name><surname>Kayedkhordeh</surname><given-names>M.</given-names></string-name>, <string-name><surname>Cornell</surname><given-names>E.V.</given-names></string-name>, <string-name><surname>Farah</surname><given-names>E.</given-names></string-name>, <string-name><surname>Bellaousov</surname><given-names>S.</given-names></string-name>, <string-name><surname>Rietmeijer</surname><given-names>R.</given-names></string-name>, <string-name><surname>Salsi</surname><given-names>E.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name>, <string-name><surname>Ermolenko</surname><given-names>D.N.</given-names></string-name></person-group><article-title>mRNAs and lncRNAs intrinsically form secondary structures with short end-to-end distances</article-title>. <source>Nat. Commun.</source><year>2018</year>; <volume>9</volume>:<fpage>4328</fpage>.<pub-id pub-id-type="pmid">30337527</pub-id></mixed-citation>
    </ref>
    <ref id="B17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bohula</surname><given-names>E.A.</given-names></string-name>, <string-name><surname>Salisbury</surname><given-names>A.J.</given-names></string-name>, <string-name><surname>Sohail</surname><given-names>M.</given-names></string-name>, <string-name><surname>Playford</surname><given-names>M.P.</given-names></string-name>, <string-name><surname>Riedemann</surname><given-names>J.</given-names></string-name>, <string-name><surname>Southern</surname><given-names>E.M.</given-names></string-name>, <string-name><surname>Macaulay</surname><given-names>V.M.</given-names></string-name></person-group><article-title>The efficacy of small interfering RNAs targeted to the type 1 insulin-like growth factor receptor (IGF1R) is influenced by secondary structure in the IGF1R transcript</article-title>. <source>J. Biol. Chem.</source><year>2003</year>; <volume>278</volume>:<fpage>15991</fpage>–<lpage>15997</lpage>.<pub-id pub-id-type="pmid">12604614</pub-id></mixed-citation>
    </ref>
    <ref id="B18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tafer</surname><given-names>H.</given-names></string-name>, <string-name><surname>Ameres</surname><given-names>S.L.</given-names></string-name>, <string-name><surname>Obernosterer</surname><given-names>G.</given-names></string-name>, <string-name><surname>Gebeshuber</surname><given-names>C.A.</given-names></string-name>, <string-name><surname>Schroeder</surname><given-names>R.</given-names></string-name>, <string-name><surname>Martinez</surname><given-names>J.</given-names></string-name>, <string-name><surname>Hofacker</surname><given-names>I.L.</given-names></string-name></person-group><article-title>The impact of target site accessibility on the design of effective siRNAs</article-title>. <source>Nat. Biotechnol.</source><year>2008</year>; <volume>26</volume>:<fpage>578</fpage>–<lpage>583</lpage>.<pub-id pub-id-type="pmid">18438400</pub-id></mixed-citation>
    </ref>
    <ref id="B19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lu</surname><given-names>Z.J.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name></person-group><article-title>Efficient siRNA selection using hybridization thermodynamics</article-title>. <source>Nucleic Acids Res.</source><year>2008</year>; <volume>36</volume>:<fpage>640</fpage>–<lpage>647</lpage>.<pub-id pub-id-type="pmid">18073195</pub-id></mixed-citation>
    </ref>
    <ref id="B20">
      <label>20.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Michalik</surname><given-names>J.</given-names></string-name></person-group><source>Non-redundant sampling in RNA bioinformatics</source>. <year>2019</year>; <publisher-name>Université Paris-Saclay</publisher-name><comment>PhD thesis</comment>.</mixed-citation>
    </ref>
    <ref id="B21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McCaskill</surname><given-names>J.S.</given-names></string-name></person-group><article-title>The equilibrium partition function and base pair probabilities for RNA secondary structure</article-title>. <source>Biopolymers</source>. <year>1990</year>; <volume>29</volume>:<fpage>1105</fpage>–<lpage>1119</lpage>.<pub-id pub-id-type="pmid">1695107</pub-id></mixed-citation>
    </ref>
    <ref id="B22">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>H.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>L.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name>, <string-name><surname>Huang</surname><given-names>L.</given-names></string-name></person-group><article-title>LinearPartition: linear-time approximation of RNA folding partition function and base-pairing probabilities</article-title>. <source>Bioinformatics</source>. <year>2020</year>; <volume>36</volume>:<fpage>i258</fpage>–<lpage>i267</lpage>.<pub-id pub-id-type="pmid">32657379</pub-id></mixed-citation>
    </ref>
    <ref id="B23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mückstein</surname><given-names>U.</given-names></string-name>, <string-name><surname>Tafer</surname><given-names>H.</given-names></string-name>, <string-name><surname>Hackermüller</surname><given-names>J.</given-names></string-name>, <string-name><surname>Bernhart</surname><given-names>S.H.</given-names></string-name>, <string-name><surname>Stadler</surname><given-names>P.F.</given-names></string-name>, <string-name><surname>Hofacker</surname><given-names>I.L.</given-names></string-name></person-group><article-title>Thermodynamics of RNA–RNA binding</article-title>. <source>Bioinformatics</source>. <year>2006</year>; <volume>22</volume>:<fpage>1177</fpage>–<lpage>1182</lpage>.<pub-id pub-id-type="pmid">16446276</pub-id></mixed-citation>
    </ref>
    <ref id="B24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bernhart</surname><given-names>S.H.</given-names></string-name>, <string-name><surname>Mückstein</surname><given-names>U.</given-names></string-name>, <string-name><surname>Hofacker</surname><given-names>I.L.</given-names></string-name></person-group><article-title>RNA accessibility in cubic time</article-title>. <source>Algorithm. Mol. Biol.</source><year>2011</year>; <volume>6</volume>:<fpage>3</fpage>.</mixed-citation>
    </ref>
    <ref id="B25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lorenz</surname><given-names>R.</given-names></string-name>, <string-name><surname>Bernhart</surname><given-names>S.H.</given-names></string-name>, <string-name><surname>Höner zu Siederdissen</surname><given-names>C.</given-names></string-name>, <string-name><surname>Tafer</surname><given-names>H.</given-names></string-name>, <string-name><surname>Flamm</surname><given-names>C.</given-names></string-name>, <string-name><surname>Stadler</surname><given-names>P.F.</given-names></string-name>, <string-name><surname>Hofacker</surname><given-names>I.L.</given-names></string-name></person-group><article-title>ViennaRNA Package 2.0</article-title>. <source>Algorithm. Mol. Biol.</source><year>2011</year>; <volume>6</volume>:<fpage>1</fpage>.</mixed-citation>
    </ref>
    <ref id="B26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Thompson</surname><given-names>W.A.</given-names></string-name>, <string-name><surname>Newberg</surname><given-names>L.A.</given-names></string-name>, <string-name><surname>Conlan</surname><given-names>S.</given-names></string-name>, <string-name><surname>McCue</surname><given-names>L.A.</given-names></string-name>, <string-name><surname>Lawrence</surname><given-names>C.E.</given-names></string-name></person-group><article-title>The Gibbs centroid sampler</article-title>. <source>Nucleic Acids Res.</source><year>2007</year>; <volume>35</volume>:<fpage>W232</fpage>–<lpage>W237</lpage>.<pub-id pub-id-type="pmid">17483517</pub-id></mixed-citation>
    </ref>
    <ref id="B27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harmanci</surname><given-names>A.O.</given-names></string-name>, <string-name><surname>Sharma</surname><given-names>G.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name></person-group><article-title>Stochastic sampling of the RNA structural alignment space</article-title>. <source>Nucleic Acids Res.</source><year>2009</year>; <volume>37</volume>:<fpage>4063</fpage>–<lpage>4075</lpage>.<pub-id pub-id-type="pmid">19429694</pub-id></mixed-citation>
    </ref>
    <ref id="B28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>S.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>H.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>L.</given-names></string-name>, <string-name><surname>Liu</surname><given-names>K.</given-names></string-name>, <string-name><surname>Liu</surname><given-names>B.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name>, <string-name><surname>Huang</surname><given-names>L.</given-names></string-name></person-group><article-title>LinearTurboFold: linear-time global prediction of conserved structures for RNA homologs with applications to SARS-CoV-2</article-title>. <source>Proc. Natl Acad. Sci. USA</source>. <year>2021</year>; <volume>118</volume>:<fpage>e2116269118</fpage>.<pub-id pub-id-type="pmid">34887342</pub-id></mixed-citation>
    </ref>
    <ref id="B29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gallo</surname><given-names>G.</given-names></string-name>, <string-name><surname>Longo</surname><given-names>G.</given-names></string-name>, <string-name><surname>Pallottino</surname><given-names>S.</given-names></string-name></person-group><article-title>Directed hypergraphs and applications</article-title>. <source>Discrete Appl. Math.</source><year>1993</year>; <volume>42</volume>:<fpage>177</fpage>–<lpage>201</lpage>.</mixed-citation>
    </ref>
    <ref id="B30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Finkelstein</surname><given-names>A.</given-names></string-name>, <string-name><surname>Roytberg</surname><given-names>M.</given-names></string-name></person-group><article-title>Computation of biopolymers: a general approach to different problems</article-title>. <source>BioSystems</source>. <year>1993</year>; <volume>30</volume>:<fpage>1</fpage>–<lpage>19</lpage>.<pub-id pub-id-type="pmid">7690608</pub-id></mixed-citation>
    </ref>
    <ref id="B31">
      <label>31.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Huang</surname><given-names>L.</given-names></string-name>, <string-name><surname>Chiang</surname><given-names>D.</given-names></string-name></person-group><article-title>Better k-best parsing</article-title>. <source>Proceedings of the Ninth International Workshop on Parsing Technology</source>. <year>2005</year>; <fpage>53</fpage>–<lpage>64</lpage>.</mixed-citation>
    </ref>
    <ref id="B32">
      <label>32.</label>
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Ponty</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Saule</surname><given-names>C.</given-names></string-name></person-group><article-title>A combinatorial framework for designing (pseudoknotted) RNA algorithms</article-title>. <source>Int’l Workshop on Algorithms in Bioinformatics</source>. <year>2011</year>; <fpage>250</fpage>–<lpage>269</lpage>.</mixed-citation>
    </ref>
    <ref id="B33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huang</surname><given-names>L.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>H.</given-names></string-name>, <string-name><surname>Deng</surname><given-names>D.</given-names></string-name>, <string-name><surname>Zhao</surname><given-names>K.</given-names></string-name>, <string-name><surname>Liu</surname><given-names>K.</given-names></string-name>, <string-name><surname>Hendrix</surname><given-names>D.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.</given-names></string-name></person-group><article-title>LinearFold: linear-time approximate RNA folding by 5′-to-3′ dynamic programming and beam search</article-title>. <source>Bioinformatics</source>. <year>2019</year>; <volume>35</volume>:<fpage>i295</fpage>–<lpage>i304</lpage>.<pub-id pub-id-type="pmid">31510672</pub-id></mixed-citation>
    </ref>
    <ref id="B34">
      <label>34.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name>, <string-name><surname>Sabina</surname><given-names>J.</given-names></string-name>, <string-name><surname>Zuker</surname><given-names>M.</given-names></string-name>, <string-name><surname>Turner</surname><given-names>D.H.</given-names></string-name></person-group><article-title>Expanded sequence dependence of thermodynamic parameters improves prediction of RNA secondary structure</article-title>. <source>J. Mol. Biol.</source><year>1999</year>; <volume>288</volume>:<fpage>911</fpage>–<lpage>940</lpage>.<pub-id pub-id-type="pmid">10329189</pub-id></mixed-citation>
    </ref>
    <ref id="B35">
      <label>35.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ponty</surname><given-names>Y.</given-names></string-name></person-group><article-title>Efficient sampling of RNA secondary structures from the Boltzmann ensemble of low-energy</article-title>. <source>J. Math. Biol.</source><year>2008</year>; <volume>56</volume>:<fpage>107</fpage>–<lpage>127</lpage>.<pub-id pub-id-type="pmid">17932676</pub-id></mixed-citation>
    </ref>
    <ref id="B36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name>, <string-name><surname>Disney</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Childs</surname><given-names>J.L.</given-names></string-name>, <string-name><surname>Schroeder</surname><given-names>S.J.</given-names></string-name>, <string-name><surname>Zuker</surname><given-names>M.</given-names></string-name>, <string-name><surname>Turner</surname><given-names>D.H.</given-names></string-name></person-group><article-title>Incorporating chemical modification constraints into a dynamic programming algorithm for prediction of RNA secondary structure</article-title>. <source>Proc. Natl Acad. Sci. USA</source>. <year>2004</year>; <volume>101</volume>:<fpage>7287</fpage>–<lpage>7292</lpage>.<pub-id pub-id-type="pmid">15123812</pub-id></mixed-citation>
    </ref>
    <ref id="B37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Williams</surname><given-names>K.P.</given-names></string-name>, <string-name><surname>Lau</surname><given-names>B.Y.</given-names></string-name></person-group><article-title>RNAcentral: a comprehensive database of non-coding RNA sequences</article-title>. <source>Nucleic Acids Res.</source><year>2017</year>; <volume>45</volume>:<fpage>D128</fpage>–<lpage>D134</lpage>.<pub-id pub-id-type="pmid">27794554</pub-id></mixed-citation>
    </ref>
    <ref id="B38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sloma</surname><given-names>M.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.</given-names></string-name></person-group><article-title>Exact calculation of loop formation probability identifies folding motifs in RNA secondary structures</article-title>. <source>RNA</source>. <year>2016</year>; <volume>22</volume>:<fpage>1808</fpage>–<lpage>1818</lpage>.<pub-id pub-id-type="pmid">27852924</pub-id></mixed-citation>
    </ref>
    <ref id="B39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zadeh</surname><given-names>J.</given-names></string-name>, <string-name><surname>Wolfe</surname><given-names>B.</given-names></string-name>, <string-name><surname>Pierce</surname><given-names>N.</given-names></string-name></person-group><article-title>Nucleic acid sequence design via efficient ensemble defect optimization</article-title>. <source>J. Comput. Chem.</source><year>2010</year>; <volume>32</volume>:<fpage>439</fpage>–<lpage>452</lpage>.<pub-id pub-id-type="pmid">20717905</pub-id></mixed-citation>
    </ref>
    <ref id="B40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bernhart</surname><given-names>S.H.</given-names></string-name>, <string-name><surname>Hofacker</surname><given-names>I.L.</given-names></string-name>, <string-name><surname>Stadler</surname><given-names>P.F.</given-names></string-name></person-group><article-title>Local RNA base pairing probabilities in large sequences</article-title>. <source>Bioinformatics</source>. <year>2006</year>; <volume>22</volume>:<fpage>614</fpage>–<lpage>615</lpage>.<pub-id pub-id-type="pmid">16368769</pub-id></mixed-citation>
    </ref>
    <ref id="B41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Manfredonia</surname><given-names>I.</given-names></string-name>, <string-name><surname>Nithin</surname><given-names>C.</given-names></string-name>, <string-name><surname>Ponce-Salvatierra</surname><given-names>A.</given-names></string-name>, <string-name><surname>Ghosh</surname><given-names>P.</given-names></string-name>, <string-name><surname>Wirecki</surname><given-names>T.K.</given-names></string-name>, <string-name><surname>Marinus</surname><given-names>T.</given-names></string-name>, <string-name><surname>Ogando</surname><given-names>N.S.</given-names></string-name>, <string-name><surname>Snijder</surname><given-names>E.J.</given-names></string-name>, <string-name><surname>van Hemert</surname><given-names>M.J.</given-names></string-name>, <string-name><surname>Bujnicki</surname><given-names>J.M.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Genome-wide mapping of SARS-CoV-2 RNA structures identifies therapeutically-relevant elements</article-title>. <source>Nucleic Acids Res.</source><year>2020</year>; <volume>48</volume>:<fpage>12436</fpage>–<lpage>12452</lpage>.<pub-id pub-id-type="pmid">33166999</pub-id></mixed-citation>
    </ref>
    <ref id="B42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wu</surname><given-names>F.</given-names></string-name>, <string-name><surname>Zhao</surname><given-names>S.</given-names></string-name>, <string-name><surname>Yu</surname><given-names>B.</given-names></string-name>, <string-name><surname>Chen</surname><given-names>Y.-M.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>W.</given-names></string-name>, <string-name><surname>Song</surname><given-names>Z.-G.</given-names></string-name>, <string-name><surname>Hu</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Tao</surname><given-names>Z.-W.</given-names></string-name>, <string-name><surname>Tian</surname><given-names>J.-H.</given-names></string-name>, <string-name><surname>Pei</surname><given-names>Y.-Y.</given-names></string-name><etal>et al</etal>.</person-group><article-title>A new coronavirus associated with human respiratory disease in China</article-title>. <source>Nature</source>. <year>2020</year>; <volume>579</volume>:<fpage>265</fpage>–<lpage>269</lpage>.<pub-id pub-id-type="pmid">32015508</pub-id></mixed-citation>
    </ref>
    <ref id="B43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Morandi</surname><given-names>E.</given-names></string-name>, <string-name><surname>Manfredonia</surname><given-names>I.</given-names></string-name>, <string-name><surname>Simon</surname><given-names>L.M.</given-names></string-name>, <string-name><surname>Anselmi</surname><given-names>F.</given-names></string-name>, <string-name><surname>van Hemert</surname><given-names>M.J.</given-names></string-name>, <string-name><surname>Oliviero</surname><given-names>S.</given-names></string-name>, <string-name><surname>Incarnato</surname><given-names>D.</given-names></string-name></person-group><article-title>Genome-scale deconvolution of RNA structure ensembles</article-title>. <source>Nat. Methods</source>. <year>2021</year>; <volume>18</volume>:<fpage>249</fpage>–<lpage>252</lpage>.<pub-id pub-id-type="pmid">33619392</pub-id></mixed-citation>
    </ref>
    <ref id="B44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ziv</surname><given-names>O.</given-names></string-name>, <string-name><surname>Price</surname><given-names>J.</given-names></string-name>, <string-name><surname>Shalamova</surname><given-names>L.</given-names></string-name>, <string-name><surname>Kamenova</surname><given-names>T.</given-names></string-name>, <string-name><surname>Goodfellow</surname><given-names>I.</given-names></string-name>, <string-name><surname>Weber</surname><given-names>F.</given-names></string-name>, <string-name><surname>Miska</surname><given-names>E.A.</given-names></string-name></person-group><article-title>The short- and long-range RNA–RNA interactome of SARS-CoV-2</article-title>. <source>Mol. Cell</source>. <year>2020</year>; <volume>80</volume>:<fpage>1067</fpage>–<lpage>1077</lpage>.<pub-id pub-id-type="pmid">33259809</pub-id></mixed-citation>
    </ref>
    <ref id="B45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rangan</surname><given-names>R.</given-names></string-name>, <string-name><surname>Zheludev</surname><given-names>I.N.</given-names></string-name>, <string-name><surname>Hagey</surname><given-names>R.J.</given-names></string-name>, <string-name><surname>Pham</surname><given-names>E.A.</given-names></string-name>, <string-name><surname>Wayment-Steele</surname><given-names>H.K.</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>J.S.</given-names></string-name>, <string-name><surname>Das</surname><given-names>R.</given-names></string-name></person-group><article-title>RNA genome conservation and secondary structure in SARS-CoV-2 and SARS-related viruses: a first look</article-title>. <source>RNA</source>. <year>2020</year>; <volume>26</volume>:<fpage>937</fpage>–<lpage>959</lpage>.<pub-id pub-id-type="pmid">32398273</pub-id></mixed-citation>
    </ref>
    <ref id="B46">
      <label>46.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Madhugiri</surname><given-names>R.</given-names></string-name>, <string-name><surname>Fricke</surname><given-names>M.</given-names></string-name>, <string-name><surname>Marz</surname><given-names>M.</given-names></string-name>, <string-name><surname>Ziebuhr</surname><given-names>J.</given-names></string-name></person-group><article-title>Coronavirus cis-acting RNA elements</article-title>. <source>Adv. Virus Res.</source><year>2016</year>; <volume>96</volume>:<fpage>127</fpage>–<lpage>163</lpage>.<pub-id pub-id-type="pmid">27712622</pub-id></mixed-citation>
    </ref>
    <ref id="B47">
      <label>47.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sun</surname><given-names>L.</given-names></string-name>, <string-name><surname>Li</surname><given-names>P.</given-names></string-name>, <string-name><surname>Ju</surname><given-names>X.</given-names></string-name>, <string-name><surname>Rao</surname><given-names>J.</given-names></string-name>, <string-name><surname>Huang</surname><given-names>W.</given-names></string-name>, <string-name><surname>Ren</surname><given-names>L.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>S.</given-names></string-name>, <string-name><surname>Xiong</surname><given-names>T.</given-names></string-name>, <string-name><surname>Xu</surname><given-names>K.</given-names></string-name>, <string-name><surname>Zhou</surname><given-names>X.</given-names></string-name><etal>et al</etal>.</person-group><article-title>In vivo structural characterization of the SARS-CoV-2 RNA genome identifies host proteins vulnerable to repurposed drugs</article-title>. <source>Cell</source>. <year>2021</year>; <volume>184</volume>:<fpage>1865</fpage>–<lpage>1883</lpage>.<pub-id pub-id-type="pmid">33636127</pub-id></mixed-citation>
    </ref>
    <ref id="B48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Iserman</surname><given-names>C.</given-names></string-name>, <string-name><surname>Roden</surname><given-names>C.A.</given-names></string-name>, <string-name><surname>Boerneke</surname><given-names>M.A.</given-names></string-name>, <string-name><surname>Sealfon</surname><given-names>R.S.</given-names></string-name>, <string-name><surname>McLaughlin</surname><given-names>G.A.</given-names></string-name>, <string-name><surname>Jungreis</surname><given-names>I.</given-names></string-name>, <string-name><surname>Fritch</surname><given-names>E.J.</given-names></string-name>, <string-name><surname>Hou</surname><given-names>Y.J.</given-names></string-name>, <string-name><surname>Ekena</surname><given-names>J.</given-names></string-name>, <string-name><surname>Weidmann</surname><given-names>C.A.</given-names></string-name><etal>et al</etal>.</person-group><article-title>Genomic RNA elements drive phase separation of the SARS-CoV-2 nucleocapsid</article-title>. <source>Mol. Cell</source>. <year>2020</year>; <volume>80</volume>:<fpage>1078</fpage>–<lpage>1091</lpage>.<pub-id pub-id-type="pmid">33290746</pub-id></mixed-citation>
    </ref>
    <ref id="B49">
      <label>49.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilkinson</surname><given-names>K.A.</given-names></string-name>, <string-name><surname>Merino</surname><given-names>E.J.</given-names></string-name>, <string-name><surname>Weeks</surname><given-names>K.M.</given-names></string-name></person-group><article-title>Selective 2’-hydroxyl acylation analyzed by primer extension (SHAPE): quantitative RNA structure analysis at single nucleotide resolution</article-title>. <source>Nat. Protoc.</source><year>2006</year>; <volume>1</volume>:<fpage>1610</fpage>–<lpage>1616</lpage>.<pub-id pub-id-type="pmid">17406453</pub-id></mixed-citation>
    </ref>
    <ref id="B50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deigan</surname><given-names>K.E.</given-names></string-name>, <string-name><surname>Li</surname><given-names>T.W.</given-names></string-name>, <string-name><surname>Mathews</surname><given-names>D.H.</given-names></string-name>, <string-name><surname>Weeks</surname><given-names>K.M.</given-names></string-name></person-group><article-title>Accurate SHAPE-directed RNA structure determination</article-title>. <source>Proc. Natl Acad. Sci. USA</source>. <year>2009</year>; <volume>106</volume>:<fpage>97</fpage>–<lpage>102</lpage>.<pub-id pub-id-type="pmid">19109441</pub-id></mixed-citation>
    </ref>
    <ref id="B51">
      <label>51.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cordero</surname><given-names>P.</given-names></string-name>, <string-name><surname>Kladwang</surname><given-names>W.</given-names></string-name>, <string-name><surname>VanLang</surname><given-names>C.C.</given-names></string-name>, <string-name><surname>Das</surname><given-names>R.</given-names></string-name></person-group><article-title>Quantitative dimethyl sulfate mapping for automated RNA secondary structure inference</article-title>. <source>Biochemistry</source>. <year>2012</year>; <volume>51</volume>:<fpage>7037</fpage>–<lpage>7039</lpage>.<pub-id pub-id-type="pmid">22913637</pub-id></mixed-citation>
    </ref>
    <ref id="B52">
      <label>52.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Do</surname><given-names>C.</given-names></string-name>, <string-name><surname>Woods</surname><given-names>D.</given-names></string-name>, <string-name><surname>Batzoglou</surname><given-names>S.</given-names></string-name></person-group><article-title>CONTRAfold: RNA secondary structure prediction without physics-based models</article-title>. <source>Bioinformatics</source>. <year>2006</year>; <volume>22</volume>:<fpage>e90</fpage>–<lpage>e98</lpage>.<pub-id pub-id-type="pmid">16873527</pub-id></mixed-citation>
    </ref>
    <ref id="B53">
      <label>53.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huang</surname><given-names>Y.</given-names></string-name>, <string-name><surname>Yang</surname><given-names>C.</given-names></string-name>, <string-name><surname>Xu</surname><given-names>X.-f.</given-names></string-name>, <string-name><surname>Xu</surname><given-names>W.</given-names></string-name>, <string-name><surname>Liu</surname><given-names>S.-w.</given-names></string-name></person-group><article-title>Structural and functional properties of SARS-CoV-2 spike protein: potential antivirus drug development for COVID-19</article-title>. <source>Acta Pharmacol. Sin.</source><year>2020</year>; <volume>41</volume>:<fpage>1141</fpage>–<lpage>1149</lpage>.<pub-id pub-id-type="pmid">32747721</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Genomics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Genomics</journal-id>
    <journal-title-group>
      <journal-title>BMC Genomics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2164</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7041101</article-id>
    <article-id pub-id-type="publisher-id">6569</article-id>
    <article-id pub-id-type="doi">10.1186/s12864-020-6569-1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GSAlign: an efficient sequence alignment tool for intra-species genomes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Lin</surname>
          <given-names>Hsin-Nan</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Hsu</surname>
          <given-names>Wen-Lian</given-names>
        </name>
        <address>
          <email>hsu@iis.sinica.edu.tw</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2287 1366</institution-id><institution-id institution-id-type="GRID">grid.28665.3f</institution-id><institution>Institute of Information Science, Academia Sinica, </institution></institution-wrap>Taipei, Taiwan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>24</day>
      <month>2</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>24</day>
      <month>2</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>182</elocation-id>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>9</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>2</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Personal genomics and comparative genomics are becoming more important in clinical practice and genome research. Both fields require sequence alignment to discover sequence conservation and variation. Though many methods have been developed, some are designed for small genome comparison while some are not efficient for large genome comparison. Moreover, most existing genome comparison tools have not been evaluated the correctness of sequence alignments systematically. A wrong sequence alignment would produce false sequence variants.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">In this study, we present GSAlign that handles large genome sequence alignment efficiently and identifies sequence variants from the alignment result. GSAlign is an efficient sequence alignment tool for intra-species genomes. It identifies sequence variations from the sequence alignments. We estimate performance by measuring the correctness of predicted sequence variations. The experiment results demonstrated that GSAlign is not only faster than most existing state-of-the-art methods, but also identifies sequence variants with high accuracy.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">As more genome sequences become available, the demand for genome comparison is increasing. Therefore an efficient and robust algorithm is most desirable. We believe GSAlign can be a useful tool. It exhibits the abilities of ultra-fast alignment as well as high accuracy and sensitivity for detecting sequence variations.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genome comparison</kwd>
      <kwd>Sequence alignment</kwd>
      <kwd>Variation detection</kwd>
      <kwd>Personal genomics</kwd>
      <kwd>Comparative genomics</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100004663</institution-id>
            <institution>Ministry of Science and Technology, Taiwan</institution>
          </institution-wrap>
        </funding-source>
        <award-id>105-2319-B-400-002</award-id>
        <principal-award-recipient>
          <name>
            <surname>Hsu</surname>
            <given-names>Wen-Lian</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par12">With the development of sequencing technology, the cost of whole genome sequencing is dropping rapidly. Sequencing the first human genome cost $2.7 billion in 2001; however, several commercial parties have claimed that the $1000 barrier for sequencing an entire human genome is broken [<xref ref-type="bibr" rid="CR1">1</xref>]. Therefore, it is foreseeable that genome sequencing will become a reality in clinical practices in the near future, which brings the study of personal genomics and comparative genomics. Personal genomics involves the sequencing, analysis and interpretation of the genome of an individual. It can offer many clinical applications, particularly in the diagnosis of genetic deficiencies and human diseases [<xref ref-type="bibr" rid="CR2">2</xref>]. Comparative genomics is another field to study the genomic features of different organisms. It aims to understand the structure and function of genomes by identifying regions with similar sequences between characterized organisms.</p>
    <p id="Par13">Both personal genomics and comparative genomics require sequence alignment to discover sequence conservation and variation. Sequence conservation patterns can be helpful to predict functional categories, whereas variation can be helpful to infer relationship between organisms or populations in different areas. Studies have shown that variation is important to human health and common genetic disease [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR5">5</xref>]. The alignment speed is an important issue since a genome sequence usually consists of millions of nucleotides or more. Methods based on the traditional alignment algorithms, like AVID [<xref ref-type="bibr" rid="CR6">6</xref>], BLAST [<xref ref-type="bibr" rid="CR7">7</xref>] and FASTA [<xref ref-type="bibr" rid="CR8">8</xref>], are not able to handle large scale sequence alignment. Many genome comparison algorithms have been developed, including ATGC [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR10">10</xref>], BBBWT [<xref ref-type="bibr" rid="CR11">11</xref>], BLAT [<xref ref-type="bibr" rid="CR12">12</xref>], BLASTZ [<xref ref-type="bibr" rid="CR13">13</xref>], Cgaln [<xref ref-type="bibr" rid="CR14">14</xref>], chainCleaner [<xref ref-type="bibr" rid="CR15">15</xref>], Harvest [<xref ref-type="bibr" rid="CR16">16</xref>], LAGAN [<xref ref-type="bibr" rid="CR17">17</xref>], LAST [<xref ref-type="bibr" rid="CR18">18</xref>], MAGIC [<xref ref-type="bibr" rid="CR19">19</xref>], MUMmer [<xref ref-type="bibr" rid="CR20">20</xref>–<xref ref-type="bibr" rid="CR23">23</xref>], and minimap2 [<xref ref-type="bibr" rid="CR24">24</xref>] .</p>
    <p id="Par14">One of important applications of genome comparison is to identify sequence variations between genomes, which can be found by linearly scanning their alignment result. However, none of the above-mentioned methods have been evaluated the correctness of sequence alignment regarding variation detection. A wrong sequence alignment would produce false sequence variants. In this study, we estimated the performance of each selected genome sequence comparison tool by measuring the correctness of sequence variation. We briefly summarized the algorithm behind each pairwise genome sequence alignment tool in <xref rid="MOESM1" ref-type="media">Table S1</xref>(Supplementary data). The alignment algorithms can be classified into two groups: seed-and-extend and seed-chain-align, and the seeding schemes can be K-mer, minimizer, suffix tree, suffix array, or BWT.</p>
    <p id="Par15">Recently, many NGS read mapping algorithms use Burrows Wheeler Transformation (BWT) [<xref ref-type="bibr" rid="CR25">25</xref>] or FM-index [<xref ref-type="bibr" rid="CR26">26</xref>] to build an index for the reference sequences and identify maximal exact matches by searching against the index array with a query sequence. It has been shown that BWT-based read mappers are more memory efficient than hash table based mappers [<xref ref-type="bibr" rid="CR27">27</xref>]. In this study, we used BWT to perform seed exploration for genome sequence alignment. We demonstrated that GSAlign is efficient in finding both exact matches and differences between two intra-species genomes. The differences include all single nucleotide polymorphisms (SNPs), insertions, and deletions. Moreover, the alignment is ultra-fast and memory efficient. The source code of GSAlign is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/hsinnan75/GenAlign">https://github.com/hsinnan75/GSAlign</ext-link>.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <p id="Par16">The algorithm of GSAlign is derived from our DNA read mapper, Kart [<xref ref-type="bibr" rid="CR28">28</xref>]. Kart adopts a divide-and-conquer strategy to separate a read into regions with and without differences. The same strategy is applicable to genome sequence alignment. However, in contrast with NGS short read alignment, genome sequence alignment often consists of multiple sub-alignments that are separated by dissimilar regions or variants. In this study, we present GSAlign for handling genome sequence alignment.</p>
    <sec id="Sec3">
      <title>Algorithm overview</title>
      <p id="Par17">Similar to MUMmer4 and Minimap2, GSAlign also follows the “seed-chain-align” procedure to perform genome sequence alignment. However, the details of each step are quite different. Figure <xref rid="Fig1" ref-type="fig">1</xref> illustrates the workflow of GSAlign. It consists of three main steps: <italic>LMEM identification (seed)</italic>, <italic>similar region identification (chain)</italic>, and <italic>alignment processing (align)</italic>. We define a <italic>local maximal exact match</italic> (LMEM) as a common substring between two genomes that begins at a specific position of query sequence. In the LMEM identification step, GSAlign finds LMEMs with variable relengths and then converts those LMEMs into simple pairs. A simple pair represents a pair of identical sequence fragments, one from the reference and one from the query sequence. In the similar region identification, GSAlign clusters those simple pairs into disjoint groups. Each group represents a similar region. GSAlign then finds all local gaps in each similar region. A local gap (defined as a normal pair) is the gap between two adjacent simple pairs. In the alignment-processing step, GSAlign closes gaps to build a complete local alignment for each similar region and identifies all sequence variations during the process. Finally, GSAlign outputs the alignments of all similar regions, a VCF (variant call format) file, and a dot-plot representation (optional). The contribution of this study is that we optimize those steps and integrate them into a very efficient algorithm that saves both time and memory and produces reliable alignments.
<fig id="Fig1"><label>Fig. 1</label><caption><p>The flowchart of GSAlign. Each rectangle is an LMEM (simple pair) and the width is the size of the LMEM. They are then clustered into similar regions, each of which consists of adjacent LMEMs and gaps in between. We then perform gapped/un-gapped alignment to close those gaps to build the complete alignment for each similar region</p></caption><graphic xlink:href="12864_2020_6569_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>Burrows-Wheeler transform</title>
      <p id="Par18">We give a brief background of BWT algorithm below. Consider a text <italic>T</italic> of length <italic>L</italic> over an alphabet set Σ; <italic>T</italic> is attached with symbol <italic>$</italic> at the end, and <italic>$</italic> is lexicographically smaller than any character in Σ. Let <italic>SA</italic>[0, <italic>L</italic>] be the suffix array of <italic>T</italic>, such that <italic>SA</italic>[<italic>i</italic>] indicates the starting position of the <italic>i</italic>-th lexicographically smallest suffix. The BWT of <italic>T</italic> is a permutation of <italic>T</italic> such that <italic>BWT</italic>[<italic>i</italic>] = <italic>T</italic>[SA[<italic>i</italic>] − 1] (Note that if <italic>SA</italic>[<italic>i</italic>] = 0, <italic>BWT</italic>[<italic>i</italic>] = <italic>$</italic>). Given a pattern <italic>S</italic>, suppose SA[<italic>i</italic>] and SA[<italic>j</italic>] are the smallest and largest suffices of <italic>T</italic> where <italic>P</italic> is their common prefix, the range [<italic>i</italic>, <italic>j</italic>] indicates the occurrences of <italic>S</italic>. Thus, given an SA range [<italic>i</italic>, <italic>j</italic>] of pattern <italic>P</italic>, we can apply the backward search algorithm to find the SA range [<italic>p</italic>, <italic>q</italic>] of <italic>zP</italic> for any character <italic>z</italic>. If we build the BWT with the reverse of <italic>T</italic>, the backward search algorithm can be used to test whether a pattern <italic>P</italic> is an exact substring of <italic>T</italic> in <italic>O</italic>(|<italic>P</italic>|) time by iteratively matching each character in <italic>P</italic>. One of the BWT index algorithms was implemented in BWT-SW [<xref ref-type="bibr" rid="CR29">29</xref>] and it was then modified to work with BWA [<xref ref-type="bibr" rid="CR27">27</xref>]. For the details of BWT index algorithm and the search algorithm, please refer to the above-mentioned methods and Kart.</p>
    </sec>
    <sec id="Sec5">
      <title>LMEM identification</title>
      <p id="Par19">Given two genome sequences <italic>P</italic> and <italic>Q</italic>, GSAlign generates the BWT array with <italic>P</italic> and its reverse complementary sequence <italic>P′</italic>. Let <italic>P</italic>[<italic>i</italic><sub>1</sub>] be the <italic>i</italic><sub>1</sub>-th nucleobase of <italic>P</italic>, and <italic>P</italic>[<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>] be the sequence fragment between <italic>P</italic>[<italic>i</italic><sub>1</sub>] and <italic>P</italic>[<italic>i</italic><sub>2</sub>]. GSAlign finds LMEMs by searching against the BWT array with <italic>Q</italic>. Since each LMEM is a common substring that begins at a specific position of <italic>Q</italic>, it is represented as a <italic>simple pair</italic> (i.e., identical fragment pair) in this study and denoted by a 4-tuple (<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>, <italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>), meaning <italic>P</italic>[<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>] = <italic>Q</italic>[<italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>] and <italic>P</italic>[<italic>i</italic><sub>2</sub> + 1] ≠ <italic>Q</italic>[<italic>j</italic><sub>2</sub> + 1]. If the common substring appears multiple times (i.e., frequency &gt; 1), it would be transformed into multiple simple pairs. For example, if the substring <italic>Q</italic>[<italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>] is identical to <italic>P</italic>[<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>] and <italic>P</italic>[<italic>i</italic><sub>3</sub>, <italic>i</italic><sub>4</sub>], it would be represented as two simple pairs (<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>, <italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>) and (<italic>i</italic><sub>3</sub>, <italic>i</italic><sub>4</sub>, <italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>). Note that an LMEM is transformed into simple pairs only if its size is not smaller than a user-defined threshold <italic>k</italic> and its occurrences are less than <italic>f</italic>. We investigate the effect of threshold <italic>k</italic> and <italic>f</italic> in the <xref rid="MOESM1" ref-type="media">Table S2</xref> (Supplementary data) and we found that GSAlign performs equally well with different thresholds.</p>
      <p id="Par20">The BWT search iteratively matches every nucleotide of the query genome <italic>Q</italic>. It begins with <italic>Q</italic>[<italic>j</italic><sub>1</sub>] (<italic>j</italic><sub>1</sub> = 0 at the first iteration) and stops at <italic>Q</italic>[<italic>j</italic><sub>2</sub>] if it meets a mismatch at <italic>Q</italic>[<italic>j</italic><sub>2</sub> + 1], i.e., the SA range of <italic>Q</italic>[<italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub> + 1] = 0. The next iteration of BWT search will start from <italic>Q</italic>[<italic>j</italic><sub>2</sub> + 1] until it meets another mismatch. When GSAlign is running with sensitive mode, the next iteration of BWT search starts from <italic>Q</italic>[<italic>j</italic><sub>1</sub> + 5] instead of <italic>Q</italic>[<italic>j</italic><sub>2</sub> + 1]. In doing so, GSAlign is less likely to miss true LMEMs due to false overlaps between <italic>P</italic> and <italic>Q</italic>. The search procedure terminates until it reaches the end of genome <italic>Q</italic>.</p>
      <p id="Par21">Please note that the LMEM identification can be processed simultaneously if GSAlign runs with multiple threads. For each query sequence in <italic>Q</italic>, GSAlign divides it into <italic>N</italic> blocks of equal size when it is running with <italic>N</italic> threads and each thread identifies LMEMs for a sequence block independently. The multithreading can be also applied in the following alignment step. We will demonstrate that such parallel processing greatly speedup the alignment process.</p>
    </sec>
    <sec id="Sec6">
      <title>Similar region identification</title>
      <p id="Par22">After collecting all simple pairs, GSAlign sorts all simple pairs according to their position differences between genomes <italic>P</italic> and <italic>Q</italic> and clusters those into disjoint groups. The clustering algorithm is described below.</p>
      <p id="Par23">Suppose <italic>S</italic><sub><italic>k</italic></sub> is a simple pair (<italic>i</italic><sub><italic>k</italic>,1</sub>, <italic>i</italic><sub><italic>k</italic>,2</sub>, <italic>j</italic><sub><italic>k</italic>,1</sub>, <italic>j</italic><sub><italic>k</italic>,2</sub>), we define <italic>PosDiff</italic><sub><italic>k</italic></sub> = <italic>i</italic><sub><italic>k</italic>,1</sub><italic>− j</italic><sub><italic>k</italic>,1</sub>. If two simple pairs have similar <italic>PosDiff</italic>, they are co-linear. We sort all simple pairs according to their <italic>PosDiff</italic> to group all co-linear simple pairs. The clustering starts with the first simple pair <italic>S</italic><sub><italic>1</italic></sub> and we check if the next simple pair (<italic>S</italic><sub><italic>2</italic></sub>) is within a threshold <italic>MaxDiff</italic> (the default value is 25). The size of <italic>MaxDiff</italic> determines the maximum indel size allowed between two simple pairs. If |<italic>PosDiff</italic><sub><italic>1</italic></sub> <italic>− PosDiff</italic><sub><italic>2</italic></sub>| ≤ <italic>MaxDiff</italic>, we then check the PosDiff of <italic>S</italic><sub><italic>2</italic></sub> and <italic>S</italic><sub><italic>3</italic></sub> until we find two simple pairs <italic>S</italic><sub><italic>k</italic></sub> and <italic>S</italic><sub><italic>k + 1</italic></sub> whose |<italic>PosDiff</italic><sub><italic>k</italic></sub> <italic>− PosDiff</italic><sub><italic>k + 1</italic></sub>| &gt; <italic>MaxDiff</italic>. In such cases, the clustering breaks at <italic>S</italic><sub><italic>k + 1</italic></sub> and simple pairs <italic>S</italic><sub><italic>1</italic></sub>, <italic>S</italic><sub><italic>2</italic></sub>, …, <italic>S</italic><sub><italic>k</italic></sub> are clustered in the same group. We investigate the performance of GSAlign with different values of MaxDiff and summarize the analysis in <xref rid="MOESM1" ref-type="media">Table S3</xref> (Supplementary data).</p>
      <p id="Par24">We then re-sort <italic>S</italic><sub><italic>1</italic></sub>, <italic>S</italic><sub><italic>2</italic></sub>, …, <italic>S</italic><sub><italic>k</italic></sub> by their positions at sequence Q (i.e., the third value of 4-tuple). Since simple pairs are re-sorted by their positions at sequence Q, some of them may be not co-linear with their adjacent simple pairs and they are considered as outliers. We remove those outliers from the simple pair group. A simple pair <italic>S</italic><sub><italic>m</italic></sub> is considered as an outlier if |<italic>PosDiff</italic><sub><italic>m</italic></sub> <italic>− PosDiff</italic><sub><italic>m − 1</italic></sub>| &gt; 5 and |<italic>PosDiff</italic><sub><italic>m</italic></sub> <italic>− PosDiff</italic><sub><italic>m + 1</italic></sub>| &gt; 5 where <italic>S</italic><sub><italic>m-1</italic></sub>, <italic>S</italic><sub><italic>m</italic></sub> and <italic>S</italic><sub><italic>m +</italic> 1</sub> are adjacent. In such cases, we will perform a dynamic programming to handle the gap between <italic>S</italic><sub><italic>m-1</italic></sub> and <italic>S</italic><sub><italic>m + 1</italic></sub>.</p>
      <p id="Par25">For those simple pairs of same positions at sequence Q (i.e., the fragment of Q has multiple occurrences in P), we keep the one with the minimal difference of <italic>PosDiff</italic> compared to the closest unique simple pair. Then we check every two adjacent simple pairs <italic>s</italic><sub><italic>a</italic></sub> = (<italic>i</italic><sub>a,1</sub>, <italic>i</italic><sub>a,2</sub>, <italic>j</italic><sub>a,1</sub>, <italic>j</italic><sub>a,2</sub>) and <italic>s</italic><sub><italic>b</italic></sub> = (<italic>i</italic><sub>b,1</sub>, <italic>i</italic><sub>b,2</sub>, <italic>j</italic><sub>b,1</sub>, <italic>j</italic><sub>b,2</sub>), we define gap(<italic>S</italic><sub><italic>a</italic></sub>, <italic>S</italic><sub><italic>b</italic></sub>) = <italic>j</italic><sub><italic>b</italic>,1</sub> <italic>− j</italic><sub><italic>a</italic>,2</sub>. If gap(<italic>S</italic><sub><italic>a</italic></sub>, <italic>S</italic><sub><italic>b</italic></sub>) is more than 300 bp and the sequence fragments in the gap are dissimilar, we consider <italic>S</italic><sub><italic>b</italic></sub> as a break point of a similar region. To determine whether the sequence fragment in a gap are similar, we use k-mers to estimate their similarity. If the number of common k-mers is less than gap(<italic>S</italic><sub><italic>a</italic></sub>, <italic>S</italic><sub><italic>b</italic></sub>) / 3, they are considered dissimilar. In such cases, we consider <italic>S</italic><sub><italic>b</italic></sub> as a break point of a similar region, and <italic>S</italic><sub><italic>b</italic></sub> will initiate another similar region. We investigate different gap size thresholds in the <xref rid="MOESM1" ref-type="media">Table S4</xref> (Supplementary data) and found that GSAlign was not sensitive to the threshold. The simple pair clustering will be continued with the next un-clustered simple pair until all simple pairs are visited.</p>
      <p id="Par26">We use an example to illustrate the process of simple pair clustering and outlier removing. Suppose GSAlign identifies nine simple pairs as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>a. We sort these simple pairs by their PosDiff and start clustering with S<sub>1</sub>. Simple pairs <italic>S</italic><sub><italic>1</italic></sub>, <italic>S</italic><sub><italic>2</italic></sub>, …, <italic>S</italic><sub><italic>8</italic></sub> are clustered in the same group since any two adjacent simple pairs in the group have similar PosDiff. For example, |<italic>PosDiff</italic><sub><italic>1</italic></sub> <italic>− PosDiff</italic><sub><italic>2</italic></sub>| = 10, and |<italic>PosDiff</italic><sub><italic>2</italic></sub> <italic>− PosDiff</italic><sub><italic>3</italic></sub>| = 0. By contrast, |<italic>PosDiff</italic><sub><italic>8</italic></sub> <italic>− PosDiff</italic><sub><italic>9</italic></sub>| = 60, we break the clustering at <italic>S</italic><sub>9</sub>. We then re-sort <italic>S</italic><sub><italic>1</italic></sub>, <italic>S</italic><sub><italic>2</italic></sub>, …, <italic>S</italic><sub><italic>8</italic></sub> by their positions at sequence Q as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>b, and mark S<sub>6</sub> and S<sub>7</sub> are not unique since the two simple pairs have the same position at Q. We compare S<sub>6</sub> and S<sub>7</sub> and keep S<sub>6</sub> because it has the minimal difference of <italic>PosDiff</italic> with its neighboring unique simple pairs.
<fig id="Fig2"><label>Fig. 2</label><caption><p>An example illustrating the process of simple clustering and outlier removing. GSAlign clusters simple pairs and remove outliers according to PosDiff. Simple pairs in red are not unique. Simple pairs with gray backgrounds are considered as outliers and they are removed from the cluster</p></caption><graphic xlink:href="12864_2020_6569_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par27">We remove S<sub>1</sub> and S<sub>8</sub> since they are not co-linear with their adjacent simple pairs. S<sub>1</sub> is considered an outlier because |<italic>PosDiff</italic><sub><italic>1</italic></sub> <italic>− PosDiff</italic><sub><italic>3</italic></sub>| &gt; 5 and |<italic>PosDiff</italic><sub><italic>1</italic></sub> <italic>− PosDiff</italic><sub><italic>6</italic></sub>| &gt; 5. After S<sub>1</sub> is removed, the gap between S<sub>3</sub> and S<sub>6</sub> would probably form an un-gapped alignment since they have the same PosDiff. S<sub>8</sub> is also an outlier because |<italic>PosDiff</italic><sub><italic>8</italic></sub> <italic>− PosDiff</italic><sub><italic>5</italic></sub>| &gt; <italic>MaxDiff</italic>. Finally, we confirm there is no any large gap between any two adjacent simple pairs in the group. Thus, the group of S<sub>3</sub>, S<sub>6</sub>, S<sub>2</sub>, S<sub>4</sub>, and S<sub>5</sub> forms a similar region, and upon which we can generate a local alignment.</p>
      <p id="Par28">Given two adjacent simple pairs in the same cluster, <italic>s</italic><sub><italic>a</italic></sub> = (<italic>i</italic><sub>a,1</sub>, <italic>i</italic><sub>a,2</sub>, <italic>j</italic><sub>a,1</sub>, <italic>j</italic><sub>a,2</sub>) and <italic>s</italic><sub><italic>b</italic></sub> = (<italic>i</italic><sub>b,1</sub>, <italic>i</italic><sub>b,2</sub>, <italic>j</italic><sub>b,1</sub>, <italic>j</italic><sub>b,2</sub>), we say <italic>s</italic><sub><italic>a</italic></sub> and <italic>s</italic><sub><italic>b</italic></sub> overlap if <italic>i</italic><sub>a,1</sub> ≤ <italic>i</italic><sub>b,1</sub> ≤ <italic>i</italic><sub>a,2</sub> or <italic>j</italic><sub>a,1</sub> ≤ <italic>j</italic><sub>b,1</sub> ≤ <italic>j</italic><sub>a,2</sub>. In such cases, the overlapping fragment is chopped off from the smaller simple pair. For example, BWT index. Figure <xref rid="Fig3" ref-type="fig">3</xref>. shows a tandem repeat with different copies in genome <italic>P</italic> and <italic>Q</italic>. In this example, “ACGT” is a tandem repeat where <italic>P</italic> has seven copies and <italic>Q</italic> has nine copies. GSAlign identifies two simple pairs in this region: <italic>A</italic> (301, 330, 321, 350) and <italic>B</italic> (323, 335, 351, 363). <italic>A</italic> and <italic>B</italic> overlap between <italic>P</italic>[323, 330]. In such cases, we remove the overlap from the preceding simple pair (i.e., <italic>A</italic>). After removing the overlap, <italic>A</italic> becomes (301, 322, 321, 342) and we create a gap of <italic>Q</italic>[343, 350]. After removing overlaps, we check if there is a gap between any two adjacent simple pairs in each similar region. We fill gaps by inserting normal pairs. A normal pair is also denoted as a 4-tuple (<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>, <italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>) in which <italic>P</italic>[<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>] ≠ <italic>Q</italic>[<italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>] and the size of <italic>P</italic>[<italic>i</italic><sub>1</sub>, <italic>i</italic><sub>2</sub>] or <italic>Q</italic>[<italic>j</italic><sub>1</sub>, <italic>j</italic><sub>2</sub>] can be 0 if one of them is an deletion. Suppose we are given two adjacent simple pairs (<italic>i</italic><sub>2<italic>q</italic>-1</sub>, <italic>i</italic><sub>2<italic>q</italic></sub>, <italic>j</italic><sub>2<italic>q</italic>-1</sub>, <italic>j</italic><sub>2<italic>q</italic></sub>) and (<italic>i</italic><sub>2<italic>q</italic> + 1</sub>, <italic>i</italic><sub>2<italic>q +</italic> 2</sub>, <italic>j</italic><sub>2<italic>q</italic> + 1</sub>, <italic>j</italic><sub>2<italic>q</italic> + 2</sub>). If <italic>i</italic><sub>2<italic>q</italic> + 1</sub> − <italic>i</italic><sub>2<italic>q</italic></sub> &gt; 1 or <italic>j</italic><sub>2<italic>q</italic> + 1</sub> − <italic>j</italic><sub>2<italic>q</italic></sub> &gt; 1, then we insert a normal pair (<italic>i</italic><sub><italic>r</italic></sub>, <italic>i</italic><sub><italic>r</italic> + 1</sub>, <italic>j</italic><sub><italic>r</italic></sub>, <italic>j</italic><sub><italic>r</italic> + 1</sub>) to fill the gap, where <italic>i</italic><sub><italic>r</italic></sub> – <italic>i</italic><sub>2<italic>q</italic></sub> = <italic>i</italic><sub>2<italic>q</italic> + 1</sub> – <italic>i</italic><sub><italic>r</italic> + 1</sub> = 1 if <italic>i</italic><sub>2<italic>q</italic> + 1</sub> − <italic>i</italic><sub>2<italic>q</italic></sub> &gt; 1; otherwise <italic>i</italic><sub><italic>r</italic></sub> = <italic>i</italic><sub><italic>r</italic> + 1</sub> = − 1 meaning the corresponding fragment size is 0. Likewise, <italic>j</italic><sub><italic>r</italic></sub> – <italic>j</italic><sub>2<italic>q</italic></sub> = <italic>j</italic><sub>2<italic>q</italic> + 1</sub> – <italic>j</italic><sub><italic>r</italic> + 1</sub> = 1 if <italic>j</italic><sub>2<italic>q</italic> + 1</sub> − <italic>j</italic><sub>2<italic>q</italic></sub> &gt; 1, otherwise let <italic>j</italic><sub><italic>r</italic></sub> = <italic>j</italic><sub><italic>r</italic> + 1</sub> = − 1.
<fig id="Fig3"><label>Fig. 3</label><caption><p>Simple pairs <bold>a</bold> and <bold>b</bold> overlaps due to tandem repeats of “ACGT”. We remove the overlapped fragment from simple pair A (the preceding one)</p></caption><graphic xlink:href="12864_2020_6569_Fig3_HTML" id="MO3"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Alignment processing</title>
      <p id="Par29">At this point, GSAlign has identified similar regions that consist of simple pairs and normal pairs. In this step, GSAlign only focuses on normal pairs. If the sequence fragments in a normal pair have equal size, it is very likely the sequence fragments only contain substitutions and the un-gapped alignment is already the best alignment; if the sequence fragments contain indels, gapped alignment is required. Therefore, we classify normal pairs into the following types:</p>
      <p id="Par30">1) A normal pair is <italic>Type I</italic> if the fragment pair has equal size and the number of mismatches in a linear scan is less than a threshold;</p>
      <p id="Par31">2) A normal pair is <italic>Type II</italic> if one of the fragment is a null string and the other contains at least one nucleobase;</p>
      <p id="Par32">3) The remaining normal pairs are <italic>Type III;</italic></p>
      <p id="Par33">Thus, only <italic>Type III</italic> require gapped alignment. GSAlign applies the KSW2 algorithm [<xref ref-type="bibr" rid="CR30">30</xref>] to perform gapped alignment. The alignment of each normal pair is constrained by the sequence fragment pair. This allows GSAlign to generate their alignments simultaneously with multiple threads. At the end, the complete alignment of the genome sequences is the concatenation of the alignment of each simple and normal pairs.</p>
    </sec>
    <sec id="Sec8">
      <title>Differences among GSAlign, MUMmer4, and Minimap2</title>
      <p id="Par34">In general, GSAlign, MUMmer4, and Minimap2 follow the conventional seed-chain-align procedure to align genome sequences. However, the implementation details are very different from each other. MUMmer4 combines the ideas of suffix arrays, the longest increasing subsequence (LIS) and Smith-Waterman alignment. Minimap2 uses minimizers (k-mers) as seeds and identifies co-linear seeds as chains. It applies a heuristic algorithm to cluster seeds into chains and it uses dynamic programming to closes between adjacent seeds. GSAlign integrates the ideas of BWT arrays, PosDiff-based clustering and dynamic programming algorithm. GSAlign divides the query sequence into multiple blocks and identifies LMEMs on each block simultaneously using multiple threads. More importantly, GSAlign classifies normal pairs into three types and only <italic>Type III</italic> normal pairs require gapped alignment. This divide-and-conquer strategy not only reduces the number of fragment pairs requiring gapped alignment, but also shortens gap alignment sizes. Furthermore, GSAlign can produce the alignments of normal pairs simultaneously with multi-threads. Though MUMmer4 supports multi-threads to align query sequences in parallel, the concurrency is restricted to the number of sequences in the query.</p>
    </sec>
  </sec>
  <sec id="Sec9">
    <title>Results</title>
    <sec id="Sec10">
      <title>Experiment design</title>
      <p id="Par35">GSAlign takes two genome sequences: one is the reference genome for creating the BWT index, and the other is the query genome for searching against the BWT array. If the reference genome has been indexed beforehand, GSAlign can read the index directly. After comparing the genome sequences, GSAlign outputs all local alignments in MAF format or BLAST-like format, a VCF file, and a dot-plot representation (optional) for each query sequence.</p>
      <p id="Par36">The correctness of sequence alignment is an important issue and variant detection is one of the major applications for genome sequence alignment. Therefore, we estimate the correctness of sequence alignments by measuring the variant detection accuracy. Though most of genome alignment tools do not output variants, we can identify variants by linearly scanning the sequence alignments. This measurement is sensitive to misalignments; thus we consider it is a fair measurement to estimate the performance of sequence alignment.</p>
      <p id="Par37">We randomly generate sequence variations with the frequency of 20,000 substitutions (SNVs), 350 small indels (1~10 bp), 100 large indels (11~20 bp) for every 1 M base pairs. To increase the genetic distance, we generate different frequencies of SNVs. Benchmark datasets labelled with 1X contain around 20,000 SNVs for every 1 M base pairs, whereas datasets labelled with 3X (or 5X) contain 60,000 (or 100,000) SNVs per million bases. We generate three synthetic datasets with different SNV frequencies using the human genome (GRCh38). The synthetic datasets are referred to as simHG-1X, simHG-3X, and simHG-5X, respectively. To evaluate the performance of genome sequence alignment on real genomes, we download the diploid sequence of NA12878 genome and its reference variants (the sources are shown in Supplementary data). We also estimate the Average Sequence Identity (ASI) based on the total number of mismatches due to the sequence variants over the genome size. For example, an SNV event produce one mismatch and an indel event of size <italic>n</italic> produces <italic>n</italic> mismatches. Thus, the ASI of the four datasets are 97.93, 93.86, 89.90, and 99.84%, respectively.</p>
      <p id="Par38">The diploid sequence of NA12878 consists of 3,088,156 single nucleotide variants (SNVs) and 531,315 indels. The reference variants are generated from NGS data analysis. Please note that GSAlign is a genome alignment tool, rather than a variant caller such as Freebayes or GATK HaplotypeCaller (GATK-HC). GSAlign identifies variants from genome sequence alignment, while Freebayes and GATK-HC identify variants from NGS short read alignments. We use sequence variants to estimate the correctness of sequence alignment in this study. Table <xref rid="Tab1" ref-type="table">1</xref> shows the genome size, the variant numbers of SNV, small and large indels as well as the ASI of each benchmark dataset.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>The synthetic datasets and the number of simulated sequence variations. The Average Sequence Identity (ASI) is estimated by the total mismatches divided by the number of nucleobases</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Dataset</th><th>Genome size</th><th>SNV</th><th>Small indel</th><th>large indel</th><th>ASI</th></tr></thead><tbody><tr><td>simHG-1X</td><td>3,088,279,342</td><td>58,421,383</td><td>1,001,626</td><td>285,757</td><td>97.93%</td></tr><tr><td>simHG-3X</td><td>3,088,292,247</td><td>175,100,939</td><td>962,721</td><td>275,584</td><td>93.86%</td></tr><tr><td>simHG-5X</td><td>3,088,289,999</td><td>291,714,646</td><td>919,762</td><td>263,271</td><td>89.90%</td></tr><tr><td>NA12878</td><td>6,070,700,436</td><td>3,088,156</td><td>531,315</td><td>NA</td><td>99.84%</td></tr></tbody></table></table-wrap></p>
      <p id="Par39">In this study, we compare the performance of GSAlign with several existing genome sequence aligners, including LAST (version 828), Minimap2 (2.17-r943-dirty), and MUMmer4 (version 4.0.0beta2). We exclude the others because they are either unavailable or developed for multiple sequence alignments, like Cactus [<xref ref-type="bibr" rid="CR31">31</xref>], Mugsy [<xref ref-type="bibr" rid="CR32">32</xref>], or MULTIZ [<xref ref-type="bibr" rid="CR33">33</xref>]. We exclude BLAT because it fails to produce alignments for larger sequence comparison; we exclude LASTZ because it does not support multi-thread. Moreover, LASTZ fails to handle human genome alignment.</p>
    </sec>
    <sec id="Sec11">
      <title>Measurement</title>
      <p id="Par40">We define true positives (TP) as those variants which are correctly identified from the sequence alignment; false positives (FP) as those variants which are incorrectly identified; and false negatives as those true variants which are not identified. A predicted SNV event is considered true if the genomic coordinate is exactly identical to the true event; a predicted indel event is considered true if the predicted coordinate is within 10 nucleobases of the corresponding true event. The precision and recall are defined as follows: precision = TP / (TP + FP) and recall = TP / (TP + FN).</p>
      <p id="Par41">To estimate the performance for existing methods, we filter out sequence alignments whose sequence identity are lower than a threshold (for Mummer4 and LAST) or those whose quality score are 0 (for Minimap2). The argument setting used for each method is shown in the <xref rid="MOESM1" ref-type="media">Table S5</xref> (Supplementary data). We estimate the precision and recall on the identification of sequence variations for each dataset. GSAlign, Minimap2, MUMmer4, and LAST can load premade reference indexes; therefore, we run these methods by feeding the premade reference indexes and they are running with 8 threads.</p>
    </sec>
    <sec id="Sec12">
      <title>Performance evaluation on synthetic datasets</title>
      <p id="Par42">Table <xref rid="Tab2" ref-type="table">2</xref> summarizes the performance result on the three synthetic datasets. It is observed that GSAlign and Minimap2 have comparable performance on the benchmark dataset. Both produce alignments that indicate sequence variations correctly. MUMmer4 and LAST produce less reliable alignments than GSAlign and Minimap2. Though we have filtered out some of alignments based on sequence identity, their precisions and recalls are not as good as those of GSAlign and Minimap2. In particular, the precision of indel events of MUMmer4 and LAST are much lower on the dataset of simHG-5X. It implies that the two methods are not designed for genome sequence alignments with less sequence similarity. We also compare the total number of local alignments each method produces for the benchmark datasets. It is observed that GSAlign produces the least number of local alignments, though it still covers most of the sequence variants. For example, GSAlign produces 250 local alignments for simHG-1X, whereas the other three methods produce 417, 3111 and 1168 local alignments, respectively.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>The performance evaluation on the three GRCh38 synthetic data sets. The indexing time of each method is not included in the run time. They are 110 (BWT-GSAlign), 129 (Suffix array-MUMmer4), and 2.6 min (Minimizer-Minimap2), respectively</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">Dataset</th><th rowspan="2">Method</th><th colspan="2">SNV</th><th colspan="2">Indel</th><th rowspan="2">Local align#</th><th rowspan="2">Run time (min)</th></tr><tr><th>precision</th><th>recall</th><th>precision</th><th>recall</th></tr></thead><tbody><tr><td rowspan="4">SimHG-1X</td><td>GSAlign</td><td>1.000</td><td>1.000</td><td>0.999</td><td>0.999</td><td>250</td><td>11</td></tr><tr><td>Minimap2</td><td>1.000</td><td>0.996</td><td>0.999</td><td>0.995</td><td>417</td><td>39</td></tr><tr><td>MUMmer4</td><td>0.998</td><td>0.932</td><td>0.985</td><td>0.932</td><td>3111</td><td>869</td></tr><tr><td>LAST</td><td>1.000</td><td>0.992</td><td>0.992</td><td>0.947</td><td>1168</td><td>2524</td></tr><tr><td rowspan="4">SimHG-3X</td><td>GSAlign</td><td>1.000</td><td>0.998</td><td>0.994</td><td>0.997</td><td>366</td><td>18</td></tr><tr><td>Minimap2</td><td>1.000</td><td>0.996</td><td>0.991</td><td>0.995</td><td>561</td><td>37</td></tr><tr><td>MUMmer4</td><td>0.989</td><td>0.923</td><td>0.796</td><td>0.925</td><td>4925</td><td>289</td></tr><tr><td>LAST</td><td>1.000</td><td>0.990</td><td>0.809</td><td>0.950</td><td>1234</td><td>1185</td></tr><tr><td rowspan="4">SimHG-5X</td><td>GSAlign</td><td>1.000</td><td>0.993</td><td>0.958</td><td>0.992</td><td>587</td><td>24</td></tr><tr><td>Minimap2</td><td>1.000</td><td>0.995</td><td>0.952</td><td>0.994</td><td>1058</td><td>40</td></tr><tr><td>MUMmer4</td><td>0.986</td><td>0.907</td><td>0.486</td><td>0.912</td><td>5513</td><td>157</td></tr><tr><td>LAST</td><td>1.000</td><td>0.981</td><td>0.461</td><td>0.947</td><td>1636</td><td>458</td></tr></tbody></table></table-wrap></p>
      <p id="Par43">In terms of runtime, it can be observed that GSAlign spends the least amount of runtime on the three datasets. Minimap2 is the second fastest method. Though MUMmer4 is faster than LAST, it produces worse performance than LAST. We observe that LAST is not very efficient with multi-threading. Though it runs with eight threads, it only uses single thread most of time during the sequence comparison. Interestingly, GSAlign spends more time on less similar genome sequences (ex. simHG-5X) because there are more gapped alignments, whereas MUMmer4 and LAST spends more time on more similar genome sequences (ex. simHG-1X) because they handle more number of seeds. Minimap2 spends similar amount of time on the three synthetic datasets because Minimap2 produces similar number of seeds for those datasets. Note that it is possible to speed up the alignment procedure by optimizing the parameter settings for each method; however, it may complicate the comparison.</p>
    </sec>
    <sec id="Sec13">
      <title>Performance evaluation on NA12878</title>
      <p id="Par44">The two sets of diploid sequence of NA12878 are aligned separately and the resulting VCF files are merged together for performance evaluation. Because many indel events of NA12878 locate in tandem repeat regions, we consider a predicted indel is a true positive case if it locates at either end of the repeat region. For example, the two following alignments produce identical alignment scores:</p>
      <p id="Par45">AGCATGCATTG AGCATGCATTG.</p>
      <p id="Par46">AGCAT----TG, and AG----CATTG.</p>
      <p id="Par47">It can be observed that the two alignments produce different indel events.</p>
      <p id="Par48">In such case, both indel events are considered true positives if one of them is a true indel.</p>
      <p id="Par49">Table <xref rid="Tab3" ref-type="table">3</xref> summaries the performance evaluation on the real dataset. It is observed that GSAlign, Minimap2 and LAST produce comparable results on SNV and indel detection. They have similar precisions and recalls. However, their precisions and recalls are much worse than those on synthetic datasets. It seems counter-intuitive since the synthetic datasets contain much more variants than NA12878 genomes. Thus, we reconstruct the NA12878 genome sequence directly from the reference variants and call variants using GSAlign. The precision and recall on SNV detection become 0.996 and 0.998 and those on indel detection become 0.994 and 0.983. It implies that the diploid genome sequence and the reference variants are not fully compatible.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>The performance evaluation on HG38 and the diploid sequence of NA12878. The performance on SNV and Indel detection implies that the diploid genome sequence and the reference variants are not fully compatible</p></caption><table frame="hsides" rules="groups"><thead><tr><th rowspan="2">Dataset</th><th rowspan="2">Method</th><th colspan="2">SNV</th><th colspan="2">Indel</th><th rowspan="2">Run time (min)</th><th rowspan="2">Memory usage (GB)</th></tr><tr><th>Precision</th><th>Recall</th><th>Precision</th><th>Recall</th></tr></thead><tbody><tr><td rowspan="4">NA12878 (Diploid)</td><td>GSAlign</td><td>0.832</td><td>0.969</td><td>0.759</td><td>0.767</td><td>5</td><td>14</td></tr><tr><td>Minimap2</td><td>0.830</td><td>0.970</td><td>0.754</td><td>0.768</td><td>65</td><td>23</td></tr><tr><td>MUMmer4</td><td>0.752</td><td>0.946</td><td>0.711</td><td>0.749</td><td>3898</td><td>57</td></tr><tr><td>LAST</td><td>0.832</td><td>0.969</td><td>0.760</td><td>0.764</td><td>1305</td><td>28</td></tr></tbody></table></table-wrap></p>
      <p id="Par50">In terms of runtime, it is observed that GSAlign only spends 5 min to align the diploid sequences of NA12878 with HG38. Minimap2 is the second fastest method. It spends 65 min. LAST and MUMmer4 spend 1305 and 3898 min, respectively. In terms of memory consumption, it is observed that GSAlign consumes the least amount of memory among the selected methods. It requires 14 GB to perform the genome comparison, while MUMmer4 requires 57 GB.</p>
    </sec>
  </sec>
  <sec id="Sec14">
    <title>Discussion</title>
    <sec id="Sec15">
      <title>Sequence comparison between difference species</title>
      <p id="Par51">Though GSAlign is designed for comparing intra-species genomes, it can be used to identify conserved syntenic regions for inter-species genomes. Here we compare human genomes with whole chimpanzee genome and mouse chromosome 12. We compare human (GRCh38) and chimpanzee (PanTro4) genomes using the four selected tools with 8 threads. Since the ground-truth alignment between GRCh38 and chimpanzee (PanTro4) genomes is unknown, we only show the total alignment length, the predicted SNV and Indel numbers of each alignment tool as well as their run time. We summarize their result in Table <xref rid="Tab4" ref-type="table">4</xref>. Though the genome size PanTro4 is around 3146.6 Mbp, it contains around 2757.6 M known nucleotides. GSAlign spends eight minutes on the genome comparison and generates alignments of total length 2412 Mbp. Minimap2 is the second fastest method and it generates alignments of total length 2791 Mbp. LAST and MUMmer4 are much slower. They generate alignments of total length 2717 and 2661 Mbps, respectively.
<table-wrap id="Tab4"><label>Table 4</label><caption><p>The performance comparison on HG38 and the chimpanzee (PanTro4) genome</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Dataset</th><th>Method</th><th>Alignment length (Mbp)</th><th>SNV#</th><th>Indel#</th><th>Run time (min)</th></tr></thead><tbody><tr><td rowspan="4">GRCh38 Vs. PanTro4</td><td>GSAlign</td><td>2412</td><td>31,710,527</td><td>3,650,337</td><td>8</td></tr><tr><td>Minimap2</td><td>2791</td><td>39,242,895</td><td>4,375,360</td><td>18</td></tr><tr><td>MUMmer4</td><td>2661</td><td>41,545,986</td><td>5,450,956</td><td>1368</td></tr><tr><td>LAST</td><td>2717</td><td>35,815,610</td><td>4,483,929</td><td>884</td></tr></tbody></table></table-wrap></p>
      <p id="Par52">Mouse chromosomes share common ancestry with human chromosomes [<xref ref-type="bibr" rid="CR34">34</xref>]. Here we demonstrate the sequence comparison between human genome and mouse chromosome 12 by showing the dot-plot matrix generated by GSAlign. Though the genome sequences of the two species are very dissimilar, they still share conservation of genetic linkage groups. In this analysis, GSAlign spends three minutes to compare HG38 and mouse chromosome 12 and it generates 2713 local alignments with a total length of 1738 K bases. Among the 22 body human chromosomes, GSAlign discovers that human chromosomes 2, 7 and 14 share the largest number of conserved syntenic segments with mouse chromosome 12. GSAlign visualizes the conserved syntenic segments with a dot-plot presentation in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. The x-axis indicates the positions of mouse chromosome 12, and y-axis indicates the positions of human chromosomes 2, 7 and 14. The orthologous landmarks are plotted based on the pairwise alignments between the three human chromosomes and mouse chromosome 12. Comparing the result with existing studies, we find that the dot-plot is consistent with Fig. <xref rid="Fig4" ref-type="fig">4</xref>f in the study of Mouse Genome Sequencing Consortium [<xref ref-type="bibr" rid="CR34">34</xref>].
<fig id="Fig4"><label>Fig. 4</label><caption><p>The dot-plot of the alignment for human chromosomes 2, 7, and 14 and mouse chromosome 12. The x-axis indicates the positions of mouse chromosome 12, and y-axis indicates the positions of human chromosomes 2, 7 and 14. The orthologous landmarks are plotted based on the pairwise alignments between the three human chromosomes and mouse chromosome 12</p></caption><graphic xlink:href="12864_2020_6569_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec16">
    <title>Conclusions</title>
    <p id="Par53">In this study, we present GSAlign, a new alignment tool that handles genome sequence comparison. We evaluate the correctness of sequence alignment by measuring the accuracy of variant detection. GSAlign adopts the divide-and-conquer strategy to divide genome sequences into gap-free fragment pairs and gapped fragment pairs. GSAlign is a BWT-based genome sequence aligner. Therefore, it requires less amount of memory than hash table-based or tree-based aligners do. GSAlign also supports multi-thread computation, thus it is more efficient when comparing large genomes. We evaluate the performances of GSAlign with synthetic and real datasets. The experiment result shows that GSAlign is the fastest among the selected methods and it produces perfect or nearly perfect precisions and recalls on the identification of sequence variations for most of the datasets. We also found that the diploid genome sequence of NA12878 is not fully compatible with the reference variants derived from NGS data.</p>
    <p id="Par54">As more genome sequences become available, the demand for genome comparison is increasing. Therefore, an efficient and robust algorithm is most desirable. We believe GSAlign can be a useful tool. It shows the abilities of ultra-fast alignment as well as high accuracy and sensitivity for detecting sequence variations.</p>
  </sec>
  <sec id="Sec17">
    <title>Availability and requirements</title>
    <p id="Par55">Project name: GSAlign.</p>
    <p id="Par56">Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/hsinnan75/GSAlign">https://github.com/hsinnan75/GSAlign</ext-link></p>
    <p id="Par57">Operating system: Linux.</p>
    <p id="Par58">Programming language: C/C++.</p>
    <p id="Par59">Other requirements: N/A.</p>
    <p id="Par60">License: MIT License.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec18">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12864_2020_6569_MOESM1_ESM.docx">
            <caption>
              <p><bold>Additional file 1 </bold>: <bold>Table S1</bold>. A summary of several existing genome sequence alignment tools. <bold>Table S2</bold>. The effect of minimal LMEM size k and their maximal frequency f for GSAlign on the Sim_Chr1 dataset. <bold>Table S3</bold>. The effect of MaxPosDiff for GSAlign on the Sim_Chr1 dataset. <bold>Table S4</bold>. The effect of gap size threshold on the Sim_Chr1 dataset. <bold>Table</bold><bold><italic>S5</italic></bold> lists the argument setting for each method tested in this study. Aligner and their arguments used on the benchmark datasets, where fa1 and fa2 are input genomes with FASTA format.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ASI</term>
        <def>
          <p id="Par4">Average Sequence Identity</p>
        </def>
      </def-item>
      <def-item>
        <term>BWT</term>
        <def>
          <p id="Par5">Burrows Wheeler Transformation</p>
        </def>
      </def-item>
      <def-item>
        <term>FN</term>
        <def>
          <p id="Par6">False negative</p>
        </def>
      </def-item>
      <def-item>
        <term>FP</term>
        <def>
          <p id="Par7">False positive</p>
        </def>
      </def-item>
      <def-item>
        <term>LMEM</term>
        <def>
          <p id="Par8">Local maximal exact match</p>
        </def>
      </def-item>
      <def-item>
        <term>SNV</term>
        <def>
          <p id="Par9">Single Nucleotide Variation</p>
        </def>
      </def-item>
      <def-item>
        <term>TP</term>
        <def>
          <p id="Par10">True positive</p>
        </def>
      </def-item>
      <def-item>
        <term>VCF</term>
        <def>
          <p id="Par11">Variant call format</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12864-020-6569-1.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Dr. H. Suzuki, Dr. M. Kasahara, and Dr. Heng Li for their implementation of KSW2 algorithm and BWT indexing algorithm.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author’s contribution</title>
    <p>HNL conceived the study. HNL and WLH designed the algorithms. HNL implemented the algorithms and conducted experiments. HNL and WLH wrote the manuscript. The final version of the manuscript is approved by all authors.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Bioinformatics Core Facility for Translational Medicine and Biotechnology Development from the Ministry of Science and Technology (MOST) of Taiwan under grant 105–2319-B-400-002. The funding bodies played no role in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The datasets supporting the conclusions of this article are available at <ext-link ext-link-type="uri" xlink:href="http://bioapp.iis.sinica.edu.tw/~arith/GSAlign/">http://bioapp.iis.sinica.edu.tw/~arith/GSAlign/</ext-link>.</p>
  </notes>
  <notes>
    <title>Ethics approval and consent to participate</title>
    <p id="Par61">Not applicable.</p>
  </notes>
  <notes>
    <title>Consent for publication</title>
    <p id="Par62">Not applicable.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par63">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>van Ninnwegen</surname>
            <given-names>KJM</given-names>
          </name>
          <name>
            <surname>van Soest</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Veltman</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Nelen</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>van der Wilt</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Vissers</surname>
            <given-names>LELM</given-names>
          </name>
          <name>
            <surname>Grutters</surname>
            <given-names>JPC</given-names>
          </name>
        </person-group>
        <article-title>Is the $1000 Genome as near as we think? A cost analysis of next-generation Sequencing</article-title>
        <source>Clin Chem</source>
        <year>2016</year>
        <volume>62</volume>
        <fpage>1458</fpage>
        <lpage>1464</lpage>
        <pub-id pub-id-type="doi">10.1373/clinchem.2016.258632</pub-id>
        <pub-id pub-id-type="pmid">27630156</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roberts</surname>
            <given-names>NJ</given-names>
          </name>
          <name>
            <surname>Vogelstein</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Parmigiani</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Kinzler</surname>
            <given-names>KW</given-names>
          </name>
          <name>
            <surname>Vogelstein</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Velculescu</surname>
            <given-names>VE</given-names>
          </name>
        </person-group>
        <article-title>The predictive capacity of personal genome sequencing</article-title>
        <source>Sci Transl Med</source>
        <year>2012</year>
        <volume>4</volume>
        <fpage>133ra158</fpage>
        <pub-id pub-id-type="doi">10.1126/scitranslmed.3003380</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sudmant</surname>
            <given-names>PH</given-names>
          </name>
          <name>
            <surname>Rausch</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Gardner</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Handsaker</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>Abyzov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Huddleston</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ye</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Jun</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Hsi-Yang Fritz</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>An integrated map of structural variation in 2,504 human genomes</article-title>
        <source>Nature</source>
        <year>2015</year>
        <volume>526</volume>
        <fpage>75</fpage>
        <lpage>81</lpage>
        <pub-id pub-id-type="doi">10.1038/nature15394</pub-id>
        <pub-id pub-id-type="pmid">26432246</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feuk</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Carson</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Scherer</surname>
            <given-names>SW</given-names>
          </name>
        </person-group>
        <article-title>Structural variation in the human genome</article-title>
        <source>Nat Rev Genet</source>
        <year>2006</year>
        <volume>7</volume>
        <fpage>85</fpage>
        <lpage>97</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg1767</pub-id>
        <pub-id pub-id-type="pmid">16418744</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pang</surname>
            <given-names>AW</given-names>
          </name>
          <name>
            <surname>MacDonald</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Pinto</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rafiq</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Conrad</surname>
            <given-names>DF</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Hurles</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Venter</surname>
            <given-names>JC</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Towards a comprehensive structural variation map of an individual human genome</article-title>
        <source>Genome Biol</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>R52</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2010-11-5-r52</pub-id>
        <pub-id pub-id-type="pmid">20482838</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bray</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Dubchak</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>AVID: a global alignment program</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <volume>13</volume>
        <fpage>97</fpage>
        <lpage>102</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.789803</pub-id>
        <pub-id pub-id-type="pmid">12529311</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Gish</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Basic local alignment search tool</article-title>
        <source>J Mol Biol</source>
        <year>1990</year>
        <volume>215</volume>
        <fpage>403</fpage>
        <lpage>410</lpage>
        <pub-id pub-id-type="doi">10.1016/S0022-2836(05)80360-2</pub-id>
        <pub-id pub-id-type="pmid">2231712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Improved tools for biological sequence comparison</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>1988</year>
        <volume>85</volume>
        <fpage>2444</fpage>
        <lpage>2448</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.85.8.2444</pub-id>
        <pub-id pub-id-type="pmid">3162770</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>del Cuvillo</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tian</surname>
            <given-names>XM</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>GR</given-names>
          </name>
          <name>
            <surname>Girkar</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Performance study of a whole genome comparison tool on a hyper-threading multiprocessor</article-title>
        <source>High Perform Comput</source>
        <year>2003</year>
        <volume>2858</volume>
        <fpage>450</fpage>
        <lpage>457</lpage>
        <pub-id pub-id-type="doi">10.1007/978-3-540-39707-6_40</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Martins WS, Cuvillo J, Cui W, Gao GR. Whole genome alignment using a multithreaded parallel implementation. Pirenopolis: Symposium on Computer Architecture and High Performance Computing; 2001. p. 1–8.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lippert</surname>
            <given-names>RA</given-names>
          </name>
        </person-group>
        <article-title>Space-efficient whole genome comparisons with Burrows-Wheeler transforms</article-title>
        <source>J Comput Biol</source>
        <year>2005</year>
        <volume>12</volume>
        <fpage>407</fpage>
        <lpage>415</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2005.12.407</pub-id>
        <pub-id pub-id-type="pmid">15882139</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kent</surname>
            <given-names>WJ</given-names>
          </name>
        </person-group>
        <article-title>BLAT--the BLAST-like alignment tool</article-title>
        <source>Genome Res</source>
        <year>2002</year>
        <volume>12</volume>
        <fpage>656</fpage>
        <lpage>664</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.229202</pub-id>
        <pub-id pub-id-type="pmid">11932250</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schwartz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kent</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Smit</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Baertsch</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hardison</surname>
            <given-names>RC</given-names>
          </name>
          <name>
            <surname>Haussler</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Human-mouse alignments with BLASTZ</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <volume>13</volume>
        <fpage>103</fpage>
        <lpage>107</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.809403</pub-id>
        <pub-id pub-id-type="pmid">12529312</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nakato</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Gotoh</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>Cgaln: fast and space-efficient whole-genome alignment</article-title>
        <source>BMC Bioinform</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>224</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-224</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Suarez</surname>
            <given-names>HG</given-names>
          </name>
          <name>
            <surname>Langer</surname>
            <given-names>BE</given-names>
          </name>
          <name>
            <surname>Ladde</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hiller</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>ChainCleaner improves genome alignment specificity and sensitivity</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>1596</fpage>
        <lpage>1603</lpage>
        <?supplied-pmid 28108446?>
        <pub-id pub-id-type="pmid">28108446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Ondov</surname>
            <given-names>BD</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>The harvest suite for rapid core-genome alignment and visualization of thousands of intraspecific microbial genomes</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>524</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-014-0524-x</pub-id>
        <pub-id pub-id-type="pmid">25410596</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Brudno</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Do</surname>
            <given-names>CB</given-names>
          </name>
          <name>
            <surname>Cooper</surname>
            <given-names>GM</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Davydov</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Program</surname>
            <given-names>NCS</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>ED</given-names>
          </name>
          <name>
            <surname>Sidow</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Batzoglou</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>LAGAN and multi-LAGAN: efficient tools for large-scale multiple alignment of genomic DNA</article-title>
        <source>Genome Res</source>
        <year>2003</year>
        <volume>13</volume>
        <fpage>721</fpage>
        <lpage>731</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.926603</pub-id>
        <pub-id pub-id-type="pmid">12654723</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kielbasa</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Wan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sato</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Horton</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Frith</surname>
            <given-names>MC</given-names>
          </name>
        </person-group>
        <article-title>Adaptive seeds tame genomic sequence comparison</article-title>
        <source>Genome Res</source>
        <year>2011</year>
        <volume>21</volume>
        <fpage>487</fpage>
        <lpage>493</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.113985.110</pub-id>
        <pub-id pub-id-type="pmid">21209072</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Swidan</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Rocha</surname>
            <given-names>EP</given-names>
          </name>
          <name>
            <surname>Shmoish</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pinter</surname>
            <given-names>RY</given-names>
          </name>
        </person-group>
        <article-title>An integrative method for accurate comparative genome mapping</article-title>
        <source>PLoS Comput Biol</source>
        <year>2006</year>
        <volume>2</volume>
        <fpage>e75</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0020075</pub-id>
        <pub-id pub-id-type="pmid">16933978</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Kasif</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fleischmann</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Peterson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>White</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Alignment of whole genomes</article-title>
        <source>Nucleic Acids Res</source>
        <year>1999</year>
        <volume>27</volume>
        <fpage>2369</fpage>
        <lpage>2376</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/27.11.2369</pub-id>
        <pub-id pub-id-type="pmid">10325427</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Carlton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Fast algorithms for large-scale genome alignment and comparison</article-title>
        <source>Nucleic Acids Res</source>
        <year>2002</year>
        <volume>30</volume>
        <fpage>2478</fpage>
        <lpage>2483</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/30.11.2478</pub-id>
        <pub-id pub-id-type="pmid">12034836</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kurtz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Smoot</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shumway</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Antonescu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Versatile and open software for comparing large genomes</article-title>
        <source>Genome Biol</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>R12</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2004-5-2-r12</pub-id>
        <pub-id pub-id-type="pmid">14759262</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marcais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Coston</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Zimin</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>MUMmer4: A fast and versatile genome alignment system</article-title>
        <source>PLoS Comput Biol</source>
        <year>2018</year>
        <volume>14</volume>
        <fpage>e1005944</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005944</pub-id>
        <pub-id pub-id-type="pmid">29373581</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <fpage>3094</fpage>
        <lpage>3100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Burrows M, Wheeler DJ: A block-sorting lossless data compression algorithm<bold>.</bold> 1994.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Ferragina P, Manzini G: Opportunistic data structures with applications<bold>.</bold> University of Pisa; 2000.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>HN</given-names>
          </name>
          <name>
            <surname>Hsu</surname>
            <given-names>WL</given-names>
          </name>
        </person-group>
        <article-title>Kart: a divide-and-conquer algorithm for NGS read alignment</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>2281</fpage>
        <lpage>2287</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx189</pub-id>
        <pub-id pub-id-type="pmid">28379292</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lam</surname>
            <given-names>TW</given-names>
          </name>
          <name>
            <surname>Sung</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Tam</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>CK</given-names>
          </name>
          <name>
            <surname>Yiu</surname>
            <given-names>SM</given-names>
          </name>
        </person-group>
        <article-title>Compressed indexing and local alignment of DNA</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>791</fpage>
        <lpage>797</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn032</pub-id>
        <pub-id pub-id-type="pmid">18227115</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Suzuki H, Kasahara M. Introducing difference recurrence relations for faster semi-global alignment of long sequences. BMC Bioinformatics. 2018;19;19(Suppl 1):45.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Paten</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Earl</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Nguyen</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Diekhans</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Zerbino</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Haussler</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Cactus: algorithms for genome multiple sequence alignment</article-title>
        <source>Genome Res</source>
        <year>2011</year>
        <volume>21</volume>
        <fpage>1512</fpage>
        <lpage>1528</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.123356.111</pub-id>
        <pub-id pub-id-type="pmid">21665927</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Angiuoli</surname>
            <given-names>SV</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Mugsy: fast multiple alignment of closely related whole genomes</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <fpage>334</fpage>
        <lpage>342</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq665</pub-id>
        <pub-id pub-id-type="pmid">21148543</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blanchette</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kent</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Riemer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Elnitski</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Smit</surname>
            <given-names>AFA</given-names>
          </name>
          <name>
            <surname>Roskin</surname>
            <given-names>KM</given-names>
          </name>
          <name>
            <surname>Baertsch</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rosenbloom</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Clawson</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>ED</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Aligning multiple genomic sequences with the threaded blockset aligner</article-title>
        <source>Genome Res</source>
        <year>2004</year>
        <volume>14</volume>
        <fpage>708</fpage>
        <lpage>715</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.1933104</pub-id>
        <pub-id pub-id-type="pmid">15060014</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mouse Genome Sequencing</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Waterston</surname>
            <given-names>RH</given-names>
          </name>
          <name>
            <surname>Lindblad-Toh</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Rogers</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Abril</surname>
            <given-names>JF</given-names>
          </name>
          <name>
            <surname>Agarwal</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Agarwala</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ainscough</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Alexandersson</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Initial sequencing and comparative analysis of the mouse genome</article-title>
        <source>Nature</source>
        <year>2002</year>
        <volume>420</volume>
        <fpage>520</fpage>
        <lpage>562</lpage>
        <pub-id pub-id-type="doi">10.1038/nature01262</pub-id>
        <pub-id pub-id-type="pmid">12466850</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

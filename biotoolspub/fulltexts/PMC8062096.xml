<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d3 20150301//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">PLoS One</journal-id>
    <journal-id journal-id-type="iso-abbrev">PLoS One</journal-id>
    <journal-id journal-id-type="publisher-id">plos</journal-id>
    <journal-id journal-id-type="pmc">plosone</journal-id>
    <journal-title-group>
      <journal-title>PLoS ONE</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1932-6203</issn>
    <publisher>
      <publisher-name>Public Library of Science</publisher-name>
      <publisher-loc>San Francisco, CA USA</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8062096</article-id>
    <article-id pub-id-type="publisher-id">PONE-D-20-31232</article-id>
    <article-id pub-id-type="doi">10.1371/journal.pone.0249410</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Database Searching</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and analysis methods</subject>
        <subj-group>
          <subject>Database and informatics methods</subject>
          <subj-group>
            <subject>Bioinformatics</subject>
            <subj-group>
              <subject>Sequence analysis</subject>
              <subj-group>
                <subject>BLAST algorithm</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Database Searching</subject>
            <subj-group>
              <subject>Sequence Similarity Searching</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Information Technology</subject>
          <subj-group>
            <subject>Databases</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Bioinformatics</subject>
            <subj-group>
              <subject>Sequence Analysis</subject>
              <subj-group>
                <subject>Sequence Alignment</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Computational Biology</subject>
          <subj-group>
            <subject>Genome Analysis</subject>
            <subj-group>
              <subject>Transcriptome Analysis</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Biology and Life Sciences</subject>
        <subj-group>
          <subject>Genetics</subject>
          <subj-group>
            <subject>Genomics</subject>
            <subj-group>
              <subject>Genome Analysis</subject>
              <subj-group>
                <subject>Transcriptome Analysis</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Biological Databases</subject>
            <subj-group>
              <subject>Sequence Databases</subject>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Research and Analysis Methods</subject>
        <subj-group>
          <subject>Database and Informatics Methods</subject>
          <subj-group>
            <subject>Bioinformatics</subject>
            <subj-group>
              <subject>Sequence Analysis</subject>
              <subj-group>
                <subject>Sequence Databases</subject>
              </subj-group>
            </subj-group>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Computer and Information Sciences</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Computer Software</subject>
          </subj-group>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="Discipline-v3">
        <subject>Engineering and Technology</subject>
        <subj-group>
          <subject>Software Engineering</subject>
          <subj-group>
            <subject>Computer Software</subject>
          </subj-group>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>iBLAST: Incremental BLAST of new sequences via automated e-value correction</article-title>
      <alt-title alt-title-type="running-head">iBLAST: Incremental BLAST of new sequences via automated e-value correction</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0001-5308-914X</contrib-id>
        <name>
          <surname>Dash</surname>
          <given-names>Sajal</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Software</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff001">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id authenticated="true" contrib-id-type="orcid">https://orcid.org/0000-0002-7889-9138</contrib-id>
        <name>
          <surname>Rahman</surname>
          <given-names>Sarthok Rasique</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Data curation</role>
        <role content-type="https://casrai.org/credit/">Formal analysis</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Validation</role>
        <role content-type="https://casrai.org/credit/">Visualization</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
        <xref ref-type="aff" rid="aff004">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hines</surname>
          <given-names>Heather M.</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff003">
          <sup>3</sup>
        </xref>
        <xref ref-type="aff" rid="aff005">
          <sup>5</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Feng</surname>
          <given-names>Wu-chun</given-names>
        </name>
        <role content-type="https://casrai.org/credit/">Conceptualization</role>
        <role content-type="https://casrai.org/credit/">Funding acquisition</role>
        <role content-type="https://casrai.org/credit/">Investigation</role>
        <role content-type="https://casrai.org/credit/">Methodology</role>
        <role content-type="https://casrai.org/credit/">Project administration</role>
        <role content-type="https://casrai.org/credit/">Resources</role>
        <role content-type="https://casrai.org/credit/">Supervision</role>
        <role content-type="https://casrai.org/credit/">Writing – original draft</role>
        <role content-type="https://casrai.org/credit/">Writing – review &amp; editing</role>
        <xref ref-type="aff" rid="aff002">
          <sup>2</sup>
        </xref>
        <xref ref-type="aff" rid="aff006">
          <sup>6</sup>
        </xref>
        <xref ref-type="aff" rid="aff007">
          <sup>7</sup>
        </xref>
        <xref ref-type="aff" rid="aff008">
          <sup>8</sup>
        </xref>
        <xref ref-type="corresp" rid="cor001">*</xref>
      </contrib>
    </contrib-group>
    <aff id="aff001">
      <label>1</label>
      <addr-line>National Center for Computational Sciences, Oak Ridge National Laboratory, Oak Ridge, TN, United States of America</addr-line>
    </aff>
    <aff id="aff002">
      <label>2</label>
      <addr-line>Department of Computer Science, Virginia Tech, Blacksburg, VA, United States of America</addr-line>
    </aff>
    <aff id="aff003">
      <label>3</label>
      <addr-line>Department of Biology, The Pennsylvania State University, University Park, PA, United States of America</addr-line>
    </aff>
    <aff id="aff004">
      <label>4</label>
      <addr-line>Department of Biological Sciences, The University of Alabama, Tuscaloosa, AL, United States of America</addr-line>
    </aff>
    <aff id="aff005">
      <label>5</label>
      <addr-line>Department of Entomology, The Pennsylvania State University, University Park, PA, United States of America</addr-line>
    </aff>
    <aff id="aff006">
      <label>6</label>
      <addr-line>Department of Electrical and Computer Engineering, Virginia Tech, Blacksburg, VA, United States of America</addr-line>
    </aff>
    <aff id="aff007">
      <label>7</label>
      <addr-line>Department of Biomedical Engineering and Mechanics, Virginia Tech, Blacksburg, VA, United States of America</addr-line>
    </aff>
    <aff id="aff008">
      <label>8</label>
      <addr-line>Health Sciences, Virginia Tech, Blacksburg, VA, United States of America</addr-line>
    </aff>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Robinson-Rechavi</surname>
          <given-names>Marc</given-names>
        </name>
        <role>Editor</role>
        <xref ref-type="aff" rid="edit1"/>
      </contrib>
    </contrib-group>
    <aff id="edit1">
      <addr-line>Universite de Lausanne Faculte de biologie et medecine, SWITZERLAND</addr-line>
    </aff>
    <author-notes>
      <fn fn-type="COI-statement" id="coi001">
        <p><bold>Competing Interests: </bold>The authors have declared that no competing interests exist.</p>
      </fn>
      <corresp id="cor001">* E-mail: <email>dashs@ornl.gov</email> (SD); <email>feng@cs.vt.edu</email> (WF)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>4</month>
      <year>2021</year>
    </pub-date>
    <volume>16</volume>
    <issue>4</issue>
    <elocation-id>e0249410</elocation-id>
    <history>
      <date date-type="received">
        <day>5</day>
        <month>10</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>3</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2021 Dash et al</copyright-statement>
      <copyright-year>2021</copyright-year>
      <copyright-holder>Dash et al</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an open access article distributed under the terms of the <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">Creative Commons Attribution License</ext-link>, which permits unrestricted use, distribution, and reproduction in any medium, provided the original author and source are credited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="pone.0249410.pdf"/>
    <abstract>
      <p>Search results from local alignment search tools use statistical scores that are sensitive to the size of the database to report the quality of the result. For example, NCBI BLAST reports the best matches using similarity scores and expect values (i.e., e-values) calculated against the database size. Given the astronomical growth in genomics data throughout a genomic research investigation, sequence databases grow as new sequences are continuously being added to these databases. As a consequence, the results (e.g., best hits) and associated statistics (e.g., e-values) for a specific set of queries may change over the course of a genomic investigation. Thus, to update the results of a previously conducted BLAST search to find the best matches on an <italic>updated</italic> database, scientists must currently rerun the BLAST search against the <italic>entire</italic> updated database, which translates into irrecoverable and, in turn, wasted execution time, money, and computational resources. To address this issue, we devise a novel and efficient method to redeem past BLAST searches by introducing iBLAST. iBLAST leverages previous BLAST search results to conduct the same query search but only on the incremental (i.e., newly added) part of the database, recomputes the associated critical statistics such as e-values, and combines these results to produce updated search results. Our experimental results and fidelity analyses show that iBLAST delivers search results that are identical to NCBI BLAST at a substantially reduced computational cost, i.e., iBLAST performs (1 + <italic>δ</italic>)/<italic>δ</italic> times faster than NCBI BLAST, where <italic>δ</italic> represents the fraction of database growth. We then present three different use cases to demonstrate that iBLAST can enable efficient biological discovery at a much faster speed with a substantially reduced computational cost.</p>
    </abstract>
    <funding-group>
      <award-group id="award001">
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="funder-id">http://dx.doi.org/10.13039/100000001</institution-id>
            <institution>National Science Foundation</institution>
          </institution-wrap>
        </funding-source>
        <award-id>1453473</award-id>
        <principal-award-recipient>
          <name>
            <surname>Hines</surname>
            <given-names>Heather M.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <award-group id="award002">
        <funding-source>
          <institution>ICTAS</institution>
        </funding-source>
        <principal-award-recipient>
          <name>
            <surname>Feng</surname>
            <given-names>Wu-chun</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
      <funding-statement>This work was supported in part by a grant from the Institute for Critical Technology and Applied Science (ICTAS) awarded to W.-c.F. (<ext-link ext-link-type="uri" xlink:href="http://www.ictas.vt.edu">http://www.ictas.vt.edu</ext-link>). Contributions from S.R.R. were supported by the National Science Foundation (NSF) DEB #1453473 awarded to H.M.H. (<ext-link ext-link-type="uri" xlink:href="https://www.nsf.gov/awardsearch/showAward?AWD_ID=1453473">https://www.nsf.gov/awardsearch/showAward?AWD_ID=1453473</ext-link>). The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</funding-statement>
    </funding-group>
    <counts>
      <fig-count count="4"/>
      <table-count count="3"/>
      <page-count count="16"/>
    </counts>
    <custom-meta-group>
      <custom-meta id="data-availability">
        <meta-name>Data Availability</meta-name>
        <meta-value>The transcriptomic raw sequence dataset is publicly available from NCBI BioProject PRJNA716675 (accession ID SRR14053705).</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
  <notes>
    <title>Data Availability</title>
    <p>The transcriptomic raw sequence dataset is publicly available from NCBI BioProject PRJNA716675 (accession ID SRR14053705).</p>
  </notes>
</front>
<body>
  <sec sec-type="intro" id="sec001">
    <title>Introduction</title>
    <p>The utilization of a sequence similarity search tool is an indispensable step in most bioinformatics research involving nucleotide or protein sequences. <italic>BLAST</italic>, short for <underline>B</underline>asic <underline>L</underline>ocal <underline>A</underline>lignment <underline>S</underline>earch <underline>T</underline>ool, is a widely used tool capable of conducting a sequence similarity search for a sequence of interest against a sequence database. BLAST relies on a heuristic approach for searching and provides results based on the identification of regions of similarity between target and query sequences through a seed-and-extend based local alignment [<xref rid="pone.0249410.ref001" ref-type="bibr">1</xref>]. The number of queries and the size of the reference database can significantly impact the execution time of BLAST.</p>
    <p>Hence, the fast accumulation of sequences in NCBI-curated databases have a profound impact on the computational efforts required to perform sequence similarity searches. The sequencing data that is stored in the NCBI database has grown tremendously over the years, reportedly doubling the number of bases submitted to GenBank [<xref rid="pone.0249410.ref002" ref-type="bibr">2</xref>] every year over the last three decades (1982-present) (S1 Fig in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>). This rapid accumulation of sequence data is one of the key factors responsible for transforming the field of genomics into one of the most demanding big-data science disciplines [<xref rid="pone.0249410.ref003" ref-type="bibr">3</xref>].</p>
    <p>Given expanding amount of data, providing fast and biologically valuable sequence alignment tools via high-performance computing (HPC) and algorithmic innovations has been a highly active area of bioinformatics research, particularly in the context of rapidly expanding databases. For example, several sequence alignment programs have relied on contributing algorithmic improvements (e.g., HMMER [<xref rid="pone.0249410.ref004" ref-type="bibr">4</xref>], DIAMOND [<xref rid="pone.0249410.ref005" ref-type="bibr">5</xref>], CaBLAST [<xref rid="pone.0249410.ref006" ref-type="bibr">6</xref>]) while others have focused on improving parallelization to take advantage of emerging high-performance computing (HPC) platforms and programming paradigms (e.g., cuBLASTP [<xref rid="pone.0249410.ref007" ref-type="bibr">7</xref>], muBLASTP [<xref rid="pone.0249410.ref008" ref-type="bibr">8</xref>], mpiBLAST [<xref rid="pone.0249410.ref009" ref-type="bibr">9</xref>], SparkBLAST [<xref rid="pone.0249410.ref010" ref-type="bibr">10</xref>], and SparkLeBLAST [<xref rid="pone.0249410.ref011" ref-type="bibr">11</xref>]). Both DIAMOND [<xref rid="pone.0249410.ref005" ref-type="bibr">5</xref>] and CaBLAST [<xref rid="pone.0249410.ref006" ref-type="bibr">6</xref>] improve the execution time of sequence alignment by compressing the sequence database. Specifically, DIAMOND reduces the amino-acid alphabet while CaBLAST compresses the sequences by sequence redundancy. All of these sequence similarity search tools improve computational speed (i.e., reduce execution time) but sometimes at the cost of reduced sensitivity. DIAMOND only achieves 91%- 99% sensitivity [<xref rid="pone.0249410.ref005" ref-type="bibr">5</xref>] while CaBLAST achieves more than 99% sensitivity [<xref rid="pone.0249410.ref006" ref-type="bibr">6</xref>].</p>
    <p>Sequence similarity tools play a vital role in genome projects as annotations of assembled sequences require the utilization of BLAST-like tools for homology assignment. In reality, genome sequencing and annotation projects can be fairly long term, and thus, can require multiple sequence updates, e.g., regular annotation updates [<xref rid="pone.0249410.ref012" ref-type="bibr">12</xref>, <xref rid="pone.0249410.ref013" ref-type="bibr">13</xref>]. However, such updates require executing sequence similarity search from scratch as BLAST uses similarity scores and e-values that depend on the ever-increasing size of the database. For this reason, it is currently required to discard the results of prior search efforts and rerun the entire search, which translates to irredeemable execution time, money, and computational resources. For bioinformatics projects requiring large-scale sequence similarity searches, such as those involving many transcriptomes from many taxa, the computational burden can be especially prohibitive. This problem could be addressed by performing iterative taxon-specific searches rather than conducting BLAST on the entire non-redundant (<monospace>nr</monospace>) database. However, adopting such an approach has the same problem of needing to standardize e-values while adding new databases to find the optimal identity of each query, as shown in <xref ref-type="fig" rid="pone.0249410.g001">Fig 1(B)</xref>.</p>
    <fig id="pone.0249410.g001" orientation="portrait" position="float">
      <object-id pub-id-type="doi">10.1371/journal.pone.0249410.g001</object-id>
      <label>Fig 1</label>
      <caption>
        <title>Addition of new sequences.</title>
        <p>(A) BLAST search when new sequences are added to the database. At time <italic>t</italic>, the database is <italic>D</italic><sub><italic>t</italic></sub>. In next <italic>δt</italic> interval, new sequences <italic>D</italic><sub><italic>t</italic>+<italic>δt</italic></sub> − <italic>D</italic><sub><italic>t</italic></sub> are added, and the database becomes <italic>D</italic><sub><italic>t</italic>+<italic>δt</italic></sub>. With the traditional approach, the prior search result at time <italic>t</italic> cannot be reused, and we have to perform an entire BLAST search against the entire <italic>D</italic><sub><italic>t</italic>+<italic>δt</italic></sub> database. (B) BLAST search when several taxon-specific databases are present and a result against the combined database is needed. For three taxa, A, B, and C, we can perform individual BLAST searches against the databases <italic>D</italic><sub><italic>A</italic></sub>, <italic>D</italic><sub><italic>B</italic></sub>, <italic>D</italic><sub><italic>C</italic></sub>, respectively. If we want to obtain a search result against the combined database <italic>D</italic><sub><italic>A</italic>∪<italic>B</italic>∪<italic>C</italic></sub>, we need to merge the search results in a way that their e-values reflect the combined database size.</p>
      </caption>
      <graphic xlink:href="pone.0249410.g001"/>
    </fig>
    <p>Currently, to the best of our knowledge, there exists no tool that can merge BLAST results of databases that have been added to either temporally (adding new searches over time) or spatially (combining results of two different searches).</p>
    <p>We provide <italic>a statistical approach to compose temporal and spatial BLAST search results through a novel method of e-value correction</italic>. We derive how to do this mathematically and provide a software application called iBLAST to implement this automated e-value correction. By recycling previous BLAST search results, iBLAST provides substantial savings in execution time and computational resources since iBLAST performs (1 + <italic>δ</italic>)/<italic>δ</italic> times faster than NCBI BLAST, where <italic>δ</italic> represents the fraction of database growth. It enables taxon-specific BLAST searches, including incremental addition of searches of biologically-relevant taxa. The iBLAST tool consists of Python modules compatible with recent versions (since 2012) of NCBI BLAST command-line tools and can run on all major operating systems with minimal cognitive and installation overhead for NCBI BLAST users. This tool is thus especially useful for bioinformatics projects involving large-scale sequence search tasks. We demonstrate the efficiency and application of iBLAST using three case studies.</p>
  </sec>
  <sec sec-type="materials|methods" id="sec002">
    <title>Methods</title>
    <p>To perform an iBLAST search <italic>temporally</italic>, we only need to consider the newly arrived sequences in the interval <italic>δt</italic> and perform a BLAST search against these sequences to get the result <italic>S</italic><sub><italic>δt</italic></sub>, as shown in <xref ref-type="fig" rid="pone.0249410.g001">Fig 1(A)</xref>. iBLAST then corrects the e-value scores for this incremental result <italic>S</italic><sub><italic>δt</italic></sub> and the past result <italic>S</italic><sub><italic>t</italic></sub> by using the size of the database <italic>D</italic><sub><italic>t</italic>+<italic>δt</italic></sub> = <italic>D</italic><sub><italic>t</italic></sub> + <italic>D</italic><sub><italic>δt</italic></sub>. To perform an iBLAST search <italic>spatially</italic>, as shown in <xref ref-type="fig" rid="pone.0249410.g001">Fig 1(B)</xref>, iBLAST examines the search results from different databases and corrects their e-values by using the size of the combined database <italic>D</italic><sub><italic>A</italic>∪<italic>B</italic>∪<italic>C</italic></sub> = <italic>D</italic><sub><italic>A</italic></sub> ∪ <italic>D</italic><sub><italic>B</italic></sub> ∪ <italic>D</italic><sub><italic>C</italic></sub>. Then, iBLAST merges these search results with corrected e-values to obtain the final search result <italic>S</italic><sub><italic>A</italic>∪<italic>B</italic>∪<italic>C</italic></sub>.</p>
    <p>In the remaining part of this section, we present the details of our e-value correction methodology, the implementation details of iBLAST, and the fidelity and efficacy of iBLAST over NCBI BLAST via three case studies.</p>
    <sec id="sec003">
      <title>BLAST concepts and statistics</title>
      <sec id="sec004">
        <title>Core concepts of a BLAST result: Hit, HSP, score, and e-value</title>
        <p>When we perform a BLAST search against a sequence database with a query sequence, the BLAST program returns the sequences producing significant alignment from the target database, which we refer to as <italic>hits</italic>. Between the query and a hit sequence, there exist many pairwise locally-optimal gapped local alignments, which we refer to as <italic>high scoring pairs</italic> or <italic>HSPs</italic>. The definitions of hits and hsps are slightly different from those used by Althshul and colleagues [<xref rid="pone.0249410.ref014" ref-type="bibr">14</xref>], but follows the structural definition from the XML output format produced by NCBI BLAST. In the XML output format, the “Sequences Producing Significant Alignments” are presented as Iteration hits, and the “significant alignments” are listed as HSPs, though these are gapped alignments. One hit can consist of many HSPs. HSPs are scored using some statistical metrics when comparing aligned symbols. The score for a hit is the score of the highest-scoring HSP that belongs to that hit. The e-value for an HSP is computed using the score, the database size, and other statistical parameters. The reported e-value of a hit is the e-value of the highest-scoring HSP of this hit [<xref rid="pone.0249410.ref015" ref-type="bibr">15</xref>].</p>
      </sec>
      <sec id="sec005">
        <title>BLAST statistics for e-value computation</title>
        <p>BLAST programs use two different types of statistics for e-value computation: Karlin-Altschul statistics and Spouge statistics. Both of these statistical formulae calculate e-value for the HSPs and hits. <italic>blastn</italic> and <italic>tblastx</italic> use Karlin-Altschul statistics while <italic>blastp</italic>, <italic>blastx</italic>, and <italic>tblastn</italic> use Spouge statistics.</p>
        <p><bold>Karlin-Altschul statistics</bold>. Karlin-Altschul statistics [<xref rid="pone.0249410.ref001" ref-type="bibr">1</xref>, <xref rid="pone.0249410.ref016" ref-type="bibr">16</xref>, <xref rid="pone.0249410.ref017" ref-type="bibr">17</xref>] measures the e-value using <italic>E</italic> = <italic>e</italic><sup>−λ(<italic>S</italic> − <italic>μ</italic>)</sup> = <italic>Km</italic>′<italic>n</italic>′<italic>e</italic><sup>−λ<italic>S</italic></sup>. This formula is adjusted for edge effect (see <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>). Here <italic>m</italic>′ = <italic>m</italic> − <italic>l</italic>, <italic>n</italic>′ = <italic>n</italic> − <italic>Nl</italic>, <italic>N</italic> is the number of sequences in the database, <italic>m</italic> is the actual length of the query, and <italic>n</italic> is the actual length of the database.</p>
        <p>The length adjustment <italic>l</italic> satisfies <inline-formula id="pone.0249410.e001"><alternatives><graphic xlink:href="pone.0249410.e001.jpg" id="pone.0249410.e001g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M1"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mi>α</mml:mi><mml:mo>λ</mml:mo></mml:mfrac></mml:mstyle><mml:mo form="prefix">ln</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mo>(</mml:mo><mml:mi>K</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>l</mml:mi><mml:mo>)</mml:mo><mml:mo>(</mml:mo><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mi>N</mml:mi><mml:mi>l</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>β</mml:mi></mml:mrow></mml:math></alternatives></inline-formula>. Here, <italic>α</italic>, <italic>β</italic>, <italic>K</italic>, and λ are statistical parameters.</p>
        <p><bold>Spouge statistics</bold>. Spouge statistics [<xref rid="pone.0249410.ref018" ref-type="bibr">18</xref>] is developed on the Karlin-Altschul formula. Instead of computing the length adjustment <italic>l</italic> and then using it to compute the effective length of the database and query, Spouge statistics applies a finite-size correction (FSC). Instead of estimating <italic>l</italic>, FSC estimates <italic>area</italic> = <italic>E</italic>[<italic>m</italic> − <italic>L</italic><sub><italic>I</italic></sub>(<italic>y</italic>)]<sup>+</sup>[<italic>n</italic> − <italic>L</italic><sub><italic>J</italic></sub>(<italic>y</italic>)]<sup>+</sup> as a measure of (<italic>m</italic> − <italic>l</italic>)(<italic>n</italic> − <italic>Nl</italic>). The e-value <italic>E</italic> is then calculated as <italic>E</italic> = <italic>area</italic> × <italic>Ke</italic><sup>−λ<italic>S</italic></sup> × <italic>db</italic>_<italic>scale</italic>_<italic>factor</italic> where <inline-formula id="pone.0249410.e002"><alternatives><graphic xlink:href="pone.0249410.e002.jpg" id="pone.0249410.e002g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M2"><mml:mrow><mml:mi>d</mml:mi><mml:mi>b</mml:mi><mml:mo>_</mml:mo><mml:mi>s</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mo>_</mml:mo><mml:mi>f</mml:mi><mml:mi>a</mml:mi><mml:mi>c</mml:mi><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msup><mml:mi>n</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mfrac></mml:mstyle></mml:mrow></mml:math></alternatives></inline-formula>.</p>
      </sec>
      <sec id="sec006">
        <title>Existing e-value correction software and their features</title>
        <p>mpiBLAST [<xref rid="pone.0249410.ref009" ref-type="bibr">9</xref>], a parallel implementation of NCBI BLAST on a cluster, partitions the database and performs BLAST searches against these partitions in parallel. For accurate e-value correction, mpiBLAST requires prior knowledge of the entire database [<xref rid="pone.0249410.ref009" ref-type="bibr">9</xref>]. NOBLAST [<xref rid="pone.0249410.ref019" ref-type="bibr">19</xref>] corrects e-values when split databases are in use and results need to be aggregated. However, it does not work with Spouge statistics. We provide a detailed explanation of these tools in Section “Existing e-value correction software and their features” in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>. Both tools (mpiBLAST and NOBLAST) provide exact e-value statistics for Karlin-Altschul statistics when knowledge about the entire database is available <italic>a priori</italic>. However, they are not useful when the database keeps changing or when two different search results against two different instances of similar databases need to be aggregated. <xref rid="pone.0249410.t001" ref-type="table">Table 1</xref> provides a high-level comparison between mpiBLAST, NOBLAST, and our iBLAST.</p>
        <table-wrap id="pone.0249410.t001" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0249410.t001</object-id>
          <label>Table 1</label>
          <caption>
            <title>Comparison of three different BLAST tools that explicitly deal with e-value statistics correction.</title>
            <p>iBLAST supports e-value correction across time <italic>and</italic> space without requiring prior knowledge of the entire database while the other tools can perform e-value correction in limited scenarios.</p>
          </caption>
          <alternatives>
            <graphic id="pone.0249410.t001g" xlink:href="pone.0249410.t001"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">Feature</th>
                  <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">mpiBLAST</th>
                  <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">NOBLAST</th>
                  <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">iBLAST</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center" rowspan="1" colspan="1">E-value correction for Karlin-Altschul statistics</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">E-value correction for Spouge statistics</td>
                  <td align="center" rowspan="1" colspan="1">✘</td>
                  <td align="center" rowspan="1" colspan="1">✘</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">Aggregate search results against pre-planned database segments</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">Aggregate search results against arbitrary database instances</td>
                  <td align="center" rowspan="1" colspan="1">✘</td>
                  <td align="center" rowspan="1" colspan="1">✘</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">Reuse existing search results</td>
                  <td align="center" rowspan="1" colspan="1">✘</td>
                  <td align="center" rowspan="1" colspan="1">✘</td>
                  <td align="center" rowspan="1" colspan="1">✔</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
        </table-wrap>
      </sec>
      <sec id="sec007">
        <title>Redundancy in data vs. redundancy in computation</title>
        <p>Prior efforts to leverage redundancy in data (e.g., DIAMOND and CaBLAST) have successfully accelerated BLAST but at the cost of a small reduction in sensitivity. CaBLAST’s compressive algorithm achieves over 99% sensitivity for the improved speed [<xref rid="pone.0249410.ref006" ref-type="bibr">6</xref>]. Different versions of DIAMOND have sensitivity in the range 91.04% – 99% for various datasets [<xref rid="pone.0249410.ref005" ref-type="bibr">5</xref>]. In contrast, iBLAST aims to eliminate redundant computation while maintaining 100% sensitivity.</p>
      </sec>
    </sec>
    <sec id="sec008">
      <title>e-value correction in an incremental setting</title>
      <p>Correct e-value computation requires the actual database length (i.e., total number of bases/residues) in both Karlin-Altschul statistics and Spouge statistics. While database-partitioning parallel BLAST applications, like mpiBLAST and NOBLAST, require prior knowledge about the total database length, iBLAST leverages the partial knowledge from a previous BLAST search and combines it with the new sequence additions to the database to infer the total database length and compute the adjusted e-value in relation to the updated database. The mpiBLAST and NOBLAST tools pass the actual database length to each of their parallel jobs, thus forcing the statistics module to compute correct e-values from the beginning. For the iBLAST search, whenever new data arrives to the database, the pairwise sequence search is automatically refined in two steps. First, the search is only run on the databases constructed from <italic>new</italic> sequences that have been added to the database. Second, the results generated from searching the new sequences in the database are then merged with the saved results from the previous BLAST search.</p>
      <sec id="sec009">
        <title>e-value correction for Karlin-Altschul statistics</title>
        <p>Let <italic>n</italic><sub><italic>c</italic></sub> represent the current database length and <italic>n</italic><sub><italic>d</italic></sub> represent the length of the newly arrived sequences for the database. Also, let <italic>N</italic><sub><italic>c</italic></sub> be the number of sequences in the current database and <italic>N</italic><sub><italic>d</italic></sub> be the number of sequences in the newly arrived part of the database. Then, we have
<disp-formula id="pone.0249410.e003"><alternatives><graphic xlink:href="pone.0249410.e003.jpg" id="pone.0249410.e003g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M3"><mml:mrow><mml:mtext>Actual</mml:mtext><mml:mspace width="2pt"/><mml:mtext>length</mml:mtext><mml:mspace width="2pt"/><mml:mtext>of</mml:mtext><mml:mspace width="2pt"/><mml:mtext>the</mml:mtext><mml:mspace width="2pt"/><mml:mtext>updated</mml:mtext><mml:mspace width="2pt"/><mml:mtext>database</mml:mtext><mml:mo>:</mml:mo><mml:mspace width="2pt"/><mml:msub><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
<disp-formula id="pone.0249410.e004"><alternatives><graphic xlink:href="pone.0249410.e004.jpg" id="pone.0249410.e004g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M4"><mml:mrow><mml:mtext>Total</mml:mtext><mml:mspace width="2pt"/><mml:mtext>number</mml:mtext><mml:mspace width="2pt"/><mml:mtext>of</mml:mtext><mml:mspace width="2pt"/><mml:mtext>sequences</mml:mtext><mml:mspace width="2pt"/><mml:mtext>in</mml:mtext><mml:mspace width="2pt"/><mml:mtext>updated</mml:mtext><mml:mspace width="2pt"/><mml:mtext>database</mml:mtext><mml:mo>:</mml:mo><mml:mspace width="2pt"/><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math></alternatives></disp-formula>
The actual query length <italic>m</italic> does not change with the change in the database. However, we do need to recompute the effective length <italic>l</italic> by solving the fixed-point equation for the new database length using <xref ref-type="disp-formula" rid="pone.0249410.e005">Eq (1)</xref>.
<disp-formula id="pone.0249410.e005"><alternatives><graphic xlink:href="pone.0249410.e005.jpg" id="pone.0249410.e005g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M5"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mi>α</mml:mi><mml:mo>λ</mml:mo></mml:mfrac></mml:mstyle><mml:mo form="prefix">ln</mml:mo><mml:mo>(</mml:mo><mml:mi>K</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>l</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi>l</mml:mi><mml:mo>)</mml:mo><mml:mo>)</mml:mo><mml:mo>+</mml:mo><mml:mi>β</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(1)</label></disp-formula></p>
        <p>Now, with the updated length adjustment <italic>l</italic>, we can either recompute the e-values for all the matches or correct the e-values. To recompute all the e-values from scratch, we use <xref ref-type="disp-formula" rid="pone.0249410.e006">Eq (2)</xref>.
<disp-formula id="pone.0249410.e006"><alternatives><graphic xlink:href="pone.0249410.e006.jpg" id="pone.0249410.e006g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M6"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>E</mml:mi><mml:mo>=</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mo>λ</mml:mo><mml:mo>(</mml:mo><mml:mi>S</mml:mi><mml:mo>-</mml:mo><mml:mi>μ</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi>K</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>l</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>c</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>d</mml:mi></mml:msub><mml:mo>)</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:mi>l</mml:mi><mml:mo>)</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mo>λ</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(2)</label></disp-formula></p>
        <p>Alternatively, we can correct the e-values from the current values. First, we use <italic>l</italic> to recompute the value of the effective search space. We then use the newly computed effective search space to recalibrate the e-values for all the reported HSPs from the current and delta search results. Assuming that <italic>D</italic><sub><italic>part</italic></sub> is the partial effective search space and that <italic>D</italic><sub><italic>total</italic></sub> is the total effective search space, then the corrected e-value is given by
<disp-formula id="pone.0249410.e007"><alternatives><graphic xlink:href="pone.0249410.e007.jpg" id="pone.0249410.e007g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M7"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>K</mml:mi><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mo>λ</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(3)</label></disp-formula></p>
        <p>While both approaches require a constant number of arithmetic operations, the former approach, i.e., recomputing all the e-values from scratch, requires fewer arithmetic operations.</p>
      </sec>
      <sec id="sec010">
        <title>e-value correction for Spouge statistics</title>
        <p>For Spouge statistics, the value of <italic>area</italic> described in Section “Spouge statistics” does not change since it is a function of the query length, sequence length, and Gumbel parameters. However, the database scale factor does change, and thus, we need to account for it. If the actual database lengths for the newly added part of the database and the total database are <italic>n</italic><sub><italic>part</italic></sub> and <italic>n</italic><sub><italic>total</italic></sub>, respectively, then
<disp-formula id="pone.0249410.e008"><alternatives><graphic xlink:href="pone.0249410.e008.jpg" id="pone.0249410.e008g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M8"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mo>λ</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mi>m</mml:mi></mml:mfrac></mml:mstyle><mml:mspace width="14.45377pt"/><mml:mtext>and</mml:mtext><mml:mspace width="14.45377pt"/><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>a</mml:mi><mml:mo>×</mml:mo><mml:msup><mml:mi>e</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mo>λ</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mi>m</mml:mi></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives></disp-formula>
So,
<disp-formula id="pone.0249410.e009"><alternatives><graphic xlink:href="pone.0249410.e009.jpg" id="pone.0249410.e009g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M9"><mml:mtable displaystyle="true"><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>×</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>t</mml:mi><mml:mi>o</mml:mi><mml:mi>t</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>n</mml:mi><mml:mrow><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>t</mml:mi></mml:mrow></mml:msub></mml:mfrac></mml:mstyle></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math></alternatives><label>(4)</label></disp-formula>
Therefore, based on this derivation, we only have to re-scale the e-values instead of using Spouge’s e-value computational methods. Note: For re-scaling e-values that have been previously (and imprecisely) rounded to 0.0 by NCBI BLAST, re-scaling an e-value smaller than <italic>e</italic><sup>−180</sup> that was previously (and imprecisely) rounded to 0.0 by NCBI BLAST results in an incorrect 0.0 value. In this less than 0.1% occurrences of an extremely small but non-zero e-value, iBLAST ensures that this imprecise rounding does <italic>not</italic> occur.</p>
      </sec>
    </sec>
    <sec id="sec011">
      <title>Merging two search results with correct e-value statistics</title>
      <p>Once we correct e-values for both the current search result and the new search result, we merge the hits into a single sorted list. Because iBLAST reports some <italic>better</italic> scoring hits that NCBI BLAST misses (explained in detail in Section “iBLAST finds better scoring hits that are missed by NCBI BLAST”), reporting only <italic>max</italic>_<italic>target</italic>_<italic>seqs</italic> hits will result in missing some of the lower-scoring hits from NCBI BLAST. So, we store and report 2 × <italic>max</italic>_<italic>target</italic>_<italic>seqs</italic> hits. S3 Algorithm (in <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>) documents the procedure to merge the hits from two results for the same query. All statistical parameters dependent on total database size are re-calibrated to recompute or re-scale the e-values. The hits are selected in the ascending order of their e-values (descending order of their scores). Additional details on recomputing and re-scaling e-values is provided in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref> (Section “e-value correction.”).</p>
    </sec>
    <sec id="sec012">
      <title>iBLAST implementation</title>
      <p>We develop iBLAST for performing BLAST search as an extension to the NCBI BLAST code. It consists of Python wrapper scripts around the extended BLAST code and uses NCBI BLAST programs as black-box routines. <xref ref-type="fig" rid="pone.0249410.g002">Fig 2</xref> shows the software stack of iBLAST, which consists of three major components: (1) user interface, (2) incremental logic, and (3) record database. These modules interact with BLAST databases through the BLAST+ programs.</p>
      <fig id="pone.0249410.g002" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0249410.g002</object-id>
        <label>Fig 2</label>
        <caption>
          <title>Software stack of iBLAST.</title>
          <p>The user can initiate a search using the user interface. The search parameters are then passed to the “Incremental logic” module. After performing an incremental search, this module’s back-end corrects the e-value statistics and merges the result. The “Incremental logic” module looks into an external lightweight database module called the (<italic>Record database</italic>) to decide whether and how to perform the incremental search. For the actual search and delta database creation, we use NCBI BLAST tools such as blastdbcmd, blastdbalias, blastp, and blastn.</p>
        </caption>
        <graphic xlink:href="pone.0249410.g002"/>
      </fig>
      <sec id="sec013">
        <title>Command-line user interface</title>
        <p>In our current version, we provide a command-line user interface for iBLAST, which provides NCBI BLAST-like search options.</p>
      </sec>
      <sec id="sec014">
        <title>Incremental logic</title>
        <p>This module decides whether to perform a new BLAST search based on current results. Whenever the user requests a new BLAST search, this module checks for any pre-existing search result.</p>
        <p>If it does not find any pre-existing result, it performs a regular NCBI BLAST; but if there is a pre-existing result, the module first compares the database instance from the time of the past search with that of the present search. If there is any difference in the database size, this module builds a delta database that consists of the difference in these two instances. For computing the delta database, this module compares the lists of filenames of the two most recent instances and constructs a database alias using the difference (see Section “Computing delta database” in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref> for details). It then performs a new BLAST search only against the delta database and merges the previous result with the new incremental result after statistical correction for e-values. This module allows multiple updates to current searches with little extra time investment. The “Incremental logic” module contains four sub-modules: (1) SearchRecord lookup, (2) Delta and past database creation, (3) Statistics, and (4) SearchRecord writer.</p>
        <list list-type="order">
          <list-item>
            <p><italic><bold>SearchRecord lookup</bold></italic>. This sub-module looks for an existing search result with the help of the record database.</p>
          </list-item>
          <list-item>
            <p><italic><bold>Delta and past database creation</bold></italic>. This sub-module constructs a delta database by comparing the current database against the database’s past instance and performs a BLAST search on the incremental database.</p>
          </list-item>
          <list-item>
            <p><italic><bold>Statistics</bold></italic>. This sub-module reads the past and the new incremental search results; it then re-evaluates the e-values in both results and merges them according to their recomputed/re-scaled e-values.</p>
          </list-item>
          <list-item>
            <p><italic><bold>SearchRecord writer</bold></italic>. This module writes the updated search result in one of the NCBI BLAST formats.</p>
          </list-item>
        </list>
        <p>Whenever the user initiates a BLAST job, the above “Incremental Logic” module first checks if a current search result is available. A delta database consisting of the newly added sequences is constructed if there is a search result against an outdated BLAST database. A BLAST search is then performed against the delta database (i.e., incremental database). In the final stage, the e-values of the two search results are corrected and the incremental search results are merged. The frequency of this incremental search and re-computation depends on two quantities: the rate of database update by NCBI and the rate at which a research project performs a BLAST search.</p>
        <p><bold>Record database for storing incremental search results</bold>. Whenever the user performs a BLAST search, iBLAST saves meta-information (e.g., the size of the database and a list of the filenames) about the instance of the database and the search result in a lightweight SQLite database. We design iBLAST to save a minimalist index structure and size information that requires only a few bytes of storage. We keep the search parameters along with the search results as well. iBLAST does <italic>not</italic> save any redundant copy of any part of the actual sequence database. It stores only the most recent result for a specific query and a database, which keeps the storage overhead to a minimum.</p>
      </sec>
    </sec>
    <sec id="sec015">
      <title>Case studies</title>
      <p>To demonstrate the efficiency and benefits of using the iBLAST program over standard NCBI BLAST, we analyze different scenarios on actual nucleotide and protein sequence datasets as case studies. Our first case study tests the accuracy of iBLAST sequence searches compared to NCBI BLAST. The second case study assesses the value of adding new searches temporally to old ones for large, and the last case study assesses how this method can be used to add taxon-specific searches together to save on computational time.</p>
      <sec id="sec016">
        <title>Case study I: Method verification</title>
        <p>We explore the scenario where hits from a collection of 100 query sequences are updated to account for the growth of NCBI sequence databases across the duration of the project. To demonstrate the application’s use for BLAST programs that use Karlin-Altschul statistics, we ran blastn against a nucleotide database (growing subsets of NCBI nt) for 100 nucleotide sequences from <italic>Bombus impatiens</italic> To demonstrate its utility on BLAST programs that use Spouge statistics, we ran blastp against a non-redundant protein database (a growing subset of NCBI nr) for 100 protein sequences from <italic>Bombus impatiens</italic> assembly. Source of these data is available at the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref> (Section “Data source for case study I”).</p>
        <p>We demonstrate iBLAST’s fidelity and performance over three time periods for case study I, as shown in <xref ref-type="fig" rid="pone.0249410.g003">Fig 3(A)</xref>. The instances for nucleotide database changes through time as follows:</p>
        <list list-type="bullet">
          <list-item>
            <p><bold>Time 0</bold>: The nucleotide database comprises 44.5% of the fully available nt database. Both NCBI BLAST and iBLAST search on the same database.</p>
          </list-item>
          <list-item>
            <p><bold>Time 1</bold>: The nucleotide database comprises 62.7% of the nt database. While NCBI BLAST searches 62.7% of nt, iBLAST searches only 18.2% of nt. The database grew by 40.8% (= (62.7 − 44.5)/44.5) from time 0.</p>
          </list-item>
          <list-item>
            <p><bold>Time 2</bold>: The nucleotide database comprises 84.1% of the nt database. While NCBI BLAST searches 84.1% of nt, iBLAST searches only 21.4% of nt. The database grew by 34.1% (= (84.1 − 62.7)/62.7) from time 1.</p>
          </list-item>
        </list>
        <fig id="pone.0249410.g003" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0249410.g003</object-id>
          <label>Fig 3</label>
          <caption>
            <title>Experimental design of three case studies.</title>
            <p>(A) Case study I: Incremental addition of sequences in the nt database over three time periods. (B) Case study II: Incremental addition of sequences in the nr database over two time periods. (C) Case study III: Incremental search of taxon-specific databases.</p>
          </caption>
          <graphic xlink:href="pone.0249410.g003"/>
        </fig>
        <p>For this case study, we also similarly applied NCBI BLAST and iBLAST to an evolving nr database. That is, the instances of the protein database change over time (in a similar way to the nt database, as captured by <xref ref-type="fig" rid="pone.0249410.g003">Fig 3(A)</xref>). Specifically, the nr database comprises 35.4%, 47.5%, and 60.0% of nr at times 0, 1, and 2, respectively. The protein database grew by 34.1% (i.e., (47.5 − 35.4)/35.4) and 26.3% (i.e., (67.5 − 35.4)/48) by times 1 and 2, respectively, from the earlier time periods. <xref rid="pone.0249410.t002" ref-type="table">Table 2</xref> provides detailed information about the evolving protein database instances as well as the e-value and hit performance of NCBI BLAST and iBLAST, respectively.</p>
        <table-wrap id="pone.0249410.t002" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0249410.t002</object-id>
          <label>Table 2</label>
          <caption>
            <title>Case study I: Fidelity of iBLAST in three consecutive time periods.</title>
            <p><italic>blastn</italic> search was performed on nucleotide sequence databases (nt). At any time instance, the <italic>Past</italic> database size is the size of the database from the previous time instance. The <italic>Present</italic> database size is the database size at the present time instance. <italic>Delta</italic> is the incremental database growth from the previous time instance to the current time instance. NCBI BLAST must be performed on the entire <italic>Present</italic> database size, while iBLAST only needs to be performed on <italic>Delta</italic>.</p>
          </caption>
          <alternatives>
            <graphic id="pone.0249410.t002g" xlink:href="pone.0249410.t002"/>
            <table frame="box" rules="all" border="0">
              <colgroup span="1">
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
                <col align="left" valign="middle" span="1"/>
              </colgroup>
              <thead>
                <tr>
                  <th align="center" rowspan="1" colspan="1"/>
                  <th align="center" rowspan="1" colspan="1"/>
                  <th align="center" rowspan="1" colspan="1"/>
                  <th align="center" rowspan="1" colspan="1"/>
                  <th align="center" rowspan="1" colspan="1">NCBI BLAST</th>
                  <th align="center" rowspan="1" colspan="1">iBLAST</th>
                  <th align="center" rowspan="1" colspan="1"/>
                  <th align="center" rowspan="1" colspan="1"/>
                </tr>
                <tr>
                  <th align="center" rowspan="2" style="border-bottom-width:thick" colspan="1">Time</th>
                  <th align="center" rowspan="2" style="border-bottom-width:thick" colspan="1">Search</th>
                  <th align="center" rowspan="2" style="border-bottom-width:thick" colspan="1">Data-base</th>
                  <th align="center" colspan="2" rowspan="1">Database Size</th>
                  <th align="center" rowspan="2" style="border-bottom-width:thick" colspan="1">Delta = Present-Past</th>
                  <th align="center" rowspan="2" style="border-bottom-width:thick" colspan="1">e-value Match</th>
                  <th align="center" rowspan="2" style="border-bottom-width:thick" colspan="1">Hit Match</th>
                </tr>
                <tr>
                  <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">Past</th>
                  <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">Present</th>
                </tr>
              </thead>
              <tbody>
                <tr>
                  <td align="center" rowspan="1" colspan="1">
                    <italic>t</italic>
                    <sub>0</sub>
                  </td>
                  <td align="center" rowspan="1" colspan="1">blastn</td>
                  <td align="center" rowspan="1" colspan="1">nt</td>
                  <td align="center" rowspan="1" colspan="1">0</td>
                  <td align="center" rowspan="1" colspan="1">80,740,533,243</td>
                  <td align="center" rowspan="1" colspan="1">80,740,533,243</td>
                  <td align="center" rowspan="1" colspan="1">100%</td>
                  <td align="center" rowspan="1" colspan="1">100%</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">
                    <italic>t</italic>
                    <sub>1</sub>
                  </td>
                  <td align="center" rowspan="1" colspan="1">blastn</td>
                  <td align="center" rowspan="1" colspan="1">nt</td>
                  <td align="center" rowspan="1" colspan="1">80,740,533,243</td>
                  <td align="center" rowspan="1" colspan="1">113,749,495,340</td>
                  <td align="center" rowspan="1" colspan="1">33,008,962,097</td>
                  <td align="center" rowspan="1" colspan="1">100%</td>
                  <td align="center" rowspan="1" colspan="1">100%</td>
                </tr>
                <tr>
                  <td align="center" rowspan="1" colspan="1">
                    <italic>t</italic>
                    <sub>2</sub>
                  </td>
                  <td align="center" rowspan="1" colspan="1">blastn</td>
                  <td align="center" rowspan="1" colspan="1">nt</td>
                  <td align="center" rowspan="1" colspan="1">113,749,495,340</td>
                  <td align="center" rowspan="1" colspan="1">152,471,828,601</td>
                  <td align="center" rowspan="1" colspan="1">38,722,333,261</td>
                  <td align="center" rowspan="1" colspan="1">100%</td>
                  <td align="center" rowspan="1" colspan="1">100%</td>
                </tr>
              </tbody>
            </table>
          </alternatives>
        </table-wrap>
        <p>Additional details on the creation of the incremental database can be found in Section “Creating experimental databases” in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>.</p>
      </sec>
      <sec id="sec017">
        <title>Case study II: Updating a query re-annotation of a novel transcriptomics dataset</title>
        <p>Our second case study mimics a typical scenario in a transcriptome re-annotation project where a transcriptome is BLAST-ed after a certain period of time as a part of a re-annotation pipeline. This case study uses a novel dataset not yet available on the NCBI BLAST database—a <italic>de novo</italic> assembled transcriptome of the venom gland of an Oak gall wasp (see below)—and thus, the identity of the assembled sequence was unknown, and the sequence was not available to BLAST to itself.</p>
        <p>As shown in <xref ref-type="fig" rid="pone.0249410.g003">Fig 3(B)</xref>, we conduct a BLAST search for the same query set for database instances at two time instances (S3 Table in <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>):</p>
        <list list-type="bullet">
          <list-item>
            <p><bold>Time 0</bold>: The database comprises 67.6% of the non-redundant database nr (nr accessed on August 2018). Both tools perform the search on this same 67.6% of the database.</p>
          </list-item>
          <list-item>
            <p><bold>Time 1</bold>: The database comprises 100% of the non-redundant database nr. While NCBI BLAST performs a search on 100% of nr, iBLAST only needs to search 32.4% of nr as it can reuse the search results from time 0. iBLAST merges the result from time 0 with the incremental search result after e-value correction.</p>
          </list-item>
        </list>
        <p>We constructed these two database instances by combining database parts using the blastdb_aliastool utility packaged with BLAST+.</p>
        <p>Given the number of queries from the <italic>de novo</italic> assembled transcriptome, it would take a few <italic>months</italic> to complete the search on a single processor core. We ran this experiment with 640 cores distributed across 20 compute nodes (where each node contained dual 16-core Intel Xeon processors, i.e., E5-2683 v4), partitioning the 17, 927 queries into 20 query files and assigning each file per node. Given that each node would run a subset of queries against the same database, there is no need to recompute the statistics for these results before we merge them.</p>
        <p><bold>Distributing workload across nodes</bold>. The workload across all the nodes should be relatively balanced so that computation for each of the 20 query files finishes roughly simultaneously. To ensure such load balancing, we partitioned the queries using the following strategy. We randomize the order of the queries and partition them so that each partition has roughly the same number of residues. We compare this strategy against the straightforward approach of partitioning the queries in a linear order by putting roughly the same number of queries in each partition.</p>
      </sec>
      <sec id="sec018">
        <title>Case study III: Taxon-based incremental approach</title>
        <p>Our third case study presents a special case of using a taxon-based incremental approach to obtain a fast, cost-effective, and biologically relevant results for sequence similarity. To achieve this goal, we examine the genes contained within an assembled transcriptome of the venom gland of a gall wasp of oak trees, the hedgehog gall wasp (<italic>Acraspis erinacei</italic>), a taxon lacking a closely related species with a genome in the nr database. Gall wasps are a group of parasitic wasps that inject their eggs into plant tissues and induce changes in plant development. These changes result in constructing a niche for the gall wasp by inducing predictable modifications of plant tissues that both protect the wasp from the environment and feed the developing wasp. Genes important for inducing changes in the plant’s development are thought to be produced in the female venom gland during oviposition [<xref rid="pone.0249410.ref020" ref-type="bibr">20</xref>]. We performed separate BLAST searches of the hedgehog gall wasp venom gland against transcriptomes of the closest relatives to gall wasps with curated genomes including three fairly equidistant taxa [<xref rid="pone.0249410.ref021" ref-type="bibr">21</xref>]—the parasitic wasp <italic>Nasonia vitripennis</italic>, the honey bee <italic>Apis mellifera</italic>, and the ant <italic>Harpegnathos saltator</italic>,—as well as the more distant model insect, <italic>Drosophila melanogaster</italic>, upon which many insect gene annotations are based. We also performed BLAST searches against the transcripts of an oak tree, <italic>Quercus suber</italic>, to determine if some genes belonged to the host as well as a model plant, the soybean, <italic>Glycine max</italic>.</p>
        <p>Using iBLAST, we performed a blastp search individually against each of the databases and merged the results using the statistics module from iBLAST. After this initial search, we then added to this analysis all remaining Hymenopteran species using iBLAST to assess the impact of adding more taxa on the top BLAST hits and further demonstrate the potential of iBLAST to add taxa progressively, as shown in <xref ref-type="fig" rid="pone.0249410.g003">Fig 3(C)</xref>. We performed a blastp search against those seven subsets’ merged database to determine whether the same hits would have been found from our concatenated incremental analysis as from a combined single-instance run. These results were further compared with blastp results obtained by searching the complete nr database, allowing us to determine how well we captured the full dataset with this taxon sub-sampling approach. Data collection methods for the gall wasp transcriptomes are provided in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref> (Section “Data collection for case studies II and III”).</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="results" id="sec019">
    <title>Results</title>
    <p>We created a tool called iBLAST for e-value correction and incremental BLAST search in the temporal and spatial domain. The incremental search can be implemented using the software available at <ext-link ext-link-type="uri" xlink:href="https://github.com/vtsynergy/iBLAST">https://github.com/vtsynergy/iBLAST</ext-link> following instructions available in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref> (Section “iBLAST software allows the user to perform incremental BLAST search with minimal overhead”). The findings of the three case studies demonstrate the efficacy and utility of iBLAST.</p>
    <sec id="sec020">
      <title>Case study I: Method verification and performance</title>
      <sec id="sec021">
        <title>Verification</title>
        <p>In case study I, we validate whether we can achieve the same results from a single NCBI BLAST search as from the iBLAST. As shown in <xref rid="pone.0249410.t002" ref-type="table">Table 2</xref> and S4 Table in <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>, iBLAST delivers the same results as NCBI BLAST with a 100% e-value match and 100% hit match.</p>
        <list list-type="bullet">
          <list-item>
            <p><bold>blastn</bold>: Sequence alignment using blastn was performed on nt databases (nucleotide sequences). In all three time periods, iBLAST finds all the same hits and in the same order as NCBI BLAST does for blastn, including 3, 964 hits at time <italic>t</italic><sub>0</sub>; 4, 150 hits at time <italic>t</italic><sub>1</sub>, and 4, 924 hits at time <italic>t</italic><sub>2</sub>, thus validating iBLAST with respect to Karlin-Altschul statistics (<xref rid="pone.0249410.t002" ref-type="table">Table 2</xref>).</p>
          </list-item>
          <list-item>
            <p><bold>blastp</bold>: Sequence alignment using blastp was performed on nr (non-redundant protein sequences) databases. For each of these three time periods, iBLAST reports the same hits in the same order as NCBI BLAST for blastp. The numbers of reported hits in these three time periods for blastp are 45, 154 hits; 46, 356 hits; and 46, 869 hits, respectively, thus validating iBLAST with respect to Spouge statistics (S4 Table in <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>).</p>
          </list-item>
        </list>
      </sec>
      <sec id="sec022">
        <title>Performance</title>
        <p>For a <italic>δ</italic> increase in database size, iBLAST performs (1 + <italic>δ</italic>)/(<italic>δ</italic>) times faster than NCBI BLAST. <xref ref-type="fig" rid="pone.0249410.g004">Fig 4</xref> shows the time saved for both blastp and blastn, respectively, using iBLAST, resulting in a speedup ranging between approximately three- and five-fold.</p>
        <fig id="pone.0249410.g004" orientation="portrait" position="float">
          <object-id pub-id-type="doi">10.1371/journal.pone.0249410.g004</object-id>
          <label>Fig 4</label>
          <caption>
            <title>Performance comparison between NCBI BLAST and iBLAST for case study I.</title>
            <p>(A) Performance comparison between regular blastn and incremental blastn at 3 periods when nt database is growing over time, using 100 nucleotide queries. For 40.8% and 34.0% increase in the database size, iBLAST performs 2.93 and 3.03 times faster respectively. (B) Performance comparison between regular blastp and incremental blastp at 3 periods when nr database is growing over time, using 100 protein queries. For 34.1% and 26.3% increase in the database size, iBLAST performs 4.33 and 4.98 times faster respectively.</p>
          </caption>
          <graphic xlink:href="pone.0249410.g004"/>
        </fig>
      </sec>
    </sec>
    <sec id="sec023">
      <title>Case study II: Large-scale alignment tasks on novel datasets</title>
      <p>We performed searches using iBLAST and NCBI BLAST, where a newly obtained gall wasp (Hymenoptera: Cynipidae) transcriptome dataset was utilized as queries in two time periods across which there was a 48% increase in the nr database (S5 Table in <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>). In both time periods, iBLAST reports the same hits in the same order as an NCBI BLAST run.</p>
      <p>For this increase in the database size, iBLAST is 3.1 times faster than NCBI BLAST. Relative to the total execution time of 134 minutes, the time needed for e-value correction and merging the results is minimal, i.e., less than a minute using only 20 cores. Overall, NCBI BLAST completes the alignment search in 24, 862 seconds (6 hours, 54 minutes) on average, while iBLAST completes the search in only 8, 009 seconds (2 hours, 14 minutes). The merge time for each of these tasks is 40 seconds on average. This computational efficiency matches our projected speedup (1+ 0.48)/0.48 = 3.08.</p>
      <p>We observed the effect of query partitioning on load balancing (see Section “Distributing workload across nodes”). Our approach to partition the queries based on the number of residues shows superior load-balancing over the traditional strategy to partitioning the queries based on the number of queries. We elaborate on this point further in the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref> (Section “Load-balancing via query partitioning”).</p>
    </sec>
    <sec id="sec024">
      <title>Case study III: Taxon-specific searches to expedite informatics</title>
      <p>To examine the fidelity of iBLAST while merging multiple (taxon-specific) databases, we first compared the iBLAST merged results from multiple individual BLAST (blastp) searches on seven biologically relevant taxa separately to results obtained when a BLAST search was performed against a database combining all the sequences belonging to these taxa simultaneously. The result exhibits 100% fidelity. Then, as presented in <xref rid="pone.0249410.t003" ref-type="table">Table 3</xref>, we compare the merged BLAST results of individual taxon-level database search with the BLAST results obtained in case study II (time period 1), where the same queries were searched against the entire nr database to better understand the relative time savings vs. accuracy of taxon-guided approaches. The taxon-specific approach is much more time-efficient and computationally inexpensive as it searched much smaller-sized databases. 8.12% of the top hits obtained from a search of nr were found by searching only the initial set of 6 taxa, which comprise only 0.35% of nr. Although this number is low, the identity of high-scoring hits is likely to be similar even if the best taxonomic hit to a query sequence was not retrieved, as gall wasps do not have any close relatives currently hosted in NCBI databases but rather many equidistant relatives. Given this, we then added in sequences of the rest of Hymenopteran species to see if this improves the number of shared top hits. With this analysis, we conducted BLAST search on only 1.17% of the total nr yet obtained 87.75% similarity in top hits to a full nr BLAST. This result demonstrates the potential of performing more taxon-guided approaches to save on the costs of large-scale BLAST searching jobs. Performing the analysis in this way has also enabled improved curation of hits by taxon, which facilitates better biological interpretation of these results.</p>
      <table-wrap id="pone.0249410.t003" orientation="portrait" position="float">
        <object-id pub-id-type="doi">10.1371/journal.pone.0249410.t003</object-id>
        <label>Table 3</label>
        <caption>
          <title>Potential for taxon-guided searches enabled by iBLAST.</title>
          <p>Comparison of merged BLAST results from multiple individual BLAST searches with a separate BLAST search conducted against a completed nr database shows that biologically relevant taxa can be added incrementally to obtain similar results to nr by searching against a much smaller database size.</p>
        </caption>
        <alternatives>
          <graphic id="pone.0249410.t003g" xlink:href="pone.0249410.t003"/>
          <table frame="box" rules="all" border="0">
            <colgroup span="1">
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
              <col align="left" valign="middle" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">Species</th>
                <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">NCBI taxon id</th>
                <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">%nr sequences covered</th>
                <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">Number of nr top hits covered</th>
                <th align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">%nr top hits covered</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="center" rowspan="1" colspan="1"><italic>Nasonia vitripennis</italic> (jewel wasp)</td>
                <td align="center" rowspan="1" colspan="1">7425</td>
                <td align="char" char="." rowspan="1" colspan="1">0.02%</td>
                <td align="center" rowspan="1" colspan="1">853</td>
                <td align="char" char="." rowspan="1" colspan="1">4.84%</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1"><italic>Apis mellifera</italic> (honey bee)</td>
                <td align="center" rowspan="1" colspan="1">7460</td>
                <td align="char" char="." rowspan="1" colspan="1">0.02%</td>
                <td align="center" rowspan="1" colspan="1">207</td>
                <td align="char" char="." rowspan="1" colspan="1">1.17%</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1"><italic>Harpegnathos saltator</italic> (Jerdon’s jumping ant)</td>
                <td align="center" rowspan="1" colspan="1">10380</td>
                <td align="char" char="." rowspan="1" colspan="1">0.03%</td>
                <td align="center" rowspan="1" colspan="1">347</td>
                <td align="char" char="." rowspan="1" colspan="1">1.96%</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1"><italic>Drosophila melanogaster</italic> (fruit fly)</td>
                <td align="center" rowspan="1" colspan="1">7227</td>
                <td align="char" char="." rowspan="1" colspan="1">0.08%</td>
                <td align="center" rowspan="1" colspan="1">6</td>
                <td align="char" char="." rowspan="1" colspan="1">0.034%</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1"><italic>Quercus suber</italic> (cork oak)</td>
                <td align="center" rowspan="1" colspan="1">58331</td>
                <td align="char" char="." rowspan="1" colspan="1">0.09%</td>
                <td align="center" rowspan="1" colspan="1">0</td>
                <td align="char" char="." rowspan="1" colspan="1">0.00%</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1"><italic>Glycine max</italic> (soybean)</td>
                <td align="center" rowspan="1" colspan="1">3847</td>
                <td align="char" char="." rowspan="1" colspan="1">0.11%</td>
                <td align="center" rowspan="1" colspan="1">22</td>
                <td align="char" char="." rowspan="1" colspan="1">0.12%</td>
              </tr>
              <tr>
                <td align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">Rest of Hymenoptera</td>
                <td align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">7399</td>
                <td align="char" char="." style="border-bottom-width:thick" rowspan="1" colspan="1">0.83%</td>
                <td align="center" style="border-bottom-width:thick" rowspan="1" colspan="1">14281</td>
                <td align="char" char="." style="border-bottom-width:thick" rowspan="1" colspan="1">80.98%</td>
              </tr>
              <tr>
                <td align="center" rowspan="1" colspan="1">
                  <bold>Total</bold>
                </td>
                <td align="center" rowspan="1" colspan="1">
                  <bold>multiple</bold>
                </td>
                <td align="char" char="." rowspan="1" colspan="1">
                  <bold>1.17%</bold>
                </td>
                <td align="center" rowspan="1" colspan="1">
                  <bold>15476</bold>
                </td>
                <td align="char" char="." rowspan="1" colspan="1">
                  <bold>87.75%</bold>
                </td>
              </tr>
            </tbody>
          </table>
        </alternatives>
      </table-wrap>
    </sec>
    <sec id="sec025">
      <title>iBLAST finds better scoring hits that are missed by NCBI BLAST</title>
      <p>While iBLAST finds all the hits reported by NCBI BLAST in the same order of appearance, iBLAST reports several <italic>better scoring hits</italic> that NCBI BLAST misses in all the case studies. Since case study II covers the most number of hits, we quantified these missed hits for this case study. NCBI BLAST misses 1.57% (13171 out of 837942 top hits) of the better scoring hits. Command-line NCBI BLAST uses a search parameter <italic>max_target_seqs</italic> in an unintended way where instead of reporting all the <italic>best</italic>
<italic>max_target_seqs</italic> hits, it has a bias toward <italic>first</italic>
<italic>max_target_seqs</italic> hits. A comprehensive discussion about this issue was carried out by Sujai Kumar (<ext-link ext-link-type="uri" xlink:href="https://gist.github.com/sujaikumar/504b3b7024eaf3a04ef5/">https://gist.github.com/sujaikumar/504b3b7024eaf3a04ef5/</ext-link>) and two other teams of researchers [<xref rid="pone.0249410.ref022" ref-type="bibr">22</xref>, <xref rid="pone.0249410.ref023" ref-type="bibr">23</xref>]. In this process, it misses some of the better scoring hits that are discovered in a later phase of the search. (Details can be found in Section “Explanation for NCBI BLAST missing many top hits” of the <xref ref-type="supplementary-material" rid="pone.0249410.s001">S1 File</xref>) This is an extra advantage of iBLAST over NCBI BLAST. Since the former works on smaller databases and then combines the results instead of searching a single large database, it has more candidate hits to choose from for reporting final hits.</p>
    </sec>
  </sec>
  <sec sec-type="conclusions" id="sec026">
    <title>Discussion</title>
    <p>In this paper, we have introduced iBLAST, an incremental local-alignment tool that enables combining multiple search results with e-value correction. iBLAST delivers results that comprehend those of NCBI BLAST. Our statistical correction facilitates novel ways of performing sequence alignment tasks and incorporating domain knowledge. For a <italic>δ</italic> fraction increase in the database size, iBLAST can perform (1 + <italic>δ</italic>)/<italic>δ</italic> times faster than NCBI BLAST (i.e., 10% growth in database size will yield an 11-fold speedup for iBLAST over NCBI BLAST). We should note that for a small increase in the database size (which is the most likely scenario between two searches), iBLAST delivers a large speedup factor. Furthermore, iBLAST discovers better hits than NCBI BLAST. While iBLAST finds 100% of the hits that NCBI BLAST reports in the same order, iBLAST also reports many additional high-scoring hits that NCBI BLAST misses due to an early approximation used by the heuristic search algorithm in NCBI BLAST.</p>
    <p>With the expansion of genetic (sequencing) data available in NCBI, the computational time for large-scale analyses becomes increasingly burdensome, resulting in analyses that take months to complete with a substantial cost, both financially and with respect to “time to solution.” This problem is aggravated by cheaper sequencing technology leading to ever-larger genome assembly/transcriptomics projects with substantially more samples to analyze. Our iBLAST tool can help relieve this cost burden. Utilization of iBLAST can enable frequent iterative updates for re-annotation of genome and transcriptome assemblies at a much lower cost (with respect to computational time and financial cost), which is useful given the rapid changes in the nr databases across the duration of a project or its aftermaths. We can add specific datasets of interest to previous searches, such as scenarios involving the availability of new genome releases or conducting large phylogenetic studies. As demonstrated in the final case study, we can use the program in transcriptomic or metagenomics projects by merging the results of knowledge-guided BLAST searches only on biologically relevant groups. The approach used in that case study enables iterative exploration by taxon and facilitates BLAST results’ curation.</p>
    <p>Our iBLAST software can work as a wrapper around other fast BLAST implementations and provide multiplicative speedup on the wrapped applications’ speedup. iBLAST’s improved runtime performance is due to the incremental nature of its algorithm. So, it will be <inline-formula id="pone.0249410.e010"><alternatives><graphic xlink:href="pone.0249410.e010.jpg" id="pone.0249410.e010g" mimetype="image" position="anchor" orientation="portrait"/><mml:math id="M10"><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>δ</mml:mi></mml:mrow><mml:mi>δ</mml:mi></mml:mfrac></mml:mstyle></mml:math></alternatives></inline-formula> times faster for a <italic>δ</italic>-fractional growth compared to other non-incremental optimized implementations of BLAST such as cuBLASTP if the former is used as a wrapper around the latter. These other tools have varying degrees of sensitivity compared to NCBI BLAST. mpiBLAST [<xref rid="pone.0249410.ref009" ref-type="bibr">9</xref>] produces similar search results, CaBLAST’s compressive algorithm [<xref rid="pone.0249410.ref006" ref-type="bibr">6</xref>] achieves over 99% sensitivity for the improved speed, and various versions of DIAMOND have sensitivity in the range 91.04% − 99% for various datasets [<xref rid="pone.0249410.ref005" ref-type="bibr">5</xref>]. iBLAST achieves 100% sensitivity and can improve other tools’ sensitivity.</p>
    <p>A similar approach can benefit other sequence similarity tools and their various implementations if the statistics for correcting the respective statistical significance values (analog to e-value) of the results are available. We aim to develop a standard pipeline for other popular sequence-similarity search tools to combine results through a framework for automated statistical correction in future work. Through its statistical correction formulas and software stack, iBLAST presents the potential to make other sequence similarity-search tools faster by utilizing past search results and incorporating domain knowledge in a period when sequence database is growing exponentially.</p>
  </sec>
  <sec sec-type="supplementary-material" id="sec027">
    <title>Supporting information</title>
    <supplementary-material content-type="local-data" id="pone.0249410.s001">
      <label>S1 File</label>
      <caption>
        <p>(PDF)</p>
      </caption>
      <media xlink:href="pone.0249410.s001.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <p>We like to thank Andy Deans and István Mikó for their contributions to the data collection and Istvan Albert and Ramu Anandakrishnan for providing valuable feedback on earlier versions of the manuscript. We also thank Yang Pu and Jingwei Zhang for working on the initial model of iBLAST concerning Karlin-Altschul statistics. Computation for this research were performed on Virginia Tech’s <italic>Advanced Research Computing (VT ARC)</italic> and Pennsylvania State University’s <italic>Institute for CyberScience Advanced CyberInfrastructure (ICS-ACI)</italic>.</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="pone.0249410.ref001">
      <label>1</label>
      <mixed-citation publication-type="journal"><name><surname>Altschul</surname><given-names>SF</given-names></name>, <name><surname>Gish</surname><given-names>W</given-names></name>, <name><surname>Miller</surname><given-names>W</given-names></name>, <name><surname>Myers</surname><given-names>EW</given-names></name>, <name><surname>Lipman</surname><given-names>DJ</given-names></name>. <article-title>Basic local alignment search tool</article-title>. <source>Journal of molecular biology</source>. <year>1990</year>;<volume>215</volume>(<issue>3</issue>):<fpage>403</fpage>–<lpage>410</lpage>. <pub-id pub-id-type="doi">10.1016/S0022-2836(05)80360-2</pub-id><pub-id pub-id-type="pmid">2231712</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref002">
      <label>2</label>
      <mixed-citation publication-type="journal"><name><surname>Benson</surname><given-names>DA</given-names></name>, <name><surname>Cavanaugh</surname><given-names>M</given-names></name>, <name><surname>Clark</surname><given-names>K</given-names></name>, <name><surname>Karsch-Mizrachi</surname><given-names>I</given-names></name>, <name><surname>Ostell</surname><given-names>J</given-names></name>, <name><surname>Pruitt</surname><given-names>KD</given-names></name>, <etal>et al</etal>. <article-title>GenBank</article-title>. <source>Nucleic Acids Research</source>. <year>2017</year>;<volume>46</volume>(<issue>D1</issue>):<fpage>D41</fpage>–<lpage>D47</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkw1070</pub-id><?supplied-pmid 27899564?><pub-id pub-id-type="pmid">27899564</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref003">
      <label>3</label>
      <mixed-citation publication-type="journal"><name><surname>Stephens</surname><given-names>ZD</given-names></name>, <name><surname>Lee</surname><given-names>SY</given-names></name>, <name><surname>Faghri</surname><given-names>F</given-names></name>, <name><surname>Campbell</surname><given-names>RH</given-names></name>, <name><surname>Zhai</surname><given-names>C</given-names></name>, <name><surname>Efron</surname><given-names>MJ</given-names></name>, <etal>et al</etal>. <article-title>Big data: astronomical or genomical?</article-title><source>PLoS biology</source>. <year>2015</year>;<volume>13</volume>(<issue>7</issue>):<fpage>e1002195</fpage>. <pub-id pub-id-type="doi">10.1371/journal.pbio.1002195</pub-id><?supplied-pmid 26151137?><pub-id pub-id-type="pmid">26151137</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref004">
      <label>4</label>
      <mixed-citation publication-type="journal"><name><surname>Eddy</surname><given-names>SR</given-names></name>. <article-title>Profile hidden Markov models</article-title>. <source>Bioinformatics (Oxford, England)</source>. <year>1998</year>;<volume>14</volume>(<issue>9</issue>):<fpage>755</fpage>–<lpage>763</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/14.9.755</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref005">
      <label>5</label>
      <mixed-citation publication-type="journal"><name><surname>Buchfink</surname><given-names>B</given-names></name>, <name><surname>Xie</surname><given-names>C</given-names></name>, <name><surname>Huson</surname><given-names>DH</given-names></name>. <article-title>Fast and sensitive protein alignment using DIAMOND</article-title>. <source>Nature methods</source>. <year>2014</year>;<volume>12</volume>(<issue>1</issue>):<fpage>59</fpage>.<pub-id pub-id-type="pmid">25402007</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref006">
      <label>6</label>
      <mixed-citation publication-type="journal"><name><surname>Loh</surname><given-names>PR</given-names></name>, <name><surname>Baym</surname><given-names>M</given-names></name>, <name><surname>Berger</surname><given-names>B</given-names></name>. <article-title>Compressive genomics</article-title>. <source>Nature biotechnology</source>. <year>2012</year>;<volume>30</volume>(<issue>7</issue>):<fpage>627</fpage>. <pub-id pub-id-type="doi">10.1038/nbt.2241</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref007">
      <label>7</label>
      <mixed-citation publication-type="book"><name><surname>Zhang</surname><given-names>J</given-names></name>, <name><surname>Wang</surname><given-names>H</given-names></name>, <name><surname>Lin</surname><given-names>H</given-names></name>, <name><surname>Feng</surname><given-names>Wc</given-names></name>. <chapter-title>cuBLASTP: Fine-grained parallelization of protein sequence search on a GPU</chapter-title>. In: <source>2014 IEEE 28th International Parallel and Distributed Processing Symposium, IEEE</source>; <year>2014</year>. p. <fpage>251</fpage>–<lpage>260</lpage>.</mixed-citation>
    </ref>
    <ref id="pone.0249410.ref008">
      <label>8</label>
      <mixed-citation publication-type="journal"><name><surname>Zhang</surname><given-names>J</given-names></name>, <name><surname>Misra</surname><given-names>S</given-names></name>, <name><surname>Wang</surname><given-names>H</given-names></name>, <name><surname>Feng</surname><given-names>Wc</given-names></name>. <article-title>muBLASTP: database-indexed protein sequence search on multicore CPUs</article-title>. <source>BMC bioinformatics</source>. <year>2016</year>;<volume>17</volume>(<issue>1</issue>):<fpage>443</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-016-1302-4</pub-id><pub-id pub-id-type="pmid">27809763</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref009">
      <label>9</label>
      <mixed-citation publication-type="journal"><name><surname>Darling</surname><given-names>AE</given-names></name>, <name><surname>Carey</surname><given-names>L</given-names></name>, <name><surname>Feng</surname><given-names>WC</given-names></name>. <article-title>The design, implementation, and evaluation of mpiBLAST</article-title>. <source>Los Alamos National Laboratory</source>; <year>2003</year>.</mixed-citation>
    </ref>
    <ref id="pone.0249410.ref010">
      <label>10</label>
      <mixed-citation publication-type="journal"><name><surname>de Castro</surname><given-names>MR</given-names></name>, <name><surname>dos Santos Tostes</surname><given-names>C</given-names></name>, <name><surname>Dávila</surname><given-names>AM</given-names></name>, <name><surname>Senger</surname><given-names>H</given-names></name>, <name><surname>da Silva</surname><given-names>FA</given-names></name>. <article-title>SparkBLAST: scalable BLAST processing using in-memory operations</article-title>. <source>BMC bioinformatics</source>. <year>2017</year>;<volume>18</volume>(<issue>1</issue>):<fpage>318</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-017-1723-8</pub-id><pub-id pub-id-type="pmid">28655296</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref011">
      <label>11</label>
      <mixed-citation publication-type="book"><name><surname>Youssef</surname><given-names>K</given-names></name>, <name><surname>Feng</surname><given-names>Wc</given-names></name>. <chapter-title>SparkLeBLAST: Scalable Parallelization of BLAST Sequence Alignment Using Spark</chapter-title>. In: <source>20th IEEE/ACM International Symposium on Cluster, Cloud and Internet Computing (CCGrid)</source>. <publisher-loc>Melbourne, Victoria, Australia</publisher-loc>; <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="pone.0249410.ref012">
      <label>12</label>
      <mixed-citation publication-type="journal"><name><surname>Haft</surname><given-names>DH</given-names></name>, <name><surname>DiCuccio</surname><given-names>M</given-names></name>, <name><surname>Badretdin</surname><given-names>A</given-names></name>, <name><surname>Brover</surname><given-names>V</given-names></name>, <name><surname>Chetvernin</surname><given-names>V</given-names></name>, <name><surname>O’Neill</surname><given-names>K</given-names></name>, <etal>et al</etal>. <article-title>RefSeq: an update on prokaryotic genome annotation and curation</article-title>. <source>Nucleic acids research</source>. <year>2017</year>;<volume>46</volume>(<issue>D1</issue>):<fpage>D851</fpage>–<lpage>D860</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkx1068</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref013">
      <label>13</label>
      <mixed-citation publication-type="journal"><name><surname>O’Leary</surname><given-names>NA</given-names></name>, <name><surname>Wright</surname><given-names>MW</given-names></name>, <name><surname>Brister</surname><given-names>JR</given-names></name>, <name><surname>Ciufo</surname><given-names>S</given-names></name>, <name><surname>Haddad</surname><given-names>D</given-names></name>, <name><surname>McVeigh</surname><given-names>R</given-names></name>, <etal>et al</etal>. <article-title>Reference sequence (RefSeq) database at NCBI: current status, taxonomic expansion, and functional annotation</article-title>. <source>Nucleic acids research</source>. <year>2015</year>;<volume>44</volume>(<issue>D1</issue>):<fpage>D733</fpage>–<lpage>D745</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv1189</pub-id><?supplied-pmid 26553804?><pub-id pub-id-type="pmid">26553804</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref014">
      <label>14</label>
      <mixed-citation publication-type="journal"><name><surname>Altschul</surname><given-names>SF</given-names></name>, <name><surname>Madden</surname><given-names>TL</given-names></name>, <name><surname>Schäffer</surname><given-names>AA</given-names></name>, <name><surname>Zhang</surname><given-names>J</given-names></name>, <name><surname>Zhang</surname><given-names>Z</given-names></name>, <name><surname>Miller</surname><given-names>W</given-names></name>, <etal>et al</etal>. <article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>. <source>Nucleic acids research</source>. <year>1997</year>;<volume>25</volume>(<issue>17</issue>):<fpage>3389</fpage>–<lpage>3402</lpage>. <pub-id pub-id-type="doi">10.1093/nar/25.17.3389</pub-id><?supplied-pmid 9254694?><pub-id pub-id-type="pmid">9254694</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref015">
      <label>15</label>
      <mixed-citation publication-type="other">NCBI. The Statistics of Sequence Similarity Scores; 2019. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html">https://www.ncbi.nlm.nih.gov/BLAST/tutorial/Altschul-1.html</ext-link>.</mixed-citation>
    </ref>
    <ref id="pone.0249410.ref016">
      <label>16</label>
      <mixed-citation publication-type="journal"><name><surname>Karlin</surname><given-names>S</given-names></name> and <name><surname>Altschul</surname><given-names>SF</given-names></name>. <article-title>Methods for assessing the statistical significance of molecular sequence features by using general scoring schemes</article-title>. <source>Proceedings of the National Academy of Sciences</source>. <year>1990</year>;<volume>87</volume>(<issue>6</issue>):<fpage>2264</fpage>–<lpage>2268</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.87.6.2264</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref017">
      <label>17</label>
      <mixed-citation publication-type="journal"><name><surname>Altschul</surname><given-names>SF</given-names></name>, <name><surname>Bundschuh</surname><given-names>R</given-names></name>, <name><surname>Olsen</surname><given-names>R</given-names></name>, <name><surname>Hwa</surname><given-names>T</given-names></name>. <article-title>The estimation of statistical parameters for local alignment score distributions</article-title>. <source>Nucleic Acids Research</source>. <year>2001</year>;<volume>29</volume>(<issue>2</issue>):<fpage>351</fpage>–<lpage>361</lpage>. <pub-id pub-id-type="doi">10.1093/nar/29.2.351</pub-id><pub-id pub-id-type="pmid">11139604</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref018">
      <label>18</label>
      <mixed-citation publication-type="journal"><name><surname>Park</surname><given-names>Y</given-names></name>, <name><surname>Sheetlin</surname><given-names>S</given-names></name>, <name><surname>Ma</surname><given-names>N</given-names></name>, <name><surname>Madden</surname><given-names>TL</given-names></name>, <name><surname>Spouge</surname><given-names>JL</given-names></name>. <article-title>New finite-size correction for local alignment score distributions</article-title>. <source>BMC research notes</source>. <year>2012</year>;<volume>5</volume>(<issue>1</issue>):<fpage>286</fpage>. <pub-id pub-id-type="doi">10.1186/1756-0500-5-286</pub-id><pub-id pub-id-type="pmid">22691307</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref019">
      <label>19</label>
      <mixed-citation publication-type="journal"><name><surname>Lagnel</surname><given-names>J</given-names></name>, <name><surname>Tsigenopoulos</surname><given-names>CS</given-names></name>, <name><surname>Iliopoulos</surname><given-names>I</given-names></name>. <article-title>NOBLAST and JAMBLAST: New Options for BLAST and a Java Application Manager for BLAST results</article-title>. <source>Bioinformatics</source>. <year>2009</year>;<volume>25</volume>(<issue>6</issue>):<fpage>824</fpage>–<lpage>826</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btp067</pub-id><pub-id pub-id-type="pmid">19181685</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref020">
      <label>20</label>
      <mixed-citation publication-type="journal"><name><surname>Vårdal</surname><given-names>H</given-names></name>. <article-title>Venom gland and reservoir morphology in cynipoid wasps</article-title>. <source>Arthropod structure &amp; development</source>. <year>2006</year>;<volume>35</volume>(<issue>2</issue>):<fpage>127</fpage>–<lpage>136</lpage>. <pub-id pub-id-type="doi">10.1016/j.asd.2006.05.002</pub-id><pub-id pub-id-type="pmid">18089065</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref021">
      <label>21</label>
      <mixed-citation publication-type="journal"><name><surname>Peters</surname><given-names>RS</given-names></name>, <name><surname>Krogmann</surname><given-names>L</given-names></name>, <name><surname>Mayer</surname><given-names>C</given-names></name>, <name><surname>Donath</surname><given-names>A</given-names></name>, <name><surname>Gunkel</surname><given-names>S</given-names></name>, <name><surname>Meusemann</surname><given-names>K</given-names></name>, <etal>et al</etal>. <article-title>Evolutionary history of the Hymenoptera</article-title>. <source>Current Biology</source>. <year>2017</year>;<volume>27</volume>(<issue>7</issue>):<fpage>1013</fpage>–<lpage>1018</lpage>. <pub-id pub-id-type="doi">10.1016/j.cub.2017.01.027</pub-id><?supplied-pmid 28343967?><pub-id pub-id-type="pmid">28343967</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref022">
      <label>22</label>
      <mixed-citation publication-type="journal"><name><surname>Shah</surname><given-names>N</given-names></name>, <name><surname>Nute</surname><given-names>MG</given-names></name>, <name><surname>Warnow</surname><given-names>T</given-names></name>, <name><surname>Pop</surname><given-names>M</given-names></name>. <article-title>Misunderstood parameter of NCBI BLAST impacts the correctness of bioinformatics workflows</article-title>. <source>Bioinformatics</source>. <year>2018</year>; p. <fpage>bty833</fpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bty833</pub-id></mixed-citation>
    </ref>
    <ref id="pone.0249410.ref023">
      <label>23</label>
      <mixed-citation publication-type="journal"><name><surname>González-Pech</surname><given-names>RA</given-names></name>, <name><surname>Stephens</surname><given-names>TG</given-names></name>, <name><surname>Chan</surname><given-names>CX</given-names></name>. <article-title>Commonly misunderstood parameters of NCBI BLAST and important considerations for users</article-title>. <source>Bioinformatics</source>. <year>2018</year>;. <pub-id pub-id-type="doi">10.1093/bioinformatics/bty1018</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

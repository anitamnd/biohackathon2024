<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10313348</article-id>
    <article-id pub-id-type="pmid">37294786</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad376</article-id>
    <article-id pub-id-type="publisher-id">btad376</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Mistle: bringing spectral library predictions to metaproteomics with an efficient search index</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7537-3694</contrib-id>
        <name>
          <surname>Nowatzky</surname>
          <given-names>Yannek</given-names>
        </name>
        <aff><institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Berlin 12205, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Benner</surname>
          <given-names>Philipp</given-names>
        </name>
        <aff><institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Berlin 12205, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3078-8129</contrib-id>
        <name>
          <surname>Reinert</surname>
          <given-names>Knut</given-names>
        </name>
        <aff><institution>Department of Mathematics and Computer Science, FU Berlin</institution>, Berlin 14195, <country country="DE">Germany</country></aff>
        <aff><institution>Department of Computational Molecular Biology, Max Planck Institute for Molecular Genetics</institution>, Berlin 14195, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8304-2684</contrib-id>
        <name>
          <surname>Muth</surname>
          <given-names>Thilo</given-names>
        </name>
        <aff><institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Berlin 12205, <country country="DE">Germany</country></aff>
        <xref rid="btad376-cor1" ref-type="corresp"/>
        <!--thilo.muth@bam.de-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Valencia</surname>
          <given-names>Alfonso</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad376-cor1">Corresponding author. <institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Unter den Eichen 87, Berlin 12205, Germany. E-mail: <email>thilo.muth@bam.de</email> (T.M.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-09">
      <day>09</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>09</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>6</issue>
    <elocation-id>btad376</elocation-id>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>06</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>08</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>30</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad376.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Deep learning has moved to the forefront of tandem mass spectrometry-driven proteomics and authentic prediction for peptide fragmentation is more feasible than ever. Still, at this point spectral prediction is mainly used to validate database search results or for confined search spaces. Fully predicted spectral libraries have not yet been efficiently adapted to large search space problems that often occur in metaproteomics or proteogenomics.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>In this study, we showcase a workflow that uses Prosit for spectral library predictions on two common metaproteomes and implement an indexing and search algorithm, Mistle, to efficiently identify experimental mass spectra within the library. Hence, the workflow emulates a classic protein sequence database search with protein digestion but builds a searchable index from spectral predictions as an in-between step. We compare Mistle to popular search engines, both on a spectral and database search level, and provide evidence that this approach is more accurate than a database search using MSFragger. Mistle outperforms other spectral library search engines in terms of run time and proves to be extremely memory efficient with a 4- to 22-fold decrease in RAM usage. This makes Mistle universally applicable to large search spaces, e.g. covering comprehensive sequence databases of diverse microbiomes.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Mistle is freely available on GitHub at <ext-link xlink:href="https://github.com/BAMeScience/Mistle" ext-link-type="uri">https://github.com/BAMeScience/Mistle</ext-link>.</p>
      </sec>
    </abstract>
    <counts>
      <page-count count="12"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Metaproteomics is a key technology for characterizing proteins in complex microbial samples at a given time point (<xref rid="btad376-B28" ref-type="bibr">Wilmes and Bond 2004</xref>) and can provide pivotal information about taxon-specific functional activity, as well as signaling and metabolic pathways within the microbial community (<xref rid="btad376-B10" ref-type="bibr">Hettich <italic toggle="yes">et al.</italic> 2013</xref>, <xref rid="btad376-B23" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> 2017</xref>). This enables studying health and disease cases of host species, and ecological dynamics in all kinds of biological systems and microbiomes (<xref rid="btad376-B10" ref-type="bibr">Hettich <italic toggle="yes">et al.</italic> 2013</xref>, <xref rid="btad376-B19" ref-type="bibr">Scholz <italic toggle="yes">et al.</italic> 2015</xref>, <xref rid="btad376-B2" ref-type="bibr">Callieri <italic toggle="yes">et al.</italic> 2018</xref>). Inherent to the proteomic investigation of microbial communities is a large search space, because many species, often previously unknown ones, are present in a typical microbiome sample and need to be queried (<xref rid="btad376-B18" ref-type="bibr">Schiebenhoefer <italic toggle="yes">et al.</italic> 2019</xref>).</p>
    <p>Peptide identification lies at the heart of high-throughput proteomics workflows, where the collected sample of proteins is usually subjected to enzymatic digestion and liquid chromatography (LC) coupled with tandem mass spectrometry (MS/MS) (<xref rid="btad376-B4" ref-type="bibr">Coon <italic toggle="yes">et al.</italic> 2005</xref>, <xref rid="btad376-B10" ref-type="bibr">Hettich <italic toggle="yes">et al.</italic> 2013</xref>). Various search algorithms have been designed to identify the underlying peptides from the MS/MS spectra in a protein sequence database, assigning quality scores for so-called peptide spectrum matches (PSMs) (<xref rid="btad376-B26" ref-type="bibr">Verheggen <italic toggle="yes">et al.</italic> 2020</xref>). However, distinguishing true identifications from false positive hits becomes increasingly hard with increasing size of the protein database that is used as a reference for peptide identification (<xref rid="btad376-B25" ref-type="bibr">Verbruggen <italic toggle="yes">et al.</italic> 2021</xref>). A greater number of potential matches make it statistically more likely that a random false match receives a higher score than the true match (<xref rid="btad376-B16" ref-type="bibr">Nesvizhskii 2010</xref>, <xref rid="btad376-B25" ref-type="bibr">Verbruggen <italic toggle="yes">et al.</italic> 2021</xref>). When filtering for false positives, an increase in database size may lead to a reduced number of peptides identified. Even multi-stage search strategies, which aim to reduce the search space by tailoring the database through multiple search steps, may at the same time invoke more false discoveries (<xref rid="btad376-B15" ref-type="bibr">Muth <italic toggle="yes">et al.</italic> 2015</xref>, <xref rid="btad376-B26" ref-type="bibr">Verheggen <italic toggle="yes">et al.</italic> 2020</xref>). Evidently, there is a demand to overcome this inherent weakness of database search when facing large search spaces.</p>
    <p>Due to the diversity of species and genera found in microbial communities, metaproteomic studies are especially resource-straining for common database search engines, such as MSFragger (<xref rid="btad376-B12" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>), which compare MS/MS scans to theoretical fragment ions of peptides in the sequence database. This is noticeable not just in terms of reduced sensitivity in peptide identification, but also in increased run time, and even more prominently in memory requirements by the algorithms, due to the large candidate spaces.</p>
    <p>Machine learning approaches have been implemented to enhance peptide identification, e.g. by post-processing the database search results (<xref rid="btad376-B25" ref-type="bibr">Verbruggen <italic toggle="yes">et al.</italic> 2021</xref>). A particularly prominent example of this is Percolator (<xref rid="btad376-B11" ref-type="bibr">KÃ¤ll <italic toggle="yes">et al.</italic> 2007</xref>), which uses semi-supervised learning with support vector machines. More recently, deep learning models such as pDeep (<xref rid="btad376-B30" ref-type="bibr">Zhou <italic toggle="yes">et al.</italic> 2017</xref>) and Prosit (<xref rid="btad376-B9" ref-type="bibr">Gessulat <italic toggle="yes">et al.</italic> 2019</xref>) predict complete mass spectra including fragment intensities and retention time from peptide sequences, and thus offer a method to rescore database search results based on these predicted spectral features, coupled with Percolator.</p>
    <p>Consequently, Prosit also provides the means to predict spectral libraries for entire proteomes, which can then be queried. As of now, metaproteomics has not yet had a chance to fully make use of such comprehensive prediction workflows covering the proteomes of many species, as this leads to massive spectral libraries. Current spectral library search software, such as SpectraST (<xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>), is not equipped to meet run time and memory constraints imposed by such large MS/MS databases, covering &gt;10Â 000Â 000 peptide spectrum predictions. At the same time, metaproteomics could benefit from more precise search algorithms, as the large search space has been shown to reduce sensitivity and exacerbates challenges with false discovery estimation in large metaproteomic settings (<xref rid="btad376-B15" ref-type="bibr">Muth <italic toggle="yes">et al.</italic> 2015</xref>). In fact, <xref rid="btad376-B9" ref-type="bibr">Gessulat <italic toggle="yes">et al.</italic> (2019)</xref> mention the use case of Prosit for metaproteomics, and manage to improve database search results by rescoring the top Andromeda hits (<xref rid="btad376-B5" ref-type="bibr">Cox <italic toggle="yes">et al.</italic> 2011</xref>) using the spectral predictions. In 2021, Verbruggen <italic toggle="yes">et al.</italic> presented a solution for large search spaces in proteogenomics, for ribosomal profiling, by using predicted spectral features to enhance identification rate and stringency in PSMs. However, to this day there is no efficient workflow to apply complete spectral library predictions to metaproteomics and efficiently search such substantial amounts of MS/MS data.</p>
    <p>We propose such a workflow using a predicted library and directly search for the best matching peptide using spectral similarity measures. First, we digest the complete metaproteome sequence database (<italic toggle="yes">in silico</italic>) with EncyclopeDIA (<xref rid="btad376-B20" ref-type="bibr">Searle <italic toggle="yes">et al.</italic> 2020</xref>) and then use Prosit to predict MS/MS spectra for every peptide and charge configuration that is reasonably likely to occur in an MS/MS run. Finally, we use our novel <bold>M</bold>etaproteomic <bold>i</bold>ndex and <bold>s</bold>pec<bold>t</bold>ral <bold>l</bold>ibrary search <bold>e</bold>ngine, short Mistle, to query the spectral library.</p>
    <p>Mistle creates a small, searchable index and is extremely run time and memory efficient. We achieve this by adapting the fragment index of MSFragger to spectral intensity matching. Additionally, we introduce an advanced index partitioning and query scheduling method to the algorithm and add hardware optimization, such as SIMD intrinsics in combination with multithreading, to greatly reduce memory footprint and run time.</p>
    <p>This workflow virtually turns the sequence database search problem into a spectral library search problem. We benchmark the algorithmic performance of Mistle with state-of-the-art methods and examine the potential of our workflow to qualitatively and quantitatively improve metaproteomic studies on the peptide identification level, based on two sample metaproteomes, the lab-assembled nine-organism microbial mixture (9MM) by <xref rid="btad376-B21" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> (2013)</xref> and the extended simplified human intestinal microbiota (SIHUMIx) sample by <xref rid="btad376-B13" ref-type="bibr">Krause <italic toggle="yes">et al.</italic> (2020)</xref>.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>Mistle is inspired by the fragment index data structure introduced by <xref rid="btad376-B12" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> (2017)</xref> and employed in MSFragger. Instead of iteratively matching experimental spectra with every theoretical spectrum calculated from candidate peptide sequences, MSFragger constructs an index that stores theoretical fragment ions in a rapidly searchable format, enabling fast and simultaneous peak matching for peptide candidates. We adapt the core idea to the spectral search problem, where instead of a protein sequence database a predicted MS/MS library is queried.</p>
    <p>While the main idea remains the same, i.e. searching fragments in the fragment index and updating scores of their parents, which are now MS/MS spectra rather than peptides, there are significant additional challenges to overcome. For one, peak intensities must be considered and stored in the fragment index. This immediately makes the fragment index larger, which poses tangible memory problems for metaproteomics libraries and slows down processing because intensities must be multiplied. Simply counting and summing up intensities, as it is the case for MSFragger, is no longer sufficient. Also, the index needs to be constructed from a spectral library, which is data-intensive to a point where it is infeasible to hold all data in random access memory (RAM). Thus, information required to construct the data structures needs to be carefully and continuously conveyed throughout the reading process to produce the final index.</p>
    <p>Here, we introduce algorithmic solutions to all these hurdles and propose optimizations to counteract increased run time arising from the additional multiplication-operations when matching peaks. Mistle is implemented from scratch in C++ 20 and features single instruction multiple data (SIMD) extensions.</p>
    <sec>
      <title>2.1 Data structures</title>
      <sec>
        <title>2.1.1 Precursor index</title>
        <p>Similarly to MSFragger, we require an auxiliary data structure, referencing all library targets, i.e. peptides linked with their predicted MS/MS spectra. We call it precursor index, as entries are searchable by the precursor peak. It is equivalent to the peptide index described by <xref rid="btad376-B12" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> (2017)</xref>.</p>
        <p>Specifically, the precursor index stores a unique identifier (ID, 32-bit unsigned integer) for every mass spectrum in the library, which each corresponds to exactly one peptide. The IDs are ordered by the precursorâs charge and mass-to-charge ratio (<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic>). This serves as a reference for the fragment index. Additionally, a mapping must be provided from the ID to the rank of the spectrum in the precursor index. This is the inverse of the sorted precursor IDs. We implement this as an additional lookup vector, precomputed at index construction by a linear scan over the ranked ID vector.</p>
      </sec>
      <sec>
        <title>2.1.2 Fragment index</title>
        <p>In the fragment index, all fragment ions <italic toggle="yes">f</italic>, i.e. peaks, of library MS/MS spectra are stored in form of triplets, of the ion mass (<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> value, <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>), peak intensity (<inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) and the unique <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:math></inline-formula> of the underlying parent spectrum: <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mtext>parent</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The latter provides a reference from fragment to the matched peptide/spectrum and facilitates an efficient search of peaks from matching candidate spectra.</p>
        <p>For that to be possible, the fragments (triplets) are placed into bins based on their ion mass, given an adjustable bin width <italic toggle="yes">B</italic>. Inside each bin, fragments are sorted according to the parent rank in the precursor index, accessed via the parent ID. This way, for a certain mass range <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, every peak with <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>â¥</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula> of the entire spectral library is stored in the corresponding fragment bin. The order of those peaks allows for a division based on parent mass. The structure of the precursor and fragment index are illustrated in <xref rid="btad376-F1" ref-type="fig">Fig.Â 1</xref>.</p>
        <fig position="float" id="btad376-F1">
          <label>Figure 1.</label>
          <caption>
            <p>Precursor and fragment index data structures at construction. For an exemplary library spectrum (top left), it is shown how the precursor is included in precursor index sorted by mass (<italic toggle="yes">mz</italic>) and referenced by a unique identifier (<italic toggle="yes">id</italic>). All peaks are integrated in the fragment-ion bins corresponding to their ion mass and encoded as triplets [<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> value (<italic toggle="yes">mz</italic>), intensity (<italic toggle="yes">int</italic>) and parent ID (<italic toggle="yes">id</italic>)]. Their order inside each bin is determined by the rank of the parent in the precursor index.</p>
          </caption>
          <graphic xlink:href="btad376f1" position="float"/>
        </fig>
      </sec>
      <sec>
        <title>2.1.3 Partitioning</title>
        <p>As the union of precursor index and fragment index holds about as much information as the entire spectral library, the required index space grows linearly with the database size and needs to fit into main memory for efficient access. To make a search feasible for large reference libraries, we propose partitioning the main part of the index, i.e. fragment index, into several smaller sub-indices or partitions. Such a technique has been shown to be quite effective for other bioinformatic problems, showcased for instance by the DREAM index framework (<xref rid="btad376-B7" ref-type="bibr">Dadi <italic toggle="yes">et al.</italic> 2018</xref>). Ideally, each query spectrum only needs to be searched in one or a small number of partitions, which combined retain the original index data structure.</p>
        <p>We achieve this by creating separate fragment bins for each partition, which we tie to non-overlapping precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> intervals. A fragment triplet is stored in its corresponding fragment bin, for the partition only, where the parentâs precursor peak falls into the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> interval. Each partition has the full number of fragment bins, and acts as an individual fragment index. This way, a query spectrum only needs to be searched in a partition matching its precursor mass, within a given <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance. Also, within each partition the search algorithm can be performed identically. Merely the number of library spectra included is reduced for each partition. This not only reduces physical space that needs to fit into the main memory at a time, but also the search space for a given query within the partition. Fewer comparisons are needed during the binary search, explained in Section 2.2.</p>
      </sec>
      <sec>
        <title>2.1.4 Continuous index construction algorithm</title>
        <p>As mentioned before, the input library might be arbitrarily large and in no particular order. When reading the data, the precursor index, which is necessary to order all fragments, is unknown, up until the very end. A practical, memory efficient approach is to create preliminary (unsorted) index partitions on the disk when reading the library and to update the partitions once all relevant information has been obtained. A detailed description of the process can be found in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>.</p>
      </sec>
    </sec>
    <sec>
      <title>2.2 Search algorithm</title>
      <p>Partitioning the fragment index creates an initial overhead when searching experimental spectra, because spectral queries need to be scheduled to relevant partitions and merged afterwards. This is performed by assigning each experimental query spectrum a unique identifier and constructing a list of query IDs for each partition to address, based on the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> and mass tolerance. Then, each partition with at least one query scheduled is loaded into main memory, and spectral matching is performed.</p>
      <p>Initially, matches are ranked by the spectral dot product of normalized intensities, as described in Eq. (2) by <xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> (2007)</xref>. The similarity scoring function is refined later on. Raw intensity values are square rooted before normalization to de-emphasize dominant peaks. By definition, a peak only contributes to the dot product, if a matching peak from the other spectrum exists in the same <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> bin. Conversely, the dot product needs to be updated only for those reference spectra that have a fragment entry in the corresponding fragment bin. A binary search going through that fragment bin quickly narrows down the calculation to exactly those candidates that lie within the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range. Essentially, we leverage the data structures from Section 2.1 to perform a fast search, reminiscent of MSFraggerâs fragment index search, but compute the spectral dot product in the process, as is illustrated in <xref rid="btad376-F2" ref-type="fig">Fig.Â 2</xref>. The overt novelty lies within matching fragments by their intensities, in addition to the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> dimension, when iterating a fragment bin. The intensity product (<inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) of query peak <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and fragment <italic toggle="yes">f</italic> is added to the parent score, which is accessed by the parent identifier <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mtext>parent</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. As this is computationally costly, we speed up the arithmetic operations using SIMD extensions. The fused multiply-add operation (in C++: <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo>_</mml:mo><mml:mtext>mm</mml:mtext><mml:mn>256</mml:mn><mml:mo>_</mml:mo><mml:mtext>fmadd</mml:mtext><mml:mo>_</mml:mo><mml:mtext>ps</mml:mtext></mml:mrow></mml:math></inline-formula>), available for the Advanced Vector Extensions AVX2 and AVX512 architectures, allows parallel multiplication and addition of 8â16 floating-point numbers in a single CPU instruction. A schematic workflow with the use of SIMD for a 256-bit register is depicted in <xref rid="btad376-F2" ref-type="fig">Fig.Â 2</xref>, bottom left. Moreover, the search loop is parallelized matching each query spectrum on a separate thread.</p>
      <fig position="float" id="btad376-F2">
        <label>Figure 2.</label>
        <caption>
          <p>Illustration of the search process: matching an exemplary query spectrum (top left) to all indexed library spectra. First, the binary search step (1) is shown on the precursor index, where the lower and upper bound of candidate spectra is determined and an empty scoring vector is initialized (2). Thereafter, the peak-by-peak matching is shown for the fragment index, highlighted for the first query peak (turquoise) and the corresponding fragment bin. (3) Here, a binary search is performed to determine relevant matches with a parent rank within the lower and upper bound. (4) Lastly, fragment intensity entries are multiplied to the peak intensity and added to the respective parent scores. SIMD intrinsics may replace step 4, as shown on the bottom left, e.g. computing eight intensity products and adding them to the dot products in a single CPU operation.</p>
        </caption>
        <graphic xlink:href="btad376f2" position="float"/>
      </fig>
      <p>After ranking all candidate spectra with the fragment index, we reevaluate the top hits, tracking all kinds of statistics. A refined <italic toggle="yes">bias-adjusted similarity</italic> measurement, which resolves <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> bins by modeling peak intensity spread with a Gaussian bell curve, determines the X highest scoring library spectra (see Section 2.2.1 for a detailed description). X, the number of output PSMs per query spectrum (Xâ&gt;â0), is a parameter defined by the user. A step-by-step walk-through of the search loop including the implementation of SIMD with intrinsic C++ functions are discussed in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>.</p>
      <p>Once all scheduled queries are performed, the resulting PSMs from all the partitions are concatenated and sorted by query <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:math></inline-formula>. Matches assigned to the same experimental spectrum cluster together, and again only the top X ranked matches are retained, if a query was carried out in multiple partitions.</p>
      <sec>
        <title>2.2.1 Spectral similarity scoring</title>
        <p>At its core, Mistle provides high-performance spectral matching based on the spectral dot product of binned peaks [Eq.Â 2 by <xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> (2007)</xref>]. Precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance and bin width are parameters adjustable by the user. However, for any search engine to distinguish true from false matches, the choice and design of scoring functions and spectral processing steps are essential. Currently, the only pre-processing operations applied to the spectra are square root transformation and normalization of peak intensities. A top-k in window-w noise reduction approach is implemented for optional use. Top ranked matches for each query are rescored providing a multitude of scores including shared peak counts, a log-hyperscore, an <italic toggle="yes">f</italic>-value equivalent as seen in SpectraST, and various Mistle specific scores. Differences and refinements made to spectral similarity scoring are described below.</p>
        <p>Peak intensity spread over multiple bins (as is implemented in SpectraST) to account for slight shifts in peak <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> is inefficient with the proposed fragment index. Instead, we resolve the initial binning when rescoring matches. Our formula models peak intensity spread with a Gaussian bell curve put over the peaks and penalizes mass shifts as intensity decay along the curve. We define a similarity between a query spectrum <italic toggle="yes">Q</italic> and reference spectrum <italic toggle="yes">R</italic>, analogous to the dot product of binned intensities:
and
where <italic toggle="yes">k</italic> iterates over all reference peaks <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">l</italic> over all query peaks <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mo>Ï</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mo>Î¼</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> factors in the distance of <italic toggle="yes">mz</italic>-values given the standard deviation <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mo>Ï</mml:mo></mml:math></inline-formula> between peaks. We set <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mo>Ï</mml:mo></mml:math></inline-formula>, which models the fragment tolerance, equal to bin size. An analogous formula to the dot bias as provided by SpectraST (<xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>) can be established:
</p>
        <disp-formula id="E1">
          <label>(1)</label>
          <mml:math id="M1" display="block" overflow="scroll">
            <mml:mo>Â </mml:mo>
            <mml:mi>similarity</mml:mi>
            <mml:mo>(</mml:mo>
            <mml:mi>Q</mml:mi>
            <mml:mo>,</mml:mo>
            <mml:mi>R</mml:mi>
            <mml:mo>)</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mo>â</mml:mo>
                <mml:mi>k</mml:mi>
              </mml:munder>
            </mml:mrow>
            <mml:mrow>
              <mml:munder>
                <mml:mi>max</mml:mi>
                <mml:mi>l</mml:mi>
              </mml:munder>
            </mml:mrow>
            <mml:mo>Â </mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mi>I</mml:mi>
                <mml:mi>l</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mrow>
              <mml:msub>
                <mml:mi>I</mml:mi>
                <mml:mi>k</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>Ï</mml:mo>
            <mml:mo>(</mml:mo>
            <mml:mi>m</mml:mi>
            <mml:mrow>
              <mml:msub>
                <mml:mi>z</mml:mi>
                <mml:mi>l</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>,</mml:mo>
            <mml:mi>m</mml:mi>
            <mml:mrow>
              <mml:msub>
                <mml:mi>z</mml:mi>
                <mml:mi>k</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>)</mml:mo>
            <mml:mo>,</mml:mo>
          </mml:math>
        </disp-formula>
        <disp-formula id="E2">
          <label>(2)</label>
          <mml:math id="M2" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mo>Ï</mml:mo>
              <mml:mo stretchy="false">(</mml:mo>
              <mml:mi>x</mml:mi>
              <mml:mo>,</mml:mo>
              <mml:mo>Î¼</mml:mo>
              <mml:mo stretchy="false">)</mml:mo>
              <mml:mo>=</mml:mo>
              <mml:mtext>exp</mml:mtext>
              <mml:mo>â</mml:mo>
              <mml:mrow>
                <mml:mo>(</mml:mo>
                <mml:mrow>
                  <mml:mo>â</mml:mo>
                  <mml:mrow>
                    <mml:mfrac>
                      <mml:mrow>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:mfrac>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mrow>
                                <mml:mfrac>
                                  <mml:mrow>
                                    <mml:mi>x</mml:mi>
                                    <mml:mo>â</mml:mo>
                                    <mml:mo>Î¼</mml:mo>
                                  </mml:mrow>
                                  <mml:mo>Ï</mml:mo>
                                </mml:mfrac>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:msup>
                  </mml:mrow>
                </mml:mrow>
                <mml:mo>)</mml:mo>
              </mml:mrow>
              <mml:mo>,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <disp-formula id="E3">
          <label>(3)</label>
          <mml:math id="M3" display="block" overflow="scroll">
            <mml:mo>Â </mml:mo>
            <mml:mi>bias</mml:mi>
            <mml:mo>(</mml:mo>
            <mml:mi>Q</mml:mi>
            <mml:mo>,</mml:mo>
            <mml:mi>R</mml:mi>
            <mml:mo>)</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:mfrac>
                <mml:mn>1</mml:mn>
                <mml:mrow>
                  <mml:mi>similarity</mml:mi>
                  <mml:mo>(</mml:mo>
                  <mml:mi>Q</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>R</mml:mi>
                  <mml:mo>)</mml:mo>
                </mml:mrow>
              </mml:mfrac>
            </mml:mrow>
            <mml:msqrt>
              <mml:mrow>
                <mml:munder>
                  <mml:mo>â</mml:mo>
                  <mml:mi>k</mml:mi>
                </mml:munder>
              </mml:mrow>
              <mml:mrow>
                <mml:mo>(</mml:mo>
                <mml:mrow>
                  <mml:munder>
                    <mml:mrow>
                      <mml:mi>max</mml:mi>
                      <mml:mo>Â </mml:mo>
                    </mml:mrow>
                    <mml:mi>l</mml:mi>
                  </mml:munder>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mi>I</mml:mi>
                    <mml:mi>l</mml:mi>
                  </mml:msub>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mi>I</mml:mi>
                    <mml:mi>k</mml:mi>
                  </mml:msub>
                </mml:mrow>
                <mml:mo>Ï</mml:mo>
                <mml:mo>(</mml:mo>
              </mml:mrow>
              <mml:mi>m</mml:mi>
              <mml:mrow>
                <mml:msub>
                  <mml:mi>z</mml:mi>
                  <mml:mi>l</mml:mi>
                </mml:msub>
              </mml:mrow>
              <mml:mo>,</mml:mo>
              <mml:mi>m</mml:mi>
              <mml:mrow>
                <mml:msub>
                  <mml:mi>z</mml:mi>
                  <mml:mi>k</mml:mi>
                </mml:msub>
              </mml:mrow>
              <mml:mo>)</mml:mo>
              <mml:mrow>
                <mml:msup>
                  <mml:mo>)</mml:mo>
                  <mml:mn>2</mml:mn>
                </mml:msup>
              </mml:mrow>
            </mml:msqrt>
            <mml:mo>.</mml:mo>
          </mml:math>
        </disp-formula>
        <p>For the purpose of this study, we employ a <italic toggle="yes">bias-adjusted similarity</italic> measurement as: <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mi>similarity</mml:mi><mml:mo>â</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:mi>bias</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>.</p>
        <p>Note that as Prosit only predicts <italic toggle="yes">b</italic> and <italic toggle="yes">y</italic> ion intensities, it might be ill-advised to score similarity based on all peaks. A correct match might achieve an inferior score, when additional ion-type peaks are present, which are not matched by the prediction. Therefore, we introduce a second type of similarity, which only considers similarity of matched peaks, which we call <italic toggle="yes">reflection score</italic>. All unmatched peaks from the experimental spectrum are considered noise and do not influence this score. Bias and <italic toggle="yes">bias-adjusted similarity</italic> are formulated equivalently on matching ions only. The final scoring function for the evaluation of target decoy competition is the average between <italic toggle="yes">bias-adjusted similarity</italic> and the <italic toggle="yes">reflection score</italic> version of the same formula. Remember that the <italic toggle="yes">reflection score</italic> alone might not provide a perfect distinction either, since it can disregard large portions of the experimental MS/MS spectrum. A false peptide might achieve a high score by matching well to small peaks annotated as <italic toggle="yes">b</italic> and <italic toggle="yes">y</italic> ions yet leaving most of the peak intensity unaccounted for. Thus, we opt for the average out of both spectral similarity measurements.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 Data preparation</title>
      <p>The datasets in this study were derived from sources in the public domain. Identifiers and links to the data are provided below and in the <ext-link xlink:href="https://dx.doi.org/10.1093/bioinformatics/btad376" ext-link-type="uri">Supplementary Text</ext-link>. We evaluate the performance of Mistle on the NIST human (<italic toggle="yes">Homo sapiens</italic>) consensus library (downloaded from <monospace>doi.org/10.18434/T4ZK5S; Instrument: Ion Trap; Build date: </monospace>05-29-2014) and two common mock communities, 9MM (<xref rid="btad376-B21" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> 2013</xref>) and SIHUMIx (<xref rid="btad376-B13" ref-type="bibr">Krause <italic toggle="yes">et al.</italic> 2020</xref>). For the latter, we follow the recently published CAMPI study (<xref rid="btad376-B24" ref-type="bibr">Van Den Bossche <italic toggle="yes">et al.</italic> 2021</xref>), such that the evaluation is on par with the current metaproteomic benchmarking standard.</p>
      <p>Protein sequence databases are re-utilized from <xref rid="btad376-B22" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> (2014)</xref> and the CAMPI study. Four original search files for 9MM and two large search files from CAMPI are selected for the comparison. Additionally, a yeast (<italic toggle="yes">Saccharomyces cerevisiae</italic>) consensus library by NIST (downloaded from <ext-link xlink:href="https://doi.org/10.18434/T4ZK5S" ext-link-type="uri">doi.org/10.18434/T4ZK5S</ext-link>; Instrument: Ion Trap; Build date: 04-06-2012) serves as an experimental ground truth dataset. A summary of the two microbiomes and the data is found in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>.</p>
      <p>The human spectral library is queried with 18 search files from the human HEK293 cell line [<xref rid="btad376-B17" ref-type="bibr">Roos <italic toggle="yes">et al.</italic> (2016)</xref>; PRIDE ID: PXD001197] aligning our study with the spectral benchmarking by <xref rid="btad376-B27" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> (2020)</xref> that already compared msSLASH and SpectraST.</p>
      <sec>
        <title>2.3.1 Spectral library construction</title>
        <p>The human spectral library is set up with SpectraST (in .mgf format) with the corresponding decoy library generated using the decoy precursor swap method by <xref rid="btad376-B3" ref-type="bibr">Cheng <italic toggle="yes">et al.</italic> (2013)</xref>. In total, the library consists of 339Â 970 target precursors and 339Â 942 decoy precursors.</p>
        <p>Spectral libraries covering both microbiomes are predicted with the following workflow: The protein sequence databases are digested using EncyclopeDIA (<xref rid="btad376-B20" ref-type="bibr">Searle <italic toggle="yes">et al.</italic> 2020</xref>) with a mass range of 400â1500âDa, charge states 2â4, and up to two missed cleavages. The normalized collision energy (NCE) is left at default value 33. Then, a locally installed version of Prosit, downloaded from <ext-link xlink:href="https://github.com/kusterlab/prosit" ext-link-type="uri">https://github.com/kusterlab/prosit</ext-link> in 2019, is used to predict MS/MS spectra for all peptides and charge conformations in the peptide list. This way, the only modification considered is Cysteine Carbamidomethylation, which is fixed. A decoy library, when necessary, is created using DecoyPyrat (<xref rid="btad376-B29" ref-type="bibr">Wright and Choudhary 2016</xref>) with minimum peptide length 7, and the downstream procedure is executed identically. Note that the SIHUMIx database already contains decoy sequences. Here, the database is split into two separate sets instead, before digestion and prediction. For 9MM, the contaminants database cRAP is appended downloaded from the GPM FTP site <ext-link xlink:href="http://ftp.thegpm.org/fasta/cRAP/" ext-link-type="uri">http://ftp.thegpm.org/fasta/cRAP/</ext-link> in December 2021. Additionally, the human proteome, downloaded from Uniprot Proteomes (Proteome ID: UP000005640), is added as an entrapment database to the target sequences. Again, we produce corresponding decoys with the method described above and digest and predict the spectral libraries accordingly.</p>
        <p>All of this results in 9Â 995Â 224 human peptide spectra predicted by Prosit, 10Â 630Â 095 spectra from 9MM and 7Â 806Â 271 spectra from SIHUMIx species (51.8âGB in .msp format in total). The <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> contains additional statistics regarding all datasets.</p>
      </sec>
      <sec>
        <title>2.3.2 Search setup</title>
        <p>The <italic toggle="yes">mistle-build</italic> (v0.1.1) indexing algorithm is applied to the data creating a searchable index with 64 search partitions in condensed binary format for the target and decoy library. The four experimental 9MM files are then searched using the <italic toggle="yes">mistle-search</italic> (v0.1.1) program with 10âppm precursor tolerance and 0.2âDa fragment tolerance (bin size), as suggested by <xref rid="btad376-B21" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> (2013)</xref>. The yeast consensus spectra were searched at 10âppm precursor tolerance. Here, we relaxed the fragment tolerance to 0.5âDa, as the machine accuracy is unknown and a higher fragment tolerance was found to perform better. The two experimental files from the CAMPI study are searched in the SIHUMIx library with 10âppm precursor tolerance and 0.02âDa fragment tolerance as was done by <xref rid="btad376-B24" ref-type="bibr">Van Den Bossche <italic toggle="yes">et al.</italic> (2021)</xref>.</p>
        <p>We conduct the exact same searches with SpectraST and msSLASH (<xref rid="btad376-B27" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2020</xref>) on the target and decoy libraries, and with MSFragger given the original protein sequence databases. MSFragger 3.4 was used via the FragPipe pipeline. SpectraST version 5.0 was installed together with the TPP v6.0.0 software (<xref rid="btad376-B8" ref-type="bibr">Deutsch <italic toggle="yes">et al.</italic> 2015</xref>) and msSLASH was downloaded from GitHub (<ext-link xlink:href="https://github.com/COL-IU/msSLASH" ext-link-type="uri">https://github.com/COL-IU/msSLASH</ext-link>). Precursor and fragment tolerances are set as described above, peptide mass ranges are defined accordingly, and modifications are set to carbamidomethylated Cysteine only, to ensure a fair comparison. Aside from that, all tools run with default parameters. All pre-processing steps and mass calibrations are allowed. Since SpectraST and msSLASH accept precursor tolerance only in absolute values, we set it to 0.015, so that it considers all candidates for the largest peptides (10âppm of 1500âDa).</p>
      </sec>
      <sec>
        <title>2.3.3 Quality control</title>
        <p>False discovery rate (FDR) estimation using target decoy competition is put in place as primary technique to ensure high quality of identification. For separate target and decoy searches (Mistle and SpectraST) the results are first merged, retrieving only the top scoring hit, either from the target or the decoy library. The FDR is then estimated from the number of target peptides <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>target</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> emitted at any scoring threshold <italic toggle="yes">t</italic> and corresponding the number of decoys <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>decoy</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, as a measure of false discoveries <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>false</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> among them:
<inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>false</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is directly measurable only if the correct peptides for the MS/MS spectra are specified.</p>
        <disp-formula id="E4">
          <label>(4)</label>
          <mml:math id="M4" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mtext>FDR</mml:mtext>
              <mml:mo stretchy="false">(</mml:mo>
              <mml:mi>t</mml:mi>
              <mml:mo stretchy="false">)</mml:mo>
              <mml:mo>=</mml:mo>
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>false</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>target</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
              <mml:mo>â</mml:mo>
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>decoy</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>target</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>Afterwards, the FDR estimate is validated using human protein sequences as entrapment database. Target peptide identifications that are unmistakably ascribed to human proteins are deemed false positives and an entrapment false discovery estimate can be computed by:
where <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>trap</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of entrapment peptides among the target identification and <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>target</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of all target identifications at scoring threshold <italic toggle="yes">t</italic>. R is the ratio of target database size over entrapment database size (number of peptides).</p>
        <disp-formula id="E5">
          <label>(5)</label>
          <mml:math id="M5" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mtext>FDR</mml:mtext>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mtext>trap</mml:mtext>
                  </mml:mrow>
                </mml:msub>
              </mml:mrow>
              <mml:mo stretchy="false">(</mml:mo>
              <mml:mi>t</mml:mi>
              <mml:mo stretchy="false">)</mml:mo>
              <mml:mo>=</mml:mo>
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>trap</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>target</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
              <mml:mo>â</mml:mo>
              <mml:mi>R</mml:mi>
              <mml:mo>,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>Moreover, we append the post-processing software Percolator (version 3.05.0) (<xref rid="btad376-B11" ref-type="bibr">KÃ¤ll <italic toggle="yes">et al.</italic> 2007</xref>) to investigate target decoy separation enhanced by support vector machines for Mistle and MSFragger. Parameters are used as suggested by the Fragpipe pipeline (with following flags set: --only-psms, --no-terminate, and --post-processing-tdc). FDR estimation is performed by Percolator. Features provided to Percolator include all the statistics collected by Mistle during the search. These range from various similarity and delta scores (see Section 2.2.1) to relevant metadata such as peptide length and precursor mass. The significance of individual features is discussed in the Section 3.4.</p>
        <p>The impact of retention time features is evaluated separately with Percolator. Here, we use DeepLC (version 1.2.1) (<xref rid="btad376-B1" ref-type="bibr">Bouwmeester <italic toggle="yes">et al.</italic> 2021</xref>) to predict retention times, which are compared to the measured retention times of the experimental spectra. Absolute, squared and log distance, as well as a relative difference between measurement and prediction are calculated and added as columns to the input of Percolator.</p>
      </sec>
    </sec>
    <sec>
      <title>2.4 Run time and memory consumption evaluation</title>
      <p>All searches are performed on a Debian 5.10.113-1 system with an Intel(R) Xeon(R) Gold 5120 CPU @ 2.20âGHz and RAM of type DDR4, and with the data residing on an SSD. Eight threads were provided for each tool to make use of.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Run time and memory performance</title>
      <p>Time and hardware resources can become a critical factor when looking at large metaproteomes, covering thousands of species. For the moment, we evaluate run time and memory performances of all search software on a human consensus library and the two small lab-assembled microbiomes, 9MM and SIHUMIx. Feasibility for larger databases is discussed later on.</p>
      <sec>
        <title>3.1.1 Run time</title>
        <p>MSFragger is currently one of the most popular and time-wise best performing database search algorithms. We use MSFragger as representative of sequence database search algorithms in contrast to the spectral library search algorithms we evaluate against. Note that spectral library search faces inherently different bottlenecks, e.g. data loading and continuous index construction, since it does not have the whole database information immediately, unless it loads every spectrum into RAM. At the same time, no sequence processing is required, e.g. protein digestion. As for the spectral library search engines, we compare Mistle to SpectraST, as it is a stable and popular option among spectral search software. Additionally, we benchmark msSLASH, which has been recently developed and introduces massive run time improvements by using Locality-Sensitive Hashing (<xref rid="btad376-B27" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2020</xref>).</p>
        <p><xref rid="btad376-F3" ref-type="fig">FigureÂ 3</xref> compares the time required to search all experimental files between all four algorithms, split according to the spectral library. In all cases, Mistle is faster than the other spectral library search algorithms. The gain in performance is more significant the larger the library is. The metaproteome libraries are approximately 30 times larger (in terms of MS/MS spectra) than the human library, which is most notable in the increase in index construction time for Mistle and SpectraST. Mistle outperforms SpectraST by a factor of 2 (human library) to &gt;10 (metaproteomes) and msSLASH by a factor of 2 when searching the predicted metaproteomes.</p>
        <fig position="float" id="btad376-F3">
          <label>Figure 3.</label>
          <caption>
            <p>Total run time of all experimental search files measured for human, 9MM, and SIHUMIx libraries. Indexing time is indicated by stripes, whenever a separate index instance is constructed and saved to disk as intermediary step. Mistle performs the queries faster than any spectral library search engine (left side) but is slower than the database search algorithm MSFragger (right side).</p>
          </caption>
          <graphic xlink:href="btad376f3" position="float"/>
        </fig>
        <p>This places Mistle on a level comparable to the database search algorithm MSFragger, which is still a few times faster. Turning off MSFraggerâs mass calibration and parameter optimization reduces its run time even further down to 1.9âmin (less than half), highlighting that spectral search cannot quite match the speed of highly optimized database search. Reasons for that are: (i) the large index construction and data reading times, which in case of Mistle make up half of the total run time measured, requiring multiple I/O operations to load and save spectra and their fragments; (ii) a more cost-intensive spectral similarity calculation; and (iii) a current lack of optimization for multiple search files that require reloading Mistleâs index partitions between runs. Combining consecutive searches into a single query immediately speeds up the process. We test this by concatenating the four 9 MM search files into a single search file and analyse it with Mistle. While still querying the exact same experimental spectra, the search time reduces from 21âmin down to 7âmin, which is almost as fast as MSFragger. Also, note that the fragment index of Mistle needs to be constructed only once for each spectral library. Hence, when more files (or spectra) are searched, the run time reduces in relation to the other tools. Indexing time is indicated by the striped section in <xref rid="btad376-F3" ref-type="fig">Fig.Â 3</xref> for Mistle and SpectraST. Note that for predicted spectral libraries, the indexing time gets overshadowed by the construction and prediction process of the spectral data itself, which is much more time consuming. For instance, the 9MM target and decoy libraries alone take around 16âh for the prediction with Prosit (10Â 630Â 095 spectra).</p>
        <p>Additionally, we investigated the time spent in distinct parts of the search loops, finding that <italic toggle="yes">mistle-search</italic> (lower bar in <xref rid="btad376-F3" ref-type="fig">Fig.Â 3</xref>) uses more than 90<inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of its time for loading the spectral index and constructing data structures. Conversely, Mistle spends &lt;10<inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of the time performing spectral queries, i.e. candidate search in the precursor index, fragment matching, and the final rescoring of top-ranked candidates. This demonstrates a current bottleneck at index loading operations that could benefit from further optimizations in the future, such as the use of memory mapping. Still, time-wise the fragment index search of Mistle introduces major improvements to spectral library search and brings it into a feasible reach compared to sequence database search.</p>
      </sec>
      <sec>
        <title>3.1.2 Memory</title>
        <p>We analyse the memory requirements for all software, measured by the peak memory consumption across all runs against the human consensus library, 9MM and SIHUMIx, respectively. Metaproteome libraries are composed of the respective target spectra, the predicted human proteome (for entrapment) and the contaminants database with the predicted decoy libraries matching those. <xref rid="btad376-F4" ref-type="fig">FigureÂ 4</xref> depicts the memory consumption in Gigabyte (GB). We find extraordinary memory improvements by the index partitioning and search scheduling method implemented in Mistle compared to all other search software, being around an order of magnitude more memory efficient. Compared to SpectraST, Mistle requires 10â22 times less RAM, performing the exact same task. Mistle effectively constructs a fragment index and performs searches in a 38âGB large MS/MS library (9MM) with less than 3âGB RAM, enabling queries on low performance computers, e.g. home laptops.</p>
        <fig position="float" id="btad376-F4">
          <label>Figure 4.</label>
          <caption>
            <p>Memory consumption measured over all searches against the human, 9MM, and SIHUMIx libraries. Mistle performs much more RAM efficiently than all other tools with a 10 to 22-fold decrease in memory usage when compared to SpectraST and up to 10-fold decrease when compared to msSLASH, and &gt;10-fold decrease when compared to MSFragger (run in default settings without memory restriction).</p>
          </caption>
          <graphic xlink:href="btad376f4" position="float"/>
        </fig>
        <p>We provide detailed information on how index partitioning and search scheduling affect run time and memory consumption in <xref rid="btad376-F5" ref-type="fig">Fig.Â 5</xref>. While the run time remains relatively constant and even improves slightly with increasing partition count, the drop in memory consumption is eminent. The complete index (one partition) is comparable in size to MSFraggerâs fragment index, though it holds additional information, such as peak intensity values. However, with the use of more than one partition, the RAM usage decreases according to the partition size. The usage converges to roughly 2âGB when using hundreds of partitions. This is the cached size of precursor index and query spectra together, while the fragment index size gets arbitrarily small by the partitioning. We use Mistle with 64 partitions in this study as it significantly reduces memory consumption with a stable run time, but the optimum is not reached with 64 partitions for this dataset.</p>
        <fig position="float" id="btad376-F5">
          <label>Figure 5.</label>
          <caption>
            <p>Memory consumption (black) and run time (green) shown for increasing numbers of partitions of Mistleâs fragment index for the 9MM target library. Peak RAM was measured, and the run time is divided into the time required to build the fragment index (dots) and search time (crosses) for the largest search file (9MM<inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mo>_</mml:mo></mml:math></inline-formula>Run<inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mo>_</mml:mo></mml:math></inline-formula>1.mgf).</p>
          </caption>
          <graphic xlink:href="btad376f5" position="float"/>
        </fig>
        <p><xref rid="btad376-F5" ref-type="fig">FigureÂ 5</xref> also highlights the imbalance between search time and index construction time, as mentioned before. For a single search file, index construction takes almost three times longer than the spectral matching and ranking process, rendering Misle less efficient when the library is only queried once. On the other hand, many or particularly large MS/MS runs evaluated against the same metaproteome database benefit from an excellent search time on individual runs, where the fragment index (and spectral library) only needs to be constructed at the outset of an analysis.</p>
        <p>RAM accessible to MSFragger can be restricted manually at an increase in run time. Restriction to 20 and 10âGB leads to a minor increase in search time of 10%â20%. Testing the limits, for 9MM we were able to reduce MSFraggerâs memory consumption down to 3âGB (3.7âGB measured when running with FragPipe) before the program rejected the job due to insufficient memory. We measured a run time increase of around 65<inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> (8.1âmin in total). In the case of SIHUMIx, MSFragger crashes when setting the available memory to 3âGB. The lowest memory consumption achievable without an error was 4.6âGB. While these numbers are tolerable, large-scale metaproteomics reference databases are easily 100 times as large, such that memory requirements can have a profound impact on run time and feasibility. Mistle excels in memory-confined environments, where Mistle is not only much more performant than other spectral search software but also a real alternative to database search.</p>
      </sec>
    </sec>
    <sec>
      <title>3.2 Quality control</title>
      <p>Target decoy competition is the state-of-the-art method for quality assurance of PSMs, which we employ for all tested software. It is essential though, to verify that the FDR estimation is correct and remains stable across many datasets, especially when dealing with large search spaces. We put two mechanisms in place to validate the target decoy FDR. A yeast consensus library with annotated mass spectra serves as ground truth, which is queried against the inflated search space of 9MM (and entrapment) sequences. <italic toggle="yes">Saccharomyces cerevisiae</italic> is one of the species in the 9MM library. The second means of error estimation are entrapment sequences, which are concatenated to the target library. They provide an orthogonal FDR estimate (<inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>FDR</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mtext>trap</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) to confirm that the target decoy FDR remains stable across all performed searches. A mathematical description can be found in Section 2.3.3.</p>
      <p><xref rid="btad376-F6" ref-type="fig">FigureÂ 6</xref> shows the performance of all tools on the yeast ground truth dataset. We evaluate the number of PSMs at various target decoy FDR thresholds (<xref rid="btad376-F6" ref-type="fig">Fig.Â 6a</xref>) and compare them with the true FDR (<xref rid="btad376-F6" ref-type="fig">Fig.Â 6c</xref>) measured according to the peptide annotations in the consensus library. All algorithms except msSLASH identify high numbers of yeast spectra at 1<inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> FDR, but Mistle identifies the most (82<inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of all search spectra). The true FDR is well reflected by the target decoy FDR estimate for all methods. Merely, in the case of SpectraSTâs f-value the FDR is slightly overestimated, indicating that the cut-off is too stringent but otherwise correct, for this dataset. Even msSLASH, which struggles with peptide identification still maintains a relatively accurate FDR estimation. In conclusion, the spectral prediction approach for entire metaproteome sequence databases, including the MS/MS prediction of decoy sequences, provides the foundation for highly effective quality control. FDR estimation remains accurate no matter which search engine is used to perform the matching. Of course, the same holds for MSFragger when scoring target and decoy sequences.</p>
      <fig position="float" id="btad376-F6">
        <label>Figure 6.</label>
        <caption>
          <p>Statistics on yeast consensus spectra (ground truth) matched to the 9MM library (inflated search space): (a) PSM output numbers over FDR for all software; (b) score distribution of rank-1 target and decoy PSMs identified by Mistle; (c) true FDR (derived from peptide annotation provided for the yeast spectra) over target decoy FDR estimates. The black diagonal line displays where true FDR and target decoy estimate align perfectly. The vertical dotted lines in Figures (a) and (b) display the 1% FDR threshold.</p>
        </caption>
        <graphic xlink:href="btad376f6" position="float"/>
      </fig>
      <p>In addition, we investigated the effect of different scores tracked by Mistle on the FDR. The PSM distribution of Mistleâs main scoring function (<italic toggle="yes">average bias-adjusted similarity</italic>, see Section 2.2.1) is depicted in <xref rid="btad376-F6" ref-type="fig">Fig.Â 6b</xref>. The scores follow a bimodal distribution and decoy scores belong to one of the modes. This is another indication of a clean separation of true and false target PSMs by Mistle. Interestingly, we discovered that removing the <italic toggle="yes">reflection score</italic> from the <italic toggle="yes">bias-adjusted similarity</italic> improves PSM output, but at the same time slightly underestimates the true FDR. The dot product alone does not suffice to distinguish target and decoy matches properly in this enlarged search space. This is reflected by the poor performance of msSLASH, which uses a dot product of log-scaled peak intensities, and we can confirm this with Mistleâs dot product of square root transformed intensities. PSM output numbers for the standard <italic toggle="yes">bias-adjusted similarity</italic> and the dot product are shown in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <p>The entrapment sequences added to 9MM and SIHUMIx allow another measurement of false discoveries, as identified peptides that exclusively match to human proteins are most probably wrong. We ensured that the human entrapment spectra follow a similar distribution to both 9MM and SIHUMIx (regarding precursor mass ranges, charge types and number of peaks; shown in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>). Therefore, entrapment sequences fulfill the same role as decoy peptides, but are real biological peptides rather than computationally generated ones. <xref rid="btad376-F7" ref-type="fig">FigureÂ 7</xref> shows the entrapment FDR over the target decoy FDR as a range (minimum, maximum and average) across all 9MM and SIHUMIx runs. For the most part, the entrapment FDR lies close to the target decoy FDR without much variation. The diagonal line indicates where the two FDR estimates are equal. msSLASH appears to have a higher variance in that regard, which we attribute to the smaller numbers of significant PSMs. SpectraST again, slightly overestimates the FDR rates with decoy sequences. Overall, the two orthogonal FDR estimates agree consistently, such that we expect little deviation from the true FDR throughout all the performed searches. Target decoy competition appears to be a well suited error estimation method for predicted spectral libraries of metaproteomes.</p>
      <fig position="float" id="btad376-F7">
        <label>Figure 7.</label>
        <caption>
          <p>Entrapment FDR over target decoy FDR measured across all searches against the predicted metaproteome libraries (9MM and SIHUMIx). The range in entrapment FDR is displayed by the colored area for any target decoy FDR interval with the average displayed by the inner line. The black diagonal line (slopeâ=â1) indicates the desired scenario, where the two FDR estimates align perfectly.</p>
        </caption>
        <graphic xlink:href="btad376f7" position="float"/>
      </fig>
      <p>We conclude that Mistleâs scoring function descriminates well between true and false matches. Target scores are well separable by the bimodal distribution of their scores. If such behavior manifests throughout more and specifically larger datasets, omitting target decoy competition might be an eligible option. A mixture model approach as for example discussed by <xref rid="btad376-B16" ref-type="bibr">Nesvizhskii (2010)</xref> might realize FDR estimation equally well. Dropping decoy sequences altogether would reduce computational resources needed for library prediction, fragment index construction, and spectral search, enabling metaproteomic studies of much larger scale. Furthermore, FDR validation with the ground truth yeast spectra and entrapment sequences demonstrate the high quality of spectral matches with predicted peak intensities. Regardless of which search engine is used, a high quality of true peptide identification persists, which further support the proposed prediction workflow.</p>
    </sec>
    <sec>
      <title>3.3 Peptide identification</title>
      <p>We investigate peptide identification rates on PSM level and peptide level for all three datasets and all algorithms at 1% FDR. The PSM numbers are averaged across all search files queried with error-bars shown in <xref rid="btad376-F8" ref-type="fig">Fig.Â 8</xref> (on the left) for each dataset. On the right, the sets of distinct peptides and the overlap between the search algorithms are shown with an upset plot. In all cases, Mistle is extremely sensitive being the best or second best search engine in terms of PSM output. The identification rates range from 23% (9MM) to 73% (human). In comparison to the CAMPI benchmarking study, we observe fewer significant PSMs at 1% FDR: &lt;100Â 000 for all search engines and files, whereas approximately 120Â 000 were identified in the CAMPI study. However, our library setup is more restrictive in terms of modification and permitted length of peptidesâcompare Section 2.3 with <xref rid="btad376-B24" ref-type="bibr">Van Den Bossche <italic toggle="yes">et al.</italic> (2021)</xref>âmaking it hard to judge the difference in raw numbers. Additionally, the statistics for S05 and S06 search files in the CAMPI study were obtained by database search with X! Tandem (<xref rid="btad376-B6" ref-type="bibr">Craig and Beavis 2004</xref>), which uses a two-stage search strategy, likely yielding additional hits.</p>
      <fig position="float" id="btad376-F8">
        <label>Figure 8.</label>
        <caption>
          <p>PSM and peptide output for the (a) human, (b) 9MM, and (c) SIHUMIx libraries. PSM counts are averaged across all search files based on the software-specific scoring thresholds at 1<inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> FDR (without rescoring), shown on the left. Sets of identified peptides are depicted with an upset plot on the right (all searches combined). The individual bars show the set of peptides distinct to each software and the overlap between them. Peptides unique to Mistle are shown by the first bar. The overlap between the spectral search software (Mistle and SpectraST, as well as Mistle, SpectraST, and msSLASH) is highlighted.</p>
        </caption>
        <graphic xlink:href="btad376f8" position="float"/>
      </fig>
      <p>When querying the predicted metaproteome libraries, Mistle identifies the largest sets of distinct peptides with SpectraST and MSFragger following closely behind. Only for the human spectral library msSLASH identifies more peptides than Mistle with its log-scaled dot product. However, the discriminating power of the dot product significantly drops when searching large search spaces as explained earlier. msSLASH identifies only a fraction of peptides querying the metaproteome libraries compared to all other tools. Scores accounting for the dot bias (Mistle and SpectraST) perform much better. Mistle consistently produces more significant hits than SpectraST, which we attribute to the slight FDR overestimation with the <italic toggle="yes">f</italic>-value. Qualitative differences between the two tools are discussed in Section 4. In general, Mistle and SpectraST show an elevated overlap when looking at their distinct peptide intersections, most notable in the 9MM study. The overlap between spectral search software (highlighted light blue in <xref rid="btad376-F8" ref-type="fig">Fig.Â 8</xref>) indicates a striking number of peptides that is identified only through spectral search by matching peak intensities. Even though msSLASH identifies only a small set of peptides, its overlap with the results of Mistle and SpectraST is much more pronounced than its overlap with MSFragger. As a consequence, not only does Mistle identify more than 2000 peptides in each of the metaproteomes, which are completely unique to Mistleâs scoring function, but the elevated overlap between spectral search software also hinges at a non-negligible number of characteristic peptides that are different from the database search results. These findings validate the reliability and novelty of the spectral library prediction workflow, no matter which spectral search engine is used. An elaborate spectral similarity function is nonetheless indispensable.</p>
      <p>When examining specific differences in PSMs, we uncovered some instances where spectral intensity-based matching produces a clearly better match than database search using MSFragger. <xref rid="btad376-F9" ref-type="fig">FigureÂ 9a</xref> shows such an example from the SIHUMIx query (top of the mirror plot) paired with the spectral prediction from Prosit (bottom) of the peptide match found by Mistle, and <xref rid="btad376-F9" ref-type="fig">Fig.Â 9b</xref> shows the same spectrum matched by MSFragger. The near perfect overlap between b and y ion intensities (<italic toggle="yes">reflection score</italic> of 0.84) suggests that Mistle identified the correct peptide. SpectraST corroborates Mistleâs finding. In contrast, the PSM suggested by MSFragger for the same query spectrum is an apparent mismatch to a decoy peptide. This is only obvious given the peak intensity predictions by Prosit, as the theoretical b and y ions cover only a fraction of all peaks in both cases. Note that post-processing tools like Percolator eliminate this false discovery, but cannot recover the correct match.</p>
      <fig position="float" id="btad376-F9">
        <label>Figure 9.</label>
        <caption>
          <p>Mirror plot of a PSM identified by (a) Mistle and (b) MSFragger. In each case the top spectrum is the same experimental spectrum, scan 233724 of S05.mgf file and the bottom spectrum is the matched peptide spectrum from the SIHUMIx database with the peak intensities predicted by Prosit. Mistle finds a reasonable candidate with high spectral similarity of 0.52 and <italic toggle="yes">reflection score</italic> of 0.84. MSFragger identifies a decoy sequence with a hyperscore of 12.6. The spectral similarity to the predicted spectrum is very low with 0.09 and the <italic toggle="yes">reflection score</italic> is 0.29</p>
        </caption>
        <graphic xlink:href="btad376f9" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.4 Post-processing</title>
      <p>Percolator is a renowned post-processing software, which trains a linear support vector machine to separate target and decoy matches (<xref rid="btad376-B11" ref-type="bibr">KÃ¤ll <italic toggle="yes">et al.</italic> 2007</xref>). By doing so, Percolator optimizes the target PSM output through several iterations of semi-supervised learning with cross-validation. We append Percolator to Mistleâs and MSFraggerâs output, provided in pin-tab format that lists the search scores and statistics as features for the classifier.</p>
      <p>This leads to an increase in Mistleâs target output by 4.4%â17.4% compared to a threshold on the <italic toggle="yes">average bias-adjusted similarity</italic>. Smaller impact is seen for the predicted metaproteome libraries, where Percolator boosts the performance on average by 8.8<inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> (9MM) and 6.4<inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> (SIHUMIx). For the human spectral library, the PSM output was significantly increased with an average of 15.3<inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula>. MSFragger yields slightly more PSMs (4%â8%) than Mistle, almost doubling its output on the larger 9MM queries compared to a hyperscore cut-off. A direct comparison of PSMs identified with and without Percolator is provided in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <p>In terms of unique peptide identifications, both tools have very comparable results after rescoring. Mistle even identifies more distinct peptides in the SIHUMIx queries than MSFragger, despite having fewer PSMs. About 10<inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of peptides are specific to each search engine and remain undetected by the other. This once more highlights the merit of exploring orthogonal search approaches as standard database search alone is not fully comprehensive. The proposed spectral library workflow is sensitive to a different set of peptides, which may well be of biological significance. Corresponding figures are provided in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <p>Percolator also returns its feature weights across all its cross-validation splits, which can be related to the feature importance. Note, however, that some features are highly correlated, making it difficult to judge their exact contribution. Still, we can confidently identify the following trends: Direct spectral similarity measures have a great influence with the <italic toggle="yes">reflection score</italic> being more important in case of the predicted libraries. This is coherent with the library setup, as only b and y ions are predicted, and missing peaks do not influence the <italic toggle="yes">reflection score</italic>. Respective score biases, e.g. dot bias, have consistently negative weights as is expected, favoring PSMs with high similarities and low biases. Occasionally, statistics like the shared peak count and <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> standard deviation of matched fragments had a contribution to target decoy separation. Smaller importance was given to delta scores, hyperscores, and mass differences on precursor level. For queries against the human spectral library, the dot product was the most important feature by far. This coincides with the good performance of msSLASH, which uses a dot product with log-scaled intensities. Interestingly, dot product seems to perform significantly better than the similarity on this low-resolution library. Remember that the similarity uses an <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> standard deviation rather than a fixed <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance and still penalizes mass difference for matched fragments. Moreover, biases have lower impacts, as both query and reference spectra contain all types of ions and noise peaks. This demonstrates that Percolator is a great addition to Mistle for cases when the <italic toggle="yes">average bias-adjusted similarity</italic> generates a slightly smaller target output.</p>
      <p>In addition, we investigate the effect of retention time features added to Percolator. We use DeepLC for retention time prediction, as described in Section 2.3.3, for peptide matches from SIHUMIx and 9MM. Note that while Prosit can predict retention times, they are currently not part of the spectral libraries. Both search engines receive a moderate but consistent boost of 1%â3% to their PSM output when retention time features are present. Percolator emphasizes that the relative retention time difference is one of the most important features for classification. At the moment, this is an untapped advantage that spectral libraries have over database search. Including retention time information in the library and calculating the corresponding features directly during the search eliminates the need for tedious and manual prediction of features post-search. This represents a potential future improvement to the current workflow.</p>
      <p>With rescoring, Mistle now outperforms msSLASH in terms of PSM output for the human library in most cases (15 out of 18 search files). Mistle is the only spectral search engine in this study that supports the Percolator-readable pin-tab format. This makes Mistle extremely versatile, likely performing well on any new dataset and also when search parameters are chosen inadequately.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Coping with complete predicted libraries for metaproteomics, covering more than 10 million peptide MS/MS spectra, proves to be a challenging task for spectral search software. Especially, analyzing the large candidate space in RAM is very demanding and might just fail when looking at more diverse microbiomes. We provide proof of concept that our approach works well for two mock-communities, turning all peptides from their sequence database into MS/MS spectra. Despite the large datasets, the presented search algorithm, Mistle, is extremely memory efficient due to an effective index partitioning technique. The memory requirements of Mistle are an order of magnitude smaller than those of all other spectral search software. In terms of run time, Mistle is up to 10 times faster than SpectraST, up to 2 times faster than msSLASH, and stays close to the ultra-fast database search algorithm MSFragger. Even though Mistle cannot quite match the run time of MSFragger, the challenges faced by each approach are quite different, and the improvements introduced by our algorithm are nonetheless significant.</p>
    <p>Investigating peptide identification, we find cohesive results between Mistle and SpectraST identifying high numbers of PSMs, but Mistle finds consistently more unique peptides (see <xref rid="btad376-F8" ref-type="fig">Fig.Â 8</xref>). The elevated peptide overlap between SpectraST and Mistle, and to some degree even msSLASH, reinforces the idea of spectral matching being able to identify peptides that standard database search cannot. Delving into this, we presented an example spectrum visibly attaining a much more reasonable match using our approach, when compared to MSFragger, which identifies a decoy peptide (see <xref rid="btad376-F9" ref-type="fig">Fig.Â 9</xref>).</p>
    <p>We ensured a high quality of spectral matches by verifying the target decoy FDR with annotated yeast spectra. The FDR is estimated accurately across all algorithms, legitimizing the use of spectral predictions (target and decoy sequences) when confronted with large search spaces. Mistleâs <italic toggle="yes">average bias-adjusted similarity</italic> (see Section 2.2.1) produces excellent bimodal distributions of PSM, which enable a clean separation of true and false discoveries, while at the same time being highly sensitive and accurate. Entrapment sequences spiked into the target library confirm the soundness of the target decoy approach for FDR estimation throughout the numerous searches. Although we put our focus on evaluating tool-specific scoring functions, Mistle can also be coupled to Percolator to boost identification rates even further, reaching up to 17.4% additional hits. This is another advantage of Mistle compared to other spectral search software. Still, there is room for further refinement of features, e.g. by integrating retention time predictions in the reference libraries. Our tests suggest that adding retention time features increases PSM performance again by up to 3%. In conclusion, we prove the applicability of Mistle to common lab-assembled studies and have reason to believe that the workflow will perform well for even larger metaproteomics studies.</p>
    <p>Currently, the main shortcoming resides in building the spectral library as an in-between step, which is resource intensive (time, and disk space). Additionally, loading times from disk takes more than 90% of the total search time, which is the reason for slightly increased run time compared to state-of-the-art database search methods like MSFragger. A way to mitigate long loading times is to distribute search tasks among several servers, each permanently keeping an index partition in RAM. As a positive side effect partitions can then be queried in parallel without any I/O operations.</p>
    <p>The prediction workflow produces satisfactory results no matter which search engine is used, as long as the spectral similarity measurement is carefully selected and tested. However, Mistle has an excellent trade-off between run time and memory consumption and outperforms SpectraST in that aspect by far. Mistle is best used for repeated scans on the same metaproteomic environment, like for instance SIHUMIx, such that the spectral library and search index are constructed only once. The sequence database and parameters can be chosen generously to be very comprehensive, and the performant search algorithm excels at multiple MS/MS runs against the same library. Spectral library construction using Prosit can be optimized further, e.g. by calibrating the collision energy based on the experimental raw data. The low memory consumption makes Mistle feasible for studies on low performance machines, e.g. laptop computers, but also allows much larger protein databases to be analysed, where the competing tools are quickly overchallenged. Of course, Mistle, being a spectral search engine at heart, can be used on any experimental spectral library, too. We highlight this by using Mistle to query 18 experimental MS/MS files to the NIST human consensus library. Although this represents only a small spectral library, the boost in performance and low memory footprint suggest that Mistle is well suited for far more comprehensive libraries.</p>
    <p>There are small qualitative differences between SpectraST and Mistle, which arise from different pre-processing steps and the scoring functions used, e.g. neighboring bin matching for SpectraST and peak matching using a Gaussian distribution for Mistle. Turning off most pre-processing features and using the native dot product for scoring produces nearly identical results between SpectraST and Mistle. We also suspect that the current search setup with a separate target and decoy library might affect the discriminating power of SpectraSTâs f-value. Thereby, differences in dot products [<inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula>, see <xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> (2007)</xref>] are not calculated between target and decoy matches and may be a reason for the slight reduction in sensitivity. At this point, we conclude that the differences in PSM scoring play a minor role when looking at the overall identification of unique peptides in the samples. <xref rid="btad376-F8" ref-type="fig">FigureÂ 8</xref> demonstrates a large overlap in the findings of both spectral library search engines. Depending on the dataset, Mistle agrees with the peptides found by SpectraST in 88%â95% of the cases.</p>
    <p>With our tool, we open the door to investigate much larger metaproteomes, e.g. the human gut microbiome, with the help of predicted spectral libraries. In an ideal setting, spectral library prediction is set up to cover the entire metaproteome comprehensively with carefully selected parameters in accordance with the wet lab. Then, the effect of treatments, different samples or patient groups can be perpetually analysed by spectral search with Mistle producing reliable peptide identification in the large search space at fast rate, and without being memory intensive.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad376_Supplementary_Data</label>
      <media xlink:href="btad376_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank Tanja Holstein and Sasan Amariamir for stimulating discussions and insights that assisted this research. They also kindly acknowledge Ferdous Nasri for proofreading the manuscript.</p>
  </ack>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> is available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>None declared.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad376-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bouwmeester</surname><given-names>R</given-names></string-name>, <string-name><surname>Gabriels</surname><given-names>R</given-names></string-name>, <string-name><surname>Hulstaert</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>Deeplc can predict retention times for peptides that carry as-yet unseen modifications</article-title>. <source>Nat Methods</source><year>2021</year>;<volume>18</volume>:<fpage>1363</fpage>â<lpage>9</lpage>.<pub-id pub-id-type="pmid">34711972</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Callieri</surname><given-names>C</given-names></string-name>, <string-name><surname>Eckert</surname><given-names>EM</given-names></string-name>, <string-name><surname>Cesare</surname><given-names>AD</given-names></string-name></person-group><etal>et al</etal><article-title>Microbial communities</article-title>. <source>Encyclopedia of Ecology </source><year>2019</year>;<volume>1</volume>:<fpage>126</fpage>â1<lpage>34</lpage>.</mixed-citation>
    </ref>
    <ref id="btad376-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cheng</surname><given-names>C-Y</given-names></string-name>, <string-name><surname>Tsai</surname><given-names>C-F</given-names></string-name>, <string-name><surname>Chen</surname><given-names>Y-J</given-names></string-name></person-group><etal>et al</etal><article-title>Spectrum-based method to generate good decoy libraries for spectral library searching in peptide identifications</article-title>. <source>J Proteome Res</source><year>2013</year>;<volume>12</volume>:<fpage>2305</fpage>â<lpage>10</lpage>.<pub-id pub-id-type="pmid">23560440</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Coon</surname><given-names>JJ</given-names></string-name>, <string-name><surname>Syka</surname><given-names>JE</given-names></string-name>, <string-name><surname>Shabanowitz</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Tandem mass spectrometry for peptide and protein sequence analysis</article-title>. <source>Biotechniques</source><year>2005</year>;<volume>38</volume>:<fpage>519</fpage>â<lpage>23</lpage>.<pub-id pub-id-type="pmid">15884666</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cox</surname><given-names>J</given-names></string-name>, <string-name><surname>Neuhauser</surname><given-names>N</given-names></string-name>, <string-name><surname>Michalski</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Andromeda: a peptide search engine integrated into the maxquant environment</article-title>. <source>J Proteome Res</source><year>2011</year>;<volume>10</volume>:<fpage>1794</fpage>â<lpage>805</lpage>.<pub-id pub-id-type="pmid">21254760</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Craig</surname><given-names>R</given-names></string-name>, <string-name><surname>Beavis</surname><given-names>RC.</given-names></string-name></person-group><article-title>Tandem: matching proteins with tandem mass spectra</article-title>. <source>Bioinformatics</source><year>2004</year>;<volume>20</volume>:<fpage>1466</fpage>â<lpage>7</lpage>.<pub-id pub-id-type="pmid">14976030</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dadi</surname><given-names>TH</given-names></string-name>, <string-name><surname>Siragusa</surname><given-names>E</given-names></string-name>, <string-name><surname>Piro</surname><given-names>VC</given-names></string-name></person-group><etal>et al</etal><article-title>DREAM-Yara: an exact read mapper for very large databases with short update time</article-title>. <source>Bioinformatics</source><year>2018</year>;<volume>34</volume>:<fpage>i766</fpage>â<lpage>i772</lpage>.<pub-id pub-id-type="pmid">30423080</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Mendoza</surname><given-names>L</given-names></string-name>, <string-name><surname>Shteynberg</surname><given-names>D</given-names></string-name></person-group><etal>et al</etal><article-title>Trans-proteomic pipeline, a standardized data processing pipeline for large-scale reproducible proteomics informatics</article-title>. <source>Proteomics Clin Appl</source><year>2015</year>;<volume>9</volume>:<fpage>745</fpage>â<lpage>54</lpage>.<pub-id pub-id-type="pmid">25631240</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gessulat</surname><given-names>S</given-names></string-name>, <string-name><surname>Schmidt</surname><given-names>T</given-names></string-name>, <string-name><surname>Zolg</surname><given-names>DP</given-names></string-name></person-group><etal>et al</etal><article-title>Prosit: proteome-wide prediction of peptide tandem mass spectra by deep learning</article-title>. <source>Nat Methods</source><year>2019</year>;<volume>16</volume>:<fpage>509</fpage>â<lpage>18</lpage>.<pub-id pub-id-type="pmid">31133760</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hettich</surname><given-names>RL</given-names></string-name>, <string-name><surname>Pan</surname><given-names>C</given-names></string-name>, <string-name><surname>Chourey</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Metaproteomics: harnessing the power of high performance mass spectrometry to identify the suite of proteins that control metabolic activities in microbial communities</article-title>. <source>Anal Chem</source><year>2013</year>;<volume>85</volume>:<fpage>4203</fpage>â<lpage>14</lpage>.<pub-id pub-id-type="pmid">23469896</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>KÃ¤ll</surname><given-names>L</given-names></string-name>, <string-name><surname>Canterbury</surname><given-names>JD</given-names></string-name>, <string-name><surname>Weston</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Semi-supervised learning for peptide identification from shotgun proteomics datasets</article-title>. <source>Nat Methods</source><year>2007</year>;<volume>4</volume>:<fpage>923</fpage>â<lpage>5</lpage>.<pub-id pub-id-type="pmid">17952086</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kong</surname><given-names>AT</given-names></string-name>, <string-name><surname>Leprevost</surname><given-names>FV</given-names></string-name>, <string-name><surname>Avtonomov</surname><given-names>DM</given-names></string-name></person-group><etal>et al</etal><article-title>MSFragger: ultrafast and comprehensive peptide identification in mass spectrometry-based proteomics</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>513</fpage>â<lpage>20</lpage>.<pub-id pub-id-type="pmid">28394336</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krause</surname><given-names>JL</given-names></string-name>, <string-name><surname>Schaepe</surname><given-names>SS</given-names></string-name>, <string-name><surname>Fritz-Wallace</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Following the community development of sihumixâa new intestinal in vitro model for bioreactor use</article-title>. <source>Gut Microbes</source><year>2020</year>;<volume>11</volume>:<fpage>1116</fpage>â<lpage>29</lpage>.<pub-id pub-id-type="pmid">31918607</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lam</surname><given-names>H</given-names></string-name>, <string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Eddes</surname><given-names>JS</given-names></string-name></person-group><etal>et al</etal><article-title>Development and validation of a spectral library searching method for peptide identification from MS/MS</article-title>. <source>Proteomics</source><year>2007</year>;<volume>7</volume>:<fpage>655</fpage>â<lpage>67</lpage>.<pub-id pub-id-type="pmid">17295354</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Muth</surname><given-names>T</given-names></string-name>, <string-name><surname>Kolmeder</surname><given-names>CA</given-names></string-name>, <string-name><surname>SalojÃ¤rvi</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Navigating through metaproteomics data: a logbook of database searching</article-title>. <source>Proteomics</source><year>2015</year>;<volume>15</volume>:<fpage>3439</fpage>â<lpage>53</lpage>.<pub-id pub-id-type="pmid">25778831</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nesvizhskii</surname><given-names>AI.</given-names></string-name></person-group><article-title>A survey of computational methods and error rate estimation procedures for peptide and protein identification in shotgun proteomics</article-title>. <source>J Proteomics</source><year>2010</year>;<volume>73</volume>:<fpage>2092</fpage>â<lpage>123</lpage>.<pub-id pub-id-type="pmid">20816881</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roos</surname><given-names>A</given-names></string-name>, <string-name><surname>Kollipara</surname><given-names>L</given-names></string-name>, <string-name><surname>Buchkremer</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Cellular signature of sil1 depletion: disease pathogenesis due to alterations in protein composition beyond the ER machinery</article-title>. <source>Mol Neurobiol</source><year>2016</year>;<volume>53</volume>:<fpage>5527</fpage>â<lpage>41</lpage>.<pub-id pub-id-type="pmid">26468156</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schiebenhoefer</surname><given-names>H</given-names></string-name>, <string-name><surname>Van Den Bossche</surname><given-names>T</given-names></string-name>, <string-name><surname>Fuchs</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Challenges and promise at the interface of metaproteomics and genomics: an overview of recent progress in metaproteogenomic data analysis</article-title>. <source>Expert Rev Proteomics</source><year>2019</year>;<volume>16</volume>:<fpage>375</fpage>â<lpage>90</lpage>.<pub-id pub-id-type="pmid">31002542</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B19">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Scholz</surname><given-names>M</given-names></string-name>, <string-name><surname>Tett</surname><given-names>A</given-names></string-name>, <string-name><surname>Segata</surname><given-names>N</given-names></string-name></person-group>. <part-title>Computational tools for taxonomic microbiome profiling of shotgun metagenomes</part-title>. <source>Metagenomics for Microbiology</source>. <publisher-name>Elsevier</publisher-name>, <year>2015</year>, <fpage>67</fpage>â<lpage>80</lpage>.</mixed-citation>
    </ref>
    <ref id="btad376-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Searle</surname><given-names>BC</given-names></string-name>, <string-name><surname>Swearingen</surname><given-names>KE</given-names></string-name>, <string-name><surname>Barnes</surname><given-names>CA</given-names></string-name></person-group><etal>et al</etal><article-title>Generating high quality libraries for DIA MS with empirically corrected peptide predictions</article-title>. <source>Nat Commun</source><year>2020</year>;<volume>11</volume>:<fpage>1</fpage>â<lpage>10</lpage>.<pub-id pub-id-type="pmid">31911652</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tanca</surname><given-names>A</given-names></string-name>, <string-name><surname>Palomba</surname><given-names>A</given-names></string-name>, <string-name><surname>Deligios</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Evaluating the impact of different sequence databases on metaproteome analysis: insights from a lab-assembled microbial mixture</article-title>. <source>PLoS ONE</source><year>2013</year>;<volume>8</volume>:<fpage>e82981</fpage>.<pub-id pub-id-type="pmid">24349410</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tanca</surname><given-names>A</given-names></string-name>, <string-name><surname>Palomba</surname><given-names>A</given-names></string-name>, <string-name><surname>Pisanu</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>A straightforward and efficient analytical pipeline for metaproteome characterization</article-title>. <source>Microbiome</source><year>2014</year>;<volume>2</volume>:<fpage>1</fpage>â<lpage>16</lpage>.<pub-id pub-id-type="pmid">24468033</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tanca</surname><given-names>A</given-names></string-name>, <string-name><surname>Abbondio</surname><given-names>M</given-names></string-name>, <string-name><surname>Palomba</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Potential and active functions in the gut microbiota of a healthy human cohort</article-title>. <source>Microbiome</source><year>2017</year>;<volume>5</volume>:<fpage>1</fpage>â<lpage>15</lpage>.<pub-id pub-id-type="pmid">28086968</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Van Den Bossche</surname><given-names>T</given-names></string-name>, <string-name><surname>Kunath</surname><given-names>BJ</given-names></string-name>, <string-name><surname>Schallert</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Critical assessment of metaproteome investigation (CAMPI): a multi-laboratory comparison of established workflows</article-title>. <source>Nat Commun</source><year>2021</year>;<volume>12</volume>:<fpage>1</fpage>â<lpage>15</lpage>.<pub-id pub-id-type="pmid">33397941</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Verbruggen</surname><given-names>S</given-names></string-name>, <string-name><surname>Gessulat</surname><given-names>S</given-names></string-name>, <string-name><surname>Gabriels</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Spectral prediction features as a solution for the search space size problem in proteogenomics</article-title>. <source>Mol Cell Proteomics</source><year>2021</year>;<volume>20</volume>:<fpage>100076</fpage>.<pub-id pub-id-type="pmid">33823297</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Verheggen</surname><given-names>K</given-names></string-name>, <string-name><surname>Raeder</surname><given-names>H</given-names></string-name>, <string-name><surname>Berven</surname><given-names>FS</given-names></string-name></person-group><etal>et al</etal><article-title>Anatomy and evolution of database search enginesâa central component of mass spectrometry based proteomic workflows</article-title>. <source>Mass Spectrom Rev</source><year>2020</year>;<volume>39</volume>:<fpage>292</fpage>â<lpage>306</lpage>.<pub-id pub-id-type="pmid">28902424</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>L</given-names></string-name>, <string-name><surname>Liu</surname><given-names>K</given-names></string-name>, <string-name><surname>Li</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>A fast and memory-efficient spectral library search algorithm using locality-sensitive hashing</article-title>. <source>Proteomics</source><year>2020</year>;<volume>20</volume>:<fpage>2000002</fpage>.</mixed-citation>
    </ref>
    <ref id="btad376-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilmes</surname><given-names>P</given-names></string-name>, <string-name><surname>Bond</surname><given-names>PL.</given-names></string-name></person-group><article-title>The application of two-dimensional polyacrylamide gel electrophoresis and downstream analyses to a mixed community of prokaryotic microorganisms</article-title>. <source>Environ Microbiol</source><year>2004</year>;<volume>6</volume>:<fpage>911</fpage>â<lpage>20</lpage>.<pub-id pub-id-type="pmid">15305916</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wright</surname><given-names>JC</given-names></string-name>, <string-name><surname>Choudhary</surname><given-names>JS.</given-names></string-name></person-group><article-title>Decoypyrat: fast non-redundant hybrid decoy sequence generation for large scale proteomics</article-title>. <source>J Proteomics Bioinform</source><year>2016</year>;<volume>9</volume>:<fpage>176</fpage>â<lpage>80</lpage>.<pub-id pub-id-type="pmid">27418748</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhou</surname><given-names>X-X</given-names></string-name>, <string-name><surname>Zeng</surname><given-names>W-F</given-names></string-name>, <string-name><surname>Chi</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>pdeep: predicting MS/MS spectra of peptides with deep learning</article-title>. <source>Anal Chem</source><year>2017</year>;<volume>89</volume>:<fpage>12690</fpage>â<lpage>7</lpage>.<pub-id pub-id-type="pmid">29125736</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10313348</article-id>
    <article-id pub-id-type="pmid">37294786</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btad376</article-id>
    <article-id pub-id-type="publisher-id">btad376</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Mistle: bringing spectral library predictions to metaproteomics with an efficient search index</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-7537-3694</contrib-id>
        <name>
          <surname>Nowatzky</surname>
          <given-names>Yannek</given-names>
        </name>
        <aff><institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Berlin 12205, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Benner</surname>
          <given-names>Philipp</given-names>
        </name>
        <aff><institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Berlin 12205, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-3078-8129</contrib-id>
        <name>
          <surname>Reinert</surname>
          <given-names>Knut</given-names>
        </name>
        <aff><institution>Department of Mathematics and Computer Science, FU Berlin</institution>, Berlin 14195, <country country="DE">Germany</country></aff>
        <aff><institution>Department of Computational Molecular Biology, Max Planck Institute for Molecular Genetics</institution>, Berlin 14195, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8304-2684</contrib-id>
        <name>
          <surname>Muth</surname>
          <given-names>Thilo</given-names>
        </name>
        <aff><institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Berlin 12205, <country country="DE">Germany</country></aff>
        <xref rid="btad376-cor1" ref-type="corresp"/>
        <!--thilo.muth@bam.de-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Valencia</surname>
          <given-names>Alfonso</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btad376-cor1">Corresponding author. <institution>Section S.3 eScience, Federal Institute for Materials Research and Testing (BAM)</institution>, Unter den Eichen 87, Berlin 12205, Germany. E-mail: <email>thilo.muth@bam.de</email> (T.M.)</corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-06-09">
      <day>09</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>09</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <volume>39</volume>
    <issue>6</issue>
    <elocation-id>btad376</elocation-id>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>11</day>
        <month>5</month>
        <year>2023</year>
      </date>
      <date date-type="editorial-decision">
        <day>06</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>08</day>
        <month>6</month>
        <year>2023</year>
      </date>
      <date date-type="corrected-typeset">
        <day>30</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author(s) 2023. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btad376.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Deep learning has moved to the forefront of tandem mass spectrometry-driven proteomics and authentic prediction for peptide fragmentation is more feasible than ever. Still, at this point spectral prediction is mainly used to validate database search results or for confined search spaces. Fully predicted spectral libraries have not yet been efficiently adapted to large search space problems that often occur in metaproteomics or proteogenomics.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>In this study, we showcase a workflow that uses Prosit for spectral library predictions on two common metaproteomes and implement an indexing and search algorithm, Mistle, to efficiently identify experimental mass spectra within the library. Hence, the workflow emulates a classic protein sequence database search with protein digestion but builds a searchable index from spectral predictions as an in-between step. We compare Mistle to popular search engines, both on a spectral and database search level, and provide evidence that this approach is more accurate than a database search using MSFragger. Mistle outperforms other spectral library search engines in terms of run time and proves to be extremely memory efficient with a 4- to 22-fold decrease in RAM usage. This makes Mistle universally applicable to large search spaces, e.g. covering comprehensive sequence databases of diverse microbiomes.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Mistle is freely available on GitHub at <ext-link xlink:href="https://github.com/BAMeScience/Mistle" ext-link-type="uri">https://github.com/BAMeScience/Mistle</ext-link>.</p>
      </sec>
    </abstract>
    <counts>
      <page-count count="12"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Metaproteomics is a key technology for characterizing proteins in complex microbial samples at a given time point (<xref rid="btad376-B28" ref-type="bibr">Wilmes and Bond 2004</xref>) and can provide pivotal information about taxon-specific functional activity, as well as signaling and metabolic pathways within the microbial community (<xref rid="btad376-B10" ref-type="bibr">Hettich <italic toggle="yes">et al.</italic> 2013</xref>, <xref rid="btad376-B23" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> 2017</xref>). This enables studying health and disease cases of host species, and ecological dynamics in all kinds of biological systems and microbiomes (<xref rid="btad376-B10" ref-type="bibr">Hettich <italic toggle="yes">et al.</italic> 2013</xref>, <xref rid="btad376-B19" ref-type="bibr">Scholz <italic toggle="yes">et al.</italic> 2015</xref>, <xref rid="btad376-B2" ref-type="bibr">Callieri <italic toggle="yes">et al.</italic> 2018</xref>). Inherent to the proteomic investigation of microbial communities is a large search space, because many species, often previously unknown ones, are present in a typical microbiome sample and need to be queried (<xref rid="btad376-B18" ref-type="bibr">Schiebenhoefer <italic toggle="yes">et al.</italic> 2019</xref>).</p>
    <p>Peptide identification lies at the heart of high-throughput proteomics workflows, where the collected sample of proteins is usually subjected to enzymatic digestion and liquid chromatography (LC) coupled with tandem mass spectrometry (MS/MS) (<xref rid="btad376-B4" ref-type="bibr">Coon <italic toggle="yes">et al.</italic> 2005</xref>, <xref rid="btad376-B10" ref-type="bibr">Hettich <italic toggle="yes">et al.</italic> 2013</xref>). Various search algorithms have been designed to identify the underlying peptides from the MS/MS spectra in a protein sequence database, assigning quality scores for so-called peptide spectrum matches (PSMs) (<xref rid="btad376-B26" ref-type="bibr">Verheggen <italic toggle="yes">et al.</italic> 2020</xref>). However, distinguishing true identifications from false positive hits becomes increasingly hard with increasing size of the protein database that is used as a reference for peptide identification (<xref rid="btad376-B25" ref-type="bibr">Verbruggen <italic toggle="yes">et al.</italic> 2021</xref>). A greater number of potential matches make it statistically more likely that a random false match receives a higher score than the true match (<xref rid="btad376-B16" ref-type="bibr">Nesvizhskii 2010</xref>, <xref rid="btad376-B25" ref-type="bibr">Verbruggen <italic toggle="yes">et al.</italic> 2021</xref>). When filtering for false positives, an increase in database size may lead to a reduced number of peptides identified. Even multi-stage search strategies, which aim to reduce the search space by tailoring the database through multiple search steps, may at the same time invoke more false discoveries (<xref rid="btad376-B15" ref-type="bibr">Muth <italic toggle="yes">et al.</italic> 2015</xref>, <xref rid="btad376-B26" ref-type="bibr">Verheggen <italic toggle="yes">et al.</italic> 2020</xref>). Evidently, there is a demand to overcome this inherent weakness of database search when facing large search spaces.</p>
    <p>Due to the diversity of species and genera found in microbial communities, metaproteomic studies are especially resource-straining for common database search engines, such as MSFragger (<xref rid="btad376-B12" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> 2017</xref>), which compare MS/MS scans to theoretical fragment ions of peptides in the sequence database. This is noticeable not just in terms of reduced sensitivity in peptide identification, but also in increased run time, and even more prominently in memory requirements by the algorithms, due to the large candidate spaces.</p>
    <p>Machine learning approaches have been implemented to enhance peptide identification, e.g. by post-processing the database search results (<xref rid="btad376-B25" ref-type="bibr">Verbruggen <italic toggle="yes">et al.</italic> 2021</xref>). A particularly prominent example of this is Percolator (<xref rid="btad376-B11" ref-type="bibr">KÃ¤ll <italic toggle="yes">et al.</italic> 2007</xref>), which uses semi-supervised learning with support vector machines. More recently, deep learning models such as pDeep (<xref rid="btad376-B30" ref-type="bibr">Zhou <italic toggle="yes">et al.</italic> 2017</xref>) and Prosit (<xref rid="btad376-B9" ref-type="bibr">Gessulat <italic toggle="yes">et al.</italic> 2019</xref>) predict complete mass spectra including fragment intensities and retention time from peptide sequences, and thus offer a method to rescore database search results based on these predicted spectral features, coupled with Percolator.</p>
    <p>Consequently, Prosit also provides the means to predict spectral libraries for entire proteomes, which can then be queried. As of now, metaproteomics has not yet had a chance to fully make use of such comprehensive prediction workflows covering the proteomes of many species, as this leads to massive spectral libraries. Current spectral library search software, such as SpectraST (<xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>), is not equipped to meet run time and memory constraints imposed by such large MS/MS databases, covering &gt;10Â 000Â 000 peptide spectrum predictions. At the same time, metaproteomics could benefit from more precise search algorithms, as the large search space has been shown to reduce sensitivity and exacerbates challenges with false discovery estimation in large metaproteomic settings (<xref rid="btad376-B15" ref-type="bibr">Muth <italic toggle="yes">et al.</italic> 2015</xref>). In fact, <xref rid="btad376-B9" ref-type="bibr">Gessulat <italic toggle="yes">et al.</italic> (2019)</xref> mention the use case of Prosit for metaproteomics, and manage to improve database search results by rescoring the top Andromeda hits (<xref rid="btad376-B5" ref-type="bibr">Cox <italic toggle="yes">et al.</italic> 2011</xref>) using the spectral predictions. In 2021, Verbruggen <italic toggle="yes">et al.</italic> presented a solution for large search spaces in proteogenomics, for ribosomal profiling, by using predicted spectral features to enhance identification rate and stringency in PSMs. However, to this day there is no efficient workflow to apply complete spectral library predictions to metaproteomics and efficiently search such substantial amounts of MS/MS data.</p>
    <p>We propose such a workflow using a predicted library and directly search for the best matching peptide using spectral similarity measures. First, we digest the complete metaproteome sequence database (<italic toggle="yes">in silico</italic>) with EncyclopeDIA (<xref rid="btad376-B20" ref-type="bibr">Searle <italic toggle="yes">et al.</italic> 2020</xref>) and then use Prosit to predict MS/MS spectra for every peptide and charge configuration that is reasonably likely to occur in an MS/MS run. Finally, we use our novel <bold>M</bold>etaproteomic <bold>i</bold>ndex and <bold>s</bold>pec<bold>t</bold>ral <bold>l</bold>ibrary search <bold>e</bold>ngine, short Mistle, to query the spectral library.</p>
    <p>Mistle creates a small, searchable index and is extremely run time and memory efficient. We achieve this by adapting the fragment index of MSFragger to spectral intensity matching. Additionally, we introduce an advanced index partitioning and query scheduling method to the algorithm and add hardware optimization, such as SIMD intrinsics in combination with multithreading, to greatly reduce memory footprint and run time.</p>
    <p>This workflow virtually turns the sequence database search problem into a spectral library search problem. We benchmark the algorithmic performance of Mistle with state-of-the-art methods and examine the potential of our workflow to qualitatively and quantitatively improve metaproteomic studies on the peptide identification level, based on two sample metaproteomes, the lab-assembled nine-organism microbial mixture (9MM) by <xref rid="btad376-B21" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> (2013)</xref> and the extended simplified human intestinal microbiota (SIHUMIx) sample by <xref rid="btad376-B13" ref-type="bibr">Krause <italic toggle="yes">et al.</italic> (2020)</xref>.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>Mistle is inspired by the fragment index data structure introduced by <xref rid="btad376-B12" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> (2017)</xref> and employed in MSFragger. Instead of iteratively matching experimental spectra with every theoretical spectrum calculated from candidate peptide sequences, MSFragger constructs an index that stores theoretical fragment ions in a rapidly searchable format, enabling fast and simultaneous peak matching for peptide candidates. We adapt the core idea to the spectral search problem, where instead of a protein sequence database a predicted MS/MS library is queried.</p>
    <p>While the main idea remains the same, i.e. searching fragments in the fragment index and updating scores of their parents, which are now MS/MS spectra rather than peptides, there are significant additional challenges to overcome. For one, peak intensities must be considered and stored in the fragment index. This immediately makes the fragment index larger, which poses tangible memory problems for metaproteomics libraries and slows down processing because intensities must be multiplied. Simply counting and summing up intensities, as it is the case for MSFragger, is no longer sufficient. Also, the index needs to be constructed from a spectral library, which is data-intensive to a point where it is infeasible to hold all data in random access memory (RAM). Thus, information required to construct the data structures needs to be carefully and continuously conveyed throughout the reading process to produce the final index.</p>
    <p>Here, we introduce algorithmic solutions to all these hurdles and propose optimizations to counteract increased run time arising from the additional multiplication-operations when matching peaks. Mistle is implemented from scratch in C++ 20 and features single instruction multiple data (SIMD) extensions.</p>
    <sec>
      <title>2.1 Data structures</title>
      <sec>
        <title>2.1.1 Precursor index</title>
        <p>Similarly to MSFragger, we require an auxiliary data structure, referencing all library targets, i.e. peptides linked with their predicted MS/MS spectra. We call it precursor index, as entries are searchable by the precursor peak. It is equivalent to the peptide index described by <xref rid="btad376-B12" ref-type="bibr">Kong <italic toggle="yes">et al.</italic> (2017)</xref>.</p>
        <p>Specifically, the precursor index stores a unique identifier (ID, 32-bit unsigned integer) for every mass spectrum in the library, which each corresponds to exactly one peptide. The IDs are ordered by the precursorâs charge and mass-to-charge ratio (<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic>). This serves as a reference for the fragment index. Additionally, a mapping must be provided from the ID to the rank of the spectrum in the precursor index. This is the inverse of the sorted precursor IDs. We implement this as an additional lookup vector, precomputed at index construction by a linear scan over the ranked ID vector.</p>
      </sec>
      <sec>
        <title>2.1.2 Fragment index</title>
        <p>In the fragment index, all fragment ions <italic toggle="yes">f</italic>, i.e. peaks, of library MS/MS spectra are stored in form of triplets, of the ion mass (<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> value, <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>), peak intensity (<inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) and the unique <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:math></inline-formula> of the underlying parent spectrum: <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi>f</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mtext>parent</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. The latter provides a reference from fragment to the matched peptide/spectrum and facilitates an efficient search of peaks from matching candidate spectra.</p>
        <p>For that to be possible, the fragments (triplets) are placed into bins based on their ion mass, given an adjustable bin width <italic toggle="yes">B</italic>. Inside each bin, fragments are sorted according to the parent rank in the precursor index, accessed via the parent ID. This way, for a certain mass range <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, every peak with <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>â¥</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>M</mml:mi><mml:mo>+</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:math></inline-formula> of the entire spectral library is stored in the corresponding fragment bin. The order of those peaks allows for a division based on parent mass. The structure of the precursor and fragment index are illustrated in <xref rid="btad376-F1" ref-type="fig">Fig.Â 1</xref>.</p>
        <fig position="float" id="btad376-F1">
          <label>Figure 1.</label>
          <caption>
            <p>Precursor and fragment index data structures at construction. For an exemplary library spectrum (top left), it is shown how the precursor is included in precursor index sorted by mass (<italic toggle="yes">mz</italic>) and referenced by a unique identifier (<italic toggle="yes">id</italic>). All peaks are integrated in the fragment-ion bins corresponding to their ion mass and encoded as triplets [<italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> value (<italic toggle="yes">mz</italic>), intensity (<italic toggle="yes">int</italic>) and parent ID (<italic toggle="yes">id</italic>)]. Their order inside each bin is determined by the rank of the parent in the precursor index.</p>
          </caption>
          <graphic xlink:href="btad376f1" position="float"/>
        </fig>
      </sec>
      <sec>
        <title>2.1.3 Partitioning</title>
        <p>As the union of precursor index and fragment index holds about as much information as the entire spectral library, the required index space grows linearly with the database size and needs to fit into main memory for efficient access. To make a search feasible for large reference libraries, we propose partitioning the main part of the index, i.e. fragment index, into several smaller sub-indices or partitions. Such a technique has been shown to be quite effective for other bioinformatic problems, showcased for instance by the DREAM index framework (<xref rid="btad376-B7" ref-type="bibr">Dadi <italic toggle="yes">et al.</italic> 2018</xref>). Ideally, each query spectrum only needs to be searched in one or a small number of partitions, which combined retain the original index data structure.</p>
        <p>We achieve this by creating separate fragment bins for each partition, which we tie to non-overlapping precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> intervals. A fragment triplet is stored in its corresponding fragment bin, for the partition only, where the parentâs precursor peak falls into the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> interval. Each partition has the full number of fragment bins, and acts as an individual fragment index. This way, a query spectrum only needs to be searched in a partition matching its precursor mass, within a given <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance. Also, within each partition the search algorithm can be performed identically. Merely the number of library spectra included is reduced for each partition. This not only reduces physical space that needs to fit into the main memory at a time, but also the search space for a given query within the partition. Fewer comparisons are needed during the binary search, explained in Section 2.2.</p>
      </sec>
      <sec>
        <title>2.1.4 Continuous index construction algorithm</title>
        <p>As mentioned before, the input library might be arbitrarily large and in no particular order. When reading the data, the precursor index, which is necessary to order all fragments, is unknown, up until the very end. A practical, memory efficient approach is to create preliminary (unsorted) index partitions on the disk when reading the library and to update the partitions once all relevant information has been obtained. A detailed description of the process can be found in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>.</p>
      </sec>
    </sec>
    <sec>
      <title>2.2 Search algorithm</title>
      <p>Partitioning the fragment index creates an initial overhead when searching experimental spectra, because spectral queries need to be scheduled to relevant partitions and merged afterwards. This is performed by assigning each experimental query spectrum a unique identifier and constructing a list of query IDs for each partition to address, based on the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> and mass tolerance. Then, each partition with at least one query scheduled is loaded into main memory, and spectral matching is performed.</p>
      <p>Initially, matches are ranked by the spectral dot product of normalized intensities, as described in Eq. (2) by <xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> (2007)</xref>. The similarity scoring function is refined later on. Raw intensity values are square rooted before normalization to de-emphasize dominant peaks. By definition, a peak only contributes to the dot product, if a matching peak from the other spectrum exists in the same <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> bin. Conversely, the dot product needs to be updated only for those reference spectra that have a fragment entry in the corresponding fragment bin. A binary search going through that fragment bin quickly narrows down the calculation to exactly those candidates that lie within the precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> range. Essentially, we leverage the data structures from Section 2.1 to perform a fast search, reminiscent of MSFraggerâs fragment index search, but compute the spectral dot product in the process, as is illustrated in <xref rid="btad376-F2" ref-type="fig">Fig.Â 2</xref>. The overt novelty lies within matching fragments by their intensities, in addition to the <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> dimension, when iterating a fragment bin. The intensity product (<inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>f</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) of query peak <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and fragment <italic toggle="yes">f</italic> is added to the parent score, which is accessed by the parent identifier <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mtext>parent</mml:mtext></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>. As this is computationally costly, we speed up the arithmetic operations using SIMD extensions. The fused multiply-add operation (in C++: <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo>_</mml:mo><mml:mtext>mm</mml:mtext><mml:mn>256</mml:mn><mml:mo>_</mml:mo><mml:mtext>fmadd</mml:mtext><mml:mo>_</mml:mo><mml:mtext>ps</mml:mtext></mml:mrow></mml:math></inline-formula>), available for the Advanced Vector Extensions AVX2 and AVX512 architectures, allows parallel multiplication and addition of 8â16 floating-point numbers in a single CPU instruction. A schematic workflow with the use of SIMD for a 256-bit register is depicted in <xref rid="btad376-F2" ref-type="fig">Fig.Â 2</xref>, bottom left. Moreover, the search loop is parallelized matching each query spectrum on a separate thread.</p>
      <fig position="float" id="btad376-F2">
        <label>Figure 2.</label>
        <caption>
          <p>Illustration of the search process: matching an exemplary query spectrum (top left) to all indexed library spectra. First, the binary search step (1) is shown on the precursor index, where the lower and upper bound of candidate spectra is determined and an empty scoring vector is initialized (2). Thereafter, the peak-by-peak matching is shown for the fragment index, highlighted for the first query peak (turquoise) and the corresponding fragment bin. (3) Here, a binary search is performed to determine relevant matches with a parent rank within the lower and upper bound. (4) Lastly, fragment intensity entries are multiplied to the peak intensity and added to the respective parent scores. SIMD intrinsics may replace step 4, as shown on the bottom left, e.g. computing eight intensity products and adding them to the dot products in a single CPU operation.</p>
        </caption>
        <graphic xlink:href="btad376f2" position="float"/>
      </fig>
      <p>After ranking all candidate spectra with the fragment index, we reevaluate the top hits, tracking all kinds of statistics. A refined <italic toggle="yes">bias-adjusted similarity</italic> measurement, which resolves <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> bins by modeling peak intensity spread with a Gaussian bell curve, determines the X highest scoring library spectra (see Section 2.2.1 for a detailed description). X, the number of output PSMs per query spectrum (Xâ&gt;â0), is a parameter defined by the user. A step-by-step walk-through of the search loop including the implementation of SIMD with intrinsic C++ functions are discussed in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>.</p>
      <p>Once all scheduled queries are performed, the resulting PSMs from all the partitions are concatenated and sorted by query <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mtext>ID</mml:mtext></mml:mrow></mml:math></inline-formula>. Matches assigned to the same experimental spectrum cluster together, and again only the top X ranked matches are retained, if a query was carried out in multiple partitions.</p>
      <sec>
        <title>2.2.1 Spectral similarity scoring</title>
        <p>At its core, Mistle provides high-performance spectral matching based on the spectral dot product of binned peaks [Eq.Â 2 by <xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> (2007)</xref>]. Precursor <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance and bin width are parameters adjustable by the user. However, for any search engine to distinguish true from false matches, the choice and design of scoring functions and spectral processing steps are essential. Currently, the only pre-processing operations applied to the spectra are square root transformation and normalization of peak intensities. A top-k in window-w noise reduction approach is implemented for optional use. Top ranked matches for each query are rescored providing a multitude of scores including shared peak counts, a log-hyperscore, an <italic toggle="yes">f</italic>-value equivalent as seen in SpectraST, and various Mistle specific scores. Differences and refinements made to spectral similarity scoring are described below.</p>
        <p>Peak intensity spread over multiple bins (as is implemented in SpectraST) to account for slight shifts in peak <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> is inefficient with the proposed fragment index. Instead, we resolve the initial binning when rescoring matches. Our formula models peak intensity spread with a Gaussian bell curve put over the peaks and penalizes mass shifts as intensity decay along the curve. We define a similarity between a query spectrum <italic toggle="yes">Q</italic> and reference spectrum <italic toggle="yes">R</italic>, analogous to the dot product of binned intensities:
and
where <italic toggle="yes">k</italic> iterates over all reference peaks <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mi>R</mml:mi></mml:mrow></mml:math></inline-formula> and <italic toggle="yes">l</italic> over all query peaks <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mrow><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>I</mml:mi></mml:mrow><mml:mi>l</mml:mi></mml:msub></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>â</mml:mo><mml:mi>Q</mml:mi></mml:mrow></mml:math></inline-formula>. <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:mo>Ï</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mo>Î¼</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> factors in the distance of <italic toggle="yes">mz</italic>-values given the standard deviation <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mo>Ï</mml:mo></mml:math></inline-formula> between peaks. We set <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mo>Ï</mml:mo></mml:math></inline-formula>, which models the fragment tolerance, equal to bin size. An analogous formula to the dot bias as provided by SpectraST (<xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> 2007</xref>) can be established:
</p>
        <disp-formula id="E1">
          <label>(1)</label>
          <mml:math id="M1" display="block" overflow="scroll">
            <mml:mo>Â </mml:mo>
            <mml:mi>similarity</mml:mi>
            <mml:mo>(</mml:mo>
            <mml:mi>Q</mml:mi>
            <mml:mo>,</mml:mo>
            <mml:mi>R</mml:mi>
            <mml:mo>)</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:munder>
                <mml:mo>â</mml:mo>
                <mml:mi>k</mml:mi>
              </mml:munder>
            </mml:mrow>
            <mml:mrow>
              <mml:munder>
                <mml:mi>max</mml:mi>
                <mml:mi>l</mml:mi>
              </mml:munder>
            </mml:mrow>
            <mml:mo>Â </mml:mo>
            <mml:mrow>
              <mml:msub>
                <mml:mi>I</mml:mi>
                <mml:mi>l</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mrow>
              <mml:msub>
                <mml:mi>I</mml:mi>
                <mml:mi>k</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>Ï</mml:mo>
            <mml:mo>(</mml:mo>
            <mml:mi>m</mml:mi>
            <mml:mrow>
              <mml:msub>
                <mml:mi>z</mml:mi>
                <mml:mi>l</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>,</mml:mo>
            <mml:mi>m</mml:mi>
            <mml:mrow>
              <mml:msub>
                <mml:mi>z</mml:mi>
                <mml:mi>k</mml:mi>
              </mml:msub>
            </mml:mrow>
            <mml:mo>)</mml:mo>
            <mml:mo>,</mml:mo>
          </mml:math>
        </disp-formula>
        <disp-formula id="E2">
          <label>(2)</label>
          <mml:math id="M2" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mo>Ï</mml:mo>
              <mml:mo stretchy="false">(</mml:mo>
              <mml:mi>x</mml:mi>
              <mml:mo>,</mml:mo>
              <mml:mo>Î¼</mml:mo>
              <mml:mo stretchy="false">)</mml:mo>
              <mml:mo>=</mml:mo>
              <mml:mtext>exp</mml:mtext>
              <mml:mo>â</mml:mo>
              <mml:mrow>
                <mml:mo>(</mml:mo>
                <mml:mrow>
                  <mml:mo>â</mml:mo>
                  <mml:mrow>
                    <mml:mfrac>
                      <mml:mrow>
                        <mml:mn>1</mml:mn>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:mfrac>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mrow>
                          <mml:mrow>
                            <mml:mo>(</mml:mo>
                            <mml:mrow>
                              <mml:mrow>
                                <mml:mfrac>
                                  <mml:mrow>
                                    <mml:mi>x</mml:mi>
                                    <mml:mo>â</mml:mo>
                                    <mml:mo>Î¼</mml:mo>
                                  </mml:mrow>
                                  <mml:mo>Ï</mml:mo>
                                </mml:mfrac>
                              </mml:mrow>
                            </mml:mrow>
                            <mml:mo>)</mml:mo>
                          </mml:mrow>
                        </mml:mrow>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mn>2</mml:mn>
                      </mml:mrow>
                    </mml:msup>
                  </mml:mrow>
                </mml:mrow>
                <mml:mo>)</mml:mo>
              </mml:mrow>
              <mml:mo>,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <disp-formula id="E3">
          <label>(3)</label>
          <mml:math id="M3" display="block" overflow="scroll">
            <mml:mo>Â </mml:mo>
            <mml:mi>bias</mml:mi>
            <mml:mo>(</mml:mo>
            <mml:mi>Q</mml:mi>
            <mml:mo>,</mml:mo>
            <mml:mi>R</mml:mi>
            <mml:mo>)</mml:mo>
            <mml:mo>=</mml:mo>
            <mml:mrow>
              <mml:mfrac>
                <mml:mn>1</mml:mn>
                <mml:mrow>
                  <mml:mi>similarity</mml:mi>
                  <mml:mo>(</mml:mo>
                  <mml:mi>Q</mml:mi>
                  <mml:mo>,</mml:mo>
                  <mml:mi>R</mml:mi>
                  <mml:mo>)</mml:mo>
                </mml:mrow>
              </mml:mfrac>
            </mml:mrow>
            <mml:msqrt>
              <mml:mrow>
                <mml:munder>
                  <mml:mo>â</mml:mo>
                  <mml:mi>k</mml:mi>
                </mml:munder>
              </mml:mrow>
              <mml:mrow>
                <mml:mo>(</mml:mo>
                <mml:mrow>
                  <mml:munder>
                    <mml:mrow>
                      <mml:mi>max</mml:mi>
                      <mml:mo>Â </mml:mo>
                    </mml:mrow>
                    <mml:mi>l</mml:mi>
                  </mml:munder>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mi>I</mml:mi>
                    <mml:mi>l</mml:mi>
                  </mml:msub>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mi>I</mml:mi>
                    <mml:mi>k</mml:mi>
                  </mml:msub>
                </mml:mrow>
                <mml:mo>Ï</mml:mo>
                <mml:mo>(</mml:mo>
              </mml:mrow>
              <mml:mi>m</mml:mi>
              <mml:mrow>
                <mml:msub>
                  <mml:mi>z</mml:mi>
                  <mml:mi>l</mml:mi>
                </mml:msub>
              </mml:mrow>
              <mml:mo>,</mml:mo>
              <mml:mi>m</mml:mi>
              <mml:mrow>
                <mml:msub>
                  <mml:mi>z</mml:mi>
                  <mml:mi>k</mml:mi>
                </mml:msub>
              </mml:mrow>
              <mml:mo>)</mml:mo>
              <mml:mrow>
                <mml:msup>
                  <mml:mo>)</mml:mo>
                  <mml:mn>2</mml:mn>
                </mml:msup>
              </mml:mrow>
            </mml:msqrt>
            <mml:mo>.</mml:mo>
          </mml:math>
        </disp-formula>
        <p>For the purpose of this study, we employ a <italic toggle="yes">bias-adjusted similarity</italic> measurement as: <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mi>similarity</mml:mi><mml:mo>â</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>â</mml:mo><mml:mi>bias</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>.</p>
        <p>Note that as Prosit only predicts <italic toggle="yes">b</italic> and <italic toggle="yes">y</italic> ion intensities, it might be ill-advised to score similarity based on all peaks. A correct match might achieve an inferior score, when additional ion-type peaks are present, which are not matched by the prediction. Therefore, we introduce a second type of similarity, which only considers similarity of matched peaks, which we call <italic toggle="yes">reflection score</italic>. All unmatched peaks from the experimental spectrum are considered noise and do not influence this score. Bias and <italic toggle="yes">bias-adjusted similarity</italic> are formulated equivalently on matching ions only. The final scoring function for the evaluation of target decoy competition is the average between <italic toggle="yes">bias-adjusted similarity</italic> and the <italic toggle="yes">reflection score</italic> version of the same formula. Remember that the <italic toggle="yes">reflection score</italic> alone might not provide a perfect distinction either, since it can disregard large portions of the experimental MS/MS spectrum. A false peptide might achieve a high score by matching well to small peaks annotated as <italic toggle="yes">b</italic> and <italic toggle="yes">y</italic> ions yet leaving most of the peak intensity unaccounted for. Thus, we opt for the average out of both spectral similarity measurements.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 Data preparation</title>
      <p>The datasets in this study were derived from sources in the public domain. Identifiers and links to the data are provided below and in the <ext-link xlink:href="https://dx.doi.org/10.1093/bioinformatics/btad376" ext-link-type="uri">Supplementary Text</ext-link>. We evaluate the performance of Mistle on the NIST human (<italic toggle="yes">Homo sapiens</italic>) consensus library (downloaded from <monospace>doi.org/10.18434/T4ZK5S; Instrument: Ion Trap; Build date: </monospace>05-29-2014) and two common mock communities, 9MM (<xref rid="btad376-B21" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> 2013</xref>) and SIHUMIx (<xref rid="btad376-B13" ref-type="bibr">Krause <italic toggle="yes">et al.</italic> 2020</xref>). For the latter, we follow the recently published CAMPI study (<xref rid="btad376-B24" ref-type="bibr">Van Den Bossche <italic toggle="yes">et al.</italic> 2021</xref>), such that the evaluation is on par with the current metaproteomic benchmarking standard.</p>
      <p>Protein sequence databases are re-utilized from <xref rid="btad376-B22" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> (2014)</xref> and the CAMPI study. Four original search files for 9MM and two large search files from CAMPI are selected for the comparison. Additionally, a yeast (<italic toggle="yes">Saccharomyces cerevisiae</italic>) consensus library by NIST (downloaded from <ext-link xlink:href="https://doi.org/10.18434/T4ZK5S" ext-link-type="uri">doi.org/10.18434/T4ZK5S</ext-link>; Instrument: Ion Trap; Build date: 04-06-2012) serves as an experimental ground truth dataset. A summary of the two microbiomes and the data is found in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Text</xref>.</p>
      <p>The human spectral library is queried with 18 search files from the human HEK293 cell line [<xref rid="btad376-B17" ref-type="bibr">Roos <italic toggle="yes">et al.</italic> (2016)</xref>; PRIDE ID: PXD001197] aligning our study with the spectral benchmarking by <xref rid="btad376-B27" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> (2020)</xref> that already compared msSLASH and SpectraST.</p>
      <sec>
        <title>2.3.1 Spectral library construction</title>
        <p>The human spectral library is set up with SpectraST (in .mgf format) with the corresponding decoy library generated using the decoy precursor swap method by <xref rid="btad376-B3" ref-type="bibr">Cheng <italic toggle="yes">et al.</italic> (2013)</xref>. In total, the library consists of 339Â 970 target precursors and 339Â 942 decoy precursors.</p>
        <p>Spectral libraries covering both microbiomes are predicted with the following workflow: The protein sequence databases are digested using EncyclopeDIA (<xref rid="btad376-B20" ref-type="bibr">Searle <italic toggle="yes">et al.</italic> 2020</xref>) with a mass range of 400â1500âDa, charge states 2â4, and up to two missed cleavages. The normalized collision energy (NCE) is left at default value 33. Then, a locally installed version of Prosit, downloaded from <ext-link xlink:href="https://github.com/kusterlab/prosit" ext-link-type="uri">https://github.com/kusterlab/prosit</ext-link> in 2019, is used to predict MS/MS spectra for all peptides and charge conformations in the peptide list. This way, the only modification considered is Cysteine Carbamidomethylation, which is fixed. A decoy library, when necessary, is created using DecoyPyrat (<xref rid="btad376-B29" ref-type="bibr">Wright and Choudhary 2016</xref>) with minimum peptide length 7, and the downstream procedure is executed identically. Note that the SIHUMIx database already contains decoy sequences. Here, the database is split into two separate sets instead, before digestion and prediction. For 9MM, the contaminants database cRAP is appended downloaded from the GPM FTP site <ext-link xlink:href="http://ftp.thegpm.org/fasta/cRAP/" ext-link-type="uri">http://ftp.thegpm.org/fasta/cRAP/</ext-link> in December 2021. Additionally, the human proteome, downloaded from Uniprot Proteomes (Proteome ID: UP000005640), is added as an entrapment database to the target sequences. Again, we produce corresponding decoys with the method described above and digest and predict the spectral libraries accordingly.</p>
        <p>All of this results in 9Â 995Â 224 human peptide spectra predicted by Prosit, 10Â 630Â 095 spectra from 9MM and 7Â 806Â 271 spectra from SIHUMIx species (51.8âGB in .msp format in total). The <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref> contains additional statistics regarding all datasets.</p>
      </sec>
      <sec>
        <title>2.3.2 Search setup</title>
        <p>The <italic toggle="yes">mistle-build</italic> (v0.1.1) indexing algorithm is applied to the data creating a searchable index with 64 search partitions in condensed binary format for the target and decoy library. The four experimental 9MM files are then searched using the <italic toggle="yes">mistle-search</italic> (v0.1.1) program with 10âppm precursor tolerance and 0.2âDa fragment tolerance (bin size), as suggested by <xref rid="btad376-B21" ref-type="bibr">Tanca <italic toggle="yes">et al.</italic> (2013)</xref>. The yeast consensus spectra were searched at 10âppm precursor tolerance. Here, we relaxed the fragment tolerance to 0.5âDa, as the machine accuracy is unknown and a higher fragment tolerance was found to perform better. The two experimental files from the CAMPI study are searched in the SIHUMIx library with 10âppm precursor tolerance and 0.02âDa fragment tolerance as was done by <xref rid="btad376-B24" ref-type="bibr">Van Den Bossche <italic toggle="yes">et al.</italic> (2021)</xref>.</p>
        <p>We conduct the exact same searches with SpectraST and msSLASH (<xref rid="btad376-B27" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2020</xref>) on the target and decoy libraries, and with MSFragger given the original protein sequence databases. MSFragger 3.4 was used via the FragPipe pipeline. SpectraST version 5.0 was installed together with the TPP v6.0.0 software (<xref rid="btad376-B8" ref-type="bibr">Deutsch <italic toggle="yes">et al.</italic> 2015</xref>) and msSLASH was downloaded from GitHub (<ext-link xlink:href="https://github.com/COL-IU/msSLASH" ext-link-type="uri">https://github.com/COL-IU/msSLASH</ext-link>). Precursor and fragment tolerances are set as described above, peptide mass ranges are defined accordingly, and modifications are set to carbamidomethylated Cysteine only, to ensure a fair comparison. Aside from that, all tools run with default parameters. All pre-processing steps and mass calibrations are allowed. Since SpectraST and msSLASH accept precursor tolerance only in absolute values, we set it to 0.015, so that it considers all candidates for the largest peptides (10âppm of 1500âDa).</p>
      </sec>
      <sec>
        <title>2.3.3 Quality control</title>
        <p>False discovery rate (FDR) estimation using target decoy competition is put in place as primary technique to ensure high quality of identification. For separate target and decoy searches (Mistle and SpectraST) the results are first merged, retrieving only the top scoring hit, either from the target or the decoy library. The FDR is then estimated from the number of target peptides <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>target</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> emitted at any scoring threshold <italic toggle="yes">t</italic> and corresponding the number of decoys <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>decoy</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>, as a measure of false discoveries <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>false</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> among them:
<inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>false</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is directly measurable only if the correct peptides for the MS/MS spectra are specified.</p>
        <disp-formula id="E4">
          <label>(4)</label>
          <mml:math id="M4" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mtext>FDR</mml:mtext>
              <mml:mo stretchy="false">(</mml:mo>
              <mml:mi>t</mml:mi>
              <mml:mo stretchy="false">)</mml:mo>
              <mml:mo>=</mml:mo>
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>false</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>target</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
              <mml:mo>â</mml:mo>
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>decoy</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>target</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
              <mml:mo>.</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>Afterwards, the FDR estimate is validated using human protein sequences as entrapment database. Target peptide identifications that are unmistakably ascribed to human proteins are deemed false positives and an entrapment false discovery estimate can be computed by:
where <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>trap</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of entrapment peptides among the target identification and <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mtext>target</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula> is the number of all target identifications at scoring threshold <italic toggle="yes">t</italic>. R is the ratio of target database size over entrapment database size (number of peptides).</p>
        <disp-formula id="E5">
          <label>(5)</label>
          <mml:math id="M5" display="block" overflow="scroll">
            <mml:mrow>
              <mml:mrow>
                <mml:msub>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:mtext>FDR</mml:mtext>
                    </mml:mrow>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mtext>trap</mml:mtext>
                  </mml:mrow>
                </mml:msub>
              </mml:mrow>
              <mml:mo stretchy="false">(</mml:mo>
              <mml:mi>t</mml:mi>
              <mml:mo stretchy="false">)</mml:mo>
              <mml:mo>=</mml:mo>
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>trap</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mrow>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>N</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mtext>target</mml:mtext>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mo stretchy="false">(</mml:mo>
                    <mml:mi>t</mml:mi>
                    <mml:mo stretchy="false">)</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
              </mml:mrow>
              <mml:mo>â</mml:mo>
              <mml:mi>R</mml:mi>
              <mml:mo>,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
        <p>Moreover, we append the post-processing software Percolator (version 3.05.0) (<xref rid="btad376-B11" ref-type="bibr">KÃ¤ll <italic toggle="yes">et al.</italic> 2007</xref>) to investigate target decoy separation enhanced by support vector machines for Mistle and MSFragger. Parameters are used as suggested by the Fragpipe pipeline (with following flags set: --only-psms, --no-terminate, and --post-processing-tdc). FDR estimation is performed by Percolator. Features provided to Percolator include all the statistics collected by Mistle during the search. These range from various similarity and delta scores (see Section 2.2.1) to relevant metadata such as peptide length and precursor mass. The significance of individual features is discussed in the Section 3.4.</p>
        <p>The impact of retention time features is evaluated separately with Percolator. Here, we use DeepLC (version 1.2.1) (<xref rid="btad376-B1" ref-type="bibr">Bouwmeester <italic toggle="yes">et al.</italic> 2021</xref>) to predict retention times, which are compared to the measured retention times of the experimental spectra. Absolute, squared and log distance, as well as a relative difference between measurement and prediction are calculated and added as columns to the input of Percolator.</p>
      </sec>
    </sec>
    <sec>
      <title>2.4 Run time and memory consumption evaluation</title>
      <p>All searches are performed on a Debian 5.10.113-1 system with an Intel(R) Xeon(R) Gold 5120 CPU @ 2.20âGHz and RAM of type DDR4, and with the data residing on an SSD. Eight threads were provided for each tool to make use of.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Run time and memory performance</title>
      <p>Time and hardware resources can become a critical factor when looking at large metaproteomes, covering thousands of species. For the moment, we evaluate run time and memory performances of all search software on a human consensus library and the two small lab-assembled microbiomes, 9MM and SIHUMIx. Feasibility for larger databases is discussed later on.</p>
      <sec>
        <title>3.1.1 Run time</title>
        <p>MSFragger is currently one of the most popular and time-wise best performing database search algorithms. We use MSFragger as representative of sequence database search algorithms in contrast to the spectral library search algorithms we evaluate against. Note that spectral library search faces inherently different bottlenecks, e.g. data loading and continuous index construction, since it does not have the whole database information immediately, unless it loads every spectrum into RAM. At the same time, no sequence processing is required, e.g. protein digestion. As for the spectral library search engines, we compare Mistle to SpectraST, as it is a stable and popular option among spectral search software. Additionally, we benchmark msSLASH, which has been recently developed and introduces massive run time improvements by using Locality-Sensitive Hashing (<xref rid="btad376-B27" ref-type="bibr">Wang <italic toggle="yes">et al.</italic> 2020</xref>).</p>
        <p><xref rid="btad376-F3" ref-type="fig">FigureÂ 3</xref> compares the time required to search all experimental files between all four algorithms, split according to the spectral library. In all cases, Mistle is faster than the other spectral library search algorithms. The gain in performance is more significant the larger the library is. The metaproteome libraries are approximately 30 times larger (in terms of MS/MS spectra) than the human library, which is most notable in the increase in index construction time for Mistle and SpectraST. Mistle outperforms SpectraST by a factor of 2 (human library) to &gt;10 (metaproteomes) and msSLASH by a factor of 2 when searching the predicted metaproteomes.</p>
        <fig position="float" id="btad376-F3">
          <label>Figure 3.</label>
          <caption>
            <p>Total run time of all experimental search files measured for human, 9MM, and SIHUMIx libraries. Indexing time is indicated by stripes, whenever a separate index instance is constructed and saved to disk as intermediary step. Mistle performs the queries faster than any spectral library search engine (left side) but is slower than the database search algorithm MSFragger (right side).</p>
          </caption>
          <graphic xlink:href="btad376f3" position="float"/>
        </fig>
        <p>This places Mistle on a level comparable to the database search algorithm MSFragger, which is still a few times faster. Turning off MSFraggerâs mass calibration and parameter optimization reduces its run time even further down to 1.9âmin (less than half), highlighting that spectral search cannot quite match the speed of highly optimized database search. Reasons for that are: (i) the large index construction and data reading times, which in case of Mistle make up half of the total run time measured, requiring multiple I/O operations to load and save spectra and their fragments; (ii) a more cost-intensive spectral similarity calculation; and (iii) a current lack of optimization for multiple search files that require reloading Mistleâs index partitions between runs. Combining consecutive searches into a single query immediately speeds up the process. We test this by concatenating the four 9 MM search files into a single search file and analyse it with Mistle. While still querying the exact same experimental spectra, the search time reduces from 21âmin down to 7âmin, which is almost as fast as MSFragger. Also, note that the fragment index of Mistle needs to be constructed only once for each spectral library. Hence, when more files (or spectra) are searched, the run time reduces in relation to the other tools. Indexing time is indicated by the striped section in <xref rid="btad376-F3" ref-type="fig">Fig.Â 3</xref> for Mistle and SpectraST. Note that for predicted spectral libraries, the indexing time gets overshadowed by the construction and prediction process of the spectral data itself, which is much more time consuming. For instance, the 9MM target and decoy libraries alone take around 16âh for the prediction with Prosit (10Â 630Â 095 spectra).</p>
        <p>Additionally, we investigated the time spent in distinct parts of the search loops, finding that <italic toggle="yes">mistle-search</italic> (lower bar in <xref rid="btad376-F3" ref-type="fig">Fig.Â 3</xref>) uses more than 90<inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of its time for loading the spectral index and constructing data structures. Conversely, Mistle spends &lt;10<inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of the time performing spectral queries, i.e. candidate search in the precursor index, fragment matching, and the final rescoring of top-ranked candidates. This demonstrates a current bottleneck at index loading operations that could benefit from further optimizations in the future, such as the use of memory mapping. Still, time-wise the fragment index search of Mistle introduces major improvements to spectral library search and brings it into a feasible reach compared to sequence database search.</p>
      </sec>
      <sec>
        <title>3.1.2 Memory</title>
        <p>We analyse the memory requirements for all software, measured by the peak memory consumption across all runs against the human consensus library, 9MM and SIHUMIx, respectively. Metaproteome libraries are composed of the respective target spectra, the predicted human proteome (for entrapment) and the contaminants database with the predicted decoy libraries matching those. <xref rid="btad376-F4" ref-type="fig">FigureÂ 4</xref> depicts the memory consumption in Gigabyte (GB). We find extraordinary memory improvements by the index partitioning and search scheduling method implemented in Mistle compared to all other search software, being around an order of magnitude more memory efficient. Compared to SpectraST, Mistle requires 10â22 times less RAM, performing the exact same task. Mistle effectively constructs a fragment index and performs searches in a 38âGB large MS/MS library (9MM) with less than 3âGB RAM, enabling queries on low performance computers, e.g. home laptops.</p>
        <fig position="float" id="btad376-F4">
          <label>Figure 4.</label>
          <caption>
            <p>Memory consumption measured over all searches against the human, 9MM, and SIHUMIx libraries. Mistle performs much more RAM efficiently than all other tools with a 10 to 22-fold decrease in memory usage when compared to SpectraST and up to 10-fold decrease when compared to msSLASH, and &gt;10-fold decrease when compared to MSFragger (run in default settings without memory restriction).</p>
          </caption>
          <graphic xlink:href="btad376f4" position="float"/>
        </fig>
        <p>We provide detailed information on how index partitioning and search scheduling affect run time and memory consumption in <xref rid="btad376-F5" ref-type="fig">Fig.Â 5</xref>. While the run time remains relatively constant and even improves slightly with increasing partition count, the drop in memory consumption is eminent. The complete index (one partition) is comparable in size to MSFraggerâs fragment index, though it holds additional information, such as peak intensity values. However, with the use of more than one partition, the RAM usage decreases according to the partition size. The usage converges to roughly 2âGB when using hundreds of partitions. This is the cached size of precursor index and query spectra together, while the fragment index size gets arbitrarily small by the partitioning. We use Mistle with 64 partitions in this study as it significantly reduces memory consumption with a stable run time, but the optimum is not reached with 64 partitions for this dataset.</p>
        <fig position="float" id="btad376-F5">
          <label>Figure 5.</label>
          <caption>
            <p>Memory consumption (black) and run time (green) shown for increasing numbers of partitions of Mistleâs fragment index for the 9MM target library. Peak RAM was measured, and the run time is divided into the time required to build the fragment index (dots) and search time (crosses) for the largest search file (9MM<inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mo>_</mml:mo></mml:math></inline-formula>Run<inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mo>_</mml:mo></mml:math></inline-formula>1.mgf).</p>
          </caption>
          <graphic xlink:href="btad376f5" position="float"/>
        </fig>
        <p><xref rid="btad376-F5" ref-type="fig">FigureÂ 5</xref> also highlights the imbalance between search time and index construction time, as mentioned before. For a single search file, index construction takes almost three times longer than the spectral matching and ranking process, rendering Misle less efficient when the library is only queried once. On the other hand, many or particularly large MS/MS runs evaluated against the same metaproteome database benefit from an excellent search time on individual runs, where the fragment index (and spectral library) only needs to be constructed at the outset of an analysis.</p>
        <p>RAM accessible to MSFragger can be restricted manually at an increase in run time. Restriction to 20 and 10âGB leads to a minor increase in search time of 10%â20%. Testing the limits, for 9MM we were able to reduce MSFraggerâs memory consumption down to 3âGB (3.7âGB measured when running with FragPipe) before the program rejected the job due to insufficient memory. We measured a run time increase of around 65<inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> (8.1âmin in total). In the case of SIHUMIx, MSFragger crashes when setting the available memory to 3âGB. The lowest memory consumption achievable without an error was 4.6âGB. While these numbers are tolerable, large-scale metaproteomics reference databases are easily 100 times as large, such that memory requirements can have a profound impact on run time and feasibility. Mistle excels in memory-confined environments, where Mistle is not only much more performant than other spectral search software but also a real alternative to database search.</p>
      </sec>
    </sec>
    <sec>
      <title>3.2 Quality control</title>
      <p>Target decoy competition is the state-of-the-art method for quality assurance of PSMs, which we employ for all tested software. It is essential though, to verify that the FDR estimation is correct and remains stable across many datasets, especially when dealing with large search spaces. We put two mechanisms in place to validate the target decoy FDR. A yeast consensus library with annotated mass spectra serves as ground truth, which is queried against the inflated search space of 9MM (and entrapment) sequences. <italic toggle="yes">Saccharomyces cerevisiae</italic> is one of the species in the 9MM library. The second means of error estimation are entrapment sequences, which are concatenated to the target library. They provide an orthogonal FDR estimate (<inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mtext>FDR</mml:mtext></mml:mrow></mml:mrow><mml:mrow><mml:mtext>trap</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:mrow></mml:math></inline-formula>) to confirm that the target decoy FDR remains stable across all performed searches. A mathematical description can be found in Section 2.3.3.</p>
      <p><xref rid="btad376-F6" ref-type="fig">FigureÂ 6</xref> shows the performance of all tools on the yeast ground truth dataset. We evaluate the number of PSMs at various target decoy FDR thresholds (<xref rid="btad376-F6" ref-type="fig">Fig.Â 6a</xref>) and compare them with the true FDR (<xref rid="btad376-F6" ref-type="fig">Fig.Â 6c</xref>) measured according to the peptide annotations in the consensus library. All algorithms except msSLASH identify high numbers of yeast spectra at 1<inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> FDR, but Mistle identifies the most (82<inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of all search spectra). The true FDR is well reflected by the target decoy FDR estimate for all methods. Merely, in the case of SpectraSTâs f-value the FDR is slightly overestimated, indicating that the cut-off is too stringent but otherwise correct, for this dataset. Even msSLASH, which struggles with peptide identification still maintains a relatively accurate FDR estimation. In conclusion, the spectral prediction approach for entire metaproteome sequence databases, including the MS/MS prediction of decoy sequences, provides the foundation for highly effective quality control. FDR estimation remains accurate no matter which search engine is used to perform the matching. Of course, the same holds for MSFragger when scoring target and decoy sequences.</p>
      <fig position="float" id="btad376-F6">
        <label>Figure 6.</label>
        <caption>
          <p>Statistics on yeast consensus spectra (ground truth) matched to the 9MM library (inflated search space): (a) PSM output numbers over FDR for all software; (b) score distribution of rank-1 target and decoy PSMs identified by Mistle; (c) true FDR (derived from peptide annotation provided for the yeast spectra) over target decoy FDR estimates. The black diagonal line displays where true FDR and target decoy estimate align perfectly. The vertical dotted lines in Figures (a) and (b) display the 1% FDR threshold.</p>
        </caption>
        <graphic xlink:href="btad376f6" position="float"/>
      </fig>
      <p>In addition, we investigated the effect of different scores tracked by Mistle on the FDR. The PSM distribution of Mistleâs main scoring function (<italic toggle="yes">average bias-adjusted similarity</italic>, see Section 2.2.1) is depicted in <xref rid="btad376-F6" ref-type="fig">Fig.Â 6b</xref>. The scores follow a bimodal distribution and decoy scores belong to one of the modes. This is another indication of a clean separation of true and false target PSMs by Mistle. Interestingly, we discovered that removing the <italic toggle="yes">reflection score</italic> from the <italic toggle="yes">bias-adjusted similarity</italic> improves PSM output, but at the same time slightly underestimates the true FDR. The dot product alone does not suffice to distinguish target and decoy matches properly in this enlarged search space. This is reflected by the poor performance of msSLASH, which uses a dot product of log-scaled peak intensities, and we can confirm this with Mistleâs dot product of square root transformed intensities. PSM output numbers for the standard <italic toggle="yes">bias-adjusted similarity</italic> and the dot product are shown in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <p>The entrapment sequences added to 9MM and SIHUMIx allow another measurement of false discoveries, as identified peptides that exclusively match to human proteins are most probably wrong. We ensured that the human entrapment spectra follow a similar distribution to both 9MM and SIHUMIx (regarding precursor mass ranges, charge types and number of peaks; shown in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>). Therefore, entrapment sequences fulfill the same role as decoy peptides, but are real biological peptides rather than computationally generated ones. <xref rid="btad376-F7" ref-type="fig">FigureÂ 7</xref> shows the entrapment FDR over the target decoy FDR as a range (minimum, maximum and average) across all 9MM and SIHUMIx runs. For the most part, the entrapment FDR lies close to the target decoy FDR without much variation. The diagonal line indicates where the two FDR estimates are equal. msSLASH appears to have a higher variance in that regard, which we attribute to the smaller numbers of significant PSMs. SpectraST again, slightly overestimates the FDR rates with decoy sequences. Overall, the two orthogonal FDR estimates agree consistently, such that we expect little deviation from the true FDR throughout all the performed searches. Target decoy competition appears to be a well suited error estimation method for predicted spectral libraries of metaproteomes.</p>
      <fig position="float" id="btad376-F7">
        <label>Figure 7.</label>
        <caption>
          <p>Entrapment FDR over target decoy FDR measured across all searches against the predicted metaproteome libraries (9MM and SIHUMIx). The range in entrapment FDR is displayed by the colored area for any target decoy FDR interval with the average displayed by the inner line. The black diagonal line (slopeâ=â1) indicates the desired scenario, where the two FDR estimates align perfectly.</p>
        </caption>
        <graphic xlink:href="btad376f7" position="float"/>
      </fig>
      <p>We conclude that Mistleâs scoring function descriminates well between true and false matches. Target scores are well separable by the bimodal distribution of their scores. If such behavior manifests throughout more and specifically larger datasets, omitting target decoy competition might be an eligible option. A mixture model approach as for example discussed by <xref rid="btad376-B16" ref-type="bibr">Nesvizhskii (2010)</xref> might realize FDR estimation equally well. Dropping decoy sequences altogether would reduce computational resources needed for library prediction, fragment index construction, and spectral search, enabling metaproteomic studies of much larger scale. Furthermore, FDR validation with the ground truth yeast spectra and entrapment sequences demonstrate the high quality of spectral matches with predicted peak intensities. Regardless of which search engine is used, a high quality of true peptide identification persists, which further support the proposed prediction workflow.</p>
    </sec>
    <sec>
      <title>3.3 Peptide identification</title>
      <p>We investigate peptide identification rates on PSM level and peptide level for all three datasets and all algorithms at 1% FDR. The PSM numbers are averaged across all search files queried with error-bars shown in <xref rid="btad376-F8" ref-type="fig">Fig.Â 8</xref> (on the left) for each dataset. On the right, the sets of distinct peptides and the overlap between the search algorithms are shown with an upset plot. In all cases, Mistle is extremely sensitive being the best or second best search engine in terms of PSM output. The identification rates range from 23% (9MM) to 73% (human). In comparison to the CAMPI benchmarking study, we observe fewer significant PSMs at 1% FDR: &lt;100Â 000 for all search engines and files, whereas approximately 120Â 000 were identified in the CAMPI study. However, our library setup is more restrictive in terms of modification and permitted length of peptidesâcompare Section 2.3 with <xref rid="btad376-B24" ref-type="bibr">Van Den Bossche <italic toggle="yes">et al.</italic> (2021)</xref>âmaking it hard to judge the difference in raw numbers. Additionally, the statistics for S05 and S06 search files in the CAMPI study were obtained by database search with X! Tandem (<xref rid="btad376-B6" ref-type="bibr">Craig and Beavis 2004</xref>), which uses a two-stage search strategy, likely yielding additional hits.</p>
      <fig position="float" id="btad376-F8">
        <label>Figure 8.</label>
        <caption>
          <p>PSM and peptide output for the (a) human, (b) 9MM, and (c) SIHUMIx libraries. PSM counts are averaged across all search files based on the software-specific scoring thresholds at 1<inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> FDR (without rescoring), shown on the left. Sets of identified peptides are depicted with an upset plot on the right (all searches combined). The individual bars show the set of peptides distinct to each software and the overlap between them. Peptides unique to Mistle are shown by the first bar. The overlap between the spectral search software (Mistle and SpectraST, as well as Mistle, SpectraST, and msSLASH) is highlighted.</p>
        </caption>
        <graphic xlink:href="btad376f8" position="float"/>
      </fig>
      <p>When querying the predicted metaproteome libraries, Mistle identifies the largest sets of distinct peptides with SpectraST and MSFragger following closely behind. Only for the human spectral library msSLASH identifies more peptides than Mistle with its log-scaled dot product. However, the discriminating power of the dot product significantly drops when searching large search spaces as explained earlier. msSLASH identifies only a fraction of peptides querying the metaproteome libraries compared to all other tools. Scores accounting for the dot bias (Mistle and SpectraST) perform much better. Mistle consistently produces more significant hits than SpectraST, which we attribute to the slight FDR overestimation with the <italic toggle="yes">f</italic>-value. Qualitative differences between the two tools are discussed in Section 4. In general, Mistle and SpectraST show an elevated overlap when looking at their distinct peptide intersections, most notable in the 9MM study. The overlap between spectral search software (highlighted light blue in <xref rid="btad376-F8" ref-type="fig">Fig.Â 8</xref>) indicates a striking number of peptides that is identified only through spectral search by matching peak intensities. Even though msSLASH identifies only a small set of peptides, its overlap with the results of Mistle and SpectraST is much more pronounced than its overlap with MSFragger. As a consequence, not only does Mistle identify more than 2000 peptides in each of the metaproteomes, which are completely unique to Mistleâs scoring function, but the elevated overlap between spectral search software also hinges at a non-negligible number of characteristic peptides that are different from the database search results. These findings validate the reliability and novelty of the spectral library prediction workflow, no matter which spectral search engine is used. An elaborate spectral similarity function is nonetheless indispensable.</p>
      <p>When examining specific differences in PSMs, we uncovered some instances where spectral intensity-based matching produces a clearly better match than database search using MSFragger. <xref rid="btad376-F9" ref-type="fig">FigureÂ 9a</xref> shows such an example from the SIHUMIx query (top of the mirror plot) paired with the spectral prediction from Prosit (bottom) of the peptide match found by Mistle, and <xref rid="btad376-F9" ref-type="fig">Fig.Â 9b</xref> shows the same spectrum matched by MSFragger. The near perfect overlap between b and y ion intensities (<italic toggle="yes">reflection score</italic> of 0.84) suggests that Mistle identified the correct peptide. SpectraST corroborates Mistleâs finding. In contrast, the PSM suggested by MSFragger for the same query spectrum is an apparent mismatch to a decoy peptide. This is only obvious given the peak intensity predictions by Prosit, as the theoretical b and y ions cover only a fraction of all peaks in both cases. Note that post-processing tools like Percolator eliminate this false discovery, but cannot recover the correct match.</p>
      <fig position="float" id="btad376-F9">
        <label>Figure 9.</label>
        <caption>
          <p>Mirror plot of a PSM identified by (a) Mistle and (b) MSFragger. In each case the top spectrum is the same experimental spectrum, scan 233724 of S05.mgf file and the bottom spectrum is the matched peptide spectrum from the SIHUMIx database with the peak intensities predicted by Prosit. Mistle finds a reasonable candidate with high spectral similarity of 0.52 and <italic toggle="yes">reflection score</italic> of 0.84. MSFragger identifies a decoy sequence with a hyperscore of 12.6. The spectral similarity to the predicted spectrum is very low with 0.09 and the <italic toggle="yes">reflection score</italic> is 0.29</p>
        </caption>
        <graphic xlink:href="btad376f9" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.4 Post-processing</title>
      <p>Percolator is a renowned post-processing software, which trains a linear support vector machine to separate target and decoy matches (<xref rid="btad376-B11" ref-type="bibr">KÃ¤ll <italic toggle="yes">et al.</italic> 2007</xref>). By doing so, Percolator optimizes the target PSM output through several iterations of semi-supervised learning with cross-validation. We append Percolator to Mistleâs and MSFraggerâs output, provided in pin-tab format that lists the search scores and statistics as features for the classifier.</p>
      <p>This leads to an increase in Mistleâs target output by 4.4%â17.4% compared to a threshold on the <italic toggle="yes">average bias-adjusted similarity</italic>. Smaller impact is seen for the predicted metaproteome libraries, where Percolator boosts the performance on average by 8.8<inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> (9MM) and 6.4<inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> (SIHUMIx). For the human spectral library, the PSM output was significantly increased with an average of 15.3<inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula>. MSFragger yields slightly more PSMs (4%â8%) than Mistle, almost doubling its output on the larger 9MM queries compared to a hyperscore cut-off. A direct comparison of PSMs identified with and without Percolator is provided in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <p>In terms of unique peptide identifications, both tools have very comparable results after rescoring. Mistle even identifies more distinct peptides in the SIHUMIx queries than MSFragger, despite having fewer PSMs. About 10<inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mo>%</mml:mo></mml:math></inline-formula> of peptides are specific to each search engine and remain undetected by the other. This once more highlights the merit of exploring orthogonal search approaches as standard database search alone is not fully comprehensive. The proposed spectral library workflow is sensitive to a different set of peptides, which may well be of biological significance. Corresponding figures are provided in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      <p>Percolator also returns its feature weights across all its cross-validation splits, which can be related to the feature importance. Note, however, that some features are highly correlated, making it difficult to judge their exact contribution. Still, we can confidently identify the following trends: Direct spectral similarity measures have a great influence with the <italic toggle="yes">reflection score</italic> being more important in case of the predicted libraries. This is coherent with the library setup, as only b and y ions are predicted, and missing peaks do not influence the <italic toggle="yes">reflection score</italic>. Respective score biases, e.g. dot bias, have consistently negative weights as is expected, favoring PSMs with high similarities and low biases. Occasionally, statistics like the shared peak count and <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> standard deviation of matched fragments had a contribution to target decoy separation. Smaller importance was given to delta scores, hyperscores, and mass differences on precursor level. For queries against the human spectral library, the dot product was the most important feature by far. This coincides with the good performance of msSLASH, which uses a dot product with log-scaled intensities. Interestingly, dot product seems to perform significantly better than the similarity on this low-resolution library. Remember that the similarity uses an <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> standard deviation rather than a fixed <italic toggle="yes">m</italic>/<italic toggle="yes">z</italic> tolerance and still penalizes mass difference for matched fragments. Moreover, biases have lower impacts, as both query and reference spectra contain all types of ions and noise peaks. This demonstrates that Percolator is a great addition to Mistle for cases when the <italic toggle="yes">average bias-adjusted similarity</italic> generates a slightly smaller target output.</p>
      <p>In addition, we investigate the effect of retention time features added to Percolator. We use DeepLC for retention time prediction, as described in Section 2.3.3, for peptide matches from SIHUMIx and 9MM. Note that while Prosit can predict retention times, they are currently not part of the spectral libraries. Both search engines receive a moderate but consistent boost of 1%â3% to their PSM output when retention time features are present. Percolator emphasizes that the relative retention time difference is one of the most important features for classification. At the moment, this is an untapped advantage that spectral libraries have over database search. Including retention time information in the library and calculating the corresponding features directly during the search eliminates the need for tedious and manual prediction of features post-search. This represents a potential future improvement to the current workflow.</p>
      <p>With rescoring, Mistle now outperforms msSLASH in terms of PSM output for the human library in most cases (15 out of 18 search files). Mistle is the only spectral search engine in this study that supports the Percolator-readable pin-tab format. This makes Mistle extremely versatile, likely performing well on any new dataset and also when search parameters are chosen inadequately.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Coping with complete predicted libraries for metaproteomics, covering more than 10 million peptide MS/MS spectra, proves to be a challenging task for spectral search software. Especially, analyzing the large candidate space in RAM is very demanding and might just fail when looking at more diverse microbiomes. We provide proof of concept that our approach works well for two mock-communities, turning all peptides from their sequence database into MS/MS spectra. Despite the large datasets, the presented search algorithm, Mistle, is extremely memory efficient due to an effective index partitioning technique. The memory requirements of Mistle are an order of magnitude smaller than those of all other spectral search software. In terms of run time, Mistle is up to 10 times faster than SpectraST, up to 2 times faster than msSLASH, and stays close to the ultra-fast database search algorithm MSFragger. Even though Mistle cannot quite match the run time of MSFragger, the challenges faced by each approach are quite different, and the improvements introduced by our algorithm are nonetheless significant.</p>
    <p>Investigating peptide identification, we find cohesive results between Mistle and SpectraST identifying high numbers of PSMs, but Mistle finds consistently more unique peptides (see <xref rid="btad376-F8" ref-type="fig">Fig.Â 8</xref>). The elevated peptide overlap between SpectraST and Mistle, and to some degree even msSLASH, reinforces the idea of spectral matching being able to identify peptides that standard database search cannot. Delving into this, we presented an example spectrum visibly attaining a much more reasonable match using our approach, when compared to MSFragger, which identifies a decoy peptide (see <xref rid="btad376-F9" ref-type="fig">Fig.Â 9</xref>).</p>
    <p>We ensured a high quality of spectral matches by verifying the target decoy FDR with annotated yeast spectra. The FDR is estimated accurately across all algorithms, legitimizing the use of spectral predictions (target and decoy sequences) when confronted with large search spaces. Mistleâs <italic toggle="yes">average bias-adjusted similarity</italic> (see Section 2.2.1) produces excellent bimodal distributions of PSM, which enable a clean separation of true and false discoveries, while at the same time being highly sensitive and accurate. Entrapment sequences spiked into the target library confirm the soundness of the target decoy approach for FDR estimation throughout the numerous searches. Although we put our focus on evaluating tool-specific scoring functions, Mistle can also be coupled to Percolator to boost identification rates even further, reaching up to 17.4% additional hits. This is another advantage of Mistle compared to other spectral search software. Still, there is room for further refinement of features, e.g. by integrating retention time predictions in the reference libraries. Our tests suggest that adding retention time features increases PSM performance again by up to 3%. In conclusion, we prove the applicability of Mistle to common lab-assembled studies and have reason to believe that the workflow will perform well for even larger metaproteomics studies.</p>
    <p>Currently, the main shortcoming resides in building the spectral library as an in-between step, which is resource intensive (time, and disk space). Additionally, loading times from disk takes more than 90% of the total search time, which is the reason for slightly increased run time compared to state-of-the-art database search methods like MSFragger. A way to mitigate long loading times is to distribute search tasks among several servers, each permanently keeping an index partition in RAM. As a positive side effect partitions can then be queried in parallel without any I/O operations.</p>
    <p>The prediction workflow produces satisfactory results no matter which search engine is used, as long as the spectral similarity measurement is carefully selected and tested. However, Mistle has an excellent trade-off between run time and memory consumption and outperforms SpectraST in that aspect by far. Mistle is best used for repeated scans on the same metaproteomic environment, like for instance SIHUMIx, such that the spectral library and search index are constructed only once. The sequence database and parameters can be chosen generously to be very comprehensive, and the performant search algorithm excels at multiple MS/MS runs against the same library. Spectral library construction using Prosit can be optimized further, e.g. by calibrating the collision energy based on the experimental raw data. The low memory consumption makes Mistle feasible for studies on low performance machines, e.g. laptop computers, but also allows much larger protein databases to be analysed, where the competing tools are quickly overchallenged. Of course, Mistle, being a spectral search engine at heart, can be used on any experimental spectral library, too. We highlight this by using Mistle to query 18 experimental MS/MS files to the NIST human consensus library. Although this represents only a small spectral library, the boost in performance and low memory footprint suggest that Mistle is well suited for far more comprehensive libraries.</p>
    <p>There are small qualitative differences between SpectraST and Mistle, which arise from different pre-processing steps and the scoring functions used, e.g. neighboring bin matching for SpectraST and peak matching using a Gaussian distribution for Mistle. Turning off most pre-processing features and using the native dot product for scoring produces nearly identical results between SpectraST and Mistle. We also suspect that the current search setup with a separate target and decoy library might affect the discriminating power of SpectraSTâs f-value. Thereby, differences in dot products [<inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mo>Î</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math></inline-formula>, see <xref rid="btad376-B14" ref-type="bibr">Lam <italic toggle="yes">et al.</italic> (2007)</xref>] are not calculated between target and decoy matches and may be a reason for the slight reduction in sensitivity. At this point, we conclude that the differences in PSM scoring play a minor role when looking at the overall identification of unique peptides in the samples. <xref rid="btad376-F8" ref-type="fig">FigureÂ 8</xref> demonstrates a large overlap in the findings of both spectral library search engines. Depending on the dataset, Mistle agrees with the peptides found by SpectraST in 88%â95% of the cases.</p>
    <p>With our tool, we open the door to investigate much larger metaproteomes, e.g. the human gut microbiome, with the help of predicted spectral libraries. In an ideal setting, spectral library prediction is set up to cover the entire metaproteome comprehensively with carefully selected parameters in accordance with the wet lab. Then, the effect of treatments, different samples or patient groups can be perpetually analysed by spectral search with Mistle producing reliable peptide identification in the large search space at fast rate, and without being memory intensive.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btad376_Supplementary_Data</label>
      <media xlink:href="btad376_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank Tanja Holstein and Sasan Amariamir for stimulating discussions and insights that assisted this research. They also kindly acknowledge Ferdous Nasri for proofreading the manuscript.</p>
  </ack>
  <sec>
    <title>Supplementary data</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> is available at <italic toggle="yes">Bioinformatics</italic> online.</p>
  </sec>
  <sec sec-type="COI-statement">
    <title>Conflict of interest</title>
    <p>None declared.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>None declared.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btad376-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bouwmeester</surname><given-names>R</given-names></string-name>, <string-name><surname>Gabriels</surname><given-names>R</given-names></string-name>, <string-name><surname>Hulstaert</surname><given-names>N</given-names></string-name></person-group><etal>et al</etal><article-title>Deeplc can predict retention times for peptides that carry as-yet unseen modifications</article-title>. <source>Nat Methods</source><year>2021</year>;<volume>18</volume>:<fpage>1363</fpage>â<lpage>9</lpage>.<pub-id pub-id-type="pmid">34711972</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Callieri</surname><given-names>C</given-names></string-name>, <string-name><surname>Eckert</surname><given-names>EM</given-names></string-name>, <string-name><surname>Cesare</surname><given-names>AD</given-names></string-name></person-group><etal>et al</etal><article-title>Microbial communities</article-title>. <source>Encyclopedia of Ecology </source><year>2019</year>;<volume>1</volume>:<fpage>126</fpage>â1<lpage>34</lpage>.</mixed-citation>
    </ref>
    <ref id="btad376-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cheng</surname><given-names>C-Y</given-names></string-name>, <string-name><surname>Tsai</surname><given-names>C-F</given-names></string-name>, <string-name><surname>Chen</surname><given-names>Y-J</given-names></string-name></person-group><etal>et al</etal><article-title>Spectrum-based method to generate good decoy libraries for spectral library searching in peptide identifications</article-title>. <source>J Proteome Res</source><year>2013</year>;<volume>12</volume>:<fpage>2305</fpage>â<lpage>10</lpage>.<pub-id pub-id-type="pmid">23560440</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Coon</surname><given-names>JJ</given-names></string-name>, <string-name><surname>Syka</surname><given-names>JE</given-names></string-name>, <string-name><surname>Shabanowitz</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Tandem mass spectrometry for peptide and protein sequence analysis</article-title>. <source>Biotechniques</source><year>2005</year>;<volume>38</volume>:<fpage>519</fpage>â<lpage>23</lpage>.<pub-id pub-id-type="pmid">15884666</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cox</surname><given-names>J</given-names></string-name>, <string-name><surname>Neuhauser</surname><given-names>N</given-names></string-name>, <string-name><surname>Michalski</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Andromeda: a peptide search engine integrated into the maxquant environment</article-title>. <source>J Proteome Res</source><year>2011</year>;<volume>10</volume>:<fpage>1794</fpage>â<lpage>805</lpage>.<pub-id pub-id-type="pmid">21254760</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Craig</surname><given-names>R</given-names></string-name>, <string-name><surname>Beavis</surname><given-names>RC.</given-names></string-name></person-group><article-title>Tandem: matching proteins with tandem mass spectra</article-title>. <source>Bioinformatics</source><year>2004</year>;<volume>20</volume>:<fpage>1466</fpage>â<lpage>7</lpage>.<pub-id pub-id-type="pmid">14976030</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dadi</surname><given-names>TH</given-names></string-name>, <string-name><surname>Siragusa</surname><given-names>E</given-names></string-name>, <string-name><surname>Piro</surname><given-names>VC</given-names></string-name></person-group><etal>et al</etal><article-title>DREAM-Yara: an exact read mapper for very large databases with short update time</article-title>. <source>Bioinformatics</source><year>2018</year>;<volume>34</volume>:<fpage>i766</fpage>â<lpage>i772</lpage>.<pub-id pub-id-type="pmid">30423080</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Mendoza</surname><given-names>L</given-names></string-name>, <string-name><surname>Shteynberg</surname><given-names>D</given-names></string-name></person-group><etal>et al</etal><article-title>Trans-proteomic pipeline, a standardized data processing pipeline for large-scale reproducible proteomics informatics</article-title>. <source>Proteomics Clin Appl</source><year>2015</year>;<volume>9</volume>:<fpage>745</fpage>â<lpage>54</lpage>.<pub-id pub-id-type="pmid">25631240</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gessulat</surname><given-names>S</given-names></string-name>, <string-name><surname>Schmidt</surname><given-names>T</given-names></string-name>, <string-name><surname>Zolg</surname><given-names>DP</given-names></string-name></person-group><etal>et al</etal><article-title>Prosit: proteome-wide prediction of peptide tandem mass spectra by deep learning</article-title>. <source>Nat Methods</source><year>2019</year>;<volume>16</volume>:<fpage>509</fpage>â<lpage>18</lpage>.<pub-id pub-id-type="pmid">31133760</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hettich</surname><given-names>RL</given-names></string-name>, <string-name><surname>Pan</surname><given-names>C</given-names></string-name>, <string-name><surname>Chourey</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Metaproteomics: harnessing the power of high performance mass spectrometry to identify the suite of proteins that control metabolic activities in microbial communities</article-title>. <source>Anal Chem</source><year>2013</year>;<volume>85</volume>:<fpage>4203</fpage>â<lpage>14</lpage>.<pub-id pub-id-type="pmid">23469896</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>KÃ¤ll</surname><given-names>L</given-names></string-name>, <string-name><surname>Canterbury</surname><given-names>JD</given-names></string-name>, <string-name><surname>Weston</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Semi-supervised learning for peptide identification from shotgun proteomics datasets</article-title>. <source>Nat Methods</source><year>2007</year>;<volume>4</volume>:<fpage>923</fpage>â<lpage>5</lpage>.<pub-id pub-id-type="pmid">17952086</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kong</surname><given-names>AT</given-names></string-name>, <string-name><surname>Leprevost</surname><given-names>FV</given-names></string-name>, <string-name><surname>Avtonomov</surname><given-names>DM</given-names></string-name></person-group><etal>et al</etal><article-title>MSFragger: ultrafast and comprehensive peptide identification in mass spectrometry-based proteomics</article-title>. <source>Nat Methods</source><year>2017</year>;<volume>14</volume>:<fpage>513</fpage>â<lpage>20</lpage>.<pub-id pub-id-type="pmid">28394336</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krause</surname><given-names>JL</given-names></string-name>, <string-name><surname>Schaepe</surname><given-names>SS</given-names></string-name>, <string-name><surname>Fritz-Wallace</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Following the community development of sihumixâa new intestinal in vitro model for bioreactor use</article-title>. <source>Gut Microbes</source><year>2020</year>;<volume>11</volume>:<fpage>1116</fpage>â<lpage>29</lpage>.<pub-id pub-id-type="pmid">31918607</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lam</surname><given-names>H</given-names></string-name>, <string-name><surname>Deutsch</surname><given-names>EW</given-names></string-name>, <string-name><surname>Eddes</surname><given-names>JS</given-names></string-name></person-group><etal>et al</etal><article-title>Development and validation of a spectral library searching method for peptide identification from MS/MS</article-title>. <source>Proteomics</source><year>2007</year>;<volume>7</volume>:<fpage>655</fpage>â<lpage>67</lpage>.<pub-id pub-id-type="pmid">17295354</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Muth</surname><given-names>T</given-names></string-name>, <string-name><surname>Kolmeder</surname><given-names>CA</given-names></string-name>, <string-name><surname>SalojÃ¤rvi</surname><given-names>J</given-names></string-name></person-group><etal>et al</etal><article-title>Navigating through metaproteomics data: a logbook of database searching</article-title>. <source>Proteomics</source><year>2015</year>;<volume>15</volume>:<fpage>3439</fpage>â<lpage>53</lpage>.<pub-id pub-id-type="pmid">25778831</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nesvizhskii</surname><given-names>AI.</given-names></string-name></person-group><article-title>A survey of computational methods and error rate estimation procedures for peptide and protein identification in shotgun proteomics</article-title>. <source>J Proteomics</source><year>2010</year>;<volume>73</volume>:<fpage>2092</fpage>â<lpage>123</lpage>.<pub-id pub-id-type="pmid">20816881</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Roos</surname><given-names>A</given-names></string-name>, <string-name><surname>Kollipara</surname><given-names>L</given-names></string-name>, <string-name><surname>Buchkremer</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Cellular signature of sil1 depletion: disease pathogenesis due to alterations in protein composition beyond the ER machinery</article-title>. <source>Mol Neurobiol</source><year>2016</year>;<volume>53</volume>:<fpage>5527</fpage>â<lpage>41</lpage>.<pub-id pub-id-type="pmid">26468156</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schiebenhoefer</surname><given-names>H</given-names></string-name>, <string-name><surname>Van Den Bossche</surname><given-names>T</given-names></string-name>, <string-name><surname>Fuchs</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>Challenges and promise at the interface of metaproteomics and genomics: an overview of recent progress in metaproteogenomic data analysis</article-title>. <source>Expert Rev Proteomics</source><year>2019</year>;<volume>16</volume>:<fpage>375</fpage>â<lpage>90</lpage>.<pub-id pub-id-type="pmid">31002542</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B19">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Scholz</surname><given-names>M</given-names></string-name>, <string-name><surname>Tett</surname><given-names>A</given-names></string-name>, <string-name><surname>Segata</surname><given-names>N</given-names></string-name></person-group>. <part-title>Computational tools for taxonomic microbiome profiling of shotgun metagenomes</part-title>. <source>Metagenomics for Microbiology</source>. <publisher-name>Elsevier</publisher-name>, <year>2015</year>, <fpage>67</fpage>â<lpage>80</lpage>.</mixed-citation>
    </ref>
    <ref id="btad376-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Searle</surname><given-names>BC</given-names></string-name>, <string-name><surname>Swearingen</surname><given-names>KE</given-names></string-name>, <string-name><surname>Barnes</surname><given-names>CA</given-names></string-name></person-group><etal>et al</etal><article-title>Generating high quality libraries for DIA MS with empirically corrected peptide predictions</article-title>. <source>Nat Commun</source><year>2020</year>;<volume>11</volume>:<fpage>1</fpage>â<lpage>10</lpage>.<pub-id pub-id-type="pmid">31911652</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tanca</surname><given-names>A</given-names></string-name>, <string-name><surname>Palomba</surname><given-names>A</given-names></string-name>, <string-name><surname>Deligios</surname><given-names>M</given-names></string-name></person-group><etal>et al</etal><article-title>Evaluating the impact of different sequence databases on metaproteome analysis: insights from a lab-assembled microbial mixture</article-title>. <source>PLoS ONE</source><year>2013</year>;<volume>8</volume>:<fpage>e82981</fpage>.<pub-id pub-id-type="pmid">24349410</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tanca</surname><given-names>A</given-names></string-name>, <string-name><surname>Palomba</surname><given-names>A</given-names></string-name>, <string-name><surname>Pisanu</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>A straightforward and efficient analytical pipeline for metaproteome characterization</article-title>. <source>Microbiome</source><year>2014</year>;<volume>2</volume>:<fpage>1</fpage>â<lpage>16</lpage>.<pub-id pub-id-type="pmid">24468033</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Tanca</surname><given-names>A</given-names></string-name>, <string-name><surname>Abbondio</surname><given-names>M</given-names></string-name>, <string-name><surname>Palomba</surname><given-names>A</given-names></string-name></person-group><etal>et al</etal><article-title>Potential and active functions in the gut microbiota of a healthy human cohort</article-title>. <source>Microbiome</source><year>2017</year>;<volume>5</volume>:<fpage>1</fpage>â<lpage>15</lpage>.<pub-id pub-id-type="pmid">28086968</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Van Den Bossche</surname><given-names>T</given-names></string-name>, <string-name><surname>Kunath</surname><given-names>BJ</given-names></string-name>, <string-name><surname>Schallert</surname><given-names>K</given-names></string-name></person-group><etal>et al</etal><article-title>Critical assessment of metaproteome investigation (CAMPI): a multi-laboratory comparison of established workflows</article-title>. <source>Nat Commun</source><year>2021</year>;<volume>12</volume>:<fpage>1</fpage>â<lpage>15</lpage>.<pub-id pub-id-type="pmid">33397941</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Verbruggen</surname><given-names>S</given-names></string-name>, <string-name><surname>Gessulat</surname><given-names>S</given-names></string-name>, <string-name><surname>Gabriels</surname><given-names>R</given-names></string-name></person-group><etal>et al</etal><article-title>Spectral prediction features as a solution for the search space size problem in proteogenomics</article-title>. <source>Mol Cell Proteomics</source><year>2021</year>;<volume>20</volume>:<fpage>100076</fpage>.<pub-id pub-id-type="pmid">33823297</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Verheggen</surname><given-names>K</given-names></string-name>, <string-name><surname>Raeder</surname><given-names>H</given-names></string-name>, <string-name><surname>Berven</surname><given-names>FS</given-names></string-name></person-group><etal>et al</etal><article-title>Anatomy and evolution of database search enginesâa central component of mass spectrometry based proteomic workflows</article-title>. <source>Mass Spectrom Rev</source><year>2020</year>;<volume>39</volume>:<fpage>292</fpage>â<lpage>306</lpage>.<pub-id pub-id-type="pmid">28902424</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>L</given-names></string-name>, <string-name><surname>Liu</surname><given-names>K</given-names></string-name>, <string-name><surname>Li</surname><given-names>S</given-names></string-name></person-group><etal>et al</etal><article-title>A fast and memory-efficient spectral library search algorithm using locality-sensitive hashing</article-title>. <source>Proteomics</source><year>2020</year>;<volume>20</volume>:<fpage>2000002</fpage>.</mixed-citation>
    </ref>
    <ref id="btad376-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilmes</surname><given-names>P</given-names></string-name>, <string-name><surname>Bond</surname><given-names>PL.</given-names></string-name></person-group><article-title>The application of two-dimensional polyacrylamide gel electrophoresis and downstream analyses to a mixed community of prokaryotic microorganisms</article-title>. <source>Environ Microbiol</source><year>2004</year>;<volume>6</volume>:<fpage>911</fpage>â<lpage>20</lpage>.<pub-id pub-id-type="pmid">15305916</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B29">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wright</surname><given-names>JC</given-names></string-name>, <string-name><surname>Choudhary</surname><given-names>JS.</given-names></string-name></person-group><article-title>Decoypyrat: fast non-redundant hybrid decoy sequence generation for large scale proteomics</article-title>. <source>J Proteomics Bioinform</source><year>2016</year>;<volume>9</volume>:<fpage>176</fpage>â<lpage>80</lpage>.<pub-id pub-id-type="pmid">27418748</pub-id></mixed-citation>
    </ref>
    <ref id="btad376-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhou</surname><given-names>X-X</given-names></string-name>, <string-name><surname>Zeng</surname><given-names>W-F</given-names></string-name>, <string-name><surname>Chi</surname><given-names>H</given-names></string-name></person-group><etal>et al</etal><article-title>pdeep: predicting MS/MS spectra of peptides with deep learning</article-title>. <source>Anal Chem</source><year>2017</year>;<volume>89</volume>:<fpage>12690</fpage>â<lpage>7</lpage>.<pub-id pub-id-type="pmid">29125736</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

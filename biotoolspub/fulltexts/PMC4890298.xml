<?properties open_access?>
<?subarticle report14093?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">F1000Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">F1000Res</journal-id>
    <journal-id journal-id-type="pmc">F1000Research</journal-id>
    <journal-title-group>
      <journal-title>F1000Research</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2046-1402</issn>
    <publisher>
      <publisher-name>F1000Research</publisher-name>
      <publisher-loc>London, UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4890298</article-id>
    <article-id pub-id-type="pmid">27303634</article-id>
    <article-id pub-id-type="doi">10.12688/f1000research.8759.2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software Tool Article</subject>
      </subj-group>
      <subj-group>
        <subject>Articles</subject>
        <subj-group>
          <subject>Bioinformatics</subject>
        </subj-group>
        <subj-group>
          <subject>Genomics</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Infrastructure for genomic interactions: Bioconductor classes for Hi-C, ChIA-PET and related experiments</article-title>
      <fn-group content-type="pub-status">
        <fn>
          <p>[version 2; referees: 2 approved]</p>
        </fn>
      </fn-group>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Lun</surname>
          <given-names>Aaron T. L.</given-names>
        </name>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Perry</surname>
          <given-names>Malcolm</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ing-Simmons</surname>
          <given-names>Elizabeth</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <aff id="a1"><label>1</label>Cancer Research UK Cambridge Institute, University of Cambridge, Cambridge, UK</aff>
      <aff id="a2"><label>2</label>MRC Clinical Sciences Centre, Faculty of Medicine, Imperial College London, London, UK</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email xlink:href="mailto:aaron.lun@cruk.cam.ac.uk">aaron.lun@cruk.cam.ac.uk</email>
      </corresp>
      <fn fn-type="con">
        <p>ATLL proposed and developed the
<italic>InteractionSet</italic> package, with significant contributions from MP and EI-S. All authors wrote and approved the manuscript.</p>
      </fn>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were declared.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>6</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2016</year>
    </pub-date>
    <volume>5</volume>
    <elocation-id>950</elocation-id>
    <history>
      <date date-type="accepted">
        <day>23</day>
        <month>6</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright: © 2016 Lun ATL et al.</copyright-statement>
      <copyright-year>2016</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="f1000research-5-9784.pdf"/>
    <abstract>
      <p>The study of genomic interactions has been greatly facilitated by techniques such as chromatin conformation capture with high-throughput sequencing (Hi-C). These genome-wide experiments generate large amounts of data that require careful analysis to obtain useful biological conclusions. However, development of the appropriate software tools is hindered by the lack of basic infrastructure to represent and manipulate genomic interaction data. Here, we present the
<italic>InteractionSet </italic>package that provides classes to represent genomic interactions and store their associated experimental data, along with the methods required for low-level manipulation and processing of those classes. The
<italic>InteractionSet </italic>package exploits existing infrastructure in the open-source Bioconductor project, while in turn being used by Bioconductor packages designed for higher-level analyses. For new packages, use of the functionality in
<italic>InteractionSet </italic>will simplify development, allow access to more features and improve interoperability between packages.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Hi-C</kwd>
      <kwd>ChIA-PET</kwd>
      <kwd>infrastructure</kwd>
      <kwd>data representation</kwd>
      <kwd>genomic interactions</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>Cancer Research UK</funding-source>
        <award-id>A17197</award-id>
      </award-group>
      <funding-statement>ATLL was supported by core funding from Cancer Research UK (award no. A17197). MP and EI-S were supported by Medical Research Council PhD studentships.</funding-statement>
      <funding-statement>
        <italic>The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</italic>
      </funding-statement>
    </funding-group>
  </article-meta>
  <notes notes-type="version-changes">
    <sec sec-type="version-changes">
      <label>Revised</label>
      <title>Amendments from Version 1</title>
      <p>This new version fixes some small typographical errors and clarifies the R version requirements for the S4 class framework.</p>
    </sec>
  </notes>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Techniques such as chromatin conformation capture with high-throughput sequencing (Hi-C)
<sup><xref rid="ref-1" ref-type="bibr">1</xref></sup> and chromatin interaction analysis with paired-end tags (ChIA-PET)
<sup><xref rid="ref-2" ref-type="bibr">2</xref></sup> are increasingly being used to study the three-dimensional structure and organisation of the genome. Briefly, genomic DNA is fragmented and subjected to a ligation step during which DNA from interacting loci are ligated together. High-throughput paired-end sequencing of the ligation products will identify pairs of interacting genomic regions. The strength of each interaction can also be quantified from the number of read pairs connecting the two interacting regions. This information can be used to derive biological insights into the role of long-range interactions in transcriptional regulation as well as the general organization of the genome inside the nucleus.</p>
    <p> The analysis of Hi-C and ChIA-PET data is not a trivial task, and many software packages have been developed to facilitate this process. Several of these packages like
<italic>diffHic</italic>
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup> and
<italic>GenomicInteractions</italic>
<sup><xref rid="ref-4" ref-type="bibr">4</xref></sup> are part of the open-source Bioconductor project, which aims to provide accessible tools for analyzing high-throughput genomic data with the R programming language. One of the strengths of the Bioconductor project is the quality and quantity of shared infrastructure available to developers
<sup><xref rid="ref-5" ref-type="bibr">5</xref></sup>. Pre-defined S4 classes such as
<monospace>GenomicRanges</monospace> and
<monospace>SummarizedExperiment</monospace> can be used to represent various types of genomic data and information, easing the maintenance burden for developers while also improving interoperability between packages for users. However, this kind of common infrastructure does not yet exist for the genomic interaction field. Instead, each package contains its own custom classes, which increases code redundancy and development load while reducing interoperability.</p>
    <p>Here, we describe the
<italic>InteractionSet</italic> package that provides base S4 classes for representing and manipulating genomic interaction data. It contains the
<monospace>GInteractions</monospace> class, to represent pairwise interactions; the
<monospace>InteractionSet</monospace> class, to store the associated experimental data; and the
<monospace>ContactMatrix</monospace> class, to represent interactions in a matrix format. This facilitates code reuse across Bioconductor packages involved in analyzing data from Hi-C, ChIA-PET and similar experiments.</p>
  </sec>
  <sec>
    <title>Overview of available classes</title>
    <sec>
      <title>The
<monospace>GInteractions</monospace> class</title>
      <p>Each object of the
<monospace>GInteractions</monospace> class is designed to represent interactions between pairs of “anchor” regions in the genome (
<xref ref-type="fig" rid="f1">Figure 1A</xref>). It does so by storing pairs of anchor indices that point towards a reference set of genomic coordinates (specified as a
<monospace>GenomicRanges</monospace> object). Each anchor index refers to a specific reference region, such that a pair of such indices represents a pairwise interaction between the corresponding regions. This design reduces memory usage as the reference coordinates need only be stored once, even if each region is involved in multiple interactions. Computational work is also reduced as calculations can be quickly applied across the small set of reference regions, and the results can be retrieved for each interaction based on the anchor indices. In addition, the
<monospace>GInteractions</monospace> class inherits from the
<monospace>Vector</monospace> class in Bioconductor’s
<italic>S4Vectors</italic> package. This allows storage of metadata for each interaction (e.g., intensities,
<italic>p</italic>-values) and for the entire object (e.g., experiment description).</p>
    </sec>
    <sec>
      <title>The
<monospace>InteractionSet</monospace> class</title>
      <p>The
<monospace>InteractionSet</monospace> class is designed to store experimental data for each feature (
<xref ref-type="fig" rid="f1">Figure 1B</xref>). It inherits from the
<monospace>SummarizedExperiment</monospace> base class, where each object of the class stores any number of matrices of the same dimensions. Each row of each matrix corresponds to a pairwise genomic interaction (represented by a
<monospace>GInteractions</monospace> object that is also stored within each
<monospace>InteractionSet</monospace> object), while each column corresponds to an experimental sample. Each entry of the matrix then represents the observation for the corresponding interaction in the corresponding sample. Different matrices can be used to store different types of data, e.g., read counts, normalized intensities. The
<monospace>InteractionSet</monospace> class also inherits a number of fields to store metadata for each interaction, for each sample, and for the entire object.</p>
    </sec>
    <sec>
      <title>The
<monospace>ContactMatrix</monospace> class</title>
      <p>The
<monospace>ContactMatrix</monospace> class is designed to represent pairwise interactions in a matrix format (
<xref ref-type="fig" rid="f1">Figure 1C</xref>). Each row and column of the matrix represents a genomic region, such that each cell of the matrix represents an interaction between the corresponding row/column regions. Experimental data for that interaction can be stored in the associated cell. This provides a direct representation of the “interaction space”, i.e., the two-dimensional space in which (
<italic>x</italic>,
<italic>y</italic>) represents an interaction between
<italic>x</italic> and
<italic>y</italic>. Like the
<monospace>GInteractions</monospace> class, the genomic coordinates are not stored directly – rather, the rows/columns have indices that point towards a reference set of coordinates, which reduces memory usage and computational work. The matrix representation itself uses classes in the
<italic>Matrix</italic> package to provide support for both dense and sparse matrices. The latter may be more memory-efficient, particularly for sparse areas of the interaction space.
<monospace>ContactMatrix</monospace> instances can also be easily converted to instances of existing matrix-based classes such as those in the
<italic>HiTC</italic> package
<sup><xref rid="ref-6" ref-type="bibr">6</xref></sup>.</p>
      <fig fig-type="figure" id="f1" orientation="portrait" position="float">
        <label>Figure 1. </label>
        <caption>
          <title>Overview of the classes in the
<italic>InteractionSet</italic> package.</title>
          <p>Relevant slots of each class (i.e., data values stored in each object of the class) are labelled with a preceding “@”. (
<bold>A</bold>) The
<monospace>GInteractions</monospace> class represents pairwise interactions between genomic regions by storing pairs of anchor indices that refer to coordinates in a
<monospace>GenomicRanges</monospace> object. (
<bold>B</bold>) The
<monospace>InteractionSet</monospace> class stores experimental data in an “assays” matrix where each row is an interaction and each column is a sample. Here, counts represent the number of read pairs mapped between each pair of interacting regions in each sample. (
<bold>C</bold>) The
<monospace>ContactMatrix</monospace> class represents the interaction space as a matrix, where each cell represents an interaction between the corresponding row/column regions.</p>
        </caption>
        <graphic xlink:href="f1000research-5-9784-g0000"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Overview of available methods</title>
    <p>The
<italic>InteractionSet</italic> package provides a variety of methods for manipulating objects of each class. In addition to slot accessors and modifiers, methods are available to convert objects to different classes in the same package (e.g.,
<monospace>GInteractions</monospace> to
<monospace>ContactMatrix</monospace>) or to base Bioconductor classes (e.g.,
<monospace>GInteractions</monospace> to
<monospace>GRangesList</monospace>). The distance between anchor regions on the linear genome can be computed for each pairwise interaction, to use in fitting a distance-dependent trend
<sup><xref rid="ref-1" ref-type="bibr">1</xref></sup> for diagnostics or normalization. The minimum bounding box in the interaction space can also be defined for a group of interactions (
<xref ref-type="fig" rid="f1">Figure 2A</xref>) to summarize the location of that group.</p>
    <p>The
<italic>InteractionSet</italic> package supports one- or two-dimensional overlaps for its objects (
<xref ref-type="fig" rid="f2">Figure 2B</xref>). A one-dimensional overlap is considered to be present between an interaction and a genomic interval if either anchor region of the interaction overlaps the interval. This can be used to identify interactions overlapping pre-defined regions of interest. A two-dimensional overlap is considered to be present between an interaction and two genomic intervals if one anchor region overlaps one interval and the other anchor region overlaps the other interval. This can be used to identify interactions linking two specific regions of interest, e.g., a gene and its enhancer. The same framework can be used to define two-dimensional overlaps between two interactions, based on whether the corresponding anchor regions overlap – this can be used to relate similar interactions in different
<monospace>GInteractions</monospace> objects or across different experiments. More generally, interactions can be identified that link any two regions in a set of regions of interest. For example, given a set of genes, interactions between two genes can be identified; or given a set of genes and another set of enhancers, interactions linking any gene to any enhancer can be found.</p>
    <p>Hi-C data in an
<monospace>InteractionSet</monospace> object can also be converted into a 4C-like format (
<xref ref-type="fig" rid="f2">Figure 2C</xref>). Firstly, a bait region is defined as some region of interest, e.g., a target gene or enhancer. All interactions in the
<monospace>InteractionSet</monospace> object that have one-dimensional overlaps with the bait are identified. For each overlapping interaction, the anchor region that does
<italic>not</italic> overlap with the bait is extracted and – along with the data associated with that interaction – used to construct a
<monospace>RangedSummarizedExperiment</monospace> object. This process yields data for intervals on the linear genome, which is similar to the output of 4C experiments
<sup><xref rid="ref-7" ref-type="bibr">7</xref></sup> that measure the intensity of interactions between the bait and all other regions. The “linearized” format may be preferable when a specific region can be defined as the bait, as intervals on the linear genome are easier to interpret than interactions in two-dimensional space.</p>
    <fig fig-type="figure" id="f2" orientation="portrait" position="float">
      <label>Figure 2. </label>
      <caption>
        <title>Schematic of several methods in the
<italic>InteractionSet</italic> package.</title>
        <p>(
<bold>A</bold>) Minimum bounding boxes can be identified for groups of interactions using the
<monospace>boundingBox</monospace> method. Here,
<italic>u</italic>′,
<italic>v</italic>′ and
<italic>w</italic>′ belong in one group while
<italic>x</italic>′,
<italic>y</italic>′ and
<italic>z</italic>′ belong in another. (
<bold>B</bold>) One- or two-dimensional overlaps can be identified between interactions and one or two genomic intervals, respectively, using the
<monospace>findOverlaps</monospace> method. Here,
<italic>x</italic>′ and
<italic>y</italic>′ have one-dimensional overlaps with the gene and enhancer, respectively, while
<italic>z</italic>′ has a two-dimensional overlap with the gene
<italic>and</italic> the enhancer. (
<bold>C</bold>) An
<monospace>InteractionSet</monospace> object contains data – in this case, read pair count data – for interactions in the two-dimensional interaction space. Given a bait region, a “cross-section” of the space can be extracted and converted into a
<monospace>RangedSummarizedExperiment</monospace> object using the
<monospace>linearize</monospace> method. This object holds count data for intervals on the linear genome (blue lines) where the count for each interval describes the strength of the interaction between that interval and the bait. This format effectively mimics that of 4C data.</p>
      </caption>
      <graphic xlink:href="f1000research-5-9784-g0001"/>
    </fig>
  </sec>
  <sec>
    <title>Implementation and operation details</title>
    <p>All classes and methods in the
<italic>InteractionSet</italic> package are implemented using the S4 object-orientated framework in R (version 3.3.0 or higher). Classes are exported to allow package developers to derive custom classes for their specific needs. Pre-existing Bioconductor classes and generics are used to provide a consistent interface for users. After loading the
<italic>InteractionSet</italic> package into an R session, instances of each class can be constructed from existing data structures, either directly (e.g.,
<monospace>GInteractions</monospace> objects from
<monospace>GRanges</monospace> via the
<monospace>GInteractions</monospace> constructor, or from
<monospace>Pairs</monospace> via the
<monospace>makeGInteractionsfromGRanges</monospace> function;
<monospace>ContactMatrix</monospace> objects from
<monospace>GRanges</monospace> and
<monospace>Matrix</monospace> via the
<monospace>ContactMatrix</monospace> constructor) or in a hierarchical manner (e.g.,
<monospace>InteractionSet</monospace> objects from matrices and a
<monospace>GInteractions</monospace> object via the
<monospace>InteractionSet</monospace> constructor). The methods described above can then be applied to each instance of the class. While the
<italic>InteractionSet</italic> package does not have functions to load data from file, it can be combined with the
<monospace>import</monospace> function in the
<italic>rtracklayer</italic> package
<sup><xref rid="ref-8" ref-type="bibr">8</xref></sup> to construct class instances after importing data from a range of formats including BED and BEDPE. A similar strategy can be used to export data to file.</p>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>The availability of common infrastructure is highly beneficial to software development by reducing redundancy and improving reliability, as more developers can check the same code; improving interoperability, as different packages use the same classes; and increasing the accessibility of useful features, which exist in a single package rather than being sequestered away in a variety of different packages. Here, we present the
<italic>InteractionSet</italic> package that implements a number of classes and methods for representing, storing and manipulating genomic interaction data from Hi-C, ChIA-PET and related experiments. The package is fully integrated into the Bioconductor ecosystem, depending on a number of base packages to implement its classes (e.g.,
<italic>S4Vectors</italic>,
<italic>GenomicRanges</italic>,
<italic>SummarizedExperiment</italic>) while in turn being depended on by packages for higher-level analyses (e.g.,
<italic>diffHic</italic>,
<italic>GenomicInteractions</italic>). Indeed, for any new packages, use of the features in
<italic>InteractionSet</italic> will simplify development and improve interoperability with existing packages in the Bioconductor project. The
<italic>InteractionSet</italic> package itself can be obtained for R version 3.3.0 at
<ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/InteractionSet">http://bioconductor.org/packages/InteractionSet</ext-link>.</p>
  </sec>
  <sec>
    <title>Software availability</title>
    <p>Software and latest source code available from:
<ext-link ext-link-type="uri" xlink:href="http://bioconductor.org/packages/InteractionSet">http://bioconductor.org/packages/InteractionSet</ext-link>
</p>
    <p>Archived source code as at time of publication:
<ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5281/zenodo.51204">http://dx.doi.org/10.5281/zenodo.51204</ext-link>
<sup><xref rid="ref-9" ref-type="bibr">9</xref></sup>
</p>
    <p>License: GNU General Public License version 3.0</p>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Annika Gable, Aleksandra Pekowska, Bernd Klaus, Michael Lawrence and Hervé Pagès for coding and feature suggestions. We also thank John Marioni and Boris Lenhard for comments on the manuscript.</p>
  </ack>
  <ref-list>
    <ref id="ref-1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lieberman-Aiden</surname><given-names>E</given-names></name><name><surname>van Berkum</surname><given-names>NL</given-names></name><name><surname>Williams</surname><given-names>L</given-names></name><etal/></person-group>:
<article-title>Comprehensive mapping of long-range interactions reveals folding principles of the human genome.</article-title><source><italic>Science.</italic></source><year>2009</year>;<volume>326</volume>(<issue>5950</issue>):<fpage>289</fpage>–<lpage>293</lpage>.
<pub-id pub-id-type="doi">10.1126/science.1181369</pub-id><!--<pub-id pub-id-type="pmcid">2858594</pub-id>--><?supplied-pmid 19815776?><pub-id pub-id-type="pmid">19815776</pub-id></mixed-citation>
    </ref>
    <ref id="ref-2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fullwood</surname><given-names>MJ</given-names></name><name><surname>Liu</surname><given-names>MH</given-names></name><name><surname>Pan</surname><given-names>YF</given-names></name><etal/></person-group>:
<article-title>An oestrogen-receptor-alpha-bound human chromatin interactome.</article-title><source><italic>Nature.</italic></source><year>2009</year>;<volume>462</volume>(<issue>7269</issue>):<fpage>58</fpage>–<lpage>64</lpage>.
<pub-id pub-id-type="doi">10.1038/nature08497</pub-id><!--<pub-id pub-id-type="pmcid">2774924</pub-id>--><?supplied-pmid 19890323?><pub-id pub-id-type="pmid">19890323</pub-id></mixed-citation>
    </ref>
    <ref id="ref-3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lun</surname><given-names>AT</given-names></name><name><surname>Smyth</surname><given-names>GK</given-names></name></person-group>:
<article-title>diffHic: a Bioconductor package to detect differential genomic interactions in Hi-C data.</article-title><source><italic>BMC Bioinformatics.</italic></source><year>2015</year>;<volume>16</volume>(<issue>1</issue>):<fpage>258</fpage>.
<pub-id pub-id-type="doi">10.1186/s12859-015-0683-0</pub-id><!--<pub-id pub-id-type="pmcid">4539688</pub-id>--><?supplied-pmid 26283514?><pub-id pub-id-type="pmid">26283514</pub-id></mixed-citation>
    </ref>
    <ref id="ref-4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Harmston</surname><given-names>N</given-names></name><name><surname>Ing-Simmons</surname><given-names>E</given-names></name><name><surname>Perry</surname><given-names>M</given-names></name><etal/></person-group>:
<article-title>GenomicInteractions: An R/Bioconductor package for manipulating and investigating chromatin interaction data.</article-title><source><italic>BMC Genomics.</italic></source><year>2015</year>;<volume>16</volume>(<issue>1</issue>):<fpage>963</fpage>.
<pub-id pub-id-type="doi">10.1186/s12864-015-2140-x</pub-id><!--<pub-id pub-id-type="pmcid">4650858</pub-id>--><?supplied-pmid 26576536?><pub-id pub-id-type="pmid">26576536</pub-id></mixed-citation>
    </ref>
    <ref id="ref-5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Huber</surname><given-names>W</given-names></name><name><surname>Carey</surname><given-names>VJ</given-names></name><name><surname>Gentleman</surname><given-names>R</given-names></name><etal/></person-group>:
<article-title>Orchestrating high-throughput genomic analysis with Bioconductor.</article-title><source><italic>Nat Methods.</italic></source><year>2015</year>;<volume>12</volume>(<issue>2</issue>):<fpage>115</fpage>–<lpage>121</lpage>.
<pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id><!--<pub-id pub-id-type="pmcid">4509590</pub-id>--><?supplied-pmid 25633503?><pub-id pub-id-type="pmid">25633503</pub-id></mixed-citation>
    </ref>
    <ref id="ref-6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Servant</surname><given-names>N</given-names></name><name><surname>Lajoie</surname><given-names>BR</given-names></name><name><surname>Nora</surname><given-names>EP</given-names></name><etal/></person-group>:
<article-title>HiTC: exploration of high-throughput ‘C’ experiments.</article-title><source><italic>Bioinformatics.</italic></source><year>2012</year>;<volume>28</volume>(<issue>21</issue>):<fpage>2843</fpage>–<lpage>2844</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/bts521</pub-id><!--<pub-id pub-id-type="pmcid">3476334</pub-id>--><?supplied-pmid 22923296?><pub-id pub-id-type="pmid">22923296</pub-id></mixed-citation>
    </ref>
    <ref id="ref-7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Simonis</surname><given-names>M</given-names></name><name><surname>Klous</surname><given-names>P</given-names></name><name><surname>Splinter</surname><given-names>E</given-names></name><etal/></person-group>:
<article-title>Nuclear organization of active and inactive chromatin domains uncovered by chromosome conformation capture-on-chip (4C).</article-title><source><italic>Nat Genet.</italic></source><year>2006</year>;<volume>38</volume>(<issue>11</issue>):<fpage>1348</fpage>–<lpage>1354</lpage>.
<pub-id pub-id-type="doi">10.1038/ng1896</pub-id><?supplied-pmid 17033623?><pub-id pub-id-type="pmid">17033623</pub-id></mixed-citation>
    </ref>
    <ref id="ref-8">
      <label>8</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Lawrence</surname><given-names>M</given-names></name><name><surname>Gentleman</surname><given-names>R</given-names></name><name><surname>Carey</surname><given-names>V</given-names></name></person-group>:
<article-title>rtracklayer: an R package for interfacing with genome browsers.</article-title><source><italic>Bioinformatics.</italic></source><year>2009</year>;<volume>25</volume>(<issue>14</issue>):<fpage>1841</fpage>–<lpage>1842</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/btp328</pub-id><!--<pub-id pub-id-type="pmcid">2705236</pub-id>--><?supplied-pmid 19468054?><pub-id pub-id-type="pmid">19468054</pub-id></mixed-citation>
    </ref>
    <ref id="ref-9">
      <label>9</label>
      <mixed-citation publication-type="software"><person-group person-group-type="author"><name><surname>Lun</surname><given-names>A</given-names></name><name><surname>Perry</surname><given-names>M</given-names></name><name><surname>Ing-Simmons</surname><given-names>E</given-names></name><etal/></person-group>:
<article-title>Base Classes for Storing Genomic Interaction Data.</article-title><source><italic>Zenodo.</italic></source><year>2016</year><pub-id pub-id-type="doi">10.5281/zenodo.51204</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<sub-article id="report14093" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.9426.r14093</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Servant</surname>
          <given-names>Nicolas</given-names>
        </name>
        <xref ref-type="aff" rid="r14093a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r14093a1"><label>1</label>Institut Curie, Paris, France</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>1</day>
      <month>6</month>
      <year>2016</year>
    </pub-date>
    <related-article id="d35e1109" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.8759.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors present the InteractionSet package, that eases the manipulation of chromosome conformation data within the BioConductor/R framework. The InteractionSet package was designed to store direct interactions between two genomic loci. It also proposed a ContactMatrix class allowing to store the interaction counts as a Matrix format. One important point is its ability to be generic allowing the manipulation of any type of interaction data, such as ChIA-PET, Hi-C or 4C data. This work provides an interesting base for package development in this field and should therefore be of great use to the community.</p>
    <p> In practice, the manuscript highlights the quality of the implementation and the optimization of this package. Dealing with Hi-C data can be challenging as the amount of data can be very large. Through this manuscript (Figure 1), it is clear that the authors propose an efficient strategy to manipulate such data.</p>
    <p> In addition, the package is well documented with a quick start guide (vignette) and the description of each function. The new classes are based on existing S4 classes and methods and should therefore be easy to use for users familiar with the intervals manipulation in R. The package is already used as a dependency of other packages such as GenomicInteractions and diffHiC. Finally, it is compatible with other existing BioConductor packages such as the HiTC package.</p>
    <p> Regarding the manuscript itself, it clearly describes what the InteractionSet does. It is well written and easy to read.</p>
    <p> I only have a few minor comments that I hope will help the authors to improve the manuscript and/or the package.</p>
    <p>  
<list list-type="order"><list-item><p>Storing direct interaction counts looks very interesting in practice. I'm just wondering how efficient is the GInteractions class in term of scalability and memory usage ? As an example, Rao
<italic> et al </italic>recently generated Hi-C contact maps at a resolution of 5kb. This very high resolution dataset implies billion of Hi-C contacts. It would be interesting the know up to which resolution (or data throughput) the InteractionSet package is efficient, and/or which amount of RAM is require to deal with very large dataset.</p></list-item><list-item><p>The authors mentioned that the ContactMatrix class is compatible with matrix-based classes from the HiTC package. I therefore tried to convert a ContactMatrix object into a HTCexp object from HiTC (using the as() function) but It doesn't work. A note/example about that might be useful in the manual.</p></list-item><list-item><p>The package requires a recent version of R (&gt;=3.3.0). It might be good to mention it somewhere.</p></list-item></list>
</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
  <sub-article id="comment2006" article-type="response">
    <front-stub>
      <contrib-group>
        <contrib contrib-type="author">
          <name>
            <surname>Lun</surname>
            <given-names>Aaron</given-names>
          </name>
          <aff>Cancer Research UK Cambridge Research Institute, UK</aff>
        </contrib>
      </contrib-group>
      <author-notes>
        <fn fn-type="COI-statement">
          <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>2</day>
        <month>6</month>
        <year>2016</year>
      </pub-date>
    </front-stub>
    <body>
      <p>Thanks for your comments Nicolas. Our responses are below:</p>
      <p>
        <italic>
          <bold>Storing direct interaction counts looks very interesting in practice. I'm just wondering how efficient is the GInteractions class in term of scalability and memory usage ? As an example, Rao et al recently generated Hi-C contact maps at a resolution of 5kb. This very high resolution dataset implies billion of Hi-C contacts. It would be interesting the know up to which resolution (or data throughput) the InteractionSet package is efficient, and/or which amount of RAM is require to deal with very large dataset.</bold>
        </italic>
      </p>
      <p> In several Hi-C analyses that we have performed (50 kbp resolution, ~1 billion reads), the size of the InteractionSet object is around 100MB to 1GB. This is well within the capacity of modern desktop machines, let alone high performance computing (HPC) facilities. For smaller bin sizes, the quadratic increase in the potential number of bin pairs is mitigated by the fact that a greater number of those bin pairs will be empty. We only store non-empty interactions in GInteractions/InteractionSet objects, which avoids a quadratic increase in memory requirements. (In practice, further savings can be made by filtering to remove low-abundance interactions.)</p>
      <p> That said, for very large data sets with read coverage across the entire interaction space, the memory requirements will increase dramatically at higher resolutions. This can be mitigated to some extent by only operating on a single chromosome (or pair of chromosomes) at any given time. However, if this is not possible (e.g., the downstream analysis requires all interactions), then HPC resources and 64-bit R may be required to handle the resulting objects. We feel that such requirements are mostly unavoidable, as the generation of large data sets requires concomitant effort in the computational analysis.</p>
      <p>
        <italic>
          <bold>The authors mentioned that the ContactMatrix class is compatible with matrix-based classes from the HiTC package. I therefore tried to convert a ContactMatrix object into a HTCexp object from HiTC (using the as() function) but It doesn't work. A note/example about that might be useful in the manual.</bold>
        </italic>
      </p>
      <p> Our concept of compatibility was based more on the class implementations and concepts, rather than through any explicit conversion. Specifically, both ContactMatrix and HTCexp use GRanges to represent the genomic coordinates of the row/column regions, and a Matrix class to represent store the intensity values across the interaction space. Thus, information extracted from an instance of a ContactMatrix class can directly be supplied to the HTCexp constructor:</p>
      <p>
        <italic>coords &lt;- GRanges("chrA", IRanges(1:10, 1:10))</italic>
      </p>
      <p>
        <italic> x2 &lt;- ContactMatrix(Matrix(1:100, 10, 10), coords, coords) # dummy object</italic>
      </p>
      <p>
        <italic> colnames(x2) &lt;- rownames(x2) &lt;- LETTERS[1:10] # dummy names</italic>
      </p>
      <p>
        <italic> HTCexp(as.matrix(x2), anchors(x2, "column"), anchors(x2, "row"))</italic>
      </p>
      <p> We are reluctant to implement this directly as an "as" method in the
<italic>InteractionSet</italic> package, because we have tried to maintain a distinction between the low-level base classes in our package and the high-level analysis and visualization methods in other packages like
<italic>HiTC</italic>,
<italic>diffHic</italic>,
<italic>GenomicInteractions</italic>, etc. Our hope is that developers who would like to use or be compatible with
<italic>InteractionSet</italic> would write appropriate methods in their own packages to convert to/from classes as necessary.</p>
      <p>
        <bold>The package requires a recent version of R (&gt;=3.3.0). It might be good to mention it somewhere.</bold>
      </p>
      <p> Done.</p>
    </body>
  </sub-article>
</sub-article>
<sub-article id="report13924" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.9426.r13924</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Phanstiel</surname>
          <given-names>Douglas</given-names>
        </name>
        <xref ref-type="aff" rid="r13924a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r13924a1"><label>1</label>Department of Genetics, Stanford University School of Medicine, Stanford, CA, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>5</month>
      <year>2016</year>
    </pub-date>
    <related-article id="d35e1291" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.8759.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors describe an R package that allows users to store, organize, manipulate, and intersect pairwise chromosomal interactions. The package is written for use with HiC and ChIA-PET style data sets but could be used for a variety of pairwise interactions. While there exist a plethora of tools for the storage, manipulation, and analysis of single genomic elements, equivalent tools adapted for pairwise genomic interactions are limited and still greatly needed.</p>
    <p> The paper is well written, simple, and accurately describes the package itself. I have downloaded and tested the package and both download and usage went smoothly. It behaves similarly to some of the packages that it builds off of such as GenomicRanges. And those familiar with GenomicRanges will be at home when using InteractionSet. In addition to simply storing and organizing pairwise data, InteractionSet includes a lot of handy features that will be of great use to the community. These include simple functions that organize pairwise genomic interactions such as swapAnchors that assures that the first of the two paired regions is always on the lower numbered chromosome or upstream (with regard to Watson strand) and more complex functions such as findOverlaps that allows users to overlap sets of pairwise interactions in a variety of ways. </p>
    <p> This package is very useful and powerful and provides a valuable resource to software developers and advanced users. The GenomicRanges-style organization of the data, that InteractionSet adopts, is often too complicated for casual R users to learn. In many cases simply reading files from BED, BEDPE, or sam format into data frames is easier and faster for simple tasks. However, developers will prefer this more standardized format for improved stability of their packages. And advanced users may prefer the standardized yet flexible approach to data organization and the powerful built in tools.</p>
    <p> Importantly, the package is accompanied by a detailed and clear online tutorial which clearly demonstrates how to use the classes and functions. In summary, this paper is succinct and clearly written and accurately describes an R package that will be of great use to the scientific community.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
  <sub-article id="comment2007" article-type="response">
    <front-stub>
      <contrib-group>
        <contrib contrib-type="author">
          <name>
            <surname>Lun</surname>
            <given-names>Aaron</given-names>
          </name>
          <aff>Cancer Research UK Cambridge Research Institute, UK</aff>
        </contrib>
      </contrib-group>
      <author-notes>
        <fn fn-type="COI-statement">
          <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>2</day>
        <month>6</month>
        <year>2016</year>
      </pub-date>
    </front-stub>
    <body>
      <p>Thanks for your comments Douglas. We agree that the Bioconductor ecosystem of data classes can be somewhat daunting for new users. Nonetheless, we believe that the use of standard Bioconductor tools is the safest strategy for the majority of users (and obviously developers), given the number of "gotchas" in data processing, e.g., off-by-one issues in BED file loading.</p>
    </body>
  </sub-article>
</sub-article>

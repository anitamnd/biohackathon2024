<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1d1 20130915//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 39.96?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-id journal-id-type="hwp">bioinfo</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4937195</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btw155</article-id>
    <article-id pub-id-type="publisher-id">btw155</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="heading">
          <subject>Databases and Ontologies</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MOLGENIS/connect: a system for semi-automatic integration of heterogeneous phenotype data with applications in biobanks</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Pang</surname>
          <given-names>Chao</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="btw155-aff2">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>van Enckevort</surname>
          <given-names>David</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>de Haan</surname>
          <given-names>Mark</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kelpin</surname>
          <given-names>Fleur</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jetten</surname>
          <given-names>Jonathan</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hendriksen</surname>
          <given-names>Dennis</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>de Boer</surname>
          <given-names>Tommy</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Charbon</surname>
          <given-names>Bart</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Winder</surname>
          <given-names>Erwin</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>van der Velde</surname>
          <given-names>K. Joeri</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Doiron</surname>
          <given-names>Dany</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff3">
          <sup>3</sup>
        </xref>
        <xref ref-type="aff" rid="btw155-aff4">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Fortier</surname>
          <given-names>Isabel</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff3">
          <sup>3</sup>
        </xref>
        <xref ref-type="aff" rid="btw155-aff4">
          <sup>4</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hillege</surname>
          <given-names>Hans</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff2">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Swertz</surname>
          <given-names>Morris A.</given-names>
        </name>
        <xref ref-type="aff" rid="btw155-aff1">
          <sup>1</sup>
        </xref>
        <xref ref-type="aff" rid="btw155-aff2">
          <sup>2</sup>
        </xref>
      </contrib>
      <aff id="btw155-aff1"><sup>1</sup>Department of Genetics, University Medical Center Groningen, Genomics Coordination Center, University of Groningen, Groningen, The Netherlands</aff>
      <aff id="btw155-aff2"><sup>2</sup>Department of Epidemiology, University Medical Center Groningen, University of Groningen, Groningen, The Netherlands</aff>
      <aff id="btw155-aff3"><sup>3</sup>Research Institute of the McGill University Health Centre and</aff>
      <aff id="btw155-aff4"><sup>4</sup>Department of Medicine, McGill University, Montreal, Canada</aff>
    </contrib-group>
    <author-notes>
      <corresp id="btw155-cor1">*To whom correspondence should be addressed.</corresp>
      <fn id="btw155-FM1">
        <p>Associate Editor: Janet Kelso</p>
      </fn>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>7</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>21</day>
      <month>3</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>21</day>
      <month>3</month>
      <year>2016</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>32</volume>
    <issue>14</issue>
    <fpage>2176</fpage>
    <lpage>2183</lpage>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>1</month>
        <year>2016</year>
      </date>
      <date date-type="rev-recd">
        <day>14</day>
        <month>3</month>
        <year>2016</year>
      </date>
      <date date-type="accepted">
        <day>15</day>
        <month>3</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Â© The Author 2016. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2016</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/" license-type="creative-commons">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p><bold>Motivation:</bold> While the size and number of biobanks, patient registries and other data collections are increasing, biomedical researchers still often need to pool data for statistical power, a task that requires time-intensive retrospective integration.</p>
      <p><bold>Results:</bold> To address this challenge, we developed MOLGENIS/connect, a semi-automatic system to find, match and pool data from different sources. The system shortlists relevant source attributes from thousands of candidates using ontology-based query expansion to overcome variations in terminology. Then it generates algorithms that transform source attributes to a common target DataSchema. These include unit conversion, categorical value matching and complex conversion patterns (e.g. calculation of BMI). In comparison to human-experts, MOLGENIS/connect was able to auto-generate 27% of the algorithms perfectly, with an additional 46% needing only minor editing, representing a reduction in the human effort and expertise needed to pool data.</p>
      <p><bold>Availability and Implementation:</bold> Source code, binaries and documentation are available as open-source under LGPLv3 from <ext-link ext-link-type="uri" xlink:href="http://github.com/molgenis/molgenis">http://github.com/molgenis/molgenis</ext-link> and <ext-link ext-link-type="uri" xlink:href="http://www.molgenis.org/connect">www.molgenis.org/connect</ext-link>.</p>
      <p><bold>Contact</bold>: <email>m.a.swertz@rug.nl</email></p>
      <p><bold>Supplementary information:</bold><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary data</ext-link> are available at <italic>Bioinformatics</italic> online.</p>
    </abstract>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Biobanks, patient registries and other human data collections have become an indispensable resource to better understand the epidemiology and biological mechanisms of disease. While these collections have grown to include data from over 100 000s of individuals (<xref rid="btw155-B10" ref-type="bibr">Scholtens <italic>et al.</italic>, 2015</xref>), many research questions still require data from multiple collections to reach sufficient statistical power or to achieve sufficient numbers of subjects having rare (disease) characteristics. To make data integration easy, all collections would ideally use the same data collection protocols and questionnaires. In practice however, biobanks collect different data because of differences in their scientific goals. For integration to be valid, data must be compared and harmonized before combined analyses are carried out (<xref rid="btw155-B204" ref-type="bibr">Fortier <italic>et al.</italic>, 2011</xref>).</p>
    <p>Substantial efforts are now underway to make data âinferentially equivalentâ or âharmonizedâ as a basis for pooled analysis. The Maelstrom Research group has taken the lead in defining protocols for retrospective data integration (<ext-link ext-link-type="uri" xlink:href="https://www.maelstrom-research.org/">https://www.maelstrom-research.org/</ext-link>) (<xref rid="btw155-B100" ref-type="bibr">Maelstrom Research, 2015</xref>). Within the BioSHaRE project, we have re-used and refined this protocol to harmonize and integrate 90 variables from 9 biobanks as a basis for pooled analysis (<xref rid="btw155-B203" ref-type="bibr">Doiron <italic>et al.</italic>, 2013</xref>). This research-question-driven approach consists of three steps:
<list list-type="order"><list-item><p><italic>Defining the target DataSchema</italic>: the list of targeted variables necessary to address the research questions in a specific study;</p></list-item><list-item><p><italic>Matching biobank schemas to the target DataSchema</italic>: match data elements from participating data sources/biobanks to the variables in the target DataSchema;</p></list-item><list-item><p><italic>Generating of Extract-Transform-Load algorithms</italic>: define the algorithms that take the matched source data elements as the input and convert these data values to the target DataSchema for data integration.</p></list-item></list></p>
    <p>Existing biomedical data integration tools still require significant manual effort and technical skill. For example, Maelstrom uses Opal software for biobank pooling with a professional team to find mappings and create algorithms, available at <ext-link ext-link-type="uri" xlink:href="http://www.obiba.org/pages/products/opal/">http://www.obiba.org/pages/products/opal/</ext-link> (<xref rid="btw155-B6" ref-type="bibr">Opal, 2011</xref>). Similarly, clinical/translational data warehouses tranSMART and i2b2 require knowledgeable analysts to manually identify mappings, based on which ETL developers implement the programmatic transformations (<xref rid="btw155-B5" ref-type="bibr">Murphy <italic>et al.</italic>, 2010</xref>; <xref rid="btw155-B13" ref-type="bibr">Szalma <italic>et al.</italic>, 2010</xref>).</p>
    <p>To alleviate this burden, we previously presented BiobankConnect, a system to semi-automatically match data elements from biobanks to target variables (<xref rid="btw155-B7" ref-type="bibr">Pang <italic>et al.</italic>, 2015a</xref>). In this paper, we introduce an additional system to semi-automatically define the transformation algorithms to produce an integrated dataset. We have wrapped all functions described above into an integrated user interface, MOLGENIS/connect, to support research teams through the entire integration procedure.</p>
  </sec>
  <sec>
    <title>2 Methods</title>
    <p>We have used the Maelstrom Research harmonization protocol as the basis for our system. <xref ref-type="fig" rid="btw155-F1">Figure 1</xref> provides an overview of its main components. First, we implemented a metadata model component that allows users to upload, view and visualize the target DataSchemas as well as the data of the source biobanks. Second, we incorporated a semantic search facility to shortlist candidate source data element matches to each variable in the target DataSchema. Third, an integration algorithm generator incorporates algorithm templates, semantic searches, category convertors and a unit convertor.
<fig id="btw155-F1" orientation="portrait" position="float"><label>Fig. 1.</label><caption><p>The overview of the framework of MOLGENIS/connect</p></caption><graphic xlink:href="btw155f1p"/></fig>
</p>
    <sec>
      <title>2.1 Metadata model</title>
      <p>To load both the target DataSchema as well as the various biobank data models (i.e. data dictionaries), we have designed a flexible meta-model called Entity Model Extensible (EMX), the documentation is available at <ext-link ext-link-type="uri" xlink:href="http://molgenis.github.io/documentation/">http://molgenis.github.io/documentation/</ext-link> (<xref rid="btw155-B4" ref-type="bibr">Molgenis, 2014)</xref>. [TQ1]This model evolved from Observ-OM, which has been proven to model all kinds of biomedical data (<xref rid="btw155-B201" ref-type="bibr">Adamusiak <italic>et al.</italic>, 2012)</xref>. EMX is a lightweight version of Observ-OM in which only two types of information (Entity and Attribute) are needed to sufficiently describe a dataset. Attributes are features that can be observed such as âdiseaseâ, âgenderâ and âheightâ, and which are often referred to as âmetadataâ by researchers. In EMX, an attribute ideally contains the following information: a unique name, a pre-defined data type (e.g. string, integer, decimal), a human readable label, a detailed description of the attribute and how it can be used, and categories or cross-references (xrefs) if the data type is categorical or a relationship (e.g. âGender attributeâ has two categories, âMaleâ and âFemaleâ). Entities are definitions of tables that define groups of attributes as columns and data (entity instances) as rows. The relations of entities and attributes are described in <xref ref-type="fig" rid="btw155-F2">Figure 2</xref>. In the rest of this paper, we will refer to both of the variables of the target DataSchema and the data elements of the source (biobank) as âattributesâ.
<fig id="btw155-F2" orientation="portrait" position="float"><label>Fig. 2.</label><caption><p>Example of the EMX data upload format. Data can be uploaded using Excel Metadata describing the columns of each data sheet (i.e. âentityâ) that must be provided in a special âattributesâ sheet. Data values are stored in ordinary sheets (e.g. âpatientsâ). The âcategoricalâ gender attribute and the âxrefâ disease attribute refer to another two sheets, âgendersâ and âdiseasesâ (omitted for readability)</p></caption><graphic xlink:href="btw155f2p"/></fig>
</p>
    </sec>
    <sec>
      <title>2.2 Semi-automatic source-to-target attribute matching</title>
      <p>Standard practice for identifying candidate biobank attributes for pooled analyses has been to manually go through all data attributes of all biobanks, an extremely time-consuming process. To automate this step, we used our previously published BiobankConnect method (<xref rid="btw155-B7" ref-type="bibr">Pang <italic>et al.</italic>, 2015a</xref>). It combines the Information Retrieval System of Lucene, available at <ext-link ext-link-type="uri" xlink:href="https://lucene.apache.org/core/">https://lucene.apache.org/core/</ext-link> (<xref rid="btw155-B205" ref-type="bibr">The Apache Software Foundation, 2006</xref>), with query expansion to automatically shortlist good candidate attributes. It consists of (i) query expansion (<xref rid="btw155-B202" ref-type="bibr">Bhogal <italic>et al.</italic>, 2007</xref>) in which attributes of the target DataSchema are (semi-) automatically annotated (âexpandedâ) with ontology terms, whose synonyms and subclasses are collected to create a list of semantically identical or similar terms that get added to the original query to find other relevant source attributes and (ii) retrieving relevant attributes in which the âexpandedâ target attributes are matched against the biobank attributes using Lucene, and matched candidates are sorted based on Lucene scores for human experts to choose from, as described in (<xref rid="btw155-B7" ref-type="bibr">Pang <italic>et al.</italic>, 2015a</xref>).</p>
    </sec>
    <sec>
      <title>2.3 Transformation syntax</title>
      <p>To create an executable data integration procedure, the rules for transforming data from source to target attributes need to be encoded in a computer algorithm. These algorithms transform attribute values from the source datasets to the statistically equivalent attribute value required in the target DataSchema. The simplest algorithm simply renames the source attribute, e.g. transforming âlengthâ (in LifeLines) to âheightâ in the target DataSchema. More advanced algorithms can implement unit conversions, recode categories or execute more advanced formulas like a body mass index (BMI) calculation.</p>
      <p>For the implementation of the transformation algorithms, we have used the âMagmaâ (<xref rid="btw155-B3" ref-type="bibr">Magma, 2014)</xref> syntax, available at <ext-link ext-link-type="uri" xlink:href="http://wiki.obiba.org/display/OPALDOC/Magma+Javascript+API">http://wiki.obiba.org/display/OPALDOC/Magma+Javascript+API</ext-link>, which is a domain-specific programming language for data harmonization that was used in BioSHaRE. Magma is a JavaScript library that works similar to jQuery, a popular JavaScript framework. To access values, the name of attributes can be wrapped in brackets and a dollar sign, e.g. $(âvarâ). There are many methods available in Magma which can be called by chaining calls to the attribute accessor, e.g. $(âvarâ).div(2). We have implemented the most commonly used methods including div(), times(), plus(), map(), pow(), unit() and toUnit(). In addition, we have created an algorithm generator, which consists of a unit conversion algorithm generator, a categorical values algorithm generator and a complete algorithm generator, described below.</p>
    </sec>
    <sec>
      <title>2.4 Unit conversion algorithm generator</title>
      <p>One of the recurring challenges in data harmonization is harmonizing units. Detecting units in attribute metadata can be difficult because different forms of units are used to describe the same parameter in different databases, e.g. âmeterâ is used to describe the attribute âHeight in meterâ in one database while âcmâ is used in describing the attribute âBody length in cmâ in another. Because no suitable algorithm generator could be found, we have developed a new two-step method for unit convertor generation. First, unit terms that occur in the label of target attributes and/or source attributes are annotated with the Units of Measurement Ontology (UO). Labels of attributes and target attributes are tokenized by whitespace and matched against terms in the UO using Lucene (analogous to how BiobankConnect does attribute matching). To prevent false positives, we accept only exact matches for unit detection. Second, we have used the unit converter software library developed by JScience (<xref rid="btw155-B1" ref-type="bibr">JScience, 2012)</xref>, which is implemented based on The Unified Code for Units of Measure <ext-link ext-link-type="uri" xlink:href="http://www.unitsofmeasure.org/trac">http://www.unitsofmeasure.org/trac</ext-link> (<xref rid="btw155-B9" ref-type="bibr">Schadow and McDonald, 2005</xref>), for international standard units and commonly used non-standard units, available at <ext-link ext-link-type="uri" xlink:href="http://jscience.org/">http://jscience.org/</ext-link>. This has a list of conversion rules for units that are compatible, e.g. cmâ=âmâÃâ100 or gâ=âkgâÃâ1000. For example, to convert units from âcentimeterâ to âmeterâ for the attribute âHeightâ, the terms âcentimeterâ and âmeterâ are automatically annotated with ontology terms UO:centimeter and UO:meter, respectively, based on the formal name and synonyms of the units. The formal symbols of these two units (cm and m) collected from the UO are then parsed to JScience, in which the suitable rule is found for converting âcmâ to âmâ and incorporated into the algorithm template. We implemented two different syntaxes for unit conversions: using a chain of explicit methods, e.g. <bold>$(âHeightâ).unit(âcmâ).toUnit(âmâ).value()</bold>, or more by generating the necessary calculation formula, e.g. <bold>$(âHeightâ).div(100).value()</bold>. In the case of composite units or derived units such as kg/m<sup>2</sup>, we first break them into the smallest units (atomic units), then compare the atomic units with units of matched attributes individually, and finally convert the units accordingly. For example, the target attribute BMI (kg/m<sup>2</sup>) is matched to source attributes <bold>height in cm</bold> and <bold>weight in gram</bold>. The term kg/m<sup>2</sup> is broken apart into a set of atomic units, kg and m, which become the standard units because they are detected/derived from the target attribute, the cm and gram units detected from source attributes are then converted accordingly.</p>
    </sec>
    <sec>
      <title>2.5 Categorical values matching generator</title>
      <p>Another recurring challenge is to generate algorithms that convert between categorical values. For this, we explored matching categories automatically and identified three different types of categories that need to be matched:
<list list-type="bullet"><list-item><p><italic>Matching categories using lexical similarity</italic>: To find lexically similar categories, we calculate the pairwise n-gram similarity scores between all target and source categories. For each source category, the target category that yielded the best n-gram similarity score is automatically selected as the best match. For example, the target attribute (Gender: â0â=âMale, 1â=âFemaleâ) and the source attribute (SEX:â1â=âMale, 2â=âFemaleâ) have the same category labels but different category codes, the system matches two sets of category labels onto each other based on the n-gram-based string matching algorithm and with the final result $(âGenderâ) = $(âSEXâ).map({â1â: â0â, â2â: â1â}). Thus source category 1 and 2 are matched to target category 0 and 1, respectively.</p></list-item><list-item><p><italic>Matching categories that represent frequencies:</italic> After scrutinizing many biobank attributes and the target attributes, we realized that there are a class of attributes that describes the frequencies of certain activities or food consumption. <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Table S1</ext-link> shows an example of matching attributes for consumption of potatoes. The categories contain two types of information, time units and frequencies, which can be extracted using regular expressions, e.g. 2â4 times a week has an average frequency 3 (2â4) and the time unit week. The first step is to convert both the target and source categories to quantifiable amounts; the second step is to find the closest target amount category for each source amount category. Because categories are often not matched one-to-one, the algorithm is allowed to have multiple source amounts matched to one target amount. The matching category function is implemented in Java using JScience library (<xref rid="btw155-B1" ref-type="bibr">JScience, 2012)</xref>.</p></list-item><list-item><p><italic>Matching categories based on pre-defined rules:</italic> In <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Table S2</ext-link>, we show a list of custom rules for matching categories that we have hard-coded into the system.</p></list-item></list></p>
    </sec>
    <sec>
      <title>2.6 Overall algorithm generator</title>
      <p>The creation of algorithms is a tricky task and nearly impossible for those inexperienced in programming. Therefore, as a last step, we created a generator that assembles the complete algorithms. Moreover, we have provided a catalogue of templates for more complex algorithms such as âBMI calculationâ, which can be found in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary material</ext-link>
<bold>javascript_magma.xls</bold>. Each template defines its source and target attributes. These matching templates will be proposed to the user if one or more of the matched attributes relates to this template, e.g. âheightâ or âweightâ in the case of BMI.</p>
      <p><xref ref-type="fig" rid="btw155-F3">Figure 3</xref> summarizes the process of generating the complete algorithm using the example of the target attribute âBody Mass Indexâ from source biobank Prevend is summarized. It consists of the following steps: I) the system looks in its database to find the available algorithm template for BMI, II) it uses the BiobankConnect algorithm to generate a list of relevant attributes, III) it applies the unit conversion algorithms towards kg/m<sup>2</sup> (e.g. LENGT_1 was measured using centimeter (cm) rather than the standard unit meter (m) and therefore needs to be converted), and IV) the building blocks within the BMI template are replaced with the matched attributes using the string-matching algorithm (n-gram)(e.g. âweightâ was matched with âWEIGHT_1:Weight (kg)â and âheightâ was matched with LENGT_1: Length (cm) based on the best lexical similarity scores).</p>
    </sec>
  </sec>
  <sec>
    <title>3 Implementation</title>
    <p>We have implemented above methods into a seamless user workflow: (i) users upload a target DataSchema and the source biobank data, (ii) users then create a mapping project and select target DataSchema and data sources, (iii) MOLGENIS/Connect automatically generates all matches and conversion algorithms for all data sources and all target attributes, (iv) the user curates each of the matches and algorithms using the algorithm editor and preview tool and (v) MOLGENIS/Connect generates the integrated dataset. We describe each step in detail below. The integration tool has been built on top of the MOLGENIS software suite and reuses its basic functions (upload, metadata viewer, data explorer, permission system) (<xref rid="btw155-B12" ref-type="bibr">Swertz <italic>et al.</italic>, 2010</xref>). MOLGENIS is a Java/Maven web application implemented using MySql and ElasticSearch as back-end and HTML5, Bootstrap, jQuery, ReactJS as front-end. The source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/molgenis">https://github.com/molgenis</ext-link>.</p>
    <sec>
      <title>3.1 Upload and view target DataSchema and data sources</title>
      <p>In this step, users upload target DataSchema and source data via the standard MOLGENIS upload. For this purpose, we use the âEMXâ format (<xref rid="btw155-B2" ref-type="bibr">Molgenis, 2014)</xref>, a spreadsheet-based format to describe and upload tabular datasets and definition of their schemas that can be edited directly using Microsoft Excel or text editor (CSV files). For the target DataSchema, one spreadsheet is required that defines âattributesâ of the target DataSchema such as name, description and data type (see âattributesâ sheet in <xref ref-type="fig" rid="btw155-F2">Fig. 2</xref>). For each biobank, two spreadsheets are required: a âattributesâ metadata sheet just like the target DataSchema that defines the attributes of each dataset and one or more dataset sheets where each column matches the attributes and each row is, e.g. data on each biobank participant (see âyour dataâ table in <xref ref-type="fig" rid="btw155-F2">Fig. 2</xref>). The data that has been uploaded can be viewed and filtered using MOLGENIS data explorer.</p>
    </sec>
    <sec>
      <title>3.2 Create a mapping project</title>
      <p>In this step users start a new mapping project with the desired DataSchema as the target and the biobank datasets as the sources. Once these are selected, the system will generate an overview of attribute matches (described below) (<xref ref-type="fig" rid="btw155-F4">Fig. 4</xref>).
<fig id="btw155-F3" orientation="portrait" position="float"><label>Fig. 3.</label><caption><p>Example of algorithm generation for target attribute BMI from the Prevend data source (1) a transformation template is generated from the candidate matches (using Magma syntax), (2) the template is automatically edited based on unit conversion rules if applicable and (3) the software evaluates if more complex algorithm templates can be used. Based on two good candidate matches and the desired âBMIâ target, a previously used BMI conversion algorithm is proposed that incorporates the unit conversion rules (e.g. from âcmâ to âmâ because BMI is recorded as composite unit kg/m<sup>2</sup>)</p></caption><graphic xlink:href="btw155f3p"/></fig>
</p>
    </sec>
    <sec>
      <title>3.3 Generate overview of attribute mappings from source to target DataSchema</title>
      <p>In this step the system generates a complete overview of all target attributes (shown in the first column) and all the matches from the source attributes (shown in the following columns), see <xref ref-type="fig" rid="btw155-F4">Figure 4</xref>.
<fig id="btw155-F4" orientation="portrait" position="float"><label>Fig. 4.</label><caption><p>Mapping project overview. The attributes of the target DataSchema are shown on the left of the table. The columns contain matching attributes from each of the sources. New source data can be added by clicking the â+Add sourceâ button. Attribute matches and conversion algorithms are automatically generated and colour coded to indicate if the algorithms are generated with high confidence (perfect match in semantic search) or low quality (partial match in semantic search) or to indicate if an algorithm has been curated by the user</p></caption><graphic xlink:href="btw155f4p"/></fig>
</p>
      <p>When a user selects a new data source, the system automatically generates candidate matches. Each match can be edited and tested using the algorithm editor described below. To open this view, users click on the pencil icon located in any of the cells. For this purpose, we have refactored the BiobankConnect system, which uses ontology terms to generate the candidate matches (<xref rid="btw155-B7" ref-type="bibr">Pang <italic>et al.</italic>, 2015a</xref>). Based on user feedback, we learned that manual annotation of target attributes with ontologies previously required was too labour-intensive. We have, therefore, now included automatic annotation in which the label and description of the target attributes are used to find ontology terms in all available ontologies (e.g. NCI, SNOMED CT and MeSH) in the database.</p>
    </sec>
    <sec>
      <title>3.4 Edit and test data transformations</title>
      <p>In this step the user can edit the integration algorithm, see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Figure S3</ext-link>. This is the heart of the system and consists of three components: (i) the source attribute selector, (ii) the algorithm editor and (iii) the result preview.</p>
      <p>In the <italic>source attribute selector</italic> (shown on the left of the screen) shortlists candidate attributes sorted by lexical matching scores between the ontology terms associated to the target attribute and label or description of the source attributes. The words from the ontology terms are highlighted in each attribute label or description. Based on the importance of the highlighted words, users can immediately determine whether the candidates generated are good matches for the target attribute or not. In the example in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Figure S4</ext-link>a, the words <italic>blood</italic> and <italic>pressure</italic> are highlighted in the attribute âMean blood pressureâ and it is clear that this attribute is related but not the same as âHypertensionâ. If no good candidates are shown, the user can enter terms in the semantic search box to quickly find additional attributes using the syntax <bold>term1 or term2</bold> (e.g. weight or gender), see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Figure S4</ext-link>b. These query terms are matched with ontology terms to enable expanded query.</p>
      <p>In the <italic>algorithm editor</italic> (shown in the middle), the user sees the auto-generated algorithm for the selected attribute (or multiple attributes) using the Magma/JavaScript syntax (see methods section). We mostly dealt with two types of target attributes: numeric attributes whose value can either be integer or decimal, e.g. the value for âheightâ is a decimal number, and categorical attributes which only have a limited number of allowed values, e.g. values for âgenderâ written in the JSON-like (<ext-link ext-link-type="uri" xlink:href="http://www.json.org/">http://www.json.org/</ext-link>) (<xref rid="btw155-B2" ref-type="bibr">JSON.org, 2014)</xref> format {codeâ=â0, labelâ=âmale}, {codeâ=â1, labelâ=âfemale}. To generate algorithms for these target attributes, we usually need one source attribute, although sometimes the values of multiple attributes need to be combined, e.g. values for âBMIâ must be generated via âheightâ and âweightâ. Other data types supported include Date, Boolean, String and Text (see EMX documentation).</p>
      <p>In the <italic>result preview</italic> (shown on the right of the screen), the user sees a subset of the results of the converted data and how many of the data conversions failed, e.g. because of syntax errors. This allows users to rapidly test and correct their conversion algorithms.</p>
    </sec>
    <sec>
      <title>3.5 Create the derived dataset and explore the results</title>
      <p>Having defined the algorithms in Magma/JavaScript as described above, users can execute the transformation process from within the mapping project overview. The data conversion engine is implemented using Rhino and the R interface with Rcurl and rjson, where Rcurl is used to retrieve data in JSON (<xref rid="btw155-B2" ref-type="bibr">JSON.org, 2014)</xref> format and convert it to a DataFrame object in R. A new dataset is then created that stores values in the target DataSchema. Users can access the data through MOLGENIS data explorer where advanced filtering function and visualization capability are offered. The integrated data can be downloaded in comma-separated values (CSV) and Microsoft Excel. We also provide the R Application Programming Interface (R-API), which allows users to access data in the R statistical environment (see MOLGENIS documentation), and HTTP REST/JSON interfaces to integrate with other software.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Results</title>
    <p>We performed a qualitative evaluation by applying the software in active BioSHaRE, BBMRI and RD-Connect harmonization projects and a quantitative evaluation by comparing the auto-generated algorithms with the manually curated algorithms within the BioSHaRE Healthy Obese Project (<xref rid="btw155-B14" ref-type="bibr">Van Vliet-Ostaptchouk <italic>et al.</italic>, 2014</xref>).</p>
    <sec>
      <title>4.1 Matching numeric attributes</title>
      <p>In the example shown in <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Figure S5a</ext-link>, the target attribute âMeasured Standing Heightâ was matched to source attributes in the LifeLines biobank (<xref rid="btw155-B10" ref-type="bibr">Scholtens <italic>et al.</italic>, 2015</xref>). The first source attribute suggested, âHeight in cmâ, is used by default in generating the algorithm. The unit âcmâ was detected by the system in the source attribute whereas there was no mention of unit in the target attribute, therefore the target unit was assumed to be the same as the source attribute and unit conversion was not needed. Algorithms are executed automatically whenever users change the algorithm syntax in the editor; an updated preview of algorithm results is provided to evaluate.</p>
    </sec>
    <sec>
      <title>4.2 Matching categorical attributes</title>
      <p><ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Figure S5b</ext-link> shows another example, in which the target attribute and the source attribute were both categorical. We implemented the Magma map({c1:c1â, c2:c2ââ¦.}) function to match categories of the target attribute and source attribute onto each other. A category-matching editor is demonstrated, where two sets of categories could be easily matched by selecting target categories from the dropdown menus. The results from the matching editor were converted to the Magma syntax so users could easily create matching functions without writing complex algorithms.</p>
    </sec>
    <sec>
      <title>4.3 Evaluation of algorithm generator</title>
      <p>We compared the output of the auto-generated transformation algorithms with manually curated algorithms for all 90 target attributes from the BioSHaRE Healthy Obese Project (<xref rid="btw155-B14" ref-type="bibr">Van Vliet-Ostaptchouk <italic>et al.</italic>, 2014</xref>) and three of the biobanks (LifeLines, Prevend and Mitchelstown) for which we had the participant-level data values (184 algorithms in total). We evaluated the performance of semantic search and algorithm generation separately.</p>
      <p>To evaluate the semantic search, we defined three result categories: perfect search, good search and bad search. A search result is âperfectâ when the human-matched source attribute was ranked 1<sup>st</sup> in the system-suggested list. A search result is âgoodâ when all human-matched source attributes can be found within top 20 of the suggested list. We chose this threshold because there were a few target attributes for which HOP research assistants used more than 10 source attributes. For example, there are 16 source attributes related to the target attribute âcurrent consumption of meat productâ in Mitchelstown.</p>
      <p>To evaluate the algorithm generator, we also defined three categories (perfect, good and bad). Algorithms were classified as âperfectâ when the auto-generated algorithms were the same as or functionally equivalent to manually created ones (i.e. when the algorithms yield the same target values when executed on the source dataset). Algorithms were âgoodâ when they were almost correct but still required the users to fix them by hand. For example, when half of the categorical values were correctly matched between the source and the target attributes, but some additional matches also needed to be added by hand to complete the algorithm. An algorithm is evaluated to be âbadâ when the algorithm needs to be completely replaced by a human-edited version.</p>
      <p><xref ref-type="table" rid="btw155-T1">Table 1</xref> summarizes the quantitative evaluation (the complete data can be found in the <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary material</ext-link>
<bold>Evaluation_results.xlsx)</bold>: 27.7% of the algorithms generated were immediately equivalent to the manually created ones (perfect search, perfect algorithm); 9.8% of the algorithms generated where perfect, but only after users chose the right source attributes from the list of candidates (good search, perfect algorithm); 16.8% of the algorithms generated were partially correct and required users to modify them (perfect search, good algorithm); also we considered (good search, good algorithm), (bad search, perfect algorithm) and (perfect search, bad algorithm) to be useful. Thus, in total, 73% of the results were deemed useful (summing up the green colour-coded cells in <xref ref-type="table" rid="btw155-T1">Table 1</xref>, 27.7â+â16.8â+â1.6â+â9.8â+â7.1â+â18â=â73).
<table-wrap id="btw155-T1" orientation="portrait" position="float"><label>Table 1.</label><caption><p>Summary of the quality measures of algorithm generator and semantic search (in percentages)</p></caption><table frame="hsides" rules="groups"><tbody align="left"><tr><td rowspan="1" colspan="1"><inline-graphic xlink:href="btw155t1.jpg"/></td></tr></tbody></table><table-wrap-foot><fn id="btw155-TF1"><p>Cells are colour-coded to represent the amount of human input (manual work) required to fix the matching, with green being the easiest and red being the most difficult (Please see the online article at <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/">http://bioinformatics.oxfordjournals.org/</ext-link> for the colour-coded table).</p></fn></table-wrap-foot></table-wrap></p>
    </sec>
  </sec>
  <sec>
    <title>5 Discussion and future work</title>
    <p>In the RESULTS section we demonstrated that MOLGENIS/connect can help users can quickly identify relevant source attributes and that the program auto-generates mostly useful data integration algorithms. Here we discuss potential areas of improvement.</p>
    <sec>
      <title>5.1 Domain-specific improvements</title>
      <p>To obtain more insights into the cases for which the system performs well and the cases for which the system needs improvement, we have grouped all the target attributes into 10 areas of information: Diet, Disease, Alcohol use, Education, Food, Employment, physical and laboratory measurement, Medication, Tobacco use and General (e.g. Age, Gender). We summarize the performance of the algorithm generator as well as semantic search per topic in <xref ref-type="table" rid="btw155-T2">Table 2</xref> and <xref ref-type="fig" rid="btw155-F5">Figure 5</xref>, for further details see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Table S6</ext-link>.
<fig id="btw155-F5" orientation="portrait" position="float"><label>Fig.5.</label><caption><p>Scatter plot visualizing the success rates of algorithm generator and semantic search per attribute domain. The <italic>X</italic>-axis and <italic>Y</italic>-axis represent âuseful algorithmâ (defined as when the algorithms generated are correct or partially correct) and âuseful searchâ (defined as when the matched source attributes found fall within top 20 of the suggested list) categories of algorithm generator and semantic search in <xref ref-type="table" rid="btw155-T2">Table 2</xref>. The numbers in parenthesis are the number of attributes for the corresponding topics</p></caption><graphic xlink:href="btw155f5p"/></fig>
<table-wrap id="btw155-T2" orientation="portrait" position="float"><label>Table 2.</label><caption><p>Quality measures of algorithm generator and semantic search in percentages, grouped by attribute topic</p></caption><table frame="hsides" rules="groups"><colgroup span="1"><col align="left" valign="top" span="1"/><col align="left" valign="top" span="1"/><col align="left" valign="top" span="1"/><col align="left" valign="top" span="1"/><col align="left" valign="top" span="1"/><col align="left" valign="top" span="1"/><col align="left" valign="top" span="1"/></colgroup><thead align="left"><tr><th rowspan="1" colspan="1"/><th align="center" colspan="3" rowspan="1">Algorithm generator<hr/></th><th align="center" colspan="3" rowspan="1">Semantic search<hr/></th></tr><tr><th rowspan="1" colspan="1"/><th rowspan="1" colspan="1">Perfect (%)</th><th rowspan="1" colspan="1">Good (%)</th><th rowspan="1" colspan="1">Bad (%)</th><th rowspan="1" colspan="1">Perfect (%)</th><th rowspan="1" colspan="1">Good (%)</th><th rowspan="1" colspan="1">Bad (%)</th></tr></thead><tbody align="left"><tr><td rowspan="1" colspan="1">Diet (10)</td><td rowspan="1" colspan="1">50</td><td rowspan="1" colspan="1">40</td><td rowspan="1" colspan="1">10</td><td rowspan="1" colspan="1">70</td><td rowspan="1" colspan="1">30</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Disease (14)</td><td rowspan="1" colspan="1">86</td><td rowspan="1" colspan="1">14</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">71</td><td rowspan="1" colspan="1">29</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Drink (8)</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">38</td><td rowspan="1" colspan="1">63</td><td rowspan="1" colspan="1">50</td><td rowspan="1" colspan="1">38</td><td rowspan="1" colspan="1">13</td></tr><tr><td rowspan="1" colspan="1">Education (17)</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">82</td><td rowspan="1" colspan="1">18</td><td rowspan="1" colspan="1">65</td><td rowspan="1" colspan="1">35</td><td rowspan="1" colspan="1">0</td></tr><tr><td rowspan="1" colspan="1">Food (42)</td><td rowspan="1" colspan="1">88</td><td rowspan="1" colspan="1">5</td><td rowspan="1" colspan="1">7</td><td rowspan="1" colspan="1">14</td><td rowspan="1" colspan="1">33</td><td rowspan="1" colspan="1">52</td></tr><tr><td rowspan="1" colspan="1">General (18)</td><td rowspan="1" colspan="1">28</td><td rowspan="1" colspan="1">50</td><td rowspan="1" colspan="1">22</td><td rowspan="1" colspan="1">50</td><td rowspan="1" colspan="1">11</td><td rowspan="1" colspan="1">39</td></tr><tr><td rowspan="1" colspan="1">Job (8)</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">100</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">25</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">75</td></tr><tr><td rowspan="1" colspan="1">Measurement (42)</td><td rowspan="1" colspan="1">62</td><td rowspan="1" colspan="1">17</td><td rowspan="1" colspan="1">21</td><td rowspan="1" colspan="1">74</td><td rowspan="1" colspan="1">10</td><td rowspan="1" colspan="1">17</td></tr><tr><td rowspan="1" colspan="1">Medication (11)</td><td rowspan="1" colspan="1">0</td><td rowspan="1" colspan="1">36</td><td rowspan="1" colspan="1">64</td><td rowspan="1" colspan="1">27</td><td rowspan="1" colspan="1">36</td><td rowspan="1" colspan="1">36</td></tr><tr><td rowspan="1" colspan="1">Smoking (14)</td><td rowspan="1" colspan="1">1</td><td rowspan="1" colspan="1">21</td><td rowspan="1" colspan="1">64</td><td rowspan="1" colspan="1">14</td><td rowspan="1" colspan="1">57</td><td rowspan="1" colspan="1">29</td></tr><tr><td rowspan="1" colspan="1">Total (184)</td><td rowspan="1" colspan="1">47</td><td rowspan="1" colspan="1">30</td><td rowspan="1" colspan="1">22</td><td rowspan="1" colspan="1">46</td><td rowspan="1" colspan="1">26</td><td rowspan="1" colspan="1">28</td></tr></tbody></table><table-wrap-foot><fn id="btw155-TF2"><p>The numbers between brackets indicate the number of target attributes.</p></fn></table-wrap-foot></table-wrap></p>
      <p><xref ref-type="fig" rid="btw155-F5">Figure 5</xref> indicates that semantic search does not perform well on âFood and âJobâ while algorithm generator needs improvement for âMedicationâ, âSmokingâ and âDrinkingâ. Smoking and Drinking turned out to be very difficult to handle because how these attributes are defined in different biobanks varies in description and structure. There are more than 40 smoking-related attributes in LifeLines versus only 3 in Prevend. As a consequence, it was very difficult for semantic search to identify âthe one attributeâ among many similar ones. Further, because there were few recurring patterns, the algorithm generator did not know how to generate the algorithms even though the source attributes were provided. We originally thought that the attribute Medication would be well standardized across biobanks due to the use of ATC code. In practice, some biobanks still use internally defined terminology to record medication information, making it more challenging to integrate medication data automatically. On the other hand, rather complex Food and Job target attributes scored unexpectedly âgoodâ in algorithm generation.</p>
      <p>Semantic search is currently limited because we only used small subsets of SNOMED CT and NCI Thesaurus ontologies (for performance reasons). The search capability may be further improved by using the complete version of those ontologies. For instance, the target attribute âCurrent Consumption Frequency of Poultry and Poultry Productsâ was matched to the source attribute Breaded chicken through manual matching, but semantic search missed this match due to the lack of knowledge of such terminology. The relation âChicken is_subclass_of Poultryâ is stated explicitly in full SNOMED CT and search results could be greatly improved by incorporating such information. Other challenges in mapping attributes are the problem of family history, e.g. âparental diabetesâ which was discussed in (<xref rid="btw155-B7" ref-type="bibr">Pang <italic>et al.</italic>, 2015a</xref>), and of negation, e.g. âI do not smokeâ is considered relevant to the target attribute âquantity of cigarette smokedâ. One of the potential solutions would be to highlight the negative words in a specific colour in the suggested source attributes, such as not, never and do not, so users can immediately choose to skip those attributes.</p>
    </sec>
    <sec>
      <title>5.2 Complex algorithms</title>
      <p>Although semantic search and algorithm generator seem to work well, the algorithm template functionality is still limited because we can only define templates for target attributes that have a clear definition or recurring pattern such as BMI and hypertension. It is not possible to formulate templates for ambiguous target attributes. For example, BioSHaRE researchers manually created the algorithm for the target attribute <italic>Quantity of Beer Consumption</italic> in LifeLines following the logic (i) whether or not the participants have had any alcoholic drinks (yes/no); (ii) if âyesâ the quantity of beer will be returned otherwise a null value will be returned. The pseudo code of the algorithm is shown below:
<disp-formula id="E1"><mml:math id="EQ1"><mml:mtable columnalign="left"><mml:mtr><mml:mtd><mml:mtext>if($(âdrinking_alcoholâ).value()==Â âyesâ)</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â returnÂ $(âbeer_quantityâ).value();</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>else</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtext>Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â Â returnÂ null;</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:math></disp-formula>
</p>
      <p>However, there are two major remaining challenges in generating this kind of algorithm. First, semantic search is only able to find beer-related attributes; it still misses the alcohol-drinking-related ones because, while subclass relations are used in the query expansion in semantic search, reversed relations are not. The search knows about the fact that <bold>beer</bold> is a <italic>subclass_of</italic>
<bold>alcoholic drink</bold> but does not understand that <bold>alcoholic drink</bold> is a <italic>superclass_of</italic>
<bold>beer</bold>. We did not include such reversed relations in the query expansion to prevent semantic search from finding too many false positives (irrelevant source attributes). This problem could be solved in the future by including a âsemantic relatednessâ metric into the system. Wu and Palmer proposed to calculate the semantic similarities of any two concepts by considering the depths of the concepts within the ontological hierarchy and the lowest common ancestor in the WordNet taxonomy (<xref rid="btw155-B15" ref-type="bibr">Wu and Palmer, 1994</xref>),
<disp-formula id="E2"><mml:math id="EQ2"><mml:mrow><mml:mtext>WUP</mml:mtext><mml:mo>_</mml:mo><mml:mtext>similarity</mml:mtext><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mn>2</mml:mn><mml:mo>Ã</mml:mo><mml:mtext>depth</mml:mtext><mml:mo>_</mml:mo><mml:mtext>of</mml:mtext><mml:mo>_</mml:mo><mml:mtext>lowest</mml:mtext><mml:mo>_</mml:mo><mml:mtext>common</mml:mtext><mml:mo>_</mml:mo><mml:mtext>ancestor</mml:mtext></mml:mrow><mml:mrow><mml:mtext>depth</mml:mtext><mml:mo>_</mml:mo><mml:mtext>of</mml:mtext><mml:mo>_</mml:mo><mml:msup><mml:mrow><mml:mtext>concept</mml:mtext></mml:mrow><mml:mn>1</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:mtext>depth</mml:mtext><mml:mo>_</mml:mo><mml:mtext>of</mml:mtext><mml:mo>_</mml:mo><mml:msup><mml:mrow><mml:mtext>concept</mml:mtext></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mfrac></mml:mrow></mml:math></disp-formula>
</p>
      <p>For example, the semantic similarity for âbeerâ and âalcoholic drinkâ is 91% when using the tool provided by wsj4 Java library online demo <ext-link ext-link-type="uri" xlink:href="http://ws4jdemo.appspot.com/?mode=w&amp;s1=&amp;w1=beer%23n%231&amp;s2=&amp;w2=alcoholic_drink%23n%231">http://ws4jdemo.appspot.com/?mode=w&amp;s1=&amp;w1=beer%23n%231&amp;s2=&amp;w2=alcoholic_drink%23n%231</ext-link> (<xref rid="btw155-B11" ref-type="bibr">Shima, 2011</xref>).</p>
      <p>Second, even if suitable source attributes (<bold>beer</bold> and <bold>alcoholic drinks</bold>) can be found by semantic search, the algorithm generator does not know how to handle them because there are no suitable templates for these two attributes. One of potential solutions would be to train the system to learn the patterns of the existing algorithms defined by the human experts, i.e. to reuse all the matches that have been created before as potential templates. This would enable the system to utilize the human expert knowledge now implicitly available in the data conversion algorithms.</p>
    </sec>
    <sec>
      <title>5.3 Repeated measurements</title>
      <p>We observed that the same attribute is often measured multiple times to reach a high precision or to establish time series. For instance, in the Mitchelstown biobank, systolic blood pressure was measured three times: <italic>systolic blood pressure 1<sup>st</sup> reading</italic>, <italic>systolic blood pressure 2<sup>nd</sup> reading</italic> and <italic>systolic blood pressure 3<sup>rd</sup> reading</italic>. When the target attribute <italic>Systolic Blood Pressure</italic> is matched to Mitchelstown, we could decide to take the average value of those source attributes. Because all the repeated attributes are lexically close, it would be possible for the system to check if the top suggested attributes are repeated measurements and then decide whether or not to take the average value.</p>
    </sec>
    <sec>
      <title>5.4 Matching and recoding of categorical data</title>
      <p>To robustly match categories, we not only enabled lexical matching but also developed a new frequency matching method (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Table S1</ext-link>). Moreover, we introduced a rule-based category matching system in which we have hardcoded rules to make the system smart enough to deal with difficult categories (see <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/lookup/suppl/doi:10.1093/bioinformatics/btw155/-/DC1">Supplementary Table S2</ext-link>). Most of the categories shown in the evaluation section could be matched correctly, but there will no doubt be new special cases that require us to add new rules. We would like to allow users to define custom rules for matching categories in the database. For matching string-type data values, we have developed a tool (SORTA) to semi-automatically recode the values based on the selected coding systems or ontologies, which we plan to incorporate in the near future (<xref rid="btw155-B8" ref-type="bibr">Pang <italic>et al.</italic>, 2015b</xref>).</p>
    </sec>
    <sec>
      <title>5.5 Statistical matching</title>
      <p>Although units are now accurately detected from the label of attributes using the string-matching algorithm, not all attributes actually contain any information regarding units. In those cases, users now have to guess the unit from data values based on their empirical experience. However, when biobank datasets are available in the system, it should be possible to extrapolate the units using a statistical approach in which the distribution of data values is compared to the distributions of other source data values for which unit information is available.</p>
    </sec>
  </sec>
  <sec>
    <title>6 Conclusion</title>
    <p>We have introduced and demonstrated the utility of MOLGENIS/connect, a generic computer system for semi-automatic harmonization and integration of data with focus on human phenotypes in biobanks, patient registries and biomedical research. The system includes a novel method to automatically generate harmonization/integration algorithms based on ontological query expansion, lexical matching and algorithm template matching. Evaluation in 184 BioSHaRE matches showed MOLGENIS/connect is able to generate useful matches and algorithms in 73% of the cases while only 11% still needed to be created by completely hand. Users can use these auto-generated algorithms to rapidly design and execute the integration via a user-friendly online web application. The application and source code are available as open source via the MOLGENIS software suite at <ext-link ext-link-type="uri" xlink:href="http://github.com/molgenis/molgenis">http://github.com/molgenis/molgenis</ext-link> and a demo can be found at <ext-link ext-link-type="uri" xlink:href="http://www.molgenis.org/connect">http://www.molgenis.org/connect</ext-link>.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="PMC_1" content-type="local-data">
      <caption>
        <title>Supplementary Data</title>
      </caption>
      <media mimetype="text" mime-subtype="html" xlink:href="supp_32_14_2176__index.html"/>
      <media xlink:role="associated-file" mimetype="application" mime-subtype="msword" xlink:href="supp_btw155_bio_format_MolgenisConnect_supplementary.doc"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank our collaborators in BioSHaRE, Maelstrom Research and OBiBa (most notably Yannick Marcon, Vincent Ferreti), the contributing biobanks (LifeLines, Prevend and Mitchelstown), our collaborators from RD-Connect (most notably Lucia Monaco and the partner biobanks), BBMRI-ERIC (most notably Kaisa Silander, National Institute for Health and Welfare, Helsinki) and Kate Mc Intyre for editing the manuscript.</p>
  </ack>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the <funding-source>European Union Seventh Framework Programme</funding-source> (FP7/2007â2013) grant number <award-id>261433</award-id> (<funding-source>Biobank Standardisation and Harmonisation for Research Excellence in the European Union â BioSHaRE-EU</funding-source>), grant number <award-id>284209</award-id> (<funding-source>BioMedBridges</funding-source>) and grant number <award-id>305444</award-id> (RD-Connect) and by BBMRI-NL, a research infrastructure financed by the <funding-source>Netherlands Organization for Scientific Research</funding-source> (NWO), grant number <award-id>184.021.007</award-id>.</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="btw155-B201">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Adamusiak</surname><given-names>T</given-names></name></person-group><etal/> (<year>2012</year>) <article-title>Observ-OM and Observ-TAB: universal syntax solutions for the integration, search and exchange of phenotype and genotype information</article-title>. <source>Hum. Mutat.</source>, <volume>33</volume>, <fpage>867</fpage>â<lpage>873</lpage>.<pub-id pub-id-type="pmid">22416047</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B202">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Bhogal</surname><given-names>J</given-names></name></person-group><etal/> (<year>2007</year>) <article-title>A review of ontology based query expansion</article-title>. <source>Inf. Process. Manage.</source>, <volume>43</volume>, <fpage>866</fpage>â<lpage>886</lpage>.</mixed-citation>
    </ref>
    <ref id="btw155-B203">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Doiron</surname><given-names>D</given-names></name></person-group><etal/> (<year>2013</year>) <article-title>Data harmonization and federated analysis of population-based studies: the BioSHaRE project</article-title>. <source>Emerg. Themes. Epidemiol.</source>, <volume>10</volume>, <fpage>12</fpage>.<pub-id pub-id-type="pmid">24257327</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B204">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Fortier</surname><given-names>I</given-names></name></person-group><etal/> (<year>2011</year>) <article-title>Is rigorous retrospective harmonization possible? Application of the DataSHaPER approach across 53 large studies</article-title>. <source>Int. J. Epidemiol.</source>, <volume>40</volume>, <fpage>1314</fpage>â<lpage>28</lpage>.<pub-id pub-id-type="pmid">21804097</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B1">
      <mixed-citation publication-type="other">JScience. (<year>2012</year>) JScience. <ext-link ext-link-type="uri" xlink:href="http://jscience.org/">http://jscience.org/</ext-link> (8 July 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B2">
      <mixed-citation publication-type="other">JSON.org. (<year>2014</year>) Introducing JSON. <ext-link ext-link-type="uri" xlink:href="http://www.json.org/">http://www.json.org/</ext-link> (25 September 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B100">
      <mixed-citation publication-type="other">Maelstrom Research. (<year>2015</year>) Maelstrom Research. <ext-link ext-link-type="uri" xlink:href="https://www.maelstrom-research.org/">https://www.maelstrom-research.org/</ext-link> (12 December 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B3">
      <mixed-citation publication-type="other">Magma. (<year>2014</year>) Magma Javascript API. <ext-link ext-link-type="uri" xlink:href="http://wiki.obiba.org/display/OPALDOC/Magma+Javascript+API">http://wiki.obiba.org/display/OPALDOC/Magma+Javascript+API</ext-link> (20 July 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B4">
      <mixed-citation publication-type="other">Molgenis. (<year>2014</year>) EMX upload format. <ext-link ext-link-type="uri" xlink:href="https://github.com/molgenis/molgenis/wiki/EMX-upload-format">https://github.com/molgenis/molgenis/wiki/EMX-upload-format</ext-link> (20 July 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Murphy</surname><given-names>S.N</given-names></name></person-group><etal/> (<year>2010</year>) <article-title>Serving the enterprise and beyond with informatics for integrating biology and the bedside (i2b2)</article-title>. <source>J. Am. Med. Inf. Assoc.: JAMIA</source>, <volume>17</volume>, <fpage>124</fpage>â<lpage>130</lpage>.</mixed-citation>
    </ref>
    <ref id="btw155-B6">
      <mixed-citation publication-type="other">Opal. (<year>2011</year>) Opal. <ext-link ext-link-type="uri" xlink:href="http://www.obiba.org/pages/products/opal/">http://www.obiba.org/pages/products/opal/</ext-link> (20 July 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pang</surname><given-names>C.</given-names></name></person-group><etal/> (<year>2015a</year>) <article-title>BiobankConnect: Software to Rapidly Connect Data Elements for Pooled Analysis across Biobanks Using Ontological and Lexical Indexing</article-title>. <source>J. Am. Med. Inform. Assoc.</source>, <volume>22</volume>, <fpage>65</fpage>â<lpage>75</lpage>.<pub-id pub-id-type="pmid">25361575</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pang</surname><given-names>C.</given-names></name></person-group><etal/> (<year>2015</year>b) <article-title>SORTA: a system for ontology-based re-coding and technical annotation of biomedical phenotype data</article-title>. <source>Database</source>, <volume>2015</volume>. bav089.</mixed-citation>
    </ref>
    <ref id="btw155-B9">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><name><surname>Schadow</surname><given-names>G</given-names></name><name><surname>McDonald</surname><given-names>C.J.</given-names></name></person-group> (<year>2005</year>) <source>The Unified Code for Units of Measure (UCUM)</source>. <ext-link ext-link-type="uri" xlink:href="http://unitsofmeasure.org/">http://unitsofmeasure.org/</ext-link> (20 January 2016, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Scholtens</surname><given-names>S</given-names></name></person-group><etal/> (<year>2015</year>) <article-title>Cohort Profile: LifeLines, a three-generation cohort study and biobank</article-title>. <source>Int. J. Epidemiol</source>., <volume>44</volume>, <fpage>1172</fpage>â<lpage>1180</lpage>.<pub-id pub-id-type="pmid">25502107</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B11">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name><surname>Shima</surname><given-names>H.</given-names></name></person-group> (<year>2011</year>) WordNet similarity for Java.</mixed-citation>
    </ref>
    <ref id="btw155-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Swertz</surname><given-names>M.A</given-names></name></person-group><etal/> (<year>2010</year>) <article-title>The MOLGENIS toolkit: rapid prototyping of biosoftware at the push of a button</article-title>. <source>BMC Bioinformatics</source>, <volume>11</volume>, <fpage>S12</fpage>.<pub-id pub-id-type="pmid">21210979</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Szalma</surname><given-names>S</given-names></name></person-group><etal/> (<year>2010</year>) <article-title>Effective knowledge management in translational medicine</article-title>. <source>J. Transl. Med</source>., <volume>8</volume>, <fpage>68</fpage>.<pub-id pub-id-type="pmid">20642836</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B205">
      <mixed-citation publication-type="other">The Apache Software Foundation. (<year>2006</year>) Apache Lucene. <ext-link ext-link-type="uri" xlink:href="https://lucene.apache.org/core/">https://lucene.apache.org/core/</ext-link> (7 October 2015, date last accessed).</mixed-citation>
    </ref>
    <ref id="btw155-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Van Vliet-Ostaptchouk</surname><given-names>J.V</given-names></name></person-group><etal/> (<year>2014</year>) <article-title>The prevalence of Metabolic Syndrome and metabolically healthy obesity in Europe: a collaborative analysis of ten large cohort studies</article-title>. <source>BMC Endocrine Disorders</source>, <volume>14</volume>, <fpage>13</fpage>.<pub-id pub-id-type="pmid">24506931</pub-id></mixed-citation>
    </ref>
    <ref id="btw155-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wu</surname><given-names>Z.</given-names></name><name><surname>Palmer</surname><given-names>M.</given-names></name></person-group> (<year>1994</year>) <article-title>Verb Semantics and Lexical Selection</article-title>. In: <source>32nd Annual Meeting on Association for Computational Linguistics</source>, p. <fpage>6</fpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

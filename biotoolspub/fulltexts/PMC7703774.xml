<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7703774</article-id>
    <article-id pub-id-type="pmid">31501871</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btz698</article-id>
    <article-id pub-id-type="publisher-id">btz698</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Gene Expression</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>scds: computational annotation of doublets in single-cell RNA sequencing data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0001-5910-1306</contrib-id>
        <name>
          <surname>Bais</surname>
          <given-names>Abha S</given-names>
        </name>
        <aff><institution>Department of Developmental Biology</institution>, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0002-1460-5487</contrib-id>
        <name>
          <surname>Kostka</surname>
          <given-names>Dennis</given-names>
        </name>
        <aff><institution>Department of Developmental Biology</institution>, <country country="US">USA</country></aff>
        <aff><institution>Department of Computational and Systems Biology and Pittsburgh Center for Evolutionary Biology and Medicine, University of Pittsburgh School of Medicine</institution>, Pittsburgh, PA 15201, <country country="US">USA</country></aff>
        <xref rid="btz698-cor1" ref-type="corresp"/>
        <!--kostka@pitt.edu-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Elofsson</surname>
          <given-names>Arne</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btz698-cor1">To whom correspondence should be addressed. <email>kostka@pitt.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>2</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-09-10">
      <day>10</day>
      <month>9</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>10</day>
      <month>9</month>
      <year>2019</year>
    </pub-date>
    <volume>36</volume>
    <issue>4</issue>
    <fpage>1150</fpage>
    <lpage>1158</lpage>
    <history>
      <date date-type="received">
        <day>28</day>
        <month>2</month>
        <year>2019</year>
      </date>
      <date date-type="rev-recd">
        <day>16</day>
        <month>8</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>05</day>
        <month>9</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btz698.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>Single-cell RNA sequencing (scRNA-seq) technologies enable the study of transcriptional heterogeneity at the resolution of individual cells and have an increasing impact on biomedical research. However, it is known that these methods sometimes wrongly consider two or more cells as single cells, and that a number of so-called doublets is present in the output of such experiments. Treating doublets as single cells in downstream analyses can severely bias a study’s conclusions, and therefore computational strategies for the identification of doublets are needed.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>With <monospace>scds</monospace>, we propose two new approaches for <italic toggle="yes">in silico</italic> doublet identification: Co-expression based doublet scoring (<monospace>cxds</monospace>) and binary classification based doublet scoring (<monospace>bcds</monospace>). The co-expression based approach, <monospace>cxds</monospace>, utilizes binarized (absence/presence) gene expression data and, employing a binomial model for the co-expression of pairs of genes, yields interpretable doublet annotations. <monospace>bcds</monospace>, on the other hand, uses a binary classification approach to discriminate artificial doublets from original data. We apply our methods and existing computational doublet identification approaches to four datasets with experimental doublet annotations and find that our methods perform at least as well as the state of the art, at comparably little computational cost. We observe appreciable differences between methods and across datasets and that no approach dominates all others. In summary, <monospace>scd</monospace>s presents a scalable, competitive approach that allows for doublet annotation of datasets with thousands of cells in a matter of seconds.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p><monospace>scds</monospace> is implemented as a Bioconductor R package (doi: 10.18129/B9.bioc.scds).</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution>National Institute of General Medical Sciences of the National Institutes of Health</institution>
        </funding-source>
        <award-id>R01GM115836</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution>University of Pittsburgh School of Medicine</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Single-cell RNA sequencing (scRNA-seq) technologies allow characterization of transcriptomes of individual cells and aid our understanding of tissue and cell-type heterogeneity. New insights, for instance in the context of development and/or disease (<xref rid="btz698-B23" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2017</xref>; for a review see <xref rid="btz698-B27" ref-type="bibr">Potter, 2018</xref>; <xref rid="btz698-B32" ref-type="bibr">Segerstolpe <italic toggle="yes">et al.</italic>, 2016</xref>), have made them increasingly relevant across a diverse range of biomedical research fields. Specifically, approaches that enable the study of many thousands of cells simultaneously are making an impact, and the availability of user-friendly solutions (like the 10X Chromium platform, for example) has rendered scRNA-seq the assay of choice in numerous studies. However, use of scRNA-seq data is not without challenges, and careful data processing, quality control and analysis is essential (reviewed for instance in <xref rid="btz698-B1" ref-type="bibr">AlJanahi <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btz698-B18" ref-type="bibr">Kiselev <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btz698-B33" ref-type="bibr">Stegle <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btz698-B35" ref-type="bibr">Vallejos <italic toggle="yes">et al.</italic>, 2017</xref>). We focus on one key step of quality control that is the identification of so-called <italic toggle="yes">doublets</italic> (or <italic toggle="yes">multiplets</italic>). Doublets (or multiplets) arise in scRNA-seq data when two (or more) cells are mistakenly considered as a single cell, due for instance to being captured and processed in the same droplet on a micro-fluidics device. This type of error has the potential to severely confound interpretation of study results, especially in the context of cellular heterogeneity and identity, where they may appear as spurious novel cell types. However, despite rapid advances in the field, to our knowledge relatively few approaches exist that address the issue of doublet detection in scRNA-seq data. In the following, we provide a brief overview of existing experimental and computational approaches for doublet identification.</p>
    <sec>
      <title>1.1 Experimental methods for doublet detection</title>
      <p>For some approaches, doublet detection can be performed as a quality control step to ensure that only single cells are picked at capture sites (e.g. <xref rid="btz698-B28" ref-type="bibr">Proserpio <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btz698-B32" ref-type="bibr">Segerstolpe <italic toggle="yes">et al.</italic>, 2016</xref>). Alternatively, barcodes have been used together with mixtures of cells from different species to get estimates of doublet rates (e.g. <xref rid="btz698-B2" ref-type="bibr">Alles <italic toggle="yes">et al.</italic>, 2017</xref>; <xref rid="btz698-B19" ref-type="bibr">Klein <italic toggle="yes">et al.</italic>, 2015</xref>). In their work, <xref rid="btz698-B16" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> (2018)</xref> present a multiplexing strategy that exploits genetic variation to detect doublets among mixtures of cells from different individuals. In another approach, <xref rid="btz698-B34" ref-type="bibr">Stoeckius <italic toggle="yes">et al.</italic> (2018)</xref> use oligonucleotide-tagged antibodies against cell surface proteins to uniquely label cells in a robust multiplexing strategy that allows for doublet detection. In a similar vein, <xref rid="btz698-B12" ref-type="bibr">Gehring <italic toggle="yes">et al.</italic> (2018)</xref> use chemical labeling for tagging cells from individual samples. Recently, <xref rid="btz698-B26" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic> (2019b</xref>) proposed a technique called MULTI-seq, which uses lipid-modified oligonucleotides to barcode individual cells. Thus, development of experimental approaches that improve doublet detection is a field of active research. However, experimental approaches typically face the limitation that they require specific technologies or experimental designs, which are often not readily available to researchers (for an overview of limitations of some of these approaches, see <xref rid="btz698-B37" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>). Therefore, it is at the stage of computational data analysis where approaches are needed to identify doublets.</p>
    </sec>
    <sec>
      <title>1.2 Computational methods for doublet detection</title>
      <p>There are few computational approaches that explicitly address the problem of distinguishing doublets from single cells using scRNA-seq expression data alone. Often, researchers rely on curated marker genes and expert knowledge to identify cells co-expressing markers of distinct cell types as putative doublets (e.g. <xref rid="btz698-B15" ref-type="bibr">Ibarra-Soria <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btz698-B31" ref-type="bibr">Rosenberg <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btz698-B36" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2016</xref>). Based on the assumption that doublets would have higher total RNA content, another approach is to use a measure for overall expression signal (total counts, for example) as a means for classifying cells as doublets (e.g. <xref rid="btz698-B3" ref-type="bibr">Bach <italic toggle="yes">et al.</italic>, 2017</xref>; <xref rid="btz698-B20" ref-type="bibr">Krentz <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btz698-B39" ref-type="bibr">Ziegenhain <italic toggle="yes">et al.</italic>, 2017</xref>). However, given that marker gene information and expert knowledge is not always available (and not always objective), and that doublets may not necessarily have high total counts, recently a number of computational doublet detection/annotation methods have been proposed that do not rely on markers or total counts alone (<ext-link xlink:href="https://github.com/JonathanShor/DoubletDetection" ext-link-type="uri">https://github.com/JonathanShor/DoubletDetection</ext-link>, <xref rid="btz698-B9" ref-type="bibr">DePasquale <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btz698-B24" ref-type="bibr">Lun <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btz698-B25" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic>, 2019a</xref>; <xref rid="btz698-B37" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btz698-T1" ref-type="table">Table 1</xref>). In the following, we briefly summarize each of them:
</p>
      <table-wrap position="float" id="btz698-T1">
        <label>Table 1.</label>
        <caption>
          <p>Computational approaches for doublet annotation</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Method</th>
              <th rowspan="1" colspan="1">Language</th>
              <th align="left" rowspan="1" colspan="1">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>scrublet</monospace>
              </td>
              <td rowspan="1" colspan="1">Python</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B37" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic> (2019)</xref>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>dblDetection</monospace>
              </td>
              <td rowspan="1" colspan="1">Python</td>
              <td rowspan="1" colspan="1">doi:/10.5281/zenodo.2658730</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>dblFinder</monospace>
              </td>
              <td rowspan="1" colspan="1">R</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B25" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic> (2019a)</xref>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>dblCells</monospace>
              </td>
              <td rowspan="1" colspan="1">R</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B24" ref-type="bibr">Lun <italic toggle="yes">et al.</italic> (2016)</xref>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>dblDecon</monospace>
              </td>
              <td rowspan="1" colspan="1">R</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B9" ref-type="bibr">DePasquale <italic toggle="yes">et al.</italic> (2018)</xref>
              </td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p><monospace>scrublet</monospace>: In their approach <monospace>scrublet</monospace>, <xref rid="btz698-B37" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic> (2019)</xref> simulate artificial doublets from the original data coordinates of the normalized and filtered data in a reduced-dimensional representation obtained by principal component analysis (PCA). A <italic toggle="yes">doublet score</italic> is then created by considering the fraction of artificial doublets in the neighborhood of each barcode using k-nearest-neighbor (kNN) graph based on Euclidean distances. To determine the fraction of doublets in an experiment, a doublet score threshold is set visually by comparing the distributions of the doublet scores of original barcodes and artificial doublets. <monospace>scrublet</monospace> is available as a python module.</p>
      <p><monospace>dblFinder</monospace>: In a similar vein, DoubletFinder (<xref rid="btz698-B25" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic>, 2019a</xref>) also uses artificial doublets, and the fraction of artificial doublets in the neighborhood of each barcode, to calculate a metric (‘pANN’), akin to the doublet score discussed above. Artificial doublets are created by averaging raw counts of randomly paired barcodes, then the data are normalized, PCA performed and pANN scores computed. The authors provide a heuristic to automatically choose parameters (like the number of neighbors considered), and finally thresholding pANN based on the expected doublet rate [or based on an adjusted rate that accounts for homotypic doublets (doublets formed by cells of the same type)] yields final doublet annotations. <monospace>dblFinder</monospace> is available as an R package.</p>
      <p><monospace>dblCells</monospace>: In the vignette of their R package <monospace>simpleSingleCell</monospace> (<xref rid="btz698-B24" ref-type="bibr">Lun <italic toggle="yes">et al.</italic>, 2016</xref>) discuss two approaches, <monospace>doubletClusters</monospace> and <monospace>doubletCells</monospace>, implemented as part of the R package <monospace>scran</monospace> (<xref rid="btz698-B24" ref-type="bibr">Lun <italic toggle="yes">et al.</italic>, 2016</xref>). The first prescribes an approach to identify clusters of cells that have intermediate expression profiles to ‘parent’ clusters based on differentially expressed genes, library size and number of cells in a cluster (<xref rid="btz698-B3" ref-type="bibr">Bach <italic toggle="yes">et al.</italic>, 2017</xref>). Of relevance to us is the second approach <monospace>doubletCells</monospace>, whereby thousands of artificial doublets are generated by combining randomly chosen pairs of barcodes and projecting them into a reduced-dimensional space. A doublet score is formalized by assessing neighborhoods of simulated doublets and original barcodes.</p>
      <p><monospace>dblDetection</monospace>: This approach (<ext-link xlink:href="10.5281/zenodo.2658730" ext-link-type="doi">http://doi.org/10.5281/zenodo.2658730</ext-link>) also relies on artificially generated doublets, but, in contrast to previous methods, performs cell clustering on the augmented dataset. Briefly, augmented data with artificial doublets is generated from one of two possible sampling schemes, projected into a lower-dimensional representation using PCA and then clustering is performed with phenograph (<xref rid="btz698-B22" ref-type="bibr">Levine <italic toggle="yes">et al.</italic>, 2015</xref>, <ext-link xlink:href="https://github.com/JonathanShor/PhenoGraph" ext-link-type="uri">https://github.com/JonathanShor/PhenoGraph</ext-link>). Next, hypergeometric <italic toggle="yes">P</italic>-values are assigned to clusters and their cells based on the number of artificial doublets they contain. This procedure (including artificial doublet generation) is performed multiple times, and then doublet calls and scores are derived from annotated <italic toggle="yes">P</italic>-values across runs/iterations. <monospace>dblDetection</monospace> is available as a python module.</p>
      <p><monospace>dblDecon</monospace>: Making use of an initial user-provided clustering, the method of <xref rid="btz698-B9" ref-type="bibr">DePasquale <italic toggle="yes">et al.</italic>, 2018</xref>, DoubletDecon, relies on deconvolution as implemented in the R package <monospace>DeconRNASeq</monospace> (<xref rid="btz698-B13" ref-type="bibr">Gong and Szustakowski, 2013</xref>) to identify doublets. First, distinct reference profiles are constructed from the initial clustering and then artificial doublets are generated and their deconvolution profiles are computed. Next, barcodes with deconvolution profiles closest (by Pearson correlation) to those of a synthetic doublet are initially predicted to be a doublet. Finally, to reduce penalizing cells with gene expression profiles possibly corresponding to transitional cell states, the authors implement a ‘rescue’ step whereby predicted doublets with unique gene expression patterns are re-labeled as single cells. <monospace>dblDecon</monospace> is available as an R package.</p>
      <p>We note that most of these approaches are recent, based on similar strategies and to our knowledge have not been assessed together across multiple datasets in a systematic way. In the following, we present two new and complementary methods for computational doublet annotation: Co-expression based doublet scoring (<monospace>cxds</monospace>) and binary classification based doublet scoring (<monospace>bcds</monospace>). We show that they can accurately annotate doublets, and we perform a comparison of these approaches and the methods discussed above on four publicly available datasets with experimental doublet annotations (<xref rid="btz698-T2" ref-type="table">Table 2</xref>). We show that our methods perform well compared with existing approaches (at comparably little computational cost), and we demonstrate heterogeneity in results and performance of computational doublet annotation between different methods and across different datasets.
</p>
      <table-wrap position="float" id="btz698-T2">
        <label>Table 2.</label>
        <caption>
          <p>Datasets with experimental doublet annotation</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Dataset</th>
              <th align="left" rowspan="1" colspan="1">Cells</th>
              <th align="left" rowspan="1" colspan="1">Sparsity</th>
              <th align="left" rowspan="1" colspan="1"># Genes</th>
              <th align="left" rowspan="1" colspan="1">Reference</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">hgmm</td>
              <td rowspan="1" colspan="1">12 820</td>
              <td rowspan="1" colspan="1">79%</td>
              <td rowspan="1" colspan="1">3068.5</td>
              <td rowspan="1" colspan="1">10X Genomics</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">ch_pbmc</td>
              <td rowspan="1" colspan="1">15 583</td>
              <td rowspan="1" colspan="1">98%</td>
              <td rowspan="1" colspan="1">321</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B34" ref-type="bibr">Stoeckius <italic toggle="yes">et al.</italic> (2018)</xref>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">ch_cell-lines</td>
              <td rowspan="1" colspan="1">8191</td>
              <td rowspan="1" colspan="1">92%</td>
              <td rowspan="1" colspan="1">2086</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B34" ref-type="bibr">Stoeckius <italic toggle="yes">et al.</italic> (2018)</xref>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">demuxlet</td>
              <td rowspan="1" colspan="1">14 619</td>
              <td rowspan="1" colspan="1">97%</td>
              <td rowspan="1" colspan="1">520</td>
              <td rowspan="1" colspan="1">
                <xref rid="btz698-B16" ref-type="bibr">Kang <italic toggle="yes">et al.</italic> (2018)</xref>
              </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p><italic toggle="yes">Notes</italic>: The ‘# Genes’ column shows the median number (across cells) of expressed genes. The URL for the hgmm 10X Genomics dataset is <ext-link xlink:href="https://support.10xgenomics.com/single-cell-gene-expression/datasets-2.1.0/hgmm_12k" ext-link-type="uri">https://support.10xgenomics.com/single-cell-gene-expression/datasets-2.1.0/hgmm_12k</ext-link>.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Co-expression based doublet scoring</title>
      <p>Co-expression based doublet scoring (<monospace>cxds</monospace>) is motivated by the assumption that heterotypic doublets (i.e. doublets comprised of cells from different cell types), co-express ‘marker’ genes that are not usually active in the same cell. In contrast to approaches that leverage expert knowledge and assess expression patterns of curated sets of marker genes manually, <monospace>cxds</monospace> uses the scRNA-seq data to first assess gene pairs and then derive an overall doublet score for each barcode (We use the terms ‘cell’ and ‘barcode’ interchangeably, and sometimes use ‘doublet cells’ to refer to barcodes coding for two or more cells, based on gene-gene co-expression).</p>
      <p>Specifically, let <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> be a genes × cells count matrix for <italic toggle="yes">m</italic> genes and <italic toggle="yes">n</italic> cells, and <italic toggle="yes">B</italic> its thresholded binarized version, where <italic toggle="yes">B<sub>ij</sub></italic> denotes whether gene <italic toggle="yes">i</italic> is expressed in cell <italic toggle="yes">j</italic> (absence/presence). The row means of <italic toggle="yes">B</italic>, <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub></mml:mrow><mml:mo>}</mml:mo></mml:mrow></mml:mrow></mml:mrow><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>m</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, are the fraction of cells expressing each gene, and the symmetric matrix <italic toggle="yes">BB<sup>T</sup></italic> contains for each gene pair the number of cells co-expressing the two genes. If we denote the matrix where the entries in <italic toggle="yes">B</italic> have been flipped by <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:munder accentunder="true"><mml:mi>B</mml:mi><mml:mo>_</mml:mo></mml:munder></mml:math></inline-formula>  <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:munder accentunder="true"><mml:mi>B</mml:mi><mml:mo>_</mml:mo></mml:munder></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula>, then we can write the number of cells that express exactly one of two genes as <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>B</mml:mi><mml:msup><mml:mrow><mml:munder accentunder="true"><mml:mi>B</mml:mi><mml:mo>_</mml:mo></mml:munder></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:munder accentunder="true"><mml:mi>B</mml:mi><mml:mo>_</mml:mo></mml:munder><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and, assuming independence between genes, arrive at the following binomial model:
<disp-formula id="E1"><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>B</mml:mi><mml:msup><mml:mrow><mml:munder accentunder="true"><mml:mi>B</mml:mi><mml:mo>_</mml:mo></mml:munder></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo>+</mml:mo><mml:munder accentunder="true"><mml:mi>B</mml:mi><mml:mo>_</mml:mo></mml:munder><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>∼</mml:mo><mml:mtext>Bin</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo> </mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where (<italic toggle="yes">ij</italic>) now denotes a pair of genes. Let a ‘score matrix’ <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>×</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> hold negative (upper tail) log <italic toggle="yes">P</italic>-values under the above model. Scores for gene pairs that co-express across cells <bold><italic toggle="yes">less often</italic></bold> than expected (given their marginal frequencies) are high, while scores for pairs that co-express normally (or more often than expected) are low. We now use <italic toggle="yes">S</italic> to derive cell-specific doublet scores by summing, for each cell, negative log <italic toggle="yes">P</italic>-values of co-expressed gene pairs, so that we get for cell <italic toggle="yes">i</italic> a doublet score <monospace>cxds</monospace> via:
<disp-formula id="E2"><label>(1)</label><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mtext>cxds</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mi>j</mml:mi></mml:msub><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ki</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ji</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">kj</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mtext>diag</mml:mtext><mml:msub><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mi>S</mml:mi><mml:mi>B</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo> </mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:math></disp-formula>We then rank cells in the order of decreasing scores, with high scores denoting doublet cells/barcodes. We note that <italic toggle="yes">B</italic>, for UMI data, is typically sparse (often more than 95% zeros), so that the matrix products <italic toggle="yes">BB<sup>T</sup></italic> and <italic toggle="yes">B<sup>T</sup>SB</italic> above are not prohibitive, even for tens of thousands of cells. On the contrary, our run times are comparable with the fastest current approaches (see <xref rid="btz698-T3" ref-type="table">Table 3</xref> in the Section 3).
</p>
      <table-wrap position="float" id="btz698-T3">
        <label>Table 3.</label>
        <caption>
          <p>Running time for doublet detection methods in seconds</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"># cells</th>
              <th rowspan="1" colspan="1">1k</th>
              <th rowspan="1" colspan="1">2k</th>
              <th rowspan="1" colspan="1">4k</th>
              <th rowspan="1" colspan="1">8k</th>
              <th rowspan="1" colspan="1">12k</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">□ cxds</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">0</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">2</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">□ bcds7</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">2</td>
              <td rowspan="1" colspan="1">4</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">8</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">○ scrublet</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">1</td>
              <td rowspan="1" colspan="1">3</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">11</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">⋆ bcds</td>
              <td rowspan="1" colspan="1">5</td>
              <td rowspan="1" colspan="1">7</td>
              <td rowspan="1" colspan="1">11</td>
              <td rowspan="1" colspan="1">22</td>
              <td rowspan="1" colspan="1">26</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">○ dblCells</td>
              <td rowspan="1" colspan="1">19</td>
              <td rowspan="1" colspan="1">41</td>
              <td rowspan="1" colspan="1">106</td>
              <td rowspan="1" colspan="1">210</td>
              <td rowspan="1" colspan="1">340</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">○ dblFinder</td>
              <td rowspan="1" colspan="1">58</td>
              <td rowspan="1" colspan="1">93</td>
              <td rowspan="1" colspan="1">207</td>
              <td rowspan="1" colspan="1">384</td>
              <td rowspan="1" colspan="1">627</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">○ dblDetection</td>
              <td rowspan="1" colspan="1">56</td>
              <td rowspan="1" colspan="1">102</td>
              <td rowspan="1" colspan="1">228</td>
              <td rowspan="1" colspan="1">484</td>
              <td rowspan="1" colspan="1">774</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn2">
            <p><italic toggle="yes">Notes</italic>: The row for <monospace>bcds7</monospace> denotes the time for <monospace>bcds</monospace> for a fixed number of training rounds (Section 2).</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>As mentioned above, a motivation for this score is a (simplified) concept of marker genes that are expressed in specific cell types only. Gene pairs containing marker genes for the same cell type will receive low scores (they are co-expressed more often than expected), while gene pairs with marker genes for different cell types would receive high scores (they are co-expressed less often than expected, because they do not co-express in non-doublet cells). In our cell-specific scores <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:msubsup><mml:mrow><mml:mrow><mml:mo>{</mml:mo><mml:mtext>cxds</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>}</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:msubsup></mml:mrow></mml:math></inline-formula>, we then aggregate information across gene pairs.</p>
      <sec>
        <title>2.1.1 Gene pair scoring</title>
        <p>Because the doublet score <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mtext>cxds</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mo>·</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in <xref rid="E2" ref-type="disp-formula">Equation (1)</xref> directly sums up contributions of individual gene pairs, we can rank pairs based on their cumulative impact on doublet prediction in the dataset at hand, weighted by the doublet score for each cell. For the ‘importance’ of a pair formed by genes <italic toggle="yes">k</italic> and <italic toggle="yes">j</italic> we define
<disp-formula id="E3"><label>(2)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mrow><mml:mtext>imp</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mi>i</mml:mi></mml:msub><mml:mtext>cxds</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ki</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">ji</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">kj</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="italic">BD</mml:mi><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>*</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi mathvariant="italic">kj</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <italic toggle="yes">D</italic> is a diagonal matrix containing doublet scores and the asterisk denotes the element-wise product of matrices. This approach prioritizes gene pairs that substantially contribute to the annotation of cells with high doublet scores, and it can be used to study the pairs of genes that most drive doublet prediction. Further on, to prioritize gene pairs that drive doublet predictions in a particular cell we can omit the sum in <xref rid="E3" ref-type="disp-formula">Equation (2)</xref>; or, to focus on a group of cells (forming a cluster, for instance), we can restrict the sum to group members.</p>
      </sec>
      <sec>
        <title>2.1.2 Implementation</title>
        <p>We implemented <monospace>cxds</monospace> using the R programming language (<xref rid="btz698-B29" ref-type="bibr">R Core Team, 2018</xref>), and in practice add two heuristics: Given a count matrix <italic toggle="yes">X</italic> of an scRNA-seq experiment, we first binarize expression based on a threshold <monospace>binThresh</monospace>, such that <italic toggle="yes">B</italic> contains genes with more than binThresh counts. In all our studies, here we set <monospace>binThresh</monospace> to zero, but other values can be reasonable (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>). Next, we focus on highly variable genes by ranking genes with respect to their Binomial variance (i.e. <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>n</mml:mi><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> for gene <italic toggle="yes">j</italic>) then keeping only the <monospace>ntop</monospace> most variable ones. We choose <monospace>ntop = 500</monospace> as default (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref> shows that <monospace>cxds</monospace> results are largely robust with respect to different choices of the <monospace>ntop</monospace> parameter).</p>
      </sec>
    </sec>
    <sec>
      <title>2.2 Binary classification based doublet scoring</title>
      <p>Binary classification based doublet scoring (<monospace>bcds</monospace>) employs artificial doublets, similar to other strategies (see Section 1 for an overview). However, it does not rely on dimension reduction or nearest neighbor approaches to calculate a doublet score. Briefly, given a genes-by-cells matrix of expression counts we create artificial doublets by adding random pairs of columns. We then log-transform, normalize and select variable genes before using a binary classification algorithm to discriminate artificial doublets from original input data. Finally, for each input barcode we then take the estimated probability of belonging to the artificial doublet class as the doublet score we annotate.</p>
      <sec>
        <title>2.2.1 Implementation</title>
        <p>We implemented <monospace>bcds</monospace> using the R programming language (<xref rid="btz698-B29" ref-type="bibr">R Core Team, 2018</xref>), with the following specifics. We simulate artificial doublets by randomly selecting pairs of cells and adding their counts, followed by mean-normalization of log-counts of all cells (artificial doublets and input cells) and thereby generate an augmented dataset containing input data and simulated doublets. We then train gradient boosted decision trees (<xref rid="btz698-B5" ref-type="bibr">Chen and Guestrin, 2016</xref>) using the <monospace>xgboost</monospace> R package (<xref rid="btz698-B6" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2019</xref>) with default parameters for artificial doublet classification. We employ two heuristics for establishing the number of training rounds: (i) We use 5-fold cross-validation approach in combination with the ‘one-standard-error-rule’ (<xref rid="btz698-B14" ref-type="bibr">Hastie <italic toggle="yes">et al.</italic>, 2001</xref>) to determine the number of rounds to train on the complete dataset. (ii) We set the number of training rounds to seven. In both cases, we stop training in case the misclassification error does not decrease for two consecutive rounds. All results reported in this manuscript use heuristic (i), except for <xref rid="btz698-T3" ref-type="table">Table 3</xref>, where we report running times; there we also report heuristic (ii), termed <monospace>bcds7</monospace> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref> compares the performance of the two heuristics across datasets). We report the class probability for the artificial doublet class given by the model trained on the complete dataset as doublet scores. Also, like with <monospace>cxds</monospace>, we select <monospace>ntop</monospace> variable genes before simulating doublets and training the classifier. Here, we log-transform and mean-normalize count values before calculating the variance of each gene. The <monospace>ntop</monospace> most variable genes are then included for further analysis, and we choose <monospace>ntop = 500</monospace> for all results reported.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 Hybrid doublet scoring</title>
      <p>We also combine both approaches, <monospace>cxds</monospace> and <monospace>bcds</monospace>, into a version generating annotations as follows. After running each method we simply normalize the scores to fall between zero and one (by subtracting the minimum and subsequently dividing by the maximum) before adding them. We denote these annotation scores as <monospace>hybrid</monospace>.</p>
    </sec>
    <sec>
      <title>2.4 Data description, retrieval and processing</title>
      <p>We evaluated our approach and compared performance with other methods on four publicly available datasets with experimentally annotated doublets. <xref rid="btz698-T2" ref-type="table">Table 2</xref> lists the datasets, in the following we describe how we retrieved and processed each of them:</p>
      <p><monospace>hg-mm</monospace>: This dataset contains a 1:1 mixture of freshly frozen human HEK293T cells and mouse NIH3T3 cells. We downloaded data from the 10X genomics website (<ext-link xlink:href="http://www.10xgenomics.com" ext-link-type="uri">www.10xgenomics.com</ext-link>) and processed them as follows: Barcodes were filtered to include those with experimental doublet annotations. For genes, human-mouse 1:1 orthologs were identified using the Ensemble database (v95, <xref rid="btz698-B38" ref-type="bibr">Zerbino <italic toggle="yes">et al.</italic>, 2018</xref>) with the <monospace>getLDS</monospace> function provided by the <monospace>biomaRt</monospace> R software package (<xref rid="btz698-B10" ref-type="bibr">Durinck <italic toggle="yes">et al.</italic>, 2009</xref>), and corresponding counts were added. Removing features with no counts resulted in gene expression data of 14 437 orthologs across 12 820 barcodes.</p>
      <p><monospace>ch_pbmc</monospace>: This dataset contains peripheral blood mononuclear cells (PBMCs) from eight donors, with cells from each donor uniquely labeled using the cell hashing approach of <xref rid="btz698-B34" ref-type="bibr">Stoeckius <italic toggle="yes">et al.</italic> (2018)</xref>. Data files were downloaded from Dropbox (<ext-link xlink:href="https://www.dropbox.com/sh/c5gcjm35nglmvcv/AABGz9VO6gX9bVr5R2qahTZha?dl=0" ext-link-type="uri">https://www.dropbox.com/sh/c5gcjm35nglmvcv/AABGz9VO6gX9bVr5R2qahTZha? dl=0</ext-link>) and processed according to the vignette of the Seurat R package (<xref rid="btz698-B4" ref-type="bibr">Butler <italic toggle="yes">et al.</italic>, 2018</xref>) entitled ‘Demultiplexing with hashtag oligos (HTOs)’ (<ext-link xlink:href="https://satijalab.org/seurat/hashing_vignette.html" ext-link-type="uri">https://satijalab.org/seurat/hashing_vignette.html</ext-link>). This resulted in a gene expression matrix of 21 606 genes across 15 583 barcodes.</p>
      <p><monospace>ch_cell-lines</monospace>: This dataset contains a mixture of four human cell lines, HEK, K562, KG1 and THP1. Each cell line was labeled using the cell hashing approach of <xref rid="btz698-B34" ref-type="bibr">Stoeckius <italic toggle="yes">et al.</italic> (2018)</xref>. Data files were downloaded from the same location as for <monospace>ch_pbmc</monospace> and processed according to the same vignette, resulting in a gene expression matrix with 25 241 genes across 8191 barcodes.</p>
      <p><monospace>demuxlet</monospace>: This dataset contains a uniform mixture of PBMCs from eight lupus patients, and doublets have been annotated based on genetic information using <monospace>demuxlet</monospace> (<xref rid="btz698-B16" ref-type="bibr">Kang <italic toggle="yes">et al.</italic>, 2018</xref>). Data files for gene expression counts were downloaded from GEO (GSM2560248) and doublet annotations were retrieved from the <monospace>demuxlet</monospace> github repository (<ext-link xlink:href="https://github.com/statgen/demuxlet" ext-link-type="uri">https://github.com/statgen/demuxlet</ext-link>). This resulted in data comprising of expression counts for 17 662 genes across 14 619 barcodes.</p>
      <p>We note that for all gene counts above, and for the sparsity calculations in <xref rid="btz698-T2" ref-type="table">Table 2</xref>, we included genes expressed with at least one count in one barcode.</p>
    </sec>
    <sec>
      <title>2.5 Annotation of doublets with existing methods</title>
      <p>We annotated doublets with five existing tools (<xref rid="btz698-T1" ref-type="table">Table 1</xref>), and in the following we describe how we applied each of them:</p>
      <p><monospace>dblCells</monospace>: Data were processed per the vignette of the R package <monospace>simpleSingleCell</monospace> (<xref rid="btz698-B24" ref-type="bibr">Lun <italic toggle="yes">et al.</italic>, 2016</xref>). Briefly, raw counts were normalized using size factors computed using <monospace>scran</monospace> (<xref rid="btz698-B24" ref-type="bibr">Lun <italic toggle="yes">et al.</italic>, 2016</xref>) with the <monospace>igraph</monospace> clustering method and a <monospace>min.mean</monospace> value of 0.1. Technical noise was removed using the <monospace>denoisePCA</monospace> function of <monospace>scran</monospace> with approximate singular value decomposition performed (<monospace>approximate = TRUE</monospace>). Finally, doublet scores were retrieved using the <monospace>doubletCells</monospace> function run with default options except again with <monospace>approximate = TRUE</monospace> to allow fast approximate PCA.</p>
      <p><monospace>dblDecon</monospace>: Raw counts were fully processed using Seurat (<xref rid="btz698-B4" ref-type="bibr">Butler <italic toggle="yes">et al.</italic>, 2018</xref>) [i.e. normalization, scaling with nUMI regressed out, finding variable genes, dimension reduction (with PCA) and clustering were performed]. Additionally, marker genes were calculated with default settings using the <monospace>FindAllMarkers</monospace> function and top 50 markers used. The <monospace>Main_Doublet_Decon</monospace> function was run with input files created using the <monospace>Seurat_Pre_Process</monospace> function and default settings except for <monospace>species</monospace> which was set to <monospace>hsa</monospace>, and using centroids as references for deconvolution (<monospace>centroids = TRUE</monospace>).</p>
      <p><monospace>dblDetection</monospace>: The python module (<ext-link xlink:href="https://github.com/JonathanShor/DoubletDetection" ext-link-type="uri">https://github.com/JonathanShor/DoubletDetection</ext-link>) was used in the R programming language using the <monospace>reticulate</monospace> package (<ext-link xlink:href="https://github.com/rstudio/reticulate" ext-link-type="uri">https://github.com/rstudio/reticulate</ext-link>), and run with default parameters on the count data. For each cell, negative log <italic toggle="yes">P</italic>-values were averaged across runs/iterations to derive an aggregate doublet score for each cell.</p>
      <p><monospace>dblFinder</monospace>: Fully processed Seurat objects were created (<xref rid="btz698-B4" ref-type="bibr">Butler <italic toggle="yes">et al.</italic>, 2018</xref>), where normalization, scaling (with nUMI regressed out), finding variable genes (with arguments as per their github example code), dimension reduction (PCA and TSNE) and clustering were performed with <monospace>dims.use = 10</monospace> and all other Seurat settings set to default. For <monospace>dblFinder</monospace>, the value for <monospace>pK</monospace> was selected following the best practices outlined on their github page (<ext-link xlink:href="https://github.com/chris-mcginnis-ucsf/DoubletFinder" ext-link-type="uri">https://github.com/chris-mcginnis-ucsf/DoubletFinder</ext-link>), i.e. as the one with the maximum mean-variance normalized bimodality coefficient (BCmvn). The function <monospace>DoubletFinder</monospace> was run with the expected doublet rate of 7.5% assuming Poisson statistics, as per the example code on github (see URL above).</p>
      <p><monospace>scrublet</monospace>: The python module <monospace>scrublet</monospace> (<xref rid="btz698-B37" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>) was used in the R programming language using the <monospace>reticulate</monospace> package (<ext-link xlink:href="https://github.com/rstudio/reticulate" ext-link-type="uri">https://github.com/rstudio/reticulate</ext-link>), and run with default parameters on raw count data. Doublet scores were used as reported by the software.</p>
    </sec>
    <sec>
      <title>2.6 Data visualization and calculation of performance metrics</title>
      <p>Low dimensional representation for visualization of data in our figures were calculated as follows: For each dataset, log counts were calculated and random projection PCA was performed on the 500 most variable genes using the <monospace>rsvd</monospace> R package (<xref rid="btz698-B11" ref-type="bibr">Erichson <italic toggle="yes">et al.</italic>, 2016</xref>); finally the first ten principal components were projected into two dimensions for visualization using the <monospace>Rtsne</monospace> package (<xref rid="btz698-B21" ref-type="bibr">Krijthe, 2015</xref>) with default parameters.</p>
      <p>For performance evaluation, we calculated the area under the ROC curve using the <monospace>pROC</monospace> R package (<xref rid="btz698-B30" ref-type="bibr">Robin <italic toggle="yes">et al.</italic>, 2011</xref>), including partial areas under the ROC curve (pAUC) at 90%, 95% and 97.5% specificity. For the partial areas, the option <monospace>partial.auc.correct</monospace> was set to <monospace>TRUE</monospace>, such that the maximal pAUC is one and a pAUC of 0.5 is non-discriminant. Areas under the precision-recall curves (AUPRCs) were calculated using the <monospace>PRROC</monospace> package (<xref rid="btz698-B17" ref-type="bibr">Keilwagen <italic toggle="yes">et al.</italic>, 2014</xref>) and we report the smoothed area under the curve according to <xref rid="btz698-B8" ref-type="bibr">Davis and Goadrich (2006)</xref> by selecting the appropriate option. We used all cells present in each dataset (see above) to calculate performance metrics. We note that <monospace>dblDetection</monospace> would occasionally not score a small subset of cells (between 0 and 11), which we then excluded for this method’s metrics.</p>
      <p>Running times for methods available as <monospace>R</monospace> packages were calculated in R, while python was used for python-based methods. The median (middle) value of three timings is reported. Methods were run on the same sub-samples of cells of the <monospace>demu</monospace> data, and four cores of an Intel(R) Xeon(R) E5-2667 v4 CPUs were made available for computing.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>We report two computational methods for <italic toggle="yes">in silico</italic> doublet prediction: co-expression based doublet scoring (<monospace>cxds</monospace>) and binary classification based doublet scoring (<monospace>bcds</monospace>). Co-expression based doublet scoring identifies doublets from thresholded expression data essentially using a Binomial model (Section 2), based on the reasoning that marker genes for different cell types do not co-express in (non-doublet) barcodes. Pairs are scored exhaustively, and no prior knowledge about marker genes in a specific context is needed. Further on, doublet annotations for cells are interpretable in the sense that they are based on the co-expression of pairs of genes and <monospace>cxds</monospace> allows users to view gene pairs ordered with respect to their contribution to doublet predictions across a dataset (Section 2). <xref rid="btz698-F1" ref-type="fig">Figure 1</xref> shows the top two pairs driving doublet prediction for <monospace>cxds</monospace> across the four datasets (<xref rid="btz698-T2" ref-type="table">Table 2</xref>), illustrating how co-expression of genes in each pair identifies doublet cells.
</p>
    <fig position="float" id="btz698-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Gene pairs driving doublet prediction in <monospace>cxds</monospace>. For four datasets (panels) the first row shows all cells in (left), the annotated doublets (center) and <monospace>cxds</monospace>-predicted doublets (right). The following two rows depict the two gene pairs that contribute most to the <monospace>cxds</monospace> classifier (Section 2). For each pair (i.e. for each row), the left plot depicts the expression of one gene (presence/absence), the middle plot the expression of the other gene, while the right plot the average expression in cells that co-express both genes. We see that each gene in a pair is expressed in distinct groups of cells, and that their co-expression highlights annotated and predicted doublets</p>
      </caption>
      <graphic xlink:href="btz698f1" position="float"/>
    </fig>
    <p>Binary classification based doublet scoring, on the other hand, combines generation of artificial doublets from existing data with binary classification. Barcodes in the original data that are difficult to discriminate from artificial doublets receive high doublet scores using <monospace>bcds</monospace>. We use gradient boosted decision trees (<xref rid="btz698-B5" ref-type="bibr">Chen and Guestrin, 2016</xref>) to classify (Section 2), but in principle the approach is generic and other classification algorithms could be explored. In the following, we apply our methods to four datasets with experimental doublet annotations (<xref rid="btz698-T2" ref-type="table">Table 2</xref>), provide evidence that combining the <monospace>cxds</monospace> and <monospace>bcds</monospace> into a ‘hybrid’ score (Section 2) improves performance and compare our approaches and other computational methods for doublet annotation (<xref rid="btz698-T1" ref-type="table">Table 1</xref>).</p>
    <sec>
      <title>3.1 Doublet scoring with <monospace>scds</monospace> accurately recapitulates experimental doublet annotations</title>
      <p>We performed computational doublet annotation on four scRNA-seq datasets (<xref rid="btz698-T2" ref-type="table">Tables 2</xref> and <xref rid="btz698-T4" ref-type="table">4</xref>) using several current methods (<xref rid="btz698-T1" ref-type="table">Table 1</xref>), together with library size (<monospace>libsize</monospace>) and number of expressed genes (termed <monospace>features</monospace>); together both are referred to as ‘baseline’ methods from here onwards. Results for each dataset are presented in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref> and performance averaged across datasets is shown in <xref rid="btz698-T4" ref-type="table">Table 4</xref>. Columns are performance metrics [the area under the receiver operating characteristic curve (ROC curve), the area under the precision-recall curve (PR curve) and partial areas under the ROC curve focusing on 90%, 95% and 97.5% specificity], while rows correspond to computational doublet annotation approaches. Rows are sorted with respect to their performance in terms of the area under the ROC curve (AUROC), with ties being broken by the performance in terms of the area under the PR curve (AUPRC). Baseline methods are marked with gray bullets, current methods with blue bullets and our proposed approaches with red bullets. We find that all the methods we propose (<monospace>cxds</monospace>, <monospace>bcds</monospace> and <monospace>hybrid</monospace>) perform well across datasets, consistently outperforming baseline approaches and at least one ranks in the top three best performing methods. The one exception is the <monospace>ch_pbmc</monospace> dataset (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>), where annotating doublets based on the number of features achieves an area under the ROC curve of 79%. Our weakest-performing approach on this data, <monospace>cxds</monospace>, performs slightly worse (78%), but does much better in terms of area under the PR curve (AUPRC of 54% versus 45%, respectively). We also note that two other computational doublet annotation methods, <monospace>dblCells</monospace> and <monospace>scrublet</monospace>, perform worse than the number of features in terms of AUROC on this dataset. On average, our <monospace>hybrid</monospace> method does best of the three methods we propose, significantly outperforming baseline approaches on all four datasets.
</p>
      <table-wrap position="float" id="btz698-T4">
        <label>Table 4.</label>
        <caption>
          <p>Performance of doublet annotation methods, averaged across datasets</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1"/>
              <th rowspan="1" colspan="1">AUROC</th>
              <th rowspan="1" colspan="1">pAUC900</th>
              <th rowspan="1" colspan="1">pAUC950</th>
              <th rowspan="1" colspan="1">pAUC975</th>
              <th rowspan="1" colspan="1">AUPRC</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>○ dblCells</monospace>
              </td>
              <td rowspan="1" colspan="1">0.75</td>
              <td rowspan="1" colspan="1">0.69</td>
              <td rowspan="1" colspan="1">0.66</td>
              <td rowspan="1" colspan="1">0.63</td>
              <td rowspan="1" colspan="1">0.47</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>□ libsize</monospace>
              </td>
              <td rowspan="1" colspan="1">0.76</td>
              <td rowspan="1" colspan="1">0.60</td>
              <td rowspan="1" colspan="1">0.56</td>
              <td rowspan="1" colspan="1">0.53</td>
              <td rowspan="1" colspan="1">0.29</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>□ features</monospace>
              </td>
              <td rowspan="1" colspan="1">0.78</td>
              <td rowspan="1" colspan="1">0.62</td>
              <td rowspan="1" colspan="1">0.57</td>
              <td rowspan="1" colspan="1">0.54</td>
              <td rowspan="1" colspan="1">0.33</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>⋆ cxds</monospace>
              </td>
              <td rowspan="1" colspan="1">0.83</td>
              <td rowspan="1" colspan="1">0.74</td>
              <td rowspan="1" colspan="1">0.71</td>
              <td rowspan="1" colspan="1">0.68</td>
              <td rowspan="1" colspan="1">0.56</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>○ scrublet</monospace>
              </td>
              <td rowspan="1" colspan="1">0.83</td>
              <td rowspan="1" colspan="1">0.75</td>
              <td rowspan="1" colspan="1">0.72</td>
              <td rowspan="1" colspan="1">0.69</td>
              <td rowspan="1" colspan="1">0.60</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>⋆ bcds</monospace>
              </td>
              <td rowspan="1" colspan="1">0.84</td>
              <td rowspan="1" colspan="1">0.75</td>
              <td rowspan="1" colspan="1">0.70</td>
              <td rowspan="1" colspan="1">0.63</td>
              <td rowspan="1" colspan="1">0.56</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>⋆ hybrid</monospace>
              </td>
              <td rowspan="1" colspan="1">0.85</td>
              <td rowspan="1" colspan="1">0.77</td>
              <td rowspan="1" colspan="1">0.72</td>
              <td rowspan="1" colspan="1">0.67</td>
              <td rowspan="1" colspan="1">0.62</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>○ dblDetection</monospace>
              </td>
              <td rowspan="1" colspan="1">0.85</td>
              <td rowspan="1" colspan="1">0.80</td>
              <td rowspan="1" colspan="1">0.75</td>
              <td rowspan="1" colspan="1">0.71</td>
              <td rowspan="1" colspan="1">0.66</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">
                <monospace>○ dblFinder</monospace>
              </td>
              <td rowspan="1" colspan="1">0.86</td>
              <td rowspan="1" colspan="1">0.80</td>
              <td rowspan="1" colspan="1">0.76</td>
              <td rowspan="1" colspan="1">0.72</td>
              <td rowspan="1" colspan="1">0.67</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn3">
            <p><italic toggle="yes">Notes</italic>: Squares mark baseline methods, circles mark current methods for doublet annotation and stars mark proposed methods. AUROC: Area under the ROC curve; AUPRC: area under the precision-recall curve; pAUC: partial area under the ROC curve (Section 2).</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>3.2 Coexpression-based doublet scoring highlights informative gene pairs</title>
      <p>One of the features of <monospace>cxds</monospace> is its ability to provide gene pairs that drive doublet annotations of cells in a specific dataset (Section 2). As an illustration, <xref rid="btz698-F1" ref-type="fig">Figure 1</xref> shows the top two gene pairs driving <monospace>cxds</monospace> doublet annotation in each of the datasets we analyzed. For each dataset, the first row shows a two-dimensional representation of all cells (left), the subset of experimentally annotated doublets (middle) and the subset of doublets predicted by <monospace>cxds</monospace> (right). The next two rows depict gene pairs: Binarized expression (presence/absence) of one gene alone on the left, of the second gene in the pair in the middle and co-expression of both genes in the same cell on the right (also absence/presence). We see that <monospace>cxds</monospace> finds genes with complementary expression patterns that mark coherent groups of cells, and how co-expression of these genes contributes to doublet predictions. We note that while no clustering has been performed, genes included in high-scoring pairs by <monospace>cxds</monospace> often look like they mark different cell types, or combinations thereof, that may be present in the data.</p>
    </sec>
    <sec>
      <title>3.3 Comparison of computational doublet scoring methods</title>
      <p>We compared computational doublet annotation methods across four datasets; performance evaluation results averaged across datasets are shown in <xref rid="btz698-T4" ref-type="table">Table 4</xref>, dataset-specific results are shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>, while <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S4</xref> shows a resampling-based assessment of prediction robustness. In addition to aggregate performance measures reported in these tables and figures, <xref rid="sup1" ref-type="supplementary-material">Supplementary Figures S5</xref> and <xref rid="sup1" ref-type="supplementary-material">S6</xref> show a more fine-grained comparison between methods. In general, we find that computational doublet prediction performs best on the <monospace>hg-mm</monospace> dataset, followed by <monospace>demuxlet</monospace> and <monospace>ch_pbmc</monospace>, while it is most challenging for the <monospace>ch_cell-lines</monospace> data. Within each dataset there is appreciable spread of performance between the different methods, with most methods consistently outperforming baseline approaches. From <xref rid="btz698-T4" ref-type="table">Table 4</xref> we see that, on average, <monospace>dblFinder</monospace>, <monospace>dblDetection</monospace> and our <monospace>hybrid</monospace> approach perform best. However, this order varies between datasets; for example on the <monospace>demu</monospace> dataset, <monospace>bcds</monospace> performs slightly better than <monospace>hybrid</monospace> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>). On the <monospace>ch_pbmc</monospace> dataset, the baseline classifier <monospace>features</monospace> does better than on other datasets, outperforming <monospace>cxds</monospace>, <monospace>scrublet</monospace> and <monospace>dblCells</monospace>. In general, library size and number of features identify doublets reasonably well (AUCs <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mo>≥</mml:mo></mml:math></inline-formula> 78%, with the exception of the <monospace>ch_cell-lines</monospace> dataset), which motivated us to further explore the effect of library size on the performance of computational doublet annotation.</p>
      <sec>
        <title>3.3.1 Doublet annotation performance stratified by library size</title>
        <p>For each dataset, we divided cells into equal-sized bins according to library size, so that the first bin contains cells with library sizes between the 0% and 10% quantile, the second bin cells between the 10% and 20% quantile, and so on. We then assessed annotation performance for all computational methods in each bin for each dataset separately. Results for <monospace>demuxlet</monospace> and <monospace>ch_pbmc</monospace> data are summarized in <xref rid="btz698-F2" ref-type="fig">Figure 2</xref>, the remaining two datasets can be found in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref>. For each dataset, the left panel depicts performance in terms of the area under the ROC curve (AUROC), the right panel in terms of the area under the PR curve (AUPRC). For each performance comparison, columns correspond to library size bins and rows to annotation methods.
</p>
        <fig position="float" id="btz698-F2">
          <label>Fig. 2.</label>
          <caption>
            <p>Performance of methods, stratified by library size. For two datasets, the first panel shows performance in terms of the area under the ROC curve (AUROC), while the second shows performance under the precision-recall curve (AUPRC), respectively. In each panel, the rows correspond to methods, and the columns to groups of cells in the same stratum of library sizes. The left-most column focuses on the 10% of cells with the lowest library size, the next column on the cells between the 10% and the 20% quantile and so on. In each panel methods are ranked by their average performance across quantile bins. See <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref> for the remaining two datasets</p>
          </caption>
          <graphic xlink:href="btz698f2" position="float"/>
        </fig>
        <p>We see that all approaches (baseline methods included) perform best on cells with high library size (quantile bins 5 and up), and that this trend is more pronounced for performance in terms of AUPRC, compared with AUROC. We also find that this trend applies broadly, with notable exceptions being: The <monospace>hg-mm</monospace> dataset, where most methods perform well in terms of AUROC across bins and <monospace>dblDetection</monospace> and <monospace>cxds</monospace> both also perform consistently across a wide range of bins in terms of AUPRC. The second exception is the <monospace>demuxlet</monospace> dataset, where <monospace>hybrid</monospace> and <monospace>cxds</monospace> perform suprisingly well in terms of AUROC for cells with small library sizes (first quantile bin).</p>
      </sec>
      <sec>
        <title>3.3.2 Comparison of doublet annotations between methods</title>
        <p>We also assessed similarities and differences between doublet predictions of each method. To do so, we determined the fraction of barcodes experimentally annotated as doublets and then compared the same number of doublet predictions for each method. Results are summarized in <xref rid="btz698-F3" ref-type="fig">Figure 3</xref>, where we looked at overlapping and non-overlapping doublet annotations from different methods (and experimental annotations) in the form of upset plots (<xref rid="btz698-B7" ref-type="bibr">Conway <italic toggle="yes">et al.</italic>, 2017</xref>). Doublet annotations for each method (and experimental annotations) are considered as sets of barcodes, and this type of plot depicts set intersections, where the sets participating in each intersection are indicated by a ‘combination matrix’ at the bottom. Vertical bars indicate the number of cells in each such intersection class; bars colored in gray correspond to intersections containing only barcodes not experimentally annotated as doublet [i.e. false positives (FP)], whereas bars colored in black correspond to sets containing barcodes annotated as doublets [i.e. true positives (TP); the ‘annotation’ set is participating in these intersections]. The twenty largest intersection sets are shown for each dataset.
</p>
        <fig position="float" id="btz698-F3">
          <label>Fig. 3.</label>
          <caption>
            <p>Comparison of doublet predictions. For the four datasets (panels), we show upset plots (<xref rid="btz698-B7" ref-type="bibr">Conway <italic toggle="yes">et al.</italic>, 2017</xref>) comparing doublet predictions for nine prediction methods (including baseline methods) with annotated doublet cells. Bars showing the size of intersections containing experimentally annotated doublets (termed ‘annotation’) are in black, bars showing intersections without experimentally annotated doublets are in gray. We show the 20 largest intersection sets. For <monospace>demuxlet</monospace>, <monospace>ch_pbmc</monospace> and <monospace>ch_cell-lines</monospace> the set of doublets that gets missed by all prediction methods (i.e. consistent false negatives) is ranked number six, three and three in terms of size, respectively</p>
          </caption>
          <graphic xlink:href="btz698f3" position="float"/>
        </fig>
        <p>We find that in each dataset (except <monospace>hg-mm</monospace>) there is a substantial number of experimentally annotated doublet cells that none of the computational annotation approaches recovers (black bars corresponding to the ‘annotation only’ intersection). The <monospace>cxds</monospace>, <monospace>scrublet</monospace> and <monospace>dblCells</monospace> methods often have a fairly large amount of FP predictions that are unique to the respective methods, as do <monospace>libsize</monospace> and/or <monospace>features</monospace>. While we note these differences, we also see that TP predictions are typically shared by many methods. In fact, with the exception of the <monospace>scrublet</monospace>-specific TP predictions in the <monospace>ch_pbmc</monospace> data, all TP intersections have consistent predictions from at least four methods. That is, we observe better agreement between methods in terms of TP predictions as compared with FP predictions.</p>
        <p>Further on, we compared the library size of cells, stratified by their annotation classes [TP, true negative (TN), FP and false negative (FN) predictions] for each method and dataset. Results are summarized in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S2</xref>. We see that for some methods (<monospace>cxds, bcds, hybrid, dblDetection, dblFinder</monospace>) FP predictions tend to have higher library size compared with FN predictions, often comparable to TP predictions (similar to what <xref rid="btz698-B25" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic>, 2019a</xref> observe for <monospace>dblFinder</monospace>). We also find that this trend can vary for the same method between datasets (e.g. <monospace>cxds</monospace> has this trend in all datasets except <monospace>ch_pbmc</monospace>, and <monospace>dblFinder</monospace> has it in all datasets except <monospace>hg-mm</monospace>). This trend is markedly less pronounced in <monospace>scrublet</monospace> and <monospace>dblCells</monospace>.</p>
        <p>Finally, the <monospace>ch_cell-lines</monospace> dataset contains experimental annotation about whether a doublet is homotypic (from the same cell line) versus heterotypic. We used this to quantify the enrichment of TP predictions for heterotypic doublets across methods. Results are summarized in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S5</xref>. We see that all methods (except <monospace>dblCells</monospace>) are significantly enriched for heterotypic doublets, with enrichment being most extreme for <monospace>scrublet</monospace> and <monospace>dblDetection</monospace> (odds ratio &gt; 6), present for the remaining methods (odds ratios between three and four) and absent for the baseline methods (odds ratios of 1.2 and 0.98 for <monospace>features</monospace> and <monospace>libsize</monospace>, respectively). Next, we visually compared doublet annotations across methods and datasets.</p>
      </sec>
      <sec>
        <title>3.3.3 Visual comparison of annotated doublets</title>
        <p>We visually compared doublet predictions. <xref rid="btz698-F4" ref-type="fig">Figure 4</xref> depicts that for the <monospace>demuxlet</monospace> data, whereas <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref> holds results for all four datasets. In <xref rid="btz698-F4" ref-type="fig">Figure 4</xref>, columns correspond to computational annotation methods and the first row shows doublet scores with darker colors representing higher scores (i.e. more doublet-like barcodes); the second, third and fourth rows show TP, FP and FN predictions, respectively. The relative density for each type of prediction is indicated in color (TP: green, FP: red, FN: blue). As before, we choose method-specific cutoffs such that the number of predicted doublets matches the number of experimentally annotated doublets.
</p>
        <fig position="float" id="btz698-F4">
          <label>Fig. 4.</label>
          <caption>
            <p>Visual comparison of doublet predictions for the <monospace>demuxlet</monospace> dataset. For nine computational doublet annotation methods (columns) cells are shown in a two-dimensional tSNE projection. The first row depicts all cells, shaded by the rank of the respective doublet prediction score. The second, third and fourth rows show true positive (TP, green), false positive (FP, red) and false negative (FN, blue) predictions. Shading reflects the relative density in each row, cells are shown in black</p>
          </caption>
          <graphic xlink:href="btz698f4" position="float"/>
        </fig>
        <p>For <xref rid="btz698-F4" ref-type="fig">Figure 4</xref> (the <monospace>demuxlet</monospace> data), we observe clearly visible differences in terms of TP, FP and FN density for all methods. We see FN predictions are more concentrated in the first five columns and more heterogenous in the other methods. This coincides with higher FP concentration for the baseline methods and <monospace>cxds</monospace>, but not for <monospace>dblCells</monospace> and <monospace>scrublet</monospace>. For the <monospace>hg-mm</monospace> data, where computational annotations are mostly correct (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>), we see that TP and FN predictions are highly concentrated (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref>). However, we can still make out interesting differences between the methods in terms of where their FP predictions fall. <monospace>dblDetection</monospace>, <monospace>features</monospace> and <monospace>libsize</monospace> have FP predictions in similar areas for one type of cells pretty much exclusively, <monospace>scrublet</monospace> and <monospace>dblFinder</monospace> predict false positives more predominantly in the other cell type, while <monospace>hybrid</monospace> and <monospace>bcds</monospace> have FP predictions in both types of cells. For the <monospace>ch_cell-lines</monospace> dataset, TP and FN predictions appear similar amongst non-baseline methods, while FP predictions appear distinct. For example, for <monospace>dblDetection</monospace> the FP density is highest in two of the four cell types (somewhat similar to the baseline methods), while for other methods FP predictions appear more broadly distributed. For the <monospace>ch_pbmc</monospace> dataset, we observe the biggest difference in terms of FP density between the two baseline methods and the rest.</p>
        <p>Overall, we observe appreciable variability between doublet prediction methods, including the top three performers in <xref rid="btz698-T4" ref-type="table">Table 4</xref>, <monospace>dblFinder</monospace>, <monospace>hybrid</monospace> and <monospace>dblDetection</monospace>. This may suggest that none of the methods are close to optimal, and that an approach combining their respective strengths might further improve doublet annotation.</p>
      </sec>
      <sec>
        <title>3.3.4 Running time comparison</title>
        <p>We measured running times of the different methods we compare, and <xref rid="btz698-T3" ref-type="table">Table 3</xref> summarizes the results. We find that <monospace>cxds</monospace>, <monospace>bcds_7</monospace> (where we do not perform cross validation, see Section 2) and <monospace>bcds</monospace> are able to annotate &gt;10k cells in tens of seconds or on the order of a minute, while other methods take significantly longer. There is a distinct gap between ‘fast methods’, comprising the tools we propose and <monospace>scrublet</monospace> and the rest. We note that computational doublet annotation can be performed for each chip/batch separately, and therefore we did not assess larger numbers of barcodes.</p>
      </sec>
      <sec>
        <title>3.3.5 Comparison with dblDecon</title>
        <p><monospace>dblDecon</monospace> (<xref rid="btz698-B9" ref-type="bibr">DePasquale <italic toggle="yes">et al.</italic>, 2018</xref>) does not provide a doublet score, and therefore we could not include it in the previous analyses. To be able to still include it in our study, we applied it to all four datasets and generated doublet predictions. For the <monospace>hg-mm</monospace> dataset the method failed to run through, and therefore we excluded it from this analysis. For the three remaining datasets and other tools in the comparison, we then generated the same number of annotated doublets as <monospace>dblDecon</monospace> by choosing appropriate score thresholds. Surprisingly, we find that <monospace>dblDecon</monospace> does not perform well in this comparison, even though it determined the number of positive doublet calls for all methods (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S6</xref>). We also see a wide range of precision and sensitivity values across methods, while specificities are high due to the large amount of true negatives in all datasets.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>We have introduced single cell doublet scoring, <monospace>scds</monospace>, encompassing three methods (<monospace>cxds</monospace>, <monospace>bcds</monospace> and <monospace>hybrid</monospace>) for the <italic toggle="yes">in silico</italic> annotation of doublets in scRNA-seq data. We applied them to four datasets with experimental doublet annotations, and they all outperform baseline approaches. <monospace>cxds</monospace> is based on co-expression of gene pairs, and it is quite different from current approaches, because it does not utilize artificially generated doublets and it works on a binarized absence/presence version of the RNA expression data. It features fast running times and provides users the opportunity to investigate pairs of genes driving doublet predictions (Sections 2 and 3). Binary classification based doublet scoring, <monospace>bcds</monospace>, is more similar to established methods and utilizes artificially generated doublets. However, in contrast to other tools (see Section 1 for short descriptions), it does not make use of dimension reduction techniques, nor does it employ nearest neighbors for doublet scoring. Finally, <monospace>hybrid</monospace> is a combination of <monospace>cxds</monospace> and <monospace>bcds</monospace> that performs better than either method alone. In summary, our approaches are complementary to existing tools and work well for annotating doublets in scRNA-seq data.</p>
    <p>We note that we do not estimate the number of doublets in a dataset, but rather score cells/barcodes and rank them from most doublet-like to least doublet-like. Therefore, our annotations are most useful when an estimate about the expected doublet rate is available (for instance, 10X Genomics provides them in their <italic toggle="yes">‘</italic><italic toggle="yes">User Guide for Chromium Single Cell 3’ Reagent Kits</italic><italic toggle="yes">’</italic>, based on the number of cells loaded on a chip), or when researchers wish to include a doublet score as only one of many factors in their decision about which cells may be excluded prior to downstream analyses. Our approaches share some conceptual limitations with other methods, which have been discussed in the literature (e.g. <xref rid="btz698-B37" ref-type="bibr">Wolock <italic toggle="yes">et al.</italic>, 2019</xref>). Specifically, successful doublet identifications require that doublets are rare, that mixtures of more than two cells are even more rare and that single cell instances of cell types in doublets are present in the data at appreciable frequency. Further on, our approaches are more sensitive towards identifying heterotypic doublets as compared with doublets comprised of two cells of the same type (also see <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S5</xref>).</p>
    <p>We also compared our methods and four existing tools that provide doublet scores using four datasets, and we find appreciable heterogeneity between computational doublet annotation methods. No tool consistently outperforms all others, and performance varies between datasets. Our tools perform well, especially when running time is a consideration. Averaged across datasets, <monospace>dblFinder</monospace>, <monospace>dblDetection</monospace> and <monospace>hybrid</monospace> are the top performing methods (<xref rid="btz698-T4" ref-type="table">Table 4</xref>). Investigating doublet predictions of each method in more detail, we find that: (i) for most datasets there is a sizable fraction of experimentally annotated doublets that is consistently missed by all methods, (ii) many correctly annotated doublets share the consensus of most methods and (iii) methods differ mostly in terms of their false positive annotations and these tend to be method-specific (i.e. typically not shared between methods). This implies that while methods differ in their doublet annotations (appreciable variability in terms of false positives), no method is yet able to recover a sizable fraction of annotated doublets (false negatives shared by all approaches). Therefore, we believe there is room to further improve computational doublet annotation. Specifically, we note that for <monospace>bcds</monospace> we used default parameters and did not really engage in parameter tuning, which could in principle lead to substantial improvements. The reason is that with only four doublet datasets available, we believe that there is some danger of inadvertent ‘information leak’ and therefore optimizing parameters may lead to over-fitting. But this concern will decrease as more (and more diverse) data with experimental doublet annotations become available.</p>
    <p>We note that results of our method comparisons necessarily depend on the datasets we used, and how they were processed. We attempted to minimize processing steps as much as possible, and we did not filter cells in addition to the original publications. We used published/provided experimental annotations, and for cell hashing (<xref rid="btz698-B34" ref-type="bibr">Stoeckius <italic toggle="yes">et al.</italic>, 2018</xref>) we followed the annotation strategy prescribed by the authors (Section 2). However, we are cognizant that alternative data processing strategies are equally reasonable and may have the potential to impact results. Further on, many analysis steps include random sampling in some way, thereby inducing a certain amount of stochasticity. Therefore, we have made the code for our analyses available (<ext-link xlink:href="https://github.com/kostkalab/scds_manuscript" ext-link-type="uri">https://github.com/kostkalab/scds_manuscript</ext-link>) and provide a docker container (<ext-link xlink:href="https://hub.docker.com/r/kostkalab/scds" ext-link-type="uri">https://hub.docker.com/r/kostkalab/scds</ext-link>) for other researchers. Finally, in our study we used experimentally annotated doublets as gold standard ignoring shortcomings of the respective experimental approaches, for example, that some are not able to identify identically barcoded doublets (<xref rid="btz698-B25" ref-type="bibr">McGinnis <italic toggle="yes">et al.</italic>, 2019a</xref>). However, in the absence of better experimental data, we feel there are little alternatives to this approach.</p>
    <p>In summary, <italic toggle="yes">in silico</italic> doublet annotation enriches single-cell RNA sequencing data and can guard against over interpretation of results. From our comparison, we find that current approaches (including ours) are able to annotate doublets more accurately than baseline methods, but also that there appears to be room for improvement as more datasets with experimental annotations become available. We introduced new light-weight methods for computational doublet annotation, which perform well in comparison to the status quo. They all feature comparably short running times, and co-expression based doublet scoring produces biologically interpretable results. Therefore, we provide researchers with new and useful tools to study and increase the value of their single-cell RNA sequencing data.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the National Institute of General Medical Sciences of the National Institutes of Health under award number R01GM115836, and by the University of Pittsburgh School of Medicine.</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btz698_Supplementary_Data</label>
      <media xlink:href="btz698_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btz698-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>AlJanahi</surname><given-names>A.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>An introduction to the analysis of single-cell RNA-sequencing data. <italic toggle="yes">Mol. Ther.</italic></article-title>  <source>Methods Clin. Dev</source>., <volume>10</volume>, <fpage>189</fpage>–<lpage>196</lpage>.</mixed-citation>
    </ref>
    <ref id="btz698-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alles</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>Cell fixation and preservation for droplet-based single-cell transcriptomics</article-title>. <source>BMC Biol</source>., <volume>15</volume>, <fpage>44.</fpage><pub-id pub-id-type="pmid">28526029</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bach</surname><given-names>K.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>Differentiation dynamics of mammary epithelial cells revealed by single-cell RNA sequencing</article-title>. <source>Nat. Commun</source>., <volume>8</volume>, <fpage>2128.</fpage><pub-id pub-id-type="pmid">29225342</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Butler</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Integrating single-cell transcriptomic data across different conditions, technologies, and species</article-title>. <source>Nat. Biotechnol</source>., <volume>36</volume>, <fpage>411.</fpage><pub-id pub-id-type="pmid">29608179</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B5">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>T.</given-names></string-name>, <string-name><surname>Guestrin</surname><given-names>C.</given-names></string-name></person-group> (<year>2016</year>) <part-title>XGBoost: a scalable tree boosting system</part-title>. In: <source>Proceedings of the 22nd ACM SIGKDD International Conference on Knowledge Discovery and Data Mining, KDD ’16</source>. 
<publisher-name>ACM</publisher-name>, 
<publisher-loc>NY, USA</publisher-loc>, pp. <fpage>785</fpage>–<lpage>794</lpage>.</mixed-citation>
    </ref>
    <ref id="btz698-B6">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <italic toggle="yes">xgboost: Extreme Gradient Boosting</italic>. R package version 0.81.0.1.</mixed-citation>
    </ref>
    <ref id="btz698-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Conway</surname><given-names>J.R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>UpSetR: an R package for the visualization of intersecting sets and their properties</article-title>. <source>Bioinformatics (Oxford, England)</source>, <volume>33</volume>, <fpage>2938</fpage>–<lpage>2940</lpage>.<pub-id pub-id-type="pmid">28645171</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B8">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Davis</surname><given-names>J.</given-names></string-name>, <string-name><surname>Goadrich</surname><given-names>M.</given-names></string-name></person-group> (<year>2006</year>) The relationship between precision-recall and ROC curves. In: <italic toggle="yes">Proceedings of the 23rd International Conference on Machine Learning</italic>. 
<publisher-name>ACM</publisher-name>, 
<publisher-loc>Pittsburgh, Pennsylvania</publisher-loc>, pp. <fpage>233</fpage>–<lpage>240</lpage>.</mixed-citation>
    </ref>
    <ref id="btz698-B9">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>DePasquale</surname><given-names>E.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) DoubletDecon: cell-state aware removal of single-cell RNA-seq doublets. Cold Spring Harbor Laboratory, p.364810, bioRxiv.</mixed-citation>
    </ref>
    <ref id="btz698-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Durinck</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2009</year>) 
<article-title>Mapping identifiers for the integration of genomic datasets with the R/Bioconductor package biomaRt</article-title>. <source>Nat. Protocols</source>, <volume>4</volume>, <fpage>1184.</fpage><pub-id pub-id-type="pmid">19617889</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B11">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Erichson</surname><given-names>N.B.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) Randomized matrix decompositions using R. <italic toggle="yes">arXiv preprint arXiv: 1608.02148.</italic></mixed-citation>
    </ref>
    <ref id="btz698-B12">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Gehring</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) Highly multiplexed single-cell RNA-seq for defining cell population and transcriptional spaces. p. 315333, bioRxiv.</mixed-citation>
    </ref>
    <ref id="btz698-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gong</surname><given-names>T.</given-names></string-name>, <string-name><surname>Szustakowski</surname><given-names>J.D.</given-names></string-name></person-group> (<year>2013</year>) 
<article-title>DeconRNASeq: a statistical framework for deconvolution of heterogeneous tissue samples based on mRNA-Seq data</article-title>. <source>Bioinformatics (Oxford, England)</source>, <volume>29</volume>, <fpage>1083</fpage>–<lpage>1085</lpage>.<pub-id pub-id-type="pmid">23428642</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B14">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Hastie</surname><given-names>T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2001</year>) <source>The Elements of Statistical Learning, Data Mining, Inference, and Prediction</source>. 
<publisher-loc>New York</publisher-loc>, corrected printing, <edition>2003 edition</edition>.</mixed-citation>
    </ref>
    <ref id="btz698-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ibarra-Soria</surname><given-names>X.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Defining murine organogenesis at single-cell resolution reveals a role for the leukotriene pathway in regulating blood progenitor formation</article-title>. <source>Nat. Cell Biol</source>., <volume>20</volume>, <fpage>127</fpage>–<lpage>134</lpage>.<pub-id pub-id-type="pmid">29311656</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kang</surname><given-names>H.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Multiplexed droplet single-cell RNA-sequencing using natural genetic variation</article-title>. <source>Nat. Biotechnol</source>., <volume>36</volume>, <fpage>89</fpage>–<lpage>94</lpage>.<pub-id pub-id-type="pmid">29227470</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Keilwagen</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) 
<article-title>Area under precision-recall curves for weighted and unweighted data</article-title>. <source>PLoS One</source>, <volume>9</volume>, <fpage>e92209.</fpage><pub-id pub-id-type="pmid">24651729</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B18">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kiselev</surname><given-names>V.Y.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) 
<article-title>Challenges in unsupervised clustering of single-cell RNA-seq data</article-title>. <source>Nat. Rev. Genet</source>., <volume>20</volume>, <fpage>273</fpage>–<lpage>282</lpage>.<pub-id pub-id-type="pmid">30617341</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Klein</surname><given-names>A.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) 
<article-title>Droplet barcoding for single-cell transcriptomics applied to embryonic stem cells</article-title>. <source>Cell</source>, <volume>161</volume>, <fpage>1187</fpage>–<lpage>1201</lpage>.<pub-id pub-id-type="pmid">26000487</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Krentz</surname><given-names>N.A.J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Single-cell transcriptome profiling of mouse and hESC-derived pancreatic progenitors</article-title>. <source>Stem Cell Rep</source>., <volume>11</volume>, <fpage>1551</fpage>–<lpage>1564</lpage>.</mixed-citation>
    </ref>
    <ref id="btz698-B21">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Krijthe</surname><given-names>J.H.</given-names></string-name></person-group> (<year>2015</year>) <italic toggle="yes">Rtsne: T-distributed stochastic neighbor embedding using barnes-hut implementation</italic>. R package version 0.15.</mixed-citation>
    </ref>
    <ref id="btz698-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Levine</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) 
<article-title>Data-driven phenotypic dissection of AML reveals progenitor-like cells that correlate with prognosis</article-title>. <source>Cell</source>, <volume>162</volume>, <fpage>184</fpage>–<lpage>197</lpage>.<pub-id pub-id-type="pmid">26095251</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>H.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>Reference component analysis of single-cell transcriptomes elucidates cellular heterogeneity in human colorectal tumors</article-title>. <source>Nat. Genet</source>., <volume>49</volume>, <fpage>708</fpage>–<lpage>718</lpage>.<pub-id pub-id-type="pmid">28319088</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B24">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lun</surname><given-names>A.T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) 
<article-title>A step-by-step workflow for low-level analysis of single-cell RNA-seq data with Bioconductor</article-title>. <source>F1000 Res</source>., <volume>5</volume>, <fpage>2122.</fpage></mixed-citation>
    </ref>
    <ref id="btz698-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McGinnis</surname><given-names>C.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019a</year>) 
<article-title>DoubletFinder: doublet detection in single-cell RNA sequencing data using artificial nearest neighbors</article-title>. <source>Cell Syst</source>., <volume>8</volume>, <fpage>329</fpage>–<lpage>337.e4</lpage>.<pub-id pub-id-type="pmid">30954475</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McGinnis</surname><given-names>C.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019b</year>) 
<article-title>MULTI-seq: sample multiplexing for single-cell RNA sequencing using lipid-tagged indices</article-title>. <source>Nat. Methods</source>, <volume>16</volume>, <fpage>1</fpage>.<pub-id pub-id-type="pmid">30573832</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B27">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Potter</surname><given-names>S.S.</given-names></string-name></person-group> (<year>2018</year>) 
<article-title>Single-cell RNA sequencing for the study of development, physiology and disease</article-title>. <source>Nat. Rev. Nephrol</source>., <volume>14</volume>, <fpage>479</fpage>–<lpage>492</lpage>.<pub-id pub-id-type="pmid">29789704</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Proserpio</surname><given-names>V.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) 
<article-title>Single-cell analysis of CD4+ T-cell differentiation reveals three major cell states and progressive acceleration of proliferation</article-title>. <source>Genome Biol</source>., <volume>17</volume>, <fpage>103.</fpage><pub-id pub-id-type="pmid">27176874</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B29">
      <mixed-citation publication-type="book">R Core Team. (<year>2018</year>) <source>R: A Language and Environment for Statistical Computing</source>. 
<publisher-name>R Foundation for Statistical Computing</publisher-name>, 
<publisher-loc>Vienna, Austria</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="btz698-B30">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Robin</surname><given-names>X.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) 
<article-title>pROC: an open-source package for R and S+ to analyze and compare ROC curves</article-title>. <source>BMC Bioinformatics</source>, <volume>12</volume>, <fpage>77.</fpage><pub-id pub-id-type="pmid">21414208</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rosenberg</surname><given-names>A.B.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Single-cell profiling of the developing mouse brain and spinal cord with split-pool barcoding</article-title>. <source>Science (New York, NY)</source>, <volume>360</volume>, <fpage>176</fpage>–<lpage>182</lpage>.</mixed-citation>
    </ref>
    <ref id="btz698-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Segerstolpe</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) 
<article-title>Single-cell transcriptome profiling of human pancreatic islets in health and type 2 diabetes</article-title>. <source>Cell Metab</source>., <volume>24</volume>, <fpage>593</fpage>–<lpage>607</lpage>.<pub-id pub-id-type="pmid">27667667</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stegle</surname><given-names>O.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) 
<article-title>Computational and analytical challenges in single-cell transcriptomics</article-title>. <source>Nat. Rev. Genet</source>., <volume>16</volume>, <fpage>133</fpage>–<lpage>145</lpage>.<pub-id pub-id-type="pmid">25628217</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B34">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stoeckius</surname><given-names>M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Cell Hashing with barcoded antibodies enables multiplexing and doublet detection for single cell genomics</article-title>. <source>Genome Biol</source>., <volume>19</volume>, <fpage>224.</fpage><pub-id pub-id-type="pmid">30567574</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vallejos</surname><given-names>C.A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>Normalizing single-cell RNA sequencing data: challenges and opportunities</article-title>. <source>Nat. Methods</source>, <volume>14</volume>, <fpage>565</fpage>–<lpage>571</lpage>.<pub-id pub-id-type="pmid">28504683</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>Y.J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) 
<article-title>Single-cell transcriptomics of the human endocrine pancreas</article-title>. <source>Diabetes</source>, <volume>65</volume>, <fpage>3028</fpage>–<lpage>3038</lpage>.<pub-id pub-id-type="pmid">27364731</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wolock</surname><given-names>S.L.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) 
<article-title>Scrublet: computational identification of cell doublets in single-cell transcriptomic data</article-title>. <source>Cell Syst</source>., <volume>8</volume>, <fpage>281.</fpage> (Cell 167 2016).<pub-id pub-id-type="pmid">30954476</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zerbino</surname><given-names>D.R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) 
<article-title>Ensembl 2018</article-title>. <source>Nucleic Acids Res</source>., <volume>46</volume>, <fpage>D754.</fpage><pub-id pub-id-type="pmid">29155950</pub-id></mixed-citation>
    </ref>
    <ref id="btz698-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ziegenhain</surname><given-names>C.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) 
<article-title>Comparative analysis of single-cell RNA sequencing methods</article-title>. <source>Mol. Cell</source>, <volume>65</volume>, <fpage>631</fpage>–<lpage>643.e4</lpage>.<pub-id pub-id-type="pmid">28212749</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

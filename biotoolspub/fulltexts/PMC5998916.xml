<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5998916</article-id>
    <article-id pub-id-type="pmid">29745861</article-id>
    <article-id pub-id-type="publisher-id">2130</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-018-2130-5</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Computing the family-free DCJ similarity</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Rubert</surname>
          <given-names>Diego P.</given-names>
        </name>
        <address>
          <email>diego@facom.ufms.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Hoshino</surname>
          <given-names>Edna A.</given-names>
        </name>
        <address>
          <email>eah@facom.ufms.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Braga</surname>
          <given-names>Marília D. V.</given-names>
        </name>
        <address>
          <email>marilia.braga@uni-bielefeld.de</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Stoye</surname>
          <given-names>Jens</given-names>
        </name>
        <address>
          <email>jens.stoye@uni-bielefeld.de</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Martinez</surname>
          <given-names>Fábio V.</given-names>
        </name>
        <address>
          <email>fhvm@facom.ufms.br</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 2163 5978</institution-id><institution-id institution-id-type="GRID">grid.412352.3</institution-id><institution>Faculdade de Computação, Universidade Federal de Mato Grosso do Sul, </institution></institution-wrap>Campo Grande, MS Brazil </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0001 0944 9128</institution-id><institution-id institution-id-type="GRID">grid.7491.b</institution-id><institution>Faculty of Technology and Center for Biotechnology (CeBiTec), Bielefeld University, </institution></institution-wrap>Bielefeld, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>8</day>
      <month>5</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>8</day>
      <month>5</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2018</year>
    </pub-date>
    <volume>19</volume>
    <issue>Suppl 6</issue>
    <issue-sponsor>Publication of this supplement has not been supported by sponsorship. Information about the source of funding for publication charges can be found in the individual articles. The articles have undergone the journal's standard peer review process for supplements. JM is a co-author of one of the papers published in this supplement, review of his paper was organised by LN.</issue-sponsor>
    <elocation-id>152</elocation-id>
    <permissions>
      <copyright-statement>© The Author(s) 2018</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver(<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>The genomic similarity is a large-scale measure for comparing two given genomes. In this work we study the (NP-hard) problem of computing the genomic similarity under the DCJ model in a setting that does not assume that the genes of the compared genomes are grouped into gene families. This problem is called family-free DCJ similarity.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We propose an exact ILP algorithm to solve the family-free DCJ similarity problem, then we show its APX-hardness and present four combinatorial heuristics with computational experiments comparing their results to the ILP.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>We show that the family-free DCJ similarity can be computed in reasonable time, although for larger genomes it is necessary to resort to heuristics. This provides a basis for further studies on the applicability and model refinement of family-free whole genome similarity measures.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (10.1186/s12859-018-2130-5) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Genome rearrangement</kwd>
      <kwd>Double-cut-and-join</kwd>
      <kwd>Family-free genomic similarity</kwd>
    </kwd-group>
    <conference>
      <conf-name>RECOMB-CG - 2017 : The Fifteenth RECOMB Comparative Genomics Satellite Conference</conf-name>
      <conf-acronym>RECOMB-CG 2017</conf-acronym>
      <conf-loc>Barcelona, Spain</conf-loc>
      <conf-date>04-06 October 2017</conf-date>
    </conference>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2018</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>A central question in comparative genomics is the elucidation of similarities and differences between genomes. Local and global measures can be employed. A popular set of global measures is based on the number of genome rearrangements necessary to transform one genome into another one [<xref ref-type="bibr" rid="CR1">1</xref>]. Genome rearrangements are large scale mutations, changing the number of chromosomes and/or the positions and orientations of DNA segments. Examples of such rearrangements are inversions, translocations, fusions, and fissions.</p>
    <p>As a first step before such a comparison can be performed, some preprocessing is required. The most common method, adopted for about 20 years [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], is to base the analysis on the order of conserved syntenic DNA segments across different genomes and group homologous segments into <italic>families</italic>. This setting is said to be <italic>family-based</italic>. Without duplicate segments, i.e., with the additional restriction that at most one representative of each family occurs in any genome, several polynomial time algorithms have been proposed to compute genomic distances and similarities [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. However, when duplicates are allowed, problems become more intricate and many presented approaches are NP-hard [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR8">8</xref>–<xref ref-type="bibr" rid="CR13">13</xref>].</p>
    <p>Although family information can be obtained by accessing public databases or by direct computing, data can be incorrect, and inaccurate families could be providing support to erroneous assumptions of homology between segments [<xref ref-type="bibr" rid="CR14">14</xref>]. Thus, it is not always possible to classify each segment unambiguously into a single family, and an alternative to the family-based setting was proposed recently [<xref ref-type="bibr" rid="CR15">15</xref>]. It consists of studying genome rearrangements without prior family assignment, by directly accessing the pairwise similarities between DNA segments of the compared genomes. This approach is said to be <italic>family-free</italic> (FF).</p>
    <p>The <italic>double cut and join</italic> (DCJ) operation, that consists of cutting a genome in two distinct positions and joining the four resultant open ends in a different way, subsumes most large-scale rearrangements that modify genomes [<xref ref-type="bibr" rid="CR5">5</xref>]. In this work we are interested in the problem of computing the overall similarity of two given genomes in a family-free setting under the DCJ model. This problem is called FFDCJ similarity, and in some contexts it may be more powerful than a distance measure, where it is known that the parsimony assumption holds only for closely related genomes [<xref ref-type="bibr" rid="CR16">16</xref>], while a well-designed similarity measure may allow more flexibility. As shown in [<xref ref-type="bibr" rid="CR17">17</xref>], the complexity of computing the FFDCJ similarity was proven to be NP-hard, while the FFDCJ distance was already proven to be APX-hard. In the remainder of this paper, after preliminaries and a formal definition of the FFDCJ similarity problem, we first present an exact ILP algorithm to solve it. We then show the APX-hardness of the FFDCJ similarity problem and present four combinatorial heuristics, with computational experiments comparing their results to the ILP for datasets simulated by a framework for genome evolution.</p>
    <p>A preliminary version of this paper appeared in the Proceedings of the 15th RECOMB Satellite Workshop on Comparative Genomics (RECOMB-CG 2017) [<xref ref-type="bibr" rid="CR18">18</xref>].</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <p>Each segment (often called <italic>gene</italic>) <italic>g</italic> of a genome is an oriented DNA fragment and its two distinct <italic>extremities</italic> are called <italic>tail</italic> and <italic>head</italic>, denoted by <italic>g</italic><sup><italic>t</italic></sup> and <italic>g</italic><sup><italic>h</italic></sup>, respectively. A genome is composed of a set of chromosomes, each of which can be circular or linear and is a sequence of genes. Each one of the two extremities of a linear chromosome is called a <italic>telomere</italic>, represented by the symbol ∘. An <italic>adjacency</italic> in a chromosome is then either the extremity of a gene that is adjacent to a telomere, or a pair of consecutive gene extremities. As an example, observe that the adjacencies 5<sup><italic>h</italic></sup>, 5<sup><italic>t</italic></sup>2<sup><italic>t</italic></sup>, 2<sup><italic>h</italic></sup>4<sup><italic>t</italic></sup>, 4<sup><italic>h</italic></sup>3<sup><italic>t</italic></sup>, 3<sup><italic>h</italic></sup>6<sup><italic>t</italic></sup>, 6<sup><italic>h</italic></sup>1<sup><italic>h</italic></sup> and 1<sup><italic>t</italic></sup> can define a linear chromosome. Another representation of the same linear chromosome, flanked by parentheses for the sake of clarity, would be (∘ −5 2 4 3 6 −1 ∘), in which the genes preceded by the minus sign (−) have reverse orientation.</p>
    <p>A <italic>double cut and join</italic> or DCJ operation applied to a genome <italic>A</italic> is the operation that cuts two adjacencies of <italic>A</italic> and joins the separated extremities in a different way, creating two new adjacencies. For example, a DCJ acting on two adjacencies <italic>pq</italic> and <italic>rs</italic> would create either the adjacencies <italic>pr</italic> and <italic>qs</italic>, or the adjacencies <italic>ps</italic> and <italic>qr</italic> (this could correspond to an inversion, a reciprocal translocation between two linear chromosomes, a fusion of two circular chromosomes, or an excision of a circular chromosome). In the same way, a DCJ acting on two adjacencies <italic>pq</italic> and <italic>r</italic> would create either <italic>pr</italic> and <italic>q</italic>, or <italic>p</italic> and <italic>qr</italic> (in this case, the operation could correspond to an inversion, a translocation, or a fusion of a circular and a linear chromosome). For the cases described so far we can notice that for each pair of cuts there are two possibilities of joining. There are two special cases of a DCJ operation, in which there is only one possibility of joining. The first is a DCJ acting on two adjacencies <italic>p</italic> and <italic>q</italic>, that would create only one new adjacency <italic>pq</italic> (that could represent a circularization of one or a fusion of two linear chromosomes). Conversely, a DCJ can act on only one adjacency <italic>pq</italic> and create the two adjacencies <italic>p</italic> and <italic>q</italic> (representing a linearization of a circular or a fission of a linear chromosome).</p>
    <p>In the remainder of this section we extend the notation introduced in [<xref ref-type="bibr" rid="CR17">17</xref>]. In general we consider the comparison of two distinct genomes, that will be denoted by <italic>A</italic> and <italic>B</italic>. Respectively, we denote by <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A}$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq1.gif"/></alternatives></inline-formula> the set of genes in genome <italic>A</italic>, and by <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {B}$\end{document}</tex-math><mml:math id="M4"><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq2.gif"/></alternatives></inline-formula> the set of genes in genome <italic>B</italic>.</p>
    <sec id="Sec3">
      <title>Adjacency graph and family-based DCJ similarity</title>
      <p>In most versions of the family-based setting the two genomes <italic>A</italic> and <italic>B</italic> have the same content, that is, <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathcal {A} = \mathcal {B}$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="script">A</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq3.gif"/></alternatives></inline-formula>. When in addition there are no duplicates, that is, when there is exactly one representative of each family in each genome, we can easily build the <italic>adjacency graph</italic> of genomes <italic>A</italic> and <italic>B</italic>, denoted by <italic>AG</italic>(<italic>A,B</italic>) [<xref ref-type="bibr" rid="CR6">6</xref>]. It is a bipartite multigraph such that each partition corresponds to the set of adjacencies of one of the two input genomes, and an edge connects the same extremities of genes in both genomes. In other words, there is a one-to-one correspondence between the set of edges in <italic>AG</italic>(<italic>A,B</italic>) and the set of gene extremities. Since the graph is bipartite and vertices have degree one or two, the adjacency graph is a collection of paths and even cycles. An example of an adjacency graph is presented in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.
<fig id="Fig1"><label>Fig. 1</label><caption><p>The adjacency graph for the genomes <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$A =\left \{\left (\circ \;{-5}\;2\;4\;3\;6\;{-1}\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M8"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>5</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>2</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>4</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>3</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>6</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>1</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq4.gif"/></alternatives></inline-formula> and <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$B =\left \{\left (\circ \;1\;2\;4\;{-3}\;6\;5\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M10"><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>1</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>2</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>4</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>3</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>6</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>5</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq5.gif"/></alternatives></inline-formula></p></caption><graphic xlink:href="12859_2018_2130_Fig1_HTML" id="MO1"/></fig></p>
      <p>It is well known that a DCJ operation that modifies <italic>AG</italic>(<italic>A,B</italic>) by increasing either the number of even cycles by one or the number of odd paths by two decreases the DCJ distance between genomes <italic>A</italic> and <italic>B</italic> [<xref ref-type="bibr" rid="CR6">6</xref>]. This type of DCJ operation is said to be <italic>optimal</italic>. Conversely, if we are interested in a DCJ similarity measure between <italic>A</italic> and <italic>B</italic>, rather than a distance measure, then it should be increased by such an optimal DCJ operation. This suggests that a formula for a DCJ similarity between two genomes should correlate to the number of connected components (in the following just <italic>components</italic>) of the corresponding adjacency graph.</p>
      <p>When the genomes <italic>A</italic> and <italic>B</italic> are identical, their corresponding adjacency graph is a collection of <italic>c</italic> 2-cycles and <italic>b</italic> 1-paths [<xref ref-type="bibr" rid="CR6">6</xref>], so that <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$c + \frac {b}{2} = |\protect \mathcal {A}|=|\protect \mathcal {B}|$\end{document}</tex-math><mml:math id="M12"><mml:mi>c</mml:mi><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo>|</mml:mo><mml:mo>=</mml:mo><mml:mo>|</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq6.gif"/></alternatives></inline-formula>. This should be the upper bound of our DCJ similarity measure, and the contribution of each component in the formula should be upper bounded by 1.</p>
      <p>We know that an optimal operation can always be applied to adjacencies that belong to one of the two genomes and to one single component of <italic>AG</italic>(<italic>A,B</italic>), until the graph becomes a collection of 2-cycles and 1-paths. In other words, each component of the graph can be <italic>sorted</italic>, that is, converted into a collection of 2-cycles and 1-paths independently of the other components. Furthermore, it is known that each of the following components – an even cycle with 2<italic>d</italic>+2 edges, or an odd path with 2<italic>d</italic>+1 edges, or an even path with 2<italic>d</italic> edges – can be sorted with exactly <italic>d</italic> optimal DCJ operations. Therefore, for the same <italic>d</italic>, components with more edges should actually have higher contributions in the DCJ similarity formula.</p>
      <p>With all these considerations, the contribution of each component <italic>C</italic> in the formula is then defined to be its <italic>normalized length</italic><inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\widehat {\ell }(C)$\end{document}</tex-math><mml:math id="M14"><mml:mover accent="false"><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq7.gif"/></alternatives></inline-formula>: 
<disp-formula id="Equa"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} \widehat{\ell}(C) =\left\{ \begin{array}{ll} \frac{|C|}{|C|} = 1\:, &amp; \text{if}\; C\; \text{is a cycle}, \\ \frac{|C|}{|C|+1}\:, &amp; \text{if}\; C\; \text{is an odd path}, \\ \frac{|C|}{|C|+2}\:, &amp; \text{if}\; C\; \text{is an even path}. \end{array}\right. \end{array} $$ \end{document}</tex-math><mml:math id="M16"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:mover accent="false"><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>C</mml:mi><mml:mspace width="2.77626pt"/><mml:mtext>is a cycle</mml:mtext><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>C</mml:mi><mml:mspace width="2.77626pt"/><mml:mtext>is an odd path</mml:mtext><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>C</mml:mi><mml:mspace width="2.77626pt"/><mml:mtext>is an even path</mml:mtext><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2130_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Let be the set of all components in <italic>AG</italic>(<italic>A,B</italic>). The formula for the family-based DCJ similarity is the sum of their normalized lengths: 
<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \mathrm{s}_{\textup{\textsc{dcj}}}(A,B) = \sum_{C \in \cal{C}}\widehat{\ell}(C).  $$ \end{document}</tex-math><mml:math id="M18"><mml:msub><mml:mrow><mml:mi mathvariant="normal">s</mml:mi></mml:mrow><mml:mrow><mml:mtext mathsize="small">DCJ</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:munder><mml:mover accent="false"><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo><mml:mi>.</mml:mi></mml:math><graphic xlink:href="12859_2018_2130_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Observe that s<sub><sc>DCJ</sc></sub>(<italic>A,B</italic>) is a positive value, indeed upper bounded by <inline-formula id="IEq8"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$|\protect \mathcal {A}|$\end{document}</tex-math><mml:math id="M20"><mml:mo>|</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq8.gif"/></alternatives></inline-formula> (or, equivalently, by <inline-formula id="IEq9"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$|\protect \mathcal {B}|$\end{document}</tex-math><mml:math id="M22"><mml:mo>|</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq9.gif"/></alternatives></inline-formula>). In Fig. <xref rid="Fig1" ref-type="fig">1</xref> the DCJ similarity is <inline-formula id="IEq10"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\text {s}_{\text {\textsc {dcj}}}(A, B) = 2\cdot \frac {1}{2} + 3\cdot 1=4$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mrow><mml:mtext>s</mml:mtext></mml:mrow><mml:mrow><mml:mtext mathsize="small">DCJ</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>·</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mo>+</mml:mo><mml:mn>3</mml:mn><mml:mo>·</mml:mo><mml:mn>1</mml:mn><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq10.gif"/></alternatives></inline-formula>. The formula of Eq. <xref rid="Equ1" ref-type="">1</xref> is the family-based version of the family-free DCJ similarity defined in [<xref ref-type="bibr" rid="CR17">17</xref>], as we will see in the following subsections.</p>
    </sec>
    <sec id="Sec4">
      <title>Gene similarity graph</title>
      <p>In the family-free setting, each gene in each genome is represented by a unique (signed) symbol, thus <inline-formula id="IEq11"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A} \cap \protect \mathcal {B} = \emptyset $\end{document}</tex-math><mml:math id="M26"><mml:mi mathvariant="script">A</mml:mi><mml:mo>∩</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi><mml:mo>=</mml:mo><mml:mi>∅</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq11.gif"/></alternatives></inline-formula> and the cardinalities <inline-formula id="IEq12"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$|\mathcal {A}|$\end{document}</tex-math><mml:math id="M28"><mml:mo>|</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq12.gif"/></alternatives></inline-formula> and <inline-formula id="IEq13"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$|\mathcal {{B}}|$\end{document}</tex-math><mml:math id="M30"><mml:mo>|</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi><mml:mo>|</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq13.gif"/></alternatives></inline-formula> may be distinct. Let <italic>a</italic> be a gene in <italic>A</italic> and <italic>b</italic> be a gene in <italic>B</italic>, then their <italic>normalized gene similarity</italic> is given by some value <italic>σ</italic>(<italic>a,b</italic>) such that 0≤<italic>σ</italic>(<italic>a,b</italic>)≤1.</p>
      <p>We can represent the gene similarities between the genes of genome <italic>A</italic> and the genes of genome <italic>B</italic> with respect to <italic>σ</italic> in the so called <italic>gene similarity graph</italic> [<xref ref-type="bibr" rid="CR15">15</xref>], denoted by <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>). This is a weighted bipartite graph whose partitions <inline-formula id="IEq14"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A}$\end{document}</tex-math><mml:math id="M32"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq14.gif"/></alternatives></inline-formula> and <inline-formula id="IEq15"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {B}$\end{document}</tex-math><mml:math id="M34"><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq15.gif"/></alternatives></inline-formula> are the sets of (signed) genes in genomes <italic>A</italic> and <italic>B</italic>, respectively. Furthermore, for each pair of genes (<italic>a,b</italic>) such that <inline-formula id="IEq16"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$a \in \protect \mathcal {A}$\end{document}</tex-math><mml:math id="M36"><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq16.gif"/></alternatives></inline-formula> and <inline-formula id="IEq17"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$b \in \protect \mathcal {B}$\end{document}</tex-math><mml:math id="M38"><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq17.gif"/></alternatives></inline-formula>, if <italic>σ</italic>(<italic>a,b</italic>)&gt;0 then there is an edge <italic>e</italic> connecting <italic>a</italic> and <italic>b</italic> in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) whose weight is <italic>σ</italic>(<italic>e</italic>):=<italic>σ</italic>(<italic>a,b</italic>). An example of a gene similarity graph is given in Fig. <xref rid="Fig2" ref-type="fig">2</xref>.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Representation of a gene similarity graph <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) for two unichromosomal linear genomes <inline-formula id="IEq18"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$A =\left \{\left (\circ \;1\;2\;3\;4\;5\;6\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M40"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>1</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>2</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>3</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>4</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>5</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>6</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq18.gif"/></alternatives></inline-formula> and <inline-formula id="IEq19"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$B =\left \{\left (\circ \;7\;8\;{-9}\;{-10}\;11\;{-12}\;{-13}\;14\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M42"><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>7</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>8</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>9</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>10</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>11</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>12</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>13</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>14</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq19.gif"/></alternatives></inline-formula></p></caption><graphic xlink:href="12859_2018_2130_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec5">
      <title>Weighted adjacency graph</title>
      <p>The <italic>weighted adjacency graph</italic>
<italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) of two genomes <italic>A</italic> and <italic>B</italic> has a vertex for each adjacency in <italic>A</italic> and a vertex for each adjacency in <italic>B</italic>. For a gene <italic>a</italic> in <italic>A</italic> and a gene <italic>b</italic> in <italic>B</italic> with gene similarity <italic>σ</italic>(<italic>a,b</italic>)&gt;0 there is one edge <italic>e</italic><sup><italic>h</italic></sup> connecting the vertices containing the two heads <italic>a</italic><sup><italic>h</italic></sup> and <italic>b</italic><sup><italic>h</italic></sup> and one edge <italic>e</italic><sup><italic>t</italic></sup> connecting the vertices containing the two tails <italic>a</italic><sup><italic>t</italic></sup> and <italic>b</italic><sup><italic>t</italic></sup>. The weight of each of these edges is <inline-formula id="IEq20"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\sigma \left (e^{h}\right) = \sigma \left (e^{t}\right) = \sigma (a,b)$\end{document}</tex-math><mml:math id="M44"><mml:mi>σ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mo>(</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq20.gif"/></alternatives></inline-formula>. Differently from the simple adjacency graph, the weighted adjacency graph cannot be easily decomposed into cycles and paths, since its vertices can have degree greater than 2. As an example, the weighted adjacency graph corresponding to the gene similarity graph of Fig. <xref rid="Fig2" ref-type="fig">2</xref> is given in Fig. <xref rid="Fig3" ref-type="fig">3</xref>.
<fig id="Fig3"><label>Fig. 3</label><caption><p>The weighted adjacency graph <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) for two unichromosomal linear genomes <inline-formula id="IEq21"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$A =\left \{\left (\circ \;1\;2\;3\;4\;5\;6\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M46"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>1</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>2</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>3</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>4</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>5</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>6</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq21.gif"/></alternatives></inline-formula> and <inline-formula id="IEq22"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$B =\left \{\left (\circ \;7\;8\;{-9}\;{-10}\;11\;{-12}\;{-13}\;14\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M48"><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>7</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>8</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>9</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>10</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>11</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>12</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>13</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>14</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq22.gif"/></alternatives></inline-formula></p></caption><graphic xlink:href="12859_2018_2130_Fig3_HTML" id="MO3"/></fig></p>
      <p>We denote by <italic>w</italic>(<italic>G</italic>) the weight of a graph or subgraph <italic>G</italic>, that is given by the sum of the weights of all its edges, that is, <inline-formula id="IEq23"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$w(G) = \sum _{e \in G} \sigma (e)$\end{document}</tex-math><mml:math id="M50"><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>G</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:mi>G</mml:mi></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq23.gif"/></alternatives></inline-formula>. Observe that, for each edge <italic>e</italic>∈<italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), we have two edges of weight <italic>σ</italic>(<italic>e</italic>) in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), thus, the total weight of the weighted adjacency graph is <inline-formula id="IEq24"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$w\left (AG_{\sigma }(A,B)\right) = 2\,w\left (GS_{\sigma }(A,B)\right)$\end{document}</tex-math><mml:math id="M52"><mml:mi>w</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.3em"/><mml:mi>w</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>G</mml:mi><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq24.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="Sec6">
      <title>Reduced genomes</title>
      <p>Let <italic>A</italic> and <italic>B</italic> be two genomes and let <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) be their gene similarity graph. Now let <italic>M</italic>={<italic>e</italic><sub>1</sub>,<italic>e</italic><sub>2</sub>,…,<italic>e</italic><sub><italic>n</italic></sub>} be a matching in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) and denote by <inline-formula id="IEq25"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$w(M) = \sum _{e_{i} \in M} \sigma (e_{i})$\end{document}</tex-math><mml:math id="M54"><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:mi>M</mml:mi></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq25.gif"/></alternatives></inline-formula> the weight of <italic>M</italic>, that is the sum of its edge weights. Since the endpoints of each edge <italic>e</italic><sub><italic>i</italic></sub>=(<italic>a,b</italic>) in <italic>M</italic> are not saturated by any other edge of <italic>M</italic>, we can unambiguously define the function <italic>ℓ</italic><sup><italic>M</italic></sup>(<italic>a</italic>)=<italic>ℓ</italic><sup><italic>M</italic></sup>(<italic>b</italic>)=<italic>i</italic> to relabel each vertex in <italic>A</italic> and <italic>B</italic> [<xref ref-type="bibr" rid="CR17">17</xref>]. The <italic>reduced genome</italic>
<italic>A</italic><sup><italic>M</italic></sup> is obtained by deleting from <italic>A</italic> all genes not saturated by <italic>M</italic>, and renaming each saturated gene <italic>a</italic> to <italic>ℓ</italic><sup><italic>M</italic></sup>(<italic>a</italic>), preserving its orientation (sign). Similarly, the reduced genome <italic>B</italic><sup><italic>M</italic></sup> is obtained by deleting from <italic>B</italic> all genes that are not saturated by <italic>M</italic>, and renaming each saturated gene <italic>b</italic> to <italic>ℓ</italic><sup><italic>M</italic></sup>(<italic>b</italic>), preserving its orientation. Observe that the set of genes in <italic>A</italic><sup><italic>M</italic></sup> and in <italic>B</italic><sup><italic>M</italic></sup> is <inline-formula id="IEq26"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {G}(M) = \left \{ \ell ^{M}(g) : g \text { is saturated by the matching} ~M \right \} = \{1,2,\ldots,n\}$\end{document}</tex-math><mml:math id="M56"><mml:mi mathvariant="script">G</mml:mi><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>(</mml:mo><mml:mi>g</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo><mml:mi>g</mml:mi><mml:mtext>is saturated by the matching</mml:mtext><mml:mspace width="1em"/><mml:mi>M</mml:mi></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mo>{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>}</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq26.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="Sec7">
      <title>Weighted adjacency graph of reduced genomes</title>
      <p>Let <italic>A</italic><sup><italic>M</italic></sup> and <italic>B</italic><sup><italic>M</italic></sup> be the reduced genomes for a given matching <italic>M</italic> of <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>). The weighted adjacency graph <inline-formula id="IEq27"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M58"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq27.gif"/></alternatives></inline-formula> can be obtained from <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) by deleting all edges that are not elements of <italic>M</italic> and relabeling the adjacencies according to <italic>ℓ</italic><sup><italic>M</italic></sup>. Vertices that have no connections are then also deleted from the graph. Another way to obtain the same graph is building the adjacency graph of <italic>A</italic><sup><italic>M</italic></sup> and <italic>B</italic><sup><italic>M</italic></sup> and adding weights to the edges as follows. For each gene <italic>i</italic> in <inline-formula id="IEq28"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {G}(M)$\end{document}</tex-math><mml:math id="M60"><mml:mi mathvariant="script">G</mml:mi><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq28.gif"/></alternatives></inline-formula>, both edges <italic>i</italic><sup><italic>t</italic></sup><italic>i</italic><sup><italic>t</italic></sup> and <italic>i</italic><sup><italic>h</italic></sup><italic>i</italic><sup><italic>h</italic></sup> inherit the weight of edge <italic>e</italic><sub><italic>i</italic></sub> in <italic>M</italic>, that is, <inline-formula id="IEq29"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\sigma \left (i^{t}i^{t}\right) = \sigma \left (i^{h}i^{h}\right) = \sigma (e_{i})$\end{document}</tex-math><mml:math id="M62"><mml:mi>σ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mi>σ</mml:mi><mml:mo>(</mml:mo><mml:msub><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq29.gif"/></alternatives></inline-formula>. Consequently, the graph <inline-formula id="IEq30"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M64"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq30.gif"/></alternatives></inline-formula> is also a collection of paths and even cycles and differs from <inline-formula id="IEq31"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG\left (A^{M}, B^{M}\right)$\end{document}</tex-math><mml:math id="M66"><mml:mtext mathvariant="italic">AG</mml:mtext><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq31.gif"/></alternatives></inline-formula> only by the edge weights.</p>
      <p>For each edge <italic>e</italic>∈<italic>M</italic>, we have two edges of weight <italic>σ</italic>(<italic>e</italic>) in <inline-formula id="IEq32"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M68"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq32.gif"/></alternatives></inline-formula>, therefore <inline-formula id="IEq33"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$w\left (AG_{\sigma }\left (A^{M}, B^{M}\right)\right) = 2\,w(M)$\end{document}</tex-math><mml:math id="M70"><mml:mi>w</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mspace width="0.3em"/><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>M</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq33.gif"/></alternatives></inline-formula>. Examples of weighted adjacency graphs of reduced genomes are shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>.
<fig id="Fig4"><label>Fig. 4</label><caption><p>Considering, as in Fig. <xref rid="Fig2" ref-type="fig">2</xref>, the genomes <inline-formula id="IEq34"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$A =\left \{\left (\circ \;1\;2\;3\;4\;5\;6\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M72"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>1</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>2</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>3</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>4</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>5</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>6</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq34.gif"/></alternatives></inline-formula> and <inline-formula id="IEq35"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$B =\left \{\left (\circ \;7\;8\;{-9}\;{-10}\;11\;{-12}\;{-13}\;14\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M74"><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>7</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>8</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>9</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>10</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>11</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>12</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>13</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>14</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq35.gif"/></alternatives></inline-formula>, let <italic>M</italic><sub>1</sub> (dashed edges) and <italic>M</italic><sub>2</sub> (dotted edges) be two distinct maximal matchings in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), shown in the upper part. The two resulting weighted adjacency graphs <inline-formula id="IEq36"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M_{1}},B^{M_{1}}\right)$\end{document}</tex-math><mml:math id="M76"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq36.gif"/></alternatives></inline-formula>, that has two cycles and two even paths, and <inline-formula id="IEq37"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M_{2}},B^{M_{2}}\right)$\end{document}</tex-math><mml:math id="M78"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq37.gif"/></alternatives></inline-formula>, that has two odd paths, are shown in the lower part</p></caption><graphic xlink:href="12859_2018_2130_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec8">
      <title>The family-free DCJ similarity</title>
      <p>For a given matching <italic>M</italic> in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), a first formula for the weighted DCJ (wDCJ) similarity <italic>s</italic><sub><italic>σ</italic></sub> of the reduced genomes <italic>A</italic><sup><italic>M</italic></sup> and <italic>B</italic><sup><italic>M</italic></sup> was proposed in [<xref ref-type="bibr" rid="CR15">15</xref>] only considering the cycles of <inline-formula id="IEq38"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M80"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq38.gif"/></alternatives></inline-formula>. After that, this definition was modified and extended in [<xref ref-type="bibr" rid="CR17">17</xref>], in order to consider all components of the weighted adjacency graph.</p>
      <p>First, let the <italic>normalized weight</italic><inline-formula id="IEq39"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\widehat {w}(C)$\end{document}</tex-math><mml:math id="M82"><mml:mover accent="false"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq39.gif"/></alternatives></inline-formula> of a component <italic>C</italic> of <inline-formula id="IEq40"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M84"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq40.gif"/></alternatives></inline-formula> be: 
<disp-formula id="Equb"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} \widehat{w}(C) =\left\{ \begin{array}{ll} \frac{w(C)}{|C|}\:, &amp; \text{if}\; C\; \text{is a cycle}\:, \\ \frac{w(C)}{|C|+1}\:, &amp; \text{if}\; C\; \text{is an odd path}\:, \\ \frac{w(C)}{|C|+2}\:, &amp; \text{if}\; C\; \text{is an even path}\:. \end{array}\right. \end{array} $$ \end{document}</tex-math><mml:math id="M86"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:mover accent="false"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mfenced close="" open="{" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo></mml:mrow></mml:mfrac><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>C</mml:mi><mml:mspace width="2.77626pt"/><mml:mtext>is a cycle</mml:mtext><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>C</mml:mi><mml:mspace width="2.77626pt"/><mml:mtext>is an odd path</mml:mtext><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:mrow><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mfrac><mml:mspace width="2.22144pt"/><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext>if</mml:mtext><mml:mspace width="2.77626pt"/><mml:mi>C</mml:mi><mml:mspace width="2.77626pt"/><mml:mtext>is an even path</mml:mtext><mml:mspace width="2.22144pt"/><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2130_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Let be the set of all components in <inline-formula id="IEq41"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M88"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq41.gif"/></alternatives></inline-formula>. Then the wDCJ similarity <italic>s</italic><sub><italic>σ</italic></sub> is given by the following formula [<xref ref-type="bibr" rid="CR17">17</xref>]: 
<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ s_{\sigma}\left(A^{M},B^{M}\right) = \sum_{C \in \cal{C}}\widehat{w}(C)\:.  $$ \end{document}</tex-math><mml:math id="M90"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:munder><mml:mover accent="false"><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mo>^</mml:mo></mml:mover><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo><mml:mspace width="2.22144pt"/><mml:mi>.</mml:mi></mml:math><graphic xlink:href="12859_2018_2130_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Observe that, when the weights of all edges in <italic>M</italic> are equal to 1, this formula is equivalent to the one in Eq. <xref rid="Equ1" ref-type="">1</xref>.</p>
      <p>The goal now is to compute the family-free DCJ similarity, i.e., to find a matching in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) that maximizes <italic>s</italic><sub><italic>σ</italic></sub>. However, although <inline-formula id="IEq42"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$s_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M92"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq42.gif"/></alternatives></inline-formula> is a positive value upper bounded by |<italic>M</italic>|, the behaviour of the wDCJ similarity does not correlate with the size of the matching, since smaller matchings, that possibly discard gene assignments, can lead to higher wDCJ similarities [<xref ref-type="bibr" rid="CR17">17</xref>]. For this reason, the wDCJ similarity function is restricted to <italic>maximal matchings</italic> only, ensuring that no pair of genes with positive gene similarity score is simply discarded, even though it might decrease the overall wDCJ similarity. We then have the following optimization problem: <disp-quote><p><bold>Problem</bold><sc>FFDCJ-SIMILARITY</sc>(<italic>A,B</italic>): Given genomes <italic>A</italic> and <italic>B</italic> and their gene similarities <italic>σ</italic>, calculate their family-free DCJ similarity 
<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$ \textup{s}_{\textup{\textsc{ffdcj}}}(A, B) = \max_{M \in \mathbb{M}}\left\{ s_{\sigma}\left(A^{M},B^{M}\right) \right\},  $$ \end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mrow><mml:mtext>s</mml:mtext></mml:mrow><mml:mrow><mml:mtext mathsize="small">FFDCJ</mml:mtext></mml:mrow></mml:msub><mml:mo>(</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo>max</mml:mo></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="double-struck">𝕄</mml:mi></mml:mrow></mml:munder><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:math><graphic xlink:href="12859_2018_2130_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p><p>where <inline-formula id="IEq43"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\mathbb {M}$\end{document}</tex-math><mml:math id="M96"><mml:mi mathvariant="double-struck">𝕄</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq43.gif"/></alternatives></inline-formula> is the set of all maximal matchings in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>).</p></disp-quote></p>
      <p>Problem <sc>FFDCJ-SIMILARITY</sc> is NP-hard [<xref ref-type="bibr" rid="CR17">17</xref>]. Moreover, one can directly correlate the problem to the adjacency similarity problem, where the goal is to maximize the number of preserved adjacencies between two given genomes [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR19">19</xref>]. However, since there the objective is to maximize the number of cycles of length 2, even an approximation for the adjacency similarity problem is not a good algorithm for the <sc>FFDCJ-SIMILARITY</sc> problem, where cycles of higher lengths are possible in the solution [<xref ref-type="bibr" rid="CR20">20</xref>].</p>
    </sec>
    <sec id="Sec9">
      <title>Capping telomeres</title>
      <p>A very useful preprocessing to <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) is the <italic>capping</italic> of telomeres, a general technique for simplifying algorithms that handle genomes with linear chromosomes, commonly used in the context of family-based settings [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>, <xref ref-type="bibr" rid="CR21">21</xref>]. Given two genomes <italic>A</italic> and <italic>B</italic> with <italic>i</italic> and <italic>j</italic> linear chromosomes, respectively, for each vertex representing only one extremity we add a <italic>null extremity</italic>
<italic>τ</italic> to it (e.g., 1<sup><italic>t</italic></sup> of Fig. <xref rid="Fig4" ref-type="fig">4</xref> becomes <italic>τ</italic>1<sup><italic>t</italic></sup>). Furthermore, in order to add the same number of null extremities to both genomes, |<italic>j</italic>−<italic>i</italic>|<italic>null adjacencies</italic>
<italic>τ</italic><italic>τ</italic> (composed of two null extremities) are added to genome <italic>A</italic>, if <italic>i</italic>&lt;<italic>j</italic>, or to genome <italic>B</italic>, if <italic>j</italic>&lt;<italic>i</italic>. Finally, for each null extremity of a vertex in <italic>A</italic> we add to <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) a <italic>null edge</italic> with weight 0 to each null extremity of vertices in <italic>B</italic>. Consequently, after capping of telomeres the graph <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) has no vertex of degree one. Notice that, if before the capping <italic>p</italic> was a path of weight <italic>w</italic> connecting telomeres in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), then after the capping <italic>p</italic> will be part of a cycle closed by null extremities with normalized weight <inline-formula id="IEq44"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\frac {w}{|p|+1}$\end{document}</tex-math><mml:math id="M98"><mml:mfrac><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq44.gif"/></alternatives></inline-formula> if <italic>p</italic> is an odd path, or of normalized weight <inline-formula id="IEq45"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\frac {w}{|p|+2}$\end{document}</tex-math><mml:math id="M100"><mml:mfrac><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>p</mml:mi><mml:mo>|</mml:mo><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq45.gif"/></alternatives></inline-formula> if <italic>p</italic> is an even path. In any of the two cases, the normalized weight is consistent with the wDCJ similarity formula in Eq. <xref rid="Equ2" ref-type="">2</xref>.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Results and discussion</title>
    <sec id="Sec11">
      <title>An exact Algorithm</title>
      <p>In order to exactly compute the family-free DCJ similarity between two given genomes, we propose an integer linear program (ILP) formulation that is similar to the one for the family-free DCJ distance given in [<xref ref-type="bibr" rid="CR17">17</xref>]. It adopts the same notation and also uses an approach to solve the maximum cycle decomposition problem as in [<xref ref-type="bibr" rid="CR13">13</xref>].</p>
      <p>Let <italic>A</italic> and <italic>B</italic> be two genomes, let <italic>G</italic>=<italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) be their gene similarity graph, and let <italic>X</italic><sub><italic>A</italic></sub> and <italic>X</italic><sub><italic>B</italic></sub> be the extremity sets (including null extremities) with respect to <italic>A</italic> and <italic>B</italic> for the capped adjacency graph <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), respectively. The weight <italic>w</italic>(<italic>e</italic>) of an edge <italic>e</italic> in <italic>G</italic> is also denoted by <italic>w</italic><sub><italic>e</italic></sub>. For the ILP formulation, an extension <italic>H</italic>=(<italic>V</italic><sub><italic>H</italic></sub>,<italic>E</italic><sub><italic>H</italic></sub>) of the capped weighted adjacency graph <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) is defined such that <inline-formula id="IEq46"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$V_{H} = X_{A} \cup X_{B}$\end{document}</tex-math><mml:math id="M102"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq46.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq47"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$E_{H} = E_{m} \cup E_{a} \cup E_{s}$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq47.gif"/></alternatives></inline-formula> has three types of edges: (<italic>i</italic>) <italic>matching edges</italic> that connect two extremities in different extremity sets, one in <italic>X</italic><sub><italic>A</italic></sub> and the other in <italic>X</italic><sub><italic>B</italic></sub>, if they are null extremities or there exists an edge connecting these genes in <italic>G</italic>; the set of matching edges is denoted by <italic>E</italic><sub><italic>m</italic></sub>; (<italic>ii</italic>) <italic>adjacency edges</italic> that connect two extremities in the same extremity set if they form an adjacency; the set of adjacency edges is denoted by <italic>E</italic><sub><italic>a</italic></sub>; and (<italic>iii</italic>) <italic>self edges</italic> that connect two extremities of the same gene in an extremity set; the set of self edges is denoted by <italic>E</italic><sub><italic>s</italic></sub>. Matching edges have weights defined by the normalized gene similarity <italic>σ</italic>, all adjacency and self edges have weight 0. Notice that any edge in <italic>G</italic> corresponds to two matching edges in <italic>H</italic>.</p>
      <p>The description of the ILP follows. For each edge <italic>e</italic> in <italic>H</italic>, we create a binary variable <italic>x</italic><sub><italic>e</italic></sub> to indicate whether <italic>e</italic> will be in the final solution. We require first that each adjacency edge be chosen: 
<disp-formula id="Equc"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$x_{e} = 1, \qquad \forall~e \in E_{a}. $$ \end{document}</tex-math><mml:math id="M106"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equc.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Now we rename each vertex in <italic>H</italic> such that <italic>V</italic><sub><italic>H</italic></sub>={<italic>v</italic><sub>1</sub>,<italic>v</italic><sub>2</sub>,…,<italic>v</italic><sub><italic>k</italic></sub>} with <italic>k</italic>=|<italic>V</italic><sub><italic>H</italic></sub>|. We require that each of these vertices be adjacent to exactly one matching or self edge: 
<disp-formula id="Equd"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{aligned} \sum_{e = v_{r}v_{t} \in E_{m} \cup E_{s}} x_{e} = 1,&amp; \forall~v_{r} \in X_{A}, \quad \text{and}\\ \sum_{e = v_{r}v_{t} \in E_{m} \cup E_{s}} x_{e} = 1,&amp; \forall~v_{t} \in X_{B}. \end{aligned} $$ \end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mtext>and</mml:mtext></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>s</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi>B</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equd.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Then, we require that the final solution be valid, meaning that if one extremity of a gene in <italic>A</italic> is assigned to an extremity of a gene in <italic>B</italic>, then the other extremities of these two genes have to be assigned as well: 
<disp-formula id="Eque"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$x_{a^{h}b^{h}} = x_{a^{t}b^{t}}, \qquad \forall~ab \in E_{G}. $$ \end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mtext mathvariant="italic">ab</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Eque.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>We also require that the matching be maximal. This can easily be ensured if we guarantee that at least one of the vertices connected by an edge in the gene similarity graph be chosen, which is equivalent to not allowing both of the corresponding self edges in the weighted adjacency graph be chosen: 
<disp-formula id="Equf"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$x_{a^{h}a^{t}} + x_{b^{h}b^{t}} \leq 1, \qquad \forall~ab \in E_{G}. $$ \end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>h</mml:mi></mml:mrow></mml:msup><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mtext mathvariant="italic">ab</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>G</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equf.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>To count the number of cycles, we use the same strategy as described in [<xref ref-type="bibr" rid="CR13">13</xref>]. For each vertex <italic>v</italic><sub><italic>i</italic></sub> we define a variable <italic>y</italic><sub><italic>i</italic></sub> that labels <italic>v</italic><sub><italic>i</italic></sub> such that 
<disp-formula id="Equg"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$0 \leq y_{i} \leq i, \qquad 1 \leq i \leq k. $$ \end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equg.gif" position="anchor"/></alternatives></disp-formula> We also require that adjacent vertices have the same label, forcing all vertices in the same cycle to have the same label: 
<disp-formula id="Equh"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\begin{array}{*{20}l} y_{i} \leq y_{j} + i \cdot (1 - x_{e}), &amp; \qquad \forall~e = v_{i}v_{j} \in E_{H}, \\ y_{j} \leq y_{i} + j \cdot (1 - x_{e}), &amp;\qquad \forall~e = v_{i}v_{j} \in E_{H}. \end{array} $$ \end{document}</tex-math><mml:math id="M116"><mml:mtable class="align" columnalign="left"><mml:mtr><mml:mtd class="align-1"><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>i</mml:mi><mml:mo>·</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mtd><mml:mtd class="align-2"><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr><mml:mtr><mml:mtd class="align-1"><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>j</mml:mi><mml:mo>·</mml:mo><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>)</mml:mo><mml:mo>,</mml:mo></mml:mtd><mml:mtd class="align-2"><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi><mml:mspace width="2em"/></mml:mtd><mml:mtd><mml:mspace width="2em"/></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2130_Article_Equh.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>We create a binary variable <italic>z</italic><sub><italic>i</italic></sub>, for each vertex <italic>v</italic><sub><italic>i</italic></sub>, to verify whether <italic>y</italic><sub><italic>i</italic></sub> is equal to its upper bound <italic>i</italic>: 
<disp-formula id="Equi"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$i\cdot z_{i} \leq y_{i}, \qquad 1 \leq i \leq k. $$ \end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi>i</mml:mi><mml:mo>·</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equi.gif" position="anchor"/></alternatives></disp-formula> Since all variables <italic>y</italic><sub><italic>i</italic></sub> in the same cycle have the same label but a different upper bound, only one of the <italic>y</italic><sub><italic>i</italic></sub> can be equal to its upper bound <italic>i</italic>. This means that <italic>z</italic><sub><italic>i</italic></sub> is 1 if the cycle with vertex <italic>i</italic> as representative is used in a solution.</p>
      <p>Now, let <italic>L</italic>={2<italic>j</italic>:<italic>j</italic>=1,…,<italic>n</italic>} be the set of possible cycle lengths in <italic>H</italic>, where <inline-formula id="IEq48"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$n := \min (|A|, |B|)$\end{document}</tex-math><mml:math id="M120"><mml:mi>n</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo>min</mml:mo><mml:mo>(</mml:mo><mml:mo>|</mml:mo><mml:mi>A</mml:mi><mml:mo>|</mml:mo><mml:mo>,</mml:mo><mml:mo>|</mml:mo><mml:mi>B</mml:mi><mml:mo>|</mml:mo><mml:mo>)</mml:mo></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq48.gif"/></alternatives></inline-formula>. We create the binary variable <italic>x</italic><sub><italic>ei</italic></sub> to indicate whether <italic>e</italic> is in <italic>i</italic>, for each <italic>e</italic>∈<italic>E</italic><sub><italic>H</italic></sub> and each cycle <italic>i</italic>. We also create the binary variable <inline-formula id="IEq49"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$x_{ei}^{\ell }$\end{document}</tex-math><mml:math id="M122"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq49.gif"/></alternatives></inline-formula> to indicate whether <italic>e</italic> belongs to <italic>i</italic> and the length of cycle <italic>i</italic> is <italic>ℓ</italic>, for each <italic>e</italic>∈<italic>E</italic><sub><italic>H</italic></sub>, each cycle <italic>i</italic>, and each <italic>ℓ</italic>∈<italic>L</italic>.</p>
      <p>We require that if an edge <italic>e</italic> belongs to a cycle <italic>i</italic>, then it can be true for only one length <italic>ℓ</italic>∈<italic>L</italic>. Thus, 
<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  \sum_{\ell \in L} x_{ei}^{\ell} \leq x_{ei}, \qquad \forall~e \in E_{H}\ \text{and}\ 1 \leq i \leq k.  $$ \end{document}</tex-math><mml:math id="M124"><mml:munder><mml:mrow><mml:mo>∑</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup><mml:mo>≤</mml:mo><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:math><graphic xlink:href="12859_2018_2130_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>We create another binary variable <inline-formula id="IEq50"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$z_{i}^{\ell }$\end{document}</tex-math><mml:math id="M126"><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq50.gif"/></alternatives></inline-formula> to indicate whether cycle <italic>i</italic> has length <italic>ℓ</italic>. Then <inline-formula id="IEq51"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\ell \cdot z_{i}^{\ell }$\end{document}</tex-math><mml:math id="M128"><mml:mi>ℓ</mml:mi><mml:mo>·</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq51.gif"/></alternatives></inline-formula> is an upper bound for the total number of edges in cycle <italic>i</italic> of length <italic>ℓ</italic>: 
<disp-formula id="Equj"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\sum_{e \in E_{M}} x_{ei}^{\ell} \leq \ell \cdot z_{i}^{\ell}, \qquad \forall~\ell \in L\ \text{and}\ 1 \leq i \leq k. $$ \end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>·</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mspace width="1em"/><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equj.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>The length of a cycle <italic>i</italic> is given by <inline-formula id="IEq52"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\ell \cdot z_{i}^{\ell }$\end{document}</tex-math><mml:math id="M132"><mml:mi>ℓ</mml:mi><mml:mo>·</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq52.gif"/></alternatives></inline-formula>, for <italic>i</italic>=1,…,<italic>k</italic> and <italic>ℓ</italic>∈<italic>L</italic>. On the other hand, it is the total amount of matching edges <italic>e</italic> in cycle <italic>i</italic>. That is, 
<disp-formula id="Equk"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\sum_{\ell \in L} \ell \cdot z_{i}^{\ell} = \sum_{e \in E_{m}} x_{ei}, \qquad 1 \leq i \leq k. $$ \end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:munder><mml:mi>ℓ</mml:mi><mml:mo>·</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equk.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>We have to ensure that each cycle <italic>i</italic> must have just one length: 
<disp-formula id="Equl"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\sum_{\ell \in L} z_{i}^{\ell} = z_{i}, \qquad 1 \leq i \leq k. $$ \end{document}</tex-math><mml:math id="M136"><mml:mrow><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:munder><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equl.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Now we create the binary variable <italic>y</italic><sub><italic>ri</italic></sub> to indicate whether the vertex <italic>v</italic><sub><italic>r</italic></sub> is in cycle <italic>i</italic>. Thus, if <italic>x</italic><sub><italic>ei</italic></sub>=1, i.e., if the edge <italic>e</italic>=<italic>v</italic><sub><italic>r</italic></sub><italic>v</italic><sub><italic>t</italic></sub> in <italic>H</italic> is chosen in cycle <italic>i</italic>, then <italic>y</italic><sub><italic>ri</italic></sub>=1=<italic>y</italic><sub><italic>ti</italic></sub> (and <italic>x</italic><sub><italic>e</italic></sub>=1 as well). Hence, 
<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$  \begin{aligned} \left. \begin{array}{rcl} x_{ei} &amp; \leq &amp; x_{e}, \\ x_{ei} &amp; \leq &amp; y_{ri}, \\ x_{ei} &amp; \leq &amp; y_{ti}, \\ x_{ei} &amp; \geq &amp; x_{e} + y_{ri} + y_{ti} - 2, \end{array} \right\} \quad \forall~e = v_{r}v_{t} \in E_{H} \text{ and}\ 1 \leq i \leq k. \end{aligned}  $$ \end{document}</tex-math><mml:math id="M138"><mml:mtable><mml:mtr><mml:mtd><mml:mfenced close="}" open="" separators=""><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>≤</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>≤</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ri</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>≤</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ti</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>≥</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ri</mml:mtext></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ti</mml:mtext></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced><mml:mspace width="1em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:mi>e</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>t</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mtext>and</mml:mtext><mml:mspace width="1em"/><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k.</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="12859_2018_2130_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Since <italic>y</italic><sub><italic>r</italic></sub> is an integer variable, we associate <italic>y</italic><sub><italic>r</italic></sub> to the corresponding binary variable <italic>y</italic><sub><italic>ri</italic></sub>, for any vertex <italic>v</italic><sub><italic>r</italic></sub> belonging to cycle <italic>i</italic>: 
<disp-formula id="Equm"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$y_{r} = \sum_{i = 1}^{r} i \cdot y_{ri}, \qquad \forall~v_{r} \in V_{H}. $$ \end{document}</tex-math><mml:math id="M140"><mml:mrow><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:munderover><mml:mi>i</mml:mi><mml:mo>·</mml:mo><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ri</mml:mtext></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equm.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Furthermore, we must ensure that each vertex <italic>v</italic><sub><italic>r</italic></sub> may belong to at most one cycle: 
<disp-formula id="Equn"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\sum_{i = 1}^{r} y_{ri} \leq 1, \qquad \forall~v_{r} \in V_{H}. $$ \end{document}</tex-math><mml:math id="M142"><mml:mrow><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:munderover><mml:msub><mml:mrow><mml:mi>y</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ri</mml:mtext></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="2em"/><mml:mo>∀</mml:mo><mml:mspace width="1em"/><mml:msub><mml:mrow><mml:mi>v</mml:mi></mml:mrow><mml:mrow><mml:mi>r</mml:mi></mml:mrow></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:mi>H</mml:mi></mml:mrow></mml:msub><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equn.gif" position="anchor"/></alternatives></disp-formula></p>
      <p>Finally, we set the objective function as follows: 
<disp-formula id="Equo"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document} $$\text{maximize} \quad \sum_{i = 1}^{k} \sum_{\ell \in L} \sum_{e \in E_{m}} \frac{w_{e}x_{ei}^{\ell}}{\ell}. $$ \end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:mtext>maximize</mml:mtext><mml:mspace width="1em"/><mml:munderover accent="false" accentunder="false"><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>k</mml:mi></mml:mrow></mml:munderover><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mrow><mml:mo mathsize="big">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi>E</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munder><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>w</mml:mi></mml:mrow><mml:mrow><mml:mi>e</mml:mi></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:mfrac><mml:mi>.</mml:mi></mml:mrow></mml:math><graphic xlink:href="12859_2018_2130_Article_Equo.gif" position="anchor"/></alternatives></disp-formula> Note that, with this formulation, we do not have any path as a component. Therefore, the objective function above is exactly the family-free DCJ similarity S<sub>FFDCJ</sub>(<italic>A,B</italic>) as defined in Eqs. (<xref rid="Equ2" ref-type="">2</xref>) and (<xref rid="Equ3" ref-type="">3</xref>).</p>
      <p>Notice that the ILP formulation has <italic>O</italic>(<italic>N</italic><sup>4</sup>) variables and <inline-formula id="IEq53"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$O\left (N^{3}\right)$\end{document}</tex-math><mml:math id="M146"><mml:mi>O</mml:mi><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq53.gif"/></alternatives></inline-formula> constraints, where <italic>N</italic>=|<italic>A</italic>|+|<italic>B</italic>|. The number of variables is proportional to the number of variables <inline-formula id="IEq54"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$x_{ei}^{\ell }$\end{document}</tex-math><mml:math id="M148"><mml:msubsup><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mtext mathvariant="italic">ei</mml:mtext></mml:mrow><mml:mrow><mml:mi>ℓ</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq54.gif"/></alternatives></inline-formula>, and the number of constraints is upper bounded by (<xref rid="Equ4" ref-type="">4</xref>) and (<xref rid="Equ5" ref-type="">5</xref>).</p>
    </sec>
    <sec id="Sec12">
      <title>APX-hardness and heuristics</title>
      <p>In this section we first state that problem <sc>FFDCJ-SIMILARITY</sc> is APX-hard and provide a lower bound for the approximation ratio.</p>
      <sec id="d29e5519">
        <title>
          <bold>Theorem 1</bold>
        </title>
        <p><sc>FFDCJ-SIMILARITY</sc> is APX-hard and cannot be approximated with approximation ratio better than 22/21=1.0476…, unless P = NP.</p>
      </sec>
      <sec id="d29e5527">
        <title>
          <italic>Proof</italic>
        </title>
        <p>See Additional file <xref rid="MOESM1" ref-type="media">1</xref>. □</p>
        <p>We now propose four heuristic algorithms to compute the family-free DCJ similarity of two given genomes: one that is directly derived from a maximum matching of the gene similarity graph <italic>GS</italic><sub><italic>σ</italic></sub> and three greedy-like heuristics that, according to different criteria, select cycles from the weighted adjacency graph <italic>AG</italic><sub><italic>σ</italic></sub>, such that the cycles selected by each heuristic induce a matching in <italic>GS</italic><sub><italic>σ</italic></sub>.</p>
      </sec>
      <sec id="Sec13">
        <title>Maximum matching</title>
        <p>In the first heuristic, shown in Algorithm 1 (<sc>MAXIMUM-MATCHING</sc>), we find a maximum weighted bipartite matching <italic>M</italic> in <italic>GS</italic><sub><italic>σ</italic></sub> by the Hungarian Method, also known as Kuhn-Munkres Algorithm [<xref ref-type="bibr" rid="CR22">22</xref>–<xref ref-type="bibr" rid="CR24">24</xref>]. Given the matching <italic>M</italic>, it is straightforward to obtain the reduced genomes <italic>A</italic><sup><italic>M</italic></sup> and <italic>B</italic><sup><italic>M</italic></sup> and return the similarity value <inline-formula id="IEq55"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$s_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M150"><mml:msub><mml:mrow><mml:mi>s</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq55.gif"/></alternatives></inline-formula>.</p>
        <p>
          <graphic xlink:href="12859_2018_2130_Figa_HTML.gif" id="MO5"/>
        </p>
        <p>For the implementantion of this heuristic we cast similarity values (floating point edge weights in [0,1]) in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) to integers by multiplying them by some power of ten, depending on the precision of similarity values. Given real or general simulated instances, and for a power of ten large enough, this operation has little impact on the optimality of the weighted matching <italic>M</italic> for the original weights in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) obtained from the Kuhn-Munkres algorithm, i.e., the weight of <italic>M</italic> for the original weights in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) is optimal or near-optimal since only less significant digits are not considered.</p>
      </sec>
      <sec id="Sec14">
        <title>Greedy heuristics</title>
        <p>Before describing the greedy heuristics, we need to introduce the following concepts. We say that two edges in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) are <italic>consistent</italic> if one connects the head and the other connects the tail of the same pair of genes, or if they connect extremities of distinct genes in both genomes. Otherwise they are <italic>inconsistent</italic>. A set of edges, in particular a cycle, is consistent if it has no pair of inconsistent edges. A set of cycles is consistent if the union of all of their edges is consistent. Observe that a consistent set of cycles in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) induces a matching in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>).</p>
        <p>Each one of the three greedy algorithms selects disjoint and consistent cycles in the capped <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>). The consistent cycles are selected from the set of all cycles of <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), that is obtained in Step 4 of each heuristic (see Algorithms 2, 3 and 4 below), using a cycle enumeration algorithm by Hawick and James [<xref ref-type="bibr" rid="CR25">25</xref>], which is based on Johnson’s algorithm [<xref ref-type="bibr" rid="CR26">26</xref>]. For this reason, the running time of our heuristics is potentially exponential in the number of vertices of <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>).</p>
        <p>In the three heuristics, after completing the cycle selection by iterating over the set of all cycles of <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), the induced matching <italic>M</italic> in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) could still be non-maximal. Whenever this occurs, among the genes that are unsaturated by <italic>M</italic>, we can identify <italic>disposable genes</italic> by one of the two following conditions: 
<list list-type="order"><list-item><p>Any unsaturated gene in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) that is connected only to saturated genes, is a disposable gene;</p></list-item><list-item><p>For a given set of vertices <inline-formula id="IEq56"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$S \subseteq \protect \mathcal {A}$\end{document}</tex-math><mml:math id="M152"><mml:mi>S</mml:mi><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq56.gif"/></alternatives></inline-formula> (or <inline-formula id="IEq57"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$S \subseteq \protect \mathcal {B}$\end{document}</tex-math><mml:math id="M154"><mml:mi>S</mml:mi><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq57.gif"/></alternatives></inline-formula>) in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) such that, for the set of connected genes N(<italic>S</italic>), we have |<italic>S</italic>|&gt;|N(<italic>S</italic>)| (Hall’s theorem), then any subset of size |<italic>S</italic>|−|N(<italic>S</italic>)| of unsaturated genes of <italic>S</italic> can be set as disposable genes. In our implementation we choose those |<italic>S</italic>|−|N(<italic>S</italic>)| unsaturated genes with the smallest labels. Such <inline-formula id="IEq58"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$S \subseteq \protect \mathcal {A}$\end{document}</tex-math><mml:math id="M156"><mml:mi>S</mml:mi><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq58.gif"/></alternatives></inline-formula> can be found as follows. Let <italic>v</italic> be the set of vertices saturated by <italic>M</italic>, and let <italic>M</italic><sup>′</sup> be a maximum cardinality matching in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>)∖<italic>v</italic>. Consider the sets <inline-formula id="IEq59"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A}' = \protect \mathcal {A} \setminus v$\end{document}</tex-math><mml:math id="M158"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo>∖</mml:mo><mml:mi>v</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq59.gif"/></alternatives></inline-formula> and <inline-formula id="IEq60"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {B}' = \protect \mathcal {B} \setminus v$\end{document}</tex-math><mml:math id="M160"><mml:msup><mml:mrow><mml:mi mathvariant="script">ℬ</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi><mml:mo>∖</mml:mo><mml:mi>v</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq60.gif"/></alternatives></inline-formula>. Now let <italic>GS</italic><italic>σ</italic>′(<italic>A,B</italic>) be a directed bipartite graph on the vertex set <inline-formula id="IEq61"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A}' \cup \protect \mathcal {B}'$\end{document}</tex-math><mml:math id="M162"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">ℬ</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq61.gif"/></alternatives></inline-formula>, which includes the edges of <italic>M</italic><sup>′</sup> oriented from <inline-formula id="IEq62"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {B}'$\end{document}</tex-math><mml:math id="M164"><mml:msup><mml:mrow><mml:mi mathvariant="script">ℬ</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq62.gif"/></alternatives></inline-formula> to <inline-formula id="IEq63"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A}'$\end{document}</tex-math><mml:math id="M166"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq63.gif"/></alternatives></inline-formula> and the remaining edges of <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>)∖<italic>v</italic> oriented from <inline-formula id="IEq64"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A}'$\end{document}</tex-math><mml:math id="M168"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq64.gif"/></alternatives></inline-formula> to <inline-formula id="IEq65"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {B}'$\end{document}</tex-math><mml:math id="M170"><mml:msup><mml:mrow><mml:mi mathvariant="script">ℬ</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq65.gif"/></alternatives></inline-formula>, and let <inline-formula id="IEq66"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$U \subseteq \protect \mathcal {A}'$\end{document}</tex-math><mml:math id="M172"><mml:mi>U</mml:mi><mml:mo>⊆</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq66.gif"/></alternatives></inline-formula> be the set of vertices of <inline-formula id="IEq67"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\protect \mathcal {A}'$\end{document}</tex-math><mml:math id="M174"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq67.gif"/></alternatives></inline-formula> unsaturated by <italic>M</italic><sup>′</sup>. <inline-formula id="IEq68"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$S \subseteq \protect \mathcal {A}$\end{document}</tex-math><mml:math id="M176"><mml:mi>S</mml:mi><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq68.gif"/></alternatives></inline-formula> is the corresponding set of vertices reachable from <italic>U</italic> in <italic>GS</italic><italic>σ</italic>′(<italic>A,B</italic>), if any. <inline-formula id="IEq69"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$S \subseteq \protect \mathcal {B}$\end{document}</tex-math><mml:math id="M178"><mml:mi>S</mml:mi><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">ℬ</mml:mi></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq69.gif"/></alternatives></inline-formula> can be found analogously.</p></list-item></list></p>
        <p>If there is no consistent cycle to be selected and the matching <italic>M</italic> is still non-maximal, new consistent cycles appear in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) after the deletion of all identified disposable genes (see Fig. <xref rid="Fig5" ref-type="fig">5</xref>). In order to delete a disposable gene <italic>g</italic>, we need to remove from <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) the edges corresponding to extremities <italic>g</italic><sup><italic>t</italic></sup> or <italic>g</italic><sup><italic>h</italic></sup> and “merge” the two vertices that represent these extremities. Every time disposable genes are deleted from <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), a new iteration of the algorithms starts from Step 4 (see again Algorithms 2, 3 and 4). This procedure assures that, in each one of the three algorithms, the final set of selected cycles defines a maximal matching <italic>M</italic>, such that <inline-formula id="IEq70"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$AG_{\sigma }\left (A^{M},B^{M}\right)$\end{document}</tex-math><mml:math id="M180"><mml:mi>A</mml:mi><mml:msub><mml:mrow><mml:mi>G</mml:mi></mml:mrow><mml:mrow><mml:mi>σ</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:msup><mml:mrow><mml:mi>A</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq70.gif"/></alternatives></inline-formula> is exactly the union of those selected cycles.
<fig id="Fig5"><label>Fig. 5</label><caption><p>Consider genomes <inline-formula id="IEq71"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$A =\left \{\left (\circ \;1\;2\;3\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M182"><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mn>1</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>2</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>3</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq71.gif"/></alternatives></inline-formula> and <inline-formula id="IEq72"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$B =\left \{\left (\circ \;{-4}\;5\;6\;{-7}\;\circ \right)\right \}$\end{document}</tex-math><mml:math id="M184"><mml:mi>B</mml:mi><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=""><mml:mrow><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mo>∘</mml:mo><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>4</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>5</mml:mn><mml:mspace width="2.77626pt"/><mml:mn>6</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>−</mml:mo><mml:mn>7</mml:mn><mml:mspace width="2.77626pt"/><mml:mo>∘</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq72.gif"/></alternatives></inline-formula> and their gene similarity graph <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>). The selection of the dashed cycle in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) adds to the matching <italic>M</italic> in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) the edges connecting gene 1 to gene 4 and gene 2 to gene 5. After this selection, although the matching <italic>M</italic> is not yet maximal, there are no more consistent cycles in <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>). Observe that in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) gene 6 is unsaturated and its single neighbor - gene 2 - is already saturated. Since gene 6 can no longer be saturated by <italic>M</italic>, it is a disposable gene and is deleted from <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), resulting in <italic>AG</italic><italic>σ</italic>′(<italic>A,B</italic>), where a new consistent cycle appears. The selection of this new cycle adds to the matching <italic>M</italic> the edge connecting gene 3 to gene 7. Both <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) and <italic>AG</italic><italic>σ</italic>′(<italic>A,B</italic>) have a simplified representation, in which the edge weights, as well as two of the four null edges of the capping, are omitted. Furthermore, for the sake of clarity, in this simplified representation each edge has a label describing the extremities connected by it</p></caption><graphic xlink:href="12859_2018_2130_Fig5_HTML" id="MO6"/></fig></p>
        <p>
          <bold>Best density</bold>
        </p>
        <p>The best density heuristic is shown in Algorithm 2 (<sc>GREEDY-DENSITY</sc>). The <italic>density</italic> of a cycle <italic>C</italic> is given by <inline-formula id="IEq73"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\frac {w(C)}{|C|^{2}}$\end{document}</tex-math><mml:math id="M186"><mml:mfrac><mml:mrow><mml:mi>w</mml:mi><mml:mo>(</mml:mo><mml:mi>C</mml:mi><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo>|</mml:mo><mml:mi>C</mml:mi><mml:msup><mml:mrow><mml:mo>|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq73.gif"/></alternatives></inline-formula> (its weight divided by the square of its length). The cycles of <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) are arranged in decreasing order of their densities, and consistent cycles are selected following this order.</p>
        <p>
          <graphic xlink:href="12859_2018_2130_Figb_HTML.gif" id="MO7"/>
        </p>
        <p>Since the number of cycles of any length may be exponential in the size of the input graph, in our implementation we add a heuristic in which initially the search is restricted to cycles of length up to ten. Then, as long as the obtained matching is not maximal, Steps 4 to 7 are repeated, while gradually increasing the allowed maximum cycle length in steps of ten.</p>
        <p>
          <bold>Best length</bold>
        </p>
        <p>The best length heuristic is shown in Algorithm 3 (<sc>GREEDY-LENGTH</sc>). The cycles of <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) are found in increasing order of their lengths, and ties are broken by the decreasing order of their weights. Here we first find and select cycles of length 2, then of length 4, and so on, for each fixed length iterating over the set of all cycles in decreasing order of their weights. Consistent cycles are selected following this procedure.</p>
        <p>
          <graphic xlink:href="12859_2018_2130_Figc_HTML.gif" id="MO8"/>
        </p>
        <p>
          <bold>Best length with weighted maximum independent set</bold>
        </p>
        <p>The best length heuristic with <sc>WMIS</sc> is shown in Algorithm 4 (<sc>GREEDY-WMIS</sc>) and is a variation of <sc>GREEDY-LENGTH</sc>. Instead of selecting cycles of greater weights for a fixed length, this algorithm selects the greatest amount of cycles for a fixed length by a <sc>WMIS</sc> algorithm. The heuristic builds a <italic>cycle graph</italic> where each vertex is a cycle of <italic>AG</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>), the weight of a vertex is the weight of the cycle it represents and two vertices are adjacent if the cycles they represent are inconsistent. The heuristic tries to find next an independent set with the greatest weight in the cycle graph. Since this graph is not <italic>d</italic>-claw-free for any fixed <italic>d</italic>, the <sc>WMIS</sc> algorithm [<xref ref-type="bibr" rid="CR27">27</xref>] does not guarantee any fixed ratio.</p>
        <p>
          <graphic xlink:href="12859_2018_2130_Figd_HTML.gif" id="MO9"/>
        </p>
      </sec>
    </sec>
    <sec id="Sec15">
      <title>Experimental results</title>
      <p>Experiments for the ILP and our heuristics were conducted on an Intel i7-4770 3.40GHz machine with 16 GB of memory. In order to do so, we produced simulated datasets by the Artificial Life Simulator (ALF) [<xref ref-type="bibr" rid="CR28">28</xref>] and obtained real genome data from NCBI, using the FFGC tool [<xref ref-type="bibr" rid="CR29">29</xref>] to obtain similarity scores between genomes. Gurobi Optimizer 7.0 was set to solve ILP instances with default parameters, time limit of 1800 s and 4 threads, and the heuristics were implemented in C++.</p>
      <sec id="Sec16">
        <title>Simulated data</title>
        <p>We generated datasets with 10 genome samples each, running pairwise comparisons between all genomes in the same dataset. Each dataset has genomes of sizes around 25, 50 or 1000 (the latter used only for running the heuristics), generated based on a sample from the tree of life with 10 leaf species and PAM distance of 100 from the root to the deepest leaf. Gamma distribution with parameters <italic>k</italic>=3 and <italic>θ</italic>=133 was used for gene length distribution. For amino acid evolution we used the WAG substitution model with default parameters and the preset of Zipfian indels with rate 0.00005. Regarding genome level events, we allowed gene duplications and gene losses with rate 0.002, and reversals and transpositions (which ALF refers to as translocations) with rate 0.0025, with at most 3 genes involved in each event. To test different proportions of genome level events, we also generated simulated datasets with 2- and 5-fold increase for reversal and transpositions rates.</p>
        <p>Results are summarized in Table <xref rid="Tab1" ref-type="table">1</xref>. Each dataset is composed of 10 genomes, totaling 45 comparisons of pairs per dataset. Rate <italic>r</italic>=1 means the default parameter set for genome level events, while <italic>r</italic>=2 and <italic>r</italic>=5 mean the 2- and 5-fold increase of rates, respectively. For the ILP the table shows the average time for instances for which an optimal solution was found, the number of instances for which the optimizer did not find an optimal solution within the given time limit and, for the latter class of instances, the average relative gap between the best solution found and the upper bound found by the solver, calculated by <inline-formula id="IEq74"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$\left (\frac {\text {upper bound}}{\text {best solution}} - 1\right) \times 100$\end{document}</tex-math><mml:math id="M188"><mml:mfenced close=")" open="(" separators=""><mml:mrow><mml:mfrac><mml:mrow><mml:mtext>upper bound</mml:mtext></mml:mrow><mml:mrow><mml:mtext>best solution</mml:mtext></mml:mrow></mml:mfrac><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mfenced><mml:mo>×</mml:mo><mml:mn>100</mml:mn></mml:math><inline-graphic xlink:href="12859_2018_2130_Article_IEq74.gif"/></alternatives></inline-formula>. For our heuristics, the running time for all instances of sizes 25 and 50 was negligible, therefore the table shows only the average relative gap between the solution found and the upper bound given by the ILP solver (if any).
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Results of experiments for simulated genomes</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="3">ILP</th><th align="left"><sc>Maximum-Matching</sc></th><th align="left"><sc>Greedy-Density</sc></th><th align="left"><sc>Greedy-Length</sc></th><th align="left"><sc>Greedy-wmis</sc></th></tr><tr><th align="left"/><th align="left">Time (s)</th><th align="left">Not finished</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th></tr></thead><tbody><tr><td align="left">25 genes, <italic>r</italic>=1</td><td align="center">19.50</td><td align="center">0</td><td align="center">–</td><td align="center">16.26</td><td align="center">5.03</td><td align="center">5.84</td><td align="center">5.97</td></tr><tr><td align="left">25 genes, <italic>r</italic>=2</td><td align="center">84.60</td><td align="center">2</td><td align="center">69.21</td><td align="center">58.69</td><td align="center">30.77</td><td align="center">43.57</td><td align="center">43.00</td></tr><tr><td align="left">25 genes, <italic>r</italic>=5</td><td align="center">49.72</td><td align="center">0</td><td align="center">–</td><td align="center">81.39</td><td align="center">43.83</td><td align="center">55.38</td><td align="center">55.38</td></tr><tr><td align="left">50 genes, <italic>r</italic>=1</td><td align="center">265.23</td><td align="center">12</td><td align="center">23.26</td><td align="center">63.02</td><td align="center">24.76</td><td align="center">27.86</td><td align="center">26.94</td></tr><tr><td align="left">50 genes, <italic>r</italic>=2</td><td align="center">463.50</td><td align="center">29</td><td align="center">38.12</td><td align="center">123.71</td><td align="center">65.41</td><td align="center">66.52</td><td align="center">64.78</td></tr><tr><td align="left">50 genes, <italic>r</italic>=5</td><td align="center">330.88</td><td align="center">29</td><td align="center">259.72</td><td align="center">281.70</td><td align="center">177.58</td><td align="center">206.60</td><td align="center">206.31</td></tr></tbody></table></table-wrap></p>
        <p>Results clearly show the average relative gap of heuristics increases proportionally to the rate of reversals and transpositions. This is expected, as higher mutation rates often result in higher normalized weights on longer cycles, thus the association of genes with greater gene similarity scores will be subject to the selection of longer cycles. Interestingly, for some larger instances the relative gap for heuristics is very close to the values obtained by the ILP solver, suggesting the use of heuristics may be a good alternative for some classes of instances or could help the solver finding lower bounds quickly. It is worth noting that the <sc>GREEDY-DENSITY</sc> heuristic found solutions with gap smaller than 1% for 38% of the instances with 25 genes.</p>
        <p>In a single instance (25 genes, <italic>r</italic>=2), the gap between the best solution found and the upper bound was much higher for the ILP solver and for the heuristics. This instance in particular is precisely the one with the largest number of edges in <italic>GS</italic><sub><italic>σ</italic></sub>(<italic>A,B</italic>) in the dataset. This may indicate that a moderate increase in degree of vertices (1.3 on average to 1.8 in this case) may result in much harder instances for the solver and the heuristics, as after half of the time limit the solver attained no significant improvement on solutions found, and the heuristics returned solutions with a gap even higher.</p>
        <p>We also simulated 10 genomes of sizes around 50, with PAM distance of 15 from the root to the deepest leaf, therefore evolutionarily “closer” to each other and for which higher similarity values are expected. For these genomes the default rates were multiplied by ten (10-fold) for Zipfian indels, gene duplications, gene losses, reversals and transpositions, otherwise there would be no significative difference between them. The exact ILP algorithm found an optimal solution for only 4 of the 45 instances, taking 840.59 s on average. For the remaining instances, where the ILP did not finish within the time limit, the average gap is 329.53%. Regarding the heuristics (Table <xref rid="Tab2" ref-type="table">2</xref>), that all run in negligible time, <sc>GREEDY-DENSITY</sc> outperforms the others, with an average gap of 163% compared to the best upper bound found by the ILP solver. Surprisingly, values returned by greedy heuristics are better than values obtained by the ILP for these instances. Results again suggest that the ILP could benefit greatly from heuristics by using their results as initial lower bounds. Moreover, for some groups of instances even heuristics alone can obtain excellent results.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Results of experiments for 10 simulated genomes (45 pairwise comparisons) with smaller PAM distance</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="3">ILP</th><th align="left"><sc>Maximum-Matching</sc></th><th align="left"><sc>Greedy-Density</sc></th><th align="left"><sc>Greedy-Length</sc></th><th align="left"><sc>Greedy-wmis</sc></th></tr><tr><th align="left"/><th align="left">Time (s)</th><th align="left">Not finished</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th><th align="left">Gap (%)</th></tr></thead><tbody><tr><td align="left">50 genes, <italic>r</italic>=10</td><td align="center">840.59</td><td align="center">41</td><td align="center">329.53</td><td align="center">415.57</td><td align="center">163.00</td><td align="center">172.02</td><td align="center">168.58</td></tr></tbody></table></table-wrap></p>
        <p>Although we have no upper bounds for comparing the results of our heuristics for genome sizes around 1000, they are still very fast. For these genomes we analyze the <sc>MAXIMUM-MATCHING</sc> algorithm separately afterwards, taking into account for now only the other three heuristics. The average running times are 0.30 s, 15.11 s and 12.16 s for <sc>GREEDY-DENSITY</sc>, <sc>GREEDY-LENGTH</sc> and <sc>GREEDY-WMIS</sc>, respectively, showing nevertheless little difference on results.</p>
        <p>However, in 25% of the instances with <italic>r</italic>=5, the difference from the best to the worst solutions provided by these heuristics varied between 10% and 24%, the best of which were given by <sc>GREEDY-DENSITY</sc>. That is probably because, instead of prioritizing shorter cycles, <sc>GREEDY-DENSITY</sc> attempts to balance both normalized weight and length of the selected cycles. The average running times for the instances with <italic>r</italic>=5 are 1.84 s, 76.02 s and 80.67 s for <sc>GREEDY-DENSITY</sc>, <sc>GREEDY-LENGTH</sc> and <sc>GREEDY-WMIS</sc>, respectively.</p>
        <p>Still for genomes of size around 1000 and <italic>r</italic>=5, the <sc>MAXIMUM-MATCHING</sc> heuristic is the fastest, with an average running time of 1.70 s. Despite being the best heuristic for a few cases, the similarity value given by this heuristic is merely 27% of the value given by the best heuristic, on average. While the <sc>MAXIMUM-MATCHING</sc> heuristic is clearly not useful for calculating similarity values, these results show how significant it is choose cycles with the best normalized weights versus prioritizing edges with best weights in the gene similarity graph for the <sc>FFDCJ-SIMILARITY</sc> problem. Since this property of the <sc>MAXIMUM-MATCHING</sc> somehow reflects the strategy of family-based comparative genomics, this observation indicates an advantage of family-free analysis compared to family-based analysis.</p>
        <p>To better understand how cycles scale, we generated 5-fold larger instances (up to 10000 genes), running the <sc>GREEDY-DENSITY</sc> heuristic. Results show that most of the cycles found are of short lengths compared to the genome sizes and in practice their number does not increase exponentially, providing some insight on why our heuristics are fast.</p>
        <p>Finally, as expected, experiments for genomes simulated with different parameters indicate the FFDCJ similarity decreases as the PAM distance or the rates of genome level events increases (data not shown).</p>
      </sec>
      <sec id="Sec17">
        <title>Real genome data</title>
        <p>To show the applicability of our methods to real data, we obtained from NCBI protein-coding genes of X chromosomes of human (<italic>Homo-sapiens</italic>, assembly GRCh38.p7), house mouse (<italic>Mus musculus</italic>, assembly GRCm38.p4 C57BL/6J), and Norway rat (<italic>Rattus norvegicus</italic>, assembly Rnor_6.0). In mammals, the set of genes on the X chromosome has been reasonably conserved throughout the last several million years [<xref ref-type="bibr" rid="CR30">30</xref>], having however their order disrupted many times.</p>
        <p>Since protein sequences are used to obtain the similarity scores (with the help of the BLASTp tool) instead of nucleotide sequences, 76 genes from the rat genome were excluded because no protein sequence was available. Besides, when a gene has multiple isoforms, the longest is kept. The number of genes in the resulting genomes were 822, 953 and 863 for human, mouse and rat, respectively, some of them removed from the pairwise genome comparison due to the pruning process of FFGC.</p>
        <p>Table <xref rid="Tab3" ref-type="table">3</xref> shows, as expected, that the two rodent X chromosomes have a higher similarity than any of them to the human X chromosome. The values returned by the greedy heuristics are very similar, where <sc>GREEDY-LENGTH</sc> is the fastest. <sc>MAXIMUM-MATCHING</sc> results are less than 5% distant from the results of the greedy heuristics, which indicates the choice of cycles has some influence but does not dominate the similarity values obtained for these instances. Matching sizes are similar for all heuristics, showing that about 8% of the genes of the smaller genomes could not be matched to some gene of the other genome and had to be removed, that is, they are disposable genes.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Results for heuristics on real genomes</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left">Smaller genome</th><th align="left" colspan="4">Matching size</th><th align="left" colspan="4">Time (s)</th><th align="left" colspan="4">Similarity</th></tr><tr><th align="left"/><th align="left"/><th align="left"><sc>MM</sc></th><th align="left"><sc>GD</sc></th><th align="left"><sc>GL</sc></th><th align="left"><sc>GW</sc></th><th align="left"><sc>MM</sc></th><th align="left"><sc>GD</sc></th><th align="left"><sc>GL</sc></th><th align="left"><sc>GW</sc></th><th align="left"><sc>MM</sc></th><th align="left"><sc>GD</sc></th><th align="left"><sc>GL</sc></th><th align="left"><sc>GW</sc></th></tr></thead><tbody><tr><td align="left">Human/mouse</td><td align="center">696</td><td align="center">643</td><td align="center">643</td><td align="center">643</td><td align="center">643</td><td align="center">0.07</td><td align="center">19.6</td><td align="center">0.1</td><td align="center">8.6</td><td align="center">404.56</td><td align="center">420.64</td><td align="center">421.48</td><td align="center">420.72</td></tr><tr><td align="left">Human/rat</td><td align="center">672</td><td align="center">613</td><td align="center">611</td><td align="center">611</td><td align="center">612</td><td align="center">0.05</td><td align="center">11.6</td><td align="center">0.04</td><td align="center">3.3</td><td align="center">358.36</td><td align="center">374.17</td><td align="center">374.27</td><td align="center">373.82</td></tr><tr><td align="left">Mouse/rat</td><td align="center">746</td><td align="center">690</td><td align="center">689</td><td align="center">689</td><td align="center">689</td><td align="center">0.17</td><td align="center">0.18</td><td align="center">0.13</td><td align="center">0.18</td><td align="center">481.53</td><td align="center">500.59</td><td align="center">500.57</td><td align="center">500.36</td></tr></tbody></table><table-wrap-foot><p><italic>Smaller genome</italic> column shows for each pair of genomes the number of genes in the smaller one, an upper bound for the matching size. Heuristics are represented by their initials (e.g. <sc>Greedy-Length</sc> = <sc>GL</sc>)</p></table-wrap-foot></table-wrap></p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec18" sec-type="conclusion">
    <title>Conclusions</title>
    <p>In this paper we developed methods for computing the (NP-hard) family-free DCJ similarity, which is a large-scale rearrangement measure for comparing two given genomes. We presented an exact algorithm in form of an integer linear program and extended our previous hardness result by showing that the problem is APX-hard and has a lower bound of 22/21 for its approximation ratio. Therefore, we developed four heuristic algorithms and could show that they perform well while having reasonable running times also for realistic-size genomes.</p>
    <p>Our initial experiment on real data can be considered a proof of concept. In general, the computational results of this paper can be used to more systematically study the applicability of the DCJ similarity measure in various contexts. One important point to be investigated is whether, differently from parsimonious distance measures that usually only hold for closely related genomes, a genomic similarity would allow to perform good comparisons of more distant genomes as well. Fine-tuning of both the data preparation and objective function may be necessary, though.</p>
    <p>For example, one drawback of the function s<sub><sc>FFDCJ</sc></sub> as defined in Eq. <xref rid="Equ3" ref-type="">3</xref> is that distinct pairs of genomes might give family-free DCJ similarity values that cannot be compared easily, because the value of S<sub>FFDCJ</sub> varies between 0 and |<italic>M</italic>|, where <italic>M</italic> is the matching giving rise to S<sub>FFDCJ</sub>. Therefore some kind of normalization would be desirable. A simple approach could be to divide S<sub>FFDCJ</sub> by the size of the smaller genome, because this is a trivial upper bound for |<italic>M</italic>|. Moreover, it can be applied as a simple postprocessing step, keeping all theoretical results of this paper valid. A better normalization, however, might be to divide by |<italic>M</italic>| itself. An analytical treatment here seems more difficult, though. Therefore we leave this and the application to multiple genomes in a phylogenetic context as an open problem for future work.</p>
    <p>Other questions that can be studied in the future are the relationships between family-based and family-free genomic similarity measures in general.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional file</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2018_2130_MOESM1_ESM.pdf">
            <label>Additional file 1</label>
            <caption>
              <p>APX-hardness proof of the <sc>ffdcj-similarity</sc> problem. (PDF 379 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Electronic supplementary material</bold>
      </p>
      <p>The online version of this article (10.1186/s12859-018-2130-5) contains supplementary material, which is available to authorized users.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Pedro Feijão and Daniel Doerr for helping us with hints on how to get simulated and real data for our experiments.</p>
    <sec id="d29e7356">
      <title>Funding</title>
      <p>The publication cost of this article was funded by the author’s home institutions.</p>
    </sec>
    <sec id="d29e7361">
      <title>Availability of data and materials</title>
      <p>Source code of the algorithms implementation is available from <ext-link ext-link-type="uri" xlink:href="https://git.facom.ufms.br/diego/ffdcj-sim">https://git.facom.ufms.br/diego/ffdcj-sim</ext-link>.</p>
    </sec>
    <sec id="d29e7371">
      <title>About this supplement</title>
      <p>This article has been published as part of <italic>BMC Bioinformatics</italic> Volume 19 Supplement 6, 2018: Proceedings of the 15th Annual Research in Computational Molecular Biology (RECOMB) Comparative Genomics Satellite Workshop: bioinformatics. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="https://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-19-supplement-6">https://bmcbioinformatics.biomedcentral.com/articles/supplements/volume-19-supplement-6</ext-link>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>All authors developed the theoretical results and wrote the manuscript. EAH developed the ILP. DPR implemented the algorithms, devised and performed the experimental evaluation. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="d29e7390">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e7395">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="d29e7400">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="d29e7405">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <mixed-citation publication-type="other">Sankoff D. Edit distance for genome comparison based on non-local operations. In: Proc. of CPM 1992 LNCS, vol. 644.1992. p. 121–35.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sankoff</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Genome rearrangement with gene families</article-title>
        <source>Bioinformatics</source>
        <year>1999</year>
        <volume>15</volume>
        <issue>11</issue>
        <fpage>909</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/15.11.909</pub-id>
        <?supplied-pmid 10743557?>
        <pub-id pub-id-type="pmid">10743557</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bafna</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Genome rearrangements and sorting by reversals</article-title>
        <source>Proc. of FOCS 1993</source>
        <year>1993</year>
        <publisher-loc>Palo Alto</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Hannenhalli</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pevzner</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Transforming men into mice (polynomial algorithm for genomic distance problem)</article-title>
        <source>Proc. of FOCS 1995</source>
        <year>1995</year>
        <publisher-loc>Milwaukee</publisher-loc>
        <publisher-name>IEEE</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yancopoulos</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Attie</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Friedberg</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Efficient sorting of genomic permutations by translocation, inversion and block interchanges</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <issue>16</issue>
        <fpage>3340</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti535</pub-id>
        <?supplied-pmid 15951307?>
        <pub-id pub-id-type="pmid">15951307</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bergeron</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Mixtacki</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Bucher</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Moret</surname>
            <given-names>BME</given-names>
          </name>
        </person-group>
        <article-title>A unifying view of genome rearrangements</article-title>
        <source>Proc. of WABI 2006. LNBI, vol. 4175</source>
        <year>2006</year>
        <publisher-loc>Zurich</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Braga</surname>
            <given-names>MDV</given-names>
          </name>
          <name>
            <surname>Willing</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Double cut and join with insertions and deletions</article-title>
        <source>J Comput Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <issue>9</issue>
        <fpage>1167</fpage>
        <lpage>84</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2011.0118</pub-id>
        <?supplied-pmid 21899423?>
        <pub-id pub-id-type="pmid">21899423</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bryant</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Sankoff</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Nadeau</surname>
            <given-names>JH</given-names>
          </name>
        </person-group>
        <article-title>The complexity of calculating exemplar distances</article-title>
        <source>Comparative Genomics</source>
        <year>2000</year>
        <publisher-loc>Dortrecht</publisher-loc>
        <publisher-name>Kluwer Academic Publishers</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bulteau</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Inapproximability of (1,2)-exemplar distance</article-title>
        <source>IEEE/ACM Trans. Comput. Biol. Bioinf</source>
        <year>2013</year>
        <volume>10</volume>
        <issue>6</issue>
        <fpage>1384</fpage>
        <lpage>90</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2012.144</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Angibaud</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fertin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rusu</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Vialette</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A pseudo-boolean framework for computing rearrangement distances between genomes with duplicates</article-title>
        <source>J Comput Biol</source>
        <year>2007</year>
        <volume>14</volume>
        <issue>4</issue>
        <fpage>379</fpage>
        <lpage>93</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2007.A001</pub-id>
        <?supplied-pmid 17572018?>
        <pub-id pub-id-type="pmid">17572018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Angibaud</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fertin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rusu</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Thévenin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vialette</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Efficient tools for computing the number of breakpoints and the number of adjacencies between two genomes with duplicate genes</article-title>
        <source>J Comput Biol</source>
        <year>2008</year>
        <volume>15</volume>
        <issue>8</issue>
        <fpage>1093</fpage>
        <lpage>115</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2008.0061</pub-id>
        <?supplied-pmid 18774903?>
        <pub-id pub-id-type="pmid">18774903</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Angibaud</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Fertin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Rusu</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Thévenin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vialette</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>On the approximability of comparing genomes with duplicates</article-title>
        <source>Journal of Graph Algorithms and Applications</source>
        <year>2009</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>19</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.7155/jgaa.00175</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Shao</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Moret</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>An exact algorithm to compute the DCJ distance for genomes with duplicate genes</article-title>
        <source>Proc. of RECOMB 2014. LNBI</source>
        <year>2014</year>
        <publisher-loc>Pittsburg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Doerr</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Thévenin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Gene family assignment-free comparative genomics</article-title>
        <source>BMC Bioinformatics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>Suppl 19</issue>
        <fpage>3</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-S19-S3</pub-id>
        <pub-id pub-id-type="pmid">22221313</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Braga</surname>
            <given-names>MDV</given-names>
          </name>
          <name>
            <surname>Chauve</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Doerr</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Jahn</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Thévenin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Wittler</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Chauve</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>El-Mabrouk</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Tannier</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>The potential of family-free genome comparison</article-title>
        <source>Models and Algorithms for Genome Evolution</source>
        <year>2013</year>
        <publisher-loc>London</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Durrett</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>York</surname>
            <given-names>TL</given-names>
          </name>
        </person-group>
        <article-title>Bayesian estimation of genomic distance</article-title>
        <source>Genetics</source>
        <year>2004</year>
        <volume>166</volume>
        <issue>1</issue>
        <fpage>621</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1534/genetics.166.1.621</pub-id>
        <?supplied-pmid 15020449?>
        <pub-id pub-id-type="pmid">15020449</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Martinez</surname>
            <given-names>FV</given-names>
          </name>
          <name>
            <surname>Feijão</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Braga</surname>
            <given-names>MDV</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>On the family-free DCJ distance and similarity</article-title>
        <source>Algoritm Mol Biol</source>
        <year>2015</year>
        <volume>10</volume>
        <fpage>13</fpage>
        <pub-id pub-id-type="doi">10.1186/s13015-015-0041-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Rubert</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Medeiros</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>Hoshino</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Braga</surname>
            <given-names>MDV</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Martinez</surname>
            <given-names>FV</given-names>
          </name>
        </person-group>
        <article-title>Algorithms for computing the family-free genomic similarity under DCJ</article-title>
        <source>Proc. of RECOMB-CG 2017. LNBI</source>
        <year>2017</year>
        <publisher-loc>Barcelona</publisher-loc>
        <publisher-name>Springer International Publishing</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Fu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Non-breaking similarity of genomes with gene repetitions</article-title>
        <source>Proc. of Combinatorial Pattern Matching (CPM 2007)</source>
        <year>2007</year>
        <publisher-loc>Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rubert</surname>
            <given-names>DP</given-names>
          </name>
          <name>
            <surname>Feijão</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Braga</surname>
            <given-names>MDV</given-names>
          </name>
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Martinez</surname>
            <given-names>FV</given-names>
          </name>
        </person-group>
        <article-title>Approximating the DCJ distance of balanced genomes in linear time</article-title>
        <source>Algoritm Mol Biol</source>
        <year>2017</year>
        <volume>12</volume>
        <fpage>3</fpage>
        <pub-id pub-id-type="doi">10.1186/s13015-017-0095-y</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shao</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Approximating the edit distance for genomes with duplicate genes under DCJ, insertion and deletion</article-title>
        <source>BMC Bioinformatics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>Suppl 19</issue>
        <fpage>13</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-13-S19-S13</pub-id>
        <pub-id pub-id-type="pmid">22264315</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Munkres</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Algorithms for the assignment and transportation problems</article-title>
        <source>J SIAM</source>
        <year>1957</year>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>32</fpage>
        <lpage>28</lpage>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edmonds</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Karp</surname>
            <given-names>RM</given-names>
          </name>
        </person-group>
        <article-title>Theoretical improvements in algorithmic efficiency for network flow problems</article-title>
        <source>J ACM</source>
        <year>1972</year>
        <volume>19</volume>
        <issue>2</issue>
        <fpage>248</fpage>
        <lpage>64</lpage>
        <pub-id pub-id-type="doi">10.1145/321694.321699</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tomizawa</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>On some techniques useful for solution of transportation network problems</article-title>
        <source>Networks</source>
        <year>1971</year>
        <volume>1</volume>
        <issue>2</issue>
        <fpage>173</fpage>
        <lpage>94</lpage>
        <pub-id pub-id-type="doi">10.1002/net.3230010206</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25</label>
      <mixed-citation publication-type="other">Hawick KA, James HA. Enumerating circuits and loops in graphs with self-arcs and multiple-arcs, Technical Report CSTN-013: Massey University; 2008.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Johnson</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Finding all the elementary circuits of a directed graph</article-title>
        <source>SIAM J Comput</source>
        <year>1975</year>
        <volume>4</volume>
        <issue>1</issue>
        <fpage>77</fpage>
        <lpage>84</lpage>
        <pub-id pub-id-type="doi">10.1137/0204007</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Halldórsson</surname>
            <given-names>MM</given-names>
          </name>
        </person-group>
        <article-title>A <italic>d</italic>/2 approximation for maximum weight independent set in <italic>d</italic>-claw free graphs</article-title>
        <source>Proc. of SWAT 2000</source>
        <year>2000</year>
        <publisher-loc>Bergen</publisher-loc>
        <publisher-name>Springer-Verlag Berlin Heidelberg</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dalquen</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Anisimova</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gonnet</surname>
            <given-names>GH</given-names>
          </name>
          <name>
            <surname>Dessimoz</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Alf – a simulation framework for genome evolution</article-title>
        <source>Mol Biol Evol</source>
        <year>2012</year>
        <volume>29</volume>
        <issue>4</issue>
        <fpage>1115</fpage>
        <pub-id pub-id-type="doi">10.1093/molbev/msr268</pub-id>
        <?supplied-pmid 22160766?>
        <pub-id pub-id-type="pmid">22160766</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29</label>
      <mixed-citation publication-type="other">Doerr D. Family Free Genome Comparison (FFGC). 2017. <ext-link ext-link-type="uri" xlink:href="https://bibiserv2.cebitec.uni-bielefeld.de/ffgc">https://bibiserv2.cebitec.uni-bielefeld.de/ffgc</ext-link>. Accessed 31 Jan 2018.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Ohno</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Sex Chromosomes and Sex-linked Genes. Endocrinology, vol. 1</source>
        <year>2013</year>
        <publisher-loc>Berlin, Heidelberg</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
  </ref-list>
</back>

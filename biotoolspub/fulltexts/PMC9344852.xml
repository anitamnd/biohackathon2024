<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9344852</article-id>
    <article-id pub-id-type="pmid">35708611</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac395</article-id>
    <article-id pub-id-type="publisher-id">btac395</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Shepherd: accurate clustering for correcting DNA barcode errors</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8577-7959</contrib-id>
        <name>
          <surname>Tavakolian</surname>
          <given-names>Nik</given-names>
        </name>
        <aff><institution>Department of Mathematics, Stockholm University</institution>, Stockholm 10691, <country country="SE">Sweden</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Frazão</surname>
          <given-names>João Guilherme</given-names>
        </name>
        <aff><institution>Department of Zoology, Stockholm University</institution>, Stockholm 10691, <country country="SE">Sweden</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-0831-7646</contrib-id>
        <name>
          <surname>Bendixsen</surname>
          <given-names>Devin</given-names>
        </name>
        <aff><institution>Department of Zoology, Stockholm University</institution>, Stockholm 10691, <country country="SE">Sweden</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-8530-0656</contrib-id>
        <name>
          <surname>Stelkens</surname>
          <given-names>Rike</given-names>
        </name>
        <aff><institution>Department of Zoology, Stockholm University</institution>, Stockholm 10691, <country country="SE">Sweden</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-8009-6265</contrib-id>
        <name>
          <surname>Li</surname>
          <given-names>Chun-Biu</given-names>
        </name>
        <xref rid="btac395-cor1" ref-type="corresp"/>
        <aff><institution>Department of Mathematics, Stockholm University</institution>, Stockholm 10691, <country country="SE">Sweden</country></aff>
        <!--cbli@math.su.se-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Kendziorski</surname>
          <given-names>Christina</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btac395-cor1">To whom correspondence should be addressed. <email>cbli@math.su.se</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>01</day>
      <month>8</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-06-16">
      <day>16</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <volume>38</volume>
    <issue>15</issue>
    <fpage>3710</fpage>
    <lpage>3716</lpage>
    <history>
      <date date-type="received">
        <day>03</day>
        <month>11</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>26</day>
        <month>3</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>03</day>
        <month>6</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>6</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>25</day>
        <month>6</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac395.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>DNA barcodes are short, random nucleotide sequences introduced into cell populations to track the relative counts of hundreds of thousands of individual lineages over time. Lineage tracking is widely applied, e.g. to understand evolutionary dynamics in microbial populations and the progression of breast cancer in humans. Barcode sequences are unknown upon insertion and must be identified using next-generation sequencing technology, which is error prone. In this study, we frame the barcode error correction task as a clustering problem with the aim to identify true barcode sequences from noisy sequencing data. We present Shepherd, a novel clustering method that is based on an indexing system of barcode sequences using <italic toggle="yes">k</italic>-mers, and a Bayesian statistical test incorporating a substitution error rate to distinguish true from error sequences.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>When benchmarking with synthetic data, Shepherd provides barcode count estimates that are significantly more accurate than state-of-the-art methods, producing 10–150 times fewer spurious lineages. For empirical data, Shepherd produces results that are consistent with the improvements seen on synthetic data. These improvements enable higher resolution lineage tracking and more accurate estimates of biologically relevant quantities, e.g. the detection of small effect mutations.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>A Python implementation of Shepherd is freely available at: <ext-link xlink:href="https://www.github.com/Nik-Tavakolian/Shepherd" ext-link-type="uri">https://www.github.com/Nik-Tavakolian/Shepherd</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Swedish Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100004359</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>2017-04963</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Knut and Alice Wallenberg Foundation</institution>
            <institution-id institution-id-type="DOI">10.13039/501100004063</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>2017.0163</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Wenner-Gren Foundations</institution>
            <institution-id institution-id-type="DOI">10.13039/100014437</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>UPD2018-0196</award-id>
        <award-id>UPD2019-0110</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Faculty of Science, Stockholm University</institution>
          </institution-wrap>
        </funding-source>
        <award-id>SU FV-1.2.1-0124-17</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>DNA barcodes are short DNA sequences that are introduced into a cell population to identify individuals and their offspring. These barcodes are passed on from generation to generation and can be used to track the relative counts of lineages over time (<xref rid="btac395-B2" ref-type="bibr">Blundell and Levy, 2014</xref>; <xref rid="btac395-B9" ref-type="bibr">Masuyama <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btac395-B11" ref-type="bibr">Nguyen Ba <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btac395-B15" ref-type="bibr">Weinreb and Klein, 2020</xref>). This technology is useful for analyzing the evolutionary dynamics of a population. For example, it has been used to infer the effects of mutations in populations of <italic toggle="yes">Saccharomyces cerevisiae</italic> (<xref rid="btac395-B5" ref-type="bibr">Johnson et al., 2019</xref>; <xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic>, 2015</xref>) and to track the progression of breast cancer in humans (<xref rid="btac395-B12" ref-type="bibr">Nguyen <italic toggle="yes">et al.</italic>, 2015</xref>).</p>
    <p>In general, the barcodes are unknown random DNA sequences. Once established in a population, the barcodes are identified through sequencing by synthesis, a process which involves generating millions of copies of each barcode using polymerase chain reaction (PCR) amplification. This is followed by a sequencing step, whereby each barcode sequence is identified. The counts of the identified sequences estimate the relative counts of the barcodes in the population. However, this ignores the fact that the sequencing process is error prone and assumes that each identified sequence corresponds to a unique barcode in the population. Both PCR amplification and sequencing can introduce errors in the identification of the barcodes, typically in the form of substitution errors, through which one or more nucleotides in a barcode are misidentified as different nucleotides. The substitution error rate for the Illumina sequencing platform (<xref rid="btac395-B1" ref-type="bibr">Bentley <italic toggle="yes">et al.</italic>, 2008</xref>) was estimated by <xref rid="btac395-B13" ref-type="bibr">Pfeiffer <italic toggle="yes">et al.</italic> (2018)</xref> to be <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>0.24</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> per base and <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>6.4</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of the sequences were found to contain at least one substitution error. To correctly determine the relative counts of the barcodes, these errors must be identified and corrected.</p>
    <p>We first define an <italic toggle="yes">error sequence</italic> as a sequence that originated through one or more substitution errors in the identification of a barcode. The original barcode is the <italic toggle="yes">source barcode</italic> of the error sequence. The error correction task can then be viewed as a clustering problem that groups similar sequences together: All error sequences that have the same source barcode should belong to the same cluster, together with their source barcode.</p>
    <p>The main challenge of this task is that the number of unique sequences can be in the millions and the number of barcodes can be in the hundreds of thousands. Since clustering involves grouping similar items, a standard approach is to compute all pairwise distances between the items before applying some clustering algorithm (<xref rid="btac395-B4" ref-type="bibr">Frey and Dueck, 2007</xref>). However, this approach is extremely computationally costly with millions of unique sequences. In addition, the number of barcodes is unknown beforehand, making the task more difficult since the cluster counts cannot be used as a guide to find accurate clusters.</p>
    <p>Bartender (<xref rid="btac395-B16" ref-type="bibr">Zhao <italic toggle="yes">et al.</italic>, 2018</xref>) and Starcode (<xref rid="btac395-B17" ref-type="bibr">Zorita <italic toggle="yes">et al.</italic>, 2015</xref>) are examples of recent methods for clustering barcode reads. These methods avoid fully computing all pairwise distances by utilizing various prioritization schemes. Nevertheless, they do not incorporate explicit estimates of the error rates associated with PCR amplification and sequencing. Explicit error rate estimates enable approximation of the probability distribution of error sequences. Knowledge of this distribution allows for more accurate classification of a sequence as either a true barcode or an error sequence.</p>
    <p>Here we present Shepherd, a new method for error correction of barcode reads. Shepherd is based on the idea of partitioning the barcode sequences into non-overlapping <italic toggle="yes">k</italic>-mers that are substrings of length <italic toggle="yes">k</italic>. These substrings are then used to construct an indexing system termed the <italic toggle="yes">k</italic>-mer Index, similar to a book indexing system in a library, which allows us to efficiently find the local neighborhood for a given sequence. This local neighborhood includes only sequences that are within a predefined distance to the sequence under consideration, without having to compute its distance to all other sequences. Furthermore, Shepherd employs a Bayesian hypothesis test that explicitly incorporates the substitution error rate to discriminate true barcodes from error sequences.</p>
    <p>The main achievement of Shepherd is that it offers a substantial improvement in error correction accuracy over other state-of-the-art methods. Specifically, Shepherd offers significant improvements for tracking low count lineages accurately. When compared with existing methods, Shepherd achieves 10 to 150 times fewer spurious lineages on synthetic single and multiple time point data. Furthermore, Shepherd provides highly accurate and unbiased barcode count estimates throughout the count range. On the experimental Illumina HiSeq data (<xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic>, 2015</xref>), we obtain results that are consistent with the improvements in the synthetic data benchmark.</p>
    <p>In Section 2, we provide a detailed description of the <italic toggle="yes">k</italic>-mer indexing system that enables efficient identification of sequence neighborhoods, and describe the clustering procedure that uses this <italic toggle="yes">k</italic>-mer indexing system to reliably correct substitution errors. In Section 3.1, we evaluate the error correction accuracy of Shepherd on synthetic data for both a single time point and multiple time points. In Section 3.2, cluster validation measures are used to evaluate the error correction accuracy of Shepherd on experimental Illumina HiSeq data (<xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic>, 2015</xref>), with comparisons to the current state-of-the-art methods, Bartender and Starcode. We discuss the results and the significance of our new approach in Section 4.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>In this section, we will explain each step performed by Shepherd to find accurate barcode clusters. In Section 2.1, we introduce the <italic toggle="yes">k</italic>-mer indexing system which forms the backbone of the method and enables efficient identification of neighbors for each sequence. In Section 2.2, the main clustering procedure is described.</p>
    <sec>
      <title>2.1 Finding sequence neighborhoods: the <italic toggle="yes">k</italic>-mer Index</title>
      <p>The purpose of the <italic toggle="yes">k</italic>-mer indexing system is to enable computationally inexpensive identification of all sequences that are similar to a given sequence. Before the <italic toggle="yes">k</italic>-mer Index can be constructed, a sensible distance metric between the sequences must be defined to specify what constitutes similarity. With error sequences arising from substitution errors, it is natural to use the Hamming distance as our distance metric. Let <italic toggle="yes">S<sub>a</sub></italic> and <italic toggle="yes">S<sub>b</sub></italic> denote two sequences with the same length <italic toggle="yes">l</italic>, the Hamming distance between the sequences is the number of nucleotide substitutions needed to convert one sequence to the other,
<disp-formula id="E1"><label>(1)</label><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mi>h</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>l</mml:mi></mml:munderover><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>a</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>≠</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:msub><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:math></disp-formula>where <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula> is the nucleotide at the <italic toggle="yes">j</italic>th position of the sequence <italic toggle="yes">S</italic> and <italic toggle="yes">I</italic> denotes the indicator function defined by,
<disp-formula id="E2"><label>(2)</label><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>≠</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="true">{</mml:mo><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>1</mml:mn><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mi>x</mml:mi><mml:mo>≠</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mn>0</mml:mn><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mtext>if</mml:mtext><mml:mo> </mml:mo><mml:mo> </mml:mo><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>y</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mrow></mml:mrow></mml:math></disp-formula></p>
      <p>We next define the <italic toggle="yes">ϵ</italic>-neighborhood of a given sequence as the set of all sequences with Hamming distance smaller than or equal to <italic toggle="yes">ϵ</italic> from it. We want to choose <italic toggle="yes">ϵ</italic> so that all error sequences of a barcode are within its <italic toggle="yes">ϵ</italic>-neighborhood. However, we do not want <italic toggle="yes">ϵ</italic> to be larger than necessary since the time and memory complexity of the method increases with larger <italic toggle="yes">ϵ</italic>. Therefore, a suitable value for <italic toggle="yes">ϵ</italic> offers a trade-off between accuracy and performance. For now, we assume that an appropriate value for <italic toggle="yes">ϵ</italic> has been chosen and detail the procedure for determining <italic toggle="yes">ϵ</italic> in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3B</xref>. Our goal is to efficiently find the <italic toggle="yes">ϵ</italic>-neighborhood of each unique sequence.</p>
      <p>To this end, consider each sequence as a set of non-overlapping <italic toggle="yes">k</italic>-mers that are substrings of length <italic toggle="yes">k</italic>. Let <italic toggle="yes">l</italic> denote the barcode length, each choice of <italic toggle="yes">k</italic> partitions the sequence into a set of <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo> </mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>-mers. One has <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mi>l</mml:mi><mml:mo>/</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula> if <italic toggle="yes">l</italic> is a multiple of <italic toggle="yes">k</italic>. Otherwise, the integer quotient defines the number of partitions with length <italic toggle="yes">k</italic> and there is one additional partition of length <italic toggle="yes">r</italic> with <italic toggle="yes">r</italic> the remainder.</p>
      <p>If a sequence is within distance <italic toggle="yes">ϵ</italic> of another sequence, the number of <italic toggle="yes">k</italic>-mers shared by the two sequences is at least <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo></mml:mrow></mml:math></inline-formula>. This follows from the pigeonhole principle exemplified in <xref rid="btac395-F1" ref-type="fig">Figure 1a</xref>. The figure shows an example with Sequences 2 and 3 within a distance <italic toggle="yes">ϵ </italic>= 2 from the true barcode. Consequently, these error sequences share two or more 2-mers with the true barcode. This is because we have at most two errors that occur in four 2-mers. Placing one error in each 2-mer minimizes the number of matching 2-mers, but always leaves two 2-mers error free. In general, the pigeonhole principle guarantees that the set of sequences sharing <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo></mml:mrow></mml:math></inline-formula> or more <italic toggle="yes">k</italic>-mers with a given sequence includes all sequences in the <italic toggle="yes">ϵ</italic>-neighborhood of the sequence. We call this set the <italic toggle="yes">k</italic>-mer neighborhood of the given sequence and require that <italic toggle="yes">k</italic> is chosen such that <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>, i.e. if two sequences have Hamming distance <italic toggle="yes">ϵ</italic>, we require that they share at least one <italic toggle="yes">k</italic>-mer.</p>
      <fig position="float" id="btac395-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>(<bold>a</bold>) Illustration of the pigeonhole principle for <italic toggle="yes">l </italic>=<italic toggle="yes"> </italic>8 and <italic toggle="yes">k </italic>=<italic toggle="yes"> </italic>2 (i.e. <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>=</mml:mo><mml:mi>l</mml:mi><mml:mo>/</mml:mo><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math></inline-formula>). Sequences 2 and 3 are within Hamming distance 2 of the true barcode. It follows from the pigeonhole principle that these error sequences share two or more 2-mers with the true barcode. Since Sequence 4 has Hamming distance 3 to the true barcode the pigeonhole principle only guarantees that it shares one 2-mer with it. Nevertheless, Sequence 4 still shares two 2-mers with the true barcode since two of its errors appear in the same 2-mer. (<bold>b</bold>) A given sequence (orange square) surrounded by its neighbors (dots) in sequence space. The orange dots are the <italic toggle="yes">k</italic>-mer neighbors of the given sequence, i.e. all sequences that share at least <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo> </mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>-mers with it. The blue dots are sequences not included in the <italic toggle="yes">k</italic>-mer neighborhood. The dashed circle is the <italic toggle="yes">ϵ</italic>-neighborhood of the sequence and the solid circle is the boundary for the <italic toggle="yes">k</italic>-mer neighbors, i.e. no <italic toggle="yes">k</italic>-mer neighbor appears outside the solid circle. Note that <italic toggle="yes">l</italic> is a multiple of <italic toggle="yes">k</italic> in this case and that all <italic toggle="yes">ϵ</italic>-neighbors of the sequence are also <italic toggle="yes">k</italic>-mer neighbors, this is guaranteed by the pigeonhole principle. (<bold>c</bold>) Illustration of how a pair of 2-mers are converted into a combination ID. First a pair of 2-mers is selected. Each 2-mer has a location in the sequence specified by the orange numbers. The 2-mer pair is then converted to an ID by assigning each of its nucleotides to a number specified by the conversion table on the right. (<bold>d</bold>) The <italic toggle="yes">k</italic>-mer Index for the set of sequences from the panel a, including only the 2-mer pairs shared by at least two sequences in the dataset. The blue numbers correspond to the sequence numbers specified in the panel a. Furthermore, the <italic toggle="yes">k</italic>-mer Index only includes the combination IDs with the corresponding sets and the 2-mer pairs (leftmost column) are only included here for illustrative purposes. (<bold>e</bold>) A schematic showing the process of finding the <italic toggle="yes">k</italic>-mer neighborhood of Sequence 1 from the panel a using the <italic toggle="yes">k</italic>-mer Index from the panel d. First all combination IDs of Sequence 1 are found and the corresponding sets are obtained from the <italic toggle="yes">k</italic>-mer Index. The set union of the sets yields the set of all sequences that share at least one combination ID with Sequence 1. By excluding Sequence 1 from this set we obtain its <italic toggle="yes">k</italic>-mer neighborhood (A color version of this figure appears in the online version of this article.)</p>
        </caption>
        <graphic xlink:href="btac395f1" position="float"/>
      </fig>
      <p>Note that sequences outside of the <italic toggle="yes">ϵ</italic>-neighborhood might also be included in the <italic toggle="yes">k</italic>-mer neighborhood. For example, this is the case for Sequence 4 in <xref rid="btac395-F1" ref-type="fig">Figure 1a</xref>. This sequence appears in the 2-mer neighborhood of the true barcode for <italic toggle="yes">ϵ </italic>= 2, despite having Hamming distance 3 to the true barcode. Nevertheless, since at least <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo> </mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>-mers match, the <italic toggle="yes">k</italic>-mer neighborhood is bounded by a certain Hamming distance threshold. When <italic toggle="yes">l</italic> is a multiple of <italic toggle="yes">k</italic>, this threshold is given by <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:mi>k</mml:mi><mml:mo>ϵ</mml:mo></mml:mrow></mml:math></inline-formula>. (Given that two sequences share exactly <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo> </mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>-mers, they have <italic toggle="yes">ϵ</italic> distinct <italic toggle="yes">k</italic>-mers when <italic toggle="yes">l</italic> is a multiple of <italic toggle="yes">k</italic>. The maximum Hamming distance between them corresponds to the case when every position in the distinct <italic toggle="yes">k</italic>-mers is a mismatch.) An illustration of the sequence neighborhoods is shown in <xref rid="btac395-F1" ref-type="fig">Figure 1b</xref>.</p>
      <p>In general, there can be several values for the substring length <italic toggle="yes">k</italic> satisfying the constraint <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo>&gt;</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math></inline-formula>. There are two primary considerations when choosing <italic toggle="yes">k</italic>. Firstly, <italic toggle="yes">k</italic> should not be too large such that the <italic toggle="yes">k</italic>-mer neighborhood of a sequence contains many more sequences than its <italic toggle="yes">ϵ</italic>-neighborhood, as a large <italic toggle="yes">k</italic>-mer neighborhood increases the search time for finding the <italic toggle="yes">ϵ</italic>-neighbors. Secondly, <italic toggle="yes">k</italic> should not be too small since small <italic toggle="yes">k</italic> increases the size of the <italic toggle="yes">k</italic>-mer Index defined below by increasing the number of <italic toggle="yes">k</italic>-mer combinations. In <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3C</xref>, we provide details on how <italic toggle="yes">k</italic> is automatically determined to optimize the computational cost of finding the <italic toggle="yes">ϵ</italic>-neighborhoods.</p>
      <p>For fixed <italic toggle="yes">p</italic> and <italic toggle="yes">ϵ</italic> there are <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>p</mml:mi></mml:msup><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> ways for two sequences to share <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo> </mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>-mers, where <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>m</mml:mi></mml:msup><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> denotes the number of possible combinations when choosing <italic toggle="yes">n</italic> items from a total of <italic toggle="yes">m</italic> items. Equivalently, there are <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>p</mml:mi></mml:msup><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> ways to choose <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo><mml:mo> </mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math></inline-formula>-mers from a sequence. Each one of these combinations is called a <italic toggle="yes">k</italic>-mer combination.</p>
      <p>The <italic toggle="yes">k</italic>-mer Index is a lookup table containing a collection of ID-set pairs: the ID in the pair is a <italic toggle="yes">k</italic>-mer combination identification number, and the corresponding set in the pair is the set of all unique sequences that contain that <italic toggle="yes">k</italic>-mer combination. <xref rid="btac395-F1" ref-type="fig">Figure 1d</xref> shows the <italic toggle="yes">k</italic>-mer Index for the sequences in <xref rid="btac395-F1" ref-type="fig">Figure 1a</xref>, excluding the <italic toggle="yes">k</italic>-mer combinations that only appear in a single sequence. To construct the <italic toggle="yes">k</italic>-mer Index, the following steps are performed for each sequence in the dataset:
</p>
      <list list-type="order">
        <list-item>
          <p>Find the <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mi>p</mml:mi></mml:msup><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi><mml:mo>−</mml:mo><mml:mo>ϵ</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> combinations of <italic toggle="yes">k</italic>-mers for the sequence under consideration. For example, if the barcode length is <italic toggle="yes">l</italic> = 8 and the number of partitions is <italic toggle="yes">p</italic> = 4 as in <xref rid="btac395-F1" ref-type="fig">Figure 1a</xref>, the number of 2-mer pairs is <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow/><mml:mn>4</mml:mn></mml:msup><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>6</mml:mn></mml:mrow></mml:math></inline-formula> for <italic toggle="yes">ϵ</italic> = 2.</p>
        </list-item>
        <list-item>
          <p>Convert each of these combinations into a combination ID, a number that uniquely represents the <italic toggle="yes">k</italic>-mer combination. This procedure is illustrated in <xref rid="btac395-F1" ref-type="fig">Figure 1c</xref> for the case when <italic toggle="yes">l</italic> = 8 and <italic toggle="yes">p</italic> = 4.</p>
        </list-item>
        <list-item>
          <p>Is the combination ID an established ID in the <italic toggle="yes">k</italic>-mer Index? <bold>No:</bold> Add the combination ID to the Index, the corresponding set is the set containing only the sequence under consideration. <bold>Yes:</bold> Query the index using the combination ID to find the set of sequences from previous iterations that share the <italic toggle="yes">k</italic>-mer combination. Then add the current sequence to that set, updating the set in the Index. <xref rid="btac395-F1" ref-type="fig">Figure 1d</xref> shows the final sets that arise from this procedure for the sequences in <xref rid="btac395-F1" ref-type="fig">Figure 1a</xref>.</p>
        </list-item>
      </list>
      <p>The <italic toggle="yes">k</italic>-mer Index is constructed once the above steps are performed for each sequence. Given a sequence, the index can be used to find its <italic toggle="yes">k</italic>-mer neighborhood. We query the index with the combination IDs of each sequence to find all sequences that share at least one combination with the given sequence. These sequences constitute its <italic toggle="yes">k</italic>-mer neighborhood. <xref rid="btac395-F1" ref-type="fig">Figure 1e</xref> shows the process of finding the <italic toggle="yes">k</italic>-mer neighborhood of the true barcode from <xref rid="btac395-F1" ref-type="fig">Figure 1a</xref>, using the <italic toggle="yes">k</italic>-mer Index from <xref rid="btac395-F1" ref-type="fig">Figure 1d</xref>. Once the <italic toggle="yes">k</italic>-mer neighborhood of a sequence is constructed, its <italic toggle="yes">ϵ</italic>-neighborhood can simply be found by keeping the sequences in the <italic toggle="yes">k</italic>-mer neighborhood that are within Hamming distance <italic toggle="yes">ϵ</italic>.</p>
      <p>We note that the most direct way of finding <italic toggle="yes">ϵ</italic>-neighborhoods is computing all pairwise Hamming distances between the sequences. However, the method presented here based on the <italic toggle="yes">k</italic>-mer Index is significantly more efficient. This is because the construction of the <italic toggle="yes">k</italic>-mer Index only requires one pass over the unique sequences. In contrast, the computation of all pairwise Hamming distances requires <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> of iterations, with <italic toggle="yes">N</italic> the number of unique sequences in the dataset. Once constructed, the index enables us to efficiently find the <italic toggle="yes">k</italic>-mer neighborhoods, narrowing the search for the <italic toggle="yes">ϵ</italic>-neighbors considerably.</p>
    </sec>
    <sec>
      <title>2.2 Clustering using <italic toggle="yes">k</italic>-mer neighborhoods</title>
      <p>In this section, we will describe the simple clustering procedure used to identify true barcodes and to group them with the error sequences that originated from them. The procedure is based on the observation that sequences with very high counts are unambiguously true barcodes, whereas sequences with low counts may be error sequences. We assume that the <italic toggle="yes">k</italic>-mer Index has already been constructed for some distance threshold <italic toggle="yes">ϵ</italic> and substring length <italic toggle="yes">k</italic>. Sequences classified as true barcodes by Shepherd are referred to as putative barcodes since they could still be error sequences due to classification errors.</p>
      <p>In the first step of the clustering procedure, we iterate over the unique sequences one by one in descending order of read counts and use the <italic toggle="yes">k</italic>-mer Index to find their <italic toggle="yes">k</italic>-mer neighborhoods. The first sequence with the highest read count is always classified as a putative barcode. Subsequent sequences are also classified as putative barcodes as long as none of their <italic toggle="yes">ϵ</italic>-neighbors are putative barcodes. Indeed, if a sequence is an error sequence, one would expect that its source barcode is a nearby putative barcode with a higher read count.</p>
      <p>However, if a putative barcode is found in the <italic toggle="yes">ϵ</italic>-neighborhood of the sequence under consideration, we cannot conclude if the sequence is an error sequence or a true barcode close to a putative barcode. Consequently, the naive strategy of classifying a sequence as an error sequence whenever it has a putative barcode as an <italic toggle="yes">ϵ</italic>-neighbor can lead to misclassification. The risk of misclassification is higher when the barcode length is short and <italic toggle="yes">ϵ</italic> is large, since these factors increase the likelihood that true barcodes are within distance <italic toggle="yes">ϵ</italic> of each other.</p>
      <p>To avoid erroneous classification of sequences with nearby putative barcodes, a Bayesian statistical test is used to determine if the sequence under consideration is either a true barcode or an error sequence originating from its closest putative barcode. If the sequence is classified as an error sequence, it is clustered with its closest putative barcode. In the rare cases when two or more putative barcodes have the same Hamming distance to the sequence under consideration, the one with the higher read count is considered. We refer to Supplementary Algorithm S1 for a pseudo-code description of the procedure.</p>
      <p>Our clustering procedure performs a statistical test every time a putative barcode is in the <italic toggle="yes">ϵ</italic>-neighborhood of the sequence under consideration. To reduce computational time, this test can be omitted for cases that are unambiguous, e.g. when the sequence has a very high read count it is almost certainly a true barcode. Furthermore, a truncated Hamming distance can be used to reduce computational time. We refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3D</xref> for a detailed description of how the clustering procedure is optimized.</p>
      <sec>
        <title>2.2.1 Correcting insertion and deletion errors</title>
        <p>In general, the rate of Indel sequencing errors is significantly lower than the rate of substitution errors. However, for sequences with long homopolymers it has been shown that the Indel error rate can be significantly higher (<xref rid="btac395-B10" ref-type="bibr">Minoche, <italic toggle="yes">et al.</italic>, 2011</xref>). In these sequences, single insertion or deletion errors may occur often enough that they must be corrected for to ensure accurate count estimation.</p>
        <p>Shepherd corrects single insertion and deletion errors using a post-processing procedure. First, all sequences of length <italic toggle="yes">l </italic>+<italic toggle="yes"> </italic>1 with single insertion errors are processed. For each of these sequences, we consider the <italic toggle="yes">l </italic>+<italic toggle="yes"> </italic>1 possible single deletions that yield a sequence of the correct length <italic toggle="yes">l</italic>. If one of these sequences is a putative barcode identified in the main clustering procedure, we assign the sequence to that putative barcode. Analogously, we correct single deletion errors by processing all sequences of length <italic toggle="yes">l</italic> − 1 and considering the <italic toggle="yes">l</italic> possible single insertions that yield a sequence of the correct length.</p>
      </sec>
      <sec>
        <title>2.2.2 Bayesian statistical test</title>
        <p>When a given sequence is within a Hamming distance <italic toggle="yes">ϵ</italic> from a putative barcode, it can either be an error sequence or a true barcode. Shepherd uses a statistical test to decide between the two cases (or hypotheses). The test accounts for the sequence under consideration and its read count, together with the sequence of the closest putative barcode and its read count. An error rate per nucleotide <italic toggle="yes">ρ</italic>, which is the estimated probability that a substitution error occurs at a nucleotide in a barcode, is also used to determine the likelihood of each hypothesis. We assume that the combined error rates of PCR amplification and sequencing are the same at each nucleotide position.</p>
        <p>Let <italic toggle="yes">S<sub>c</sub></italic> and <italic toggle="yes">f<sub>c</sub></italic> denote the sequence under consideration and its read count, respectively. Furthermore, let <italic toggle="yes">S<sub>p</sub></italic> denote the sequence of the neighboring putative barcode with read count <italic toggle="yes">f<sub>p</sub></italic>. The Hamming distance between the sequences is given by <italic toggle="yes">d</italic>, such that <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mi>d</mml:mi><mml:mo>≤</mml:mo><mml:mo>ϵ</mml:mo></mml:mrow></mml:math></inline-formula>.</p>
        <p>We will consider two competing models for the sequence under consideration. In the first model, <italic toggle="yes">M</italic><sub>1</sub>, the sequence <italic toggle="yes">S<sub>c</sub></italic> is an error sequence that originated from the nearby putative barcode <italic toggle="yes">S<sub>p</sub></italic> through substitution errors. In the second model, <italic toggle="yes">M</italic><sub>2</sub>, the sequence <italic toggle="yes">S<sub>c</sub></italic> is a true barcode. The likelihood of each model, <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>ρ</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> with <italic toggle="yes">i </italic>=<italic toggle="yes"> </italic>1 or 2, is the probability of observing the sequence <italic toggle="yes">S<sub>c</sub></italic> with read count <italic toggle="yes">f<sub>c</sub></italic> given each model. The ratio of the likelihoods for each model is known as the Bayes Factor for decision-making. An expression for each likelihood can be found (see details in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S1</xref>) allowing us to obtain the following computable form for the logarithm of the Bayes factor <italic toggle="yes">K</italic>,
<disp-formula id="E3"><label>(3)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mrow><mml:mtable><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mi>ln</mml:mi><mml:mi>K</mml:mi><mml:mo>=</mml:mo><mml:mi>ln</mml:mi><mml:mfrac><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mo>|</mml:mo><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>p</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfrac></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:mi>ln</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:msup><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:msub><mml:msubsup><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mrow><mml:mtext>pc</mml:mtext></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:msubsup><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mrow><mml:mtext>pc</mml:mtext></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>ln</mml:mi><mml:msub><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mrow><mml:mtext>pc</mml:mtext></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>l</mml:mi><mml:mi>ln</mml:mi><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mi>ln</mml:mi><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math></disp-formula></p>
        <p>Here <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi>n</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula> is an estimate of the true count of the putative barcode <italic toggle="yes">S<sub>p</sub></italic> and <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>f</mml:mi></mml:mrow><mml:mrow><mml:mtext>max</mml:mtext></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the highest read count observed in the data. The probability of converting the sequence <italic toggle="yes">S<sub>p</sub></italic> to <italic toggle="yes">S<sub>c</sub></italic> by substitution errors is estimated by <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo>^</mml:mo></mml:mover></mml:mrow></mml:mrow><mml:mrow><mml:mtext>pc</mml:mtext></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>ρ</mml:mo><mml:mo>/</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mi>d</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mo>ρ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mi>d</mml:mi></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S1A</xref>). This estimate is based on the assumption that once a substitution error occurs, all three nucleotides that could replace the original one are equally likely to be picked.</p>
        <p>To decide if the sequence <italic toggle="yes">S<sub>c</sub></italic> is a true barcode or an error sequence, a threshold for the log-Bayes factor (<xref rid="E3" ref-type="disp-formula">Eq. 3</xref>) must be supplied. In this study, we choose the threshold equal to –4 as suggested by <xref rid="btac395-B6" ref-type="bibr">Kass and Raftery (1995)</xref> and refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S1</xref> for details regarding the Bayesian statistical test.</p>
      </sec>
    </sec>
    <sec>
      <title>2.3 Multiple time point error correction with Shepherd</title>
      <p>So far we have covered error correction of barcode reads from a single time point. However, for the purpose of lineage tracking, barcode reads from multiple time points have to be processed. Specifically, error correction must be performed at each time point and the barcodes from one time point should be connected to the corresponding barcodes from different time points. Furthermore, some barcodes may not be identified in the first time point due to low sequencing coverage, but their counts may rise in later time points. Shepherd has the novel capability of identifying emerging barcodes at later time points. This enables more accurate lineage tracking, especially when the sequencing coverage is low.</p>
      <p>Shepherd only performs clustering for the first time point using the procedure described in Section 2.2. For subsequent time points, Shepherd treats the error correction task as a classification problem and assigns each sequence to its closest putative barcode within distance <italic toggle="yes">ϵ</italic> from the previous time point. If no putative barcode is within distance <italic toggle="yes">ϵ</italic> of the sequence, it is added to the set of unassigned sequences and processed separately at a later stage. If two or more putative barcodes have the same Hamming distance to the sequence under consideration and appear in its <italic toggle="yes">ϵ</italic>-neighborhood, the sequence is assigned to the one in the higher count cluster.</p>
      <p>Barcodes emerging at later time points may appear within the <italic toggle="yes">ϵ</italic>-neighborhoods of existing putative barcodes. To resolve these cases, Shepherd uses the statistical test from Section 2.2.2 to separate emerging barcodes from existing ones. This procedure has the additional benefit of correcting false negatives introduced in the first time point. Specifically, if two true barcodes are merged in the first time point, they will be separated at a later time point if their count discrepancy increases. We refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S2</xref> for a detailed description of the error correction procedures for multiple time points.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>In this section, we evaluate the performance of Shepherd and compare it with other state-of-the-art methods for error correction of DNA barcodes, namely, Bartender and Starcode (<xref rid="btac395-B16" ref-type="bibr">Zhao <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btac395-B17" ref-type="bibr">Zorita <italic toggle="yes">et al.</italic>, 2015</xref>). In Section 3.1, the methods are compared on synthetic data, for which the true cluster labels, i.e. true sequences, are known. In Section 3.2, we compare the methods using the lineage tracking data of <italic toggle="yes">S.cerevisiae</italic> obtained by <xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic> (2015)</xref> and perform clustering validation to assess the results.</p>
    <sec>
      <title>3.1 Synthetic data</title>
      <p>The evaluation of the methods for a single time point are based on three synthetic datasets. The synthetic barcodes have 20 random nucleotides and 6 constant nucleotides. This configuration was chosen to imitate barcodes produced in actual sequencing-based lineage tracking systems (<xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic>, 2015</xref>).</p>
      <p>Once the barcode sequences are generated, each one is assigned a count by drawing a sample from the exponential distribution with mean 100, and setting the count to the least integer greater than or equal to the sample (the ceiling function). To simulate substitution errors, we assume a constant per nucleotide error rate. Detailed procedures for generating the synthetic datasets are provided in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S4A</xref>.</p>
      <p>The synthetic datasets are summarized in <xref rid="btac395-T1" ref-type="table">Table 1</xref>. The error rate for Dataset A is chosen to be close to the error rate estimated experimentally by <xref rid="btac395-B13" ref-type="bibr">Pfeiffer <italic toggle="yes">et al.</italic> (2018)</xref> for the Illumina sequencing platform. The error rates in Datasets B and C are set to be higher to account for the error rate differences between sequencing platforms, and to test the performance of the different error correction methods in large error conditions. All three methods, Shepherd, Bartender and Starcode, were tested using their default settings when possible, to yield results a user would obtain without re-running the algorithms to adjust the parameters.</p>
      <table-wrap position="float" id="btac395-T1">
        <label>Table 1.</label>
        <caption>
          <p>Summary of synthetic datasets</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
            <col valign="top" align="center" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Dataset</th>
              <th align="left" rowspan="1" colspan="1">A</th>
              <th align="left" rowspan="1" colspan="1">B</th>
              <th align="left" rowspan="1" colspan="1">C</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Unique sequence count</td>
              <td rowspan="1" colspan="1">
                <inline-formula id="IE28">
                  <mml:math id="IM28" display="inline" overflow="scroll">
                    <mml:mrow>
                      <mml:mn>3</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>428</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>741</mml:mn>
                    </mml:mrow>
                  </mml:math>
                </inline-formula>
              </td>
              <td rowspan="1" colspan="1">
                <inline-formula id="IE29">
                  <mml:math id="IM29" display="inline" overflow="scroll">
                    <mml:mrow>
                      <mml:mn>5</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>773</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>822</mml:mn>
                    </mml:mrow>
                  </mml:math>
                </inline-formula>
              </td>
              <td rowspan="1" colspan="1">
                <inline-formula id="IE30">
                  <mml:math id="IM30" display="inline" overflow="scroll">
                    <mml:mrow>
                      <mml:mn>2</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>591</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>318</mml:mn>
                    </mml:mrow>
                  </mml:math>
                </inline-formula>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">True barcode count</td>
              <td rowspan="1" colspan="1">
                <inline-formula id="IE31">
                  <mml:math id="IM31" display="inline" overflow="scroll">
                    <mml:mrow>
                      <mml:mn>499</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>656</mml:mn>
                    </mml:mrow>
                  </mml:math>
                </inline-formula>
              </td>
              <td rowspan="1" colspan="1">
                <inline-formula id="IE32">
                  <mml:math id="IM32" display="inline" overflow="scroll">
                    <mml:mrow>
                      <mml:mn>499</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>320</mml:mn>
                    </mml:mrow>
                  </mml:math>
                </inline-formula>
              </td>
              <td rowspan="1" colspan="1">
                <inline-formula id="IE33">
                  <mml:math id="IM33" display="inline" overflow="scroll">
                    <mml:mrow>
                      <mml:mn>99</mml:mn>
                      <mml:mo> </mml:mo>
                      <mml:mn>507</mml:mn>
                    </mml:mrow>
                  </mml:math>
                </inline-formula>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Error rate</td>
              <td rowspan="1" colspan="1">0.33%</td>
              <td rowspan="1" colspan="1">0.66%</td>
              <td rowspan="1" colspan="1">2%</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn1">
            <p><italic toggle="yes">Note</italic>: All datasets have barcodes with a total barcode length of 26, with 20 random nucleotides and 6 constant nucleotides.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>For Shepherd, the parameter <italic toggle="yes">ρ</italic> was estimated from the data using the procedure described in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3A</xref>. For all datasets, the relative difference between the true error rate and the estimated error rate was &lt;1.5%. The threshold for log-Bayes factor was set to its default value –4. This threshold implies that the likelihood of model <italic toggle="yes">M</italic><sub>2</sub> must be at least around 55 times larger than the likelihood of model <italic toggle="yes">M</italic><sub>1</sub> for the sequence to be classified as a true barcode.</p>
      <p>The motivation for favoring model <italic toggle="yes">M</italic><sub>1</sub> is that error sequences classified as true barcodes are generally more disruptive than true barcodes classified as error sequences for the purpose of lineage tracking. This is because in the former case an entirely new spurious lineage is created, whereas the latter case involves a relatively mild distortion of the estimated barcode counts. The other parameters of Shepherd are summarized in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref> and were automatically determined using the procedures described in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S3</xref>. The parameters of Bartender are set to match the ones used by <xref rid="btac395-B16" ref-type="bibr">Zhao <italic toggle="yes">et al.</italic> (2018)</xref> on similar data and Starcode is applied with its default settings and the distance threshold set to 2.</p>
      <p>To compare the clustering results of the methods, we consider the false positive count (FPC) and false negative count (FNC) on each dataset. A false positive is an identified cluster that does not correspond to a true barcode. A false negative is a true barcode that is clustered together with another true barcode with higher count. In other words, a false positive is a spurious lineage and a false negative is a true barcode that is incorrectly classified as an error sequence. A higher FPC implies a large number of spurious low count lineages, since most false positives are small groups of error sequences from a common source barcode. Furthermore, a high FNC indicates that the method is under-clustering by merging different barcodes. <xref rid="btac395-T2" ref-type="table">Table 2</xref> shows the FPC and FNC for each method on each synthetic dataset. While the FNC is similar for all methods, the FPC is substantially lower for Shepherd across all datasets. This difference in FPC increases with the error rates of the datasets, suggesting that Shepherd performs better in large error conditions.</p>
      <table-wrap position="float" id="btac395-T2">
        <label>Table 2.</label>
        <caption>
          <p>The false positive count (FPC) and false negative count (FNC) for each method on each synthetic dataset</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
            <col valign="top" align="char" char="." span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Dataset</th>
              <th colspan="2" rowspan="1">A<hr/></th>
              <th colspan="2" rowspan="1">B<hr/></th>
              <th colspan="2" rowspan="1">C<hr/></th>
            </tr>
            <tr>
              <th rowspan="1" colspan="1">Measure</th>
              <th rowspan="1" colspan="1">FPC</th>
              <th rowspan="1" colspan="1">FNC</th>
              <th rowspan="1" colspan="1">FPC</th>
              <th rowspan="1" colspan="1">FNC</th>
              <th rowspan="1" colspan="1">FPC</th>
              <th rowspan="1" colspan="1">FNC</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">Shepherd</td>
              <td rowspan="1" colspan="1">45</td>
              <td rowspan="1" colspan="1">66</td>
              <td rowspan="1" colspan="1">482</td>
              <td rowspan="1" colspan="1">82</td>
              <td rowspan="1" colspan="1">461</td>
              <td rowspan="1" colspan="1">50</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Bartender</td>
              <td rowspan="1" colspan="1">1979</td>
              <td rowspan="1" colspan="1">47</td>
              <td rowspan="1" colspan="1">14 100</td>
              <td rowspan="1" colspan="1">62</td>
              <td rowspan="1" colspan="1">59 554</td>
              <td rowspan="1" colspan="1">6</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Starcode</td>
              <td rowspan="1" colspan="1">7045</td>
              <td rowspan="1" colspan="1">91</td>
              <td rowspan="1" colspan="1">26 289</td>
              <td rowspan="1" colspan="1">99</td>
              <td rowspan="1" colspan="1">78 956</td>
              <td rowspan="1" colspan="1">4</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p><xref rid="btac395-F2" ref-type="fig">Figure 2a</xref> shows the count distribution of the low count putative barcodes identified by each method on Dataset B compared to the ground truth. For higher count putative barcodes, the cluster read counts of all methods closely match the ground truth. However, as a consequence of the high FPCs of Bartender and Starcode when compared with Shepherd (see <xref rid="btac395-T2" ref-type="table">Table 2</xref>), these methods overestimate the number of clusters with low read counts, as can be seen from <xref rid="btac395-F2" ref-type="fig">Figure 2a</xref>. In particular, the number of single read clusters is estimated to be around four times higher for Bartender and seven times higher for Starcode, when compared with the ground truth. The corresponding plots for Datasets A and C are given in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figures S1 and S2</xref>, respectively.</p>
      <fig position="float" id="btac395-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>(<bold>a</bold>) The number of clusters with low read counts (&lt;6) for each method compared to the ground truth on Dataset B. (<bold>b</bold>) Estimated barcode counts compared to the true counts for each method on Dataset B. Only true barcodes identified by all three methods are displayed. True barcodes for which all three methods estimated the same count are excluded to emphasize differences in the estimated counts. (<bold>c</bold>) The mean absolute difference between the true barcode counts and the estimated counts of Shepherd and Bartender at each time point. For each time point, only true barcodes identified by both methods are included in the comparison</p>
        </caption>
        <graphic xlink:href="btac395f2" position="float"/>
      </fig>
      <p>The FPC and FNC provide information about the ability of each method to distinguish true barcodes from error sequences. However, error sequences that are assigned to the wrong clusters do not affect these measures. When error sequences are not grouped with their source barcodes, the estimated counts of the source barcodes deviate from the true counts. In order to fully assess the accuracy of error sequence assignment, the estimated counts of the barcodes are compared with the true counts in <xref rid="btac395-F2" ref-type="fig">Figure 2b</xref> for each method on Dataset B. For a comparison of the estimated counts on Datasets A and C, we refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S3</xref>. We see that Shepherd is less prone to overestimation of the barcode counts compared to existing methods. We attribute this difference to the fact that Shepherd considers all nearby putative barcodes before assigning an error sequence to the closest one. Therefore, Shepherd is able to accurately determine which error sequences belong to each putative barcode in cases when two or more putative barcodes are close in the sequence space.</p>
      <p>Both Shepherd and Bartender support error correction across multiple time points. We evaluate the multiple time point accuracy of each method using synthetic data of <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mrow><mml:mn>500</mml:mn><mml:mo> </mml:mo><mml:mn>000</mml:mn></mml:mrow></mml:math></inline-formula> barcoded lineages, 5000 of which were given a growth advantage to simulate selection. The details of the simulation procedure for the multiple time points data are given in <xref rid="sup1" ref-type="supplementary-material">Supplementary Section S4B</xref>. To assess the accuracy of Shepherd and Bartender, we consider the mean absolute error (MAE) at each time point (<xref rid="btac395-F2" ref-type="fig">Fig. 2c</xref>). One can see that Shepherd achieves a considerably lower MAE compared to Bartender across all time points. One can also see that while the MAE of Bartender remains relatively constant over time, the MAE of Shepherd decreases with time. This is because false negatives introduced by Shepherd in the first time point are corrected at later time points as described in Section 2.3.</p>
    </sec>
    <sec>
      <title>3.2 Experimental Illumina HiSeq data</title>
      <p>In this section, we compare the methods on the experimental sequencing data (dataset is available from the NIH Sequence Read Archive with accession number SRR5747458) obtained by <xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic> (2015)</xref> using the Illumina HiSeq sequencing platform. In short, genetic barcodes were inserted into a clonal population of <italic toggle="yes">S.cerevisiae</italic>, grown in a serial batch culture setup and transferred every eight generations. At each time point, DNA was extracted and sequenced to generate the barcode datasets. Here we consider the dataset generated in the first time point. The dataset consists of <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:mn>2</mml:mn><mml:mo> </mml:mo><mml:mn>450</mml:mn><mml:mo> </mml:mo><mml:mn>766</mml:mn></mml:mrow></mml:math></inline-formula> unique sequences and the total read count is ∼136 million. In contrast to the synthetic datasets, the optimal clustering of the barcode reads is unknown in this case. Therefore, we will check for consistency in performance with the synthetic data and employ cluster validation measures to evaluate the clustering quality for each method.</p>
      <p>For Shepherd, the log-Bayes Factor is set to its default value –4 and the substring length is set to <italic toggle="yes">k </italic>=<italic toggle="yes"> </italic>3. The other parameters of Shepherd are automatically determined based on the input data and are summarized in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>. For Bartender, we use the same parameter settings used by <xref rid="btac395-B16" ref-type="bibr">Zhao <italic toggle="yes">et al.</italic> (2018)</xref> on the same dataset. Starcode is applied using its default setting and the distance threshold set to 2.</p>
      <p>The number of putative barcodes identified by Shepherd, Bartender and Starcode are <inline-formula id="IE36"><mml:math id="IM36" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo> </mml:mo><mml:mn>034</mml:mn><mml:mo> </mml:mo><mml:mn>911</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mn>1</mml:mn><mml:mo> </mml:mo><mml:mn>038</mml:mn><mml:mo> </mml:mo><mml:mn>600</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE37"><mml:math id="IM37" display="inline" overflow="scroll"><mml:mrow><mml:mn>1</mml:mn><mml:mo> </mml:mo><mml:mn>131</mml:mn><mml:mo> </mml:mo><mml:mn>999</mml:mn></mml:mrow></mml:math></inline-formula>, respectively. The number of barcodes identified in common by the methods is summarized in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S5</xref>. We evaluate the clustering of each method using a measure of cluster compactness, termed the effective cluster radius <italic toggle="yes">r<sub>e</sub></italic>. For a given cluster, <italic toggle="yes">r<sub>e</sub></italic> is defined as the average Hamming distance between its highest count sequence and all other sequences in the same cluster, with the highest count sequence treated as the cluster center. A small <italic toggle="yes">r<sub>e</sub></italic> for a cluster implies that the cluster is compact, i.e. sequences in the cluster are close to the cluster center.</p>
      <p><xref rid="btac395-F3" ref-type="fig">Figure 3a</xref> compares the distributions of <italic toggle="yes">r<sub>e</sub></italic> for Shepherd and Bartender. We refer to <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S4</xref> for a plot comparing all three methods. For Shepherd, <italic toggle="yes">r<sub>e</sub></italic> is between 1 and 2 for all clusters. For Bartender, most clusters have an effective cluster radius close to 1 but <inline-formula id="IE38"><mml:math id="IM38" display="inline" overflow="scroll"><mml:mrow><mml:mn>13</mml:mn><mml:mo> </mml:mo><mml:mn>205</mml:mn></mml:mrow></mml:math></inline-formula> clusters (<inline-formula id="IE39"><mml:math id="IM39" display="inline" overflow="scroll"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>3</mml:mn><mml:mo>%</mml:mo></mml:mrow></mml:math></inline-formula> of clusters) have values of <italic toggle="yes">r<sub>e</sub></italic> &gt;2, with some clusters having values of <italic toggle="yes">r<sub>e</sub></italic> &gt;5. Because clusters with a high <italic toggle="yes">r<sub>e</sub></italic> have low compactness, it is possible that these clusters contain error sequences that originate from different true barcodes. In that case, one would expect Bartender to overestimate the counts of the barcodes to which error sequences are assigned incorrectly. We see from <xref rid="btac395-F3" ref-type="fig">Figure 3b</xref> that Bartender tends to estimate higher barcode counts than Shepherd, especially for low count barcodes. This is also consistent with the clustering results on synthetic data (see <xref rid="btac395-F2" ref-type="fig">Fig. 2b</xref>).</p>
      <fig position="float" id="btac395-F3">
        <label>Fig. 3.</label>
        <caption>
          <p>(<bold>a</bold>) Distribution of the effective cluster radius <italic toggle="yes">r<sub>e</sub></italic> for each method for all clusters containing at least two sequences. There are <inline-formula id="IE40"><mml:math id="IM40" display="inline" overflow="scroll"><mml:mrow><mml:mn>439</mml:mn><mml:mo> </mml:mo><mml:mn>658</mml:mn></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE41"><mml:math id="IM41" display="inline" overflow="scroll"><mml:mrow><mml:mn>446</mml:mn><mml:mo> </mml:mo><mml:mn>168</mml:mn></mml:mrow></mml:math></inline-formula> such clusters for Shepherd and Bartender, respectively. (<bold>b</bold>) A 2D histogram of the cluster read counts estimated by Shepherd and Bartender including the barcodes identified by both methods. The colorbar indicates the number of barcodes in each bin</p>
        </caption>
        <graphic xlink:href="btac395f3" position="float"/>
      </fig>
      <p>It should be noted that cluster compactness alone is not sufficient to be a good measure of clustering quality. This is because increasing the cluster count always increases cluster compactness, but eventually leads to over-clustering. Therefore, we must also consider the number of clusters identified by each method to understand why Shepherd produces more compact clusters than Bartender. While the total cluster counts of Shepherd and Bartender are similar, Shepherd identifies 3689 fewer clusters than Bartender. This suggests that the more compact clustering of Shepherd should be attributed to superior clustering quality as opposed to over-clustering.</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>In summary, Shepherd exploits the pigeonhole principle to efficiently find neighborhoods for each sequence using the <italic toggle="yes">k</italic>-mer indexing system. By utilizing an estimated per nucleotide error rate, Shepherd can accurately classify sequences as either true barcodes or error sequences and is able to reliably assign error sequences to their source barcodes. In terms of both synthetic data and experimental sequencing data, we have demonstrated that Shepherd is significantly more accurate than other state-of-the-art methods for DNA barcode read clustering.</p>
    <p>These improvements in error correction accuracy have a number of implications for lineage tracking using DNA barcodes. Fundamentally, these improvements lead to higher resolution lineage tracking, with more accurate estimates of the relative counts of lineages in a population. In particular, Shepherd introduces significantly fewer spurious lineages when compared with previous methods. Notably, Shepherd also introduces the novel capability of tracking lineages that are undetectable in the first time point but emerge at later time points. Consequently, Shepherd enables more reliable estimates of biologically relevant quantities inferred from lineage tracking data, such as the beneficial mutation rate or the number of lineages without a beneficial mutation (<xref rid="btac395-B7" ref-type="bibr">Levy <italic toggle="yes">et al.</italic>, 2015</xref>).</p>
    <p>Recall that a number of simplifying assumptions were made to allow Shepherd to operate using a single per nucleotide error rate estimate. Specifically, Shepherd assumes that errors are equally likely at every position of the barcode and that all nucleotides are equally likely to replace the original one when an error occurs. Since substitution error rates tend to be higher at the end of a sequencing read (<xref rid="btac395-B13" ref-type="bibr">Pfeiffer <italic toggle="yes">et al.</italic>, 2018</xref>), a promising direction for future work is to explore the possibility of estimating separate error rates for each nucleotide position. Phred quality scores that estimate the sequencing error probabilities at each nucleotide position could conceivably be used for this purpose (<xref rid="btac395-B3" ref-type="bibr">Ewing and Green, 1998</xref>).</p>
    <p>While Shepherd is designed for error correction of DNA barcodes, its applicability extends to any error correction task involving errors in short DNA sequences (e.g. &lt;100 nucleotides). Furthermore, the <italic toggle="yes">k</italic>-mer indexing system presented here enables computationally efficient identification of sequence neighborhoods, and can be applied more broadly to any neighborhood identification task involving the Hamming distance. Such tasks are not limited to genomics and arise also in transcriptomics (<xref rid="btac395-B8" ref-type="bibr">Macmanes and Eisen, 2013</xref>).</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btac395_Supplementary_Data</label>
      <media xlink:href="btac395_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>The authors thank Sasha F. Levy for his helpful comments and suggestions.</p>
    <sec>
      <title>Funding</title>
      <p>This work was supported by the Swedish Research Council [2017-04963 to R.S.]; Knut and Alice Wallenberg Foundation [2017.0163 to R.S.]; Wenner-Gren Foundations [UPD2018-0196 and UPD2019-0110 to D.B.]; and the paired PhD programme of the Faculty of Science, Stockholm University [SU FV-1.2.1-0124-17 to C.-B.L. and R.S.].</p>
      <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac395-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bentley</surname><given-names>D.R.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2008</year>) <article-title>Accurate whole human genome sequencing using reversible terminator chemistry</article-title>. <source>Nature</source>, <volume>456</volume>, <fpage>53</fpage>–<lpage>59</lpage>.<pub-id pub-id-type="pmid">18987734</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Blundell</surname><given-names>J.R.</given-names></string-name>, <string-name><surname>Levy</surname><given-names>S.F.</given-names></string-name></person-group> (<year>2014</year>) <article-title>Beyond genome sequencing: lineage tracking with barcodes to study the dynamics of evolution, infection, and cancer</article-title>. <source>Genomics</source>, <volume>104</volume>, <fpage>417</fpage>–<lpage>430</lpage>.<pub-id pub-id-type="pmid">25260907</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ewing</surname><given-names>B.</given-names></string-name>, <string-name><surname>Green</surname><given-names>P.</given-names></string-name></person-group> (<year>1998</year>) <article-title>Base-calling of automated sequencer traces using phred. II. Error probabilities</article-title>. <source>Genome Res</source>., <volume>8</volume>, <fpage>186</fpage>–<lpage>194</lpage>.<pub-id pub-id-type="pmid">9521922</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Frey</surname><given-names>B.J.</given-names></string-name>, <string-name><surname>Dueck</surname><given-names>D.</given-names></string-name></person-group> (<year>2007</year>) <article-title>Clustering by passing messages between data points</article-title>. <source>Science</source>, <volume>315</volume>, <fpage>972</fpage>–<lpage>976</lpage>.<pub-id pub-id-type="pmid">17218491</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Johnson</surname><given-names>M.S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>Higher-fitness yeast genotypes are less robust to deleterious mutations</article-title>. <source>Science</source>, <volume>366</volume>, <fpage>490</fpage>–<lpage>493</lpage>.<pub-id pub-id-type="pmid">31649199</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kass</surname><given-names>R.E.</given-names></string-name>, <string-name><surname>Raftery</surname><given-names>A.E.</given-names></string-name></person-group> (<year>1995</year>) <article-title>Bayes factors</article-title>. <source>J. Am. Stat. Assoc</source>., <volume>90</volume>, <fpage>773</fpage>–<lpage>795</lpage>.</mixed-citation>
    </ref>
    <ref id="btac395-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Levy</surname><given-names>S.F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Quantitative evolutionary dynamics using high-resolution lineage tracking</article-title>. <source>Nature</source>, <volume>519</volume>, <fpage>181</fpage>–<lpage>186</lpage>.<pub-id pub-id-type="pmid">25731169</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Macmanes</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Eisen</surname><given-names>M.B.</given-names></string-name></person-group> (<year>2013</year>) <article-title>Improving transcriptome assembly through error correction of high-throughput sequence reads</article-title>. <source>PeerJ</source>, <volume>1</volume>, <fpage>e113</fpage>.<pub-id pub-id-type="pmid">23904992</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Masuyama</surname><given-names>N.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>DNA barcodes evolve for high-resolution cell lineage tracing</article-title>. <source>Curr. Opin. Chem. Biol</source>., <volume>52</volume>, <fpage>63</fpage>–<lpage>71</lpage>.<pub-id pub-id-type="pmid">31212208</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Minoche</surname><given-names>A.E.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) <article-title>Evaluation of genomic high-throughput sequencing data generated on Illumina HiSeq and Genome Analyzer systems</article-title>. <source>Genome Biol</source>., <volume>12</volume>, <fpage>R112</fpage>.<pub-id pub-id-type="pmid">22067484</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nguyen Ba</surname><given-names>A.N.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>High-resolution lineage tracking reveals travelling wave of adaptation in laboratory yeast</article-title>. <source>Nature</source>, <volume>575</volume>, <fpage>494</fpage>–<lpage>499</lpage>.<pub-id pub-id-type="pmid">31723263</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nguyen</surname><given-names>L.V.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Barcoding reveals complex clonal dynamics of <italic toggle="yes">de novo</italic> transformed human mammary cells</article-title>. <source>Nature</source>, <volume>528</volume>, <fpage>267</fpage>–<lpage>271</lpage>.<pub-id pub-id-type="pmid">26633636</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pfeiffer</surname><given-names>F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) <article-title>Systematic evaluation of error rates and causes in short samples in next-generation sequencing</article-title>. <source>Sci. Rep</source>., <volume>8</volume>, <fpage>10950</fpage>.<pub-id pub-id-type="pmid">30026539</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Weinreb</surname><given-names>C.</given-names></string-name>, <string-name><surname>Klein</surname><given-names>A.M.</given-names></string-name></person-group> (<year>2020</year>) <article-title>Lineage reconstruction from clonal correlations</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>117</volume>, <fpage>17041</fpage>–<lpage>17048</lpage>.<pub-id pub-id-type="pmid">32632001</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B16">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhao</surname><given-names>L.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) <article-title>Bartender: a fast and accurate clustering algorithm to count barcode reads</article-title>. <source>Bioinformatics</source>, <volume>34</volume>, <fpage>739</fpage>–<lpage>747</lpage>.<pub-id pub-id-type="pmid">29069318</pub-id></mixed-citation>
    </ref>
    <ref id="btac395-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zorita</surname><given-names>E.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2015</year>) <article-title>Starcode: sequence clustering based on all-pairs search</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>1913</fpage>–<lpage>1919</lpage>.<pub-id pub-id-type="pmid">25638815</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

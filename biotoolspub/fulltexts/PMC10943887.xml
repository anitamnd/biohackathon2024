<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Algorithms Mol Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Algorithms Mol Biol</journal-id>
    <journal-title-group>
      <journal-title>Algorithms for Molecular Biology : AMB</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1748-7188</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10943887</article-id>
    <article-id pub-id-type="publisher-id">258</article-id>
    <article-id pub-id-type="doi">10.1186/s13015-024-00258-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Infrared: a declarative tree decomposition-powered framework for bioinformatics</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Yao</surname>
          <given-names>Hua-Ting</given-names>
        </name>
        <address>
          <email>htyao@tbi.univie.ac.at</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Marchand</surname>
          <given-names>Bertrand</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Berkemer</surname>
          <given-names>Sarah J.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Will</surname>
          <given-names>Sebastian</given-names>
        </name>
        <address>
          <email>sebastian.will@polytechnique.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.503305.0</institution-id><institution-id institution-id-type="ISNI">0000 0004 0367 3665</institution-id><institution>LIX, CNRS UMR 7161, Ecole Polytechnique, Institut Polytechnique de Paris, </institution></institution-wrap>Palaiseau, France </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/03prydq77</institution-id><institution-id institution-id-type="GRID">grid.10420.37</institution-id><institution-id institution-id-type="ISNI">0000 0001 2286 1424</institution-id><institution>Department of Theoretical Chemistry, </institution><institution>University of Vienna, </institution></institution-wrap>Vienna, Austria </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/01pxwe438</institution-id><institution-id institution-id-type="GRID">grid.14709.3b</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 8649</institution-id><institution>School of Computer Science, </institution><institution>McGill University, </institution></institution-wrap>Montreal, Canada </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.32197.3e</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2105</institution-id><institution>Earth-Life Science Institute, </institution><institution>Tokyo Institute of Technology, </institution></institution-wrap>Tokyo, Japan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>13</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>9</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>2</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Motivation</title>
        <p id="Par1">Many bioinformatics problems can be approached as optimization or controlled sampling tasks, and solved exactly and efficiently using Dynamic Programming (DP). However, such exact methods are typically tailored towards specific settings, complex to develop, and hard to implement and adapt to problem variations.</p>
      </sec>
      <sec>
        <title>Methods</title>
        <p id="Par2">We introduce the Infrared framework to overcome such hindrances for a large class of problems. Its underlying paradigm is tailored toward problems that can be declaratively formalized as sparse feature networks, a generalization of constraint networks. Classic Boolean constraints specify a search space, consisting of putative solutions whose evaluation is performed through a combination of features. Problems are then solved using generic cluster tree elimination algorithms over a tree decomposition of the feature network. Their overall complexities are linear on the number of variables, and only exponential in the treewidth of the feature network. For sparse feature networks, associated with low to moderate treewidths, these algorithms allow to find optimal solutions, or generate controlled samples, with practical empirical efficiency.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par3">Implementing these methods, the Infrared software allows Python programmers to rapidly develop exact optimization and sampling applications based on a tree decomposition-based efficient processing. Instead of directly coding specialized algorithms, problems are declaratively modeled as sets of variables over finite domains, whose dependencies are captured by constraints and functions. Such models are then automatically solved by generic DP algorithms. To illustrate the applicability of Infrared in bioinformatics and guide new users, we model and discuss variants of bioinformatics applications. We provide reimplementations and extensions of methods for RNA design, RNA sequence-structure alignment, parsimony-driven inference of ancestral traits in phylogenetic trees/networks, and design of coding sequences. Moreover, we demonstrate multidimensional Boltzmann sampling. These applications of the framework—together with our novel results—underline the practical relevance of Infrared. Remarkably, the achieved complexities are typically equivalent to the ones of specialized algorithms and implementations.</p>
      </sec>
      <sec>
        <title>Availability</title>
        <p id="Par4">Infrared is available at <ext-link ext-link-type="uri" xlink:href="https://amibio.gitlabpages.inria.fr/Infrared">https://amibio.gitlabpages.inria.fr/Infrared</ext-link> with extensive documentation, including various usage examples and API reference; it can be installed using Conda or from source.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13015-024-00258-2.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Bioinformatics</kwd>
      <kwd>Fixed-parameter tractable algorithms</kwd>
      <kwd>Tree decomposition</kwd>
      <kwd>Boltzmann sampling</kwd>
      <kwd>Network phylogeny</kwd>
      <kwd>RNA sequence design</kwd>
      <kwd>RNA alignment</kwd>
      <kwd>Pseudoknots</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100002428</institution-id>
            <institution>Austrian Science Fund</institution>
          </institution-wrap>
        </funding-source>
        <award-id>I 4520</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yao</surname>
            <given-names>Hua-Ting</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001665</institution-id>
            <institution>Agence Nationale de la Recherche</institution>
          </institution-wrap>
        </funding-source>
        <award-id>ANR-21-CE45-0034-01</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100018694</institution-id>
            <institution>HORIZON EUROPE Marie Sklodowska-Curie Actions</institution>
          </institution-wrap>
        </funding-source>
        <award-id>10102967</award-id>
        <principal-award-recipient>
          <name>
            <surname>Berkemer</surname>
            <given-names>Sarah J.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>University of Vienna</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open access funding provided by University of Vienna.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par5">Typical applications of computational, “bioinformatical” methods to real world biological problems have inherently high complexity at different levels. For example, these include the design of functional control elements for biotechnology [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], identifying homologies in the context of RNA pseudoknots [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>], or the prediction of phylogenies considering complex inheritance patterns [<xref ref-type="bibr" rid="CR5">5</xref>]. First, <italic>modeling complexity</italic> is directly inherited from the complexity of the biological backdrop. This requires bioinformatics approaches to deal with hard constraints and soft requirements. Moreover, many approaches need to target complex scores, often composed of multiple interdependent objectives, e.g. for predicting optimal solutions or generating designs. In turn, the high modeling complexity is reflected in coding challenges and leads to high <italic>computational complexity</italic> of exact solutions. Frequently, this turns bioinformaticians away from exact, combinatorial methods to less controlled heuristics, for example optimization by local search or genetic algorithms [<xref ref-type="bibr" rid="CR6">6</xref>], or sampling by MCMC (Markov Chain Monte Carlo)-like approaches [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>], which sacrifice guarantees on the optimality of solutions or the time and space complexity of the computations.</p>
    <p id="Par6">Here, we introduce the framework Infrared to cope with these levels of complexity. This system lets users specify a large class of computational problems and solves them by combinatorial algorithms with parameterized complexity [<xref ref-type="bibr" rid="CR9">9</xref>]. These methods guarantee exactness and work efficiently, when the “complexity” (treewidth) of the problem instance is fixed. In practice, this limits the system to problems with moderately sparse dependencies. The system combines various concepts of computer science, comprising constraint modeling [<xref ref-type="bibr" rid="CR10">10</xref>], constraint and scoring networks [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], tree decomposition [<xref ref-type="bibr" rid="CR13">13</xref>], parameterized complexity [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR14">14</xref>], random generation, and (multidimensional) Boltzmann sampling [<xref ref-type="bibr" rid="CR15">15</xref>]. Along with Infrared, we advocate and hope to promote the use of exact methods. In place of heuristic methods, many NP-hard problems can be solved by algorithms of parameterized complexity, which our system makes more accessible due to proper abstractions. Other problems profit from building heuristic methods on top of exact algorithms.</p>
    <p id="Par7">Historically, the presented framework originated as a generalization of our own previous work on multitarget RNA design (RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]) and our original approach has been completely reimplemented and extended based on Infrared (RNARedprint v2<xref ref-type="fn" rid="Fn1">1</xref>). In parallel to the presented research, we used an early version of the system for original research in the area of negative RNA design (RNAPond, [<xref ref-type="bibr" rid="CR17">17</xref>]). Other recent work has strong conceptual ties: Tree-Diet [<xref ref-type="bibr" rid="CR18">18</xref>] (by using RNAPond and LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]) and AutoDP [<xref ref-type="bibr" rid="CR19">19</xref>]). Moreover, as we show in this text, sequence and RNA sequence-structure alignment can be implemented following the models of LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>] and [<xref ref-type="bibr" rid="CR20">20</xref>]; both papers introduced closely related solving strategies for alignment.</p>
    <p id="Par8">Our framework aims to facilitate the implementation of complex algorithms based on the declarative modeling paradigm. Instead of implementing a concrete algorithm, it allows users to formally describe the problem by specifying the admissible solutions and their quality assessments. Similar to, e.g. constraint programming or integer linear programming systems, those models are solved automatically by a built-in general mechanism.<fig id="Fig1"><label>Fig. 1</label><caption><p>The running example: graph coloring. <bold>A</bold> Example input graph. <bold>B</bold> One valid coloring with 4 colors, corresponding to an assignment of variables to colors (domain values) that satisfies all the inequality constraints along the edges. In our example extension, which minimizes the <italic>feature</italic> counting the different colors in each of its four cycles of length <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq1.gif"/></alternatives></inline-formula>, <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_2,v_3,v_5,v_6)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq2.gif"/></alternatives></inline-formula>, <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_2,v_5,v_7,v_8)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq3.gif"/></alternatives></inline-formula>, <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_5,v_6,v_7,v_8)$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq4.gif"/></alternatives></inline-formula> and <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_5,v_6,v_8,v_9$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>9</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq5.gif"/></alternatives></inline-formula>, this coloring is not optimal (e.g. recolor <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_3$$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mi>v</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq6.gif"/></alternatives></inline-formula>)</p></caption><graphic xlink:href="13015_2024_258_Fig1_HTML" id="MO1"/></fig></p>
    <sec id="FPar1">
      <title>Example 1</title>
      <p id="Par9">(Graph coloring) Let us illustrate this idea by modeling graph coloring as a Constraint Satisfaction Problem (CSP). We use this ‘toy problem’ as our running example to formally introduce our main concepts. For this purpose, we will later extend it beyond constraint satisfaction (introducing some quality of colorings).</p>
      <p id="Par10">Given a graph <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V, E)$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq7.gif"/></alternatives></inline-formula>, see Fig. <xref rid="Fig1" ref-type="fig">1</xref>A, the graph coloring problem asks for a vertex labeling by <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M16"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq8.gif"/></alternatives></inline-formula> colors, such that adjacent vertices are colored differently (Fig. <xref rid="Fig1" ref-type="fig">1</xref>B). To solve this classical problem in our system, we model it as a CSP, i.e. as a triple of a set of variables, one domain per variable, and constraints. This CSP introduces one variable per vertex, resulting in the set of variables <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{X_1,\dots ,X_{|V|}\}$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq9.gif"/></alternatives></inline-formula>. Each variable encodes the label of the corresponding vertex, i.e. it takes values from <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq10.gif"/></alternatives></inline-formula> to <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M22"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq11.gif"/></alternatives></inline-formula>, expressed by choosing the domain <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D(X_i)=\{1,\dots , k\}$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mi>D</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq12.gif"/></alternatives></inline-formula> for each <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq13.gif"/></alternatives></inline-formula>. Finally, we define the constraint set consisting of one inequality constraint <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}$$\end{document}</tex-math><mml:math id="M28"><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq14.gif"/></alternatives></inline-formula> between the variables <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M30"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq15.gif"/></alternatives></inline-formula> and <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M32"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq16.gif"/></alternatives></inline-formula> for every edge <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)\in E$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq17.gif"/></alternatives></inline-formula>.</p>
      <p id="Par11">Solving the problem means finding a <italic>valid</italic> assignment of values to variables that satisfies the constraints. Our system supports constraint solving, even if pure constraint solving serves mostly as a basis for further extensions. We can directly express our graph coloring model in Python code.<graphic position="anchor" xlink:href="13015_2024_258_Figa_HTML" id="MO2"/></p>
      <p>Based on this model, Infrared finds a valid coloring automatically due to its built-in parameterized algorithms in a time that depends on the size of the graph, the number of colors, and the <italic>complexity of G</italic>, i.e. its treewidth. For this purpose, one passes the model to the solver and asks for a valid solution. Since Infrared handles constraint satisfaction and optimization in the same way, its solver is called Optimizer.<graphic position="anchor" xlink:href="13015_2024_258_Figb_HTML" id="MO3"/></p>
    </sec>
    <sec id="Sec28">
      <title>Extending CSPs by features</title>
      <p id="Par13">Beyond validity, Infrared addresses solution quality in terms of one or several <italic>features</italic>—conceptually, we extend Infrared ’s models from CSPs to feature networks. This allows users of the framework to more naturally model complex problems with multiple objectives, as they commonly occur in bioinformatics. Based on specified features, Infrared is then able to perform tasks such as optimization and weighted sampling.</p>
      <sec id="FPar2">
        <title>Example 2</title>
        <p id="Par14">As a first feature example, let us pick up graph coloring and additionally minimize the use of different colors in cycles of length <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq18.gif"/></alternatives></inline-formula> (4-cycles). For this purpose, we specify a feature by imposing one 4-ary function Card for each 4-cycle that counts the different colors in the cycle (set cardinality); the sum of function values defines the value of the feature.</p>
        <p id="Par15">Infrared ’s syntax supports the compositional construction and extension of models. After defining the class of functions Card, we can therefore add them to the previous model.<graphic position="anchor" xlink:href="13015_2024_258_Figc_HTML" id="MO4"/></p>
        <p id="Par16">Given this extended model, the solver automatically finds an assignment with optimal evaluation by the feature.<graphic position="anchor" xlink:href="13015_2024_258_Figd_HTML" id="MO5"/></p>
        <p>Due to the features, the dependencies between variables become more complex. Where we had a dependency between the variables of each edge in the basic graph coloring model, after the extension, all four variables of each 4-cycle depend on each other due to the functions Card. Infrared ’s solver automatically adapts to this increased complexity of the problem.</p>
      </sec>
    </sec>
    <sec id="Sec29">
      <title>Boltzmann sampling</title>
      <p id="Par18">Once specified by a model, a problem can be <italic>solved</italic> in different ways. In addition to finding optimal solutions, one can just as easily sample assignments from a uniform or Boltzmann distribution controlled by potentially multiple features and their weights.</p>
      <sec id="FPar3">
        <title>Example 3</title>
        <p id="Par19">Continuing our example, we can generate random uniform colorings from the same model using a different solver.</p>
        <p id="Par20">In statistical mechanics, Boltzmann distributions describe the probabilities of states in a physical system depending on their energy. They are ubiquitous in physics and have numerous applications in bionformatics e.g. for describing the equilibrium of folding molecules [<xref ref-type="bibr" rid="CR21">21</xref>] or generating energy weighted and near-optimal conformations [<xref ref-type="bibr" rid="CR22">22</xref>]. Beyond physical interpretation, Boltzmann distributions have applications as general tools, e.g. in heuristic optimization [<xref ref-type="bibr" rid="CR23">23</xref>], for deriving probabilities in alignments [<xref ref-type="bibr" rid="CR24">24</xref>, <xref ref-type="bibr" rid="CR25">25</xref>] or for targeting properties [<xref ref-type="bibr" rid="CR15">15</xref>].<graphic position="anchor" xlink:href="13015_2024_258_Fige_HTML" id="MO6"/></p>
        <p id="Par21">Through the weight, we can control the expected value of the feature in the generated distribution. Setting a nonzero weight causes Infrared to sample from a nonuniform Boltzmann distribution, e.g. setting the weight to <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$+2$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq19.gif"/></alternatives></inline-formula> shifts the expectation to a large cardinality while setting it to <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-2$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq20.gif"/></alternatives></inline-formula> induces smaller cardinalities.</p>
      </sec>
    </sec>
    <sec id="Sec30">
      <title>Positioning against prior work</title>
      <p id="Par22">As already hinted by the introductory example, Infrared does <bold>not</bold> focus on general constraint solving as performed by constraint programming systems such as Gecode [<xref ref-type="bibr" rid="CR26">26</xref>]. Adding evaluation to our models ties this work closer to weighted constraint problems or cost networks, with some superficial relations to cost function optimizers such as Toulbar2 [<xref ref-type="bibr" rid="CR27">27</xref>]. While such systems combine search with forms of constraint consistency, our solving strategies come from the area of constraint processing in constraint networks [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par23">As such, our system is tailored to exactly and efficiently solve a specific class of problems, where it can algorithmically profit from a sufficiently tree-like structure (parameterized complexity for the parameter treewidth). This characteristic still allows broad and flexible use of the system, e.g. in bionformatics, where many relevant problems and problem instances have this structure. The capability to solve such bioinformatics problems by complete and exact algorithms with predictable complexity enables specific applications, e.g. it is essential for precisely controlled weighted sampling.</p>
    </sec>
    <sec id="Sec31">
      <title>Overview and contributions</title>
      <p id="Par24">In the next section, we formally define the core concepts of modeling problems in our framework; the models that characterize specific problem instances are formalized as feature networks. Moreover, we precisely state the tasks of optimization and sampling that are solved by the system. In Section “Algorithms for solving feature networks”, we describe the main algorithms to solve these tasks based on the model. Along with the algorithms we explain the underlying prerequisite key concepts of tree decomposition and cluster trees [<xref ref-type="bibr" rid="CR12">12</xref>]. The given generic, cluster tree elimination-based, algorithms are efficient for fixed treewidth values of the feature network—in other words, they are exponential in the treewidth only. In the second part of the paper, we present several examples of modeling different classic bioinformatics problems as feature networks. Due to the declarative nature of the Infrared system, stating the feature networks is very close to actually implementing these algorithms. To increase the practical value, we put out documented Python code (in the form of Jupyter notebooks) for each application example as supplementary material. Starting with applications to showcase elementary use of Infrared, we move on to advanced topics, including interesting extensions to preceding examples and the targeting of features by multidimensional Boltzmann sampling. Finally, we discuss implications for the use of the system and its application range, as well as future developments within and beyond the framework.</p>
    </sec>
  </sec>
  <sec id="Sec2">
    <title>Feature networks for modeling problems in Infrared</title>
    <p id="Par25">We conceptualize the declarative models of Infrared as <italic>feature networks</italic> (FNs). They are defined as a form of weighted CSP, explicitly distinguishing several real-valued features (instead of only a single or integer-valued score).</p>
    <sec id="FPar4">
      <title>Definition 1</title>
      <p id="Par26">(Feature Network; FN) A feature network (FN) <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M42"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq21.gif"/></alternatives></inline-formula> is a tuple <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq22.gif"/></alternatives></inline-formula>, where<list list-type="bullet"><list-item><p id="Par27"><inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} =\{X_1,\dots ,X_n\}$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq23.gif"/></alternatives></inline-formula> is a set of <bold>variables</bold>;</p></list-item><list-item><p id="Par28"><inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} =\{D_1,\dots ,D_n\}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi mathvariant="script">D</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq24.gif"/></alternatives></inline-formula> is a set of <bold>domains</bold>, one per variable, where each domain is a finite set of integers;</p></list-item><list-item><p id="Par29"><inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}$$\end{document}</tex-math><mml:math id="M50"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq25.gif"/></alternatives></inline-formula> is a finite set of <bold>constraints</bold>;</p></list-item><list-item><p id="Par30"><inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} =\{F_1,\ldots ,F_\ell \}$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi mathvariant="script">F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq26.gif"/></alternatives></inline-formula> is a set of <bold>features</bold>.</p></list-item></list></p>
      <p>Those networks specify <italic>solutions</italic> to a problem instance as specific assignments of domain values to variables.</p>
    </sec>
    <sec id="FPar5">
      <title>Definition 2</title>
      <p id="Par32">(Assignment) An <bold>assignment</bold>, for a given FN <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M54"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq27.gif"/></alternatives></inline-formula>, is a set of single variable mappings <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i\mapsto x_i$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq28.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq29.gif"/></alternatives></inline-formula> is a variable of <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M60"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq30.gif"/></alternatives></inline-formula>, <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M62"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq31.gif"/></alternatives></inline-formula> is in the domain <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i$$\end{document}</tex-math><mml:math id="M64"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq32.gif"/></alternatives></inline-formula> of <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq33.gif"/></alternatives></inline-formula> and every <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq34.gif"/></alternatives></inline-formula> occurs at most once. An assignment is called <bold>total</bold>, if every variable of <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M70"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq35.gif"/></alternatives></inline-formula> occurs exactly once; otherwise, it is <bold>partial</bold>.</p>
      <p>Given <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '\subseteq \mathcal {X}$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq36.gif"/></alternatives></inline-formula>, we denote the set of all <bold>assignments</bold>
<italic>x</italic>
<bold>of</bold>
<inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '$$\end{document}</tex-math><mml:math id="M74"><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq37.gif"/></alternatives></inline-formula> as <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A} _{\mathcal {X} '}$$\end{document}</tex-math><mml:math id="M76"><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq38.gif"/></alternatives></inline-formula>. When <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '$$\end{document}</tex-math><mml:math id="M78"><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq39.gif"/></alternatives></inline-formula> (and the order of its variables) is clear, one can write assignments as tuples, e.g. <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(x_1,\ldots ,x_n)$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq40.gif"/></alternatives></inline-formula> in place of <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_1\mapsto x_1,\dots ,X_n\mapsto x_n$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq41.gif"/></alternatives></inline-formula> in the case of a total assignment (<inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '=\mathcal {X}$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq42.gif"/></alternatives></inline-formula>).</p>
    </sec>
    <sec id="FPar6">
      <title>Example 4</title>
      <p id="Par34">Consider the graph <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq43.gif"/></alternatives></inline-formula> of Fig. <xref rid="Fig1" ref-type="fig">1</xref>. We model graph coloring for <italic>G</italic> and four colors as a feature network <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}= (\mathcal {X} _{\text {col}},\mathcal {D} _{\text {col}},\mathcal {C} _{\text {col}},\mathcal {F} _{\text {col}})$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq44.gif"/></alternatives></inline-formula>. Let us first define <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {col}}= \{X_1, \ldots , X_9\}$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {col}}= \{D_1,\ldots ,D_9\}$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq46.gif"/></alternatives></inline-formula>; <inline-formula id="IEq47"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i=\{1,2,3,4\}$$\end{document}</tex-math><mml:math id="M94"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq47.gif"/></alternatives></inline-formula>. This specifies one variable <inline-formula id="IEq48"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq48.gif"/></alternatives></inline-formula> for every vertex <inline-formula id="IEq49"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i$$\end{document}</tex-math><mml:math id="M98"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq49.gif"/></alternatives></inline-formula> in the graph and one domain per variable, encoding the colors as integer values.</p>
      <p id="Par35">A total assignment <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x=\{X_1\mapsto x_1,\ldots ,\mathcal {X} _9\mapsto x_9\}\in \mathcal {A} _{\mathcal {X} _{\text {col}}}$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq50.gif"/></alternatives></inline-formula> describes a coloring where the vertex <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i\in V$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq51.gif"/></alternatives></inline-formula> has color <inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq52.gif"/></alternatives></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="Sec32">
    <title>Validity of assignments</title>
    <p id="Par36"> To distinguish valid from invalid assignments, we introduce constraints <inline-formula id="IEq53"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}$$\end{document}</tex-math><mml:math id="M106"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq53.gif"/></alternatives></inline-formula> that need to be satisfied by valid assignments. In our running example, this allows us to define valid colorings and thus completely specify graph coloring as CSP.</p>
    <sec id="FPar7">
      <title>Definition 3</title>
      <p id="Par37">(Constraint) Given <inline-formula id="IEq54"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq54.gif"/></alternatives></inline-formula>, each <bold>constraint</bold>
<inline-formula id="IEq55"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq55.gif"/></alternatives></inline-formula> is associated with a set of variables <inline-formula id="IEq56"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_1},\ldots ,X_{i_k}\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq56.gif"/></alternatives></inline-formula> and a Boolean function on values <inline-formula id="IEq57"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1},\ldots ,x_{i_k}$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq57.gif"/></alternatives></inline-formula>. Given an assignment <italic>x</italic> containing <inline-formula id="IEq58"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_j}\mapsto x_{i_j}$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq58.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq59"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j\in \{1,\ldots ,k\}$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq59.gif"/></alternatives></inline-formula>, we <bold>evaluate the constraint</bold>
<italic>C</italic>
<bold>w.r.t.</bold> <italic>x</italic> by applying the Boolean function to <inline-formula id="IEq60"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1}, \ldots , x_{i_k}$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq60.gif"/></alternatives></inline-formula>. The resulting evaluation is denoted <italic>C</italic>(<italic>x</italic>).<disp-formula id="Equ7"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} C :\quad&amp;D_{i_1}\times \cdots \times D_{i_k}{} &amp; {} \rightarrow{} &amp; {} \{\textsf{True},\textsf{False} \} \\&amp;(x_{i_1},\dots ,x_{i_k}){} &amp; {} \mapsto{} &amp; {} C(x_{i_1},\dots ,x_{i_k}) \end{aligned}$$\end{document}</tex-math><mml:math id="M122" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>C</mml:mi><mml:mo>:</mml:mo><mml:mspace width="1em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="sans-serif">True</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">False</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>↦</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>We say <italic>C</italic> is <italic>k</italic><bold>-ary</bold> or has the <bold>arity</bold>
<italic>k</italic>. Let <inline-formula id="IEq61"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)=\{X_{i_1},\ldots ,X_{i_k}\}$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq61.gif"/></alternatives></inline-formula> denote the <bold>dependency</bold> of <italic>C</italic>. Note that the constraint literature commonly refers to the dependency of a constraint as its <bold>scope</bold>.</p>
      <p>We call an assignment <inline-formula id="IEq62"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _{\mathcal {X} '}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq62.gif"/></alternatives></inline-formula>, <inline-formula id="IEq63"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '\subseteq \mathcal {X}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq63.gif"/></alternatives></inline-formula>, <bold>valid</bold> iff all constraints <inline-formula id="IEq64"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq64.gif"/></alternatives></inline-formula> with <inline-formula id="IEq65"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)\subseteq \mathcal {X} '$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⊆</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq65.gif"/></alternatives></inline-formula> are <bold>satisfied</bold> (i.e. evaluated to True) by the assignment <italic>x</italic>.</p>
    </sec>
    <sec id="FPar8">
      <title>Example 5</title>
      <p id="Par39">To enforce the neighbor coloring constraint in our example, it is sufficient to add the constraint below for each edge <inline-formula id="IEq66"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_i, v_j)\in E$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq66.gif"/></alternatives></inline-formula><disp-formula id="Equ8"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; c_{{{\text{col}}}} \,{\text{ = }}\,\left\{ {{\textsf{NotEquals}}_{{\left[ {i,j} \right]}} \,\left| {\left( {v_{i} ,\,v_{j} } \right)\, \in \,E} \right.} \right\}{\text{with}}\,\\ &amp; \quad {\textsf{NotEquals}}_{{[i,j]}} \,\left( {x_{i} ,x_{j} } \right)\, = \,\delta \left( {x_{i} \ne x_{j} } \right), \end{aligned}$$\end{document}</tex-math><mml:math id="M136" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mspace width="0.166667em"/><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>=</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mspace width="0.166667em"/><mml:mfenced close="}" open="{"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">NotEquals</mml:mi><mml:mfenced close="]" open="["><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced open="|"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>∈</mml:mo><mml:mspace width="0.166667em"/><mml:mi>E</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mtext>with</mml:mtext><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:msub><mml:mi mathvariant="sans-serif">NotEquals</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mi>δ</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (p)$$\end{document}</tex-math><mml:math id="M138"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq67.gif"/></alternatives></inline-formula> is the truth value of the expression <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M140"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq68.gif"/></alternatives></inline-formula>.</p>
      <p id="Par40">The constraint <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq69.gif"/></alternatives></inline-formula> determines whether two given colors are distinct. Applying on all edges ensures that a valid assignment is a solution of the graph coloring problem. For example, both assignments <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}=(1,2,3,3,4,2,1,3,1)$$\end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq70.gif"/></alternatives></inline-formula> and <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}=(1,2,4,3,4,2,1,3,1)$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq71.gif"/></alternatives></inline-formula> satisfy the constraints <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {col}}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq72.gif"/></alternatives></inline-formula>.</p>
      <p id="Par41">In addition to finding valid assignments, one often wants to distinguish solutions by their quality. In graph coloring, we can e.g. aim for using fewer colors per 4-cycle; this would make <inline-formula id="IEq73"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}$$\end{document}</tex-math><mml:math id="M150"><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq73.gif"/></alternatives></inline-formula> preferable over <inline-formula id="IEq74"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}$$\end{document}</tex-math><mml:math id="M152"><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq74.gif"/></alternatives></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="Sec33">
    <title>Evaluation of assignments by features</title>
    <p id="Par42"> Each feature <inline-formula id="IEq75"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq75.gif"/></alternatives></inline-formula> is a set of <italic>network functions</italic>. In this way, a feature can describe a global property of assignments, in contrast to constraints and network functions which typically act on a small number of variables. This asymmetry is introduced intentionally to allow us to easily control multiple global properties. It specifies an <italic>evaluation</italic> as a sum over the values of the functions in this set; the single functions are defined in the same way as constraints but return real values (instead of Boolean ones).</p>
    <sec id="FPar9">
      <title>Definition 4</title>
      <p id="Par43">(Network Function) Each <bold>network function</bold>
<inline-formula id="IEq76"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M156"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq76.gif"/></alternatives></inline-formula> of a feature network is associated with variables <inline-formula id="IEq77"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_1},\ldots ,X_{i_k}\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq77.gif"/></alternatives></inline-formula> and a real-valued function that, given an assignment <italic>x</italic>, maps the values <inline-formula id="IEq78"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1}, \ldots , x_{i_k}$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq78.gif"/></alternatives></inline-formula> to a real number.<disp-formula id="Equ9"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} f:\quad&amp;D_{i_1}\times \cdots \times D_{i_k}{} &amp; {} \rightarrow{} &amp; {} \mathbb {R} \\&amp;(x_{i_1},\dots ,x_{i_k}){} &amp; {} \mapsto{} &amp; {} f(x_{i_1},\dots ,x_{i_k}). \end{aligned}$$\end{document}</tex-math><mml:math id="M162" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mspace width="1em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>↦</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>Analogous to constraints, the returned value is called the <bold>evaluation of</bold>
<inline-formula id="IEq79"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M164"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq79.gif"/></alternatives></inline-formula>
<bold>by</bold>
<italic>x</italic>, denoted <italic>f</italic>(<italic>x</italic>), and the dependency is <inline-formula id="IEq80"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f):=\{X_{i_1},\ldots ,X_{i_k}\}$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq80.gif"/></alternatives></inline-formula>.</p>
      <p>Overloading notation, we define the <bold>(induced) feature evaluation</bold> (of valid assignment <italic>x</italic> by feature <italic>F</italic>) by <inline-formula id="IEq81"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F(x) = \sum _{f\in F}f(x)$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq81.gif"/></alternatives></inline-formula>. To account for multiple features, Infrared combines them linearly.</p>
    </sec>
    <sec id="FPar10">
      <title>Definition 5</title>
      <p id="Par45">(Assignment evaluation) Given a feature network <inline-formula id="IEq82"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq82.gif"/></alternatives></inline-formula> and <bold>feature weights</bold>
<inline-formula id="IEq83"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M172"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq83.gif"/></alternatives></inline-formula>; <inline-formula id="IEq84"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M174"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq84.gif"/></alternatives></inline-formula> defines respective weights <inline-formula id="IEq85"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _F$$\end{document}</tex-math><mml:math id="M176"><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq85.gif"/></alternatives></inline-formula> for each feature <italic>F</italic> in <inline-formula id="IEq86"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}$$\end{document}</tex-math><mml:math id="M178"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq86.gif"/></alternatives></inline-formula>. The evaluation of a valid assignment <inline-formula id="IEq87"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M180"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq87.gif"/></alternatives></inline-formula> is defined as a linear combination of the feature values w.r.t. <inline-formula id="IEq88"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M182"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq88.gif"/></alternatives></inline-formula>.<disp-formula id="Equ10"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}E_{\mathcal {N}}(x, \alpha ) = \sum _{F\in \mathcal {F}}\alpha _FF(x).\end{aligned}$$\end{document}</tex-math><mml:math id="M184" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
    <sec id="FPar11">
      <title>Example 6</title>
      <p id="Par46">We can now express our objective in the extended graph coloring problem in terms of a feature. For this purpose, we introduce network functions that each count the different colors in a 4-cycle <inline-formula id="IEq89"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_i,v_j,v_k,v_l)$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq89.gif"/></alternatives></inline-formula> of the example graph,<disp-formula id="Equ11"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}{\text {\textsf{Card}}}_{[i,j,k,l]}(x_i,x_j,x_k,x_l) = |\{x_i,x_j,x_k,x_l\}|.\end{aligned}$$\end{document}</tex-math><mml:math id="M188" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula>The corresponding feature set is then <inline-formula id="IEq90"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {col}} = \{F_{\text {card}}\}$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq90.gif"/></alternatives></inline-formula> with<disp-formula id="Equ12"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}F_{\text {card}}=\{{\text {\textsf{Card}}}_{[2,3,5,6]},{\text {\textsf{Card}}}_{[2,5,7,8]},{\text {\textsf{Card}}}_{[5,6,7,8]}\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M192" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula>In feature network <inline-formula id="IEq91"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}=(\mathcal {X} _{\text {col}},\mathcal {D} _{\text {col}},\mathcal {C} _{\text {col}},\mathcal {F} _{\text {col}})$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq91.gif"/></alternatives></inline-formula>, the two assignment examples <inline-formula id="IEq92"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}$$\end{document}</tex-math><mml:math id="M196"><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq92.gif"/></alternatives></inline-formula> and <inline-formula id="IEq93"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}$$\end{document}</tex-math><mml:math id="M198"><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq93.gif"/></alternatives></inline-formula> are evaluated to <inline-formula id="IEq94"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}(x_{\text {col}},1)=3+4+4=11$$\end{document}</tex-math><mml:math id="M200"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>=</mml:mo><mml:mn>11</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq94.gif"/></alternatives></inline-formula> and <inline-formula id="IEq95"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}(x'_{\text {col}},1)=2+4+4=10$$\end{document}</tex-math><mml:math id="M202"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq95.gif"/></alternatives></inline-formula>, respectively (for feature weight 1).</p>
      <p>Observe that a constraint satisfaction problem (CSP) is a special case of a feature network <inline-formula id="IEq96"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M204"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq96.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq97"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}$$\end{document}</tex-math><mml:math id="M206"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq97.gif"/></alternatives></inline-formula> is empty. Feature networks are one of many possible extensions of CSPs known from the literature [<xref ref-type="bibr" rid="CR12">12</xref>] that add forms of quality evaluation. For example, cost networks typically contain only a single set of functions, whereas we decided to explicitly distinguish a set of constraints from multiple sets of functions (features).</p>
    </sec>
  </sec>
  <sec id="Sec34">
    <title>Infrared ’s modeling syntax</title>
    <p id="Par48">Recall the code snippets from the introduction. This code implements the feature network <inline-formula id="IEq98"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M208"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq98.gif"/></alternatives></inline-formula> that we formally developed above. As in our formal model description, the definition via Infrared ’s Python interface defines variables and domains, constraint and function types, and sets of constraints and functions. By providing the functionality to add constraints and functions to a model, we support compositional step-by-step construction and even extension of existing models.</p>
    <p id="Par49">Finally, our code examples demonstrate how models are fed to solvers, e.g. ir.Optimizer or ir.Sampler. This allows finding an optimal solution or generating controlled samples from the same model. We formally state the respective Problems <xref ref-type="sec" rid="FPar12">1</xref> and <xref ref-type="sec" rid="FPar13">2</xref> below; these solvers implement the algorithms of Sec. “Algorithms for solving feature networks”.</p>
    <p id="Par50">To keep this article concise, we refer the reader to our online reference and tutorials for syntactic aspects of using Infrared. For further reference, we recommend our coding-oriented introduction in Infrared in a book chapter [<xref ref-type="bibr" rid="CR28">28</xref>], which focuses on modeling of sequence and RNA design problems. Moreover, recall that we maintain an online archive of documented Infrared application examples (covering all examples of this paper).</p>
  </sec>
  <sec id="Sec35">
    <title>Problem statements</title>
    <p id="Par51">Given a feature network model <inline-formula id="IEq99"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M210"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq99.gif"/></alternatives></inline-formula>, there are two tasks of immediate particular interest: optimization and sampling of the solution space. Our framework addresses both tasks explicitly and solves them automatically based on the specification of <inline-formula id="IEq100"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M212"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq100.gif"/></alternatives></inline-formula>. First, we want to optimize assignments among all valid assignments of <inline-formula id="IEq101"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M214"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq101.gif"/></alternatives></inline-formula>. Concretely, we ask for the assignment that optimizes the evaluation, i.e. the linear combination of the features given specific feature weights <inline-formula id="IEq102"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M216"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq102.gif"/></alternatives></inline-formula>.</p>
    <sec id="FPar12">
      <title>Problem 1</title>
      <p id="Par52">(Assignment maximization)<def-list><def-item><term><sc>Input:</sc></term><def><p id="Par53">Feature network <inline-formula id="IEq103"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M218"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq103.gif"/></alternatives></inline-formula>, feature weights <inline-formula id="IEq104"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M220"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq104.gif"/></alternatives></inline-formula></p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par54">Valid assignment <inline-formula id="IEq105"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x^*\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M222"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq105.gif"/></alternatives></inline-formula> that is maximal w.r.t. <inline-formula id="IEq106"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M224"><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq106.gif"/></alternatives></inline-formula> and <inline-formula id="IEq107"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M226"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq107.gif"/></alternatives></inline-formula>: <disp-formula id="Equ13"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x^{*} \, = \,\mathop {{\text{arg}}\,{\text{max}}}\limits_{{\begin{array}{*{20}c} {x \in {\mathcal{A}}_{{\mathcal{X}}} } \\ {x{\text{ is valid}}} \\ \end{array} }} \,E_{{\mathcal{N}}} \left( {x,\alpha } \right).$$\end{document}</tex-math><mml:math id="M228" display="block"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:munder><mml:mrow><mml:mtext>arg</mml:mtext><mml:mspace width="0.166667em"/><mml:mtext>max</mml:mtext></mml:mrow><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>x</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.166667em"/><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p></def></def-item></def-list></p>
      <p>Furthermore, we want to use models to sample valid assignments from a Boltzmann distribution, i.e. each sample should be generated with a probability proportional to the Boltzmann weight of their evaluation w.r.t. a given <inline-formula id="IEq108"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M230"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq108.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="FPar13">
      <title>Problem 2</title>
      <p id="Par56">(Assignment sampling) <def-list><def-item><term><sc>Input:</sc></term><def><p id="Par57">Feature network <inline-formula id="IEq109"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M232"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq109.gif"/></alternatives></inline-formula>, feature weights <inline-formula id="IEq110"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M234"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq110.gif"/></alternatives></inline-formula></p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par58">Valid assignment <inline-formula id="IEq111"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M236"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq111.gif"/></alternatives></inline-formula> generated with a probability that is proportional to its Boltzmann weight w.r.t. <inline-formula id="IEq112"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq112.gif"/></alternatives></inline-formula> and <inline-formula id="IEq113"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M240"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq113.gif"/></alternatives></inline-formula>: <disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathbb {P}(x) \propto \exp \left( E_{\mathcal {N}}(x, \alpha )\right) . \end{aligned}$$\end{document}</tex-math><mml:math id="M242" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∝</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p></def></def-item></def-list></p>
      <p>Unfolding the assignment sampling problem, we realize that it implicitly asks for the <bold>partition function</bold><disp-formula id="Equ14"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}Z_{\mathcal {N}, \alpha }:= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \quad \exp \left( E_{\mathcal {N}}(x, \alpha )\right) ,\end{aligned}$$\end{document}</tex-math><mml:math id="M244" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="1em"/><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ14.gif" position="anchor"/></alternatives></disp-formula>i.e. the proportionality factor in Eq. <xref rid="Equ1" ref-type="disp-formula">1</xref>, such that<disp-formula id="Equ15"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathbb {P}(x) = \exp \left( E_{\mathcal {N}}(x, \alpha )\right) / Z_{\mathcal {N},\alpha }.\end{aligned}$$\end{document}</tex-math><mml:math id="M246" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ15.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Algorithms for solving feature networks</title>
    <p id="Par60">Given a feature network <inline-formula id="IEq114"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M248"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq114.gif"/></alternatives></inline-formula>, Problem <xref ref-type="sec" rid="FPar12">1</xref> asks for an optimal assignment to the variables. Here, the exponentially large assignment space forbids naive approaches. Based on a <bold>tree decomposition</bold> [<xref ref-type="bibr" rid="CR29">29</xref>] of the network, we employ a form of dynamic programming that decomposes the computation into<list list-type="bullet"><list-item><p id="Par61">a ‘forward’ optimization phase to determine the optimal evaluation (i.e. only its numerical value), while storing the results of subproblems</p></list-item><list-item><p id="Par62">and a subsequent traceback algorithm to obtain an optimal assignment.</p></list-item></list>Our approach performs the optimization on a tree-like structure, namely, an annotated <italic>tree decomposition</italic> of the network, called the <italic>cluster tree</italic>. Instead of inefficiently searching through all total assignments, it enumerates value combinations of variable subsets at tree nodes and avoids redundant computation by storing the results of subproblems/subtrees; the evaluation of functions and constraints is interleaved with this enumeration. The optimization traverses the tree in bottom-up order; moving top-down in the same tree, based on the (intermediary) results of the first phase, the traceback algorithm identifies one optimal assignment. As such, the approach is a form of <bold>cluster tree elimination (CTE)</bold> [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
    <sec id="Sec6">
      <title>Sampling resembles optimization</title>
      <p id="Par63">Assignment sampling (Problem <xref ref-type="sec" rid="FPar13">2</xref>) can be solved in a remarkably similar way to Problem <xref ref-type="sec" rid="FPar12">1</xref>. This task can also be split into two phases, namely, the computation of <bold>partition functions</bold> followed by stochastic traceback. Similar to standard traceback, stochastic traceback constructs solutions by tracing back through the partial results from the forward computation. However, it randomly selects values of variables based on partial partition functions. In this way it finally selects a total assignment from the intended distribution.</p>
      <p id="Par64">To emphasize the parallels between the problems, let us restate optimization as determining<disp-formula id="Equ16"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E_{\max }&amp;= \max _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \sum _{F\in \mathcal {F}} {\text {\textsf{Id}}}(\alpha _FF(x)) \\ {}&amp;= \max _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \sum _{F\in \mathcal {F}} \sum _{f\in F}{\text {\textsf{Id}}}(\alpha _Ff(x)) \end{aligned}$$\end{document}</tex-math><mml:math id="M250" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>E</mml:mi><mml:mo movablelimits="true">max</mml:mo></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ16.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq115"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Id}}}$$\end{document}</tex-math><mml:math id="M252"><mml:mtext mathvariant="sans-serif">Id</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq115.gif"/></alternatives></inline-formula> is the identity function, compared to the partition function<disp-formula id="Equ17"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} Z_{\mathcal {N}, \alpha }&amp;= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \prod _{F\in \mathcal {F}} \exp \left( \alpha _F F(x)\right) \\ {}&amp;= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \prod _{F\in \mathcal {F}} \prod _{f\in F} \exp \left( \alpha _F f(x)\right) . \end{aligned}$$\end{document}</tex-math><mml:math id="M254" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ17.gif" position="anchor"/></alternatives></disp-formula>This breakdown into single network functions suggests that a general scheme can be applied to both problems, which specializes to either problem by the choice of algebra: <inline-formula id="IEq116"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\max , +, {\text {\textsf{Id}}})$$\end{document}</tex-math><mml:math id="M256"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">max</mml:mo><mml:mo>,</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq116.gif"/></alternatives></inline-formula> for optimization and <inline-formula id="IEq117"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M258"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq117.gif"/></alternatives></inline-formula> for the partition function (and thus sampling).</p>
    </sec>
    <sec id="Sec7">
      <title>Computation guided by cluster trees</title>
      <p id="Par65">We will define a cluster tree as an annotated tree decomposition of a feature network; it assigns the network functions and constraints to nodes (also called bags or clusters) where they should be evaluated. The computations process these clusters. Here, the tree decomposition determines the processing order. Processing the clusters bottom-up in the forward phase computes a result for the subtree of each cluster. For each cluster, this involves enumerating the assignments of cluster variables, while evaluating the constraints and functions of the cluster as well as previously computed results from the children clusters. The traceback follows the cluster tree top-down, partially re-evaluates the clusters and, on this basis, determines variables.</p>
      <sec id="Sec8">
        <title>Dependency graphs, tree decompositions, and cluster trees</title>
        <p id="Par66">To properly guide the dynamic programming evaluation, cluster trees must reflect the network dependencies through tree decompositions.</p>
        <sec id="FPar14">
          <title>Definition 6</title>
          <p id="Par67">(Dependency graph) The <bold>dependency graph of</bold>
<inline-formula id="IEq118"><alternatives><tex-math id="M259">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M260"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq118.gif"/></alternatives></inline-formula> is the hypergraph <inline-formula id="IEq119"><alternatives><tex-math id="M261">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}=(\mathcal {X}, \mathcal {E_\mathcal {N}})$$\end{document}</tex-math><mml:math id="M262"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq119.gif"/></alternatives></inline-formula>, where the hyperedges <inline-formula id="IEq120"><alternatives><tex-math id="M263">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {E_\mathcal {N}}$$\end{document}</tex-math><mml:math id="M264"><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq120.gif"/></alternatives></inline-formula> are the dependencies of the constraints and functions:<disp-formula id="Equ18"><alternatives><tex-math id="M265">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {E}_\mathcal {N}:= \Big \{{\text {vars}}(C) \mid C\in \mathcal {C}\,\Big \} \cup \Big \{{\text {vars}}(f) \mid f\in \bigcup _{F\in \mathcal {F}} F\,\Big \}.\end{aligned}$$\end{document}</tex-math><mml:math id="M266" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">{</mml:mo></mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∣</mml:mo><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mspace width="0.166667em"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">}</mml:mo></mml:mrow><mml:mo>∪</mml:mo><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">{</mml:mo></mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∣</mml:mo><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:munder><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mi>F</mml:mi><mml:mspace width="0.166667em"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ18.gif" position="anchor"/></alternatives></disp-formula></p>
        </sec>
        <sec id="FPar15">
          <title>Definition 7</title>
          <p id="Par68">(Tree decomposition, treewidth) A <bold>tree decomposition of a dependency graph</bold>
<inline-formula id="IEq121"><alternatives><tex-math id="M267">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M268"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq121.gif"/></alternatives></inline-formula> is a pair <inline-formula id="IEq122"><alternatives><tex-math id="M269">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M270"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq122.gif"/></alternatives></inline-formula> of a (rooted) tree <inline-formula id="IEq123"><alternatives><tex-math id="M271">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T=(V,E)$$\end{document}</tex-math><mml:math id="M272"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq123.gif"/></alternatives></inline-formula> and a node labeling <inline-formula id="IEq124"><alternatives><tex-math id="M273">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi$$\end{document}</tex-math><mml:math id="M274"><mml:mi>χ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq124.gif"/></alternatives></inline-formula> by subsets of variables, i.e. <inline-formula id="IEq125"><alternatives><tex-math id="M275">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi :V\rightarrow 2^\mathcal {X}$$\end{document}</tex-math><mml:math id="M276"><mml:mrow><mml:mi>χ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">X</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq125.gif"/></alternatives></inline-formula>. These subsets are called the <bold>bags</bold> of the tree decomposition. <list list-type="order"><list-item><p id="Par69">Each variable <inline-formula id="IEq126"><alternatives><tex-math id="M277">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M278"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq126.gif"/></alternatives></inline-formula> is in at least one bag;</p></list-item><list-item><p id="Par70">For all hyperedge <inline-formula id="IEq127"><alternatives><tex-math id="M279">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e\in \mathcal {E}_\mathcal {N}$$\end{document}</tex-math><mml:math id="M280"><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq127.gif"/></alternatives></inline-formula>, there is a node <inline-formula id="IEq128"><alternatives><tex-math id="M281">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\in V$$\end{document}</tex-math><mml:math id="M282"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq128.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq129"><alternatives><tex-math id="M283">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e\subseteq \chi (u)$$\end{document}</tex-math><mml:math id="M284"><mml:mrow><mml:mi>e</mml:mi><mml:mo>⊆</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq129.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par71">For all variables <inline-formula id="IEq130"><alternatives><tex-math id="M285">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M286"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq130.gif"/></alternatives></inline-formula>, the set <inline-formula id="IEq131"><alternatives><tex-math id="M287">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{u\in V \mid X\in \chi (u)\}$$\end{document}</tex-math><mml:math id="M288"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>∣</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq131.gif"/></alternatives></inline-formula> induces a connected tree.</p></list-item></list>The <bold>width</bold> of a tree decomposition <inline-formula id="IEq132"><alternatives><tex-math id="M289">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M290"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq132.gif"/></alternatives></inline-formula> is<disp-formula id="Equ19"><alternatives><tex-math id="M291">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\max _{u\in V} |\chi (u)| - 1.\end{aligned}$$\end{document}</tex-math><mml:math id="M292" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ19.gif" position="anchor"/></alternatives></disp-formula>The <bold>treewidth</bold> of a hypergraph is the minimum width among all possible tree decompositions. The <bold>tree decomposition and treewidth of a feature network</bold>
<inline-formula id="IEq133"><alternatives><tex-math id="M293">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M294"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq133.gif"/></alternatives></inline-formula> are the respective tree decomposition and treewidth of its dependency graph <inline-formula id="IEq134"><alternatives><tex-math id="M295">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_\mathcal {N}$$\end{document}</tex-math><mml:math id="M296"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq134.gif"/></alternatives></inline-formula>.</p>
          <p>For a tree decomposition <inline-formula id="IEq135"><alternatives><tex-math id="M297">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M298"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq135.gif"/></alternatives></inline-formula>, <inline-formula id="IEq136"><alternatives><tex-math id="M299">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T=(V,E)$$\end{document}</tex-math><mml:math id="M300"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq136.gif"/></alternatives></inline-formula>, consider two nodes <inline-formula id="IEq137"><alternatives><tex-math id="M301">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u,v\in V$$\end{document}</tex-math><mml:math id="M302"><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq137.gif"/></alternatives></inline-formula>, where <italic>v</italic> is the parent of <italic>u</italic>. Generally, we assume the tree edges to be oriented toward the root, such that <inline-formula id="IEq138"><alternatives><tex-math id="M303">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v \in E$$\end{document}</tex-math><mml:math id="M304"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq138.gif"/></alternatives></inline-formula>. We define two sets:<list list-type="bullet"><list-item><p id="Par73"><inline-formula id="IEq139"><alternatives><tex-math id="M305">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u):=\chi (u)\cap \chi (v)$$\end{document}</tex-math><mml:math id="M306"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∩</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq139.gif"/></alternatives></inline-formula> the <bold>separator set</bold> of shared variables between <italic>u</italic> and its parent; this set describes the variables whose values are passed between parent and child in a tree traversal;</p></list-item><list-item><p id="Par74"><inline-formula id="IEq140"><alternatives><tex-math id="M307">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u):=\chi (u){\setminus } {\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M308"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq140.gif"/></alternatives></inline-formula> the <bold>difference set</bold> between the child and its parent. These are the ‘introduced’ variables by the child; they will be assigned at a child in the top-down traversal of the traceback.</p></list-item></list>To simplify the traceback step, we require tree decompositions to have empty root and difference sets of size 1 (i.e. <inline-formula id="IEq141"><alternatives><tex-math id="M309">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\text {diff}}(u)| = 1$$\end{document}</tex-math><mml:math id="M310"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq141.gif"/></alternatives></inline-formula> for every child node <inline-formula id="IEq142"><alternatives><tex-math id="M311">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M312"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq142.gif"/></alternatives></inline-formula>); we call this property <bold>gentle</bold>. Gentle tree decompositions have exactly one edge per variable. Note that any tree decomposition (as defined above) can be efficiently turned into a gentle decomposition of the same width by inserting additional bags wherever the difference set is too large and contracting edges where no variables are introduced.<fig id="Fig2"><label>Fig. 2</label><caption><p>Dependency graph and tree decompositions of the running example (feature network <inline-formula id="IEq143"><alternatives><tex-math id="M313">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M314"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq143.gif"/></alternatives></inline-formula>). <bold>A</bold> The dependency graph contains one (binary) edge per dependency due to a constraint <inline-formula id="IEq144"><alternatives><tex-math id="M315">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}\in \mathcal {C} _{\text {col}}$$\end{document}</tex-math><mml:math id="M316"><mml:mrow><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq144.gif"/></alternatives></inline-formula>. The dependency hyperedges due to the three network functions <inline-formula id="IEq145"><alternatives><tex-math id="M317">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}\in F_{\text {card}}$$\end{document}</tex-math><mml:math id="M318"><mml:mrow><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq145.gif"/></alternatives></inline-formula> are colored. <bold>B</bold> Two possible tree decompositions of this dependency graph (and therefore <inline-formula id="IEq146"><alternatives><tex-math id="M319">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M320"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq146.gif"/></alternatives></inline-formula>). The difference set is underlined in each bag. Solving of the network could be based on either one, but with different run time, which is dominated by the largest bag (bold). Due to their largest bags of size 5 and 6, the two tree decompositions have respective <italic>width</italic> 4 and 5. The bags handling the 4-ary functions are highlighted, where colors correspond to the hyperedges of A. <bold>C</bold> Tree decomposition of the network without 4-ary functions <inline-formula id="IEq147"><alternatives><tex-math id="M321">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}$$\end{document}</tex-math><mml:math id="M322"><mml:mtext mathvariant="sans-serif">Card</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq147.gif"/></alternatives></inline-formula>. The functions don’t allow any tree decomposition with width 3; thus they make the problem more complex</p></caption><graphic xlink:href="13015_2024_258_Fig2_HTML" id="MO7"/></fig></p>
        </sec>
        <sec id="FPar16">
          <title>Definition 8</title>
          <p id="Par75">(Cluster Tree) A <bold>cluster tree</bold>
<inline-formula id="IEq148"><alternatives><tex-math id="M323">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T, \chi , \phi )$$\end{document}</tex-math><mml:math id="M324"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq148.gif"/></alternatives></inline-formula>
<bold>of an</bold> FN <inline-formula id="IEq149"><alternatives><tex-math id="M325">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M326"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq149.gif"/></alternatives></inline-formula> is a tree decomposition <inline-formula id="IEq150"><alternatives><tex-math id="M327">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T=(V,E),\chi )$$\end{document}</tex-math><mml:math id="M328"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq150.gif"/></alternatives></inline-formula> of <inline-formula id="IEq151"><alternatives><tex-math id="M329">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M330"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq151.gif"/></alternatives></inline-formula> together with an annotation <inline-formula id="IEq152"><alternatives><tex-math id="M331">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi : V\rightarrow 2^\mathcal {C} \cup 2^\mathcal {F}$$\end{document}</tex-math><mml:math id="M332"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">C</mml:mi></mml:msup><mml:mo>∪</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">F</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq152.gif"/></alternatives></inline-formula>; it associates every <inline-formula id="IEq153"><alternatives><tex-math id="M333">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f\in \bigcup \mathcal {F}$$\end{document}</tex-math><mml:math id="M334"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mo>⋃</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq153.gif"/></alternatives></inline-formula> and <inline-formula id="IEq154"><alternatives><tex-math id="M335">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M336"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq154.gif"/></alternatives></inline-formula> to exactly one node <inline-formula id="IEq155"><alternatives><tex-math id="M337">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\in V$$\end{document}</tex-math><mml:math id="M338"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq155.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq156"><alternatives><tex-math id="M339">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f) \text { and } {\text {vars}}(C)\subseteq \chi (u)$$\end{document}</tex-math><mml:math id="M340"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>and vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⊆</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq156.gif"/></alternatives></inline-formula>.</p>
          <p>We use notations <inline-formula id="IEq157"><alternatives><tex-math id="M341">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \phi (u)$$\end{document}</tex-math><mml:math id="M342"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq157.gif"/></alternatives></inline-formula> and <inline-formula id="IEq158"><alternatives><tex-math id="M343">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f\in \phi (u)$$\end{document}</tex-math><mml:math id="M344"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq158.gif"/></alternatives></inline-formula> to refer to the constraints and network functions assigned to node <italic>u</italic> of the cluster tree, respectively. Given a cluster tree, we write <inline-formula id="IEq159"><alternatives><tex-math id="M345">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _f$$\end{document}</tex-math><mml:math id="M346"><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq159.gif"/></alternatives></inline-formula> to refer to the weight <inline-formula id="IEq160"><alternatives><tex-math id="M347">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _F$$\end{document}</tex-math><mml:math id="M348"><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq160.gif"/></alternatives></inline-formula> of the feature <inline-formula id="IEq161"><alternatives><tex-math id="M349">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M350"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq161.gif"/></alternatives></inline-formula> that contains <italic>f</italic>.</p>
          <p>In addition to the general cluster tree definition, we assume that constraints and functions are assigned to the lowest possible bag (corresponding to the smallest possible subtree).</p>
        </sec>
      </sec>
      <sec id="Sec9">
        <title>Evaluation following the cluster tree</title>
        <p id="Par78">For efficiency, Infrared evaluates constraints and network functions as soon as sufficient partial information is available (in contrast to a <italic>generate-and-evaluate</italic> strategy, which would enumerate assignments and evaluate only total assignments).</p>
        <p id="Par79">Recall the notion of <italic>partial assignments</italic> from Definition <xref ref-type="sec" rid="FPar5">2</xref>. The evaluation of a constraint (resp. network function) w.r.t. the partial assignment <inline-formula id="IEq162"><alternatives><tex-math id="M351">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bar{x}}$$\end{document}</tex-math><mml:math id="M352"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq162.gif"/></alternatives></inline-formula> is denoted <inline-formula id="IEq163"><alternatives><tex-math id="M353">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C(\bar{x})$$\end{document}</tex-math><mml:math id="M354"><mml:mrow><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq163.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq164"><alternatives><tex-math id="M355">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(\bar{x})$$\end{document}</tex-math><mml:math id="M356"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq164.gif"/></alternatives></inline-formula>); it is defined if the assignment assigns all variables of the dependency <inline-formula id="IEq165"><alternatives><tex-math id="M357">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)$$\end{document}</tex-math><mml:math id="M358"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq165.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq166"><alternatives><tex-math id="M359">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f)$$\end{document}</tex-math><mml:math id="M360"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq166.gif"/></alternatives></inline-formula>). Moreover, the union of partial assignments is well-defined if their variable sets are disjoint; this allows for the composition of larger partial assignments from smaller ones.</p>
        <sec id="FPar17">
          <title>Example 7</title>
          <p id="Par80">(Partial assignments) Consider the bag <inline-formula id="IEq167"><alternatives><tex-math id="M361">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{X_2,X_5,X_6,X_7,X_8\}$$\end{document}</tex-math><mml:math id="M362"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq167.gif"/></alternatives></inline-formula> of Fig. <xref rid="Fig2" ref-type="fig">2</xref>B (root of first tree) from the running graph-coloring example with cardinality network functions <inline-formula id="IEq168"><alternatives><tex-math id="M363">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}$$\end{document}</tex-math><mml:math id="M364"><mml:mtext mathvariant="sans-serif">Card</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq168.gif"/></alternatives></inline-formula>. The set <inline-formula id="IEq169"><alternatives><tex-math id="M365">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}_{\text {col}}=\{X_2\mapsto 2, X_5\mapsto 4, X_6\mapsto 2, X_7\mapsto 1, X_8\mapsto 3\}$$\end{document}</tex-math><mml:math id="M366"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq169.gif"/></alternatives></inline-formula> is a partial assignment of the bag’s variables; it lets us evaluate <inline-formula id="IEq170"><alternatives><tex-math id="M367">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}_{[2,5,7,8]}$$\end{document}</tex-math><mml:math id="M368"><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq170.gif"/></alternatives></inline-formula>, <inline-formula id="IEq171"><alternatives><tex-math id="M369">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}_{[2,5,7,8]}(\bar{x}_{\text {col}})=4$$\end{document}</tex-math><mml:math id="M370"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq171.gif"/></alternatives></inline-formula>, since the bag contains the dependency variables of this function. Consider another partial assignment <inline-formula id="IEq172"><alternatives><tex-math id="M371">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}=\{X_2\mapsto 2, X_5\mapsto 4, X_6\mapsto 3, X_7\mapsto 1, X_8\mapsto 3\}$$\end{document}</tex-math><mml:math id="M372"><mml:mrow><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq172.gif"/></alternatives></inline-formula>; <inline-formula id="IEq173"><alternatives><tex-math id="M373">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}$$\end{document}</tex-math><mml:math id="M374"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq173.gif"/></alternatives></inline-formula> is not valid because <inline-formula id="IEq174"><alternatives><tex-math id="M375">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}_{[6,8]}$$\end{document}</tex-math><mml:math id="M376"><mml:msub><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq174.gif"/></alternatives></inline-formula> evaluates to False w.r.t. <inline-formula id="IEq175"><alternatives><tex-math id="M377">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}$$\end{document}</tex-math><mml:math id="M378"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq175.gif"/></alternatives></inline-formula>.</p>
          <p>Given a cluster tree <inline-formula id="IEq176"><alternatives><tex-math id="M379">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi ,\phi )$$\end{document}</tex-math><mml:math id="M380"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq176.gif"/></alternatives></inline-formula> and a node <italic>u</italic> with parent <italic>v</italic>, the forward optimization algorithm successively computes optimal evaluations for subtrees <inline-formula id="IEq177"><alternatives><tex-math id="M381">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_{u}$$\end{document}</tex-math><mml:math id="M382"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq177.gif"/></alternatives></inline-formula> below nodes <italic>u</italic> (constituting subproblems of Problem <xref ref-type="sec" rid="FPar12">1</xref>).</p>
          <p>The <bold>optimal evaluation of subtree</bold>
<inline-formula id="IEq178"><alternatives><tex-math id="M383">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_{u}$$\end{document}</tex-math><mml:math id="M384"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq178.gif"/></alternatives></inline-formula> is<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M385">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \max _{\begin{array}{c} \bar{x}\in \mathcal {A} _{\chi (T_{u})}\\ \bar{x} \text { is valid} \end{array}} \sum _{f\in \phi (T_{u})}\alpha _ff(\bar{x}) \end{aligned}$$\end{document}</tex-math><mml:math id="M386" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq179"><alternatives><tex-math id="M387">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi (T_{u}):= \bigcup _{c\in T_{u}}\chi (c)$$\end{document}</tex-math><mml:math id="M388"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq179.gif"/></alternatives></inline-formula> and <inline-formula id="IEq180"><alternatives><tex-math id="M389">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi (T_{u}):= \bigcup _{c\in T_{u}}\phi (c)$$\end{document}</tex-math><mml:math id="M390"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq180.gif"/></alternatives></inline-formula>.</p>
          <p>To obtain total subtree evaluations, the algorithm computes and stores <italic>conditional</italic> optimal subtree evaluations, which depend on the partial assignment to <inline-formula id="IEq181"><alternatives><tex-math id="M391">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M392"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq181.gif"/></alternatives></inline-formula>. Thus, they allow decoupling the subtree from the remaining tree.</p>
          <p>For a node <italic>u</italic>, these conditional evaluations are computed for all such valid partial assignments, such that they specify network functions <inline-formula id="IEq182"><alternatives><tex-math id="M393">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u \rightarrow v}$$\end{document}</tex-math><mml:math id="M394"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq182.gif"/></alternatives></inline-formula>. We call them <bold>messages</bold> since they are used to pass information from child <italic>u</italic> to parent <italic>v</italic>.</p>
          <p>Additionally, define <inline-formula id="IEq183"><alternatives><tex-math id="M395">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(T_{u}):=\chi (T_{u}){\setminus }{\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M396"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq183.gif"/></alternatives></inline-formula> as the set of <bold>variables introduced by</bold>
<inline-formula id="IEq184"><alternatives><tex-math id="M397">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_u$$\end{document}</tex-math><mml:math id="M398"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq184.gif"/></alternatives></inline-formula>.</p>
        </sec>
        <sec id="FPar18">
          <title>Definition 9</title>
          <p id="Par86">(Conditional optimal subtree evaluation) Let <inline-formula id="IEq185"><alternatives><tex-math id="M399">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M400"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq185.gif"/></alternatives></inline-formula> be a node in the cluster tree <inline-formula id="IEq186"><alternatives><tex-math id="M401">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi ,\phi )$$\end{document}</tex-math><mml:math id="M402"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq186.gif"/></alternatives></inline-formula>; denote its parent by <italic>v</italic>. The <bold>conditional optimal subtree evaluation</bold> at <italic>u</italic> under condition <inline-formula id="IEq187"><alternatives><tex-math id="M403">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M404"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq187.gif"/></alternatives></inline-formula> is<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M405">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \max _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(T_{u})}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}} \sum _{f\in \phi (T_{u})}\alpha _ff(\bar{x}\cup \bar{x}') \end{aligned}$$\end{document}</tex-math><mml:math id="M406" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>Since the root of <italic>T</italic> is empty, conditional optimal subtree evaluations allow us to directly infer the total evaluation at the root. For every child <italic>u</italic> of the root, <inline-formula id="IEq188"><alternatives><tex-math id="M407">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M408"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq188.gif"/></alternatives></inline-formula> is empty; moreover, the children of the root do not have any variables in common (due to the definition of tree decomposition). Consequently, we obtain the total evaluation by summing the <inline-formula id="IEq189"><alternatives><tex-math id="M409">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M410"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq189.gif"/></alternatives></inline-formula>-ary messages sent to the root from its children<disp-formula id="Equ20"><alternatives><tex-math id="M411">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E_{\max } = \sum _{\text {child } u \text { of root}} m_{u\rightarrow \text { root}}(\varnothing ). \end{aligned}$$\end{document}</tex-math><mml:math id="M412" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mo movablelimits="true">max</mml:mo></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtext>child</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>of root</mml:mtext></mml:mrow></mml:munder><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>root</mml:mtext></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>∅</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ20.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>See Fig. <xref rid="Fig3" ref-type="fig">3</xref> for an illustration of the bottom-up computation and the subsequent top-down traceback. Following Proposition <xref ref-type="sec" rid="FPar19">1</xref> each bag <inline-formula id="IEq190"><alternatives><tex-math id="M413">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M414"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq190.gif"/></alternatives></inline-formula> can be processed together with the messages sent to it from its children; thus, we can understand the full computation as bottom-up message passing (Algorithm 1). The notion of message passing stems from more general formulations of CTE on unrooted cluster trees [<xref ref-type="bibr" rid="CR30">30</xref>]. The algorithm is correct due to the following proposition (shown in Additional file 1).</p>
        </sec>
        <sec id="FPar19">
          <title>Proposition 1</title>
          <p id="Par89">Let <inline-formula id="IEq191"><alternatives><tex-math id="M415">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M416"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq191.gif"/></alternatives></inline-formula> be a cluster tree edge and <inline-formula id="IEq192"><alternatives><tex-math id="M417">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M418"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq192.gif"/></alternatives></inline-formula> be a partial assignment of <inline-formula id="IEq193"><alternatives><tex-math id="M419">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M420"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq193.gif"/></alternatives></inline-formula>. The conditional optimal subtree evaluations <inline-formula id="IEq194"><alternatives><tex-math id="M421">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}(\bar{x})$$\end{document}</tex-math><mml:math id="M422"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq194.gif"/></alternatives></inline-formula> (Eq. <xref rid="Equ3" ref-type="disp-formula">3</xref>) can be recursively computed as<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M423">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\!\!\max _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(u)}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}}\! \left[ \!\begin{array}{l} \sum _{f\in \phi (u)} \alpha _ff(\bar{x}\cup \bar{x}') \\ + \sum _{c\text { child of }u} m_{c\rightarrow u}(\bar{x}\cup \bar{x}') \end{array}\!\right] . \end{aligned}$$\end{document}</tex-math><mml:math id="M424" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mfenced close="]" open="["><mml:mspace width="-0.166667em"/><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>+</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>child of</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mspace width="-0.166667em"/></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
          <p><italic>Algorithms for partition functions and sampling</italic> As argued, the computation of partition functions (Problem <xref ref-type="sec" rid="FPar13">2</xref>) follows the same algorithmic structure, changing the algebra in Algorithm 1 from <inline-formula id="IEq195"><alternatives><tex-math id="M425">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\max , +, {\text {\textsf{Id}}})$$\end{document}</tex-math><mml:math id="M426"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">max</mml:mo><mml:mo>,</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq195.gif"/></alternatives></inline-formula> to <inline-formula id="IEq196"><alternatives><tex-math id="M427">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M428"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq196.gif"/></alternatives></inline-formula> and setting the initial value of <inline-formula id="IEq197"><alternatives><tex-math id="M429">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M430"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq197.gif"/></alternatives></inline-formula> to <inline-formula id="IEq198"><alternatives><tex-math id="M431">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M432"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq198.gif"/></alternatives></inline-formula>. Consequently, the partition function <inline-formula id="IEq199"><alternatives><tex-math id="M433">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Z_{\mathcal {N},\alpha }$$\end{document}</tex-math><mml:math id="M434"><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq199.gif"/></alternatives></inline-formula> is obtained by multiplying all <inline-formula id="IEq200"><alternatives><tex-math id="M435">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M436"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq200.gif"/></alternatives></inline-formula>-ary messages sent to the root.</p>
          <p>Analogous to partial optimal evaluations, the modified Algorithm 1 with <inline-formula id="IEq201"><alternatives><tex-math id="M437">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M438"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq201.gif"/></alternatives></inline-formula>-algebra computes partial partition functions.</p>
        </sec>
        <sec id="FPar20">
          <title>Definition 10</title>
          <p id="Par92">(Conditional subtree partition functions) Let <italic>u</italic> be a node in a cluster tree <inline-formula id="IEq202"><alternatives><tex-math id="M439">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\xi ,\phi )$$\end{document}</tex-math><mml:math id="M440"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>ξ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq202.gif"/></alternatives></inline-formula>, where <italic>v</italic> is its parent. The <bold>conditional partition function</bold> at <italic>u</italic> under condition <inline-formula id="IEq203"><alternatives><tex-math id="M441">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M442"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq203.gif"/></alternatives></inline-formula> is<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M443">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\!\sum _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(T_{u})}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}} \prod _{f\in \phi (T_{u})}\!\exp (\alpha _f f(\bar{x}\cup \bar{x}')) \end{aligned}$$\end{document}</tex-math><mml:math id="M444" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>for all <inline-formula id="IEq204"><alternatives><tex-math id="M445">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}.$$\end{document}</tex-math><mml:math id="M446"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq204.gif"/></alternatives></inline-formula></p>
          <p>Partition functions are computed by a recursive algorithm analogous to <xref rid="Sec10" ref-type="sec">1</xref>; its correctness is stated in analogy to Proposition <xref ref-type="sec" rid="FPar19">1</xref> (shown in Additional file 1).</p>
        </sec>
        <sec id="FPar21">
          <title>Proposition 2</title>
          <p id="Par94">Let <inline-formula id="IEq205"><alternatives><tex-math id="M447">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M448"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq205.gif"/></alternatives></inline-formula> be a cluster tree edge and <inline-formula id="IEq206"><alternatives><tex-math id="M449">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M450"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq206.gif"/></alternatives></inline-formula> be a partial assignment of <inline-formula id="IEq207"><alternatives><tex-math id="M451">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M452"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq207.gif"/></alternatives></inline-formula>. The conditional subtree partition functions (Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>) can be recursively computed as<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M453">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\sum _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(u)}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}}\! \left[ \!\begin{array}{l} \prod _{f\in \phi (u)} \exp (\alpha _ff(\bar{x}\cup \bar{x}')) \\ \times \prod _{c\text { child of }u} m_{c\rightarrow u}(\bar{x}\cup \bar{x}') \end{array}\!\right] \end{aligned}$$\end{document}</tex-math><mml:math id="M454" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mfenced close="]" open="["><mml:mspace width="-0.166667em"/><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>×</mml:mo><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>child of</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mspace width="-0.166667em"/></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>with <inline-formula id="IEq208"><alternatives><tex-math id="M455">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _f$$\end{document}</tex-math><mml:math id="M456"><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq208.gif"/></alternatives></inline-formula> as in Prop. <xref ref-type="sec" rid="FPar19">1</xref>.</p>
          <p>
            <fig id="Fig3">
              <label>Fig. 3</label>
              <caption>
                <p>Illustration of the forward optimal evaluation and traceback algorithms (by the running example of graph coloring; Fig. <xref rid="Fig1" ref-type="fig">1</xref>). We elaborate steps of the computation guided by the gentle tree decomposition corresponding to Fig. <xref rid="Fig2" ref-type="fig">2</xref>B (top). The indices of variables in the difference set are underlined. On the left, we sketch the computation of the messages <inline-formula id="IEq209"><alternatives><tex-math id="M457">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{w\rightarrow u}$$\end{document}</tex-math><mml:math id="M458"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq209.gif"/></alternatives></inline-formula> and <inline-formula id="IEq210"><alternatives><tex-math id="M459">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M460"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq210.gif"/></alternatives></inline-formula>: For every assignment of the separator set, the algorithm maximizes over assignments of the difference variable (it dismisses invalid assignments); in the computation of <inline-formula id="IEq211"><alternatives><tex-math id="M461">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M462"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq211.gif"/></alternatives></inline-formula>, it used the already computed message <inline-formula id="IEq212"><alternatives><tex-math id="M463">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{w\rightarrow u}$$\end{document}</tex-math><mml:math id="M464"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq212.gif"/></alternatives></inline-formula>. On the right, we show the corresponding computations to assign values to the <italic>underlined</italic> variables during traceback: given an optimal assignment to the variables in <italic>v</italic>, we first infer that <inline-formula id="IEq213"><alternatives><tex-math id="M465">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_5=2$$\end{document}</tex-math><mml:math id="M466"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq213.gif"/></alternatives></inline-formula> is an optimal continuation, and finally <inline-formula id="IEq214"><alternatives><tex-math id="M467">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_3=2$$\end{document}</tex-math><mml:math id="M468"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq214.gif"/></alternatives></inline-formula></p>
              </caption>
              <graphic xlink:href="13015_2024_258_Fig3_HTML" id="MO8"/>
            </fig>
          </p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Traceback</title>
      <p id="Par96">Once all messages of partial optimal score are computed by Algorithm 1, the optimal assignment is obtained by a traceback traversing the cluster tree top-down in preorder (Algorithm <xref rid="Sec10" ref-type="sec">2</xref>). At each edge <inline-formula id="IEq215"><alternatives><tex-math id="M469">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M470"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq215.gif"/></alternatives></inline-formula>, an optimal assignment of the variables in the parent <italic>v</italic> is known. Infrared then determines the optimal assignment to the difference variables (in the singleton set <inline-formula id="IEq216"><alternatives><tex-math id="M471">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M472"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq216.gif"/></alternatives></inline-formula>) such that the evaluation of bag <italic>u</italic> equals the message sent to the parent bag <inline-formula id="IEq217"><alternatives><tex-math id="M473">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v$$\end{document}</tex-math><mml:math id="M474"><mml:mi>v</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq217.gif"/></alternatives></inline-formula>. Let <inline-formula id="IEq218"><alternatives><tex-math id="M475">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x$$\end{document}</tex-math><mml:math id="M476"><mml:mi>x</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq218.gif"/></alternatives></inline-formula> be the partial optimal assignment determined thus far in the algorithm (assigning the variables of <italic>v</italic>); the algorithm searches through <inline-formula id="IEq219"><alternatives><tex-math id="M477">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {diff}}(u)}$$\end{document}</tex-math><mml:math id="M478"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq219.gif"/></alternatives></inline-formula> and selects one assignment <inline-formula id="IEq220"><alternatives><tex-math id="M479">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}$$\end{document}</tex-math><mml:math id="M480"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq220.gif"/></alternatives></inline-formula> that yields the optimal message. This choice is optimal, such that the algorithm can continue its top-down traversal after updating <italic>x</italic> by <inline-formula id="IEq221"><alternatives><tex-math id="M481">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\cup \bar{x}$$\end{document}</tex-math><mml:math id="M482"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∪</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq221.gif"/></alternatives></inline-formula>.</p>
      <p id="Par97">For sampling, Infrared performs a stochastic traceback (Algorithm 3), requiring the messages from the computation of the partition function. Whereas the general structure resembles that of optimal traceback, at each edge <inline-formula id="IEq222"><alternatives><tex-math id="M483">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M484"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq222.gif"/></alternatives></inline-formula> the algorithm randomly chooses a tracking value <inline-formula id="IEq223"><alternatives><tex-math id="M485">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M486"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq223.gif"/></alternatives></inline-formula> uniformly from the range <inline-formula id="IEq224"><alternatives><tex-math id="M487">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M488"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq224.gif"/></alternatives></inline-formula> and <inline-formula id="IEq225"><alternatives><tex-math id="M489">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M490"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq225.gif"/></alternatives></inline-formula>. While iterating through the possible assignments for <inline-formula id="IEq226"><alternatives><tex-math id="M491">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M492"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq226.gif"/></alternatives></inline-formula>, <inline-formula id="IEq227"><alternatives><tex-math id="M493">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M494"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq227.gif"/></alternatives></inline-formula> is gradually decreased with partial Boltzmann factors. The value of the difference variable is selected once <inline-formula id="IEq228"><alternatives><tex-math id="M495">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M496"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq228.gif"/></alternatives></inline-formula> becomes negative. This selects the value following the desired Boltzmann distribution. We show the following correctness claim in Additional file 1.</p>
      <sec id="FPar22">
        <title>Proposition 3</title>
        <p id="Par98">Algorithm 3 solves Problem <xref ref-type="sec" rid="FPar13">2</xref> by sampling assignments from the Boltzmann distribution of Eq. (<xref rid="Equ1" ref-type="disp-formula">1</xref>).</p>
        <p>
          <fig position="anchor" id="Figf">
            <label>Algorithm 1</label>
            <caption>
              <p>Optimal evaluation</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figf_HTML" id="MO9"/>
          </fig>
        </p>
        <p>
          <fig position="anchor" id="Figg">
            <label>Algorithm 2</label>
            <caption>
              <p>Optimal traceback</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figg_HTML" id="MO10"/>
          </fig>
        </p>
        <p>
          <fig position="anchor" id="Figh">
            <label>Algorithm 3</label>
            <caption>
              <p>Stochastic traceback: sampling</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figh_HTML" id="MO11"/>
          </fig>
        </p>
      </sec>
    </sec>
    <sec id="Sec11">
      <title>Computational complexity</title>
      <p id="Par102">Note that while computational complexities can be interpreted as corollaries from CTE [<xref ref-type="bibr" rid="CR12">12</xref>], we rephrase the arguments adapted to our concrete algorithms.</p>
      <p id="Par103">For a feature network <inline-formula id="IEq229"><alternatives><tex-math id="M497">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M498"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq229.gif"/></alternatives></inline-formula>, we state complexities in terms of additional parameters: the <bold>largest domain size</bold>
<inline-formula id="IEq230"><alternatives><tex-math id="M499">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d:=\max _{D\in \mathcal {D}}|D|$$\end{document}</tex-math><mml:math id="M500"><mml:mrow><mml:mi>d</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">D</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq230.gif"/></alternatives></inline-formula>, the <bold>number of variables</bold>
<inline-formula id="IEq231"><alternatives><tex-math id="M501">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {n}:=|\mathcal {X} |$$\end{document}</tex-math><mml:math id="M502"><mml:mrow><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq231.gif"/></alternatives></inline-formula>, and the total <bold>number of constraints and network functions</bold>
<inline-formula id="IEq232"><alternatives><tex-math id="M503">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {m}:=|\mathcal {C} |+\sum _{F\in \mathcal {F}}|F|$$\end{document}</tex-math><mml:math id="M504"><mml:mrow><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq232.gif"/></alternatives></inline-formula>. Let <inline-formula id="IEq233"><alternatives><tex-math id="M505">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M506"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq233.gif"/></alternatives></inline-formula> denote the <bold>treewidth</bold> of dependency graph <inline-formula id="IEq234"><alternatives><tex-math id="M507">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M508"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq234.gif"/></alternatives></inline-formula>. Furthermore, we assume that single constraints and network functions are evaluated in constant time. We will see later from the applications in Sections “Applications to concrete bionformatics problems” and “Model extensions and advanced topics” the assumption holds in practice.</p>
      <sec id="FPar23">
        <title>Proposition 4</title>
        <p id="Par104">Algorithm 1 takes <inline-formula id="IEq235"><alternatives><tex-math id="M509">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d ^{w +1} \cdot (\mathfrak {m} + \mathfrak {n}) \right)$$\end{document}</tex-math><mml:math id="M510"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq235.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq236"><alternatives><tex-math id="M511">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d ^w \cdot \mathfrak {n} \right)$$\end{document}</tex-math><mml:math id="M512"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq236.gif"/></alternatives></inline-formula> space.</p>
      </sec>
      <sec id="FPar24">
        <title>Proof</title>
        <p id="Par105">Algorithm 1 computes one message <inline-formula id="IEq237"><alternatives><tex-math id="M513">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M514"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq237.gif"/></alternatives></inline-formula> for each edge <inline-formula id="IEq238"><alternatives><tex-math id="M515">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M516"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq238.gif"/></alternatives></inline-formula> of the tree decomposition of <inline-formula id="IEq239"><alternatives><tex-math id="M517">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M518"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq239.gif"/></alternatives></inline-formula>. In every child bag <italic>u</italic>, the algorithm computes message values for each assignment of the variables in <inline-formula id="IEq240"><alternatives><tex-math id="M519">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M520"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq240.gif"/></alternatives></inline-formula>, for each value optimizing over assignments of <inline-formula id="IEq241"><alternatives><tex-math id="M521">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M522"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq241.gif"/></alternatives></inline-formula>. In every iteration, it evaluates the constraints and functions in <inline-formula id="IEq242"><alternatives><tex-math id="M523">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi (u)$$\end{document}</tex-math><mml:math id="M524"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq242.gif"/></alternatives></inline-formula>, as well as the messages from the children.</p>
        <p id="Par106">We thus bound the computation by<disp-formula id="Equ21"><alternatives><tex-math id="M525">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v}\ \prod _{x_i\in {\text {sep}}(u)}\!|\mathcal {D} _{i}|\,\cdot \!\prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i|\,\cdot (|\phi (u)|+n_u), \end{aligned}$$\end{document}</tex-math><mml:math id="M526" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ21.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq243"><alternatives><tex-math id="M527">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M528"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq243.gif"/></alternatives></inline-formula> counts the children of u. Since <inline-formula id="IEq244"><alternatives><tex-math id="M529">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M530"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq244.gif"/></alternatives></inline-formula> and <inline-formula id="IEq245"><alternatives><tex-math id="M531">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M532"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq245.gif"/></alternatives></inline-formula> are disjoint and contain exactly the variables of in the bag <italic>u</italic>, there are at most <inline-formula id="IEq246"><alternatives><tex-math id="M533">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d^{w +1}$$\end{document}</tex-math><mml:math id="M534"><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq246.gif"/></alternatives></inline-formula> iterations per bag. We relax the bound to<disp-formula id="Equ22"><alternatives><tex-math id="M535">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;d ^{w +1}\cdot \sum _{u\rightarrow v} (|\phi (u)|+n_u) \end{aligned}$$\end{document}</tex-math><mml:math id="M536" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ22.gif" position="anchor"/></alternatives></disp-formula>Every constraint and function is evaluated in the iterations of exactly one bag <italic>u</italic>; thus, we can amortize the contributions due to <inline-formula id="IEq247"><alternatives><tex-math id="M537">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sum _{u\rightarrow v} |\phi (u)| = \mathfrak {m}$$\end{document}</tex-math><mml:math id="M538"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq247.gif"/></alternatives></inline-formula>. Moreover, every message from a child is accessed (in constant time) in the iterations of exactly one bag; we can thus amortize due to <inline-formula id="IEq248"><alternatives><tex-math id="M539">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sum _{u\rightarrow v} n_u = |X|$$\end{document}</tex-math><mml:math id="M540"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq248.gif"/></alternatives></inline-formula>. This lets us simplify the last bound further to derive the claim on the time complexity.</p>
        <p id="Par107">Concerning space, the algorithm stores a message at each edge of the tree decomposition. Per edge <inline-formula id="IEq249"><alternatives><tex-math id="M541">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M542"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq249.gif"/></alternatives></inline-formula>, this takes space <inline-formula id="IEq250"><alternatives><tex-math id="M543">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^{{\text {sep}}(u)})$$\end{document}</tex-math><mml:math id="M544"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq250.gif"/></alternatives></inline-formula>. This bounds the space by <inline-formula id="IEq251"><alternatives><tex-math id="M545">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^s \cdot |E|)$$\end{document}</tex-math><mml:math id="M546"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mi>s</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq251.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq252"><alternatives><tex-math id="M547">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s=\max _u {\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M548"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mi>u</mml:mi></mml:msub><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq252.gif"/></alternatives></inline-formula>. For gentle tree decompositions, <inline-formula id="IEq253"><alternatives><tex-math id="M549">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|E|=|X|$$\end{document}</tex-math><mml:math id="M550"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq253.gif"/></alternatives></inline-formula> and <inline-formula id="IEq254"><alternatives><tex-math id="M551">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s\le w$$\end{document}</tex-math><mml:math id="M552"><mml:mrow><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq254.gif"/></alternatives></inline-formula>, showing the claim. <inline-formula id="IEq255"><alternatives><tex-math id="M553">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><mml:math id="M554"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq255.gif"/></alternatives></inline-formula></p>
      </sec>
      <sec id="FPar25">
        <title>Proposition 5</title>
        <p id="Par108">Algo. <xref rid="Sec10" ref-type="sec">2</xref> runs in <inline-formula id="IEq256"><alternatives><tex-math id="M555">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d \cdot (\mathfrak {m} + \mathfrak {n}) \right)$$\end{document}</tex-math><mml:math id="M556"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:mi>d</mml:mi><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq256.gif"/></alternatives></inline-formula> time.</p>
      </sec>
      <sec id="FPar26">
        <title>Proof</title>
        <p id="Par109">For each edge <inline-formula id="IEq257"><alternatives><tex-math id="M557">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M558"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq257.gif"/></alternatives></inline-formula> of the tree decomposition of <inline-formula id="IEq258"><alternatives><tex-math id="M559">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M560"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq258.gif"/></alternatives></inline-formula>, the task is to determine the best assignment for variables in <inline-formula id="IEq259"><alternatives><tex-math id="M561">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M562"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq259.gif"/></alternatives></inline-formula>, given that variables in <inline-formula id="IEq260"><alternatives><tex-math id="M563">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M564"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq260.gif"/></alternatives></inline-formula> are already assigned (as guaranteed by the iteration in preorder). Deciding if an assignment is valid requires computing constraints, while scoring them requires computing network functions (each in constant time due to our assumption).</p>
        <p id="Par110">It is also required to sum up <inline-formula id="IEq261"><alternatives><tex-math id="M565">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M566"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq261.gif"/></alternatives></inline-formula> messages <inline-formula id="IEq262"><alternatives><tex-math id="M567">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{c\rightarrow u}$$\end{document}</tex-math><mml:math id="M568"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq262.gif"/></alternatives></inline-formula> for <italic>c</italic> children of <italic>u</italic>, where <inline-formula id="IEq263"><alternatives><tex-math id="M569">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M570"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq263.gif"/></alternatives></inline-formula> denotes the number of children. Given that <inline-formula id="IEq264"><alternatives><tex-math id="M571">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\text {diff}}(u)|=1$$\end{document}</tex-math><mml:math id="M572"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq264.gif"/></alternatives></inline-formula> in a gentle tree decomposition, we obtain as an upper bound of time complexity in Algorithm <xref rid="Sec10" ref-type="sec">2</xref>:<disp-formula id="Equ23"><alternatives><tex-math id="M573">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v} \ \prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i| \,\cdot (|\phi (u)|+n_u) \\&amp;\le d \sum _{u\rightarrow v} (|\phi (u)| + n_u) \le d (\mathfrak {m} +\mathfrak {n}). \end{aligned}$$\end{document}</tex-math><mml:math id="M574" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:mi>d</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>d</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ23.gif" position="anchor"/></alternatives></disp-formula><inline-formula id="IEq265"><alternatives><tex-math id="M575">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><mml:math id="M576"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq265.gif"/></alternatives></inline-formula></p>
        <p>Note that the complexity results for optimization and optimal traceback directly apply to partition function computation and stochastic traceback, which evaluate exactly the same numbers of constraints, functions and messages.</p>
      </sec>
    </sec>
    <sec id="Sec12">
      <title>Complexity analysis for nonuniform domain sizes</title>
      <p id="Par112">For nonuniform domain sizes, the previous analysis can strongly overestimate the complexity (assuming the worst-case maximum domain size <italic>d</italic> for all variables). In several of our application examples, we can tighten the analysis considering that <inline-formula id="IEq266"><alternatives><tex-math id="M577">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}$$\end{document}</tex-math><mml:math id="M578"><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq266.gif"/></alternatives></inline-formula> is composed of two (analogously extensible to several) ‘series’ of variables in the way<disp-formula id="Equ24"><alternatives><tex-math id="M579">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {X}=\{X_1,\dots ,X_{n_X},Y_1,\dots ,Y_{n_Y}\}\end{aligned}$$\end{document}</tex-math><mml:math id="M580" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ24.gif" position="anchor"/></alternatives></disp-formula>with respective maximum domain sizes <inline-formula id="IEq267"><alternatives><tex-math id="M581">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d _X$$\end{document}</tex-math><mml:math id="M582"><mml:msub><mml:mi>d</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq267.gif"/></alternatives></inline-formula> and <inline-formula id="IEq268"><alternatives><tex-math id="M583">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d _Y$$\end{document}</tex-math><mml:math id="M584"><mml:msub><mml:mi>d</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq268.gif"/></alternatives></inline-formula>. For a given tree decomposition, we can define subset widths <inline-formula id="IEq269"><alternatives><tex-math id="M585">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X$$\end{document}</tex-math><mml:math id="M586"><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq269.gif"/></alternatives></inline-formula> and <inline-formula id="IEq270"><alternatives><tex-math id="M587">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _Y$$\end{document}</tex-math><mml:math id="M588"><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq270.gif"/></alternatives></inline-formula> as the maximum number of respective <italic>X</italic> and <italic>Y</italic> variables in a bag minus 1.</p>
      <p id="Par113">Then, we bound more tightly as follows:<disp-formula id="Equ25"><alternatives><tex-math id="M589">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v}\ \prod _{x_i\in {\text {sep}}(u)}\!|\mathcal {D} _{i}|\,\cdot \!\prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i|\,\cdot (|\phi (u)|+n_u)\\&amp;\le d _X^{w _X+1}\cdot d _Y^{w _Y+1}\cdot \sum _{u\rightarrow v} (|\phi (u)|+n_u)\\&amp;\le d _X^{w _X+1}\cdot d _Y^{w _Y+1}\cdot (\mathfrak {m} + \mathfrak {n}). \end{aligned}$$\end{document}</tex-math><mml:math id="M590" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>Y</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>Y</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ25.gif" position="anchor"/></alternatives></disp-formula></p>
      <sec id="FPar27">
        <title>Corollary 1</title>
        <p id="Par114">The runtime of Algorithm <xref rid="Sec10" ref-type="sec">1</xref> is in<disp-formula id="Equ26"><alternatives><tex-math id="M591">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {O}\left( d _1^{w _1+1}\cdots d _k^{w _k+1} \cdot (\mathfrak {m} + \mathfrak {n}) \right) ,\end{aligned}$$\end{document}</tex-math><mml:math id="M592" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msubsup><mml:mi>d</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>⋯</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ26.gif" position="anchor"/></alternatives></disp-formula>given a feature network where <inline-formula id="IEq271"><alternatives><tex-math id="M593">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}$$\end{document}</tex-math><mml:math id="M594"><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq271.gif"/></alternatives></inline-formula> is a disjoint union of subsets <inline-formula id="IEq272"><alternatives><tex-math id="M595">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _1,\dots ,\mathcal {X} _k$$\end{document}</tex-math><mml:math id="M596"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq272.gif"/></alternatives></inline-formula> and a tree decomposition <inline-formula id="IEq273"><alternatives><tex-math id="M597">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M598"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq273.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq274"><alternatives><tex-math id="M599">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _i = \max _{v\in T} |\{X \in \mathcal {X} _i \mid X \in \chi (v)\}|$$\end{document}</tex-math><mml:math id="M600"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∣</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq274.gif"/></alternatives></inline-formula> are the respective subset widths of <inline-formula id="IEq275"><alternatives><tex-math id="M601">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _1,\dots ,\mathcal {X} _k$$\end{document}</tex-math><mml:math id="M602"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq275.gif"/></alternatives></inline-formula> w.r.t. <inline-formula id="IEq276"><alternatives><tex-math id="M603">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M604"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq276.gif"/></alternatives></inline-formula>.</p>
        <p>It becomes apparent that tree decompositions with minimal width do not necessarily yield best performance in this context (e.g. [<xref ref-type="bibr" rid="CR31">31</xref>]). We can take a shortcut in special cases, where variables <inline-formula id="IEq277"><alternatives><tex-math id="M605">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M606"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq277.gif"/></alternatives></inline-formula> and <inline-formula id="IEq278"><alternatives><tex-math id="M607">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M608"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq278.gif"/></alternatives></inline-formula> for the same <inline-formula id="IEq279"><alternatives><tex-math id="M609">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i \le n$$\end{document}</tex-math><mml:math id="M610"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq279.gif"/></alternatives></inline-formula> (<inline-formula id="IEq280"><alternatives><tex-math id="M611">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n=n_X=n_Y$$\end{document}</tex-math><mml:math id="M612"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq280.gif"/></alternatives></inline-formula>) depend on each other. Then, one can collapse the nodes of <inline-formula id="IEq281"><alternatives><tex-math id="M613">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M614"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq281.gif"/></alternatives></inline-formula> and <inline-formula id="IEq282"><alternatives><tex-math id="M615">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M616"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq282.gif"/></alternatives></inline-formula> in the dependency graph, generate a standard tree decomposition optimizing its width <inline-formula id="IEq283"><alternatives><tex-math id="M617">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w '$$\end{document}</tex-math><mml:math id="M618"><mml:msup><mml:mi>w</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq283.gif"/></alternatives></inline-formula>, and infer a tree decomposition of the original dependency graph with <inline-formula id="IEq284"><alternatives><tex-math id="M619">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X=w _Y=w '$$\end{document}</tex-math><mml:math id="M620"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq284.gif"/></alternatives></inline-formula>.</p>
      </sec>
    </sec>
    <sec id="Sec13">
      <title>Parameterized complexity classes</title>
      <p id="Par116">Based on our complexity results (Sec. “Computational complexity”), the Optimization (Prob. <xref ref-type="sec" rid="FPar12">1</xref>) and Sampling (Prob. <xref ref-type="sec" rid="FPar13">2</xref>) can be solved efficiently in the <italic>input size</italic>
<italic>n</italic> at fixed values of the treewidth. Assuming that the number of variables and number of edges is on the order of <italic>n</italic>, i.e. <inline-formula id="IEq285"><alternatives><tex-math id="M621">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {n}+\mathfrak {m}\in \mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M622"><mml:mrow><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq285.gif"/></alternatives></inline-formula>, the input-dependence of the maximum domain size <italic>d</italic>, <inline-formula id="IEq286"><alternatives><tex-math id="M623">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\in \mathcal {O}(1)$$\end{document}</tex-math><mml:math id="M624"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq286.gif"/></alternatives></inline-formula> or <inline-formula id="IEq287"><alternatives><tex-math id="M625">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\in \mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M626"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq287.gif"/></alternatives></inline-formula>, determines the theoretical parameterized complexity class.</p>
      <p id="Par117">For problems parameterized by <italic>k</italic>, one distinguishes the class <bold>FPT</bold> (<bold>fixed parameter tractable</bold>), where problems can be solved in time <inline-formula id="IEq288"><alternatives><tex-math id="M627">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(k)n^{\mathcal {O}(1)}$$\end{document}</tex-math><mml:math id="M628"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq288.gif"/></alternatives></inline-formula> for some computable function <italic>f</italic>, from the class <bold>XP</bold> with a bound of <inline-formula id="IEq289"><alternatives><tex-math id="M629">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(k)n^{g(k)}$$\end{document}</tex-math><mml:math id="M630"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq289.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] for some computable functions <italic>f</italic>, <italic>g</italic>. The latter class strictly includes the former. <bold>XP</bold> algorithms are also called <bold>slicewise polynomial</bold>, having polynomial complexity for each fixed value of the parameter.</p>
      <p id="Par118">For constant <italic>d</italic>, it follows that solving in Infrared is in the class <bold>FPT</bold> parameterized by the treewidth of the dependency graph. This is the case for the presented applications to RNA design, where the domain size is the number of nucleotides, i.e. typically 4. In our applications to pseudoknotted RNA alignment, the domain size <italic>d</italic> is in <inline-formula id="IEq290"><alternatives><tex-math id="M631">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M632"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq290.gif"/></alternatives></inline-formula>; consequently, we obtain an <bold>XP</bold> solving algorithm.</p>
    </sec>
    <sec id="Sec14">
      <title>Computing tree decompositions</title>
      <p id="Par119">The problem of computing a tree decomposition of minimal treewidth for an input graph/network is NP-hard [<xref ref-type="bibr" rid="CR32">32</xref>]. However, multiple heuristics [<xref ref-type="bibr" rid="CR13">13</xref>] and even efficient exact solvers [<xref ref-type="bibr" rid="CR33">33</xref>] have been designed, motivated by the wide applicability of treewidth-based methods.</p>
      <p id="Par120">From a theoretical perspective, treewidth is FPT to compute, albeit with a prohibitive complexity of <inline-formula id="IEq291"><alternatives><tex-math id="M633">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^{O(w ^3)}$$\end{document}</tex-math><mml:math id="M634"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq291.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR34">34</xref>]. A <inline-formula id="IEq292"><alternatives><tex-math id="M635">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4\cdot w +4$$\end{document}</tex-math><mml:math id="M636"><mml:mrow><mml:mn>4</mml:mn><mml:mo>·</mml:mo><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq292.gif"/></alternatives></inline-formula> approximation in <inline-formula id="IEq293"><alternatives><tex-math id="M637">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(8^{w}\cdot w ^2 \cdot |\mathcal {X} |^2)$$\end{document}</tex-math><mml:math id="M638"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>8</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq293.gif"/></alternatives></inline-formula> is also possible [<xref ref-type="bibr" rid="CR14">14</xref>]. Both of these results guarantee that FPT results remain FPT when including the computation of a tree decomposition prior to applying Algorithm 1 and <xref rid="Sec10" ref-type="sec">2</xref>. However, the actual complexity may be affected, becoming the worst of the two.</p>
      <p id="Par121">Despite these theoretical results, virtually all treewidth-based implementations, including Infrared, use the beforementioned heuristics or solvers to compute tree decompositions.</p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Applications to concrete bionformatics problems</title>
    <sec id="Sec16">
      <title>Network parsimony</title>
      <p id="Par122">
        <fig id="Fig4">
          <label>Fig. 4</label>
          <caption>
            <p>Example phylogenetic network. Optimal solutions for <bold>A</bold> hardwired parsimony. <bold>B</bold> softwired parsimony. <bold>C</bold> parental parsimony; nodes are labeled by character sets. The input for these problems consists of the network and the labels of only the leaves (blue).The other labels are inferred. The example contains one reticulation node (red)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig4_HTML" id="MO12"/>
        </fig>
      </p>
      <sec id="Sec4">
        <title>
          <bold>
            <italic>Parsimony for phylogenetic reconstruction</italic>
          </bold>
        </title>
        <p id="Par123"> For inferring phylogenies, one of the central missions of bioinformatics, parsimony methods determine the most parsimonious explanations for evolutionary relationships. In the classical small parsimony problem the relation between <italic>n</italic> taxa is given as their phylogenetic tree. The leaves are labeled by ‘characters’, i.e. the taxa, and we ask for a labeling of the internal nodes such that the number of label differences over all tree edges is minimized. However, due to <italic>reticulate evolution</italic>, where lineages can be influenced by two or more ancestors, many real phylogenies are better represented by phylogenetic networks than trees [<xref ref-type="bibr" rid="CR35">35</xref>]. This model captures diverse phenomena such as hybrid speciation, horizontal gene transfer, and allopolyploidity due to sexual recombination. While tree parsimony has well-established polynomial-time solutions [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>], network parsimony is a topic of current algorithmic research. For example, Scornavacca and Weller [<xref ref-type="bibr" rid="CR5">5</xref>] present artfully hand-crafted fixed-parameter tractable (FPT) algorithms for three variants of network parsimony. We will discuss modeling network parsimony directly in Infrared and, in this way, immediately obtain FPT solutions.</p>
        <sec id="FPar28">
          <title>Definition 11</title>
          <p id="Par124">[Phylogenetic Network] A <bold>phylogenetic network</bold> is a rooted, connected directed acyclic graph <inline-formula id="IEq294"><alternatives><tex-math id="M639">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G = (V,E)$$\end{document}</tex-math><mml:math id="M640"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq294.gif"/></alternatives></inline-formula>. Edges point from <bold>children</bold> to their <bold>parents</bold>. The unique <bold>root</bold>
<inline-formula id="IEq295"><alternatives><tex-math id="M641">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r\in V$$\end{document}</tex-math><mml:math id="M642"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq295.gif"/></alternatives></inline-formula> is the only node without parents; the <bold>leaves</bold>
<inline-formula id="IEq296"><alternatives><tex-math id="M643">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L \subseteq V$$\end{document}</tex-math><mml:math id="M644"><mml:mrow><mml:mi>L</mml:mi><mml:mo>⊆</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq296.gif"/></alternatives></inline-formula> are the nodes without children. <bold>Reticulation nodes</bold> have more than one parent.</p>
          <p><bold>Hardwired parsimony</bold> can be seen as a direct extension from tree to network parsimony that minimizes a parsimony score summing over all network edges, <bold>softwired parsimony</bold> inherits—in the case of multiple parents—only from the most favorable one, and <bold>parental parsimony</bold> allows embedding of different lineages in the network (one parent per allele) to cover allopolyploidy [<xref ref-type="bibr" rid="CR5">5</xref>] (Fig. <xref rid="Fig4" ref-type="fig">4</xref>).</p>
          <p>In this text, we describe in detail the modelings of hardwired and softwired parsimony. For Infrared models of all three variants of network parsimony, we refer to our online documentation.</p>
        </sec>
        <sec id="FPar29">
          <title>Problem 3</title>
          <p id="Par127">[Hardwired network parsimony] <def-list><def-item><term><sc>Input:</sc></term><def><p id="Par128">Phylogenetic network <inline-formula id="IEq297"><alternatives><tex-math id="M645">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M646"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq297.gif"/></alternatives></inline-formula> with leaves <italic>L</italic>, set of characters <inline-formula id="IEq298"><alternatives><tex-math id="M647">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M648"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq298.gif"/></alternatives></inline-formula>, and leaf labeling <inline-formula id="IEq299"><alternatives><tex-math id="M649">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi : L\rightarrow \Sigma$$\end{document}</tex-math><mml:math id="M650"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>:</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq299.gif"/></alternatives></inline-formula>.</p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par129">Minimal parsimony score <inline-formula id="IEq300"><alternatives><tex-math id="M651">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {PS}}^{*}_\text{hw}$$\end{document}</tex-math><mml:math id="M652"><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>hw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq300.gif"/></alternatives></inline-formula> and corresponding labeling <inline-formula id="IEq301"><alternatives><tex-math id="M653">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\psi :V\rightarrow \Sigma$$\end{document}</tex-math><mml:math id="M654"><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq301.gif"/></alternatives></inline-formula>, where <disp-formula id="Equ27"><alternatives><tex-math id="M655">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {PS}}^{*}_\text{hw}= \min _{\begin{array}{c} \hbox { labeling}\ \psi \\ \forall v\in L: \psi (v)=\phi (v) \end{array}} \sum _{(u,v)\in E} {\text{d}}(\psi (u),\psi (v)), \end{aligned}$$\end{document}</tex-math><mml:math id="M656" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>hw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>labeling</mml:mtext><mml:mspace width="4pt"/><mml:mi>ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mo>∀</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>:</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ27.gif" position="anchor"/></alternatives></disp-formula> here limiting ourselves, for simplicity, to distance <inline-formula id="IEq302"><alternatives><tex-math id="M657">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {d}}(x,y)={\left\{ \begin{array}{ll}1&amp;{}x\ne y\\ 0&amp;{}x=y.\end{array}\right. }$$\end{document}</tex-math><mml:math id="M658"><mml:mrow><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mo>≠</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>y</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq302.gif"/></alternatives></inline-formula></p></def></def-item></def-list></p>
        </sec>
      </sec>
      <sec id="Sec36">
        <title>
          <bold>
            <italic>Infrared network model</italic>
          </bold>
        </title>
        <p id="Par130">We model labellings as assignments, i.e. we use one variable <inline-formula id="IEq303"><alternatives><tex-math id="M659">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M660"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq303.gif"/></alternatives></inline-formula> per node of <italic>G</italic>, whose value encodes its label, i.e. the domain of internal nodes is <inline-formula id="IEq304"><alternatives><tex-math id="M661">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M662"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq304.gif"/></alternatives></inline-formula>, while the domain of leaf variables is restricted by the input labeling <inline-formula id="IEq305"><alternatives><tex-math id="M663">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi$$\end{document}</tex-math><mml:math id="M664"><mml:mi>ϕ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq305.gif"/></alternatives></inline-formula>. We can thus specify the variables and domains of the feature network <inline-formula id="IEq306"><alternatives><tex-math id="M665">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {hw}}=(\mathcal {X} _{\text {hw}},\mathcal {D} _{\text {hw}},\mathcal {C} _{\text {hw}},\mathcal {F} _{\text {hw}})$$\end{document}</tex-math><mml:math id="M666"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq306.gif"/></alternatives></inline-formula>, which models Problem <xref ref-type="sec" rid="FPar29">3</xref>:<list list-type="bullet"><list-item><p id="Par131"><inline-formula id="IEq307"><alternatives><tex-math id="M667">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {hw}}=\{X_1,\ldots ,X_{|V|}\}$$\end{document}</tex-math><mml:math id="M668"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq307.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par132"><inline-formula id="IEq308"><alternatives><tex-math id="M669">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{D}}_{{{\text{hw}}}} \, = \,\left\{ {D_{1} , \ldots ,D_{{|V|}} } \right.\,,$$\end{document}</tex-math><mml:math id="M670"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced open="{"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq308.gif"/></alternatives></inline-formula> where <inline-formula id="IEq309"><alternatives><tex-math id="M671">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i={\left\{ \begin{array}{ll} \{\phi (i)\} &amp;{} v_i\in L\\ \Sigma &amp;{} \text {otherwise} \end{array}\right. }$$\end{document}</tex-math><mml:math id="M672"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq309.gif"/></alternatives></inline-formula></p></list-item></list>On this basis, we impose constraints and functions. In this case, there are no constraints (all constraints are expressed by restricting the domains, such that all assignments are valid labellings). To express the score (by a set of network functions), we introduce the network function <inline-formula id="IEq310"><alternatives><tex-math id="M673">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Distance}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M674"><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq310.gif"/></alternatives></inline-formula> for the variables <inline-formula id="IEq311"><alternatives><tex-math id="M675">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M676"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq311.gif"/></alternatives></inline-formula> and <inline-formula id="IEq312"><alternatives><tex-math id="M677">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M678"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq312.gif"/></alternatives></inline-formula> is defined to encode the distance <inline-formula id="IEq313"><alternatives><tex-math id="M679">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d(x_i,x_j)$$\end{document}</tex-math><mml:math id="M680"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq313.gif"/></alternatives></inline-formula> between their values in an assignment <italic>x</italic>. We finalize the model by<list list-type="bullet"><list-item><p id="Par133"><inline-formula id="IEq314"><alternatives><tex-math id="M681">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {hw}}=\{\}$$\end{document}</tex-math><mml:math id="M682"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq314.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par134"><inline-formula id="IEq315"><alternatives><tex-math id="M683">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {hw}}=\{F_{\text {hwd}}$$\end{document}</tex-math><mml:math id="M684"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo></mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>hwd</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq315.gif"/></alternatives></inline-formula>} with feature <disp-formula id="Equ28"><alternatives><tex-math id="M685">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}F_{\text {hwd}}=\{{\text {\textsf{Distance}}}_{[X_i,X_j]} \mid (v_i,v_j) \in E\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M686" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>hwd</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ28.gif" position="anchor"/></alternatives></disp-formula></p></list-item></list>To implement and solve the problem in Infrared, it suffices to <italic>translate</italic> the model to Infrared syntax and call its optimizer. According to Proposition <xref ref-type="sec" rid="FPar23">4</xref>, the framework determines a most parsimonious solution in time complexity <inline-formula id="IEq316"><alternatives><tex-math id="M687">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}((|E|+ |V|)\cdot |\Sigma |^{w +1})$$\end{document}</tex-math><mml:math id="M688"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq316.gif"/></alternatives></inline-formula> in the treewidth <inline-formula id="IEq317"><alternatives><tex-math id="M689">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M690"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq317.gif"/></alternatives></inline-formula> of the input network <inline-formula id="IEq318"><alternatives><tex-math id="M691">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M692"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq318.gif"/></alternatives></inline-formula>. For this corollary observe that the dependency graph of the modeled feature network is exactly the input network; moreover the model has |<italic>E</italic>| functions and |<italic>V</italic>| variables with maximum domain size <inline-formula id="IEq319"><alternatives><tex-math id="M693">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=|\Sigma |$$\end{document}</tex-math><mml:math id="M694"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq319.gif"/></alternatives></inline-formula>; functions are computed in constant time.</p>
      </sec>
      <sec id="Sec3">
        <title>
          <bold>
            <italic>Beyond hardwired network parsimony</italic>
          </bold>
        </title>
        <p id="Par135">The problem of <bold>softwired network parsimony</bold> redefines the score of hardwired parsimony, such that it asks for<disp-formula id="Equ29"><alternatives><tex-math id="M695">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {PS}}^{*}_\text{sw}= \min _{\begin{array}{c} \hbox { labeling}\ \psi \\ \forall v\in L: \psi (v)=\phi (v) \end{array}} \sum_{u\in V}\min _{v\in {\text{parents}}(u)} {\text{d}}(\psi (u),\psi (v)), \end{aligned}$$\end{document}</tex-math><mml:math id="M696" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>sw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>labeling</mml:mtext><mml:mspace width="4pt"/><mml:mi>ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mo>∀</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>:</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mtext>parents</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ29.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq320"><alternatives><tex-math id="M697">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {parents}}(u)$$\end{document}</tex-math><mml:math id="M698"><mml:mrow><mml:mtext>parents</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq320.gif"/></alternatives></inline-formula> denotes the set of parents of <italic>u</italic>. This does not change the behavior at nonreticulation nodes, but offers a choice in the case of reticulation nodes.</p>
        <p id="Par136">Here, we restrict our model to <bold>binary networks</bold>, where nodes can have up to two children and up to two parents. Then, starting from the hardwired model, we enable this choice by adding a Boolean selector variable <inline-formula id="IEq321"><alternatives><tex-math id="M699">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M700"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq321.gif"/></alternatives></inline-formula> for every reticulation node <inline-formula id="IEq322"><alternatives><tex-math id="M701">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i$$\end{document}</tex-math><mml:math id="M702"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq322.gif"/></alternatives></inline-formula>. The distance to the left parent is counted if <inline-formula id="IEq323"><alternatives><tex-math id="M703">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i=0$$\end{document}</tex-math><mml:math id="M704"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq323.gif"/></alternatives></inline-formula>; to the right parent, if <inline-formula id="IEq324"><alternatives><tex-math id="M705">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i=1$$\end{document}</tex-math><mml:math id="M706"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq324.gif"/></alternatives></inline-formula>. Then, we replace the distance network functions by special variants at all edges between a reticulate child <italic>u</italic> and one of its parents <italic>v</italic>; feature <inline-formula id="IEq325"><alternatives><tex-math id="M707">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{hwd}$$\end{document}</tex-math><mml:math id="M708"><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">hwd</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq325.gif"/></alternatives></inline-formula> is substituted by<disp-formula id="Equ30"><alternatives><tex-math id="M709">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} F_{swd} =\,\{{\text {\textsf{RDistance}}}_{[X_i,X_j,Y_i;r]} \mid i, j \in (v_i,v_j)\in E,\\ {}\quad v_i \,\text {is a reticulation node}, \\ {}\quad r=1\, \text {if}\, v_j \,\text {is right parent of}\, v_i \,\text {else 0}\} \\\cup \{{\text {\textsf{Distance}}}_{[X_i,X_j]} \mid i, j \in (v_i,v_j)\in E,\\ {}\qquad v_i \,\text {is not a reticulation node}\}, \end{aligned}$$\end{document}</tex-math><mml:math id="M710" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">swd</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mo stretchy="false">{</mml:mo></mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">RDistance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="1em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>is a reticulation node</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="1em"/><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.166667em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>is right parent of</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mspace width="0.166667em"/><mml:mtext>else 0</mml:mtext><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>∪</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="2em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mspace width="0.166667em"/><mml:mtext>is not a reticulation node</mml:mtext><mml:mo stretchy="false">}</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ30.gif" position="anchor"/></alternatives></disp-formula>where <italic>r</italic> controls the selection, i.e.<disp-formula id="Equ31"><alternatives><tex-math id="M711">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{RDistance}}}_{[X_i,X_j,Y_i;r]}(x_i,x_j,y_i) \\&amp;\qquad = {\left\{ \begin{array}{ll} {\text {\textsf{Distance}}}_{[X_i,X_j]}(x_i,x_j) &amp;{}\hbox { if}\ y_i=r\\ +\infty &amp;{}\text {otherwise.} \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M712" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">RDistance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="2em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="4pt"/><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>+</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise.</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ31.gif" position="anchor"/></alternatives></disp-formula>To improve over the bound of Proposition <xref ref-type="sec" rid="FPar23">4</xref>, we follow Section “Complexity analysis for nonuniform domain sizes”. For the purpose of a conservative worst case complexity analysis, consider a tree decomposition of the dependency graph (which is equivalent to the input network). Now, we modify the problem by adding variables <inline-formula id="IEq326"><alternatives><tex-math id="M713">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M714"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq326.gif"/></alternatives></inline-formula> as well to all the nonreticulation nodes. A tree decomposition of the modified problem can now be obtained by complementing all <inline-formula id="IEq327"><alternatives><tex-math id="M715">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M716"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq327.gif"/></alternatives></inline-formula> by corresponding <inline-formula id="IEq328"><alternatives><tex-math id="M717">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M718"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq328.gif"/></alternatives></inline-formula>. The subset widths <inline-formula id="IEq329"><alternatives><tex-math id="M719">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X$$\end{document}</tex-math><mml:math id="M720"><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq329.gif"/></alternatives></inline-formula> and <inline-formula id="IEq330"><alternatives><tex-math id="M721">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _Y$$\end{document}</tex-math><mml:math id="M722"><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq330.gif"/></alternatives></inline-formula> are then equal to the original treewidth <inline-formula id="IEq331"><alternatives><tex-math id="M723">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M724"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq331.gif"/></alternatives></inline-formula>. Therefore, by Cor. <xref ref-type="sec" rid="FPar27">1</xref>, we obtain the complexity <inline-formula id="IEq332"><alternatives><tex-math id="M725">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}( |\Sigma |^{w +1}2^{w} (|V|+|E|) )$$\end{document}</tex-math><mml:math id="M726"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq332.gif"/></alternatives></inline-formula> for solving softwired network parsimony.</p>
      </sec>
      <sec id="Sec37">
        <title>
          <bold>
            <italic>Discussion</italic>
          </bold>
        </title>
        <p id="Par137"> Scornavacca and Weller [<xref ref-type="bibr" rid="CR5">5</xref>] present algorithms for hardwired, softwired, and parental network parsimony with respective complexities of <inline-formula id="IEq333"><alternatives><tex-math id="M727">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}|E|)$$\end{document}</tex-math><mml:math id="M728"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq333.gif"/></alternatives></inline-formula>, <inline-formula id="IEq334"><alternatives><tex-math id="M729">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w}(3^w |\Sigma | |V| + |E|)$$\end{document}</tex-math><mml:math id="M730"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq334.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq335"><alternatives><tex-math id="M731">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}( 6^{w |\Sigma |} 4^{w \log (c)} |E| )$$\end{document}</tex-math><mml:math id="M732"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>6</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mn>4</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq335.gif"/></alternatives></inline-formula> (after obtaining the tree decomposition). In the hardwired case, we obtain the same complexity out-of-the-box.</p>
        <p id="Par138">In the case of <italic>softwired complexity</italic> for the special case of binary networks, we even obtain a complexity with a better treewidth dependence. To show this, given <inline-formula id="IEq336"><alternatives><tex-math id="M733">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|E|&lt;2|V|$$\end{document}</tex-math><mml:math id="M734"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>&lt;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq336.gif"/></alternatives></inline-formula> under the assumption of binary networks, one simplifies our result to <inline-formula id="IEq337"><alternatives><tex-math id="M735">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}2^{w}|V|)$$\end{document}</tex-math><mml:math id="M736"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq337.gif"/></alternatives></inline-formula> and theirs to <inline-formula id="IEq338"><alternatives><tex-math id="M737">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}3^{w}|V| + |\Sigma |^w 2|V|)=\mathcal {O}(|\Sigma |^{w +1}3^w |V|)$$\end{document}</tex-math><mml:math id="M738"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mn>2</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq338.gif"/></alternatives></inline-formula>.</p>
        <p id="Par139">We refer to our accompanying notebook for the case of <italic>parental parsimony</italic>. There, we provide a model that induces an efficient solution whenever the treewidth of the feature network remains bounded. In this case, the feature network simply consists of the input network, augmented by ternary constraints at reticulation nodes. Consequently, while obtaining an FPT algorithm even for this complex parsimony problem, we cannot directly compare its complexity to [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
      </sec>
    </sec>
    <sec id="Sec17">
      <title>RNA design</title>
      <p id="Par140">
        <fig id="Fig5">
          <label>Fig. 5</label>
          <caption>
            <p>RNA multitarget design. <bold>A</bold> Three target RNA secondary structures of length 100 as 2D plots (by VARNA [<xref ref-type="bibr" rid="CR38">38</xref>]) and dot-bracket strings; taken from a multitarget design benchmark set [<xref ref-type="bibr" rid="CR39">39</xref>]. <bold>B</bold> Histograms of the features G <bold>C</bold> content (left), and the Turner energies (kcal/mol) of the three targets (right) in 5000 sequences sampled from the multitarget design model <inline-formula id="IEq339"><alternatives><tex-math id="M739">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M740"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq339.gif"/></alternatives></inline-formula> at weight -5 for every feature. One can observe that (1) equal weights lead to different mean energies for the targets; (2) strong control of the G C weight is required to avoid extreme G C content for stable designs. To automate the calibration of weights (and target specific feature value combinations), we suggest multidimensional Boltzmann sampling in Section “Multidimensional Boltzmann sampling”</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig5_HTML" id="MO13"/>
        </fig>
      </p>
      <p id="Par141">Designing biomolecules for specific biotechnological or medical applications is typically an interdisciplinary endeavor combining experimentation and computational design. On the computational side this calls for flexible, extensible systems that can express and efficiently cope with various constraints and objectives—a paradigmatic playing field for our framework (see our treatment in [<xref ref-type="bibr" rid="CR28">28</xref>]). A challenging, computationally hard subproblem in this area is the design of RNA sequences that fold into multiple target structures. The Infrared framework generalizes the FPT algorithm of our earlier work RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]—a method to generate RNA sequences <italic>w</italic>, words over <inline-formula id="IEq340"><alternatives><tex-math id="M741">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {A}, \texttt {C}, \texttt {G}, \texttt {U}$$\end{document}</tex-math><mml:math id="M742"><mml:mrow><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq340.gif"/></alternatives></inline-formula> targeting the energies of multiple structures and specific G C content. The latter is defined as the amount of G and C characters, denoted <inline-formula id="IEq341"><alternatives><tex-math id="M743">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\#\texttt {G} \texttt {C} (w)$$\end{document}</tex-math><mml:math id="M744"><mml:mrow><mml:mo>#</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq341.gif"/></alternatives></inline-formula>. Here, we model the core problem of RNARedprint directly as a feature network, which allows its implementation in Infrared.</p>
      <sec id="FPar30">
        <title>Definition 12</title>
        <p id="Par142">[RNA secondary structure] A <bold>secondary structure</bold>
<inline-formula id="IEq342"><alternatives><tex-math id="M745">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S$$\end{document}</tex-math><mml:math id="M746"><mml:mi>S</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq342.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq343"><alternatives><tex-math id="M747">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M748"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq343.gif"/></alternatives></inline-formula> is a set of <bold>base pairs</bold>, i.e. pairs (<italic>i</italic>, <italic>j</italic>) of sequence positions, <inline-formula id="IEq344"><alternatives><tex-math id="M749">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i&lt; j\le n$$\end{document}</tex-math><mml:math id="M750"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq344.gif"/></alternatives></inline-formula>. Secondary structures are required to be <bold>free of base triplets</bold>, i.e. every base <inline-formula id="IEq345"><alternatives><tex-math id="M751">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n$$\end{document}</tex-math><mml:math id="M752"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq345.gif"/></alternatives></inline-formula> is involved in at most one base pair. A secondary structure <italic>S</italic> is called <bold>crossing</bold> iff there are pairs <inline-formula id="IEq346"><alternatives><tex-math id="M753">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j), (k,l)\in S$$\end{document}</tex-math><mml:math id="M754"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq346.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq347"><alternatives><tex-math id="M755">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&lt;k&lt;j&lt;l$$\end{document}</tex-math><mml:math id="M756"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq347.gif"/></alternatives></inline-formula>; otherwise, it is <bold>noncrossing</bold>.</p>
        <p><italic>Multitarget design sampling</italic> Given one or multiple noncrossing RNA secondary structures as <italic>targets</italic> (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A), we consider the problem of controlled sampling of designs (i.e. RNA sequences) from a Boltzmann distribution governed by the thermodynamic energies of the targets and the G C content, whose respective influence is controlled by weights (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B).</p>
      </sec>
      <sec id="FPar31">
        <title>Problem 4</title>
        <p id="Par144">[Multitarget RNA sequence sampling] Given are <italic>k</italic> target structures, i.e. noncrossing secondary structures <inline-formula id="IEq348"><alternatives><tex-math id="M757">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_1,\dots ,S_k$$\end{document}</tex-math><mml:math id="M758"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq348.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq349"><alternatives><tex-math id="M759">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M760"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq349.gif"/></alternatives></inline-formula>, together with weights <inline-formula id="IEq350"><alternatives><tex-math id="M761">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,\dots ,\alpha _k$$\end{document}</tex-math><mml:math id="M762"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq350.gif"/></alternatives></inline-formula> and <inline-formula id="IEq351"><alternatives><tex-math id="M763">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _{\texttt {G} \texttt {C}}$$\end{document}</tex-math><mml:math id="M764"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq351.gif"/></alternatives></inline-formula>. We ask for <italic>r</italic> RNA sequences of length <italic>n</italic> such that for each sequence <inline-formula id="IEq352"><alternatives><tex-math id="M765">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s$$\end{document}</tex-math><mml:math id="M766"><mml:mi>s</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq352.gif"/></alternatives></inline-formula><disp-formula id="Equ32"><alternatives><tex-math id="M767">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathbb {P}(s) \propto \exp \left( \alpha _{\texttt {G} \texttt {C}}\cdot \#\texttt {G} \texttt {C} (s)\right) \cdot \prod _{\ell =1}^k \exp \left( \alpha _\ell \cdot E(s, S_\ell )\right) \end{aligned}$$\end{document}</tex-math><mml:math id="M768" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∝</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mo>#</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>·</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:mi>E</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ32.gif" position="anchor"/></alternatives></disp-formula>with <inline-formula id="IEq353"><alternatives><tex-math id="M769">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s, S_\ell )$$\end{document}</tex-math><mml:math id="M770"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq353.gif"/></alternatives></inline-formula> is the free-energy of the sequence <inline-formula id="IEq354"><alternatives><tex-math id="M771">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s$$\end{document}</tex-math><mml:math id="M772"><mml:mi>s</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq354.gif"/></alternatives></inline-formula> folding into the structure <inline-formula id="IEq355"><alternatives><tex-math id="M773">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_\ell$$\end{document}</tex-math><mml:math id="M774"><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq355.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Constraints and functions</italic> In common energy models of RNAs, such as the nearest neighbor model [<xref ref-type="bibr" rid="CR40">40</xref>], all base pairs must be <bold>canonical</bold>, i.e. in<disp-formula id="Equ33"><alternatives><tex-math id="M775">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {B}=\{(\texttt {A},\texttt {U}), (\texttt {C}, \texttt {G}), (\texttt {G},\texttt {C}), (\texttt {G}, \texttt {U}), (\texttt {U}, \texttt {A}), (\texttt {U},\texttt {G})\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M776" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ33.gif" position="anchor"/></alternatives></disp-formula>Otherwise, the energy <inline-formula id="IEq356"><alternatives><tex-math id="M777">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s, S)$$\end{document}</tex-math><mml:math id="M778"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq356.gif"/></alternatives></inline-formula> is infinite. This imposes hard constraints on the solutions of our design problem; in [<xref ref-type="bibr" rid="CR16">16</xref>], we proved that these constraints make even the counting of valid solutions (with implications on controlled sampling) #P-hard.</p>
        <p>In our model, in line with [<xref ref-type="bibr" rid="CR16">16</xref>], we express a relatively simple energy function <inline-formula id="IEq357"><alternatives><tex-math id="M779">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s,S)$$\end{document}</tex-math><mml:math id="M780"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq357.gif"/></alternatives></inline-formula>, namely<disp-formula id="Equ34"><alternatives><tex-math id="M781">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}E_{bp}(s,S) = \sum _{(i,j)\in S}{\text {\textsf{BPEnergy}}}(s _i, s _j)\end{aligned}$$\end{document}</tex-math><mml:math id="M782" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">bp</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ34.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq358"><alternatives><tex-math id="M783">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPEnergy}}}: \mathcal {B}\rightarrow \mathbb {R}$$\end{document}</tex-math><mml:math id="M784"><mml:mrow><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mo>:</mml:mo><mml:mi mathvariant="script">B</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq358.gif"/></alternatives></inline-formula> is a function assigning values to single base pairs. Note that we empirically demonstrated the direct use of this simple energy model for design sampling [<xref ref-type="bibr" rid="CR16">16</xref>] (apart from being extensible to more accurate models). This is in remarkable contrast to structure prediction, which for relevant accuracy relies on models that assign energies to stabilizing and destabilizing loops [<xref ref-type="bibr" rid="CR40">40</xref>]. Figure <xref rid="Fig5" ref-type="fig">5</xref>B shows that sampling based on the simple base pair model can produce controllable concentrated distributions with regard to Turner energies [<xref ref-type="bibr" rid="CR41">41</xref>]. This effect is studied in more depth in [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
        <p><italic>Feature network for design</italic> We express Problem <xref ref-type="sec" rid="FPar31">4</xref> as a feature network and use Infrared to solve it. The FN <inline-formula id="IEq359"><alternatives><tex-math id="M785">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M786"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq359.gif"/></alternatives></inline-formula> is composed of<list list-type="bullet"><list-item><p id="Par148"><inline-formula id="IEq360"><alternatives><tex-math id="M787">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {design}}=\{X_1,\ldots ,X_n\}$$\end{document}</tex-math><mml:math id="M788"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq360.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par149"><inline-formula id="IEq361"><alternatives><tex-math id="M789">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {design}}=\{\texttt {A},\texttt {C},\texttt {G},\texttt {U} \}^n$$\end{document}</tex-math><mml:math id="M790"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq361.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par150"><inline-formula id="IEq362"><alternatives><tex-math id="M791">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {design}}=\{{\text {\textsf{BPCompl}}}_{[i,j]} \mid (i,j)\in \bigcup _\ell S_\ell \}$$\end{document}</tex-math><mml:math id="M792"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPCompl</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mi>ℓ</mml:mi></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq362.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par151"><inline-formula id="IEq363"><alternatives><tex-math id="M793">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {design}}=\{F_{gc},F_{1},\dots ,F_{k}\}$$\end{document}</tex-math><mml:math id="M794"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq363.gif"/></alternatives></inline-formula> with features <inline-formula id="IEq364"><alternatives><tex-math id="M795">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{{gc}} \, = \,\left\{ {GC_{{\left[ i \right]}} \,\left| {i\, \in \,\left[ {1,\,n} \right]} \right.} \right\}$$\end{document}</tex-math><mml:math id="M796"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced close="}" open="{"><mml:mrow><mml:mi>G</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced open="|"><mml:mrow><mml:mi>i</mml:mi><mml:mspace width="0.166667em"/><mml:mo>∈</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced close="]" open="["><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq364.gif"/></alternatives></inline-formula> and <inline-formula id="IEq365"><alternatives><tex-math id="M797">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\ell }=\{{\text {\textsf{BPEnergy}}}_{[i,j]} \mid (i,j)\in S_\ell \}$$\end{document}</tex-math><mml:math id="M798"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq365.gif"/></alternatives></inline-formula> (<inline-formula id="IEq366"><alternatives><tex-math id="M799">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le \ell \le k$$\end{document}</tex-math><mml:math id="M800"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq366.gif"/></alternatives></inline-formula>).</p></list-item></list>The constraint <inline-formula id="IEq367"><alternatives><tex-math id="M801">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPCompl}}}_{[i,j]}(x_i,x_j)$$\end{document}</tex-math><mml:math id="M802"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">BPCompl</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq367.gif"/></alternatives></inline-formula> is <inline-formula id="IEq368"><alternatives><tex-math id="M803">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textsf{True} \text { if } (x_i,x_j)\in \mathcal {B}$$\end{document}</tex-math><mml:math id="M804"><mml:mrow><mml:mi mathvariant="sans-serif">True</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq368.gif"/></alternatives></inline-formula>; it ensures that <inline-formula id="IEq369"><alternatives><tex-math id="M805">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M806"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq369.gif"/></alternatives></inline-formula> is a canonical base pair in the design <italic>w</italic>. The network functions <inline-formula id="IEq370"><alternatives><tex-math id="M807">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPEnergy}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M808"><mml:msub><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq370.gif"/></alternatives></inline-formula> and <inline-formula id="IEq371"><alternatives><tex-math id="M809">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{GC}}}_{[i]}$$\end{document}</tex-math><mml:math id="M810"><mml:msub><mml:mtext mathvariant="sans-serif">GC</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq371.gif"/></alternatives></inline-formula> decompose the global properties, energy and G C content, into their local contributions from base pairs or bases. To evaluate the assignment, feature <inline-formula id="IEq372"><alternatives><tex-math id="M811">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{gc}$$\end{document}</tex-math><mml:math id="M812"><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq372.gif"/></alternatives></inline-formula> has a weight of <inline-formula id="IEq373"><alternatives><tex-math id="M813">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _{\texttt {G} \texttt {C}}$$\end{document}</tex-math><mml:math id="M814"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq373.gif"/></alternatives></inline-formula> and each feature <inline-formula id="IEq374"><alternatives><tex-math id="M815">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_\ell$$\end{document}</tex-math><mml:math id="M816"><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq374.gif"/></alternatives></inline-formula> has <inline-formula id="IEq375"><alternatives><tex-math id="M817">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _\ell$$\end{document}</tex-math><mml:math id="M818"><mml:msub><mml:mi>α</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq375.gif"/></alternatives></inline-formula> for <inline-formula id="IEq376"><alternatives><tex-math id="M819">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell \in [1,k]$$\end{document}</tex-math><mml:math id="M820"><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq376.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Efficient solving in Infrared</italic> To randomly generate <italic>r</italic> designs, sampled exactly from the defined distribution of Problem <xref ref-type="sec" rid="FPar13">2</xref>, we encode <inline-formula id="IEq377"><alternatives><tex-math id="M821">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M822"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq377.gif"/></alternatives></inline-formula> as an object of the class infrared.Model and pass it to Infrared ’s sampler infrared.Sampler, which is then asked <italic>r</italic>-times to return a sample. The efficiency of sampling depends exponentially on the complexity of the graph <inline-formula id="IEq378"><alternatives><tex-math id="M823">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\text {design}}=(\{1,\dots ,n\},\bigcup _{\ell =1}^k S_\ell )$$\end{document}</tex-math><mml:math id="M824"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq378.gif"/></alternatives></inline-formula>, which combines all the dependencies between sequence positions due to the target structures.</p>
      </sec>
      <sec id="FPar32">
        <title>Corollary 2</title>
        <p id="Par153">Infrared ’s engine solves Problem <xref ref-type="sec" rid="FPar31">4</xref> in <inline-formula id="IEq379"><alternatives><tex-math id="M825">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}((n+m)\cdot 4^{w}) + r\cdot 4(n+m))$$\end{document}</tex-math><mml:math id="M826"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>r</mml:mi><mml:mo>·</mml:mo><mml:mn>4</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq379.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq380"><alternatives><tex-math id="M827">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n\cdot 4^{w})$$\end{document}</tex-math><mml:math id="M828"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq380.gif"/></alternatives></inline-formula> space, where <inline-formula id="IEq381"><alternatives><tex-math id="M829">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=n+2\sum _{\ell =1}^k|S_\ell |$$\end{document}</tex-math><mml:math id="M830"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq381.gif"/></alternatives></inline-formula>, i.e. the total number of functions and constraints, and <inline-formula id="IEq382"><alternatives><tex-math id="M831">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M832"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq382.gif"/></alternatives></inline-formula> is the treewidth of <inline-formula id="IEq383"><alternatives><tex-math id="M833">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\text {design}}$$\end{document}</tex-math><mml:math id="M834"><mml:msub><mml:mi>G</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq383.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Discussion</italic> Multitarget design well showcases the advantages due to a declarative system. Thus, we quickly developed RNARedprint v2 with extended functionality and improved performance compared to our original C++ implementation of RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]. Notably, based on the presented model, this reimplementation has identical computational complexity (Cor. <xref ref-type="sec" rid="FPar32">2</xref>).</p>
        <p>As expected, the declarative modeling framework in Python strongly facilitated the reimplementation and extension. The performance improvements (Fig. <xref rid="Fig11" ref-type="fig">11</xref>A) can be attributed to Infrared ’s systematic Python/C++ hybrid design, which allowed us to better optimize its generic computational engine.</p>
        <p>Our Jupyter notebook for multitarget design shows that RNARedprint ’s targeted sampling functionality can be coded in less than 100 lines of Python. Due to Infrared, this code is extensible and adaptable and makes the functionality well accessible for integration in larger Python workflows, for example, design involving negative design criteria that complements exact sampling with heuristic optimization (see [<xref ref-type="bibr" rid="CR28">28</xref>]). Finally, the Infrared implementation can serve as a basis and “rapid prototyping” experimentation platform for future extensions and ideas on multitarget design.</p>
      </sec>
    </sec>
    <sec id="Sec18">
      <title>Sequence alignment</title>
      <p id="Par157">
        <fig id="Fig6">
          <label>Fig. 6</label>
          <caption>
            <p>Modeling the sequence alignment of AAACUGG and ACGACGC. From left to right, we illustrate the alignment model <inline-formula id="IEq384"><alternatives><tex-math id="M835">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {ali}}$$\end{document}</tex-math><mml:math id="M836"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq384.gif"/></alternatives></inline-formula>; a valid assignment; the corresponding alignment</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig6_HTML" id="MO14"/>
        </fig>
      </p>
      <p id="Par158">Expressing sequence alignment, one of the most prominent problems of bioinformatics, in our framework enables solving various more expressive, even highly complex types of alignment by extending the model. To give an example, we later (Sec. “From sequence alignment to pseudoknot sequence-structure alignment”) discuss the extension to pseudoknotted RNA structure alignment, close to LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]. We start by modeling the elementary problem, which has well-known efficient solutions [<xref ref-type="bibr" rid="CR42">42</xref>, <xref ref-type="bibr" rid="CR43">43</xref>] by classic dynamic programming. The extension of this first model from linear to affine gap cost is discussed in Section “Sequence alignment with affine gap cost”.</p>
      <sec id="FPar33">
        <title>Definition 13</title>
        <p id="Par159">[Sequence alignment] A <bold>sequence alignment</bold>
<inline-formula id="IEq385"><alternatives><tex-math id="M837">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M838"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq385.gif"/></alternatives></inline-formula> of two <bold>sequences</bold>
<inline-formula id="IEq386"><alternatives><tex-math id="M839">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M840"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq386.gif"/></alternatives></inline-formula> and <inline-formula id="IEq387"><alternatives><tex-math id="M841">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M842"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq387.gif"/></alternatives></inline-formula> (both are words over <inline-formula id="IEq388"><alternatives><tex-math id="M843">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M844"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq388.gif"/></alternatives></inline-formula>) is a sequence of pairs (aka <bold>alignment columns</bold>) composed of <inline-formula id="IEq389"><alternatives><tex-math id="M845">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\Sigma \cup \{-\})^2{\setminus } \{(-,-)\}$$\end{document}</tex-math><mml:math id="M846"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo>-</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mo>,</mml:mo><mml:mo>-</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq389.gif"/></alternatives></inline-formula> such that removing − from the words composed of the first (resp. second) letter of all pairs yields <inline-formula id="IEq390"><alternatives><tex-math id="M847">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M848"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq390.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq391"><alternatives><tex-math id="M849">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M850"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq391.gif"/></alternatives></inline-formula>). Let <inline-formula id="IEq392"><alternatives><tex-math id="M851">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M852"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq392.gif"/></alternatives></inline-formula> be a pair in the alignment. We say <inline-formula id="IEq393"><alternatives><tex-math id="M853">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M854"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq393.gif"/></alternatives></inline-formula> is a match if <inline-formula id="IEq394"><alternatives><tex-math id="M855">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M856"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq394.gif"/></alternatives></inline-formula> equals to <inline-formula id="IEq395"><alternatives><tex-math id="M857">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M858"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq395.gif"/></alternatives></inline-formula>, an insertion if <inline-formula id="IEq396"><alternatives><tex-math id="M859">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M860"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq396.gif"/></alternatives></inline-formula> is -, a deletion if <inline-formula id="IEq397"><alternatives><tex-math id="M861">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M862"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq397.gif"/></alternatives></inline-formula> is -, and a mismatch otherwise.</p>
        <p>For simplicity, we begin our discussion with <bold>linear gap cost</bold> scoring models, where the score of an alignment <inline-formula id="IEq398"><alternatives><tex-math id="M863">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M864"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq398.gif"/></alternatives></inline-formula> is defined by gap cost <inline-formula id="IEq399"><alternatives><tex-math id="M865">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M866"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq399.gif"/></alternatives></inline-formula> and an <bold>elementwise score</bold>
<inline-formula id="IEq400"><alternatives><tex-math id="M867">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma :\Sigma ^2 \rightarrow \mathbb {R}$$\end{document}</tex-math><mml:math id="M868"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq400.gif"/></alternatives></inline-formula>, as<disp-formula id="Equ35"><alternatives><tex-math id="M869">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {score}} {(\mathcal {A})}=\sum _{i: A_i \,\text {match}} \sigma (A_i) +\# {\text {gaps}}(\mathcal {A}) \gamma , \end{aligned}$$\end{document}</tex-math><mml:math id="M870" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtext>score</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>match</mml:mtext></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>#</mml:mo><mml:mtext>gaps</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>γ</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ35.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq401"><alternatives><tex-math id="M871">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\# {\text {gaps}}(\mathcal {A})}$$\end{document}</tex-math><mml:math id="M872"><mml:mrow><mml:mo>#</mml:mo><mml:mtext>gaps</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq401.gif"/></alternatives></inline-formula> denotes the number of insertions and deletions in <inline-formula id="IEq402"><alternatives><tex-math id="M873">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M874"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq402.gif"/></alternatives></inline-formula>.</p>
        <p>Consider two RNA sequences AAACUGG and ACGACGC ( <inline-formula id="IEq403"><alternatives><tex-math id="M875">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma =\{\texttt {A},\texttt {C},\texttt {G},\texttt {U} \}$$\end{document}</tex-math><mml:math id="M876"><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq403.gif"/></alternatives></inline-formula> ). Assuming similarity scores 2 for matching, and uniformly <inline-formula id="IEq404"><alternatives><tex-math id="M877">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-1$$\end{document}</tex-math><mml:math id="M878"><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq404.gif"/></alternatives></inline-formula> for insertion and deletion, their alignment<disp-formula id="Equ36"><alternatives><tex-math id="M879">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \texttt {A} _1 \texttt {A} _2 - - \texttt {A} _3 \texttt {C} _4 \texttt {U} _5 \texttt {G} _6 \texttt {G} _7 -\\ - \texttt {A} _1 \texttt {C} _2 \texttt {G} _3 \texttt {A} _4 \texttt {G} _5 - - \texttt {G} _6 \texttt {C} _7 \end{aligned}$$\end{document}</tex-math><mml:math id="M880" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">U</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>-</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ36.gif" position="anchor"/></alternatives></disp-formula>has a score of <inline-formula id="IEq405"><alternatives><tex-math id="M881">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$6-3-3=0$$\end{document}</tex-math><mml:math id="M882"><mml:mrow><mml:mn>6</mml:mn><mml:mo>-</mml:mo><mml:mn>3</mml:mn><mml:mo>-</mml:mo><mml:mn>3</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq405.gif"/></alternatives></inline-formula> due to three matches, three insertions, and three deletions.</p>
        <p>The <bold>alignment problem</bold> takes two sequences, denoted <inline-formula id="IEq406"><alternatives><tex-math id="M883">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M884"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq406.gif"/></alternatives></inline-formula> of length <italic>n</italic> and <inline-formula id="IEq407"><alternatives><tex-math id="M885">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M886"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq407.gif"/></alternatives></inline-formula> of length <italic>m</italic>, and an elementwise score <inline-formula id="IEq408"><alternatives><tex-math id="M887">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M888"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq408.gif"/></alternatives></inline-formula>. Assuming that <inline-formula id="IEq409"><alternatives><tex-math id="M889">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M890"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq409.gif"/></alternatives></inline-formula> defines a similarity, it asks for maximizing the <inline-formula id="IEq410"><alternatives><tex-math id="M891">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {score}} (\mathcal {A})$$\end{document}</tex-math><mml:math id="M892"><mml:mrow><mml:mtext>score</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq410.gif"/></alternatives></inline-formula> over all alignments and an optimal alignment <inline-formula id="IEq411"><alternatives><tex-math id="M893">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}^*$$\end{document}</tex-math><mml:math id="M894"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo>∗</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq411.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Modeling alignment</italic> We model this problem by introducing one variable <inline-formula id="IEq412"><alternatives><tex-math id="M895">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M896"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq412.gif"/></alternatives></inline-formula> per position <italic>i</italic> of the first sequence, whose values indicate their alignment to positions in the second sequence. Before stating our model, we need to resolve a significant issue with this idea. If we express assignments (match/mismatch) between positions <italic>i</italic> of <inline-formula id="IEq413"><alternatives><tex-math id="M897">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M898"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq413.gif"/></alternatives></inline-formula> and <italic>j</italic> of <inline-formula id="IEq414"><alternatives><tex-math id="M899">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M900"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq414.gif"/></alternatives></inline-formula> directly as assignment of <italic>j</italic> to <inline-formula id="IEq415"><alternatives><tex-math id="M901">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M902"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq415.gif"/></alternatives></inline-formula> (<inline-formula id="IEq416"><alternatives><tex-math id="M903">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i=j$$\end{document}</tex-math><mml:math id="M904"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq416.gif"/></alternatives></inline-formula>) then how do we express deletions of <italic>i</italic>? Naively introducing a <italic>special</italic> value for deletion, e.g. <inline-formula id="IEq417"><alternatives><tex-math id="M905">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bot :=m+1$$\end{document}</tex-math><mml:math id="M906"><mml:mrow><mml:mi>⊥</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq417.gif"/></alternatives></inline-formula>, makes it <italic>difficult</italic> to express the <bold>noncrossing condition</bold> on assignments, namely the positions <italic>j</italic> of <inline-formula id="IEq418"><alternatives><tex-math id="M907">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M908"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq418.gif"/></alternatives></inline-formula> can be assigned to positions <italic>i</italic> of <inline-formula id="IEq419"><alternatives><tex-math id="M909">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M910"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq419.gif"/></alternatives></inline-formula> in increasing order (<inline-formula id="IEq420"><alternatives><tex-math id="M911">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&gt;i'$$\end{document}</tex-math><mml:math id="M912"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq420.gif"/></alternatives></inline-formula> implies <inline-formula id="IEq421"><alternatives><tex-math id="M913">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j&gt;j'$$\end{document}</tex-math><mml:math id="M914"><mml:mrow><mml:mi>j</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq421.gif"/></alternatives></inline-formula>). More precisely, naive encoding introduces inequality-like constraints between all pairs of variables <inline-formula id="IEq422"><alternatives><tex-math id="M915">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M916"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq422.gif"/></alternatives></inline-formula> and <inline-formula id="IEq423"><alternatives><tex-math id="M917">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i'}$$\end{document}</tex-math><mml:math id="M918"><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq423.gif"/></alternatives></inline-formula> (<inline-formula id="IEq424"><alternatives><tex-math id="M919">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i&lt;i'\le n$$\end{document}</tex-math><mml:math id="M920"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq424.gif"/></alternatives></inline-formula>).</p>
        <p>Instead, following [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>], we model the deletion of a position <italic>i</italic> by assigning the same value to <inline-formula id="IEq425"><alternatives><tex-math id="M921">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M922"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq425.gif"/></alternatives></inline-formula> and <inline-formula id="IEq426"><alternatives><tex-math id="M923">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1}$$\end{document}</tex-math><mml:math id="M924"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq426.gif"/></alternatives></inline-formula>. This keeps the assigned values in increasing order and allows a unique representation of alignments by assignments. To further facilitate modeling, we introduce <italic>sentinel</italic> variables <inline-formula id="IEq427"><alternatives><tex-math id="M925">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_0=0$$\end{document}</tex-math><mml:math id="M926"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq427.gif"/></alternatives></inline-formula> and <inline-formula id="IEq428"><alternatives><tex-math id="M927">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{n+1}=m+1$$\end{document}</tex-math><mml:math id="M928"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq428.gif"/></alternatives></inline-formula>. As illustrated in Fig. <xref rid="Fig6" ref-type="fig">6</xref>, our example alignment is then encoded by the assignment<disp-formula id="Equ37"><alternatives><tex-math id="M929">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \begin{array}{c|ccccccccc} i &amp;{} 0 &amp;{} 1 &amp;{} 2 &amp;{} 3 &amp;{} 4 &amp;{} 5 &amp;{} 6 &amp;{} 7 &amp;{} 8 \\ \hline x_i &amp;{} 0 &amp;{} 0 &amp;{} 1 &amp;{} 4 &amp;{} 5 &amp;{} 5 &amp;{} 5 &amp;{} 6 &amp;{} 8 \end{array}. \end{aligned}$$\end{document}</tex-math><mml:math id="M930" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mtable columnlines="solid none none none none none none none none none" rowlines="solid none"><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>2</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>3</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>4</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>6</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>7</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>8</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>4</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>6</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>8</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ37.gif" position="anchor"/></alternatives></disp-formula>With this idea (illustrated in Fig. <xref rid="Fig6" ref-type="fig">6</xref>), the feature network <inline-formula id="IEq429"><alternatives><tex-math id="M931">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {ali}}$$\end{document}</tex-math><mml:math id="M932"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq429.gif"/></alternatives></inline-formula> is formalized by<list list-type="bullet"><list-item><p id="Par165"><inline-formula id="IEq430"><alternatives><tex-math id="M933">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {ali}}=\{X_0,\ldots , X_{n+1}\}$$\end{document}</tex-math><mml:math id="M934"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq430.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par166"><inline-formula id="IEq431"><alternatives><tex-math id="M935">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {ali}}=\{0\}\times \{0,\ldots ,m\}^n \times \{m+1\}$$\end{document}</tex-math><mml:math id="M936"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq431.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par167"><inline-formula id="IEq432"><alternatives><tex-math id="M937">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {ali}}=\{{\text {\textsf{Leq}}}_{[X_{i-1},X_i]} \mid i\in [2, n]\}$$\end{document}</tex-math><mml:math id="M938"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Leq</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq432.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par168"><inline-formula id="IEq433"><alternatives><tex-math id="M939">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {ali}}=\{F_{\text {match}}, F_{\text {insertion}}, F_{\text {deletion}}\}$$\end{document}</tex-math><mml:math id="M940"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>insertion</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>deletion</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq433.gif"/></alternatives></inline-formula> with<list list-type="bullet"><list-item><p id="Par169"><inline-formula id="IEq434"><alternatives><tex-math id="M941">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {match}}=\{{\text {\textsf{Match}}}_{[X_i]}\mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M942"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Match</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq434.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par170"><inline-formula id="IEq435"><alternatives><tex-math id="M943">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {deletion}}=\{{\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}\mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M944"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>deletion</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq435.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par171"><inline-formula id="IEq436"><alternatives><tex-math id="M945">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {insertion}}=\{{\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}\mid i\in [1,n+1]\}$$\end{document}</tex-math><mml:math id="M946"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>insertion</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq436.gif"/></alternatives></inline-formula>;</p></list-item></list></p></list-item></list>The constraint <inline-formula id="IEq437"><alternatives><tex-math id="M947">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Leq}}}_{[X_{i-1}, X_i]}:(x_{i-1}, x_i)\mapsto (x_{i-1}\le x_i)$$\end{document}</tex-math><mml:math id="M948"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Leq</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>↦</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq437.gif"/></alternatives></inline-formula> ensures an increasing order of the values in the assignment. The network functions express the alignment score:<disp-formula id="Equ38"><alternatives><tex-math id="M949">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{Match}}}_{[X_{i-1},X_i]}(x_{i-1},x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \sigma (a [i],b [x_i]) &amp;{} x_{i-1}&lt;x_i \\ 0 &amp;{} \text {otherwise} \end{array}\right. } \\&amp;{\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \gamma &amp;{} x_{i-1}=x_i \\ 0 &amp;{} \text {otherwise} \end{array}\right. } \\&amp;{\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}(x_{i-1}, x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \gamma (x_i - x_{i-1} -1) &amp;{} x_{i-1}\ne x_i \\ 0 &amp;{} \text {otherwise.} \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M950" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Match</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>γ</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>γ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise.</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ38.gif" position="anchor"/></alternatives></disp-formula><bold><italic>Efficient solving</italic></bold> Infrared ’s general solving mechanism computes alignments based on this model in <inline-formula id="IEq438"><alternatives><tex-math id="M951">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \cdot m^2)$$\end{document}</tex-math><mml:math id="M952"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq438.gif"/></alternatives></inline-formula> time, dominating the <inline-formula id="IEq439"><alternatives><tex-math id="M953">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm)$$\end{document}</tex-math><mml:math id="M954"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq439.gif"/></alternatives></inline-formula> time for the traceback, and <inline-formula id="IEq440"><alternatives><tex-math id="M955">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm)$$\end{document}</tex-math><mml:math id="M956"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq440.gif"/></alternatives></inline-formula> space following Propositions <xref ref-type="sec" rid="FPar23">4</xref> and <xref ref-type="sec" rid="FPar25">5</xref> (treewidth 1; <italic>n</italic> variables with domains of size <italic>m</italic>; <inline-formula id="IEq441"><alternatives><tex-math id="M957">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M958"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq441.gif"/></alternatives></inline-formula> functions, each evaluated in constant time).</p>
        <p>Note that while this automatic solution is efficient, it is still more costly than the known dynamic programming alignment algorithms by a linear factor. (In more detail, it does not profit from the linear cost of insertion; one could, within the same complexity, encode nonlinear insertion cost by modifying the functions <inline-formula id="IEq442"><alternatives><tex-math id="M959">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Insertion}}}$$\end{document}</tex-math><mml:math id="M960"><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq442.gif"/></alternatives></inline-formula>.) This issue has been discussed and solved before for the case of sequence alignment based on the presented model [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]; essentially it can be solved by applying DP to process single bags. Resolving this issue in broader generality is an open problem, whereas in principle the known specific solutions for sequence alignment can be implemented in the framework.</p>
        <p>In practice, this issue is strongly alleviated by <italic>banding strategies</italic> [<xref ref-type="bibr" rid="CR44">44</xref>] that limit the domain size to <inline-formula id="IEq443"><alternatives><tex-math id="M961">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu&lt;\!&lt;m$$\end{document}</tex-math><mml:math id="M962"><mml:mrow><mml:mi>μ</mml:mi><mml:mo>&lt;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq443.gif"/></alternatives></inline-formula>; this reduces the complexity to <inline-formula id="IEq444"><alternatives><tex-math id="M963">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \mu ^2)$$\end{document}</tex-math><mml:math id="M964"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq444.gif"/></alternatives></inline-formula> time (and <inline-formula id="IEq445"><alternatives><tex-math id="M965">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \mu )$$\end{document}</tex-math><mml:math id="M966"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>μ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq445.gif"/></alternatives></inline-formula> space).</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Model extensions and advanced topics</title>
    <sec id="Sec20">
      <title>Sequence alignment with affine gap cost</title>
      <p id="Par174">For more realistic alignments, the cost of consecutive runs of insertions and deletions (aka <bold>gaps</bold>) is scored in a nonlinear fashion; e.g. <italic>k</italic> consecutive insertions are evolutionarily <italic>less costly</italic> than <italic>k</italic> independent insertions. This motivates redefining the score of an alignment <inline-formula id="IEq446"><alternatives><tex-math id="M967">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M968"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq446.gif"/></alternatives></inline-formula>:<disp-formula id="Equ39"><alternatives><tex-math id="M969">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {score}} '(\mathcal {A})=\sum _{i: A_i \,\text {match}} \sigma (A_i) + {\text {gapcost}}(\mathcal {A}), \end{aligned}$$\end{document}</tex-math><mml:math id="M970" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mrow><mml:mtext>score</mml:mtext></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>match</mml:mtext></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mtext>gapcost</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ39.gif" position="anchor"/></alternatives></disp-formula>where generally <inline-formula id="IEq447"><alternatives><tex-math id="M971">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {gapcost}}(\mathcal {A}) = \sum _{\text {gap of length}\, \ell \,\text {in}\, \mathcal {A}} g(\ell ).$$\end{document}</tex-math><mml:math id="M972"><mml:mrow><mml:mtext>gapcost</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mtext>gap of length</mml:mtext><mml:mspace width="0.166667em"/><mml:mi>ℓ</mml:mi><mml:mspace width="0.166667em"/><mml:mtext>in</mml:mtext><mml:mspace width="0.166667em"/><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq447.gif"/></alternatives></inline-formula> For <inline-formula id="IEq448"><alternatives><tex-math id="M973">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g(\ell ):=\gamma \ell$$\end{document}</tex-math><mml:math id="M974"><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mi>ℓ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq448.gif"/></alternatives></inline-formula>, this score degenerates to the case of linear gap cost. The most prominent case is <bold>affine gap cost</bold>, where <inline-formula id="IEq449"><alternatives><tex-math id="M975">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g(\ell ):=\beta + \gamma \ell$$\end{document}</tex-math><mml:math id="M976"><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi><mml:mi>ℓ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq449.gif"/></alternatives></inline-formula>, distinguishing gap opening <inline-formula id="IEq450"><alternatives><tex-math id="M977">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M978"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq450.gif"/></alternatives></inline-formula> from gap extension cost <inline-formula id="IEq451"><alternatives><tex-math id="M979">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M980"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq451.gif"/></alternatives></inline-formula>.</p>
      <p id="Par175">Underlining the asymmetry of <inline-formula id="IEq452"><alternatives><tex-math id="M981">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {ali}$$\end{document}</tex-math><mml:math id="M982"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq452.gif"/></alternatives></inline-formula>, we could extend the model to arbitrary cost of insertions by redefining <inline-formula id="IEq453"><alternatives><tex-math id="M983">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i):= g(x_i-x_{i-1}-1)$$\end{document}</tex-math><mml:math id="M984"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq453.gif"/></alternatives></inline-formula>; however, modeling affine cost for deletions cannot be expressed in a direct modification of <inline-formula id="IEq454"><alternatives><tex-math id="M985">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i)$$\end{document}</tex-math><mml:math id="M986"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq454.gif"/></alternatives></inline-formula> since we lack information to distinguish gap opening and extension.</p>
      <p id="Par176">One can envision at least two possible fixes. First, we can replace the binary deletion network functions with ternary functions that depend on <inline-formula id="IEq455"><alternatives><tex-math id="M987">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-2},X_{i-1},X_i$$\end{document}</tex-math><mml:math id="M988"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq455.gif"/></alternatives></inline-formula>. This extension comes at the price of increasing the tree width by 1 (and thus the complexity by a further factor of <italic>m</italic>.) Second, we can introduce additional Boolean variables <inline-formula id="IEq456"><alternatives><tex-math id="M989">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M990"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq456.gif"/></alternatives></inline-formula> to reflect the matching state at position <italic>i</italic>: <inline-formula id="IEq457"><alternatives><tex-math id="M991">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M992"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq457.gif"/></alternatives></inline-formula> is assigned to <inline-formula id="IEq458"><alternatives><tex-math id="M993">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=1$$\end{document}</tex-math><mml:math id="M994"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq458.gif"/></alternatives></inline-formula> if <italic>i</italic> is matched; <inline-formula id="IEq459"><alternatives><tex-math id="M995">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=0$$\end{document}</tex-math><mml:math id="M996"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq459.gif"/></alternatives></inline-formula>, if <italic>i</italic> is deleted. In turn, the deletion function can be modified to depend on <inline-formula id="IEq460"><alternatives><tex-math id="M997">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1},$$\end{document}</tex-math><mml:math id="M998"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq460.gif"/></alternatives></inline-formula>
<inline-formula id="IEq461"><alternatives><tex-math id="M999">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1000"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq461.gif"/></alternatives></inline-formula> and <inline-formula id="IEq462"><alternatives><tex-math id="M1001">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_{i-1}$$\end{document}</tex-math><mml:math id="M1002"><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq462.gif"/></alternatives></inline-formula>:<disp-formula id="Equ40"><alternatives><tex-math id="M1003">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; {\text{Deletion}}_{{\left[ {X_{{i - 1}} ,X_{i} ,Y_{{i - 1}} } \right]}} \,(x_{{i - 1}} ,x_{i} ,y_{{i - 1}} )\, \\ &amp;\quad= \,\left\{ {\begin{array}{*{20}l} {\beta + \gamma } \hfill &amp; {x_{{i - 1}} = x_{i} \,{\text{and}}\,y_{{i - 1}} = 0} \hfill \\ \beta \hfill &amp; {x_{{i - 1}} = x_{i} \,{\text{and}}\,y_{{i - 1}} = 1} \hfill \\ 0 \hfill &amp; {{\text{otherwise}}{\text{.}}} \hfill \\ \end{array} } \right. \end{aligned}$$\end{document}</tex-math><mml:math id="M1004" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext>Deletion</mml:mtext><mml:mfenced close="]" open="["><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>β</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ40.gif" position="anchor"/></alternatives></disp-formula><bold><italic>Complexity</italic></bold> For the first idea, we derive a time complexity of <inline-formula id="IEq463"><alternatives><tex-math id="M1005">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm^3)$$\end{document}</tex-math><mml:math id="M1006"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq463.gif"/></alternatives></inline-formula> (Prop. <xref ref-type="sec" rid="FPar23">4</xref>), since the treewidth is 2. In the second model, adding Boolean variables (and ternary constraints to relate them to the <italic>X</italic> variables) technically increases the treewidth, but since the variables <inline-formula id="IEq464"><alternatives><tex-math id="M1007">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1008"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq464.gif"/></alternatives></inline-formula> have a domain size of 2, in contrast to the linear domain size of the variables <inline-formula id="IEq465"><alternatives><tex-math id="M1009">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1010"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq465.gif"/></alternatives></inline-formula>, their effect on the complexity is much lower (in this case, even constant in sequence length).</p>
      <p id="Par177">Here, the direct application of Proposition <xref ref-type="sec" rid="FPar23">4</xref> would strongly overestimate; instead we follow the argumentation of Section “Complexity analysis for nonuniform domain sizes”. The introduced <inline-formula id="IEq466"><alternatives><tex-math id="M1011">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1012"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq466.gif"/></alternatives></inline-formula> variables each correspond to the <inline-formula id="IEq467"><alternatives><tex-math id="M1013">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1014"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq467.gif"/></alternatives></inline-formula> variable of the same index. Collapsing the nodes of these corresponding variables in the dependency graph, let us us decompose it with width 1. Thus, we bound the time complexity by <inline-formula id="IEq468"><alternatives><tex-math id="M1015">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \cdot m^2 2^2)$$\end{document}</tex-math><mml:math id="M1016"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq468.gif"/></alternatives></inline-formula>; see also our discussion of the linear case. The <italic>Y</italic> variables thus contribute a constant factor of 4, comparable to the overhead of Gotoh’s algorithm [<xref ref-type="bibr" rid="CR43">43</xref>] over linear gap cost alignment (approximately factor 3). Thus, the second model improves the first one by a linear factor—intuitively, it allows sharing Boolean variables between bags instead of variables of linear domains.</p>
    </sec>
    <sec id="Sec21">
      <title>From sequence alignment to pseudoknot sequence-structure alignment</title>
      <p id="Par178">
        <fig id="Fig7">
          <label>Fig. 7</label>
          <caption>
            <p>Modeling sequence structure alignment. Example of a valid assignment and corresponding alignment with a pseudoknotted structure. The model contains one network function <inline-formula id="IEq469"><alternatives><tex-math id="M1017">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPMatch}}}$$\end{document}</tex-math><mml:math id="M1018"><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq469.gif"/></alternatives></inline-formula> per input base pair (arcs on top). These functions contribute <inline-formula id="IEq470"><alternatives><tex-math id="M1019">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M1020"><mml:mi>τ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq470.gif"/></alternatives></inline-formula> for matches to canonical bases (dashed arcs)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig7_HTML" id="MO15"/>
        </fig>
      </p>
      <p id="Par179">We will develop Infrared models for RNA alignment, where the first RNA is annotated by a potentially crossing secondary structure. We build on the previously described sequence alignment model <inline-formula id="IEq471"><alternatives><tex-math id="M1021">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{ali}$$\end{document}</tex-math><mml:math id="M1022"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mi mathvariant="italic">ali</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq471.gif"/></alternatives></inline-formula>. Recall our definition of RNA secondary structure from Section “RNA design”; here, we will explicitly consider <italic>general</italic> secondary structures, where base pairs can cross and thereby form arbitrary pseudoknots. This means that we are solving the essentially same optimization problem as LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]. While LicoRNA implements hand-crafted, specialized dynamic programming algorithms, Infrared automatically derives closely related algorithms from a network model, typically from less than 100 lines of Python code. These algorithms solve the pseudoknotted RNA alignment problem efficiently for the same fixed treewidth parameter.</p>
      <p id="Par180">Given are two RNA sequences <italic>a</italic> and <italic>b</italic> of respective length <italic>n</italic> and <italic>m</italic>, additionally a general (i.e. not necessarily noncrossing, potentially pseudoknotted) RNA secondary structure <italic>S</italic> of length <italic>n</italic>; <italic>S</italic> is also called <bold>arc-annotation</bold> of <inline-formula id="IEq472"><alternatives><tex-math id="M1023">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M1024"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq472.gif"/></alternatives></inline-formula>.</p>
      <p id="Par181">We are interested in optimizing a type of alignment score that takes the structural relations due to the arc annotation into account; see Fig. <xref rid="Fig7" ref-type="fig">7</xref>. To demonstrate the principle, we extend the sequence alignment score of the previous section by an <bold>arc match bonus</bold>
<inline-formula id="IEq473"><alternatives><tex-math id="M1025">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M1026"><mml:mi>τ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq473.gif"/></alternatives></inline-formula>. Let us thus define our <bold>sequence structure alignment score</bold> by<disp-formula id="Equ41"><alternatives><tex-math id="M1027">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; {\text{score}}_{S} ({\mathcal{A}})\, = \,{\text{score}}({\mathcal{A}})\, \\ &amp;\quad+ \,\sum\limits_{{\left( {i,j} \right) \in S}} {\left\{ {\begin{array}{*{20}c} \tau &amp; {{\mathcal{A}}{\text{ matches }}i {\text{ to }}i^{\prime}} \\ {} &amp; {{\text{and }}j{\text{ to }}j^{\prime};(b[i^{\prime}],b[j^{\prime}]) \in {\mathcal{B}}} \\ 0 &amp; {{\text{otherwise}},} \\ \end{array} } \right.} \end{aligned}$$\end{document}</tex-math><mml:math id="M1028" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext>score</mml:mtext><mml:mi>S</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mtext>score</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>+</mml:mo><mml:mspace width="0.166667em"/><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>τ</mml:mi></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>matches</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mi>i</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>to</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mtext>and</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mi>j</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>to</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ41.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq474"><alternatives><tex-math id="M1029">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {B}$$\end{document}</tex-math><mml:math id="M1030"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq474.gif"/></alternatives></inline-formula> is the set of canonical base pairs (Sec. “RNA design”).</p>
      <sec id="FPar34">
        <title>Problem 5</title>
        <p id="Par182">[General sequence-structure alignment] Given sequences <italic>a</italic>, and <italic>b</italic> annotated by <italic>S</italic>, the <bold>sequence structure alignment problem</bold> asks for a sequence alignment of <italic>a</italic> and <italic>b</italic> (Def. <xref ref-type="sec" rid="FPar33">13</xref>) that optimizes the sequence structure alignment score <inline-formula id="IEq475"><alternatives><tex-math id="M1031">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\text {score}}_S} (\mathcal {A})$$\end{document}</tex-math><mml:math id="M1032"><mml:mrow><mml:msub><mml:mtext>score</mml:mtext><mml:mi>S</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq475.gif"/></alternatives></inline-formula>.</p>
        <p>Our feature network model <inline-formula id="IEq476"><alternatives><tex-math id="M1033">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {sali}$$\end{document}</tex-math><mml:math id="M1034"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>sali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq476.gif"/></alternatives></inline-formula> directly builds on <inline-formula id="IEq477"><alternatives><tex-math id="M1035">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {ali}$$\end{document}</tex-math><mml:math id="M1036"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq477.gif"/></alternatives></inline-formula>, extending it by network functions to encode the structure component of the score. As discussed in the previous subsection (for the purpose of modeling affine gap cost), we introduce Boolean variables <inline-formula id="IEq478"><alternatives><tex-math id="M1037">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1038"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq478.gif"/></alternatives></inline-formula> to indicate the match of position <italic>i</italic> in <inline-formula id="IEq479"><alternatives><tex-math id="M1039">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M1040"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq479.gif"/></alternatives></inline-formula> since they let us express the arc match bonus more efficiently. We obtain<list list-type="bullet"><list-item><p id="Par184"><inline-formula id="IEq480"><alternatives><tex-math id="M1041">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}_\text {sali} = \mathcal {X}_\text {ali}\cup \{Y_1,\dots ,Y_n\}$$\end{document}</tex-math><mml:math id="M1042"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq480.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par185"><inline-formula id="IEq481"><alternatives><tex-math id="M1043">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D}_\text {sali}$$\end{document}</tex-math><mml:math id="M1044"><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>sali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq481.gif"/></alternatives></inline-formula> extends <inline-formula id="IEq482"><alternatives><tex-math id="M1045">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D}_\text {ali}$$\end{document}</tex-math><mml:math id="M1046"><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq482.gif"/></alternatives></inline-formula> by Boolean domains {0,1} for all <inline-formula id="IEq483"><alternatives><tex-math id="M1047">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1048"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq483.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par186"><inline-formula id="IEq484"><alternatives><tex-math id="M1049">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_\text {sali} = \mathcal {C}_\text {ali}\cup \mathcal {C}_\text {relXY}$$\end{document}</tex-math><mml:math id="M1050"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>relXY</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq484.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par187"><inline-formula id="IEq485"><alternatives><tex-math id="M1051">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}_\text {sali} = \mathcal {F}_\text {ali}\cup \{F_\text {bpmatch}\}$$\end{document}</tex-math><mml:math id="M1052"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>bpmatch</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq485.gif"/></alternatives></inline-formula>;</p></list-item></list>where <inline-formula id="IEq486"><alternatives><tex-math id="M1053">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_\text {relXY}$$\end{document}</tex-math><mml:math id="M1054"><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>relXY</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq486.gif"/></alternatives></inline-formula> is a set of constraints that relate the variables <inline-formula id="IEq487"><alternatives><tex-math id="M1055">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1056"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq487.gif"/></alternatives></inline-formula>, <inline-formula id="IEq488"><alternatives><tex-math id="M1057">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1}$$\end{document}</tex-math><mml:math id="M1058"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq488.gif"/></alternatives></inline-formula> and <inline-formula id="IEq489"><alternatives><tex-math id="M1059">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1060"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq489.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq490"><alternatives><tex-math id="M1061">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=1 \iff x_{i-1}&lt;x_i$$\end{document}</tex-math><mml:math id="M1062"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>⟺</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq490.gif"/></alternatives></inline-formula> (for all <inline-formula id="IEq491"><alternatives><tex-math id="M1063">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n$$\end{document}</tex-math><mml:math id="M1064"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq491.gif"/></alternatives></inline-formula>) and <inline-formula id="IEq492"><alternatives><tex-math id="M1065">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_\text {bpmatch}=\{{\text {\textsf{BPMatch}}}_{[X_i,X_j,Y_i,Y_j]} \mid (i,j)\in S\}$$\end{document}</tex-math><mml:math id="M1066"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>bpmatch</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq492.gif"/></alternatives></inline-formula><disp-formula id="Equ42"><alternatives><tex-math id="M1067">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{BPMatch}}}_{[X_i,X_j,Y_i,Y_j]}(x_i,x_j,y_i,y_j) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \tau &amp;{} y_i=1, y_j=1, \text { and } (b[x_i],b[x_j]) \in \mathcal {B} \\ 0 &amp;{} \text {otherwise}. \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M1068" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>τ</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.333333em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ42.gif" position="anchor"/></alternatives></disp-formula>Note that <inline-formula id="IEq493"><alternatives><tex-math id="M1069">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPMatch}}}$$\end{document}</tex-math><mml:math id="M1070"><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq493.gif"/></alternatives></inline-formula> (for an arc <inline-formula id="IEq494"><alternatives><tex-math id="M1071">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)\in S$$\end{document}</tex-math><mml:math id="M1072"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq494.gif"/></alternatives></inline-formula>) cannot be defined in dependency of only <inline-formula id="IEq495"><alternatives><tex-math id="M1073">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1074"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq495.gif"/></alternatives></inline-formula> and <inline-formula id="IEq496"><alternatives><tex-math id="M1075">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M1076"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq496.gif"/></alternatives></inline-formula>, since <inline-formula id="IEq497"><alternatives><tex-math id="M1077">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(b[x_i],b[x_j]) \in \mathcal {B}$$\end{document}</tex-math><mml:math id="M1078"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq497.gif"/></alternatives></inline-formula> could hold in cases where <italic>i</italic> or <italic>j</italic> are deleted.</p>
        <p><bold><italic>Complexity</italic></bold> As in the analysis of Section “Sequence alignment with affine gap cost”, we collapse each pair of nodes of variables <inline-formula id="IEq498"><alternatives><tex-math id="M1079">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1080"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq498.gif"/></alternatives></inline-formula> and <inline-formula id="IEq499"><alternatives><tex-math id="M1081">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1082"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq499.gif"/></alternatives></inline-formula> (of the same index <italic>i</italic>) in the dependency graph. The result is isomorphic to the <italic>structure graph</italic> of RNA <italic>a</italic>, consisting of its nucleotides as nodes, and edges due to its backbone and base pairs. For the treewidth <inline-formula id="IEq500"><alternatives><tex-math id="M1083">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1084"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq500.gif"/></alternatives></inline-formula> of this graph, we derive <inline-formula id="IEq501"><alternatives><tex-math id="M1085">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n2^{w +1}m^{w +1})$$\end{document}</tex-math><mml:math id="M1086"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq501.gif"/></alternatives></inline-formula> time complexity by Corollary <xref ref-type="sec" rid="FPar27">1</xref>.</p>
        <p>Whereas in our models for network parsimony or RNA design the domain size is constantly bounded, here it depends on the input size. Consequently, solving of this RNA alignment problem is not in parameterized complexity class <bold>FPT</bold>, but <bold>XP</bold> (Sec. “Parameterized complexity classes”).</p>
        <p><bold><italic>Discussion</italic></bold> The presented model extension yields an automatically derived solution to the pseudoknot sequence-structure alignment problem with parameterized complexity in the treewidth. Compared to LicoRNA, our algorithms depend on the exact same fixed parameter. Note that, in the current implementation, Infrared’s complexity is worse by a linear factor due to the same reason as we discussed for sequence alignment before. In practice, this is often reduced to a constant factor, namely the band width.</p>
        <p>This is contrasted by general benefits due to the declarative implementation in Infrared (Jupyter notebook). For example, the code is well maintainable, extensible by further constraints and evaluation criteria, and can profit from future developments and optimization of the Infrared system.</p>
      </sec>
    </sec>
    <sec id="Sec22">
      <title>Finite state automata</title>
      <p id="Par192">
        <fig id="Fig8">
          <label>Fig. 8</label>
          <caption>
            <p>Sketch of the 5-state Deterministic finite “Aho-Corasick” automaton accepting the three stop codons UGA, UUA, UUG. We do not draw back-transitions to <inline-formula id="IEq502"><alternatives><tex-math id="M1087">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1088"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq502.gif"/></alternatives></inline-formula>, which occur implicitly for all not explicitly shown cases (i.e.  A,C,G in <inline-formula id="IEq503"><alternatives><tex-math id="M1089">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1090"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq503.gif"/></alternatives></inline-formula>; C in <inline-formula id="IEq504"><alternatives><tex-math id="M1091">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_1$$\end{document}</tex-math><mml:math id="M1092"><mml:msub><mml:mi>q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq504.gif"/></alternatives></inline-formula>, C,G in <inline-formula id="IEq505"><alternatives><tex-math id="M1093">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_2$$\end{document}</tex-math><mml:math id="M1094"><mml:msub><mml:mi>q</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq505.gif"/></alternatives></inline-formula>; and C in <inline-formula id="IEq506"><alternatives><tex-math id="M1095">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_3$$\end{document}</tex-math><mml:math id="M1096"><mml:msub><mml:mi>q</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq506.gif"/></alternatives></inline-formula>). To <italic>forbid</italic>, instead of accept, all of the three stop codons, we complement the language by making all states but <inline-formula id="IEq507"><alternatives><tex-math id="M1097">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_4$$\end{document}</tex-math><mml:math id="M1098"><mml:msub><mml:mi>q</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq507.gif"/></alternatives></inline-formula> accepting</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig8_HTML" id="MO16"/>
        </fig>
      </p>
      <p id="Par193">A common side condition when designing RNA or DNA sequences is to avoid or enforce certain sequence motifs. For example, one could be interested in avoiding stop codons anywhere in the designed sequence (or avoid restriction sites, enforce binding sites...). Such conditions can be generalized in terms of regular languages, accepted by deterministic finite state automata (DFA; Fig. <xref rid="Fig8" ref-type="fig">8</xref>). This idea is well known in constraint programming; for example it is the basis of the global regular language membership constraint [<xref ref-type="bibr" rid="CR45">45</xref>]. In the specific case of sequence design, DFAs have been introduced by [<xref ref-type="bibr" rid="CR46">46</xref>] to perform such tasks efficiently for a set of sequence motifs. We show that finite state automata can be emulated in network models. Remarkably, this allows us to efficiently handle such requirements even in combination with other design objectives; e.g. the automaton model of this section could be merged with our model for multitarget RNA design <inline-formula id="IEq508"><alternatives><tex-math id="M1099">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M1100"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq508.gif"/></alternatives></inline-formula> (Sec. “RNA design”).</p>
      <p id="Par194">The model is a good example for the use of several types of variables, as we are going to introduce, for every sequence position, one variable to model the nucleotide and one to model the automaton state.</p>
      <sec id="FPar35">
        <title>Definition 14</title>
        <p id="Par195">[Deterministic Finite Automaton] A <bold>Deterministic Finite Automaton (DFA)</bold> is a <inline-formula id="IEq509"><alternatives><tex-math id="M1101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$5$$\end{document}</tex-math><mml:math id="M1102"><mml:mrow><mml:mn>5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq509.gif"/></alternatives></inline-formula>-tuple <inline-formula id="IEq510"><alternatives><tex-math id="M1103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {Q},\Sigma ,\delta ,q_0,\mathcal {Q}_F)$$\end{document}</tex-math><mml:math id="M1104"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq510.gif"/></alternatives></inline-formula> with<list list-type="bullet"><list-item><p id="Par196">Finite set of states <inline-formula id="IEq511"><alternatives><tex-math id="M1105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}$$\end{document}</tex-math><mml:math id="M1106"><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq511.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par197">Finite set of symbols <inline-formula id="IEq512"><alternatives><tex-math id="M1107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M1108"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq512.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par198">Transition function <inline-formula id="IEq513"><alternatives><tex-math id="M1109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta :\mathcal {Q}\times \Sigma \rightarrow \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1110"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>:</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq513.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par199">Initial state <inline-formula id="IEq514"><alternatives><tex-math id="M1111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0\in \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1112"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq514.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par200">Set of final, accepting states <inline-formula id="IEq515"><alternatives><tex-math id="M1113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}_F\subset \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1114"><mml:mrow><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo>⊂</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq515.gif"/></alternatives></inline-formula>.</p></list-item></list></p>
        <p>A word <inline-formula id="IEq516"><alternatives><tex-math id="M1115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w=a \ldots w_n$$\end{document}</tex-math><mml:math id="M1116"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mo>…</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq516.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq517"><alternatives><tex-math id="M1117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M1118"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq517.gif"/></alternatives></inline-formula> is accepted by a DFA if there exists a sequence of states <inline-formula id="IEq518"><alternatives><tex-math id="M1119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q=\{q_0,\ldots , q_n\}\subset \mathcal {Q}^{n+1}$$\end{document}</tex-math><mml:math id="M1120"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>⊂</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq518.gif"/></alternatives></inline-formula> starting with initial state <inline-formula id="IEq519"><alternatives><tex-math id="M1121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1122"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq519.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq520"><alternatives><tex-math id="M1123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_n\in \mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1124"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq520.gif"/></alternatives></inline-formula> and <inline-formula id="IEq521"><alternatives><tex-math id="M1125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (q_{i-1}, w_i)=q_i$$\end{document}</tex-math><mml:math id="M1126"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq521.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq522"><alternatives><tex-math id="M1127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i\in [1,n]$$\end{document}</tex-math><mml:math id="M1128"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq522.gif"/></alternatives></inline-formula>.</p>
        <p>By modeling a DFA as a network model, we can use Infrared to sample accepted words. We consider two types of variables, one for the word <inline-formula id="IEq523"><alternatives><tex-math id="M1129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1130"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq523.gif"/></alternatives></inline-formula> and the other for the state sequence <inline-formula id="IEq524"><alternatives><tex-math id="M1131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q$$\end{document}</tex-math><mml:math id="M1132"><mml:mi>q</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq524.gif"/></alternatives></inline-formula>. Given a DFA, the accepted word sampling problem is formalized by the feature network <inline-formula id="IEq525"><alternatives><tex-math id="M1133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {DFA}}$$\end{document}</tex-math><mml:math id="M1134"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq525.gif"/></alternatives></inline-formula> as follows:<list list-type="bullet"><list-item><p id="Par203"><inline-formula id="IEq526"><alternatives><tex-math id="M1135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _\text {DFA}=\{X_1,\ldots ,X_n\}\cup \{Y_0,\ldots ,Y_n\}$$\end{document}</tex-math><mml:math id="M1136"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq526.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par204"><inline-formula id="IEq527"><alternatives><tex-math id="M1137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _\text {DFA}=\Sigma ^n \times \{q_0\} \times \mathcal {Q}^{n-1}\times \mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1138"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq527.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par205"><inline-formula id="IEq528"><alternatives><tex-math id="M1139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _\text {DFA}=\{{\text {\textsf{Transition}}}_{[X_i,Y_{i-1},Y_i]} \mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M1140"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Transition</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq528.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par206"><inline-formula id="IEq529"><alternatives><tex-math id="M1141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _\text {DFA}=\{\}$$\end{document}</tex-math><mml:math id="M1142"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq529.gif"/></alternatives></inline-formula>.</p></list-item></list>The constraint <inline-formula id="IEq530"><alternatives><tex-math id="M1143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Transition}}}_{[X_i, Y_{i-1}, Y_i]}:(x_i,y_{i-1},y_i)\mapsto (y_i=\delta (y_{i-1},x_i))$$\end{document}</tex-math><mml:math id="M1144"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Transition</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>↦</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq530.gif"/></alternatives></inline-formula> encodes the DFA transition function. This ensures that, in each sampled assignment, <inline-formula id="IEq531"><alternatives><tex-math id="M1145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_0\ldots y_n$$\end{document}</tex-math><mml:math id="M1146"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq531.gif"/></alternatives></inline-formula> is the state sequence of the word <inline-formula id="IEq532"><alternatives><tex-math id="M1147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1\ldots x_n$$\end{document}</tex-math><mml:math id="M1148"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq532.gif"/></alternatives></inline-formula>, which is accepted by DFA as the domain of <inline-formula id="IEq533"><alternatives><tex-math id="M1149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_n$$\end{document}</tex-math><mml:math id="M1150"><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq533.gif"/></alternatives></inline-formula> is the set of final states <inline-formula id="IEq534"><alternatives><tex-math id="M1151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1152"><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq534.gif"/></alternatives></inline-formula>.</p>
        <p><bold><italic>Complexity</italic></bold> Again, we collapse the variables <inline-formula id="IEq535"><alternatives><tex-math id="M1153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1154"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq535.gif"/></alternatives></inline-formula> and <inline-formula id="IEq536"><alternatives><tex-math id="M1155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1156"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq536.gif"/></alternatives></inline-formula> for the same <italic>i</italic> in the dependency graph; let <inline-formula id="IEq537"><alternatives><tex-math id="M1157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1158"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq537.gif"/></alternatives></inline-formula> be the treewidth of the collapsed graph. We obtain time complexity <inline-formula id="IEq538"><alternatives><tex-math id="M1159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(4^{w +1}|\mathcal {Q}|^{w +1} n)$$\end{document}</tex-math><mml:math id="M1160"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq538.gif"/></alternatives></inline-formula> by Cor. <xref ref-type="sec" rid="FPar27">1</xref>, where <inline-formula id="IEq539"><alternatives><tex-math id="M1161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w =1$$\end{document}</tex-math><mml:math id="M1162"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq539.gif"/></alternatives></inline-formula> for the pure automaton model (without extensions).</p>
        <p>When forbidding/enforcing motifs in other design settings, e.g. single or multitarget RNA design, the treewidth typically increases since the automaton model causes dependencies between variables of consecutive positions <italic>i</italic> and <inline-formula id="IEq540"><alternatives><tex-math id="M1163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i+1$$\end{document}</tex-math><mml:math id="M1164"><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq540.gif"/></alternatives></inline-formula>, while e.g. RNA design defines dependencies between nonconsecutive positions <italic>i</italic> and <italic>j</italic> for each target base pair (<italic>i</italic>, <italic>j</italic>). Based on this analysis, we achieve efficiency equivalent to that of the hand-crafted algorithm [<xref ref-type="bibr" rid="CR46">46</xref>]. Since the domain size depends on the input size, specifically the number of states, this is another example of solving by Infrared in <bold>XP</bold> (Sec. “Parameterized complexity classes”).</p>
        <p>The complexity due to the automaton should be compared to simpler ideas to enforce/forbid motifs of maximum size <italic>k</italic>. More naively, one could introduce such requirements by <italic>k</italic>-ary constraints on each run of <italic>k</italic> consecutive variables <inline-formula id="IEq541"><alternatives><tex-math id="M1165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i},\dots ,X_{i+k-1}$$\end{document}</tex-math><mml:math id="M1166"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq541.gif"/></alternatives></inline-formula> (for all <inline-formula id="IEq542"><alternatives><tex-math id="M1167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n-k+1$$\end{document}</tex-math><mml:math id="M1168"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq542.gif"/></alternatives></inline-formula>). This idea results in <inline-formula id="IEq543"><alternatives><tex-math id="M1169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(4^k n)$$\end{document}</tex-math><mml:math id="M1170"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>k</mml:mi></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq543.gif"/></alternatives></inline-formula> without additional constraints. Automata thus offer a favorable trade-off between domain size and treewidth/exponent (as advocated in [<xref ref-type="bibr" rid="CR46">46</xref>]). Infrared supports adapting the strategy to the concrete problem.</p>
      </sec>
    </sec>
    <sec id="Sec23">
      <title>Multidimensional Boltzmann sampling</title>
      <p id="Par210">
        <fig id="Fig9">
          <label>Fig. 9</label>
          <caption>
            <p>Multidimensional Boltzmann sampling applied to RNA design. For the example of Fig. <xref rid="Fig5" ref-type="fig">5</xref>, we target G C content 85% and respective energies E1=-40, E2=-40, E3=-30 for the target structures (with tolerances of 5% GC content and 0.5 kcal/mol energy). Infrared ’s multidimensional Boltzmann sampling (MDBS) strategy starts from uniform sampling (weights 0 for every feature). It iteratively generates Boltzmann samples and updates the weights to move the (estimated) expectation closer to the targets. A Accepted samples as well as root mean square distance (RMSD) to the targets during this procedure, which considered over 70,000 total samples to generate 100 targeted samples. B Kernel density estimate plots: distributions of features for uniform sampling (blue) and sampling at the end of the MDBS run (red), where distributions are shifted to the targets (dashed red lines)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig9_HTML" id="MO17"/>
        </fig>
      </p>
      <p id="Par211">
        <fig position="anchor" id="Figi">
          <label>Algorithm 4</label>
          <caption>
            <p>Multidim. Boltzmann sampling</p>
          </caption>
          <graphic position="anchor" xlink:href="13015_2024_258_Figi_HTML" id="MO18"/>
        </fig>
      </p>
      <p id="Par212">Recall that Section “RNA design” demonstrated random generation of solutions by sampling from the Boltzmann distribution defined by multiple features and weights. The histograms from Fig. <xref rid="Fig5" ref-type="fig">5</xref> show the feature distributions resulting from large negative weights for all features in a multitarget RNA design example. In the example, this allows us to produce designs with low target structure energies and G C content.</p>
      <p id="Par213">Substantially extending the level of control, Infrared supports the random generation of objects with narrowly defined target feature values based on multidimensional Boltzmann sampling (MDBS) [<xref ref-type="bibr" rid="CR15">15</xref>]. This technique was successfully demonstrated before in RNA design: generating sequences with defined dinucleotide frequencies [<xref ref-type="bibr" rid="CR47">47</xref>], targeting G C content in single target RNA design by IncaRNAtion [<xref ref-type="bibr" rid="CR48">48</xref>] and generating RNA designs with specific energies of multiple structures and specific G C content by RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
      <p id="Par214"><italic>Problem statement</italic> Concretely, given a network <inline-formula id="IEq544"><alternatives><tex-math id="M1171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M1172"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq544.gif"/></alternatives></inline-formula>, we look at the problem of randomly generating valid assignments <italic>x</italic> that satisfy constraints<disp-formula id="Equ43"><alternatives><tex-math id="M1173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} |F(x)-\tau _F| \le \delta _F, \end{aligned}$$\end{document}</tex-math><mml:math id="M1174" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo></mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>≤</mml:mo></mml:mrow><mml:msub><mml:mi>δ</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ43.gif" position="anchor"/></alternatives></disp-formula>for given target values <inline-formula id="IEq545"><alternatives><tex-math id="M1175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau _F$$\end{document}</tex-math><mml:math id="M1176"><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq545.gif"/></alternatives></inline-formula> and tolerances <inline-formula id="IEq546"><alternatives><tex-math id="M1177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta _F$$\end{document}</tex-math><mml:math id="M1178"><mml:msub><mml:mi>δ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq546.gif"/></alternatives></inline-formula> for all (or a subset) of the features <inline-formula id="IEq547"><alternatives><tex-math id="M1179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M1180"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq547.gif"/></alternatives></inline-formula>. Let us call such assignments <inline-formula id="IEq548"><alternatives><tex-math id="M1181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1182"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq548.gif"/></alternatives></inline-formula>
<bold>-admissible</bold>.</p>
      <p id="Par215"><italic>MDBS strategy and algorithm</italic> As shown in [<xref ref-type="bibr" rid="CR15">15</xref>] the problem can be solved effectively, under certain assumption even with provable efficiency, by MDBS. This strategy combines rejection sampling, which accepts only <inline-formula id="IEq549"><alternatives><tex-math id="M1183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1184"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq549.gif"/></alternatives></inline-formula>-admissible samples, with a learning strategy to maximize its efficiency.</p>
      <p id="Par216">Here, we observe that rejection sampling is most effective, when the targeted values <inline-formula id="IEq550"><alternatives><tex-math id="M1185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau _F$$\end{document}</tex-math><mml:math id="M1186"><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq550.gif"/></alternatives></inline-formula> coincide with the means of the sampled distributions; moreover, these means depend on the feature weights <inline-formula id="IEq551"><alternatives><tex-math id="M1187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1188"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq551.gif"/></alternatives></inline-formula>.</p>
      <p id="Par217">Therefore, Infrared ’s MDBS algorithm (Algorithm 4), starting from initial weights <inline-formula id="IEq552"><alternatives><tex-math id="M1189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1190"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq552.gif"/></alternatives></inline-formula> (by default, <inline-formula id="IEq553"><alternatives><tex-math id="M1191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha =\textbf{0}$$\end{document}</tex-math><mml:math id="M1192"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq553.gif"/></alternatives></inline-formula>), iteratively generates <italic>k</italic>-many samples per round. In every iteration, it tweaks the weights <inline-formula id="IEq554"><alternatives><tex-math id="M1193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1194"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq554.gif"/></alternatives></inline-formula> aiming to shift the sampling means closer to the targets; the update step-size is controlled by the tweaking factor <inline-formula id="IEq555"><alternatives><tex-math id="M1195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M1196"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq555.gif"/></alternatives></inline-formula>. The procedure is repeated until <italic>K</italic>-many <inline-formula id="IEq556"><alternatives><tex-math id="M1197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1198"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq556.gif"/></alternatives></inline-formula>-admissible samples are generated. To stabilize this heuristic strategy, Infrared additionally implements an annealing scheme based on improvement of the root mean square deviation (RMSD) to the targets and controlled by the cooling factor <inline-formula id="IEq557"><alternatives><tex-math id="M1199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Gamma$$\end{document}</tex-math><mml:math id="M1200"><mml:mi mathvariant="normal">Γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq557.gif"/></alternatives></inline-formula>.</p>
      <p id="Par218"><italic>MDBS for RNA design</italic> Fig. <xref rid="Fig9" ref-type="fig">9</xref> illustrates this MDBS strategy for the example of Fig. <xref rid="Fig5" ref-type="fig">5</xref> and specific energy and G C content targets. Showing typical behavior, the strategy improves the RMSD while generating admissible and nonadmissible samples. In this way, it increases the efficiency of generating admissible assignments (Fig. <xref rid="Fig9" ref-type="fig">9</xref>A). Figure <xref rid="Fig9" ref-type="fig">9</xref>B shows how MDBS shifts the multivariate distribution toward the targets (here starting from uniform sampling).</p>
      <p id="Par219"><italic>Targeting by proxy</italic> The multitarget design example showcases an interesting extension of the standard MDBS mechanism. Namely, in this case, we distinguish base pair energy from Turner energy. To target the latter, we use base pair energies as proxies, since they allow much more efficient sampling (and are sufficiently correlated to Turner energies; compare [<xref ref-type="bibr" rid="CR16">16</xref>]). To shift the distributions during the MDBS algorithm, we thus estimate the means of the <italic>Turner energies</italic>; then, based on their difference from the target Turner energies, we update the weights of the corresponding <italic>base pair energy</italic> feature. Our Infrared implementation supports ‘targeting by proxy’ in a generalized way (using a second kind of feature <italic>F</italic> whose evaluations <italic>F</italic>(<italic>x</italic>) are defined explicitly, instead of being induced by their network functions).</p>
      <p id="Par220"><italic>Available code examples</italic> In supplemental online material (Jupyter notebooks), we show the code to produce the samples and plots for Fig. <xref rid="Fig9" ref-type="fig">9</xref>; as a further example, we demonstrate effective random sequence generation targeting all 16 dinucleotide frequencies of a SAM riboswitch (RF00162; from <italic>S. thermophilum</italic>), while maintaining compatibility with its pseudoknotted RNA structure.</p>
    </sec>
  </sec>
  <sec id="Sec24">
    <title>Implementation</title>
    <p id="Par221">
      <fig id="Fig10">
        <label>Fig. 10</label>
        <caption>
          <p>Overview of the Infrared architecture. The C++ <bold>core engine</bold> is connected to a high-end <bold>modeling layer</bold> in Python by a hybrid <bold>connecting layer</bold>. The C++ core implements the computational engine to evaluate forward and traceback algorithms on cluster trees as generic code (e.g. supporting different algebras as evaluation policies; PF for partition function, Arctic for maximization). This optimized low-level layer is exposed to Python using pybind11; the core functionality is moreover extended (by tree decomposition, using module treedecomp, population of the cluster tree...) on the Python side to implement the full computational engine. Finally, the high-level modeling interface of Infrared offers functionality to model and solve feature networks, perform sampling targeting specific features (multidimensional Boltzmann sampling), define custom constrain and function types. Moreover, we include the module rna for RNA-specific functionality</p>
        </caption>
        <graphic xlink:href="13015_2024_258_Fig10_HTML" id="MO19"/>
      </fig>
    </p>
    <p id="Par222">The Infrared software supports declarative modeling of problems as feature networks and treewidth-dependent efficient solving through a high-level Python interface. Figure <xref rid="Fig10" ref-type="fig">10</xref> sketches its architecture. For solving, the software relies on optimized implementations of the presented algorithms in C++. The low-level C++ engine is glued to a high-level ‘modeling’ layer by a pybind11-based C++/Python interface. Thus, Infrared maintains a small algorithmic core in C++ (for high performance), while extending functionality in Python (for increased flexibility). For example, the C++ <bold>core engine</bold> solves cluster trees and focuses on <italic>necessary</italic> functionality, while the construction of the cluster tree from a model, as well as “high-level” functionality such as the declarative composition of models, are implemented in Python.</p>
    <p id="Par223">The C++ code is templated to generically support different function types and evaluation algebras, which keeps the code compact and maintainable; moreover it prepares future extensions of the system. For fast processing of bags, the core engine relies on fast backtracking enumeration of partial assignments (class AssignmentIterator), where constraints and functions are evaluated as early as possible (to avoid unnecessary and redundant computation). Bag processing evaluates constraints (<inline-formula id="IEq558"><alternatives><tex-math id="M1201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {Function&lt;bool&gt;}$$\end{document}</tex-math><mml:math id="M1202"><mml:mrow><mml:mi mathvariant="monospace">Function</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">bool</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq558.gif"/></alternatives></inline-formula>) and functions (<inline-formula id="IEq559"><alternatives><tex-math id="M1203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {Function&lt;double&gt;}$$\end{document}</tex-math><mml:math id="M1204"><mml:mrow><mml:mi mathvariant="monospace">Function</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">double</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq559.gif"/></alternatives></inline-formula>) and, in the forward phase, computes messages, stored in memory as objects of <inline-formula id="IEq560"><alternatives><tex-math id="M1205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {MaterializedFunction&lt;double&gt;}$$\end{document}</tex-math><mml:math id="M1206"><mml:mrow><mml:mi mathvariant="monospace">MaterializedFunction</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">double</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq560.gif"/></alternatives></inline-formula>.</p>
    <p id="Par224">For completion of the Infrared solver, the <bold>connecting layer</bold> exposes the C++ functionality to Python, specializing the templates to optimization (arctic policy) and partition function over real-valued features. Moreover, it extends the core by Python wrapper classes that ‘know’ how to construct cluster trees from feature networks. To prepare the definition of function and constraint classes, it wraps the Boolean and real-valued C++ function classes. Generating tree decompositions is delegated to the module treedecomp. While we provide interfaces to different external tree decomposers and support customization, the implemented default strategy applies a randomized min-fill-in heuristic [<xref ref-type="bibr" rid="CR13">13</xref>] and returns a tree decomposition with heuristically minimized tree width.</p>
    <p id="Par225">Finally, the <bold>modeling interface</bold> layer enables a declarative style of defining feature networks as objects of the class Model through Python code. Adding variables, constraints, and functions supports naturally specifying, but also extending and merging feature networks. From models one can construct solvers to perform different tasks, including optimization, Boltzmann sampling at specified feature weights or targeted sampling; the latter relies on a multidimensional Boltzmann strategy that learns weights to effectively target specific feature values.</p>
    <p id="Par226"><italic>Definition of application-specific constraints and functions</italic> Infrared supports the definition of constraints and functions in Python by special concise syntax via the respective functions def_constraint_class and def_function_class. Examples of their use were given before for defining the constraint NotEquals and network function Card for the introductory graph coloring model. To create Python classes of constraints or network functions, the user calls these functions with the class name and two Python functions. The first function (init) has two roles. It defines the arguments of the constructor and returns the scope (or dependency list) of the constraint or function. The second function (value) defines how the constraint/function is evaluated at specific values of the dependency variables. Using arguments of the same name, information can be passed from initialization to evaluation; e.g. this enables constraint/function type arguments or auxiliary data structures. For clear semantics (while allowing optimizations), we require referential transparency, i.e. the result of the value function must not vary with anything but its arguments.</p>
    <p id="Par227"><italic>Precomputation</italic> The core engine precomputes constraints and network functions when they are added to the cluster tree. For this purpose, they are evaluated for all partial assignments and the results are tabulated (MaterializedFunction). This simple mechanism supports the convenient specification of constraints and functions in Python, while resulting in fast computation times in practice (by significantly reducing the overhead due to the Python computation). From a theoretical perspective, this mechanism preserves the worst case time complexity, since <italic>k</italic>-ary constraints and functions impose a bound on the treewitdh <inline-formula id="IEq561"><alternatives><tex-math id="M1207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w \ge k-1$$\end{document}</tex-math><mml:math id="M1208"><mml:mrow><mml:mi>w</mml:mi><mml:mo>≥</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq561.gif"/></alternatives></inline-formula>. The strategy requires additional space in <inline-formula id="IEq562"><alternatives><tex-math id="M1209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^k\mathfrak {m})$$\end{document}</tex-math><mml:math id="M1210"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msup><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq562.gif"/></alternatives></inline-formula>, for maximum domain size <inline-formula id="IEq563"><alternatives><tex-math id="M1211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d$$\end{document}</tex-math><mml:math id="M1212"><mml:mi>d</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq563.gif"/></alternatives></inline-formula> and <inline-formula id="IEq564"><alternatives><tex-math id="M1213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {m}$$\end{document}</tex-math><mml:math id="M1214"><mml:mi mathvariant="fraktur">m</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq564.gif"/></alternatives></inline-formula> constraints and functions. Space and time consumption due to the precomputation are thus dominated by the solving complexity if <inline-formula id="IEq565"><alternatives><tex-math id="M1215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w &gt; k-1$$\end{document}</tex-math><mml:math id="M1216"><mml:mrow><mml:mi>w</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq565.gif"/></alternatives></inline-formula>. In this way, the strategy is optimized for the typical performance-critical cases. Future implementations can speed up the precomputation by possibly lazy caching mechanisms without changing semantics and the interface.</p>
  </sec>
  <sec id="Sec25">
    <title>Discussion</title>
    <p id="Par228">The Infrared framework was motivated by the success of related technology in solving complex bioinformatics problems; most directly, by our work on multitarget RNA design [<xref ref-type="bibr" rid="CR16">16</xref>]. Thus, the system started out as a library that generalized the fixed-parameter tractable (FPT) sampling algorithm of RNARedprint and its multidimensional Boltzmann sampling strategy. Since then it has been developed into a broadly applicable framework, supporting convenient declarative modeling of problems with multiple features, where models can be solved by a generic treewidth-based algorithm using different algebras. This text was written to supply the reader with a comprehensive discussion of the techniques combined in the Infrared system. In contrast, our book chapter [<xref ref-type="bibr" rid="CR28">28</xref>] focused on coding of design problems in Infrared and did not in-depth discuss Infrared’s methods in favor of an application-oriented introduction. Furthermore, note that we published a book chapter on the first version of RNARedprint [<xref ref-type="bibr" rid="CR49">49</xref>], which did not make use of the Infrared system.</p>
    <p id="Par229">Since the system’s first application for concisely reimplementing RNARedprint with improved functionality and performance, it has proven to be a very useful tool for further algorithmic developments in bioinformatics [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. Other previous work [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR48">48</xref>] could have directly profited from the Infrared framework. For several previous algorithms [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR48">48</xref>], we presented feature network models and discussed their solving complexity. For these examples, the system yields essentially identical algorithms; with the exception of alignment, where Infrared lacks a problem-specific optimization (Secs. “Sequence alignment” and “From sequence alignment to pseudoknot sequence-structure alignment”), which we plan to add in the future. From the well-researched field of network parsimony, we present further examples where the Infrared ’s solving complexity is on par with state-of-the-art algorithms [<xref ref-type="bibr" rid="CR5">5</xref>] (even improving softwired parsimony on binary networks).</p>
    <p id="Par230"><italic>Utiltity for prototyping and practical applications</italic> In summary, these previous works witness the suitability of Infrared for prototyping novel algorithmic ideas; moreover, their benchmark results show the practical utility of the system to solve relevant problem instances. Of particular interest, we show that—for many practically relevant problem instances—the treewidth is sufficiently low to enable effective solving by Infrared.</p>
    <p id="Par231">In addition, we wanted to learn about Infrared ’s practical performance in relation to optimized problem-specific code in a high-performance computing language (Fig. <xref rid="Fig11" ref-type="fig">11</xref>A). Taking a unique opportunity, we compared our original C++ implementation of multitarget design [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR49">49</xref>], RNARedprint  v1, to our Infrared-based reimplementation RNARedprint  v2. We chose the benchmark set “RNAfold”, e.g. used in [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR51">51</xref>], comprising 400 design instances of 3–6 structures, which were generated to pose ambitious challenges with treewidths up to 16. This experiment was performed on an Intel Core i7-4770 CPU with 32 GB memory.</p>
    <p id="Par232">Moreover, we studied the practical applicability of treewidth-based network parsimony algorithms (Sec. “Network parsimony”) on a set of nonartificial phylogenetic networks [<xref ref-type="bibr" rid="CR52">52</xref>] compiled from the literature (see <ext-link ext-link-type="uri" xlink:href="https://phylnet.univ-mlv.fr/recophync/networkDraw.php">https://phylnet.univ-mlv.fr/recophync/networkDraw.php</ext-link>). This data set is typically used as a reference set for the comparison and evaluation of various algorithms on phylogenetic networks. For our purposes, we determined the treewidths of the networks in dependency on their size and the number of reticulation nodes (Fig. <xref rid="Fig11" ref-type="fig">11</xref>B). Here treewidth directly provides information about the solving efficiency of hardwired and softwired parsimony problems (Sec. “Network parsimony”). The low to moderate treewidths on these instances hint at permissible performance in many real-word scenarios.<fig id="Fig11"><label>Fig. 11</label><caption><p><bold>A</bold> Benchmark comparison of the Infrared-based RNARedPrint v2 to the original C++ implementation “v1”. Time is measured as user time; space, as maximum resident set size (RSS). We run the tools on the RNAfold benchmark set [<xref ref-type="bibr" rid="CR16">16</xref>]. We let both tools generate 1000 samples at fixed weights; note that time and space are strongly dominated by the precomputation phase. To directly compare the implementations of the core algorithms, we run both tools on identical tree decompositions, although Infrared ’s default tree decomposer improves for several instances (including the most expensive one). One observes that the RNARedPrint v2 improves in space and time over the original implementation. Only for very short runtimes, at low treewidth, the C++ implementation has a slight edge, presumably due to less overhead. Both implementation show almost no noticable space increase at low tree widths; however the space requirements of the original implementation increase dramatically for treewidths larger than 10. Due to its extreme space requirement, we didn’t solve the single instance of treewidth 16 with RNARedPrint v1; in other cases, it failed due to a bug. For those instances, we indicate only the performance of version 2 (red crosses). <bold>B</bold> We used Infrared to compute the treewidths for a set of various phylogenetic networks that were collected from recent studies [<xref ref-type="bibr" rid="CR52">52</xref>]. Using the Infrared network parsimony model, we count the number of reticulation nodes in the networks and calculate their treewidth. It can be seen that the treewidth rather correlates with the number of reticulation nodes than with network size (number of nodes and edges). Our study on ’real-world’ phylogenetic networks suggests that treewidths are often low in practice; consequently Infrared can effectively compute network parsimony by solving the presented models</p></caption><graphic xlink:href="13015_2024_258_Fig11_HTML" id="MO20"/></fig></p>
    <p id="Par233"><italic>Characteristics and application range</italic> By modeling a series of concrete bioinformatics problems, we showed that Infrared is broadly applicable, going well beyond the selected examples. As discussed before, this extends to applicability <italic>in practice</italic>, where Infrared can efficiently solve relevant instances of expressible problems. Although feature networks are virtually universal, such that they do not limit the system’s expressivity, Infrared ’s solver relies on a very specific mechanism, where efficiency strictly depends on the treewidth of the problem instance. Arguably, this is a prerequisite for the very characteristic properties of the framework. In contrast to heuristic methods, our tree decomposition-based solving strategy leads to predictable worst-case complexity guarantees for exact optimization <italic>and</italic> sampling. Notably, exact controlled sampling rules out many heuristic pruning-type solving strategies, since it requires exact computation of partition functions.</p>
    <p id="Par234">Nevertheless, the dependency on treewidth necessarily limits the <italic>practically solvable</italic> problems and instances. In practice, such problems (explicitly or implicitly) have some graph structure. Examples are graph coloring or multitarget RNA design, which both are NP hard, but efficiently solvable for specific instances, whose graphs are sufficiently close to trees.</p>
    <p id="Par235">Infrared was designed to handle such tree decomposable problems (and their low-treewidth instances) well, but its general solving mechanism offers the flexibility to go beyond. For example, the framework supports strategies that limit the treewidth of considered instances (e.g. we controlled the maximum treewidth in our negative design approach RNAPOND [<xref ref-type="bibr" rid="CR17">17</xref>]) or reduce the treewidth in controlled ways (e.g. TreeDiet [<xref ref-type="bibr" rid="CR18">18</xref>]). For this class of problems, we identify potential for future improvements of the Infrared solver, which could allow instances to be solved significantly faster or with better complexity. For example, we discussed the complexity of alignment; additionally, consistency-based methods can yield significant improvements over the current evaluation strategy by cluster tree elimination.</p>
    <p id="Par236"><italic>Delimitation</italic> The system is, however, not designed and is even unsuitable for problems that cannot be modeled as a decomposable feature network. This comprises many constraint satisfaction (CSP) or constraint optimization problems (COP) that would typically be solved by general constraint solvers (e.g. the constraint programming system Gecode [<xref ref-type="bibr" rid="CR26">26</xref>]), SAT solving (e.g. MiniSAT [<xref ref-type="bibr" rid="CR53">53</xref>]), or solving of integer linear programs (e.g. CPLEX [<xref ref-type="bibr" rid="CR54">54</xref>]). In many classical CSP examples (e.g. n-Queens, Sudoku), models induce a complete (or almost complete) dependency graph. Here, Infrared does not implement strategies to heuristically cope with the exponential worst case complexity (e.g. constraint propagation or branch and bound); its solving strategy would therefore be essentially brute force. Obviously Infrared is thus not a general solver for CSP/COP, even if its declarative modeling paradigm and interface remind of such systems.</p>
    <p id="Par237">While Infrared proposes a novel form of automated solving of declarative problem specifications by dynamic programming (DP), bioinformatics already has a long tradition of combining declarative methods and dynamic programming in the form of Algebraic Dynamic Programming (ADP) [<xref ref-type="bibr" rid="CR55">55</xref>].</p>
    <p id="Par238">Despite the common DP backdrop, Infrared and ADP pursue different, even orthogonal goals: instead of deriving a DP algorithm from a declarative problem description, ADP implementations such as GAPC [<xref ref-type="bibr" rid="CR56">56</xref>] or ADPFusion [<xref ref-type="bibr" rid="CR57">57</xref>, <xref ref-type="bibr" rid="CR58">58</xref>] aim to support the implementation of DP algorithms through algebraic abstraction.</p>
  </sec>
  <sec id="Sec26">
    <title>Conclusions</title>
    <p id="Par239">We presented a framework for rapidly developing applications that make use of efficient exact optimization and sampling techniques by declaratively specifying problems in Python. As such, the framework provides flexible access to recent advanced algorithmic techniques—while specifying problems resembles common constraint modeling systems.</p>
    <p id="Par240">The system allows modeling problems as feature networks, which we introduced as a form of weighted constrained networks that support several features. The main advantages and characteristics of the framework stem from combining expressive modeling with automated combinatorial solving strategies that support exact optimization and weighted sampling. In particular, exact sampling, which requires complete combinatorial algorithms, can be used in innovative ways. For example, it allows generating decoys and background models in complex settings or targeting multiple features in its extension to multidimensional Boltzmann sampling.</p>
    <p id="Par241">As elaborated, these tasks are performed by generic solving algorithms based on tree decompositions of the models. Being parameterized by the treewidth, this strategy profits from the often moderately low treewidth of many typical problems in bioinformatics.</p>
    <p id="Par242">We underline the broad range of possible applications, by our discussion of diverse application examples and their implementation (online documentation). Demonstrating the concise reimplementation of previous bioinformatics methods, these applications serve as reference coding examples and also show the practical relevance of the framework.</p>
    <p id="Par243">Crucially, the system makes such methods accessible through a declarative interface in Python. Since this strongly facilitates their flexible use, the system promotes future applications of these techniques. Increasing flexibility, the system supports extension and refinement of existing models as well as their composition, e.g. sequence design targeting structure RNA <italic>and</italic> forbidding specific sequence motifs.</p>
    <p id="Par244"><italic>Future work</italic> We plan to further optimize the Infrared solver due to consistency methods and/or forward checking (in single bag processing). In specific cases, such techniques even improve complexity bounds over the currently implemented CTE-like evaluation mechanism. Moreover, we want to adapt the linear-factor speedup over standard evaluation for alignment problems (LicoRNA)—generalizations of this technique pose interesting research questions. As another path of optimization, we will implement improved tree decomposition adapted to our solver.</p>
    <p id="Par245">Furthermore, the architecture of the framework enables additional solvers; for example, such solvers can compute Pareto-optima or perform nonredundant sampling [<xref ref-type="bibr" rid="CR59">59</xref>] based on feature network models. Moreover, it will be interesting to explore the use of further evaluation algebras, which can be used with the generic evaluation algorithms of Infrared ’s C++ core engine.</p>
    <p id="Par246">Finally, the system highlights benefits due to tree decomposition of problems that enable general solving by efficient combinatorial methods. While such methods can be tedious to implement from scratch, we demonstrated their use through a declarative modeling interface. In future work, we envision developing and making related methods accessible in a similar way. One exciting line would extend our work on tree decomposition-based automatic generation of dynamic programming schemes [<xref ref-type="bibr" rid="CR19">19</xref>].
</p>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec27">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13015_2024_258_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1. Correctness proofs</bold>. The file contains proofs of Propositions 1, 2 and 3, which establish the correctness of the optimization and sampling algorithms.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par249"><ext-link ext-link-type="uri" xlink:href="https://gitlab.inria.fr/amibio/RNARedPrint">https://gitlab.inria.fr/amibio/RNARedPrint</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>HTY and SW mainly wrote the methods and application examples; SW wrote the introduction, discussion and conclusion. SW implemented the Infrared framework and the accompanying application examples. HTY contributed crucially to software deployment and documentation and computed results. SJB wrote the network parsimony section and computed results. BM wrote the discussion of theoretical complexities and background on tree decompositions and parameterized complexity. YP and SW initiated the Infrared project. YP made indispensable contributions across the manuscript, improved the presentation and contributed details of multidimensional Boltzmann sampling. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open access funding provided by University of Vienna. This work is supported by the French national research agency ANR: grant ANR-21-CE45-0034-01 “INSSANE”, as well as the Austrian Science Fund (FWF), grant no. I 4520. This project has received funding from the European Union’s Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 10102967.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar36" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par247">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wachsmuth</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Domin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lorenz</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Serfling</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Mörl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Design criteria for synthetic riboswitches acting on transcription</article-title>
        <source>RNA Biol</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>221</fpage>
        <lpage>231</lpage>
        <pub-id pub-id-type="doi">10.1080/15476286.2015.1017235</pub-id>
        <?supplied-pmid 25826571?>
        <pub-id pub-id-type="pmid">25826571</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Andreasson</surname>
            <given-names>JOL</given-names>
          </name>
          <name>
            <surname>Kladwang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Greenleaf</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Automated design of diverse stand-alone riboswitches</article-title>
        <source>ACS Synth Biol</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>8</issue>
        <fpage>1838</fpage>
        <lpage>1846</lpage>
        <pub-id pub-id-type="doi">10.1021/acssynbio.9b00142</pub-id>
        <?supplied-pmid 31298841?>
        <pub-id pub-id-type="pmid">31298841</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rinaudo</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Barth</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Tree decomposition and parameterized algorithms for RNA structure-sequence alignment including tertiary interactions and pseudoknots</article-title>
        <source>Algorithms Bioinform</source>
        <year>2012</year>
        <pub-id pub-id-type="doi">10.1007/978-3-642-33122-0_12</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jabbari</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wark</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Montemagno</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Knotty: efficient and accurate prediction of complex RNA pseudoknot structures</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>22</issue>
        <fpage>3849</fpage>
        <lpage>3856</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty420</pub-id>
        <?supplied-pmid 29868872?>
        <pub-id pub-id-type="pmid">29868872</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Scornavacca</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Weller</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Treewidth-based algorithms for the small parsimony problem on networks</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2022</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>15</fpage>
        <pub-id pub-id-type="doi">10.1186/s13015-022-00216-w</pub-id>
        <?supplied-pmid 35987645?>
        <pub-id pub-id-type="pmid">35987645</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Katoch</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chauhan</surname>
            <given-names>SS</given-names>
          </name>
          <name>
            <surname>Kumar</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>A review on genetic algorithm: past, present, and future</article-title>
        <source>Multimed Tools Appl</source>
        <year>2021</year>
        <volume>80</volume>
        <issue>5</issue>
        <fpage>8091</fpage>
        <lpage>8126</lpage>
        <pub-id pub-id-type="doi">10.1007/s11042-020-10139-6</pub-id>
        <?supplied-pmid 33162782?>
        <pub-id pub-id-type="pmid">33162782</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miklós</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Paige</surname>
            <given-names>TB</given-names>
          </name>
          <name>
            <surname>Ligeti</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Efficient sampling of transpositions and inverted transpositions for bayesian MCMC</article-title>
        <source>Algorithms Bioinform</source>
        <year>2006</year>
        <pub-id pub-id-type="doi">10.1007/11851561_17</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Neumann</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>YT</given-names>
          </name>
          <name>
            <surname>Mallela</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>EF</given-names>
          </name>
          <name>
            <surname>Colvin</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Duprat</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hlavacek</surname>
            <given-names>WS</given-names>
          </name>
          <name>
            <surname>Posner</surname>
            <given-names>RG</given-names>
          </name>
        </person-group>
        <article-title>Implementation of a practical Markov chain Monte Carlo sampling algorithm in PyBioNetFit</article-title>
        <source>Bioinformatics</source>
        <year>2022</year>
        <volume>38</volume>
        <issue>6</issue>
        <fpage>1770</fpage>
        <lpage>1772</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac004</pub-id>
        <?supplied-pmid 34986226?>
        <pub-id pub-id-type="pmid">34986226</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Downey</surname>
            <given-names>RG</given-names>
          </name>
          <name>
            <surname>Fellows</surname>
            <given-names>MR</given-names>
          </name>
        </person-group>
        <source>Parameterized Complexity</source>
        <year>1999</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Rossi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Beek</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Walsh</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <source>Handbook of constraint programming (Foundations of Artificial Intelligence)</source>
        <year>2006</year>
        <publisher-loc>Walthm</publisher-loc>
        <publisher-name>Elsevier Science</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Constraint Proc</source>
        <year>2003</year>
        <publisher-loc>San Francisco</publisher-loc>
        <publisher-name>Morgan Kaufmann</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Reasoning with probabilistic and deterministic graphical models</source>
        <year>2019</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Koster</surname>
            <given-names>AMCA</given-names>
          </name>
        </person-group>
        <article-title>Treewidth computations i. upper bounds</article-title>
        <source>Inform Comput</source>
        <year>2010</year>
        <volume>208</volume>
        <issue>3</issue>
        <fpage>259</fpage>
        <lpage>275</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ic.2009.03.008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Cygan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fomin</surname>
            <given-names>FV</given-names>
          </name>
          <name>
            <surname>Kowalik</surname>
            <given-names>Ł</given-names>
          </name>
          <name>
            <surname>Lokshtanov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Marx</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pilipczuk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pilipczuk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Saurabh</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Parameterized Algorithms</source>
        <year>2015</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Bodini O, Ponty Y. Multi-dimensional Boltzmann sampling of languages. In: Proceedings of the 21st International Meeting on Probabilistic, Combinatorial, and Asymptotic Methods in the Analysis of Algorithms (AofA’10), DMTCS Proceedings, Vienna, Austria. 2010; 49–64.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Fixed-parameter tractable sampling for RNA design with multiple target structures</article-title>
        <source>BMC Bioinf</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-019-2784-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Yao H-T, Waldispühl J, Ponty Y, Will S. Taming disruptive base pairs to reconcile positive and negative structural design of rna. In: Research in Computational Molecular Biology - 25th Annual International Conference, RECOMB 2021. Lecture Notes in Computer Science. Springer, Padova, Italy 2021</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchand</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bulteau</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Tree diet: reducing the treewidth to unlock FPT algorithms in RNA bioinformatics</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2022</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13015-022-00213-z</pub-id>
        <pub-id pub-id-type="pmid">35033127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Marchand B, Will S, Berkemer SJ, Bulteau L, Ponty Y. Automated design of dynamic programming schemes for RNA folding with pseudoknots. In: Boucher, C., Rahmann, S. (eds.) 22nd nternational Workshop on Algorithms in Bioinformatics (WABI 2022). Leibniz International Proceedings in Informatics (LIPIcs), vol. 242, pp. 7–1724. Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl, Germany 2022. 10.4230/LIPIcs.WABI.2022.7 . <ext-link ext-link-type="uri" xlink:href="https://drops.dagstuhl.de/opus/volltexte/2022/17041">https://drops.dagstuhl.de/opus/volltexte/2022/17041</ext-link></mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Busch</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Efficient sequence alignment with side-constraints by cluster tree elimination</article-title>
        <source>Constraints</source>
        <year>2008</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>110</fpage>
        <lpage>129</lpage>
        <pub-id pub-id-type="doi">10.1007/s10601-007-9032-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McCaskill</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>The equilibrium partition function and base pair binding probabilities for RNA secondary structure</article-title>
        <source>Biopolymers</source>
        <year>1990</year>
        <volume>29</volume>
        <issue>6–7</issue>
        <fpage>1105</fpage>
        <lpage>1119</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.360290621</pub-id>
        <?supplied-pmid 1695107?>
        <pub-id pub-id-type="pmid">1695107</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ding</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lawrence</surname>
            <given-names>CE</given-names>
          </name>
        </person-group>
        <article-title>A statistical sampling algorithm for RNA secondary structure prediction</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>7280</fpage>
        <lpage>7301</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg938</pub-id>
        <?supplied-pmid 14654704?>
        <pub-id pub-id-type="pmid">14654704</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hastings</surname>
            <given-names>WK</given-names>
          </name>
        </person-group>
        <article-title>Monte carlo sampling methods using markov chains and their applications</article-title>
        <source>Biometrika</source>
        <year>1970</year>
        <volume>57</volume>
        <issue>1</issue>
        <fpage>97</fpage>
        <lpage>109</lpage>
        <pub-id pub-id-type="doi">10.1093/biomet/57.1.97</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roshan</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Livesay</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>Probalign: multiple sequence alignment using partition function posterior probabilities</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>22</issue>
        <fpage>2715</fpage>
        <lpage>2721</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl472</pub-id>
        <?supplied-pmid 16954142?>
        <pub-id pub-id-type="pmid">16954142</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Joshi</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>LocARNA-P: accurate boundary prediction and improved detection of structural RNAs</article-title>
        <source>RNA</source>
        <year>2012</year>
        <volume>18</volume>
        <issue>5</issue>
        <fpage>900</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1261/rna.029041.111</pub-id>
        <?supplied-pmid 22450757?>
        <pub-id pub-id-type="pmid">22450757</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Schulte C, Tack G, Lagerkvist MZ. Modeling and programming with Gecode. Schulte, Christian and Tack, Guido and Lagerkvist, Mikael 2010;1</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Allouche</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bessiere</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boizumault</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Givry</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gutierrez</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>JHM</given-names>
          </name>
          <name>
            <surname>Leung</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Loudni</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Métivier</surname>
            <given-names>J-P</given-names>
          </name>
          <name>
            <surname>Schiex</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Tractability-preserving transformations of global cost functions</article-title>
        <source>Artif Intell</source>
        <year>2016</year>
        <volume>238</volume>
        <fpage>166</fpage>
        <lpage>189</lpage>
        <pub-id pub-id-type="doi">10.1016/j.artint.2016.06.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Yao H-T, Ponty Y, Will S. Developing complex RNA design applications in the Infrared framework. (2022). preprint; to be published. <ext-link ext-link-type="uri" xlink:href="https://hal.science/hal-03711828">https://hal.science/hal-03711828</ext-link></mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Koster</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Combinatorial optimization on graphs of bounded treewidth</article-title>
        <source>Comput J</source>
        <year>2008</year>
        <volume>51</volume>
        <issue>3</issue>
        <fpage>255</fpage>
        <lpage>269</lpage>
        <pub-id pub-id-type="doi">10.1093/comjnl/bxm037</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
          <collab>Handbook of Constraint Programming</collab>
        </person-group>
        <article-title>Tractable Structures for Constraint Satisfaction Problems. In</article-title>
        <source>Found Artificial Intell</source>
        <year>2006</year>
        <volume>2</volume>
        <fpage>209</fpage>
        <lpage>244</lpage>
        <pub-id pub-id-type="doi">10.1016/S1574-6526(06)80011-8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bachoore</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Tokuyama</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Weighted treewidth algorithmic techniques and results</article-title>
        <source>International symposium on algorithms and computation (ISAAC 2007)</source>
        <year>2007</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>893</fpage>
        <lpage>903</lpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arnborg</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Corneil</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Proskurowski</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Complexity of finding embeddings in a k-tree</article-title>
        <source>SIAM J Algebraic Discrete Methods</source>
        <year>1987</year>
        <volume>8</volume>
        <issue>2</issue>
        <fpage>277</fpage>
        <lpage>284</lpage>
        <pub-id pub-id-type="doi">10.1137/0608024</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tamaki</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Positive-instance driven dynamic programming for treewidth</article-title>
        <source>J Combinatorial Optimizat</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>4</issue>
        <fpage>1283</fpage>
        <lpage>1311</lpage>
        <pub-id pub-id-type="doi">10.1007/s10878-018-0353-z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Bodlaender HL. A linear time algorithm for finding tree-decompositions of small treewidth. In: Proceedings of the Twenty-fifth Annual ACM Symposium on Theory of Computing. 1993;226–234.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Doolittle</surname>
            <given-names>WF</given-names>
          </name>
        </person-group>
        <article-title>Phylogenetic classification and the universal tree</article-title>
        <source>Science</source>
        <year>1999</year>
        <volume>284</volume>
        <issue>5423</issue>
        <fpage>2124</fpage>
        <lpage>2128</lpage>
        <pub-id pub-id-type="doi">10.1126/science.284.5423.2124</pub-id>
        <?supplied-pmid 10381871?>
        <pub-id pub-id-type="pmid">10381871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fitch</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Toward defining the course of evolution: minimum change for a specific tree topology</article-title>
        <source>Syst Biol</source>
        <year>1971</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>406</fpage>
        <lpage>416</lpage>
        <pub-id pub-id-type="doi">10.1093/sysbio/20.4.406</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sankoff</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Rousseau</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Locating the vertices of a steiner tree in an arbitrary metric space</article-title>
        <source>Math Program</source>
        <year>1975</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>240</fpage>
        <lpage>246</lpage>
        <pub-id pub-id-type="doi">10.1007/BF01681346</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darty</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>VARNA: interactive drawing and editing of the RNA secondary structure</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1974</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp250</pub-id>
        <?supplied-pmid 19398448?>
        <pub-id pub-id-type="pmid">19398448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taneda</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Multi-objective optimization for RNA design with multiple target secondary structures</article-title>
        <source>BMC Bioinf</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>280</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-015-0706-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Sabina</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zuker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>Expanded sequence dependence of thermodynamic parameters improves prediction of RNA secondary structure</article-title>
        <source>J Mol Biol</source>
        <year>1999</year>
        <volume>288</volume>
        <issue>5</issue>
        <fpage>911</fpage>
        <lpage>940</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1999.2700</pub-id>
        <?supplied-pmid 10329189?>
        <pub-id pub-id-type="pmid">10329189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>NNDB: the nearest neighbor parameter database for predicting stability of nucleic acid secondary structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>Suppl–1</issue>
        <fpage>280</fpage>
        <lpage>282</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkp892</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol</source>
        <year>1970</year>
        <volume>48</volume>
        <issue>3</issue>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gotoh</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>An improved algorithm for matching biological sequences</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>162</volume>
        <issue>3</issue>
        <fpage>705</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90398-9</pub-id>
        <?supplied-pmid 7166760?>
        <pub-id pub-id-type="pmid">7166760</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chao</surname>
            <given-names>K-M</given-names>
          </name>
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Aligning two sequences within a specified diagonal band</article-title>
        <source>Bioinformatics</source>
        <year>1992</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>481</fpage>
        <lpage>487</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/8.5.481</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pesant</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>A regular language membership constraint for finite sequences of Variables. In: principles and practice of constraint programming - CP</source>
        <year>2001</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>482</fpage>
        <lpage>495</lpage>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Zhou, Y., Ponty, Y., Vialette, S., Waldispuhl, J., Zhang, Y., Denise, A.: Flexible RNA design under structure and sequence constraints using formal languages. In: BCB’13: Proceedings of the International Conference on Bioinformatics, Computational Biology and Biomedical Informatics, pp. 229–238. Association for Computing Machinery, New York, NY, USA (2013). 10.1145/2506583.2506623</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Blanchette</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lécuyer</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>SPARCS: a web server to analyze (un)structured regions in coding RNA sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>W1</issue>
        <fpage>480</fpage>
        <lpage>485</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt461</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reinharz</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>A weighted sampling algorithm for the design of RNA sequences with targeted secondary structure and nucleotide distribution</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>13</issue>
        <fpage>308</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt217</pub-id>
        <pub-id pub-id-type="pmid">23202746</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yao</surname>
            <given-names>H-T</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Adv Design Struct RNAs RNA RedPrint: RNA Bioinformatics</source>
        <year>2020</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Boury, T., Ponty, Y., Reinharz, V.: Automatic exploration of the natural variability of RNA non-canonical geometric patterns with a parameterized sampling technique. In: 23nd International Workshop on Algorithms in Bioinformatics (WABI 2023). Leibniz International Proceedings in Informatics (LIPIcs). Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl, Germany (2023). <ext-link ext-link-type="uri" xlink:href="https://hal.science/hal-04094288">https://hal.science/hal-04094288</ext-link></mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tschiatschek</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>RNAblueprint: flexible multiple target nucleic acid sequence design</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <issue>18</issue>
        <fpage>2850</fpage>
        <lpage>2858</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx263</pub-id>
        <?supplied-pmid 28449031?>
        <pub-id pub-id-type="pmid">28449031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gambette</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gunawan</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Labarre</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vialette</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Solving the tree containment problem in linear time for nearly stable phylogenetic networks</article-title>
        <source>Discrete Appl Math</source>
        <year>2018</year>
        <volume>246</volume>
        <fpage>62</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1016/j.dam.2017.07.015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Eén</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sörensson</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <source>An extensible SAT-solver In Theory and Applications of Satisfiability Testing</source>
        <year>2004</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>502</fpage>
        <lpage>518</lpage>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cplex</surname>
            <given-names>II</given-names>
          </name>
        </person-group>
        <article-title>V12. 1: User’s manual for CPLEX</article-title>
        <source>Int Business Mach Corporat</source>
        <year>2009</year>
        <volume>46</volume>
        <issue>53</issue>
        <fpage>157</fpage>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Steffen</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>A discipline of dynamic programming over sequence data</article-title>
        <source>Sci Comput Programming</source>
        <year>2004</year>
        <volume>51</volume>
        <issue>3</issue>
        <fpage>215</fpage>
        <lpage>263</lpage>
        <pub-id pub-id-type="doi">10.1016/j.scico.2003.12.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sauthoff</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Möhl</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Janssen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Bellman’s GAP–a language and compiler for dynamic programming in sequence analysis</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>551</fpage>
        <lpage>560</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt022</pub-id>
        <?supplied-pmid 23355290?>
        <pub-id pub-id-type="pmid">23355290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zu</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Abfalter</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Computational design of RNAs with complex energy landscapes</article-title>
        <source>Biopolymers</source>
        <year>2013</year>
        <volume>99</volume>
        <issue>12</issue>
        <fpage>1124</fpage>
        <lpage>1136</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.22337</pub-id>
        <pub-id pub-id-type="pmid">23818234</pub-id>
      </element-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riechert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Siederdissen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Algebraic dynamic programming for multiple context-free grammars</article-title>
        <source>Theoret Comput Sci</source>
        <year>2016</year>
        <volume>639</volume>
        <fpage>91</fpage>
        <lpage>109</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2016.05.032</pub-id>
      </element-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Michálik</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Touzet</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Efficient approximations of RNA kinetics landscape using non-redundant sampling</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>283</fpage>
        <lpage>292</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx269</pub-id>
        <pub-id pub-id-type="pmid">27663497</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Algorithms Mol Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Algorithms Mol Biol</journal-id>
    <journal-title-group>
      <journal-title>Algorithms for Molecular Biology : AMB</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1748-7188</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10943887</article-id>
    <article-id pub-id-type="publisher-id">258</article-id>
    <article-id pub-id-type="doi">10.1186/s13015-024-00258-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Infrared: a declarative tree decomposition-powered framework for bioinformatics</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Yao</surname>
          <given-names>Hua-Ting</given-names>
        </name>
        <address>
          <email>htyao@tbi.univie.ac.at</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Marchand</surname>
          <given-names>Bertrand</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Berkemer</surname>
          <given-names>Sarah J.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Will</surname>
          <given-names>Sebastian</given-names>
        </name>
        <address>
          <email>sebastian.will@polytechnique.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.503305.0</institution-id><institution-id institution-id-type="ISNI">0000 0004 0367 3665</institution-id><institution>LIX, CNRS UMR 7161, Ecole Polytechnique, Institut Polytechnique de Paris, </institution></institution-wrap>Palaiseau, France </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/03prydq77</institution-id><institution-id institution-id-type="GRID">grid.10420.37</institution-id><institution-id institution-id-type="ISNI">0000 0001 2286 1424</institution-id><institution>Department of Theoretical Chemistry, </institution><institution>University of Vienna, </institution></institution-wrap>Vienna, Austria </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/01pxwe438</institution-id><institution-id institution-id-type="GRID">grid.14709.3b</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 8649</institution-id><institution>School of Computer Science, </institution><institution>McGill University, </institution></institution-wrap>Montreal, Canada </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.32197.3e</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2105</institution-id><institution>Earth-Life Science Institute, </institution><institution>Tokyo Institute of Technology, </institution></institution-wrap>Tokyo, Japan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>13</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>9</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>2</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Motivation</title>
        <p id="Par1">Many bioinformatics problems can be approached as optimization or controlled sampling tasks, and solved exactly and efficiently using Dynamic Programming (DP). However, such exact methods are typically tailored towards specific settings, complex to develop, and hard to implement and adapt to problem variations.</p>
      </sec>
      <sec>
        <title>Methods</title>
        <p id="Par2">We introduce the Infrared framework to overcome such hindrances for a large class of problems. Its underlying paradigm is tailored toward problems that can be declaratively formalized as sparse feature networks, a generalization of constraint networks. Classic Boolean constraints specify a search space, consisting of putative solutions whose evaluation is performed through a combination of features. Problems are then solved using generic cluster tree elimination algorithms over a tree decomposition of the feature network. Their overall complexities are linear on the number of variables, and only exponential in the treewidth of the feature network. For sparse feature networks, associated with low to moderate treewidths, these algorithms allow to find optimal solutions, or generate controlled samples, with practical empirical efficiency.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par3">Implementing these methods, the Infrared software allows Python programmers to rapidly develop exact optimization and sampling applications based on a tree decomposition-based efficient processing. Instead of directly coding specialized algorithms, problems are declaratively modeled as sets of variables over finite domains, whose dependencies are captured by constraints and functions. Such models are then automatically solved by generic DP algorithms. To illustrate the applicability of Infrared in bioinformatics and guide new users, we model and discuss variants of bioinformatics applications. We provide reimplementations and extensions of methods for RNA design, RNA sequence-structure alignment, parsimony-driven inference of ancestral traits in phylogenetic trees/networks, and design of coding sequences. Moreover, we demonstrate multidimensional Boltzmann sampling. These applications of the framework—together with our novel results—underline the practical relevance of Infrared. Remarkably, the achieved complexities are typically equivalent to the ones of specialized algorithms and implementations.</p>
      </sec>
      <sec>
        <title>Availability</title>
        <p id="Par4">Infrared is available at <ext-link ext-link-type="uri" xlink:href="https://amibio.gitlabpages.inria.fr/Infrared">https://amibio.gitlabpages.inria.fr/Infrared</ext-link> with extensive documentation, including various usage examples and API reference; it can be installed using Conda or from source.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13015-024-00258-2.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Bioinformatics</kwd>
      <kwd>Fixed-parameter tractable algorithms</kwd>
      <kwd>Tree decomposition</kwd>
      <kwd>Boltzmann sampling</kwd>
      <kwd>Network phylogeny</kwd>
      <kwd>RNA sequence design</kwd>
      <kwd>RNA alignment</kwd>
      <kwd>Pseudoknots</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100002428</institution-id>
            <institution>Austrian Science Fund</institution>
          </institution-wrap>
        </funding-source>
        <award-id>I 4520</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yao</surname>
            <given-names>Hua-Ting</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001665</institution-id>
            <institution>Agence Nationale de la Recherche</institution>
          </institution-wrap>
        </funding-source>
        <award-id>ANR-21-CE45-0034-01</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100018694</institution-id>
            <institution>HORIZON EUROPE Marie Sklodowska-Curie Actions</institution>
          </institution-wrap>
        </funding-source>
        <award-id>10102967</award-id>
        <principal-award-recipient>
          <name>
            <surname>Berkemer</surname>
            <given-names>Sarah J.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>University of Vienna</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open access funding provided by University of Vienna.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par5">Typical applications of computational, “bioinformatical” methods to real world biological problems have inherently high complexity at different levels. For example, these include the design of functional control elements for biotechnology [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], identifying homologies in the context of RNA pseudoknots [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>], or the prediction of phylogenies considering complex inheritance patterns [<xref ref-type="bibr" rid="CR5">5</xref>]. First, <italic>modeling complexity</italic> is directly inherited from the complexity of the biological backdrop. This requires bioinformatics approaches to deal with hard constraints and soft requirements. Moreover, many approaches need to target complex scores, often composed of multiple interdependent objectives, e.g. for predicting optimal solutions or generating designs. In turn, the high modeling complexity is reflected in coding challenges and leads to high <italic>computational complexity</italic> of exact solutions. Frequently, this turns bioinformaticians away from exact, combinatorial methods to less controlled heuristics, for example optimization by local search or genetic algorithms [<xref ref-type="bibr" rid="CR6">6</xref>], or sampling by MCMC (Markov Chain Monte Carlo)-like approaches [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>], which sacrifice guarantees on the optimality of solutions or the time and space complexity of the computations.</p>
    <p id="Par6">Here, we introduce the framework Infrared to cope with these levels of complexity. This system lets users specify a large class of computational problems and solves them by combinatorial algorithms with parameterized complexity [<xref ref-type="bibr" rid="CR9">9</xref>]. These methods guarantee exactness and work efficiently, when the “complexity” (treewidth) of the problem instance is fixed. In practice, this limits the system to problems with moderately sparse dependencies. The system combines various concepts of computer science, comprising constraint modeling [<xref ref-type="bibr" rid="CR10">10</xref>], constraint and scoring networks [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], tree decomposition [<xref ref-type="bibr" rid="CR13">13</xref>], parameterized complexity [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR14">14</xref>], random generation, and (multidimensional) Boltzmann sampling [<xref ref-type="bibr" rid="CR15">15</xref>]. Along with Infrared, we advocate and hope to promote the use of exact methods. In place of heuristic methods, many NP-hard problems can be solved by algorithms of parameterized complexity, which our system makes more accessible due to proper abstractions. Other problems profit from building heuristic methods on top of exact algorithms.</p>
    <p id="Par7">Historically, the presented framework originated as a generalization of our own previous work on multitarget RNA design (RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]) and our original approach has been completely reimplemented and extended based on Infrared (RNARedprint v2<xref ref-type="fn" rid="Fn1">1</xref>). In parallel to the presented research, we used an early version of the system for original research in the area of negative RNA design (RNAPond, [<xref ref-type="bibr" rid="CR17">17</xref>]). Other recent work has strong conceptual ties: Tree-Diet [<xref ref-type="bibr" rid="CR18">18</xref>] (by using RNAPond and LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]) and AutoDP [<xref ref-type="bibr" rid="CR19">19</xref>]). Moreover, as we show in this text, sequence and RNA sequence-structure alignment can be implemented following the models of LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>] and [<xref ref-type="bibr" rid="CR20">20</xref>]; both papers introduced closely related solving strategies for alignment.</p>
    <p id="Par8">Our framework aims to facilitate the implementation of complex algorithms based on the declarative modeling paradigm. Instead of implementing a concrete algorithm, it allows users to formally describe the problem by specifying the admissible solutions and their quality assessments. Similar to, e.g. constraint programming or integer linear programming systems, those models are solved automatically by a built-in general mechanism.<fig id="Fig1"><label>Fig. 1</label><caption><p>The running example: graph coloring. <bold>A</bold> Example input graph. <bold>B</bold> One valid coloring with 4 colors, corresponding to an assignment of variables to colors (domain values) that satisfies all the inequality constraints along the edges. In our example extension, which minimizes the <italic>feature</italic> counting the different colors in each of its four cycles of length <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq1.gif"/></alternatives></inline-formula>, <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_2,v_3,v_5,v_6)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq2.gif"/></alternatives></inline-formula>, <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_2,v_5,v_7,v_8)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq3.gif"/></alternatives></inline-formula>, <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_5,v_6,v_7,v_8)$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq4.gif"/></alternatives></inline-formula> and <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_5,v_6,v_8,v_9$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>9</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq5.gif"/></alternatives></inline-formula>, this coloring is not optimal (e.g. recolor <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_3$$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mi>v</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq6.gif"/></alternatives></inline-formula>)</p></caption><graphic xlink:href="13015_2024_258_Fig1_HTML" id="MO1"/></fig></p>
    <sec id="FPar1">
      <title>Example 1</title>
      <p id="Par9">(Graph coloring) Let us illustrate this idea by modeling graph coloring as a Constraint Satisfaction Problem (CSP). We use this ‘toy problem’ as our running example to formally introduce our main concepts. For this purpose, we will later extend it beyond constraint satisfaction (introducing some quality of colorings).</p>
      <p id="Par10">Given a graph <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V, E)$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq7.gif"/></alternatives></inline-formula>, see Fig. <xref rid="Fig1" ref-type="fig">1</xref>A, the graph coloring problem asks for a vertex labeling by <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M16"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq8.gif"/></alternatives></inline-formula> colors, such that adjacent vertices are colored differently (Fig. <xref rid="Fig1" ref-type="fig">1</xref>B). To solve this classical problem in our system, we model it as a CSP, i.e. as a triple of a set of variables, one domain per variable, and constraints. This CSP introduces one variable per vertex, resulting in the set of variables <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{X_1,\dots ,X_{|V|}\}$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq9.gif"/></alternatives></inline-formula>. Each variable encodes the label of the corresponding vertex, i.e. it takes values from <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq10.gif"/></alternatives></inline-formula> to <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M22"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq11.gif"/></alternatives></inline-formula>, expressed by choosing the domain <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D(X_i)=\{1,\dots , k\}$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mi>D</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq12.gif"/></alternatives></inline-formula> for each <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq13.gif"/></alternatives></inline-formula>. Finally, we define the constraint set consisting of one inequality constraint <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}$$\end{document}</tex-math><mml:math id="M28"><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq14.gif"/></alternatives></inline-formula> between the variables <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M30"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq15.gif"/></alternatives></inline-formula> and <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M32"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq16.gif"/></alternatives></inline-formula> for every edge <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)\in E$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq17.gif"/></alternatives></inline-formula>.</p>
      <p id="Par11">Solving the problem means finding a <italic>valid</italic> assignment of values to variables that satisfies the constraints. Our system supports constraint solving, even if pure constraint solving serves mostly as a basis for further extensions. We can directly express our graph coloring model in Python code.<graphic position="anchor" xlink:href="13015_2024_258_Figa_HTML" id="MO2"/></p>
      <p>Based on this model, Infrared finds a valid coloring automatically due to its built-in parameterized algorithms in a time that depends on the size of the graph, the number of colors, and the <italic>complexity of G</italic>, i.e. its treewidth. For this purpose, one passes the model to the solver and asks for a valid solution. Since Infrared handles constraint satisfaction and optimization in the same way, its solver is called Optimizer.<graphic position="anchor" xlink:href="13015_2024_258_Figb_HTML" id="MO3"/></p>
    </sec>
    <sec id="Sec28">
      <title>Extending CSPs by features</title>
      <p id="Par13">Beyond validity, Infrared addresses solution quality in terms of one or several <italic>features</italic>—conceptually, we extend Infrared ’s models from CSPs to feature networks. This allows users of the framework to more naturally model complex problems with multiple objectives, as they commonly occur in bioinformatics. Based on specified features, Infrared is then able to perform tasks such as optimization and weighted sampling.</p>
      <sec id="FPar2">
        <title>Example 2</title>
        <p id="Par14">As a first feature example, let us pick up graph coloring and additionally minimize the use of different colors in cycles of length <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq18.gif"/></alternatives></inline-formula> (4-cycles). For this purpose, we specify a feature by imposing one 4-ary function Card for each 4-cycle that counts the different colors in the cycle (set cardinality); the sum of function values defines the value of the feature.</p>
        <p id="Par15">Infrared ’s syntax supports the compositional construction and extension of models. After defining the class of functions Card, we can therefore add them to the previous model.<graphic position="anchor" xlink:href="13015_2024_258_Figc_HTML" id="MO4"/></p>
        <p id="Par16">Given this extended model, the solver automatically finds an assignment with optimal evaluation by the feature.<graphic position="anchor" xlink:href="13015_2024_258_Figd_HTML" id="MO5"/></p>
        <p>Due to the features, the dependencies between variables become more complex. Where we had a dependency between the variables of each edge in the basic graph coloring model, after the extension, all four variables of each 4-cycle depend on each other due to the functions Card. Infrared ’s solver automatically adapts to this increased complexity of the problem.</p>
      </sec>
    </sec>
    <sec id="Sec29">
      <title>Boltzmann sampling</title>
      <p id="Par18">Once specified by a model, a problem can be <italic>solved</italic> in different ways. In addition to finding optimal solutions, one can just as easily sample assignments from a uniform or Boltzmann distribution controlled by potentially multiple features and their weights.</p>
      <sec id="FPar3">
        <title>Example 3</title>
        <p id="Par19">Continuing our example, we can generate random uniform colorings from the same model using a different solver.</p>
        <p id="Par20">In statistical mechanics, Boltzmann distributions describe the probabilities of states in a physical system depending on their energy. They are ubiquitous in physics and have numerous applications in bionformatics e.g. for describing the equilibrium of folding molecules [<xref ref-type="bibr" rid="CR21">21</xref>] or generating energy weighted and near-optimal conformations [<xref ref-type="bibr" rid="CR22">22</xref>]. Beyond physical interpretation, Boltzmann distributions have applications as general tools, e.g. in heuristic optimization [<xref ref-type="bibr" rid="CR23">23</xref>], for deriving probabilities in alignments [<xref ref-type="bibr" rid="CR24">24</xref>, <xref ref-type="bibr" rid="CR25">25</xref>] or for targeting properties [<xref ref-type="bibr" rid="CR15">15</xref>].<graphic position="anchor" xlink:href="13015_2024_258_Fige_HTML" id="MO6"/></p>
        <p id="Par21">Through the weight, we can control the expected value of the feature in the generated distribution. Setting a nonzero weight causes Infrared to sample from a nonuniform Boltzmann distribution, e.g. setting the weight to <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$+2$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq19.gif"/></alternatives></inline-formula> shifts the expectation to a large cardinality while setting it to <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-2$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq20.gif"/></alternatives></inline-formula> induces smaller cardinalities.</p>
      </sec>
    </sec>
    <sec id="Sec30">
      <title>Positioning against prior work</title>
      <p id="Par22">As already hinted by the introductory example, Infrared does <bold>not</bold> focus on general constraint solving as performed by constraint programming systems such as Gecode [<xref ref-type="bibr" rid="CR26">26</xref>]. Adding evaluation to our models ties this work closer to weighted constraint problems or cost networks, with some superficial relations to cost function optimizers such as Toulbar2 [<xref ref-type="bibr" rid="CR27">27</xref>]. While such systems combine search with forms of constraint consistency, our solving strategies come from the area of constraint processing in constraint networks [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par23">As such, our system is tailored to exactly and efficiently solve a specific class of problems, where it can algorithmically profit from a sufficiently tree-like structure (parameterized complexity for the parameter treewidth). This characteristic still allows broad and flexible use of the system, e.g. in bionformatics, where many relevant problems and problem instances have this structure. The capability to solve such bioinformatics problems by complete and exact algorithms with predictable complexity enables specific applications, e.g. it is essential for precisely controlled weighted sampling.</p>
    </sec>
    <sec id="Sec31">
      <title>Overview and contributions</title>
      <p id="Par24">In the next section, we formally define the core concepts of modeling problems in our framework; the models that characterize specific problem instances are formalized as feature networks. Moreover, we precisely state the tasks of optimization and sampling that are solved by the system. In Section “Algorithms for solving feature networks”, we describe the main algorithms to solve these tasks based on the model. Along with the algorithms we explain the underlying prerequisite key concepts of tree decomposition and cluster trees [<xref ref-type="bibr" rid="CR12">12</xref>]. The given generic, cluster tree elimination-based, algorithms are efficient for fixed treewidth values of the feature network—in other words, they are exponential in the treewidth only. In the second part of the paper, we present several examples of modeling different classic bioinformatics problems as feature networks. Due to the declarative nature of the Infrared system, stating the feature networks is very close to actually implementing these algorithms. To increase the practical value, we put out documented Python code (in the form of Jupyter notebooks) for each application example as supplementary material. Starting with applications to showcase elementary use of Infrared, we move on to advanced topics, including interesting extensions to preceding examples and the targeting of features by multidimensional Boltzmann sampling. Finally, we discuss implications for the use of the system and its application range, as well as future developments within and beyond the framework.</p>
    </sec>
  </sec>
  <sec id="Sec2">
    <title>Feature networks for modeling problems in Infrared</title>
    <p id="Par25">We conceptualize the declarative models of Infrared as <italic>feature networks</italic> (FNs). They are defined as a form of weighted CSP, explicitly distinguishing several real-valued features (instead of only a single or integer-valued score).</p>
    <sec id="FPar4">
      <title>Definition 1</title>
      <p id="Par26">(Feature Network; FN) A feature network (FN) <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M42"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq21.gif"/></alternatives></inline-formula> is a tuple <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq22.gif"/></alternatives></inline-formula>, where<list list-type="bullet"><list-item><p id="Par27"><inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} =\{X_1,\dots ,X_n\}$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq23.gif"/></alternatives></inline-formula> is a set of <bold>variables</bold>;</p></list-item><list-item><p id="Par28"><inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} =\{D_1,\dots ,D_n\}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi mathvariant="script">D</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq24.gif"/></alternatives></inline-formula> is a set of <bold>domains</bold>, one per variable, where each domain is a finite set of integers;</p></list-item><list-item><p id="Par29"><inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}$$\end{document}</tex-math><mml:math id="M50"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq25.gif"/></alternatives></inline-formula> is a finite set of <bold>constraints</bold>;</p></list-item><list-item><p id="Par30"><inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} =\{F_1,\ldots ,F_\ell \}$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi mathvariant="script">F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq26.gif"/></alternatives></inline-formula> is a set of <bold>features</bold>.</p></list-item></list></p>
      <p>Those networks specify <italic>solutions</italic> to a problem instance as specific assignments of domain values to variables.</p>
    </sec>
    <sec id="FPar5">
      <title>Definition 2</title>
      <p id="Par32">(Assignment) An <bold>assignment</bold>, for a given FN <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M54"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq27.gif"/></alternatives></inline-formula>, is a set of single variable mappings <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i\mapsto x_i$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq28.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq29.gif"/></alternatives></inline-formula> is a variable of <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M60"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq30.gif"/></alternatives></inline-formula>, <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M62"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq31.gif"/></alternatives></inline-formula> is in the domain <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i$$\end{document}</tex-math><mml:math id="M64"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq32.gif"/></alternatives></inline-formula> of <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq33.gif"/></alternatives></inline-formula> and every <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq34.gif"/></alternatives></inline-formula> occurs at most once. An assignment is called <bold>total</bold>, if every variable of <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M70"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq35.gif"/></alternatives></inline-formula> occurs exactly once; otherwise, it is <bold>partial</bold>.</p>
      <p>Given <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '\subseteq \mathcal {X}$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq36.gif"/></alternatives></inline-formula>, we denote the set of all <bold>assignments</bold>
<italic>x</italic>
<bold>of</bold>
<inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '$$\end{document}</tex-math><mml:math id="M74"><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq37.gif"/></alternatives></inline-formula> as <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A} _{\mathcal {X} '}$$\end{document}</tex-math><mml:math id="M76"><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq38.gif"/></alternatives></inline-formula>. When <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '$$\end{document}</tex-math><mml:math id="M78"><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq39.gif"/></alternatives></inline-formula> (and the order of its variables) is clear, one can write assignments as tuples, e.g. <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(x_1,\ldots ,x_n)$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq40.gif"/></alternatives></inline-formula> in place of <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_1\mapsto x_1,\dots ,X_n\mapsto x_n$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq41.gif"/></alternatives></inline-formula> in the case of a total assignment (<inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '=\mathcal {X}$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq42.gif"/></alternatives></inline-formula>).</p>
    </sec>
    <sec id="FPar6">
      <title>Example 4</title>
      <p id="Par34">Consider the graph <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq43.gif"/></alternatives></inline-formula> of Fig. <xref rid="Fig1" ref-type="fig">1</xref>. We model graph coloring for <italic>G</italic> and four colors as a feature network <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}= (\mathcal {X} _{\text {col}},\mathcal {D} _{\text {col}},\mathcal {C} _{\text {col}},\mathcal {F} _{\text {col}})$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq44.gif"/></alternatives></inline-formula>. Let us first define <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {col}}= \{X_1, \ldots , X_9\}$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {col}}= \{D_1,\ldots ,D_9\}$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq46.gif"/></alternatives></inline-formula>; <inline-formula id="IEq47"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i=\{1,2,3,4\}$$\end{document}</tex-math><mml:math id="M94"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq47.gif"/></alternatives></inline-formula>. This specifies one variable <inline-formula id="IEq48"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq48.gif"/></alternatives></inline-formula> for every vertex <inline-formula id="IEq49"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i$$\end{document}</tex-math><mml:math id="M98"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq49.gif"/></alternatives></inline-formula> in the graph and one domain per variable, encoding the colors as integer values.</p>
      <p id="Par35">A total assignment <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x=\{X_1\mapsto x_1,\ldots ,\mathcal {X} _9\mapsto x_9\}\in \mathcal {A} _{\mathcal {X} _{\text {col}}}$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq50.gif"/></alternatives></inline-formula> describes a coloring where the vertex <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i\in V$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq51.gif"/></alternatives></inline-formula> has color <inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq52.gif"/></alternatives></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="Sec32">
    <title>Validity of assignments</title>
    <p id="Par36"> To distinguish valid from invalid assignments, we introduce constraints <inline-formula id="IEq53"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}$$\end{document}</tex-math><mml:math id="M106"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq53.gif"/></alternatives></inline-formula> that need to be satisfied by valid assignments. In our running example, this allows us to define valid colorings and thus completely specify graph coloring as CSP.</p>
    <sec id="FPar7">
      <title>Definition 3</title>
      <p id="Par37">(Constraint) Given <inline-formula id="IEq54"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq54.gif"/></alternatives></inline-formula>, each <bold>constraint</bold>
<inline-formula id="IEq55"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq55.gif"/></alternatives></inline-formula> is associated with a set of variables <inline-formula id="IEq56"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_1},\ldots ,X_{i_k}\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq56.gif"/></alternatives></inline-formula> and a Boolean function on values <inline-formula id="IEq57"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1},\ldots ,x_{i_k}$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq57.gif"/></alternatives></inline-formula>. Given an assignment <italic>x</italic> containing <inline-formula id="IEq58"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_j}\mapsto x_{i_j}$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq58.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq59"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j\in \{1,\ldots ,k\}$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq59.gif"/></alternatives></inline-formula>, we <bold>evaluate the constraint</bold>
<italic>C</italic>
<bold>w.r.t.</bold> <italic>x</italic> by applying the Boolean function to <inline-formula id="IEq60"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1}, \ldots , x_{i_k}$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq60.gif"/></alternatives></inline-formula>. The resulting evaluation is denoted <italic>C</italic>(<italic>x</italic>).<disp-formula id="Equ7"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} C :\quad&amp;D_{i_1}\times \cdots \times D_{i_k}{} &amp; {} \rightarrow{} &amp; {} \{\textsf{True},\textsf{False} \} \\&amp;(x_{i_1},\dots ,x_{i_k}){} &amp; {} \mapsto{} &amp; {} C(x_{i_1},\dots ,x_{i_k}) \end{aligned}$$\end{document}</tex-math><mml:math id="M122" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>C</mml:mi><mml:mo>:</mml:mo><mml:mspace width="1em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="sans-serif">True</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">False</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>↦</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>We say <italic>C</italic> is <italic>k</italic><bold>-ary</bold> or has the <bold>arity</bold>
<italic>k</italic>. Let <inline-formula id="IEq61"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)=\{X_{i_1},\ldots ,X_{i_k}\}$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq61.gif"/></alternatives></inline-formula> denote the <bold>dependency</bold> of <italic>C</italic>. Note that the constraint literature commonly refers to the dependency of a constraint as its <bold>scope</bold>.</p>
      <p>We call an assignment <inline-formula id="IEq62"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _{\mathcal {X} '}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq62.gif"/></alternatives></inline-formula>, <inline-formula id="IEq63"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '\subseteq \mathcal {X}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq63.gif"/></alternatives></inline-formula>, <bold>valid</bold> iff all constraints <inline-formula id="IEq64"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq64.gif"/></alternatives></inline-formula> with <inline-formula id="IEq65"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)\subseteq \mathcal {X} '$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⊆</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq65.gif"/></alternatives></inline-formula> are <bold>satisfied</bold> (i.e. evaluated to True) by the assignment <italic>x</italic>.</p>
    </sec>
    <sec id="FPar8">
      <title>Example 5</title>
      <p id="Par39">To enforce the neighbor coloring constraint in our example, it is sufficient to add the constraint below for each edge <inline-formula id="IEq66"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_i, v_j)\in E$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq66.gif"/></alternatives></inline-formula><disp-formula id="Equ8"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; c_{{{\text{col}}}} \,{\text{ = }}\,\left\{ {{\textsf{NotEquals}}_{{\left[ {i,j} \right]}} \,\left| {\left( {v_{i} ,\,v_{j} } \right)\, \in \,E} \right.} \right\}{\text{with}}\,\\ &amp; \quad {\textsf{NotEquals}}_{{[i,j]}} \,\left( {x_{i} ,x_{j} } \right)\, = \,\delta \left( {x_{i} \ne x_{j} } \right), \end{aligned}$$\end{document}</tex-math><mml:math id="M136" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mspace width="0.166667em"/><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>=</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mspace width="0.166667em"/><mml:mfenced close="}" open="{"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">NotEquals</mml:mi><mml:mfenced close="]" open="["><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced open="|"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>∈</mml:mo><mml:mspace width="0.166667em"/><mml:mi>E</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mtext>with</mml:mtext><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:msub><mml:mi mathvariant="sans-serif">NotEquals</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mi>δ</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (p)$$\end{document}</tex-math><mml:math id="M138"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq67.gif"/></alternatives></inline-formula> is the truth value of the expression <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M140"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq68.gif"/></alternatives></inline-formula>.</p>
      <p id="Par40">The constraint <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq69.gif"/></alternatives></inline-formula> determines whether two given colors are distinct. Applying on all edges ensures that a valid assignment is a solution of the graph coloring problem. For example, both assignments <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}=(1,2,3,3,4,2,1,3,1)$$\end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq70.gif"/></alternatives></inline-formula> and <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}=(1,2,4,3,4,2,1,3,1)$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq71.gif"/></alternatives></inline-formula> satisfy the constraints <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {col}}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq72.gif"/></alternatives></inline-formula>.</p>
      <p id="Par41">In addition to finding valid assignments, one often wants to distinguish solutions by their quality. In graph coloring, we can e.g. aim for using fewer colors per 4-cycle; this would make <inline-formula id="IEq73"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}$$\end{document}</tex-math><mml:math id="M150"><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq73.gif"/></alternatives></inline-formula> preferable over <inline-formula id="IEq74"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}$$\end{document}</tex-math><mml:math id="M152"><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq74.gif"/></alternatives></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="Sec33">
    <title>Evaluation of assignments by features</title>
    <p id="Par42"> Each feature <inline-formula id="IEq75"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq75.gif"/></alternatives></inline-formula> is a set of <italic>network functions</italic>. In this way, a feature can describe a global property of assignments, in contrast to constraints and network functions which typically act on a small number of variables. This asymmetry is introduced intentionally to allow us to easily control multiple global properties. It specifies an <italic>evaluation</italic> as a sum over the values of the functions in this set; the single functions are defined in the same way as constraints but return real values (instead of Boolean ones).</p>
    <sec id="FPar9">
      <title>Definition 4</title>
      <p id="Par43">(Network Function) Each <bold>network function</bold>
<inline-formula id="IEq76"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M156"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq76.gif"/></alternatives></inline-formula> of a feature network is associated with variables <inline-formula id="IEq77"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_1},\ldots ,X_{i_k}\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq77.gif"/></alternatives></inline-formula> and a real-valued function that, given an assignment <italic>x</italic>, maps the values <inline-formula id="IEq78"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1}, \ldots , x_{i_k}$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq78.gif"/></alternatives></inline-formula> to a real number.<disp-formula id="Equ9"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} f:\quad&amp;D_{i_1}\times \cdots \times D_{i_k}{} &amp; {} \rightarrow{} &amp; {} \mathbb {R} \\&amp;(x_{i_1},\dots ,x_{i_k}){} &amp; {} \mapsto{} &amp; {} f(x_{i_1},\dots ,x_{i_k}). \end{aligned}$$\end{document}</tex-math><mml:math id="M162" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mspace width="1em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>↦</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>Analogous to constraints, the returned value is called the <bold>evaluation of</bold>
<inline-formula id="IEq79"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M164"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq79.gif"/></alternatives></inline-formula>
<bold>by</bold>
<italic>x</italic>, denoted <italic>f</italic>(<italic>x</italic>), and the dependency is <inline-formula id="IEq80"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f):=\{X_{i_1},\ldots ,X_{i_k}\}$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq80.gif"/></alternatives></inline-formula>.</p>
      <p>Overloading notation, we define the <bold>(induced) feature evaluation</bold> (of valid assignment <italic>x</italic> by feature <italic>F</italic>) by <inline-formula id="IEq81"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F(x) = \sum _{f\in F}f(x)$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq81.gif"/></alternatives></inline-formula>. To account for multiple features, Infrared combines them linearly.</p>
    </sec>
    <sec id="FPar10">
      <title>Definition 5</title>
      <p id="Par45">(Assignment evaluation) Given a feature network <inline-formula id="IEq82"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq82.gif"/></alternatives></inline-formula> and <bold>feature weights</bold>
<inline-formula id="IEq83"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M172"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq83.gif"/></alternatives></inline-formula>; <inline-formula id="IEq84"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M174"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq84.gif"/></alternatives></inline-formula> defines respective weights <inline-formula id="IEq85"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _F$$\end{document}</tex-math><mml:math id="M176"><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq85.gif"/></alternatives></inline-formula> for each feature <italic>F</italic> in <inline-formula id="IEq86"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}$$\end{document}</tex-math><mml:math id="M178"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq86.gif"/></alternatives></inline-formula>. The evaluation of a valid assignment <inline-formula id="IEq87"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M180"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq87.gif"/></alternatives></inline-formula> is defined as a linear combination of the feature values w.r.t. <inline-formula id="IEq88"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M182"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq88.gif"/></alternatives></inline-formula>.<disp-formula id="Equ10"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}E_{\mathcal {N}}(x, \alpha ) = \sum _{F\in \mathcal {F}}\alpha _FF(x).\end{aligned}$$\end{document}</tex-math><mml:math id="M184" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
    <sec id="FPar11">
      <title>Example 6</title>
      <p id="Par46">We can now express our objective in the extended graph coloring problem in terms of a feature. For this purpose, we introduce network functions that each count the different colors in a 4-cycle <inline-formula id="IEq89"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_i,v_j,v_k,v_l)$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq89.gif"/></alternatives></inline-formula> of the example graph,<disp-formula id="Equ11"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}{\text {\textsf{Card}}}_{[i,j,k,l]}(x_i,x_j,x_k,x_l) = |\{x_i,x_j,x_k,x_l\}|.\end{aligned}$$\end{document}</tex-math><mml:math id="M188" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula>The corresponding feature set is then <inline-formula id="IEq90"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {col}} = \{F_{\text {card}}\}$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq90.gif"/></alternatives></inline-formula> with<disp-formula id="Equ12"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}F_{\text {card}}=\{{\text {\textsf{Card}}}_{[2,3,5,6]},{\text {\textsf{Card}}}_{[2,5,7,8]},{\text {\textsf{Card}}}_{[5,6,7,8]}\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M192" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula>In feature network <inline-formula id="IEq91"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}=(\mathcal {X} _{\text {col}},\mathcal {D} _{\text {col}},\mathcal {C} _{\text {col}},\mathcal {F} _{\text {col}})$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq91.gif"/></alternatives></inline-formula>, the two assignment examples <inline-formula id="IEq92"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}$$\end{document}</tex-math><mml:math id="M196"><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq92.gif"/></alternatives></inline-formula> and <inline-formula id="IEq93"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}$$\end{document}</tex-math><mml:math id="M198"><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq93.gif"/></alternatives></inline-formula> are evaluated to <inline-formula id="IEq94"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}(x_{\text {col}},1)=3+4+4=11$$\end{document}</tex-math><mml:math id="M200"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>=</mml:mo><mml:mn>11</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq94.gif"/></alternatives></inline-formula> and <inline-formula id="IEq95"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}(x'_{\text {col}},1)=2+4+4=10$$\end{document}</tex-math><mml:math id="M202"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq95.gif"/></alternatives></inline-formula>, respectively (for feature weight 1).</p>
      <p>Observe that a constraint satisfaction problem (CSP) is a special case of a feature network <inline-formula id="IEq96"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M204"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq96.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq97"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}$$\end{document}</tex-math><mml:math id="M206"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq97.gif"/></alternatives></inline-formula> is empty. Feature networks are one of many possible extensions of CSPs known from the literature [<xref ref-type="bibr" rid="CR12">12</xref>] that add forms of quality evaluation. For example, cost networks typically contain only a single set of functions, whereas we decided to explicitly distinguish a set of constraints from multiple sets of functions (features).</p>
    </sec>
  </sec>
  <sec id="Sec34">
    <title>Infrared ’s modeling syntax</title>
    <p id="Par48">Recall the code snippets from the introduction. This code implements the feature network <inline-formula id="IEq98"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M208"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq98.gif"/></alternatives></inline-formula> that we formally developed above. As in our formal model description, the definition via Infrared ’s Python interface defines variables and domains, constraint and function types, and sets of constraints and functions. By providing the functionality to add constraints and functions to a model, we support compositional step-by-step construction and even extension of existing models.</p>
    <p id="Par49">Finally, our code examples demonstrate how models are fed to solvers, e.g. ir.Optimizer or ir.Sampler. This allows finding an optimal solution or generating controlled samples from the same model. We formally state the respective Problems <xref ref-type="sec" rid="FPar12">1</xref> and <xref ref-type="sec" rid="FPar13">2</xref> below; these solvers implement the algorithms of Sec. “Algorithms for solving feature networks”.</p>
    <p id="Par50">To keep this article concise, we refer the reader to our online reference and tutorials for syntactic aspects of using Infrared. For further reference, we recommend our coding-oriented introduction in Infrared in a book chapter [<xref ref-type="bibr" rid="CR28">28</xref>], which focuses on modeling of sequence and RNA design problems. Moreover, recall that we maintain an online archive of documented Infrared application examples (covering all examples of this paper).</p>
  </sec>
  <sec id="Sec35">
    <title>Problem statements</title>
    <p id="Par51">Given a feature network model <inline-formula id="IEq99"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M210"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq99.gif"/></alternatives></inline-formula>, there are two tasks of immediate particular interest: optimization and sampling of the solution space. Our framework addresses both tasks explicitly and solves them automatically based on the specification of <inline-formula id="IEq100"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M212"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq100.gif"/></alternatives></inline-formula>. First, we want to optimize assignments among all valid assignments of <inline-formula id="IEq101"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M214"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq101.gif"/></alternatives></inline-formula>. Concretely, we ask for the assignment that optimizes the evaluation, i.e. the linear combination of the features given specific feature weights <inline-formula id="IEq102"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M216"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq102.gif"/></alternatives></inline-formula>.</p>
    <sec id="FPar12">
      <title>Problem 1</title>
      <p id="Par52">(Assignment maximization)<def-list><def-item><term><sc>Input:</sc></term><def><p id="Par53">Feature network <inline-formula id="IEq103"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M218"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq103.gif"/></alternatives></inline-formula>, feature weights <inline-formula id="IEq104"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M220"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq104.gif"/></alternatives></inline-formula></p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par54">Valid assignment <inline-formula id="IEq105"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x^*\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M222"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq105.gif"/></alternatives></inline-formula> that is maximal w.r.t. <inline-formula id="IEq106"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M224"><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq106.gif"/></alternatives></inline-formula> and <inline-formula id="IEq107"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M226"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq107.gif"/></alternatives></inline-formula>: <disp-formula id="Equ13"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x^{*} \, = \,\mathop {{\text{arg}}\,{\text{max}}}\limits_{{\begin{array}{*{20}c} {x \in {\mathcal{A}}_{{\mathcal{X}}} } \\ {x{\text{ is valid}}} \\ \end{array} }} \,E_{{\mathcal{N}}} \left( {x,\alpha } \right).$$\end{document}</tex-math><mml:math id="M228" display="block"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:munder><mml:mrow><mml:mtext>arg</mml:mtext><mml:mspace width="0.166667em"/><mml:mtext>max</mml:mtext></mml:mrow><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>x</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.166667em"/><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p></def></def-item></def-list></p>
      <p>Furthermore, we want to use models to sample valid assignments from a Boltzmann distribution, i.e. each sample should be generated with a probability proportional to the Boltzmann weight of their evaluation w.r.t. a given <inline-formula id="IEq108"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M230"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq108.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="FPar13">
      <title>Problem 2</title>
      <p id="Par56">(Assignment sampling) <def-list><def-item><term><sc>Input:</sc></term><def><p id="Par57">Feature network <inline-formula id="IEq109"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M232"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq109.gif"/></alternatives></inline-formula>, feature weights <inline-formula id="IEq110"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M234"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq110.gif"/></alternatives></inline-formula></p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par58">Valid assignment <inline-formula id="IEq111"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M236"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq111.gif"/></alternatives></inline-formula> generated with a probability that is proportional to its Boltzmann weight w.r.t. <inline-formula id="IEq112"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq112.gif"/></alternatives></inline-formula> and <inline-formula id="IEq113"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M240"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq113.gif"/></alternatives></inline-formula>: <disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathbb {P}(x) \propto \exp \left( E_{\mathcal {N}}(x, \alpha )\right) . \end{aligned}$$\end{document}</tex-math><mml:math id="M242" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∝</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p></def></def-item></def-list></p>
      <p>Unfolding the assignment sampling problem, we realize that it implicitly asks for the <bold>partition function</bold><disp-formula id="Equ14"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}Z_{\mathcal {N}, \alpha }:= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \quad \exp \left( E_{\mathcal {N}}(x, \alpha )\right) ,\end{aligned}$$\end{document}</tex-math><mml:math id="M244" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="1em"/><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ14.gif" position="anchor"/></alternatives></disp-formula>i.e. the proportionality factor in Eq. <xref rid="Equ1" ref-type="disp-formula">1</xref>, such that<disp-formula id="Equ15"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathbb {P}(x) = \exp \left( E_{\mathcal {N}}(x, \alpha )\right) / Z_{\mathcal {N},\alpha }.\end{aligned}$$\end{document}</tex-math><mml:math id="M246" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ15.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Algorithms for solving feature networks</title>
    <p id="Par60">Given a feature network <inline-formula id="IEq114"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M248"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq114.gif"/></alternatives></inline-formula>, Problem <xref ref-type="sec" rid="FPar12">1</xref> asks for an optimal assignment to the variables. Here, the exponentially large assignment space forbids naive approaches. Based on a <bold>tree decomposition</bold> [<xref ref-type="bibr" rid="CR29">29</xref>] of the network, we employ a form of dynamic programming that decomposes the computation into<list list-type="bullet"><list-item><p id="Par61">a ‘forward’ optimization phase to determine the optimal evaluation (i.e. only its numerical value), while storing the results of subproblems</p></list-item><list-item><p id="Par62">and a subsequent traceback algorithm to obtain an optimal assignment.</p></list-item></list>Our approach performs the optimization on a tree-like structure, namely, an annotated <italic>tree decomposition</italic> of the network, called the <italic>cluster tree</italic>. Instead of inefficiently searching through all total assignments, it enumerates value combinations of variable subsets at tree nodes and avoids redundant computation by storing the results of subproblems/subtrees; the evaluation of functions and constraints is interleaved with this enumeration. The optimization traverses the tree in bottom-up order; moving top-down in the same tree, based on the (intermediary) results of the first phase, the traceback algorithm identifies one optimal assignment. As such, the approach is a form of <bold>cluster tree elimination (CTE)</bold> [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
    <sec id="Sec6">
      <title>Sampling resembles optimization</title>
      <p id="Par63">Assignment sampling (Problem <xref ref-type="sec" rid="FPar13">2</xref>) can be solved in a remarkably similar way to Problem <xref ref-type="sec" rid="FPar12">1</xref>. This task can also be split into two phases, namely, the computation of <bold>partition functions</bold> followed by stochastic traceback. Similar to standard traceback, stochastic traceback constructs solutions by tracing back through the partial results from the forward computation. However, it randomly selects values of variables based on partial partition functions. In this way it finally selects a total assignment from the intended distribution.</p>
      <p id="Par64">To emphasize the parallels between the problems, let us restate optimization as determining<disp-formula id="Equ16"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E_{\max }&amp;= \max _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \sum _{F\in \mathcal {F}} {\text {\textsf{Id}}}(\alpha _FF(x)) \\ {}&amp;= \max _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \sum _{F\in \mathcal {F}} \sum _{f\in F}{\text {\textsf{Id}}}(\alpha _Ff(x)) \end{aligned}$$\end{document}</tex-math><mml:math id="M250" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>E</mml:mi><mml:mo movablelimits="true">max</mml:mo></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ16.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq115"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Id}}}$$\end{document}</tex-math><mml:math id="M252"><mml:mtext mathvariant="sans-serif">Id</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq115.gif"/></alternatives></inline-formula> is the identity function, compared to the partition function<disp-formula id="Equ17"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} Z_{\mathcal {N}, \alpha }&amp;= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \prod _{F\in \mathcal {F}} \exp \left( \alpha _F F(x)\right) \\ {}&amp;= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \prod _{F\in \mathcal {F}} \prod _{f\in F} \exp \left( \alpha _F f(x)\right) . \end{aligned}$$\end{document}</tex-math><mml:math id="M254" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ17.gif" position="anchor"/></alternatives></disp-formula>This breakdown into single network functions suggests that a general scheme can be applied to both problems, which specializes to either problem by the choice of algebra: <inline-formula id="IEq116"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\max , +, {\text {\textsf{Id}}})$$\end{document}</tex-math><mml:math id="M256"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">max</mml:mo><mml:mo>,</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq116.gif"/></alternatives></inline-formula> for optimization and <inline-formula id="IEq117"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M258"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq117.gif"/></alternatives></inline-formula> for the partition function (and thus sampling).</p>
    </sec>
    <sec id="Sec7">
      <title>Computation guided by cluster trees</title>
      <p id="Par65">We will define a cluster tree as an annotated tree decomposition of a feature network; it assigns the network functions and constraints to nodes (also called bags or clusters) where they should be evaluated. The computations process these clusters. Here, the tree decomposition determines the processing order. Processing the clusters bottom-up in the forward phase computes a result for the subtree of each cluster. For each cluster, this involves enumerating the assignments of cluster variables, while evaluating the constraints and functions of the cluster as well as previously computed results from the children clusters. The traceback follows the cluster tree top-down, partially re-evaluates the clusters and, on this basis, determines variables.</p>
      <sec id="Sec8">
        <title>Dependency graphs, tree decompositions, and cluster trees</title>
        <p id="Par66">To properly guide the dynamic programming evaluation, cluster trees must reflect the network dependencies through tree decompositions.</p>
        <sec id="FPar14">
          <title>Definition 6</title>
          <p id="Par67">(Dependency graph) The <bold>dependency graph of</bold>
<inline-formula id="IEq118"><alternatives><tex-math id="M259">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M260"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq118.gif"/></alternatives></inline-formula> is the hypergraph <inline-formula id="IEq119"><alternatives><tex-math id="M261">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}=(\mathcal {X}, \mathcal {E_\mathcal {N}})$$\end{document}</tex-math><mml:math id="M262"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq119.gif"/></alternatives></inline-formula>, where the hyperedges <inline-formula id="IEq120"><alternatives><tex-math id="M263">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {E_\mathcal {N}}$$\end{document}</tex-math><mml:math id="M264"><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq120.gif"/></alternatives></inline-formula> are the dependencies of the constraints and functions:<disp-formula id="Equ18"><alternatives><tex-math id="M265">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {E}_\mathcal {N}:= \Big \{{\text {vars}}(C) \mid C\in \mathcal {C}\,\Big \} \cup \Big \{{\text {vars}}(f) \mid f\in \bigcup _{F\in \mathcal {F}} F\,\Big \}.\end{aligned}$$\end{document}</tex-math><mml:math id="M266" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">{</mml:mo></mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∣</mml:mo><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mspace width="0.166667em"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">}</mml:mo></mml:mrow><mml:mo>∪</mml:mo><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">{</mml:mo></mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∣</mml:mo><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:munder><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mi>F</mml:mi><mml:mspace width="0.166667em"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ18.gif" position="anchor"/></alternatives></disp-formula></p>
        </sec>
        <sec id="FPar15">
          <title>Definition 7</title>
          <p id="Par68">(Tree decomposition, treewidth) A <bold>tree decomposition of a dependency graph</bold>
<inline-formula id="IEq121"><alternatives><tex-math id="M267">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M268"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq121.gif"/></alternatives></inline-formula> is a pair <inline-formula id="IEq122"><alternatives><tex-math id="M269">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M270"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq122.gif"/></alternatives></inline-formula> of a (rooted) tree <inline-formula id="IEq123"><alternatives><tex-math id="M271">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T=(V,E)$$\end{document}</tex-math><mml:math id="M272"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq123.gif"/></alternatives></inline-formula> and a node labeling <inline-formula id="IEq124"><alternatives><tex-math id="M273">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi$$\end{document}</tex-math><mml:math id="M274"><mml:mi>χ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq124.gif"/></alternatives></inline-formula> by subsets of variables, i.e. <inline-formula id="IEq125"><alternatives><tex-math id="M275">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi :V\rightarrow 2^\mathcal {X}$$\end{document}</tex-math><mml:math id="M276"><mml:mrow><mml:mi>χ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">X</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq125.gif"/></alternatives></inline-formula>. These subsets are called the <bold>bags</bold> of the tree decomposition. <list list-type="order"><list-item><p id="Par69">Each variable <inline-formula id="IEq126"><alternatives><tex-math id="M277">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M278"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq126.gif"/></alternatives></inline-formula> is in at least one bag;</p></list-item><list-item><p id="Par70">For all hyperedge <inline-formula id="IEq127"><alternatives><tex-math id="M279">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e\in \mathcal {E}_\mathcal {N}$$\end{document}</tex-math><mml:math id="M280"><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq127.gif"/></alternatives></inline-formula>, there is a node <inline-formula id="IEq128"><alternatives><tex-math id="M281">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\in V$$\end{document}</tex-math><mml:math id="M282"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq128.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq129"><alternatives><tex-math id="M283">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e\subseteq \chi (u)$$\end{document}</tex-math><mml:math id="M284"><mml:mrow><mml:mi>e</mml:mi><mml:mo>⊆</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq129.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par71">For all variables <inline-formula id="IEq130"><alternatives><tex-math id="M285">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M286"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq130.gif"/></alternatives></inline-formula>, the set <inline-formula id="IEq131"><alternatives><tex-math id="M287">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{u\in V \mid X\in \chi (u)\}$$\end{document}</tex-math><mml:math id="M288"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>∣</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq131.gif"/></alternatives></inline-formula> induces a connected tree.</p></list-item></list>The <bold>width</bold> of a tree decomposition <inline-formula id="IEq132"><alternatives><tex-math id="M289">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M290"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq132.gif"/></alternatives></inline-formula> is<disp-formula id="Equ19"><alternatives><tex-math id="M291">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\max _{u\in V} |\chi (u)| - 1.\end{aligned}$$\end{document}</tex-math><mml:math id="M292" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ19.gif" position="anchor"/></alternatives></disp-formula>The <bold>treewidth</bold> of a hypergraph is the minimum width among all possible tree decompositions. The <bold>tree decomposition and treewidth of a feature network</bold>
<inline-formula id="IEq133"><alternatives><tex-math id="M293">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M294"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq133.gif"/></alternatives></inline-formula> are the respective tree decomposition and treewidth of its dependency graph <inline-formula id="IEq134"><alternatives><tex-math id="M295">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_\mathcal {N}$$\end{document}</tex-math><mml:math id="M296"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq134.gif"/></alternatives></inline-formula>.</p>
          <p>For a tree decomposition <inline-formula id="IEq135"><alternatives><tex-math id="M297">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M298"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq135.gif"/></alternatives></inline-formula>, <inline-formula id="IEq136"><alternatives><tex-math id="M299">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T=(V,E)$$\end{document}</tex-math><mml:math id="M300"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq136.gif"/></alternatives></inline-formula>, consider two nodes <inline-formula id="IEq137"><alternatives><tex-math id="M301">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u,v\in V$$\end{document}</tex-math><mml:math id="M302"><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq137.gif"/></alternatives></inline-formula>, where <italic>v</italic> is the parent of <italic>u</italic>. Generally, we assume the tree edges to be oriented toward the root, such that <inline-formula id="IEq138"><alternatives><tex-math id="M303">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v \in E$$\end{document}</tex-math><mml:math id="M304"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq138.gif"/></alternatives></inline-formula>. We define two sets:<list list-type="bullet"><list-item><p id="Par73"><inline-formula id="IEq139"><alternatives><tex-math id="M305">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u):=\chi (u)\cap \chi (v)$$\end{document}</tex-math><mml:math id="M306"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∩</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq139.gif"/></alternatives></inline-formula> the <bold>separator set</bold> of shared variables between <italic>u</italic> and its parent; this set describes the variables whose values are passed between parent and child in a tree traversal;</p></list-item><list-item><p id="Par74"><inline-formula id="IEq140"><alternatives><tex-math id="M307">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u):=\chi (u){\setminus } {\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M308"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq140.gif"/></alternatives></inline-formula> the <bold>difference set</bold> between the child and its parent. These are the ‘introduced’ variables by the child; they will be assigned at a child in the top-down traversal of the traceback.</p></list-item></list>To simplify the traceback step, we require tree decompositions to have empty root and difference sets of size 1 (i.e. <inline-formula id="IEq141"><alternatives><tex-math id="M309">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\text {diff}}(u)| = 1$$\end{document}</tex-math><mml:math id="M310"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq141.gif"/></alternatives></inline-formula> for every child node <inline-formula id="IEq142"><alternatives><tex-math id="M311">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M312"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq142.gif"/></alternatives></inline-formula>); we call this property <bold>gentle</bold>. Gentle tree decompositions have exactly one edge per variable. Note that any tree decomposition (as defined above) can be efficiently turned into a gentle decomposition of the same width by inserting additional bags wherever the difference set is too large and contracting edges where no variables are introduced.<fig id="Fig2"><label>Fig. 2</label><caption><p>Dependency graph and tree decompositions of the running example (feature network <inline-formula id="IEq143"><alternatives><tex-math id="M313">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M314"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq143.gif"/></alternatives></inline-formula>). <bold>A</bold> The dependency graph contains one (binary) edge per dependency due to a constraint <inline-formula id="IEq144"><alternatives><tex-math id="M315">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}\in \mathcal {C} _{\text {col}}$$\end{document}</tex-math><mml:math id="M316"><mml:mrow><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq144.gif"/></alternatives></inline-formula>. The dependency hyperedges due to the three network functions <inline-formula id="IEq145"><alternatives><tex-math id="M317">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}\in F_{\text {card}}$$\end{document}</tex-math><mml:math id="M318"><mml:mrow><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq145.gif"/></alternatives></inline-formula> are colored. <bold>B</bold> Two possible tree decompositions of this dependency graph (and therefore <inline-formula id="IEq146"><alternatives><tex-math id="M319">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M320"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq146.gif"/></alternatives></inline-formula>). The difference set is underlined in each bag. Solving of the network could be based on either one, but with different run time, which is dominated by the largest bag (bold). Due to their largest bags of size 5 and 6, the two tree decompositions have respective <italic>width</italic> 4 and 5. The bags handling the 4-ary functions are highlighted, where colors correspond to the hyperedges of A. <bold>C</bold> Tree decomposition of the network without 4-ary functions <inline-formula id="IEq147"><alternatives><tex-math id="M321">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}$$\end{document}</tex-math><mml:math id="M322"><mml:mtext mathvariant="sans-serif">Card</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq147.gif"/></alternatives></inline-formula>. The functions don’t allow any tree decomposition with width 3; thus they make the problem more complex</p></caption><graphic xlink:href="13015_2024_258_Fig2_HTML" id="MO7"/></fig></p>
        </sec>
        <sec id="FPar16">
          <title>Definition 8</title>
          <p id="Par75">(Cluster Tree) A <bold>cluster tree</bold>
<inline-formula id="IEq148"><alternatives><tex-math id="M323">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T, \chi , \phi )$$\end{document}</tex-math><mml:math id="M324"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq148.gif"/></alternatives></inline-formula>
<bold>of an</bold> FN <inline-formula id="IEq149"><alternatives><tex-math id="M325">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M326"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq149.gif"/></alternatives></inline-formula> is a tree decomposition <inline-formula id="IEq150"><alternatives><tex-math id="M327">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T=(V,E),\chi )$$\end{document}</tex-math><mml:math id="M328"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq150.gif"/></alternatives></inline-formula> of <inline-formula id="IEq151"><alternatives><tex-math id="M329">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M330"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq151.gif"/></alternatives></inline-formula> together with an annotation <inline-formula id="IEq152"><alternatives><tex-math id="M331">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi : V\rightarrow 2^\mathcal {C} \cup 2^\mathcal {F}$$\end{document}</tex-math><mml:math id="M332"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">C</mml:mi></mml:msup><mml:mo>∪</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">F</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq152.gif"/></alternatives></inline-formula>; it associates every <inline-formula id="IEq153"><alternatives><tex-math id="M333">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f\in \bigcup \mathcal {F}$$\end{document}</tex-math><mml:math id="M334"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mo>⋃</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq153.gif"/></alternatives></inline-formula> and <inline-formula id="IEq154"><alternatives><tex-math id="M335">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M336"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq154.gif"/></alternatives></inline-formula> to exactly one node <inline-formula id="IEq155"><alternatives><tex-math id="M337">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\in V$$\end{document}</tex-math><mml:math id="M338"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq155.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq156"><alternatives><tex-math id="M339">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f) \text { and } {\text {vars}}(C)\subseteq \chi (u)$$\end{document}</tex-math><mml:math id="M340"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>and vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⊆</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq156.gif"/></alternatives></inline-formula>.</p>
          <p>We use notations <inline-formula id="IEq157"><alternatives><tex-math id="M341">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \phi (u)$$\end{document}</tex-math><mml:math id="M342"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq157.gif"/></alternatives></inline-formula> and <inline-formula id="IEq158"><alternatives><tex-math id="M343">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f\in \phi (u)$$\end{document}</tex-math><mml:math id="M344"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq158.gif"/></alternatives></inline-formula> to refer to the constraints and network functions assigned to node <italic>u</italic> of the cluster tree, respectively. Given a cluster tree, we write <inline-formula id="IEq159"><alternatives><tex-math id="M345">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _f$$\end{document}</tex-math><mml:math id="M346"><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq159.gif"/></alternatives></inline-formula> to refer to the weight <inline-formula id="IEq160"><alternatives><tex-math id="M347">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _F$$\end{document}</tex-math><mml:math id="M348"><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq160.gif"/></alternatives></inline-formula> of the feature <inline-formula id="IEq161"><alternatives><tex-math id="M349">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M350"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq161.gif"/></alternatives></inline-formula> that contains <italic>f</italic>.</p>
          <p>In addition to the general cluster tree definition, we assume that constraints and functions are assigned to the lowest possible bag (corresponding to the smallest possible subtree).</p>
        </sec>
      </sec>
      <sec id="Sec9">
        <title>Evaluation following the cluster tree</title>
        <p id="Par78">For efficiency, Infrared evaluates constraints and network functions as soon as sufficient partial information is available (in contrast to a <italic>generate-and-evaluate</italic> strategy, which would enumerate assignments and evaluate only total assignments).</p>
        <p id="Par79">Recall the notion of <italic>partial assignments</italic> from Definition <xref ref-type="sec" rid="FPar5">2</xref>. The evaluation of a constraint (resp. network function) w.r.t. the partial assignment <inline-formula id="IEq162"><alternatives><tex-math id="M351">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bar{x}}$$\end{document}</tex-math><mml:math id="M352"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq162.gif"/></alternatives></inline-formula> is denoted <inline-formula id="IEq163"><alternatives><tex-math id="M353">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C(\bar{x})$$\end{document}</tex-math><mml:math id="M354"><mml:mrow><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq163.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq164"><alternatives><tex-math id="M355">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(\bar{x})$$\end{document}</tex-math><mml:math id="M356"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq164.gif"/></alternatives></inline-formula>); it is defined if the assignment assigns all variables of the dependency <inline-formula id="IEq165"><alternatives><tex-math id="M357">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)$$\end{document}</tex-math><mml:math id="M358"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq165.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq166"><alternatives><tex-math id="M359">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f)$$\end{document}</tex-math><mml:math id="M360"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq166.gif"/></alternatives></inline-formula>). Moreover, the union of partial assignments is well-defined if their variable sets are disjoint; this allows for the composition of larger partial assignments from smaller ones.</p>
        <sec id="FPar17">
          <title>Example 7</title>
          <p id="Par80">(Partial assignments) Consider the bag <inline-formula id="IEq167"><alternatives><tex-math id="M361">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{X_2,X_5,X_6,X_7,X_8\}$$\end{document}</tex-math><mml:math id="M362"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq167.gif"/></alternatives></inline-formula> of Fig. <xref rid="Fig2" ref-type="fig">2</xref>B (root of first tree) from the running graph-coloring example with cardinality network functions <inline-formula id="IEq168"><alternatives><tex-math id="M363">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}$$\end{document}</tex-math><mml:math id="M364"><mml:mtext mathvariant="sans-serif">Card</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq168.gif"/></alternatives></inline-formula>. The set <inline-formula id="IEq169"><alternatives><tex-math id="M365">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}_{\text {col}}=\{X_2\mapsto 2, X_5\mapsto 4, X_6\mapsto 2, X_7\mapsto 1, X_8\mapsto 3\}$$\end{document}</tex-math><mml:math id="M366"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq169.gif"/></alternatives></inline-formula> is a partial assignment of the bag’s variables; it lets us evaluate <inline-formula id="IEq170"><alternatives><tex-math id="M367">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}_{[2,5,7,8]}$$\end{document}</tex-math><mml:math id="M368"><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq170.gif"/></alternatives></inline-formula>, <inline-formula id="IEq171"><alternatives><tex-math id="M369">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}_{[2,5,7,8]}(\bar{x}_{\text {col}})=4$$\end{document}</tex-math><mml:math id="M370"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq171.gif"/></alternatives></inline-formula>, since the bag contains the dependency variables of this function. Consider another partial assignment <inline-formula id="IEq172"><alternatives><tex-math id="M371">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}=\{X_2\mapsto 2, X_5\mapsto 4, X_6\mapsto 3, X_7\mapsto 1, X_8\mapsto 3\}$$\end{document}</tex-math><mml:math id="M372"><mml:mrow><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq172.gif"/></alternatives></inline-formula>; <inline-formula id="IEq173"><alternatives><tex-math id="M373">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}$$\end{document}</tex-math><mml:math id="M374"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq173.gif"/></alternatives></inline-formula> is not valid because <inline-formula id="IEq174"><alternatives><tex-math id="M375">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}_{[6,8]}$$\end{document}</tex-math><mml:math id="M376"><mml:msub><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq174.gif"/></alternatives></inline-formula> evaluates to False w.r.t. <inline-formula id="IEq175"><alternatives><tex-math id="M377">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}$$\end{document}</tex-math><mml:math id="M378"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq175.gif"/></alternatives></inline-formula>.</p>
          <p>Given a cluster tree <inline-formula id="IEq176"><alternatives><tex-math id="M379">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi ,\phi )$$\end{document}</tex-math><mml:math id="M380"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq176.gif"/></alternatives></inline-formula> and a node <italic>u</italic> with parent <italic>v</italic>, the forward optimization algorithm successively computes optimal evaluations for subtrees <inline-formula id="IEq177"><alternatives><tex-math id="M381">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_{u}$$\end{document}</tex-math><mml:math id="M382"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq177.gif"/></alternatives></inline-formula> below nodes <italic>u</italic> (constituting subproblems of Problem <xref ref-type="sec" rid="FPar12">1</xref>).</p>
          <p>The <bold>optimal evaluation of subtree</bold>
<inline-formula id="IEq178"><alternatives><tex-math id="M383">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_{u}$$\end{document}</tex-math><mml:math id="M384"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq178.gif"/></alternatives></inline-formula> is<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M385">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \max _{\begin{array}{c} \bar{x}\in \mathcal {A} _{\chi (T_{u})}\\ \bar{x} \text { is valid} \end{array}} \sum _{f\in \phi (T_{u})}\alpha _ff(\bar{x}) \end{aligned}$$\end{document}</tex-math><mml:math id="M386" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq179"><alternatives><tex-math id="M387">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi (T_{u}):= \bigcup _{c\in T_{u}}\chi (c)$$\end{document}</tex-math><mml:math id="M388"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq179.gif"/></alternatives></inline-formula> and <inline-formula id="IEq180"><alternatives><tex-math id="M389">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi (T_{u}):= \bigcup _{c\in T_{u}}\phi (c)$$\end{document}</tex-math><mml:math id="M390"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq180.gif"/></alternatives></inline-formula>.</p>
          <p>To obtain total subtree evaluations, the algorithm computes and stores <italic>conditional</italic> optimal subtree evaluations, which depend on the partial assignment to <inline-formula id="IEq181"><alternatives><tex-math id="M391">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M392"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq181.gif"/></alternatives></inline-formula>. Thus, they allow decoupling the subtree from the remaining tree.</p>
          <p>For a node <italic>u</italic>, these conditional evaluations are computed for all such valid partial assignments, such that they specify network functions <inline-formula id="IEq182"><alternatives><tex-math id="M393">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u \rightarrow v}$$\end{document}</tex-math><mml:math id="M394"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq182.gif"/></alternatives></inline-formula>. We call them <bold>messages</bold> since they are used to pass information from child <italic>u</italic> to parent <italic>v</italic>.</p>
          <p>Additionally, define <inline-formula id="IEq183"><alternatives><tex-math id="M395">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(T_{u}):=\chi (T_{u}){\setminus }{\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M396"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq183.gif"/></alternatives></inline-formula> as the set of <bold>variables introduced by</bold>
<inline-formula id="IEq184"><alternatives><tex-math id="M397">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_u$$\end{document}</tex-math><mml:math id="M398"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq184.gif"/></alternatives></inline-formula>.</p>
        </sec>
        <sec id="FPar18">
          <title>Definition 9</title>
          <p id="Par86">(Conditional optimal subtree evaluation) Let <inline-formula id="IEq185"><alternatives><tex-math id="M399">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M400"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq185.gif"/></alternatives></inline-formula> be a node in the cluster tree <inline-formula id="IEq186"><alternatives><tex-math id="M401">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi ,\phi )$$\end{document}</tex-math><mml:math id="M402"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq186.gif"/></alternatives></inline-formula>; denote its parent by <italic>v</italic>. The <bold>conditional optimal subtree evaluation</bold> at <italic>u</italic> under condition <inline-formula id="IEq187"><alternatives><tex-math id="M403">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M404"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq187.gif"/></alternatives></inline-formula> is<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M405">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \max _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(T_{u})}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}} \sum _{f\in \phi (T_{u})}\alpha _ff(\bar{x}\cup \bar{x}') \end{aligned}$$\end{document}</tex-math><mml:math id="M406" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>Since the root of <italic>T</italic> is empty, conditional optimal subtree evaluations allow us to directly infer the total evaluation at the root. For every child <italic>u</italic> of the root, <inline-formula id="IEq188"><alternatives><tex-math id="M407">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M408"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq188.gif"/></alternatives></inline-formula> is empty; moreover, the children of the root do not have any variables in common (due to the definition of tree decomposition). Consequently, we obtain the total evaluation by summing the <inline-formula id="IEq189"><alternatives><tex-math id="M409">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M410"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq189.gif"/></alternatives></inline-formula>-ary messages sent to the root from its children<disp-formula id="Equ20"><alternatives><tex-math id="M411">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E_{\max } = \sum _{\text {child } u \text { of root}} m_{u\rightarrow \text { root}}(\varnothing ). \end{aligned}$$\end{document}</tex-math><mml:math id="M412" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mo movablelimits="true">max</mml:mo></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtext>child</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>of root</mml:mtext></mml:mrow></mml:munder><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>root</mml:mtext></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>∅</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ20.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>See Fig. <xref rid="Fig3" ref-type="fig">3</xref> for an illustration of the bottom-up computation and the subsequent top-down traceback. Following Proposition <xref ref-type="sec" rid="FPar19">1</xref> each bag <inline-formula id="IEq190"><alternatives><tex-math id="M413">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M414"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq190.gif"/></alternatives></inline-formula> can be processed together with the messages sent to it from its children; thus, we can understand the full computation as bottom-up message passing (Algorithm 1). The notion of message passing stems from more general formulations of CTE on unrooted cluster trees [<xref ref-type="bibr" rid="CR30">30</xref>]. The algorithm is correct due to the following proposition (shown in Additional file 1).</p>
        </sec>
        <sec id="FPar19">
          <title>Proposition 1</title>
          <p id="Par89">Let <inline-formula id="IEq191"><alternatives><tex-math id="M415">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M416"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq191.gif"/></alternatives></inline-formula> be a cluster tree edge and <inline-formula id="IEq192"><alternatives><tex-math id="M417">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M418"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq192.gif"/></alternatives></inline-formula> be a partial assignment of <inline-formula id="IEq193"><alternatives><tex-math id="M419">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M420"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq193.gif"/></alternatives></inline-formula>. The conditional optimal subtree evaluations <inline-formula id="IEq194"><alternatives><tex-math id="M421">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}(\bar{x})$$\end{document}</tex-math><mml:math id="M422"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq194.gif"/></alternatives></inline-formula> (Eq. <xref rid="Equ3" ref-type="disp-formula">3</xref>) can be recursively computed as<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M423">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\!\!\max _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(u)}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}}\! \left[ \!\begin{array}{l} \sum _{f\in \phi (u)} \alpha _ff(\bar{x}\cup \bar{x}') \\ + \sum _{c\text { child of }u} m_{c\rightarrow u}(\bar{x}\cup \bar{x}') \end{array}\!\right] . \end{aligned}$$\end{document}</tex-math><mml:math id="M424" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mfenced close="]" open="["><mml:mspace width="-0.166667em"/><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>+</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>child of</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mspace width="-0.166667em"/></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
          <p><italic>Algorithms for partition functions and sampling</italic> As argued, the computation of partition functions (Problem <xref ref-type="sec" rid="FPar13">2</xref>) follows the same algorithmic structure, changing the algebra in Algorithm 1 from <inline-formula id="IEq195"><alternatives><tex-math id="M425">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\max , +, {\text {\textsf{Id}}})$$\end{document}</tex-math><mml:math id="M426"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">max</mml:mo><mml:mo>,</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq195.gif"/></alternatives></inline-formula> to <inline-formula id="IEq196"><alternatives><tex-math id="M427">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M428"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq196.gif"/></alternatives></inline-formula> and setting the initial value of <inline-formula id="IEq197"><alternatives><tex-math id="M429">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M430"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq197.gif"/></alternatives></inline-formula> to <inline-formula id="IEq198"><alternatives><tex-math id="M431">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M432"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq198.gif"/></alternatives></inline-formula>. Consequently, the partition function <inline-formula id="IEq199"><alternatives><tex-math id="M433">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Z_{\mathcal {N},\alpha }$$\end{document}</tex-math><mml:math id="M434"><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq199.gif"/></alternatives></inline-formula> is obtained by multiplying all <inline-formula id="IEq200"><alternatives><tex-math id="M435">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M436"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq200.gif"/></alternatives></inline-formula>-ary messages sent to the root.</p>
          <p>Analogous to partial optimal evaluations, the modified Algorithm 1 with <inline-formula id="IEq201"><alternatives><tex-math id="M437">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M438"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq201.gif"/></alternatives></inline-formula>-algebra computes partial partition functions.</p>
        </sec>
        <sec id="FPar20">
          <title>Definition 10</title>
          <p id="Par92">(Conditional subtree partition functions) Let <italic>u</italic> be a node in a cluster tree <inline-formula id="IEq202"><alternatives><tex-math id="M439">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\xi ,\phi )$$\end{document}</tex-math><mml:math id="M440"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>ξ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq202.gif"/></alternatives></inline-formula>, where <italic>v</italic> is its parent. The <bold>conditional partition function</bold> at <italic>u</italic> under condition <inline-formula id="IEq203"><alternatives><tex-math id="M441">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M442"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq203.gif"/></alternatives></inline-formula> is<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M443">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\!\sum _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(T_{u})}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}} \prod _{f\in \phi (T_{u})}\!\exp (\alpha _f f(\bar{x}\cup \bar{x}')) \end{aligned}$$\end{document}</tex-math><mml:math id="M444" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>for all <inline-formula id="IEq204"><alternatives><tex-math id="M445">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}.$$\end{document}</tex-math><mml:math id="M446"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq204.gif"/></alternatives></inline-formula></p>
          <p>Partition functions are computed by a recursive algorithm analogous to <xref rid="Sec10" ref-type="sec">1</xref>; its correctness is stated in analogy to Proposition <xref ref-type="sec" rid="FPar19">1</xref> (shown in Additional file 1).</p>
        </sec>
        <sec id="FPar21">
          <title>Proposition 2</title>
          <p id="Par94">Let <inline-formula id="IEq205"><alternatives><tex-math id="M447">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M448"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq205.gif"/></alternatives></inline-formula> be a cluster tree edge and <inline-formula id="IEq206"><alternatives><tex-math id="M449">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M450"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq206.gif"/></alternatives></inline-formula> be a partial assignment of <inline-formula id="IEq207"><alternatives><tex-math id="M451">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M452"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq207.gif"/></alternatives></inline-formula>. The conditional subtree partition functions (Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>) can be recursively computed as<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M453">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\sum _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(u)}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}}\! \left[ \!\begin{array}{l} \prod _{f\in \phi (u)} \exp (\alpha _ff(\bar{x}\cup \bar{x}')) \\ \times \prod _{c\text { child of }u} m_{c\rightarrow u}(\bar{x}\cup \bar{x}') \end{array}\!\right] \end{aligned}$$\end{document}</tex-math><mml:math id="M454" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mfenced close="]" open="["><mml:mspace width="-0.166667em"/><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>×</mml:mo><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>child of</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mspace width="-0.166667em"/></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>with <inline-formula id="IEq208"><alternatives><tex-math id="M455">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _f$$\end{document}</tex-math><mml:math id="M456"><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq208.gif"/></alternatives></inline-formula> as in Prop. <xref ref-type="sec" rid="FPar19">1</xref>.</p>
          <p>
            <fig id="Fig3">
              <label>Fig. 3</label>
              <caption>
                <p>Illustration of the forward optimal evaluation and traceback algorithms (by the running example of graph coloring; Fig. <xref rid="Fig1" ref-type="fig">1</xref>). We elaborate steps of the computation guided by the gentle tree decomposition corresponding to Fig. <xref rid="Fig2" ref-type="fig">2</xref>B (top). The indices of variables in the difference set are underlined. On the left, we sketch the computation of the messages <inline-formula id="IEq209"><alternatives><tex-math id="M457">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{w\rightarrow u}$$\end{document}</tex-math><mml:math id="M458"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq209.gif"/></alternatives></inline-formula> and <inline-formula id="IEq210"><alternatives><tex-math id="M459">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M460"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq210.gif"/></alternatives></inline-formula>: For every assignment of the separator set, the algorithm maximizes over assignments of the difference variable (it dismisses invalid assignments); in the computation of <inline-formula id="IEq211"><alternatives><tex-math id="M461">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M462"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq211.gif"/></alternatives></inline-formula>, it used the already computed message <inline-formula id="IEq212"><alternatives><tex-math id="M463">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{w\rightarrow u}$$\end{document}</tex-math><mml:math id="M464"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq212.gif"/></alternatives></inline-formula>. On the right, we show the corresponding computations to assign values to the <italic>underlined</italic> variables during traceback: given an optimal assignment to the variables in <italic>v</italic>, we first infer that <inline-formula id="IEq213"><alternatives><tex-math id="M465">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_5=2$$\end{document}</tex-math><mml:math id="M466"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq213.gif"/></alternatives></inline-formula> is an optimal continuation, and finally <inline-formula id="IEq214"><alternatives><tex-math id="M467">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_3=2$$\end{document}</tex-math><mml:math id="M468"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq214.gif"/></alternatives></inline-formula></p>
              </caption>
              <graphic xlink:href="13015_2024_258_Fig3_HTML" id="MO8"/>
            </fig>
          </p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Traceback</title>
      <p id="Par96">Once all messages of partial optimal score are computed by Algorithm 1, the optimal assignment is obtained by a traceback traversing the cluster tree top-down in preorder (Algorithm <xref rid="Sec10" ref-type="sec">2</xref>). At each edge <inline-formula id="IEq215"><alternatives><tex-math id="M469">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M470"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq215.gif"/></alternatives></inline-formula>, an optimal assignment of the variables in the parent <italic>v</italic> is known. Infrared then determines the optimal assignment to the difference variables (in the singleton set <inline-formula id="IEq216"><alternatives><tex-math id="M471">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M472"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq216.gif"/></alternatives></inline-formula>) such that the evaluation of bag <italic>u</italic> equals the message sent to the parent bag <inline-formula id="IEq217"><alternatives><tex-math id="M473">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v$$\end{document}</tex-math><mml:math id="M474"><mml:mi>v</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq217.gif"/></alternatives></inline-formula>. Let <inline-formula id="IEq218"><alternatives><tex-math id="M475">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x$$\end{document}</tex-math><mml:math id="M476"><mml:mi>x</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq218.gif"/></alternatives></inline-formula> be the partial optimal assignment determined thus far in the algorithm (assigning the variables of <italic>v</italic>); the algorithm searches through <inline-formula id="IEq219"><alternatives><tex-math id="M477">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {diff}}(u)}$$\end{document}</tex-math><mml:math id="M478"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq219.gif"/></alternatives></inline-formula> and selects one assignment <inline-formula id="IEq220"><alternatives><tex-math id="M479">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}$$\end{document}</tex-math><mml:math id="M480"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq220.gif"/></alternatives></inline-formula> that yields the optimal message. This choice is optimal, such that the algorithm can continue its top-down traversal after updating <italic>x</italic> by <inline-formula id="IEq221"><alternatives><tex-math id="M481">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\cup \bar{x}$$\end{document}</tex-math><mml:math id="M482"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∪</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq221.gif"/></alternatives></inline-formula>.</p>
      <p id="Par97">For sampling, Infrared performs a stochastic traceback (Algorithm 3), requiring the messages from the computation of the partition function. Whereas the general structure resembles that of optimal traceback, at each edge <inline-formula id="IEq222"><alternatives><tex-math id="M483">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M484"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq222.gif"/></alternatives></inline-formula> the algorithm randomly chooses a tracking value <inline-formula id="IEq223"><alternatives><tex-math id="M485">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M486"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq223.gif"/></alternatives></inline-formula> uniformly from the range <inline-formula id="IEq224"><alternatives><tex-math id="M487">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M488"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq224.gif"/></alternatives></inline-formula> and <inline-formula id="IEq225"><alternatives><tex-math id="M489">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M490"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq225.gif"/></alternatives></inline-formula>. While iterating through the possible assignments for <inline-formula id="IEq226"><alternatives><tex-math id="M491">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M492"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq226.gif"/></alternatives></inline-formula>, <inline-formula id="IEq227"><alternatives><tex-math id="M493">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M494"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq227.gif"/></alternatives></inline-formula> is gradually decreased with partial Boltzmann factors. The value of the difference variable is selected once <inline-formula id="IEq228"><alternatives><tex-math id="M495">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M496"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq228.gif"/></alternatives></inline-formula> becomes negative. This selects the value following the desired Boltzmann distribution. We show the following correctness claim in Additional file 1.</p>
      <sec id="FPar22">
        <title>Proposition 3</title>
        <p id="Par98">Algorithm 3 solves Problem <xref ref-type="sec" rid="FPar13">2</xref> by sampling assignments from the Boltzmann distribution of Eq. (<xref rid="Equ1" ref-type="disp-formula">1</xref>).</p>
        <p>
          <fig position="anchor" id="Figf">
            <label>Algorithm 1</label>
            <caption>
              <p>Optimal evaluation</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figf_HTML" id="MO9"/>
          </fig>
        </p>
        <p>
          <fig position="anchor" id="Figg">
            <label>Algorithm 2</label>
            <caption>
              <p>Optimal traceback</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figg_HTML" id="MO10"/>
          </fig>
        </p>
        <p>
          <fig position="anchor" id="Figh">
            <label>Algorithm 3</label>
            <caption>
              <p>Stochastic traceback: sampling</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figh_HTML" id="MO11"/>
          </fig>
        </p>
      </sec>
    </sec>
    <sec id="Sec11">
      <title>Computational complexity</title>
      <p id="Par102">Note that while computational complexities can be interpreted as corollaries from CTE [<xref ref-type="bibr" rid="CR12">12</xref>], we rephrase the arguments adapted to our concrete algorithms.</p>
      <p id="Par103">For a feature network <inline-formula id="IEq229"><alternatives><tex-math id="M497">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M498"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq229.gif"/></alternatives></inline-formula>, we state complexities in terms of additional parameters: the <bold>largest domain size</bold>
<inline-formula id="IEq230"><alternatives><tex-math id="M499">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d:=\max _{D\in \mathcal {D}}|D|$$\end{document}</tex-math><mml:math id="M500"><mml:mrow><mml:mi>d</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">D</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq230.gif"/></alternatives></inline-formula>, the <bold>number of variables</bold>
<inline-formula id="IEq231"><alternatives><tex-math id="M501">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {n}:=|\mathcal {X} |$$\end{document}</tex-math><mml:math id="M502"><mml:mrow><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq231.gif"/></alternatives></inline-formula>, and the total <bold>number of constraints and network functions</bold>
<inline-formula id="IEq232"><alternatives><tex-math id="M503">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {m}:=|\mathcal {C} |+\sum _{F\in \mathcal {F}}|F|$$\end{document}</tex-math><mml:math id="M504"><mml:mrow><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq232.gif"/></alternatives></inline-formula>. Let <inline-formula id="IEq233"><alternatives><tex-math id="M505">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M506"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq233.gif"/></alternatives></inline-formula> denote the <bold>treewidth</bold> of dependency graph <inline-formula id="IEq234"><alternatives><tex-math id="M507">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M508"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq234.gif"/></alternatives></inline-formula>. Furthermore, we assume that single constraints and network functions are evaluated in constant time. We will see later from the applications in Sections “Applications to concrete bionformatics problems” and “Model extensions and advanced topics” the assumption holds in practice.</p>
      <sec id="FPar23">
        <title>Proposition 4</title>
        <p id="Par104">Algorithm 1 takes <inline-formula id="IEq235"><alternatives><tex-math id="M509">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d ^{w +1} \cdot (\mathfrak {m} + \mathfrak {n}) \right)$$\end{document}</tex-math><mml:math id="M510"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq235.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq236"><alternatives><tex-math id="M511">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d ^w \cdot \mathfrak {n} \right)$$\end{document}</tex-math><mml:math id="M512"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq236.gif"/></alternatives></inline-formula> space.</p>
      </sec>
      <sec id="FPar24">
        <title>Proof</title>
        <p id="Par105">Algorithm 1 computes one message <inline-formula id="IEq237"><alternatives><tex-math id="M513">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M514"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq237.gif"/></alternatives></inline-formula> for each edge <inline-formula id="IEq238"><alternatives><tex-math id="M515">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M516"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq238.gif"/></alternatives></inline-formula> of the tree decomposition of <inline-formula id="IEq239"><alternatives><tex-math id="M517">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M518"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq239.gif"/></alternatives></inline-formula>. In every child bag <italic>u</italic>, the algorithm computes message values for each assignment of the variables in <inline-formula id="IEq240"><alternatives><tex-math id="M519">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M520"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq240.gif"/></alternatives></inline-formula>, for each value optimizing over assignments of <inline-formula id="IEq241"><alternatives><tex-math id="M521">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M522"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq241.gif"/></alternatives></inline-formula>. In every iteration, it evaluates the constraints and functions in <inline-formula id="IEq242"><alternatives><tex-math id="M523">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi (u)$$\end{document}</tex-math><mml:math id="M524"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq242.gif"/></alternatives></inline-formula>, as well as the messages from the children.</p>
        <p id="Par106">We thus bound the computation by<disp-formula id="Equ21"><alternatives><tex-math id="M525">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v}\ \prod _{x_i\in {\text {sep}}(u)}\!|\mathcal {D} _{i}|\,\cdot \!\prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i|\,\cdot (|\phi (u)|+n_u), \end{aligned}$$\end{document}</tex-math><mml:math id="M526" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ21.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq243"><alternatives><tex-math id="M527">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M528"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq243.gif"/></alternatives></inline-formula> counts the children of u. Since <inline-formula id="IEq244"><alternatives><tex-math id="M529">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M530"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq244.gif"/></alternatives></inline-formula> and <inline-formula id="IEq245"><alternatives><tex-math id="M531">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M532"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq245.gif"/></alternatives></inline-formula> are disjoint and contain exactly the variables of in the bag <italic>u</italic>, there are at most <inline-formula id="IEq246"><alternatives><tex-math id="M533">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d^{w +1}$$\end{document}</tex-math><mml:math id="M534"><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq246.gif"/></alternatives></inline-formula> iterations per bag. We relax the bound to<disp-formula id="Equ22"><alternatives><tex-math id="M535">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;d ^{w +1}\cdot \sum _{u\rightarrow v} (|\phi (u)|+n_u) \end{aligned}$$\end{document}</tex-math><mml:math id="M536" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ22.gif" position="anchor"/></alternatives></disp-formula>Every constraint and function is evaluated in the iterations of exactly one bag <italic>u</italic>; thus, we can amortize the contributions due to <inline-formula id="IEq247"><alternatives><tex-math id="M537">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sum _{u\rightarrow v} |\phi (u)| = \mathfrak {m}$$\end{document}</tex-math><mml:math id="M538"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq247.gif"/></alternatives></inline-formula>. Moreover, every message from a child is accessed (in constant time) in the iterations of exactly one bag; we can thus amortize due to <inline-formula id="IEq248"><alternatives><tex-math id="M539">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sum _{u\rightarrow v} n_u = |X|$$\end{document}</tex-math><mml:math id="M540"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq248.gif"/></alternatives></inline-formula>. This lets us simplify the last bound further to derive the claim on the time complexity.</p>
        <p id="Par107">Concerning space, the algorithm stores a message at each edge of the tree decomposition. Per edge <inline-formula id="IEq249"><alternatives><tex-math id="M541">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M542"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq249.gif"/></alternatives></inline-formula>, this takes space <inline-formula id="IEq250"><alternatives><tex-math id="M543">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^{{\text {sep}}(u)})$$\end{document}</tex-math><mml:math id="M544"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq250.gif"/></alternatives></inline-formula>. This bounds the space by <inline-formula id="IEq251"><alternatives><tex-math id="M545">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^s \cdot |E|)$$\end{document}</tex-math><mml:math id="M546"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mi>s</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq251.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq252"><alternatives><tex-math id="M547">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s=\max _u {\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M548"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mi>u</mml:mi></mml:msub><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq252.gif"/></alternatives></inline-formula>. For gentle tree decompositions, <inline-formula id="IEq253"><alternatives><tex-math id="M549">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|E|=|X|$$\end{document}</tex-math><mml:math id="M550"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq253.gif"/></alternatives></inline-formula> and <inline-formula id="IEq254"><alternatives><tex-math id="M551">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s\le w$$\end{document}</tex-math><mml:math id="M552"><mml:mrow><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq254.gif"/></alternatives></inline-formula>, showing the claim. <inline-formula id="IEq255"><alternatives><tex-math id="M553">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><mml:math id="M554"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq255.gif"/></alternatives></inline-formula></p>
      </sec>
      <sec id="FPar25">
        <title>Proposition 5</title>
        <p id="Par108">Algo. <xref rid="Sec10" ref-type="sec">2</xref> runs in <inline-formula id="IEq256"><alternatives><tex-math id="M555">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d \cdot (\mathfrak {m} + \mathfrak {n}) \right)$$\end{document}</tex-math><mml:math id="M556"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:mi>d</mml:mi><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq256.gif"/></alternatives></inline-formula> time.</p>
      </sec>
      <sec id="FPar26">
        <title>Proof</title>
        <p id="Par109">For each edge <inline-formula id="IEq257"><alternatives><tex-math id="M557">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M558"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq257.gif"/></alternatives></inline-formula> of the tree decomposition of <inline-formula id="IEq258"><alternatives><tex-math id="M559">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M560"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq258.gif"/></alternatives></inline-formula>, the task is to determine the best assignment for variables in <inline-formula id="IEq259"><alternatives><tex-math id="M561">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M562"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq259.gif"/></alternatives></inline-formula>, given that variables in <inline-formula id="IEq260"><alternatives><tex-math id="M563">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M564"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq260.gif"/></alternatives></inline-formula> are already assigned (as guaranteed by the iteration in preorder). Deciding if an assignment is valid requires computing constraints, while scoring them requires computing network functions (each in constant time due to our assumption).</p>
        <p id="Par110">It is also required to sum up <inline-formula id="IEq261"><alternatives><tex-math id="M565">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M566"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq261.gif"/></alternatives></inline-formula> messages <inline-formula id="IEq262"><alternatives><tex-math id="M567">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{c\rightarrow u}$$\end{document}</tex-math><mml:math id="M568"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq262.gif"/></alternatives></inline-formula> for <italic>c</italic> children of <italic>u</italic>, where <inline-formula id="IEq263"><alternatives><tex-math id="M569">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M570"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq263.gif"/></alternatives></inline-formula> denotes the number of children. Given that <inline-formula id="IEq264"><alternatives><tex-math id="M571">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\text {diff}}(u)|=1$$\end{document}</tex-math><mml:math id="M572"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq264.gif"/></alternatives></inline-formula> in a gentle tree decomposition, we obtain as an upper bound of time complexity in Algorithm <xref rid="Sec10" ref-type="sec">2</xref>:<disp-formula id="Equ23"><alternatives><tex-math id="M573">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v} \ \prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i| \,\cdot (|\phi (u)|+n_u) \\&amp;\le d \sum _{u\rightarrow v} (|\phi (u)| + n_u) \le d (\mathfrak {m} +\mathfrak {n}). \end{aligned}$$\end{document}</tex-math><mml:math id="M574" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:mi>d</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>d</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ23.gif" position="anchor"/></alternatives></disp-formula><inline-formula id="IEq265"><alternatives><tex-math id="M575">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><mml:math id="M576"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq265.gif"/></alternatives></inline-formula></p>
        <p>Note that the complexity results for optimization and optimal traceback directly apply to partition function computation and stochastic traceback, which evaluate exactly the same numbers of constraints, functions and messages.</p>
      </sec>
    </sec>
    <sec id="Sec12">
      <title>Complexity analysis for nonuniform domain sizes</title>
      <p id="Par112">For nonuniform domain sizes, the previous analysis can strongly overestimate the complexity (assuming the worst-case maximum domain size <italic>d</italic> for all variables). In several of our application examples, we can tighten the analysis considering that <inline-formula id="IEq266"><alternatives><tex-math id="M577">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}$$\end{document}</tex-math><mml:math id="M578"><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq266.gif"/></alternatives></inline-formula> is composed of two (analogously extensible to several) ‘series’ of variables in the way<disp-formula id="Equ24"><alternatives><tex-math id="M579">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {X}=\{X_1,\dots ,X_{n_X},Y_1,\dots ,Y_{n_Y}\}\end{aligned}$$\end{document}</tex-math><mml:math id="M580" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ24.gif" position="anchor"/></alternatives></disp-formula>with respective maximum domain sizes <inline-formula id="IEq267"><alternatives><tex-math id="M581">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d _X$$\end{document}</tex-math><mml:math id="M582"><mml:msub><mml:mi>d</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq267.gif"/></alternatives></inline-formula> and <inline-formula id="IEq268"><alternatives><tex-math id="M583">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d _Y$$\end{document}</tex-math><mml:math id="M584"><mml:msub><mml:mi>d</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq268.gif"/></alternatives></inline-formula>. For a given tree decomposition, we can define subset widths <inline-formula id="IEq269"><alternatives><tex-math id="M585">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X$$\end{document}</tex-math><mml:math id="M586"><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq269.gif"/></alternatives></inline-formula> and <inline-formula id="IEq270"><alternatives><tex-math id="M587">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _Y$$\end{document}</tex-math><mml:math id="M588"><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq270.gif"/></alternatives></inline-formula> as the maximum number of respective <italic>X</italic> and <italic>Y</italic> variables in a bag minus 1.</p>
      <p id="Par113">Then, we bound more tightly as follows:<disp-formula id="Equ25"><alternatives><tex-math id="M589">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v}\ \prod _{x_i\in {\text {sep}}(u)}\!|\mathcal {D} _{i}|\,\cdot \!\prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i|\,\cdot (|\phi (u)|+n_u)\\&amp;\le d _X^{w _X+1}\cdot d _Y^{w _Y+1}\cdot \sum _{u\rightarrow v} (|\phi (u)|+n_u)\\&amp;\le d _X^{w _X+1}\cdot d _Y^{w _Y+1}\cdot (\mathfrak {m} + \mathfrak {n}). \end{aligned}$$\end{document}</tex-math><mml:math id="M590" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>Y</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>Y</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ25.gif" position="anchor"/></alternatives></disp-formula></p>
      <sec id="FPar27">
        <title>Corollary 1</title>
        <p id="Par114">The runtime of Algorithm <xref rid="Sec10" ref-type="sec">1</xref> is in<disp-formula id="Equ26"><alternatives><tex-math id="M591">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {O}\left( d _1^{w _1+1}\cdots d _k^{w _k+1} \cdot (\mathfrak {m} + \mathfrak {n}) \right) ,\end{aligned}$$\end{document}</tex-math><mml:math id="M592" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msubsup><mml:mi>d</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>⋯</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ26.gif" position="anchor"/></alternatives></disp-formula>given a feature network where <inline-formula id="IEq271"><alternatives><tex-math id="M593">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}$$\end{document}</tex-math><mml:math id="M594"><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq271.gif"/></alternatives></inline-formula> is a disjoint union of subsets <inline-formula id="IEq272"><alternatives><tex-math id="M595">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _1,\dots ,\mathcal {X} _k$$\end{document}</tex-math><mml:math id="M596"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq272.gif"/></alternatives></inline-formula> and a tree decomposition <inline-formula id="IEq273"><alternatives><tex-math id="M597">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M598"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq273.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq274"><alternatives><tex-math id="M599">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _i = \max _{v\in T} |\{X \in \mathcal {X} _i \mid X \in \chi (v)\}|$$\end{document}</tex-math><mml:math id="M600"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∣</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq274.gif"/></alternatives></inline-formula> are the respective subset widths of <inline-formula id="IEq275"><alternatives><tex-math id="M601">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _1,\dots ,\mathcal {X} _k$$\end{document}</tex-math><mml:math id="M602"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq275.gif"/></alternatives></inline-formula> w.r.t. <inline-formula id="IEq276"><alternatives><tex-math id="M603">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M604"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq276.gif"/></alternatives></inline-formula>.</p>
        <p>It becomes apparent that tree decompositions with minimal width do not necessarily yield best performance in this context (e.g. [<xref ref-type="bibr" rid="CR31">31</xref>]). We can take a shortcut in special cases, where variables <inline-formula id="IEq277"><alternatives><tex-math id="M605">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M606"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq277.gif"/></alternatives></inline-formula> and <inline-formula id="IEq278"><alternatives><tex-math id="M607">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M608"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq278.gif"/></alternatives></inline-formula> for the same <inline-formula id="IEq279"><alternatives><tex-math id="M609">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i \le n$$\end{document}</tex-math><mml:math id="M610"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq279.gif"/></alternatives></inline-formula> (<inline-formula id="IEq280"><alternatives><tex-math id="M611">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n=n_X=n_Y$$\end{document}</tex-math><mml:math id="M612"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq280.gif"/></alternatives></inline-formula>) depend on each other. Then, one can collapse the nodes of <inline-formula id="IEq281"><alternatives><tex-math id="M613">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M614"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq281.gif"/></alternatives></inline-formula> and <inline-formula id="IEq282"><alternatives><tex-math id="M615">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M616"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq282.gif"/></alternatives></inline-formula> in the dependency graph, generate a standard tree decomposition optimizing its width <inline-formula id="IEq283"><alternatives><tex-math id="M617">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w '$$\end{document}</tex-math><mml:math id="M618"><mml:msup><mml:mi>w</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq283.gif"/></alternatives></inline-formula>, and infer a tree decomposition of the original dependency graph with <inline-formula id="IEq284"><alternatives><tex-math id="M619">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X=w _Y=w '$$\end{document}</tex-math><mml:math id="M620"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq284.gif"/></alternatives></inline-formula>.</p>
      </sec>
    </sec>
    <sec id="Sec13">
      <title>Parameterized complexity classes</title>
      <p id="Par116">Based on our complexity results (Sec. “Computational complexity”), the Optimization (Prob. <xref ref-type="sec" rid="FPar12">1</xref>) and Sampling (Prob. <xref ref-type="sec" rid="FPar13">2</xref>) can be solved efficiently in the <italic>input size</italic>
<italic>n</italic> at fixed values of the treewidth. Assuming that the number of variables and number of edges is on the order of <italic>n</italic>, i.e. <inline-formula id="IEq285"><alternatives><tex-math id="M621">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {n}+\mathfrak {m}\in \mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M622"><mml:mrow><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq285.gif"/></alternatives></inline-formula>, the input-dependence of the maximum domain size <italic>d</italic>, <inline-formula id="IEq286"><alternatives><tex-math id="M623">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\in \mathcal {O}(1)$$\end{document}</tex-math><mml:math id="M624"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq286.gif"/></alternatives></inline-formula> or <inline-formula id="IEq287"><alternatives><tex-math id="M625">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\in \mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M626"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq287.gif"/></alternatives></inline-formula>, determines the theoretical parameterized complexity class.</p>
      <p id="Par117">For problems parameterized by <italic>k</italic>, one distinguishes the class <bold>FPT</bold> (<bold>fixed parameter tractable</bold>), where problems can be solved in time <inline-formula id="IEq288"><alternatives><tex-math id="M627">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(k)n^{\mathcal {O}(1)}$$\end{document}</tex-math><mml:math id="M628"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq288.gif"/></alternatives></inline-formula> for some computable function <italic>f</italic>, from the class <bold>XP</bold> with a bound of <inline-formula id="IEq289"><alternatives><tex-math id="M629">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(k)n^{g(k)}$$\end{document}</tex-math><mml:math id="M630"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq289.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] for some computable functions <italic>f</italic>, <italic>g</italic>. The latter class strictly includes the former. <bold>XP</bold> algorithms are also called <bold>slicewise polynomial</bold>, having polynomial complexity for each fixed value of the parameter.</p>
      <p id="Par118">For constant <italic>d</italic>, it follows that solving in Infrared is in the class <bold>FPT</bold> parameterized by the treewidth of the dependency graph. This is the case for the presented applications to RNA design, where the domain size is the number of nucleotides, i.e. typically 4. In our applications to pseudoknotted RNA alignment, the domain size <italic>d</italic> is in <inline-formula id="IEq290"><alternatives><tex-math id="M631">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M632"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq290.gif"/></alternatives></inline-formula>; consequently, we obtain an <bold>XP</bold> solving algorithm.</p>
    </sec>
    <sec id="Sec14">
      <title>Computing tree decompositions</title>
      <p id="Par119">The problem of computing a tree decomposition of minimal treewidth for an input graph/network is NP-hard [<xref ref-type="bibr" rid="CR32">32</xref>]. However, multiple heuristics [<xref ref-type="bibr" rid="CR13">13</xref>] and even efficient exact solvers [<xref ref-type="bibr" rid="CR33">33</xref>] have been designed, motivated by the wide applicability of treewidth-based methods.</p>
      <p id="Par120">From a theoretical perspective, treewidth is FPT to compute, albeit with a prohibitive complexity of <inline-formula id="IEq291"><alternatives><tex-math id="M633">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^{O(w ^3)}$$\end{document}</tex-math><mml:math id="M634"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq291.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR34">34</xref>]. A <inline-formula id="IEq292"><alternatives><tex-math id="M635">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4\cdot w +4$$\end{document}</tex-math><mml:math id="M636"><mml:mrow><mml:mn>4</mml:mn><mml:mo>·</mml:mo><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq292.gif"/></alternatives></inline-formula> approximation in <inline-formula id="IEq293"><alternatives><tex-math id="M637">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(8^{w}\cdot w ^2 \cdot |\mathcal {X} |^2)$$\end{document}</tex-math><mml:math id="M638"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>8</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq293.gif"/></alternatives></inline-formula> is also possible [<xref ref-type="bibr" rid="CR14">14</xref>]. Both of these results guarantee that FPT results remain FPT when including the computation of a tree decomposition prior to applying Algorithm 1 and <xref rid="Sec10" ref-type="sec">2</xref>. However, the actual complexity may be affected, becoming the worst of the two.</p>
      <p id="Par121">Despite these theoretical results, virtually all treewidth-based implementations, including Infrared, use the beforementioned heuristics or solvers to compute tree decompositions.</p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Applications to concrete bionformatics problems</title>
    <sec id="Sec16">
      <title>Network parsimony</title>
      <p id="Par122">
        <fig id="Fig4">
          <label>Fig. 4</label>
          <caption>
            <p>Example phylogenetic network. Optimal solutions for <bold>A</bold> hardwired parsimony. <bold>B</bold> softwired parsimony. <bold>C</bold> parental parsimony; nodes are labeled by character sets. The input for these problems consists of the network and the labels of only the leaves (blue).The other labels are inferred. The example contains one reticulation node (red)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig4_HTML" id="MO12"/>
        </fig>
      </p>
      <sec id="Sec4">
        <title>
          <bold>
            <italic>Parsimony for phylogenetic reconstruction</italic>
          </bold>
        </title>
        <p id="Par123"> For inferring phylogenies, one of the central missions of bioinformatics, parsimony methods determine the most parsimonious explanations for evolutionary relationships. In the classical small parsimony problem the relation between <italic>n</italic> taxa is given as their phylogenetic tree. The leaves are labeled by ‘characters’, i.e. the taxa, and we ask for a labeling of the internal nodes such that the number of label differences over all tree edges is minimized. However, due to <italic>reticulate evolution</italic>, where lineages can be influenced by two or more ancestors, many real phylogenies are better represented by phylogenetic networks than trees [<xref ref-type="bibr" rid="CR35">35</xref>]. This model captures diverse phenomena such as hybrid speciation, horizontal gene transfer, and allopolyploidity due to sexual recombination. While tree parsimony has well-established polynomial-time solutions [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>], network parsimony is a topic of current algorithmic research. For example, Scornavacca and Weller [<xref ref-type="bibr" rid="CR5">5</xref>] present artfully hand-crafted fixed-parameter tractable (FPT) algorithms for three variants of network parsimony. We will discuss modeling network parsimony directly in Infrared and, in this way, immediately obtain FPT solutions.</p>
        <sec id="FPar28">
          <title>Definition 11</title>
          <p id="Par124">[Phylogenetic Network] A <bold>phylogenetic network</bold> is a rooted, connected directed acyclic graph <inline-formula id="IEq294"><alternatives><tex-math id="M639">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G = (V,E)$$\end{document}</tex-math><mml:math id="M640"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq294.gif"/></alternatives></inline-formula>. Edges point from <bold>children</bold> to their <bold>parents</bold>. The unique <bold>root</bold>
<inline-formula id="IEq295"><alternatives><tex-math id="M641">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r\in V$$\end{document}</tex-math><mml:math id="M642"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq295.gif"/></alternatives></inline-formula> is the only node without parents; the <bold>leaves</bold>
<inline-formula id="IEq296"><alternatives><tex-math id="M643">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L \subseteq V$$\end{document}</tex-math><mml:math id="M644"><mml:mrow><mml:mi>L</mml:mi><mml:mo>⊆</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq296.gif"/></alternatives></inline-formula> are the nodes without children. <bold>Reticulation nodes</bold> have more than one parent.</p>
          <p><bold>Hardwired parsimony</bold> can be seen as a direct extension from tree to network parsimony that minimizes a parsimony score summing over all network edges, <bold>softwired parsimony</bold> inherits—in the case of multiple parents—only from the most favorable one, and <bold>parental parsimony</bold> allows embedding of different lineages in the network (one parent per allele) to cover allopolyploidy [<xref ref-type="bibr" rid="CR5">5</xref>] (Fig. <xref rid="Fig4" ref-type="fig">4</xref>).</p>
          <p>In this text, we describe in detail the modelings of hardwired and softwired parsimony. For Infrared models of all three variants of network parsimony, we refer to our online documentation.</p>
        </sec>
        <sec id="FPar29">
          <title>Problem 3</title>
          <p id="Par127">[Hardwired network parsimony] <def-list><def-item><term><sc>Input:</sc></term><def><p id="Par128">Phylogenetic network <inline-formula id="IEq297"><alternatives><tex-math id="M645">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M646"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq297.gif"/></alternatives></inline-formula> with leaves <italic>L</italic>, set of characters <inline-formula id="IEq298"><alternatives><tex-math id="M647">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M648"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq298.gif"/></alternatives></inline-formula>, and leaf labeling <inline-formula id="IEq299"><alternatives><tex-math id="M649">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi : L\rightarrow \Sigma$$\end{document}</tex-math><mml:math id="M650"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>:</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq299.gif"/></alternatives></inline-formula>.</p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par129">Minimal parsimony score <inline-formula id="IEq300"><alternatives><tex-math id="M651">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {PS}}^{*}_\text{hw}$$\end{document}</tex-math><mml:math id="M652"><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>hw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq300.gif"/></alternatives></inline-formula> and corresponding labeling <inline-formula id="IEq301"><alternatives><tex-math id="M653">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\psi :V\rightarrow \Sigma$$\end{document}</tex-math><mml:math id="M654"><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq301.gif"/></alternatives></inline-formula>, where <disp-formula id="Equ27"><alternatives><tex-math id="M655">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {PS}}^{*}_\text{hw}= \min _{\begin{array}{c} \hbox { labeling}\ \psi \\ \forall v\in L: \psi (v)=\phi (v) \end{array}} \sum _{(u,v)\in E} {\text{d}}(\psi (u),\psi (v)), \end{aligned}$$\end{document}</tex-math><mml:math id="M656" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>hw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>labeling</mml:mtext><mml:mspace width="4pt"/><mml:mi>ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mo>∀</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>:</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ27.gif" position="anchor"/></alternatives></disp-formula> here limiting ourselves, for simplicity, to distance <inline-formula id="IEq302"><alternatives><tex-math id="M657">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {d}}(x,y)={\left\{ \begin{array}{ll}1&amp;{}x\ne y\\ 0&amp;{}x=y.\end{array}\right. }$$\end{document}</tex-math><mml:math id="M658"><mml:mrow><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mo>≠</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>y</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq302.gif"/></alternatives></inline-formula></p></def></def-item></def-list></p>
        </sec>
      </sec>
      <sec id="Sec36">
        <title>
          <bold>
            <italic>Infrared network model</italic>
          </bold>
        </title>
        <p id="Par130">We model labellings as assignments, i.e. we use one variable <inline-formula id="IEq303"><alternatives><tex-math id="M659">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M660"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq303.gif"/></alternatives></inline-formula> per node of <italic>G</italic>, whose value encodes its label, i.e. the domain of internal nodes is <inline-formula id="IEq304"><alternatives><tex-math id="M661">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M662"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq304.gif"/></alternatives></inline-formula>, while the domain of leaf variables is restricted by the input labeling <inline-formula id="IEq305"><alternatives><tex-math id="M663">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi$$\end{document}</tex-math><mml:math id="M664"><mml:mi>ϕ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq305.gif"/></alternatives></inline-formula>. We can thus specify the variables and domains of the feature network <inline-formula id="IEq306"><alternatives><tex-math id="M665">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {hw}}=(\mathcal {X} _{\text {hw}},\mathcal {D} _{\text {hw}},\mathcal {C} _{\text {hw}},\mathcal {F} _{\text {hw}})$$\end{document}</tex-math><mml:math id="M666"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq306.gif"/></alternatives></inline-formula>, which models Problem <xref ref-type="sec" rid="FPar29">3</xref>:<list list-type="bullet"><list-item><p id="Par131"><inline-formula id="IEq307"><alternatives><tex-math id="M667">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {hw}}=\{X_1,\ldots ,X_{|V|}\}$$\end{document}</tex-math><mml:math id="M668"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq307.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par132"><inline-formula id="IEq308"><alternatives><tex-math id="M669">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{D}}_{{{\text{hw}}}} \, = \,\left\{ {D_{1} , \ldots ,D_{{|V|}} } \right.\,,$$\end{document}</tex-math><mml:math id="M670"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced open="{"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq308.gif"/></alternatives></inline-formula> where <inline-formula id="IEq309"><alternatives><tex-math id="M671">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i={\left\{ \begin{array}{ll} \{\phi (i)\} &amp;{} v_i\in L\\ \Sigma &amp;{} \text {otherwise} \end{array}\right. }$$\end{document}</tex-math><mml:math id="M672"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq309.gif"/></alternatives></inline-formula></p></list-item></list>On this basis, we impose constraints and functions. In this case, there are no constraints (all constraints are expressed by restricting the domains, such that all assignments are valid labellings). To express the score (by a set of network functions), we introduce the network function <inline-formula id="IEq310"><alternatives><tex-math id="M673">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Distance}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M674"><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq310.gif"/></alternatives></inline-formula> for the variables <inline-formula id="IEq311"><alternatives><tex-math id="M675">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M676"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq311.gif"/></alternatives></inline-formula> and <inline-formula id="IEq312"><alternatives><tex-math id="M677">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M678"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq312.gif"/></alternatives></inline-formula> is defined to encode the distance <inline-formula id="IEq313"><alternatives><tex-math id="M679">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d(x_i,x_j)$$\end{document}</tex-math><mml:math id="M680"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq313.gif"/></alternatives></inline-formula> between their values in an assignment <italic>x</italic>. We finalize the model by<list list-type="bullet"><list-item><p id="Par133"><inline-formula id="IEq314"><alternatives><tex-math id="M681">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {hw}}=\{\}$$\end{document}</tex-math><mml:math id="M682"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq314.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par134"><inline-formula id="IEq315"><alternatives><tex-math id="M683">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {hw}}=\{F_{\text {hwd}}$$\end{document}</tex-math><mml:math id="M684"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo></mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>hwd</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq315.gif"/></alternatives></inline-formula>} with feature <disp-formula id="Equ28"><alternatives><tex-math id="M685">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}F_{\text {hwd}}=\{{\text {\textsf{Distance}}}_{[X_i,X_j]} \mid (v_i,v_j) \in E\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M686" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>hwd</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ28.gif" position="anchor"/></alternatives></disp-formula></p></list-item></list>To implement and solve the problem in Infrared, it suffices to <italic>translate</italic> the model to Infrared syntax and call its optimizer. According to Proposition <xref ref-type="sec" rid="FPar23">4</xref>, the framework determines a most parsimonious solution in time complexity <inline-formula id="IEq316"><alternatives><tex-math id="M687">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}((|E|+ |V|)\cdot |\Sigma |^{w +1})$$\end{document}</tex-math><mml:math id="M688"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq316.gif"/></alternatives></inline-formula> in the treewidth <inline-formula id="IEq317"><alternatives><tex-math id="M689">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M690"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq317.gif"/></alternatives></inline-formula> of the input network <inline-formula id="IEq318"><alternatives><tex-math id="M691">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M692"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq318.gif"/></alternatives></inline-formula>. For this corollary observe that the dependency graph of the modeled feature network is exactly the input network; moreover the model has |<italic>E</italic>| functions and |<italic>V</italic>| variables with maximum domain size <inline-formula id="IEq319"><alternatives><tex-math id="M693">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=|\Sigma |$$\end{document}</tex-math><mml:math id="M694"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq319.gif"/></alternatives></inline-formula>; functions are computed in constant time.</p>
      </sec>
      <sec id="Sec3">
        <title>
          <bold>
            <italic>Beyond hardwired network parsimony</italic>
          </bold>
        </title>
        <p id="Par135">The problem of <bold>softwired network parsimony</bold> redefines the score of hardwired parsimony, such that it asks for<disp-formula id="Equ29"><alternatives><tex-math id="M695">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {PS}}^{*}_\text{sw}= \min _{\begin{array}{c} \hbox { labeling}\ \psi \\ \forall v\in L: \psi (v)=\phi (v) \end{array}} \sum_{u\in V}\min _{v\in {\text{parents}}(u)} {\text{d}}(\psi (u),\psi (v)), \end{aligned}$$\end{document}</tex-math><mml:math id="M696" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>sw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>labeling</mml:mtext><mml:mspace width="4pt"/><mml:mi>ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mo>∀</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>:</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mtext>parents</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ29.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq320"><alternatives><tex-math id="M697">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {parents}}(u)$$\end{document}</tex-math><mml:math id="M698"><mml:mrow><mml:mtext>parents</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq320.gif"/></alternatives></inline-formula> denotes the set of parents of <italic>u</italic>. This does not change the behavior at nonreticulation nodes, but offers a choice in the case of reticulation nodes.</p>
        <p id="Par136">Here, we restrict our model to <bold>binary networks</bold>, where nodes can have up to two children and up to two parents. Then, starting from the hardwired model, we enable this choice by adding a Boolean selector variable <inline-formula id="IEq321"><alternatives><tex-math id="M699">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M700"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq321.gif"/></alternatives></inline-formula> for every reticulation node <inline-formula id="IEq322"><alternatives><tex-math id="M701">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i$$\end{document}</tex-math><mml:math id="M702"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq322.gif"/></alternatives></inline-formula>. The distance to the left parent is counted if <inline-formula id="IEq323"><alternatives><tex-math id="M703">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i=0$$\end{document}</tex-math><mml:math id="M704"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq323.gif"/></alternatives></inline-formula>; to the right parent, if <inline-formula id="IEq324"><alternatives><tex-math id="M705">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i=1$$\end{document}</tex-math><mml:math id="M706"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq324.gif"/></alternatives></inline-formula>. Then, we replace the distance network functions by special variants at all edges between a reticulate child <italic>u</italic> and one of its parents <italic>v</italic>; feature <inline-formula id="IEq325"><alternatives><tex-math id="M707">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{hwd}$$\end{document}</tex-math><mml:math id="M708"><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">hwd</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq325.gif"/></alternatives></inline-formula> is substituted by<disp-formula id="Equ30"><alternatives><tex-math id="M709">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} F_{swd} =\,\{{\text {\textsf{RDistance}}}_{[X_i,X_j,Y_i;r]} \mid i, j \in (v_i,v_j)\in E,\\ {}\quad v_i \,\text {is a reticulation node}, \\ {}\quad r=1\, \text {if}\, v_j \,\text {is right parent of}\, v_i \,\text {else 0}\} \\\cup \{{\text {\textsf{Distance}}}_{[X_i,X_j]} \mid i, j \in (v_i,v_j)\in E,\\ {}\qquad v_i \,\text {is not a reticulation node}\}, \end{aligned}$$\end{document}</tex-math><mml:math id="M710" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">swd</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mo stretchy="false">{</mml:mo></mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">RDistance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="1em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>is a reticulation node</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="1em"/><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.166667em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>is right parent of</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mspace width="0.166667em"/><mml:mtext>else 0</mml:mtext><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>∪</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="2em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mspace width="0.166667em"/><mml:mtext>is not a reticulation node</mml:mtext><mml:mo stretchy="false">}</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ30.gif" position="anchor"/></alternatives></disp-formula>where <italic>r</italic> controls the selection, i.e.<disp-formula id="Equ31"><alternatives><tex-math id="M711">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{RDistance}}}_{[X_i,X_j,Y_i;r]}(x_i,x_j,y_i) \\&amp;\qquad = {\left\{ \begin{array}{ll} {\text {\textsf{Distance}}}_{[X_i,X_j]}(x_i,x_j) &amp;{}\hbox { if}\ y_i=r\\ +\infty &amp;{}\text {otherwise.} \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M712" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">RDistance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="2em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="4pt"/><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>+</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise.</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ31.gif" position="anchor"/></alternatives></disp-formula>To improve over the bound of Proposition <xref ref-type="sec" rid="FPar23">4</xref>, we follow Section “Complexity analysis for nonuniform domain sizes”. For the purpose of a conservative worst case complexity analysis, consider a tree decomposition of the dependency graph (which is equivalent to the input network). Now, we modify the problem by adding variables <inline-formula id="IEq326"><alternatives><tex-math id="M713">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M714"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq326.gif"/></alternatives></inline-formula> as well to all the nonreticulation nodes. A tree decomposition of the modified problem can now be obtained by complementing all <inline-formula id="IEq327"><alternatives><tex-math id="M715">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M716"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq327.gif"/></alternatives></inline-formula> by corresponding <inline-formula id="IEq328"><alternatives><tex-math id="M717">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M718"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq328.gif"/></alternatives></inline-formula>. The subset widths <inline-formula id="IEq329"><alternatives><tex-math id="M719">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X$$\end{document}</tex-math><mml:math id="M720"><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq329.gif"/></alternatives></inline-formula> and <inline-formula id="IEq330"><alternatives><tex-math id="M721">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _Y$$\end{document}</tex-math><mml:math id="M722"><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq330.gif"/></alternatives></inline-formula> are then equal to the original treewidth <inline-formula id="IEq331"><alternatives><tex-math id="M723">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M724"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq331.gif"/></alternatives></inline-formula>. Therefore, by Cor. <xref ref-type="sec" rid="FPar27">1</xref>, we obtain the complexity <inline-formula id="IEq332"><alternatives><tex-math id="M725">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}( |\Sigma |^{w +1}2^{w} (|V|+|E|) )$$\end{document}</tex-math><mml:math id="M726"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq332.gif"/></alternatives></inline-formula> for solving softwired network parsimony.</p>
      </sec>
      <sec id="Sec37">
        <title>
          <bold>
            <italic>Discussion</italic>
          </bold>
        </title>
        <p id="Par137"> Scornavacca and Weller [<xref ref-type="bibr" rid="CR5">5</xref>] present algorithms for hardwired, softwired, and parental network parsimony with respective complexities of <inline-formula id="IEq333"><alternatives><tex-math id="M727">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}|E|)$$\end{document}</tex-math><mml:math id="M728"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq333.gif"/></alternatives></inline-formula>, <inline-formula id="IEq334"><alternatives><tex-math id="M729">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w}(3^w |\Sigma | |V| + |E|)$$\end{document}</tex-math><mml:math id="M730"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq334.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq335"><alternatives><tex-math id="M731">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}( 6^{w |\Sigma |} 4^{w \log (c)} |E| )$$\end{document}</tex-math><mml:math id="M732"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>6</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mn>4</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq335.gif"/></alternatives></inline-formula> (after obtaining the tree decomposition). In the hardwired case, we obtain the same complexity out-of-the-box.</p>
        <p id="Par138">In the case of <italic>softwired complexity</italic> for the special case of binary networks, we even obtain a complexity with a better treewidth dependence. To show this, given <inline-formula id="IEq336"><alternatives><tex-math id="M733">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|E|&lt;2|V|$$\end{document}</tex-math><mml:math id="M734"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>&lt;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq336.gif"/></alternatives></inline-formula> under the assumption of binary networks, one simplifies our result to <inline-formula id="IEq337"><alternatives><tex-math id="M735">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}2^{w}|V|)$$\end{document}</tex-math><mml:math id="M736"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq337.gif"/></alternatives></inline-formula> and theirs to <inline-formula id="IEq338"><alternatives><tex-math id="M737">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}3^{w}|V| + |\Sigma |^w 2|V|)=\mathcal {O}(|\Sigma |^{w +1}3^w |V|)$$\end{document}</tex-math><mml:math id="M738"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mn>2</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq338.gif"/></alternatives></inline-formula>.</p>
        <p id="Par139">We refer to our accompanying notebook for the case of <italic>parental parsimony</italic>. There, we provide a model that induces an efficient solution whenever the treewidth of the feature network remains bounded. In this case, the feature network simply consists of the input network, augmented by ternary constraints at reticulation nodes. Consequently, while obtaining an FPT algorithm even for this complex parsimony problem, we cannot directly compare its complexity to [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
      </sec>
    </sec>
    <sec id="Sec17">
      <title>RNA design</title>
      <p id="Par140">
        <fig id="Fig5">
          <label>Fig. 5</label>
          <caption>
            <p>RNA multitarget design. <bold>A</bold> Three target RNA secondary structures of length 100 as 2D plots (by VARNA [<xref ref-type="bibr" rid="CR38">38</xref>]) and dot-bracket strings; taken from a multitarget design benchmark set [<xref ref-type="bibr" rid="CR39">39</xref>]. <bold>B</bold> Histograms of the features G <bold>C</bold> content (left), and the Turner energies (kcal/mol) of the three targets (right) in 5000 sequences sampled from the multitarget design model <inline-formula id="IEq339"><alternatives><tex-math id="M739">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M740"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq339.gif"/></alternatives></inline-formula> at weight -5 for every feature. One can observe that (1) equal weights lead to different mean energies for the targets; (2) strong control of the G C weight is required to avoid extreme G C content for stable designs. To automate the calibration of weights (and target specific feature value combinations), we suggest multidimensional Boltzmann sampling in Section “Multidimensional Boltzmann sampling”</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig5_HTML" id="MO13"/>
        </fig>
      </p>
      <p id="Par141">Designing biomolecules for specific biotechnological or medical applications is typically an interdisciplinary endeavor combining experimentation and computational design. On the computational side this calls for flexible, extensible systems that can express and efficiently cope with various constraints and objectives—a paradigmatic playing field for our framework (see our treatment in [<xref ref-type="bibr" rid="CR28">28</xref>]). A challenging, computationally hard subproblem in this area is the design of RNA sequences that fold into multiple target structures. The Infrared framework generalizes the FPT algorithm of our earlier work RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]—a method to generate RNA sequences <italic>w</italic>, words over <inline-formula id="IEq340"><alternatives><tex-math id="M741">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {A}, \texttt {C}, \texttt {G}, \texttt {U}$$\end{document}</tex-math><mml:math id="M742"><mml:mrow><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq340.gif"/></alternatives></inline-formula> targeting the energies of multiple structures and specific G C content. The latter is defined as the amount of G and C characters, denoted <inline-formula id="IEq341"><alternatives><tex-math id="M743">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\#\texttt {G} \texttt {C} (w)$$\end{document}</tex-math><mml:math id="M744"><mml:mrow><mml:mo>#</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq341.gif"/></alternatives></inline-formula>. Here, we model the core problem of RNARedprint directly as a feature network, which allows its implementation in Infrared.</p>
      <sec id="FPar30">
        <title>Definition 12</title>
        <p id="Par142">[RNA secondary structure] A <bold>secondary structure</bold>
<inline-formula id="IEq342"><alternatives><tex-math id="M745">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S$$\end{document}</tex-math><mml:math id="M746"><mml:mi>S</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq342.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq343"><alternatives><tex-math id="M747">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M748"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq343.gif"/></alternatives></inline-formula> is a set of <bold>base pairs</bold>, i.e. pairs (<italic>i</italic>, <italic>j</italic>) of sequence positions, <inline-formula id="IEq344"><alternatives><tex-math id="M749">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i&lt; j\le n$$\end{document}</tex-math><mml:math id="M750"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq344.gif"/></alternatives></inline-formula>. Secondary structures are required to be <bold>free of base triplets</bold>, i.e. every base <inline-formula id="IEq345"><alternatives><tex-math id="M751">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n$$\end{document}</tex-math><mml:math id="M752"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq345.gif"/></alternatives></inline-formula> is involved in at most one base pair. A secondary structure <italic>S</italic> is called <bold>crossing</bold> iff there are pairs <inline-formula id="IEq346"><alternatives><tex-math id="M753">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j), (k,l)\in S$$\end{document}</tex-math><mml:math id="M754"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq346.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq347"><alternatives><tex-math id="M755">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&lt;k&lt;j&lt;l$$\end{document}</tex-math><mml:math id="M756"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq347.gif"/></alternatives></inline-formula>; otherwise, it is <bold>noncrossing</bold>.</p>
        <p><italic>Multitarget design sampling</italic> Given one or multiple noncrossing RNA secondary structures as <italic>targets</italic> (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A), we consider the problem of controlled sampling of designs (i.e. RNA sequences) from a Boltzmann distribution governed by the thermodynamic energies of the targets and the G C content, whose respective influence is controlled by weights (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B).</p>
      </sec>
      <sec id="FPar31">
        <title>Problem 4</title>
        <p id="Par144">[Multitarget RNA sequence sampling] Given are <italic>k</italic> target structures, i.e. noncrossing secondary structures <inline-formula id="IEq348"><alternatives><tex-math id="M757">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_1,\dots ,S_k$$\end{document}</tex-math><mml:math id="M758"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq348.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq349"><alternatives><tex-math id="M759">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M760"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq349.gif"/></alternatives></inline-formula>, together with weights <inline-formula id="IEq350"><alternatives><tex-math id="M761">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,\dots ,\alpha _k$$\end{document}</tex-math><mml:math id="M762"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq350.gif"/></alternatives></inline-formula> and <inline-formula id="IEq351"><alternatives><tex-math id="M763">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _{\texttt {G} \texttt {C}}$$\end{document}</tex-math><mml:math id="M764"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq351.gif"/></alternatives></inline-formula>. We ask for <italic>r</italic> RNA sequences of length <italic>n</italic> such that for each sequence <inline-formula id="IEq352"><alternatives><tex-math id="M765">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s$$\end{document}</tex-math><mml:math id="M766"><mml:mi>s</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq352.gif"/></alternatives></inline-formula><disp-formula id="Equ32"><alternatives><tex-math id="M767">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathbb {P}(s) \propto \exp \left( \alpha _{\texttt {G} \texttt {C}}\cdot \#\texttt {G} \texttt {C} (s)\right) \cdot \prod _{\ell =1}^k \exp \left( \alpha _\ell \cdot E(s, S_\ell )\right) \end{aligned}$$\end{document}</tex-math><mml:math id="M768" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∝</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mo>#</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>·</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:mi>E</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ32.gif" position="anchor"/></alternatives></disp-formula>with <inline-formula id="IEq353"><alternatives><tex-math id="M769">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s, S_\ell )$$\end{document}</tex-math><mml:math id="M770"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq353.gif"/></alternatives></inline-formula> is the free-energy of the sequence <inline-formula id="IEq354"><alternatives><tex-math id="M771">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s$$\end{document}</tex-math><mml:math id="M772"><mml:mi>s</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq354.gif"/></alternatives></inline-formula> folding into the structure <inline-formula id="IEq355"><alternatives><tex-math id="M773">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_\ell$$\end{document}</tex-math><mml:math id="M774"><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq355.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Constraints and functions</italic> In common energy models of RNAs, such as the nearest neighbor model [<xref ref-type="bibr" rid="CR40">40</xref>], all base pairs must be <bold>canonical</bold>, i.e. in<disp-formula id="Equ33"><alternatives><tex-math id="M775">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {B}=\{(\texttt {A},\texttt {U}), (\texttt {C}, \texttt {G}), (\texttt {G},\texttt {C}), (\texttt {G}, \texttt {U}), (\texttt {U}, \texttt {A}), (\texttt {U},\texttt {G})\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M776" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ33.gif" position="anchor"/></alternatives></disp-formula>Otherwise, the energy <inline-formula id="IEq356"><alternatives><tex-math id="M777">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s, S)$$\end{document}</tex-math><mml:math id="M778"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq356.gif"/></alternatives></inline-formula> is infinite. This imposes hard constraints on the solutions of our design problem; in [<xref ref-type="bibr" rid="CR16">16</xref>], we proved that these constraints make even the counting of valid solutions (with implications on controlled sampling) #P-hard.</p>
        <p>In our model, in line with [<xref ref-type="bibr" rid="CR16">16</xref>], we express a relatively simple energy function <inline-formula id="IEq357"><alternatives><tex-math id="M779">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s,S)$$\end{document}</tex-math><mml:math id="M780"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq357.gif"/></alternatives></inline-formula>, namely<disp-formula id="Equ34"><alternatives><tex-math id="M781">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}E_{bp}(s,S) = \sum _{(i,j)\in S}{\text {\textsf{BPEnergy}}}(s _i, s _j)\end{aligned}$$\end{document}</tex-math><mml:math id="M782" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">bp</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ34.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq358"><alternatives><tex-math id="M783">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPEnergy}}}: \mathcal {B}\rightarrow \mathbb {R}$$\end{document}</tex-math><mml:math id="M784"><mml:mrow><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mo>:</mml:mo><mml:mi mathvariant="script">B</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq358.gif"/></alternatives></inline-formula> is a function assigning values to single base pairs. Note that we empirically demonstrated the direct use of this simple energy model for design sampling [<xref ref-type="bibr" rid="CR16">16</xref>] (apart from being extensible to more accurate models). This is in remarkable contrast to structure prediction, which for relevant accuracy relies on models that assign energies to stabilizing and destabilizing loops [<xref ref-type="bibr" rid="CR40">40</xref>]. Figure <xref rid="Fig5" ref-type="fig">5</xref>B shows that sampling based on the simple base pair model can produce controllable concentrated distributions with regard to Turner energies [<xref ref-type="bibr" rid="CR41">41</xref>]. This effect is studied in more depth in [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
        <p><italic>Feature network for design</italic> We express Problem <xref ref-type="sec" rid="FPar31">4</xref> as a feature network and use Infrared to solve it. The FN <inline-formula id="IEq359"><alternatives><tex-math id="M785">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M786"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq359.gif"/></alternatives></inline-formula> is composed of<list list-type="bullet"><list-item><p id="Par148"><inline-formula id="IEq360"><alternatives><tex-math id="M787">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {design}}=\{X_1,\ldots ,X_n\}$$\end{document}</tex-math><mml:math id="M788"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq360.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par149"><inline-formula id="IEq361"><alternatives><tex-math id="M789">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {design}}=\{\texttt {A},\texttt {C},\texttt {G},\texttt {U} \}^n$$\end{document}</tex-math><mml:math id="M790"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq361.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par150"><inline-formula id="IEq362"><alternatives><tex-math id="M791">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {design}}=\{{\text {\textsf{BPCompl}}}_{[i,j]} \mid (i,j)\in \bigcup _\ell S_\ell \}$$\end{document}</tex-math><mml:math id="M792"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPCompl</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mi>ℓ</mml:mi></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq362.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par151"><inline-formula id="IEq363"><alternatives><tex-math id="M793">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {design}}=\{F_{gc},F_{1},\dots ,F_{k}\}$$\end{document}</tex-math><mml:math id="M794"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq363.gif"/></alternatives></inline-formula> with features <inline-formula id="IEq364"><alternatives><tex-math id="M795">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{{gc}} \, = \,\left\{ {GC_{{\left[ i \right]}} \,\left| {i\, \in \,\left[ {1,\,n} \right]} \right.} \right\}$$\end{document}</tex-math><mml:math id="M796"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced close="}" open="{"><mml:mrow><mml:mi>G</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced open="|"><mml:mrow><mml:mi>i</mml:mi><mml:mspace width="0.166667em"/><mml:mo>∈</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced close="]" open="["><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq364.gif"/></alternatives></inline-formula> and <inline-formula id="IEq365"><alternatives><tex-math id="M797">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\ell }=\{{\text {\textsf{BPEnergy}}}_{[i,j]} \mid (i,j)\in S_\ell \}$$\end{document}</tex-math><mml:math id="M798"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq365.gif"/></alternatives></inline-formula> (<inline-formula id="IEq366"><alternatives><tex-math id="M799">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le \ell \le k$$\end{document}</tex-math><mml:math id="M800"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq366.gif"/></alternatives></inline-formula>).</p></list-item></list>The constraint <inline-formula id="IEq367"><alternatives><tex-math id="M801">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPCompl}}}_{[i,j]}(x_i,x_j)$$\end{document}</tex-math><mml:math id="M802"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">BPCompl</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq367.gif"/></alternatives></inline-formula> is <inline-formula id="IEq368"><alternatives><tex-math id="M803">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textsf{True} \text { if } (x_i,x_j)\in \mathcal {B}$$\end{document}</tex-math><mml:math id="M804"><mml:mrow><mml:mi mathvariant="sans-serif">True</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq368.gif"/></alternatives></inline-formula>; it ensures that <inline-formula id="IEq369"><alternatives><tex-math id="M805">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M806"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq369.gif"/></alternatives></inline-formula> is a canonical base pair in the design <italic>w</italic>. The network functions <inline-formula id="IEq370"><alternatives><tex-math id="M807">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPEnergy}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M808"><mml:msub><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq370.gif"/></alternatives></inline-formula> and <inline-formula id="IEq371"><alternatives><tex-math id="M809">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{GC}}}_{[i]}$$\end{document}</tex-math><mml:math id="M810"><mml:msub><mml:mtext mathvariant="sans-serif">GC</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq371.gif"/></alternatives></inline-formula> decompose the global properties, energy and G C content, into their local contributions from base pairs or bases. To evaluate the assignment, feature <inline-formula id="IEq372"><alternatives><tex-math id="M811">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{gc}$$\end{document}</tex-math><mml:math id="M812"><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq372.gif"/></alternatives></inline-formula> has a weight of <inline-formula id="IEq373"><alternatives><tex-math id="M813">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _{\texttt {G} \texttt {C}}$$\end{document}</tex-math><mml:math id="M814"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq373.gif"/></alternatives></inline-formula> and each feature <inline-formula id="IEq374"><alternatives><tex-math id="M815">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_\ell$$\end{document}</tex-math><mml:math id="M816"><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq374.gif"/></alternatives></inline-formula> has <inline-formula id="IEq375"><alternatives><tex-math id="M817">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _\ell$$\end{document}</tex-math><mml:math id="M818"><mml:msub><mml:mi>α</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq375.gif"/></alternatives></inline-formula> for <inline-formula id="IEq376"><alternatives><tex-math id="M819">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell \in [1,k]$$\end{document}</tex-math><mml:math id="M820"><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq376.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Efficient solving in Infrared</italic> To randomly generate <italic>r</italic> designs, sampled exactly from the defined distribution of Problem <xref ref-type="sec" rid="FPar13">2</xref>, we encode <inline-formula id="IEq377"><alternatives><tex-math id="M821">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M822"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq377.gif"/></alternatives></inline-formula> as an object of the class infrared.Model and pass it to Infrared ’s sampler infrared.Sampler, which is then asked <italic>r</italic>-times to return a sample. The efficiency of sampling depends exponentially on the complexity of the graph <inline-formula id="IEq378"><alternatives><tex-math id="M823">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\text {design}}=(\{1,\dots ,n\},\bigcup _{\ell =1}^k S_\ell )$$\end{document}</tex-math><mml:math id="M824"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq378.gif"/></alternatives></inline-formula>, which combines all the dependencies between sequence positions due to the target structures.</p>
      </sec>
      <sec id="FPar32">
        <title>Corollary 2</title>
        <p id="Par153">Infrared ’s engine solves Problem <xref ref-type="sec" rid="FPar31">4</xref> in <inline-formula id="IEq379"><alternatives><tex-math id="M825">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}((n+m)\cdot 4^{w}) + r\cdot 4(n+m))$$\end{document}</tex-math><mml:math id="M826"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>r</mml:mi><mml:mo>·</mml:mo><mml:mn>4</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq379.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq380"><alternatives><tex-math id="M827">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n\cdot 4^{w})$$\end{document}</tex-math><mml:math id="M828"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq380.gif"/></alternatives></inline-formula> space, where <inline-formula id="IEq381"><alternatives><tex-math id="M829">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=n+2\sum _{\ell =1}^k|S_\ell |$$\end{document}</tex-math><mml:math id="M830"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq381.gif"/></alternatives></inline-formula>, i.e. the total number of functions and constraints, and <inline-formula id="IEq382"><alternatives><tex-math id="M831">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M832"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq382.gif"/></alternatives></inline-formula> is the treewidth of <inline-formula id="IEq383"><alternatives><tex-math id="M833">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\text {design}}$$\end{document}</tex-math><mml:math id="M834"><mml:msub><mml:mi>G</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq383.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Discussion</italic> Multitarget design well showcases the advantages due to a declarative system. Thus, we quickly developed RNARedprint v2 with extended functionality and improved performance compared to our original C++ implementation of RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]. Notably, based on the presented model, this reimplementation has identical computational complexity (Cor. <xref ref-type="sec" rid="FPar32">2</xref>).</p>
        <p>As expected, the declarative modeling framework in Python strongly facilitated the reimplementation and extension. The performance improvements (Fig. <xref rid="Fig11" ref-type="fig">11</xref>A) can be attributed to Infrared ’s systematic Python/C++ hybrid design, which allowed us to better optimize its generic computational engine.</p>
        <p>Our Jupyter notebook for multitarget design shows that RNARedprint ’s targeted sampling functionality can be coded in less than 100 lines of Python. Due to Infrared, this code is extensible and adaptable and makes the functionality well accessible for integration in larger Python workflows, for example, design involving negative design criteria that complements exact sampling with heuristic optimization (see [<xref ref-type="bibr" rid="CR28">28</xref>]). Finally, the Infrared implementation can serve as a basis and “rapid prototyping” experimentation platform for future extensions and ideas on multitarget design.</p>
      </sec>
    </sec>
    <sec id="Sec18">
      <title>Sequence alignment</title>
      <p id="Par157">
        <fig id="Fig6">
          <label>Fig. 6</label>
          <caption>
            <p>Modeling the sequence alignment of AAACUGG and ACGACGC. From left to right, we illustrate the alignment model <inline-formula id="IEq384"><alternatives><tex-math id="M835">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {ali}}$$\end{document}</tex-math><mml:math id="M836"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq384.gif"/></alternatives></inline-formula>; a valid assignment; the corresponding alignment</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig6_HTML" id="MO14"/>
        </fig>
      </p>
      <p id="Par158">Expressing sequence alignment, one of the most prominent problems of bioinformatics, in our framework enables solving various more expressive, even highly complex types of alignment by extending the model. To give an example, we later (Sec. “From sequence alignment to pseudoknot sequence-structure alignment”) discuss the extension to pseudoknotted RNA structure alignment, close to LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]. We start by modeling the elementary problem, which has well-known efficient solutions [<xref ref-type="bibr" rid="CR42">42</xref>, <xref ref-type="bibr" rid="CR43">43</xref>] by classic dynamic programming. The extension of this first model from linear to affine gap cost is discussed in Section “Sequence alignment with affine gap cost”.</p>
      <sec id="FPar33">
        <title>Definition 13</title>
        <p id="Par159">[Sequence alignment] A <bold>sequence alignment</bold>
<inline-formula id="IEq385"><alternatives><tex-math id="M837">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M838"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq385.gif"/></alternatives></inline-formula> of two <bold>sequences</bold>
<inline-formula id="IEq386"><alternatives><tex-math id="M839">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M840"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq386.gif"/></alternatives></inline-formula> and <inline-formula id="IEq387"><alternatives><tex-math id="M841">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M842"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq387.gif"/></alternatives></inline-formula> (both are words over <inline-formula id="IEq388"><alternatives><tex-math id="M843">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M844"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq388.gif"/></alternatives></inline-formula>) is a sequence of pairs (aka <bold>alignment columns</bold>) composed of <inline-formula id="IEq389"><alternatives><tex-math id="M845">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\Sigma \cup \{-\})^2{\setminus } \{(-,-)\}$$\end{document}</tex-math><mml:math id="M846"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo>-</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mo>,</mml:mo><mml:mo>-</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq389.gif"/></alternatives></inline-formula> such that removing − from the words composed of the first (resp. second) letter of all pairs yields <inline-formula id="IEq390"><alternatives><tex-math id="M847">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M848"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq390.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq391"><alternatives><tex-math id="M849">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M850"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq391.gif"/></alternatives></inline-formula>). Let <inline-formula id="IEq392"><alternatives><tex-math id="M851">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M852"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq392.gif"/></alternatives></inline-formula> be a pair in the alignment. We say <inline-formula id="IEq393"><alternatives><tex-math id="M853">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M854"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq393.gif"/></alternatives></inline-formula> is a match if <inline-formula id="IEq394"><alternatives><tex-math id="M855">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M856"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq394.gif"/></alternatives></inline-formula> equals to <inline-formula id="IEq395"><alternatives><tex-math id="M857">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M858"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq395.gif"/></alternatives></inline-formula>, an insertion if <inline-formula id="IEq396"><alternatives><tex-math id="M859">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M860"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq396.gif"/></alternatives></inline-formula> is -, a deletion if <inline-formula id="IEq397"><alternatives><tex-math id="M861">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M862"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq397.gif"/></alternatives></inline-formula> is -, and a mismatch otherwise.</p>
        <p>For simplicity, we begin our discussion with <bold>linear gap cost</bold> scoring models, where the score of an alignment <inline-formula id="IEq398"><alternatives><tex-math id="M863">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M864"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq398.gif"/></alternatives></inline-formula> is defined by gap cost <inline-formula id="IEq399"><alternatives><tex-math id="M865">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M866"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq399.gif"/></alternatives></inline-formula> and an <bold>elementwise score</bold>
<inline-formula id="IEq400"><alternatives><tex-math id="M867">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma :\Sigma ^2 \rightarrow \mathbb {R}$$\end{document}</tex-math><mml:math id="M868"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq400.gif"/></alternatives></inline-formula>, as<disp-formula id="Equ35"><alternatives><tex-math id="M869">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {score}} {(\mathcal {A})}=\sum _{i: A_i \,\text {match}} \sigma (A_i) +\# {\text {gaps}}(\mathcal {A}) \gamma , \end{aligned}$$\end{document}</tex-math><mml:math id="M870" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtext>score</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>match</mml:mtext></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>#</mml:mo><mml:mtext>gaps</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>γ</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ35.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq401"><alternatives><tex-math id="M871">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\# {\text {gaps}}(\mathcal {A})}$$\end{document}</tex-math><mml:math id="M872"><mml:mrow><mml:mo>#</mml:mo><mml:mtext>gaps</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq401.gif"/></alternatives></inline-formula> denotes the number of insertions and deletions in <inline-formula id="IEq402"><alternatives><tex-math id="M873">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M874"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq402.gif"/></alternatives></inline-formula>.</p>
        <p>Consider two RNA sequences AAACUGG and ACGACGC ( <inline-formula id="IEq403"><alternatives><tex-math id="M875">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma =\{\texttt {A},\texttt {C},\texttt {G},\texttt {U} \}$$\end{document}</tex-math><mml:math id="M876"><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq403.gif"/></alternatives></inline-formula> ). Assuming similarity scores 2 for matching, and uniformly <inline-formula id="IEq404"><alternatives><tex-math id="M877">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-1$$\end{document}</tex-math><mml:math id="M878"><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq404.gif"/></alternatives></inline-formula> for insertion and deletion, their alignment<disp-formula id="Equ36"><alternatives><tex-math id="M879">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \texttt {A} _1 \texttt {A} _2 - - \texttt {A} _3 \texttt {C} _4 \texttt {U} _5 \texttt {G} _6 \texttt {G} _7 -\\ - \texttt {A} _1 \texttt {C} _2 \texttt {G} _3 \texttt {A} _4 \texttt {G} _5 - - \texttt {G} _6 \texttt {C} _7 \end{aligned}$$\end{document}</tex-math><mml:math id="M880" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">U</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>-</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ36.gif" position="anchor"/></alternatives></disp-formula>has a score of <inline-formula id="IEq405"><alternatives><tex-math id="M881">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$6-3-3=0$$\end{document}</tex-math><mml:math id="M882"><mml:mrow><mml:mn>6</mml:mn><mml:mo>-</mml:mo><mml:mn>3</mml:mn><mml:mo>-</mml:mo><mml:mn>3</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq405.gif"/></alternatives></inline-formula> due to three matches, three insertions, and three deletions.</p>
        <p>The <bold>alignment problem</bold> takes two sequences, denoted <inline-formula id="IEq406"><alternatives><tex-math id="M883">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M884"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq406.gif"/></alternatives></inline-formula> of length <italic>n</italic> and <inline-formula id="IEq407"><alternatives><tex-math id="M885">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M886"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq407.gif"/></alternatives></inline-formula> of length <italic>m</italic>, and an elementwise score <inline-formula id="IEq408"><alternatives><tex-math id="M887">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M888"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq408.gif"/></alternatives></inline-formula>. Assuming that <inline-formula id="IEq409"><alternatives><tex-math id="M889">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M890"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq409.gif"/></alternatives></inline-formula> defines a similarity, it asks for maximizing the <inline-formula id="IEq410"><alternatives><tex-math id="M891">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {score}} (\mathcal {A})$$\end{document}</tex-math><mml:math id="M892"><mml:mrow><mml:mtext>score</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq410.gif"/></alternatives></inline-formula> over all alignments and an optimal alignment <inline-formula id="IEq411"><alternatives><tex-math id="M893">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}^*$$\end{document}</tex-math><mml:math id="M894"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo>∗</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq411.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Modeling alignment</italic> We model this problem by introducing one variable <inline-formula id="IEq412"><alternatives><tex-math id="M895">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M896"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq412.gif"/></alternatives></inline-formula> per position <italic>i</italic> of the first sequence, whose values indicate their alignment to positions in the second sequence. Before stating our model, we need to resolve a significant issue with this idea. If we express assignments (match/mismatch) between positions <italic>i</italic> of <inline-formula id="IEq413"><alternatives><tex-math id="M897">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M898"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq413.gif"/></alternatives></inline-formula> and <italic>j</italic> of <inline-formula id="IEq414"><alternatives><tex-math id="M899">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M900"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq414.gif"/></alternatives></inline-formula> directly as assignment of <italic>j</italic> to <inline-formula id="IEq415"><alternatives><tex-math id="M901">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M902"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq415.gif"/></alternatives></inline-formula> (<inline-formula id="IEq416"><alternatives><tex-math id="M903">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i=j$$\end{document}</tex-math><mml:math id="M904"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq416.gif"/></alternatives></inline-formula>) then how do we express deletions of <italic>i</italic>? Naively introducing a <italic>special</italic> value for deletion, e.g. <inline-formula id="IEq417"><alternatives><tex-math id="M905">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bot :=m+1$$\end{document}</tex-math><mml:math id="M906"><mml:mrow><mml:mi>⊥</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq417.gif"/></alternatives></inline-formula>, makes it <italic>difficult</italic> to express the <bold>noncrossing condition</bold> on assignments, namely the positions <italic>j</italic> of <inline-formula id="IEq418"><alternatives><tex-math id="M907">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M908"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq418.gif"/></alternatives></inline-formula> can be assigned to positions <italic>i</italic> of <inline-formula id="IEq419"><alternatives><tex-math id="M909">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M910"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq419.gif"/></alternatives></inline-formula> in increasing order (<inline-formula id="IEq420"><alternatives><tex-math id="M911">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&gt;i'$$\end{document}</tex-math><mml:math id="M912"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq420.gif"/></alternatives></inline-formula> implies <inline-formula id="IEq421"><alternatives><tex-math id="M913">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j&gt;j'$$\end{document}</tex-math><mml:math id="M914"><mml:mrow><mml:mi>j</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq421.gif"/></alternatives></inline-formula>). More precisely, naive encoding introduces inequality-like constraints between all pairs of variables <inline-formula id="IEq422"><alternatives><tex-math id="M915">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M916"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq422.gif"/></alternatives></inline-formula> and <inline-formula id="IEq423"><alternatives><tex-math id="M917">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i'}$$\end{document}</tex-math><mml:math id="M918"><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq423.gif"/></alternatives></inline-formula> (<inline-formula id="IEq424"><alternatives><tex-math id="M919">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i&lt;i'\le n$$\end{document}</tex-math><mml:math id="M920"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq424.gif"/></alternatives></inline-formula>).</p>
        <p>Instead, following [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>], we model the deletion of a position <italic>i</italic> by assigning the same value to <inline-formula id="IEq425"><alternatives><tex-math id="M921">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M922"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq425.gif"/></alternatives></inline-formula> and <inline-formula id="IEq426"><alternatives><tex-math id="M923">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1}$$\end{document}</tex-math><mml:math id="M924"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq426.gif"/></alternatives></inline-formula>. This keeps the assigned values in increasing order and allows a unique representation of alignments by assignments. To further facilitate modeling, we introduce <italic>sentinel</italic> variables <inline-formula id="IEq427"><alternatives><tex-math id="M925">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_0=0$$\end{document}</tex-math><mml:math id="M926"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq427.gif"/></alternatives></inline-formula> and <inline-formula id="IEq428"><alternatives><tex-math id="M927">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{n+1}=m+1$$\end{document}</tex-math><mml:math id="M928"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq428.gif"/></alternatives></inline-formula>. As illustrated in Fig. <xref rid="Fig6" ref-type="fig">6</xref>, our example alignment is then encoded by the assignment<disp-formula id="Equ37"><alternatives><tex-math id="M929">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \begin{array}{c|ccccccccc} i &amp;{} 0 &amp;{} 1 &amp;{} 2 &amp;{} 3 &amp;{} 4 &amp;{} 5 &amp;{} 6 &amp;{} 7 &amp;{} 8 \\ \hline x_i &amp;{} 0 &amp;{} 0 &amp;{} 1 &amp;{} 4 &amp;{} 5 &amp;{} 5 &amp;{} 5 &amp;{} 6 &amp;{} 8 \end{array}. \end{aligned}$$\end{document}</tex-math><mml:math id="M930" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mtable columnlines="solid none none none none none none none none none" rowlines="solid none"><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>2</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>3</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>4</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>6</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>7</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>8</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>4</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>6</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>8</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ37.gif" position="anchor"/></alternatives></disp-formula>With this idea (illustrated in Fig. <xref rid="Fig6" ref-type="fig">6</xref>), the feature network <inline-formula id="IEq429"><alternatives><tex-math id="M931">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {ali}}$$\end{document}</tex-math><mml:math id="M932"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq429.gif"/></alternatives></inline-formula> is formalized by<list list-type="bullet"><list-item><p id="Par165"><inline-formula id="IEq430"><alternatives><tex-math id="M933">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {ali}}=\{X_0,\ldots , X_{n+1}\}$$\end{document}</tex-math><mml:math id="M934"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq430.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par166"><inline-formula id="IEq431"><alternatives><tex-math id="M935">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {ali}}=\{0\}\times \{0,\ldots ,m\}^n \times \{m+1\}$$\end{document}</tex-math><mml:math id="M936"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq431.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par167"><inline-formula id="IEq432"><alternatives><tex-math id="M937">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {ali}}=\{{\text {\textsf{Leq}}}_{[X_{i-1},X_i]} \mid i\in [2, n]\}$$\end{document}</tex-math><mml:math id="M938"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Leq</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq432.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par168"><inline-formula id="IEq433"><alternatives><tex-math id="M939">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {ali}}=\{F_{\text {match}}, F_{\text {insertion}}, F_{\text {deletion}}\}$$\end{document}</tex-math><mml:math id="M940"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>insertion</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>deletion</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq433.gif"/></alternatives></inline-formula> with<list list-type="bullet"><list-item><p id="Par169"><inline-formula id="IEq434"><alternatives><tex-math id="M941">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {match}}=\{{\text {\textsf{Match}}}_{[X_i]}\mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M942"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Match</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq434.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par170"><inline-formula id="IEq435"><alternatives><tex-math id="M943">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {deletion}}=\{{\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}\mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M944"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>deletion</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq435.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par171"><inline-formula id="IEq436"><alternatives><tex-math id="M945">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {insertion}}=\{{\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}\mid i\in [1,n+1]\}$$\end{document}</tex-math><mml:math id="M946"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>insertion</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq436.gif"/></alternatives></inline-formula>;</p></list-item></list></p></list-item></list>The constraint <inline-formula id="IEq437"><alternatives><tex-math id="M947">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Leq}}}_{[X_{i-1}, X_i]}:(x_{i-1}, x_i)\mapsto (x_{i-1}\le x_i)$$\end{document}</tex-math><mml:math id="M948"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Leq</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>↦</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq437.gif"/></alternatives></inline-formula> ensures an increasing order of the values in the assignment. The network functions express the alignment score:<disp-formula id="Equ38"><alternatives><tex-math id="M949">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{Match}}}_{[X_{i-1},X_i]}(x_{i-1},x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \sigma (a [i],b [x_i]) &amp;{} x_{i-1}&lt;x_i \\ 0 &amp;{} \text {otherwise} \end{array}\right. } \\&amp;{\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \gamma &amp;{} x_{i-1}=x_i \\ 0 &amp;{} \text {otherwise} \end{array}\right. } \\&amp;{\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}(x_{i-1}, x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \gamma (x_i - x_{i-1} -1) &amp;{} x_{i-1}\ne x_i \\ 0 &amp;{} \text {otherwise.} \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M950" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Match</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>γ</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>γ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise.</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ38.gif" position="anchor"/></alternatives></disp-formula><bold><italic>Efficient solving</italic></bold> Infrared ’s general solving mechanism computes alignments based on this model in <inline-formula id="IEq438"><alternatives><tex-math id="M951">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \cdot m^2)$$\end{document}</tex-math><mml:math id="M952"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq438.gif"/></alternatives></inline-formula> time, dominating the <inline-formula id="IEq439"><alternatives><tex-math id="M953">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm)$$\end{document}</tex-math><mml:math id="M954"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq439.gif"/></alternatives></inline-formula> time for the traceback, and <inline-formula id="IEq440"><alternatives><tex-math id="M955">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm)$$\end{document}</tex-math><mml:math id="M956"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq440.gif"/></alternatives></inline-formula> space following Propositions <xref ref-type="sec" rid="FPar23">4</xref> and <xref ref-type="sec" rid="FPar25">5</xref> (treewidth 1; <italic>n</italic> variables with domains of size <italic>m</italic>; <inline-formula id="IEq441"><alternatives><tex-math id="M957">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M958"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq441.gif"/></alternatives></inline-formula> functions, each evaluated in constant time).</p>
        <p>Note that while this automatic solution is efficient, it is still more costly than the known dynamic programming alignment algorithms by a linear factor. (In more detail, it does not profit from the linear cost of insertion; one could, within the same complexity, encode nonlinear insertion cost by modifying the functions <inline-formula id="IEq442"><alternatives><tex-math id="M959">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Insertion}}}$$\end{document}</tex-math><mml:math id="M960"><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq442.gif"/></alternatives></inline-formula>.) This issue has been discussed and solved before for the case of sequence alignment based on the presented model [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]; essentially it can be solved by applying DP to process single bags. Resolving this issue in broader generality is an open problem, whereas in principle the known specific solutions for sequence alignment can be implemented in the framework.</p>
        <p>In practice, this issue is strongly alleviated by <italic>banding strategies</italic> [<xref ref-type="bibr" rid="CR44">44</xref>] that limit the domain size to <inline-formula id="IEq443"><alternatives><tex-math id="M961">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu&lt;\!&lt;m$$\end{document}</tex-math><mml:math id="M962"><mml:mrow><mml:mi>μ</mml:mi><mml:mo>&lt;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq443.gif"/></alternatives></inline-formula>; this reduces the complexity to <inline-formula id="IEq444"><alternatives><tex-math id="M963">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \mu ^2)$$\end{document}</tex-math><mml:math id="M964"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq444.gif"/></alternatives></inline-formula> time (and <inline-formula id="IEq445"><alternatives><tex-math id="M965">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \mu )$$\end{document}</tex-math><mml:math id="M966"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>μ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq445.gif"/></alternatives></inline-formula> space).</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Model extensions and advanced topics</title>
    <sec id="Sec20">
      <title>Sequence alignment with affine gap cost</title>
      <p id="Par174">For more realistic alignments, the cost of consecutive runs of insertions and deletions (aka <bold>gaps</bold>) is scored in a nonlinear fashion; e.g. <italic>k</italic> consecutive insertions are evolutionarily <italic>less costly</italic> than <italic>k</italic> independent insertions. This motivates redefining the score of an alignment <inline-formula id="IEq446"><alternatives><tex-math id="M967">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M968"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq446.gif"/></alternatives></inline-formula>:<disp-formula id="Equ39"><alternatives><tex-math id="M969">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {score}} '(\mathcal {A})=\sum _{i: A_i \,\text {match}} \sigma (A_i) + {\text {gapcost}}(\mathcal {A}), \end{aligned}$$\end{document}</tex-math><mml:math id="M970" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mrow><mml:mtext>score</mml:mtext></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>match</mml:mtext></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mtext>gapcost</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ39.gif" position="anchor"/></alternatives></disp-formula>where generally <inline-formula id="IEq447"><alternatives><tex-math id="M971">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {gapcost}}(\mathcal {A}) = \sum _{\text {gap of length}\, \ell \,\text {in}\, \mathcal {A}} g(\ell ).$$\end{document}</tex-math><mml:math id="M972"><mml:mrow><mml:mtext>gapcost</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mtext>gap of length</mml:mtext><mml:mspace width="0.166667em"/><mml:mi>ℓ</mml:mi><mml:mspace width="0.166667em"/><mml:mtext>in</mml:mtext><mml:mspace width="0.166667em"/><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq447.gif"/></alternatives></inline-formula> For <inline-formula id="IEq448"><alternatives><tex-math id="M973">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g(\ell ):=\gamma \ell$$\end{document}</tex-math><mml:math id="M974"><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mi>ℓ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq448.gif"/></alternatives></inline-formula>, this score degenerates to the case of linear gap cost. The most prominent case is <bold>affine gap cost</bold>, where <inline-formula id="IEq449"><alternatives><tex-math id="M975">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g(\ell ):=\beta + \gamma \ell$$\end{document}</tex-math><mml:math id="M976"><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi><mml:mi>ℓ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq449.gif"/></alternatives></inline-formula>, distinguishing gap opening <inline-formula id="IEq450"><alternatives><tex-math id="M977">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M978"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq450.gif"/></alternatives></inline-formula> from gap extension cost <inline-formula id="IEq451"><alternatives><tex-math id="M979">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M980"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq451.gif"/></alternatives></inline-formula>.</p>
      <p id="Par175">Underlining the asymmetry of <inline-formula id="IEq452"><alternatives><tex-math id="M981">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {ali}$$\end{document}</tex-math><mml:math id="M982"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq452.gif"/></alternatives></inline-formula>, we could extend the model to arbitrary cost of insertions by redefining <inline-formula id="IEq453"><alternatives><tex-math id="M983">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i):= g(x_i-x_{i-1}-1)$$\end{document}</tex-math><mml:math id="M984"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq453.gif"/></alternatives></inline-formula>; however, modeling affine cost for deletions cannot be expressed in a direct modification of <inline-formula id="IEq454"><alternatives><tex-math id="M985">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i)$$\end{document}</tex-math><mml:math id="M986"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq454.gif"/></alternatives></inline-formula> since we lack information to distinguish gap opening and extension.</p>
      <p id="Par176">One can envision at least two possible fixes. First, we can replace the binary deletion network functions with ternary functions that depend on <inline-formula id="IEq455"><alternatives><tex-math id="M987">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-2},X_{i-1},X_i$$\end{document}</tex-math><mml:math id="M988"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq455.gif"/></alternatives></inline-formula>. This extension comes at the price of increasing the tree width by 1 (and thus the complexity by a further factor of <italic>m</italic>.) Second, we can introduce additional Boolean variables <inline-formula id="IEq456"><alternatives><tex-math id="M989">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M990"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq456.gif"/></alternatives></inline-formula> to reflect the matching state at position <italic>i</italic>: <inline-formula id="IEq457"><alternatives><tex-math id="M991">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M992"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq457.gif"/></alternatives></inline-formula> is assigned to <inline-formula id="IEq458"><alternatives><tex-math id="M993">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=1$$\end{document}</tex-math><mml:math id="M994"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq458.gif"/></alternatives></inline-formula> if <italic>i</italic> is matched; <inline-formula id="IEq459"><alternatives><tex-math id="M995">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=0$$\end{document}</tex-math><mml:math id="M996"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq459.gif"/></alternatives></inline-formula>, if <italic>i</italic> is deleted. In turn, the deletion function can be modified to depend on <inline-formula id="IEq460"><alternatives><tex-math id="M997">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1},$$\end{document}</tex-math><mml:math id="M998"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq460.gif"/></alternatives></inline-formula>
<inline-formula id="IEq461"><alternatives><tex-math id="M999">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1000"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq461.gif"/></alternatives></inline-formula> and <inline-formula id="IEq462"><alternatives><tex-math id="M1001">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_{i-1}$$\end{document}</tex-math><mml:math id="M1002"><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq462.gif"/></alternatives></inline-formula>:<disp-formula id="Equ40"><alternatives><tex-math id="M1003">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; {\text{Deletion}}_{{\left[ {X_{{i - 1}} ,X_{i} ,Y_{{i - 1}} } \right]}} \,(x_{{i - 1}} ,x_{i} ,y_{{i - 1}} )\, \\ &amp;\quad= \,\left\{ {\begin{array}{*{20}l} {\beta + \gamma } \hfill &amp; {x_{{i - 1}} = x_{i} \,{\text{and}}\,y_{{i - 1}} = 0} \hfill \\ \beta \hfill &amp; {x_{{i - 1}} = x_{i} \,{\text{and}}\,y_{{i - 1}} = 1} \hfill \\ 0 \hfill &amp; {{\text{otherwise}}{\text{.}}} \hfill \\ \end{array} } \right. \end{aligned}$$\end{document}</tex-math><mml:math id="M1004" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext>Deletion</mml:mtext><mml:mfenced close="]" open="["><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>β</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ40.gif" position="anchor"/></alternatives></disp-formula><bold><italic>Complexity</italic></bold> For the first idea, we derive a time complexity of <inline-formula id="IEq463"><alternatives><tex-math id="M1005">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm^3)$$\end{document}</tex-math><mml:math id="M1006"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq463.gif"/></alternatives></inline-formula> (Prop. <xref ref-type="sec" rid="FPar23">4</xref>), since the treewidth is 2. In the second model, adding Boolean variables (and ternary constraints to relate them to the <italic>X</italic> variables) technically increases the treewidth, but since the variables <inline-formula id="IEq464"><alternatives><tex-math id="M1007">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1008"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq464.gif"/></alternatives></inline-formula> have a domain size of 2, in contrast to the linear domain size of the variables <inline-formula id="IEq465"><alternatives><tex-math id="M1009">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1010"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq465.gif"/></alternatives></inline-formula>, their effect on the complexity is much lower (in this case, even constant in sequence length).</p>
      <p id="Par177">Here, the direct application of Proposition <xref ref-type="sec" rid="FPar23">4</xref> would strongly overestimate; instead we follow the argumentation of Section “Complexity analysis for nonuniform domain sizes”. The introduced <inline-formula id="IEq466"><alternatives><tex-math id="M1011">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1012"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq466.gif"/></alternatives></inline-formula> variables each correspond to the <inline-formula id="IEq467"><alternatives><tex-math id="M1013">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1014"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq467.gif"/></alternatives></inline-formula> variable of the same index. Collapsing the nodes of these corresponding variables in the dependency graph, let us us decompose it with width 1. Thus, we bound the time complexity by <inline-formula id="IEq468"><alternatives><tex-math id="M1015">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \cdot m^2 2^2)$$\end{document}</tex-math><mml:math id="M1016"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq468.gif"/></alternatives></inline-formula>; see also our discussion of the linear case. The <italic>Y</italic> variables thus contribute a constant factor of 4, comparable to the overhead of Gotoh’s algorithm [<xref ref-type="bibr" rid="CR43">43</xref>] over linear gap cost alignment (approximately factor 3). Thus, the second model improves the first one by a linear factor—intuitively, it allows sharing Boolean variables between bags instead of variables of linear domains.</p>
    </sec>
    <sec id="Sec21">
      <title>From sequence alignment to pseudoknot sequence-structure alignment</title>
      <p id="Par178">
        <fig id="Fig7">
          <label>Fig. 7</label>
          <caption>
            <p>Modeling sequence structure alignment. Example of a valid assignment and corresponding alignment with a pseudoknotted structure. The model contains one network function <inline-formula id="IEq469"><alternatives><tex-math id="M1017">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPMatch}}}$$\end{document}</tex-math><mml:math id="M1018"><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq469.gif"/></alternatives></inline-formula> per input base pair (arcs on top). These functions contribute <inline-formula id="IEq470"><alternatives><tex-math id="M1019">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M1020"><mml:mi>τ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq470.gif"/></alternatives></inline-formula> for matches to canonical bases (dashed arcs)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig7_HTML" id="MO15"/>
        </fig>
      </p>
      <p id="Par179">We will develop Infrared models for RNA alignment, where the first RNA is annotated by a potentially crossing secondary structure. We build on the previously described sequence alignment model <inline-formula id="IEq471"><alternatives><tex-math id="M1021">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{ali}$$\end{document}</tex-math><mml:math id="M1022"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mi mathvariant="italic">ali</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq471.gif"/></alternatives></inline-formula>. Recall our definition of RNA secondary structure from Section “RNA design”; here, we will explicitly consider <italic>general</italic> secondary structures, where base pairs can cross and thereby form arbitrary pseudoknots. This means that we are solving the essentially same optimization problem as LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]. While LicoRNA implements hand-crafted, specialized dynamic programming algorithms, Infrared automatically derives closely related algorithms from a network model, typically from less than 100 lines of Python code. These algorithms solve the pseudoknotted RNA alignment problem efficiently for the same fixed treewidth parameter.</p>
      <p id="Par180">Given are two RNA sequences <italic>a</italic> and <italic>b</italic> of respective length <italic>n</italic> and <italic>m</italic>, additionally a general (i.e. not necessarily noncrossing, potentially pseudoknotted) RNA secondary structure <italic>S</italic> of length <italic>n</italic>; <italic>S</italic> is also called <bold>arc-annotation</bold> of <inline-formula id="IEq472"><alternatives><tex-math id="M1023">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M1024"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq472.gif"/></alternatives></inline-formula>.</p>
      <p id="Par181">We are interested in optimizing a type of alignment score that takes the structural relations due to the arc annotation into account; see Fig. <xref rid="Fig7" ref-type="fig">7</xref>. To demonstrate the principle, we extend the sequence alignment score of the previous section by an <bold>arc match bonus</bold>
<inline-formula id="IEq473"><alternatives><tex-math id="M1025">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M1026"><mml:mi>τ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq473.gif"/></alternatives></inline-formula>. Let us thus define our <bold>sequence structure alignment score</bold> by<disp-formula id="Equ41"><alternatives><tex-math id="M1027">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; {\text{score}}_{S} ({\mathcal{A}})\, = \,{\text{score}}({\mathcal{A}})\, \\ &amp;\quad+ \,\sum\limits_{{\left( {i,j} \right) \in S}} {\left\{ {\begin{array}{*{20}c} \tau &amp; {{\mathcal{A}}{\text{ matches }}i {\text{ to }}i^{\prime}} \\ {} &amp; {{\text{and }}j{\text{ to }}j^{\prime};(b[i^{\prime}],b[j^{\prime}]) \in {\mathcal{B}}} \\ 0 &amp; {{\text{otherwise}},} \\ \end{array} } \right.} \end{aligned}$$\end{document}</tex-math><mml:math id="M1028" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext>score</mml:mtext><mml:mi>S</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mtext>score</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>+</mml:mo><mml:mspace width="0.166667em"/><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>τ</mml:mi></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>matches</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mi>i</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>to</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mtext>and</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mi>j</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>to</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ41.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq474"><alternatives><tex-math id="M1029">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {B}$$\end{document}</tex-math><mml:math id="M1030"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq474.gif"/></alternatives></inline-formula> is the set of canonical base pairs (Sec. “RNA design”).</p>
      <sec id="FPar34">
        <title>Problem 5</title>
        <p id="Par182">[General sequence-structure alignment] Given sequences <italic>a</italic>, and <italic>b</italic> annotated by <italic>S</italic>, the <bold>sequence structure alignment problem</bold> asks for a sequence alignment of <italic>a</italic> and <italic>b</italic> (Def. <xref ref-type="sec" rid="FPar33">13</xref>) that optimizes the sequence structure alignment score <inline-formula id="IEq475"><alternatives><tex-math id="M1031">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\text {score}}_S} (\mathcal {A})$$\end{document}</tex-math><mml:math id="M1032"><mml:mrow><mml:msub><mml:mtext>score</mml:mtext><mml:mi>S</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq475.gif"/></alternatives></inline-formula>.</p>
        <p>Our feature network model <inline-formula id="IEq476"><alternatives><tex-math id="M1033">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {sali}$$\end{document}</tex-math><mml:math id="M1034"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>sali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq476.gif"/></alternatives></inline-formula> directly builds on <inline-formula id="IEq477"><alternatives><tex-math id="M1035">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {ali}$$\end{document}</tex-math><mml:math id="M1036"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq477.gif"/></alternatives></inline-formula>, extending it by network functions to encode the structure component of the score. As discussed in the previous subsection (for the purpose of modeling affine gap cost), we introduce Boolean variables <inline-formula id="IEq478"><alternatives><tex-math id="M1037">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1038"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq478.gif"/></alternatives></inline-formula> to indicate the match of position <italic>i</italic> in <inline-formula id="IEq479"><alternatives><tex-math id="M1039">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M1040"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq479.gif"/></alternatives></inline-formula> since they let us express the arc match bonus more efficiently. We obtain<list list-type="bullet"><list-item><p id="Par184"><inline-formula id="IEq480"><alternatives><tex-math id="M1041">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}_\text {sali} = \mathcal {X}_\text {ali}\cup \{Y_1,\dots ,Y_n\}$$\end{document}</tex-math><mml:math id="M1042"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq480.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par185"><inline-formula id="IEq481"><alternatives><tex-math id="M1043">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D}_\text {sali}$$\end{document}</tex-math><mml:math id="M1044"><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>sali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq481.gif"/></alternatives></inline-formula> extends <inline-formula id="IEq482"><alternatives><tex-math id="M1045">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D}_\text {ali}$$\end{document}</tex-math><mml:math id="M1046"><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq482.gif"/></alternatives></inline-formula> by Boolean domains {0,1} for all <inline-formula id="IEq483"><alternatives><tex-math id="M1047">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1048"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq483.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par186"><inline-formula id="IEq484"><alternatives><tex-math id="M1049">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_\text {sali} = \mathcal {C}_\text {ali}\cup \mathcal {C}_\text {relXY}$$\end{document}</tex-math><mml:math id="M1050"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>relXY</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq484.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par187"><inline-formula id="IEq485"><alternatives><tex-math id="M1051">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}_\text {sali} = \mathcal {F}_\text {ali}\cup \{F_\text {bpmatch}\}$$\end{document}</tex-math><mml:math id="M1052"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>bpmatch</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq485.gif"/></alternatives></inline-formula>;</p></list-item></list>where <inline-formula id="IEq486"><alternatives><tex-math id="M1053">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_\text {relXY}$$\end{document}</tex-math><mml:math id="M1054"><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>relXY</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq486.gif"/></alternatives></inline-formula> is a set of constraints that relate the variables <inline-formula id="IEq487"><alternatives><tex-math id="M1055">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1056"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq487.gif"/></alternatives></inline-formula>, <inline-formula id="IEq488"><alternatives><tex-math id="M1057">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1}$$\end{document}</tex-math><mml:math id="M1058"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq488.gif"/></alternatives></inline-formula> and <inline-formula id="IEq489"><alternatives><tex-math id="M1059">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1060"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq489.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq490"><alternatives><tex-math id="M1061">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=1 \iff x_{i-1}&lt;x_i$$\end{document}</tex-math><mml:math id="M1062"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>⟺</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq490.gif"/></alternatives></inline-formula> (for all <inline-formula id="IEq491"><alternatives><tex-math id="M1063">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n$$\end{document}</tex-math><mml:math id="M1064"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq491.gif"/></alternatives></inline-formula>) and <inline-formula id="IEq492"><alternatives><tex-math id="M1065">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_\text {bpmatch}=\{{\text {\textsf{BPMatch}}}_{[X_i,X_j,Y_i,Y_j]} \mid (i,j)\in S\}$$\end{document}</tex-math><mml:math id="M1066"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>bpmatch</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq492.gif"/></alternatives></inline-formula><disp-formula id="Equ42"><alternatives><tex-math id="M1067">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{BPMatch}}}_{[X_i,X_j,Y_i,Y_j]}(x_i,x_j,y_i,y_j) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \tau &amp;{} y_i=1, y_j=1, \text { and } (b[x_i],b[x_j]) \in \mathcal {B} \\ 0 &amp;{} \text {otherwise}. \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M1068" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>τ</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.333333em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ42.gif" position="anchor"/></alternatives></disp-formula>Note that <inline-formula id="IEq493"><alternatives><tex-math id="M1069">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPMatch}}}$$\end{document}</tex-math><mml:math id="M1070"><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq493.gif"/></alternatives></inline-formula> (for an arc <inline-formula id="IEq494"><alternatives><tex-math id="M1071">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)\in S$$\end{document}</tex-math><mml:math id="M1072"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq494.gif"/></alternatives></inline-formula>) cannot be defined in dependency of only <inline-formula id="IEq495"><alternatives><tex-math id="M1073">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1074"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq495.gif"/></alternatives></inline-formula> and <inline-formula id="IEq496"><alternatives><tex-math id="M1075">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M1076"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq496.gif"/></alternatives></inline-formula>, since <inline-formula id="IEq497"><alternatives><tex-math id="M1077">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(b[x_i],b[x_j]) \in \mathcal {B}$$\end{document}</tex-math><mml:math id="M1078"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq497.gif"/></alternatives></inline-formula> could hold in cases where <italic>i</italic> or <italic>j</italic> are deleted.</p>
        <p><bold><italic>Complexity</italic></bold> As in the analysis of Section “Sequence alignment with affine gap cost”, we collapse each pair of nodes of variables <inline-formula id="IEq498"><alternatives><tex-math id="M1079">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1080"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq498.gif"/></alternatives></inline-formula> and <inline-formula id="IEq499"><alternatives><tex-math id="M1081">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1082"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq499.gif"/></alternatives></inline-formula> (of the same index <italic>i</italic>) in the dependency graph. The result is isomorphic to the <italic>structure graph</italic> of RNA <italic>a</italic>, consisting of its nucleotides as nodes, and edges due to its backbone and base pairs. For the treewidth <inline-formula id="IEq500"><alternatives><tex-math id="M1083">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1084"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq500.gif"/></alternatives></inline-formula> of this graph, we derive <inline-formula id="IEq501"><alternatives><tex-math id="M1085">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n2^{w +1}m^{w +1})$$\end{document}</tex-math><mml:math id="M1086"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq501.gif"/></alternatives></inline-formula> time complexity by Corollary <xref ref-type="sec" rid="FPar27">1</xref>.</p>
        <p>Whereas in our models for network parsimony or RNA design the domain size is constantly bounded, here it depends on the input size. Consequently, solving of this RNA alignment problem is not in parameterized complexity class <bold>FPT</bold>, but <bold>XP</bold> (Sec. “Parameterized complexity classes”).</p>
        <p><bold><italic>Discussion</italic></bold> The presented model extension yields an automatically derived solution to the pseudoknot sequence-structure alignment problem with parameterized complexity in the treewidth. Compared to LicoRNA, our algorithms depend on the exact same fixed parameter. Note that, in the current implementation, Infrared’s complexity is worse by a linear factor due to the same reason as we discussed for sequence alignment before. In practice, this is often reduced to a constant factor, namely the band width.</p>
        <p>This is contrasted by general benefits due to the declarative implementation in Infrared (Jupyter notebook). For example, the code is well maintainable, extensible by further constraints and evaluation criteria, and can profit from future developments and optimization of the Infrared system.</p>
      </sec>
    </sec>
    <sec id="Sec22">
      <title>Finite state automata</title>
      <p id="Par192">
        <fig id="Fig8">
          <label>Fig. 8</label>
          <caption>
            <p>Sketch of the 5-state Deterministic finite “Aho-Corasick” automaton accepting the three stop codons UGA, UUA, UUG. We do not draw back-transitions to <inline-formula id="IEq502"><alternatives><tex-math id="M1087">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1088"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq502.gif"/></alternatives></inline-formula>, which occur implicitly for all not explicitly shown cases (i.e.  A,C,G in <inline-formula id="IEq503"><alternatives><tex-math id="M1089">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1090"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq503.gif"/></alternatives></inline-formula>; C in <inline-formula id="IEq504"><alternatives><tex-math id="M1091">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_1$$\end{document}</tex-math><mml:math id="M1092"><mml:msub><mml:mi>q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq504.gif"/></alternatives></inline-formula>, C,G in <inline-formula id="IEq505"><alternatives><tex-math id="M1093">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_2$$\end{document}</tex-math><mml:math id="M1094"><mml:msub><mml:mi>q</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq505.gif"/></alternatives></inline-formula>; and C in <inline-formula id="IEq506"><alternatives><tex-math id="M1095">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_3$$\end{document}</tex-math><mml:math id="M1096"><mml:msub><mml:mi>q</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq506.gif"/></alternatives></inline-formula>). To <italic>forbid</italic>, instead of accept, all of the three stop codons, we complement the language by making all states but <inline-formula id="IEq507"><alternatives><tex-math id="M1097">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_4$$\end{document}</tex-math><mml:math id="M1098"><mml:msub><mml:mi>q</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq507.gif"/></alternatives></inline-formula> accepting</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig8_HTML" id="MO16"/>
        </fig>
      </p>
      <p id="Par193">A common side condition when designing RNA or DNA sequences is to avoid or enforce certain sequence motifs. For example, one could be interested in avoiding stop codons anywhere in the designed sequence (or avoid restriction sites, enforce binding sites...). Such conditions can be generalized in terms of regular languages, accepted by deterministic finite state automata (DFA; Fig. <xref rid="Fig8" ref-type="fig">8</xref>). This idea is well known in constraint programming; for example it is the basis of the global regular language membership constraint [<xref ref-type="bibr" rid="CR45">45</xref>]. In the specific case of sequence design, DFAs have been introduced by [<xref ref-type="bibr" rid="CR46">46</xref>] to perform such tasks efficiently for a set of sequence motifs. We show that finite state automata can be emulated in network models. Remarkably, this allows us to efficiently handle such requirements even in combination with other design objectives; e.g. the automaton model of this section could be merged with our model for multitarget RNA design <inline-formula id="IEq508"><alternatives><tex-math id="M1099">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M1100"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq508.gif"/></alternatives></inline-formula> (Sec. “RNA design”).</p>
      <p id="Par194">The model is a good example for the use of several types of variables, as we are going to introduce, for every sequence position, one variable to model the nucleotide and one to model the automaton state.</p>
      <sec id="FPar35">
        <title>Definition 14</title>
        <p id="Par195">[Deterministic Finite Automaton] A <bold>Deterministic Finite Automaton (DFA)</bold> is a <inline-formula id="IEq509"><alternatives><tex-math id="M1101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$5$$\end{document}</tex-math><mml:math id="M1102"><mml:mrow><mml:mn>5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq509.gif"/></alternatives></inline-formula>-tuple <inline-formula id="IEq510"><alternatives><tex-math id="M1103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {Q},\Sigma ,\delta ,q_0,\mathcal {Q}_F)$$\end{document}</tex-math><mml:math id="M1104"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq510.gif"/></alternatives></inline-formula> with<list list-type="bullet"><list-item><p id="Par196">Finite set of states <inline-formula id="IEq511"><alternatives><tex-math id="M1105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}$$\end{document}</tex-math><mml:math id="M1106"><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq511.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par197">Finite set of symbols <inline-formula id="IEq512"><alternatives><tex-math id="M1107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M1108"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq512.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par198">Transition function <inline-formula id="IEq513"><alternatives><tex-math id="M1109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta :\mathcal {Q}\times \Sigma \rightarrow \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1110"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>:</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq513.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par199">Initial state <inline-formula id="IEq514"><alternatives><tex-math id="M1111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0\in \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1112"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq514.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par200">Set of final, accepting states <inline-formula id="IEq515"><alternatives><tex-math id="M1113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}_F\subset \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1114"><mml:mrow><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo>⊂</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq515.gif"/></alternatives></inline-formula>.</p></list-item></list></p>
        <p>A word <inline-formula id="IEq516"><alternatives><tex-math id="M1115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w=a \ldots w_n$$\end{document}</tex-math><mml:math id="M1116"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mo>…</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq516.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq517"><alternatives><tex-math id="M1117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M1118"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq517.gif"/></alternatives></inline-formula> is accepted by a DFA if there exists a sequence of states <inline-formula id="IEq518"><alternatives><tex-math id="M1119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q=\{q_0,\ldots , q_n\}\subset \mathcal {Q}^{n+1}$$\end{document}</tex-math><mml:math id="M1120"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>⊂</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq518.gif"/></alternatives></inline-formula> starting with initial state <inline-formula id="IEq519"><alternatives><tex-math id="M1121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1122"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq519.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq520"><alternatives><tex-math id="M1123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_n\in \mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1124"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq520.gif"/></alternatives></inline-formula> and <inline-formula id="IEq521"><alternatives><tex-math id="M1125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (q_{i-1}, w_i)=q_i$$\end{document}</tex-math><mml:math id="M1126"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq521.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq522"><alternatives><tex-math id="M1127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i\in [1,n]$$\end{document}</tex-math><mml:math id="M1128"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq522.gif"/></alternatives></inline-formula>.</p>
        <p>By modeling a DFA as a network model, we can use Infrared to sample accepted words. We consider two types of variables, one for the word <inline-formula id="IEq523"><alternatives><tex-math id="M1129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1130"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq523.gif"/></alternatives></inline-formula> and the other for the state sequence <inline-formula id="IEq524"><alternatives><tex-math id="M1131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q$$\end{document}</tex-math><mml:math id="M1132"><mml:mi>q</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq524.gif"/></alternatives></inline-formula>. Given a DFA, the accepted word sampling problem is formalized by the feature network <inline-formula id="IEq525"><alternatives><tex-math id="M1133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {DFA}}$$\end{document}</tex-math><mml:math id="M1134"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq525.gif"/></alternatives></inline-formula> as follows:<list list-type="bullet"><list-item><p id="Par203"><inline-formula id="IEq526"><alternatives><tex-math id="M1135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _\text {DFA}=\{X_1,\ldots ,X_n\}\cup \{Y_0,\ldots ,Y_n\}$$\end{document}</tex-math><mml:math id="M1136"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq526.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par204"><inline-formula id="IEq527"><alternatives><tex-math id="M1137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _\text {DFA}=\Sigma ^n \times \{q_0\} \times \mathcal {Q}^{n-1}\times \mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1138"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq527.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par205"><inline-formula id="IEq528"><alternatives><tex-math id="M1139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _\text {DFA}=\{{\text {\textsf{Transition}}}_{[X_i,Y_{i-1},Y_i]} \mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M1140"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Transition</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq528.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par206"><inline-formula id="IEq529"><alternatives><tex-math id="M1141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _\text {DFA}=\{\}$$\end{document}</tex-math><mml:math id="M1142"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq529.gif"/></alternatives></inline-formula>.</p></list-item></list>The constraint <inline-formula id="IEq530"><alternatives><tex-math id="M1143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Transition}}}_{[X_i, Y_{i-1}, Y_i]}:(x_i,y_{i-1},y_i)\mapsto (y_i=\delta (y_{i-1},x_i))$$\end{document}</tex-math><mml:math id="M1144"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Transition</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>↦</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq530.gif"/></alternatives></inline-formula> encodes the DFA transition function. This ensures that, in each sampled assignment, <inline-formula id="IEq531"><alternatives><tex-math id="M1145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_0\ldots y_n$$\end{document}</tex-math><mml:math id="M1146"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq531.gif"/></alternatives></inline-formula> is the state sequence of the word <inline-formula id="IEq532"><alternatives><tex-math id="M1147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1\ldots x_n$$\end{document}</tex-math><mml:math id="M1148"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq532.gif"/></alternatives></inline-formula>, which is accepted by DFA as the domain of <inline-formula id="IEq533"><alternatives><tex-math id="M1149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_n$$\end{document}</tex-math><mml:math id="M1150"><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq533.gif"/></alternatives></inline-formula> is the set of final states <inline-formula id="IEq534"><alternatives><tex-math id="M1151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1152"><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq534.gif"/></alternatives></inline-formula>.</p>
        <p><bold><italic>Complexity</italic></bold> Again, we collapse the variables <inline-formula id="IEq535"><alternatives><tex-math id="M1153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1154"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq535.gif"/></alternatives></inline-formula> and <inline-formula id="IEq536"><alternatives><tex-math id="M1155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1156"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq536.gif"/></alternatives></inline-formula> for the same <italic>i</italic> in the dependency graph; let <inline-formula id="IEq537"><alternatives><tex-math id="M1157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1158"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq537.gif"/></alternatives></inline-formula> be the treewidth of the collapsed graph. We obtain time complexity <inline-formula id="IEq538"><alternatives><tex-math id="M1159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(4^{w +1}|\mathcal {Q}|^{w +1} n)$$\end{document}</tex-math><mml:math id="M1160"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq538.gif"/></alternatives></inline-formula> by Cor. <xref ref-type="sec" rid="FPar27">1</xref>, where <inline-formula id="IEq539"><alternatives><tex-math id="M1161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w =1$$\end{document}</tex-math><mml:math id="M1162"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq539.gif"/></alternatives></inline-formula> for the pure automaton model (without extensions).</p>
        <p>When forbidding/enforcing motifs in other design settings, e.g. single or multitarget RNA design, the treewidth typically increases since the automaton model causes dependencies between variables of consecutive positions <italic>i</italic> and <inline-formula id="IEq540"><alternatives><tex-math id="M1163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i+1$$\end{document}</tex-math><mml:math id="M1164"><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq540.gif"/></alternatives></inline-formula>, while e.g. RNA design defines dependencies between nonconsecutive positions <italic>i</italic> and <italic>j</italic> for each target base pair (<italic>i</italic>, <italic>j</italic>). Based on this analysis, we achieve efficiency equivalent to that of the hand-crafted algorithm [<xref ref-type="bibr" rid="CR46">46</xref>]. Since the domain size depends on the input size, specifically the number of states, this is another example of solving by Infrared in <bold>XP</bold> (Sec. “Parameterized complexity classes”).</p>
        <p>The complexity due to the automaton should be compared to simpler ideas to enforce/forbid motifs of maximum size <italic>k</italic>. More naively, one could introduce such requirements by <italic>k</italic>-ary constraints on each run of <italic>k</italic> consecutive variables <inline-formula id="IEq541"><alternatives><tex-math id="M1165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i},\dots ,X_{i+k-1}$$\end{document}</tex-math><mml:math id="M1166"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq541.gif"/></alternatives></inline-formula> (for all <inline-formula id="IEq542"><alternatives><tex-math id="M1167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n-k+1$$\end{document}</tex-math><mml:math id="M1168"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq542.gif"/></alternatives></inline-formula>). This idea results in <inline-formula id="IEq543"><alternatives><tex-math id="M1169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(4^k n)$$\end{document}</tex-math><mml:math id="M1170"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>k</mml:mi></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq543.gif"/></alternatives></inline-formula> without additional constraints. Automata thus offer a favorable trade-off between domain size and treewidth/exponent (as advocated in [<xref ref-type="bibr" rid="CR46">46</xref>]). Infrared supports adapting the strategy to the concrete problem.</p>
      </sec>
    </sec>
    <sec id="Sec23">
      <title>Multidimensional Boltzmann sampling</title>
      <p id="Par210">
        <fig id="Fig9">
          <label>Fig. 9</label>
          <caption>
            <p>Multidimensional Boltzmann sampling applied to RNA design. For the example of Fig. <xref rid="Fig5" ref-type="fig">5</xref>, we target G C content 85% and respective energies E1=-40, E2=-40, E3=-30 for the target structures (with tolerances of 5% GC content and 0.5 kcal/mol energy). Infrared ’s multidimensional Boltzmann sampling (MDBS) strategy starts from uniform sampling (weights 0 for every feature). It iteratively generates Boltzmann samples and updates the weights to move the (estimated) expectation closer to the targets. A Accepted samples as well as root mean square distance (RMSD) to the targets during this procedure, which considered over 70,000 total samples to generate 100 targeted samples. B Kernel density estimate plots: distributions of features for uniform sampling (blue) and sampling at the end of the MDBS run (red), where distributions are shifted to the targets (dashed red lines)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig9_HTML" id="MO17"/>
        </fig>
      </p>
      <p id="Par211">
        <fig position="anchor" id="Figi">
          <label>Algorithm 4</label>
          <caption>
            <p>Multidim. Boltzmann sampling</p>
          </caption>
          <graphic position="anchor" xlink:href="13015_2024_258_Figi_HTML" id="MO18"/>
        </fig>
      </p>
      <p id="Par212">Recall that Section “RNA design” demonstrated random generation of solutions by sampling from the Boltzmann distribution defined by multiple features and weights. The histograms from Fig. <xref rid="Fig5" ref-type="fig">5</xref> show the feature distributions resulting from large negative weights for all features in a multitarget RNA design example. In the example, this allows us to produce designs with low target structure energies and G C content.</p>
      <p id="Par213">Substantially extending the level of control, Infrared supports the random generation of objects with narrowly defined target feature values based on multidimensional Boltzmann sampling (MDBS) [<xref ref-type="bibr" rid="CR15">15</xref>]. This technique was successfully demonstrated before in RNA design: generating sequences with defined dinucleotide frequencies [<xref ref-type="bibr" rid="CR47">47</xref>], targeting G C content in single target RNA design by IncaRNAtion [<xref ref-type="bibr" rid="CR48">48</xref>] and generating RNA designs with specific energies of multiple structures and specific G C content by RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
      <p id="Par214"><italic>Problem statement</italic> Concretely, given a network <inline-formula id="IEq544"><alternatives><tex-math id="M1171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M1172"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq544.gif"/></alternatives></inline-formula>, we look at the problem of randomly generating valid assignments <italic>x</italic> that satisfy constraints<disp-formula id="Equ43"><alternatives><tex-math id="M1173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} |F(x)-\tau _F| \le \delta _F, \end{aligned}$$\end{document}</tex-math><mml:math id="M1174" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo></mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>≤</mml:mo></mml:mrow><mml:msub><mml:mi>δ</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ43.gif" position="anchor"/></alternatives></disp-formula>for given target values <inline-formula id="IEq545"><alternatives><tex-math id="M1175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau _F$$\end{document}</tex-math><mml:math id="M1176"><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq545.gif"/></alternatives></inline-formula> and tolerances <inline-formula id="IEq546"><alternatives><tex-math id="M1177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta _F$$\end{document}</tex-math><mml:math id="M1178"><mml:msub><mml:mi>δ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq546.gif"/></alternatives></inline-formula> for all (or a subset) of the features <inline-formula id="IEq547"><alternatives><tex-math id="M1179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M1180"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq547.gif"/></alternatives></inline-formula>. Let us call such assignments <inline-formula id="IEq548"><alternatives><tex-math id="M1181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1182"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq548.gif"/></alternatives></inline-formula>
<bold>-admissible</bold>.</p>
      <p id="Par215"><italic>MDBS strategy and algorithm</italic> As shown in [<xref ref-type="bibr" rid="CR15">15</xref>] the problem can be solved effectively, under certain assumption even with provable efficiency, by MDBS. This strategy combines rejection sampling, which accepts only <inline-formula id="IEq549"><alternatives><tex-math id="M1183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1184"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq549.gif"/></alternatives></inline-formula>-admissible samples, with a learning strategy to maximize its efficiency.</p>
      <p id="Par216">Here, we observe that rejection sampling is most effective, when the targeted values <inline-formula id="IEq550"><alternatives><tex-math id="M1185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau _F$$\end{document}</tex-math><mml:math id="M1186"><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq550.gif"/></alternatives></inline-formula> coincide with the means of the sampled distributions; moreover, these means depend on the feature weights <inline-formula id="IEq551"><alternatives><tex-math id="M1187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1188"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq551.gif"/></alternatives></inline-formula>.</p>
      <p id="Par217">Therefore, Infrared ’s MDBS algorithm (Algorithm 4), starting from initial weights <inline-formula id="IEq552"><alternatives><tex-math id="M1189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1190"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq552.gif"/></alternatives></inline-formula> (by default, <inline-formula id="IEq553"><alternatives><tex-math id="M1191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha =\textbf{0}$$\end{document}</tex-math><mml:math id="M1192"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq553.gif"/></alternatives></inline-formula>), iteratively generates <italic>k</italic>-many samples per round. In every iteration, it tweaks the weights <inline-formula id="IEq554"><alternatives><tex-math id="M1193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1194"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq554.gif"/></alternatives></inline-formula> aiming to shift the sampling means closer to the targets; the update step-size is controlled by the tweaking factor <inline-formula id="IEq555"><alternatives><tex-math id="M1195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M1196"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq555.gif"/></alternatives></inline-formula>. The procedure is repeated until <italic>K</italic>-many <inline-formula id="IEq556"><alternatives><tex-math id="M1197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1198"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq556.gif"/></alternatives></inline-formula>-admissible samples are generated. To stabilize this heuristic strategy, Infrared additionally implements an annealing scheme based on improvement of the root mean square deviation (RMSD) to the targets and controlled by the cooling factor <inline-formula id="IEq557"><alternatives><tex-math id="M1199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Gamma$$\end{document}</tex-math><mml:math id="M1200"><mml:mi mathvariant="normal">Γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq557.gif"/></alternatives></inline-formula>.</p>
      <p id="Par218"><italic>MDBS for RNA design</italic> Fig. <xref rid="Fig9" ref-type="fig">9</xref> illustrates this MDBS strategy for the example of Fig. <xref rid="Fig5" ref-type="fig">5</xref> and specific energy and G C content targets. Showing typical behavior, the strategy improves the RMSD while generating admissible and nonadmissible samples. In this way, it increases the efficiency of generating admissible assignments (Fig. <xref rid="Fig9" ref-type="fig">9</xref>A). Figure <xref rid="Fig9" ref-type="fig">9</xref>B shows how MDBS shifts the multivariate distribution toward the targets (here starting from uniform sampling).</p>
      <p id="Par219"><italic>Targeting by proxy</italic> The multitarget design example showcases an interesting extension of the standard MDBS mechanism. Namely, in this case, we distinguish base pair energy from Turner energy. To target the latter, we use base pair energies as proxies, since they allow much more efficient sampling (and are sufficiently correlated to Turner energies; compare [<xref ref-type="bibr" rid="CR16">16</xref>]). To shift the distributions during the MDBS algorithm, we thus estimate the means of the <italic>Turner energies</italic>; then, based on their difference from the target Turner energies, we update the weights of the corresponding <italic>base pair energy</italic> feature. Our Infrared implementation supports ‘targeting by proxy’ in a generalized way (using a second kind of feature <italic>F</italic> whose evaluations <italic>F</italic>(<italic>x</italic>) are defined explicitly, instead of being induced by their network functions).</p>
      <p id="Par220"><italic>Available code examples</italic> In supplemental online material (Jupyter notebooks), we show the code to produce the samples and plots for Fig. <xref rid="Fig9" ref-type="fig">9</xref>; as a further example, we demonstrate effective random sequence generation targeting all 16 dinucleotide frequencies of a SAM riboswitch (RF00162; from <italic>S. thermophilum</italic>), while maintaining compatibility with its pseudoknotted RNA structure.</p>
    </sec>
  </sec>
  <sec id="Sec24">
    <title>Implementation</title>
    <p id="Par221">
      <fig id="Fig10">
        <label>Fig. 10</label>
        <caption>
          <p>Overview of the Infrared architecture. The C++ <bold>core engine</bold> is connected to a high-end <bold>modeling layer</bold> in Python by a hybrid <bold>connecting layer</bold>. The C++ core implements the computational engine to evaluate forward and traceback algorithms on cluster trees as generic code (e.g. supporting different algebras as evaluation policies; PF for partition function, Arctic for maximization). This optimized low-level layer is exposed to Python using pybind11; the core functionality is moreover extended (by tree decomposition, using module treedecomp, population of the cluster tree...) on the Python side to implement the full computational engine. Finally, the high-level modeling interface of Infrared offers functionality to model and solve feature networks, perform sampling targeting specific features (multidimensional Boltzmann sampling), define custom constrain and function types. Moreover, we include the module rna for RNA-specific functionality</p>
        </caption>
        <graphic xlink:href="13015_2024_258_Fig10_HTML" id="MO19"/>
      </fig>
    </p>
    <p id="Par222">The Infrared software supports declarative modeling of problems as feature networks and treewidth-dependent efficient solving through a high-level Python interface. Figure <xref rid="Fig10" ref-type="fig">10</xref> sketches its architecture. For solving, the software relies on optimized implementations of the presented algorithms in C++. The low-level C++ engine is glued to a high-level ‘modeling’ layer by a pybind11-based C++/Python interface. Thus, Infrared maintains a small algorithmic core in C++ (for high performance), while extending functionality in Python (for increased flexibility). For example, the C++ <bold>core engine</bold> solves cluster trees and focuses on <italic>necessary</italic> functionality, while the construction of the cluster tree from a model, as well as “high-level” functionality such as the declarative composition of models, are implemented in Python.</p>
    <p id="Par223">The C++ code is templated to generically support different function types and evaluation algebras, which keeps the code compact and maintainable; moreover it prepares future extensions of the system. For fast processing of bags, the core engine relies on fast backtracking enumeration of partial assignments (class AssignmentIterator), where constraints and functions are evaluated as early as possible (to avoid unnecessary and redundant computation). Bag processing evaluates constraints (<inline-formula id="IEq558"><alternatives><tex-math id="M1201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {Function&lt;bool&gt;}$$\end{document}</tex-math><mml:math id="M1202"><mml:mrow><mml:mi mathvariant="monospace">Function</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">bool</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq558.gif"/></alternatives></inline-formula>) and functions (<inline-formula id="IEq559"><alternatives><tex-math id="M1203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {Function&lt;double&gt;}$$\end{document}</tex-math><mml:math id="M1204"><mml:mrow><mml:mi mathvariant="monospace">Function</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">double</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq559.gif"/></alternatives></inline-formula>) and, in the forward phase, computes messages, stored in memory as objects of <inline-formula id="IEq560"><alternatives><tex-math id="M1205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {MaterializedFunction&lt;double&gt;}$$\end{document}</tex-math><mml:math id="M1206"><mml:mrow><mml:mi mathvariant="monospace">MaterializedFunction</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">double</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq560.gif"/></alternatives></inline-formula>.</p>
    <p id="Par224">For completion of the Infrared solver, the <bold>connecting layer</bold> exposes the C++ functionality to Python, specializing the templates to optimization (arctic policy) and partition function over real-valued features. Moreover, it extends the core by Python wrapper classes that ‘know’ how to construct cluster trees from feature networks. To prepare the definition of function and constraint classes, it wraps the Boolean and real-valued C++ function classes. Generating tree decompositions is delegated to the module treedecomp. While we provide interfaces to different external tree decomposers and support customization, the implemented default strategy applies a randomized min-fill-in heuristic [<xref ref-type="bibr" rid="CR13">13</xref>] and returns a tree decomposition with heuristically minimized tree width.</p>
    <p id="Par225">Finally, the <bold>modeling interface</bold> layer enables a declarative style of defining feature networks as objects of the class Model through Python code. Adding variables, constraints, and functions supports naturally specifying, but also extending and merging feature networks. From models one can construct solvers to perform different tasks, including optimization, Boltzmann sampling at specified feature weights or targeted sampling; the latter relies on a multidimensional Boltzmann strategy that learns weights to effectively target specific feature values.</p>
    <p id="Par226"><italic>Definition of application-specific constraints and functions</italic> Infrared supports the definition of constraints and functions in Python by special concise syntax via the respective functions def_constraint_class and def_function_class. Examples of their use were given before for defining the constraint NotEquals and network function Card for the introductory graph coloring model. To create Python classes of constraints or network functions, the user calls these functions with the class name and two Python functions. The first function (init) has two roles. It defines the arguments of the constructor and returns the scope (or dependency list) of the constraint or function. The second function (value) defines how the constraint/function is evaluated at specific values of the dependency variables. Using arguments of the same name, information can be passed from initialization to evaluation; e.g. this enables constraint/function type arguments or auxiliary data structures. For clear semantics (while allowing optimizations), we require referential transparency, i.e. the result of the value function must not vary with anything but its arguments.</p>
    <p id="Par227"><italic>Precomputation</italic> The core engine precomputes constraints and network functions when they are added to the cluster tree. For this purpose, they are evaluated for all partial assignments and the results are tabulated (MaterializedFunction). This simple mechanism supports the convenient specification of constraints and functions in Python, while resulting in fast computation times in practice (by significantly reducing the overhead due to the Python computation). From a theoretical perspective, this mechanism preserves the worst case time complexity, since <italic>k</italic>-ary constraints and functions impose a bound on the treewitdh <inline-formula id="IEq561"><alternatives><tex-math id="M1207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w \ge k-1$$\end{document}</tex-math><mml:math id="M1208"><mml:mrow><mml:mi>w</mml:mi><mml:mo>≥</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq561.gif"/></alternatives></inline-formula>. The strategy requires additional space in <inline-formula id="IEq562"><alternatives><tex-math id="M1209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^k\mathfrak {m})$$\end{document}</tex-math><mml:math id="M1210"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msup><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq562.gif"/></alternatives></inline-formula>, for maximum domain size <inline-formula id="IEq563"><alternatives><tex-math id="M1211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d$$\end{document}</tex-math><mml:math id="M1212"><mml:mi>d</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq563.gif"/></alternatives></inline-formula> and <inline-formula id="IEq564"><alternatives><tex-math id="M1213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {m}$$\end{document}</tex-math><mml:math id="M1214"><mml:mi mathvariant="fraktur">m</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq564.gif"/></alternatives></inline-formula> constraints and functions. Space and time consumption due to the precomputation are thus dominated by the solving complexity if <inline-formula id="IEq565"><alternatives><tex-math id="M1215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w &gt; k-1$$\end{document}</tex-math><mml:math id="M1216"><mml:mrow><mml:mi>w</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq565.gif"/></alternatives></inline-formula>. In this way, the strategy is optimized for the typical performance-critical cases. Future implementations can speed up the precomputation by possibly lazy caching mechanisms without changing semantics and the interface.</p>
  </sec>
  <sec id="Sec25">
    <title>Discussion</title>
    <p id="Par228">The Infrared framework was motivated by the success of related technology in solving complex bioinformatics problems; most directly, by our work on multitarget RNA design [<xref ref-type="bibr" rid="CR16">16</xref>]. Thus, the system started out as a library that generalized the fixed-parameter tractable (FPT) sampling algorithm of RNARedprint and its multidimensional Boltzmann sampling strategy. Since then it has been developed into a broadly applicable framework, supporting convenient declarative modeling of problems with multiple features, where models can be solved by a generic treewidth-based algorithm using different algebras. This text was written to supply the reader with a comprehensive discussion of the techniques combined in the Infrared system. In contrast, our book chapter [<xref ref-type="bibr" rid="CR28">28</xref>] focused on coding of design problems in Infrared and did not in-depth discuss Infrared’s methods in favor of an application-oriented introduction. Furthermore, note that we published a book chapter on the first version of RNARedprint [<xref ref-type="bibr" rid="CR49">49</xref>], which did not make use of the Infrared system.</p>
    <p id="Par229">Since the system’s first application for concisely reimplementing RNARedprint with improved functionality and performance, it has proven to be a very useful tool for further algorithmic developments in bioinformatics [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. Other previous work [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR48">48</xref>] could have directly profited from the Infrared framework. For several previous algorithms [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR48">48</xref>], we presented feature network models and discussed their solving complexity. For these examples, the system yields essentially identical algorithms; with the exception of alignment, where Infrared lacks a problem-specific optimization (Secs. “Sequence alignment” and “From sequence alignment to pseudoknot sequence-structure alignment”), which we plan to add in the future. From the well-researched field of network parsimony, we present further examples where the Infrared ’s solving complexity is on par with state-of-the-art algorithms [<xref ref-type="bibr" rid="CR5">5</xref>] (even improving softwired parsimony on binary networks).</p>
    <p id="Par230"><italic>Utiltity for prototyping and practical applications</italic> In summary, these previous works witness the suitability of Infrared for prototyping novel algorithmic ideas; moreover, their benchmark results show the practical utility of the system to solve relevant problem instances. Of particular interest, we show that—for many practically relevant problem instances—the treewidth is sufficiently low to enable effective solving by Infrared.</p>
    <p id="Par231">In addition, we wanted to learn about Infrared ’s practical performance in relation to optimized problem-specific code in a high-performance computing language (Fig. <xref rid="Fig11" ref-type="fig">11</xref>A). Taking a unique opportunity, we compared our original C++ implementation of multitarget design [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR49">49</xref>], RNARedprint  v1, to our Infrared-based reimplementation RNARedprint  v2. We chose the benchmark set “RNAfold”, e.g. used in [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR51">51</xref>], comprising 400 design instances of 3–6 structures, which were generated to pose ambitious challenges with treewidths up to 16. This experiment was performed on an Intel Core i7-4770 CPU with 32 GB memory.</p>
    <p id="Par232">Moreover, we studied the practical applicability of treewidth-based network parsimony algorithms (Sec. “Network parsimony”) on a set of nonartificial phylogenetic networks [<xref ref-type="bibr" rid="CR52">52</xref>] compiled from the literature (see <ext-link ext-link-type="uri" xlink:href="https://phylnet.univ-mlv.fr/recophync/networkDraw.php">https://phylnet.univ-mlv.fr/recophync/networkDraw.php</ext-link>). This data set is typically used as a reference set for the comparison and evaluation of various algorithms on phylogenetic networks. For our purposes, we determined the treewidths of the networks in dependency on their size and the number of reticulation nodes (Fig. <xref rid="Fig11" ref-type="fig">11</xref>B). Here treewidth directly provides information about the solving efficiency of hardwired and softwired parsimony problems (Sec. “Network parsimony”). The low to moderate treewidths on these instances hint at permissible performance in many real-word scenarios.<fig id="Fig11"><label>Fig. 11</label><caption><p><bold>A</bold> Benchmark comparison of the Infrared-based RNARedPrint v2 to the original C++ implementation “v1”. Time is measured as user time; space, as maximum resident set size (RSS). We run the tools on the RNAfold benchmark set [<xref ref-type="bibr" rid="CR16">16</xref>]. We let both tools generate 1000 samples at fixed weights; note that time and space are strongly dominated by the precomputation phase. To directly compare the implementations of the core algorithms, we run both tools on identical tree decompositions, although Infrared ’s default tree decomposer improves for several instances (including the most expensive one). One observes that the RNARedPrint v2 improves in space and time over the original implementation. Only for very short runtimes, at low treewidth, the C++ implementation has a slight edge, presumably due to less overhead. Both implementation show almost no noticable space increase at low tree widths; however the space requirements of the original implementation increase dramatically for treewidths larger than 10. Due to its extreme space requirement, we didn’t solve the single instance of treewidth 16 with RNARedPrint v1; in other cases, it failed due to a bug. For those instances, we indicate only the performance of version 2 (red crosses). <bold>B</bold> We used Infrared to compute the treewidths for a set of various phylogenetic networks that were collected from recent studies [<xref ref-type="bibr" rid="CR52">52</xref>]. Using the Infrared network parsimony model, we count the number of reticulation nodes in the networks and calculate their treewidth. It can be seen that the treewidth rather correlates with the number of reticulation nodes than with network size (number of nodes and edges). Our study on ’real-world’ phylogenetic networks suggests that treewidths are often low in practice; consequently Infrared can effectively compute network parsimony by solving the presented models</p></caption><graphic xlink:href="13015_2024_258_Fig11_HTML" id="MO20"/></fig></p>
    <p id="Par233"><italic>Characteristics and application range</italic> By modeling a series of concrete bioinformatics problems, we showed that Infrared is broadly applicable, going well beyond the selected examples. As discussed before, this extends to applicability <italic>in practice</italic>, where Infrared can efficiently solve relevant instances of expressible problems. Although feature networks are virtually universal, such that they do not limit the system’s expressivity, Infrared ’s solver relies on a very specific mechanism, where efficiency strictly depends on the treewidth of the problem instance. Arguably, this is a prerequisite for the very characteristic properties of the framework. In contrast to heuristic methods, our tree decomposition-based solving strategy leads to predictable worst-case complexity guarantees for exact optimization <italic>and</italic> sampling. Notably, exact controlled sampling rules out many heuristic pruning-type solving strategies, since it requires exact computation of partition functions.</p>
    <p id="Par234">Nevertheless, the dependency on treewidth necessarily limits the <italic>practically solvable</italic> problems and instances. In practice, such problems (explicitly or implicitly) have some graph structure. Examples are graph coloring or multitarget RNA design, which both are NP hard, but efficiently solvable for specific instances, whose graphs are sufficiently close to trees.</p>
    <p id="Par235">Infrared was designed to handle such tree decomposable problems (and their low-treewidth instances) well, but its general solving mechanism offers the flexibility to go beyond. For example, the framework supports strategies that limit the treewidth of considered instances (e.g. we controlled the maximum treewidth in our negative design approach RNAPOND [<xref ref-type="bibr" rid="CR17">17</xref>]) or reduce the treewidth in controlled ways (e.g. TreeDiet [<xref ref-type="bibr" rid="CR18">18</xref>]). For this class of problems, we identify potential for future improvements of the Infrared solver, which could allow instances to be solved significantly faster or with better complexity. For example, we discussed the complexity of alignment; additionally, consistency-based methods can yield significant improvements over the current evaluation strategy by cluster tree elimination.</p>
    <p id="Par236"><italic>Delimitation</italic> The system is, however, not designed and is even unsuitable for problems that cannot be modeled as a decomposable feature network. This comprises many constraint satisfaction (CSP) or constraint optimization problems (COP) that would typically be solved by general constraint solvers (e.g. the constraint programming system Gecode [<xref ref-type="bibr" rid="CR26">26</xref>]), SAT solving (e.g. MiniSAT [<xref ref-type="bibr" rid="CR53">53</xref>]), or solving of integer linear programs (e.g. CPLEX [<xref ref-type="bibr" rid="CR54">54</xref>]). In many classical CSP examples (e.g. n-Queens, Sudoku), models induce a complete (or almost complete) dependency graph. Here, Infrared does not implement strategies to heuristically cope with the exponential worst case complexity (e.g. constraint propagation or branch and bound); its solving strategy would therefore be essentially brute force. Obviously Infrared is thus not a general solver for CSP/COP, even if its declarative modeling paradigm and interface remind of such systems.</p>
    <p id="Par237">While Infrared proposes a novel form of automated solving of declarative problem specifications by dynamic programming (DP), bioinformatics already has a long tradition of combining declarative methods and dynamic programming in the form of Algebraic Dynamic Programming (ADP) [<xref ref-type="bibr" rid="CR55">55</xref>].</p>
    <p id="Par238">Despite the common DP backdrop, Infrared and ADP pursue different, even orthogonal goals: instead of deriving a DP algorithm from a declarative problem description, ADP implementations such as GAPC [<xref ref-type="bibr" rid="CR56">56</xref>] or ADPFusion [<xref ref-type="bibr" rid="CR57">57</xref>, <xref ref-type="bibr" rid="CR58">58</xref>] aim to support the implementation of DP algorithms through algebraic abstraction.</p>
  </sec>
  <sec id="Sec26">
    <title>Conclusions</title>
    <p id="Par239">We presented a framework for rapidly developing applications that make use of efficient exact optimization and sampling techniques by declaratively specifying problems in Python. As such, the framework provides flexible access to recent advanced algorithmic techniques—while specifying problems resembles common constraint modeling systems.</p>
    <p id="Par240">The system allows modeling problems as feature networks, which we introduced as a form of weighted constrained networks that support several features. The main advantages and characteristics of the framework stem from combining expressive modeling with automated combinatorial solving strategies that support exact optimization and weighted sampling. In particular, exact sampling, which requires complete combinatorial algorithms, can be used in innovative ways. For example, it allows generating decoys and background models in complex settings or targeting multiple features in its extension to multidimensional Boltzmann sampling.</p>
    <p id="Par241">As elaborated, these tasks are performed by generic solving algorithms based on tree decompositions of the models. Being parameterized by the treewidth, this strategy profits from the often moderately low treewidth of many typical problems in bioinformatics.</p>
    <p id="Par242">We underline the broad range of possible applications, by our discussion of diverse application examples and their implementation (online documentation). Demonstrating the concise reimplementation of previous bioinformatics methods, these applications serve as reference coding examples and also show the practical relevance of the framework.</p>
    <p id="Par243">Crucially, the system makes such methods accessible through a declarative interface in Python. Since this strongly facilitates their flexible use, the system promotes future applications of these techniques. Increasing flexibility, the system supports extension and refinement of existing models as well as their composition, e.g. sequence design targeting structure RNA <italic>and</italic> forbidding specific sequence motifs.</p>
    <p id="Par244"><italic>Future work</italic> We plan to further optimize the Infrared solver due to consistency methods and/or forward checking (in single bag processing). In specific cases, such techniques even improve complexity bounds over the currently implemented CTE-like evaluation mechanism. Moreover, we want to adapt the linear-factor speedup over standard evaluation for alignment problems (LicoRNA)—generalizations of this technique pose interesting research questions. As another path of optimization, we will implement improved tree decomposition adapted to our solver.</p>
    <p id="Par245">Furthermore, the architecture of the framework enables additional solvers; for example, such solvers can compute Pareto-optima or perform nonredundant sampling [<xref ref-type="bibr" rid="CR59">59</xref>] based on feature network models. Moreover, it will be interesting to explore the use of further evaluation algebras, which can be used with the generic evaluation algorithms of Infrared ’s C++ core engine.</p>
    <p id="Par246">Finally, the system highlights benefits due to tree decomposition of problems that enable general solving by efficient combinatorial methods. While such methods can be tedious to implement from scratch, we demonstrated their use through a declarative modeling interface. In future work, we envision developing and making related methods accessible in a similar way. One exciting line would extend our work on tree decomposition-based automatic generation of dynamic programming schemes [<xref ref-type="bibr" rid="CR19">19</xref>].
</p>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec27">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13015_2024_258_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1. Correctness proofs</bold>. The file contains proofs of Propositions 1, 2 and 3, which establish the correctness of the optimization and sampling algorithms.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par249"><ext-link ext-link-type="uri" xlink:href="https://gitlab.inria.fr/amibio/RNARedPrint">https://gitlab.inria.fr/amibio/RNARedPrint</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>HTY and SW mainly wrote the methods and application examples; SW wrote the introduction, discussion and conclusion. SW implemented the Infrared framework and the accompanying application examples. HTY contributed crucially to software deployment and documentation and computed results. SJB wrote the network parsimony section and computed results. BM wrote the discussion of theoretical complexities and background on tree decompositions and parameterized complexity. YP and SW initiated the Infrared project. YP made indispensable contributions across the manuscript, improved the presentation and contributed details of multidimensional Boltzmann sampling. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open access funding provided by University of Vienna. This work is supported by the French national research agency ANR: grant ANR-21-CE45-0034-01 “INSSANE”, as well as the Austrian Science Fund (FWF), grant no. I 4520. This project has received funding from the European Union’s Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 10102967.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar36" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par247">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wachsmuth</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Domin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lorenz</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Serfling</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Mörl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Design criteria for synthetic riboswitches acting on transcription</article-title>
        <source>RNA Biol</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>221</fpage>
        <lpage>231</lpage>
        <pub-id pub-id-type="doi">10.1080/15476286.2015.1017235</pub-id>
        <?supplied-pmid 25826571?>
        <pub-id pub-id-type="pmid">25826571</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Andreasson</surname>
            <given-names>JOL</given-names>
          </name>
          <name>
            <surname>Kladwang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Greenleaf</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Automated design of diverse stand-alone riboswitches</article-title>
        <source>ACS Synth Biol</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>8</issue>
        <fpage>1838</fpage>
        <lpage>1846</lpage>
        <pub-id pub-id-type="doi">10.1021/acssynbio.9b00142</pub-id>
        <?supplied-pmid 31298841?>
        <pub-id pub-id-type="pmid">31298841</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rinaudo</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Barth</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Tree decomposition and parameterized algorithms for RNA structure-sequence alignment including tertiary interactions and pseudoknots</article-title>
        <source>Algorithms Bioinform</source>
        <year>2012</year>
        <pub-id pub-id-type="doi">10.1007/978-3-642-33122-0_12</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jabbari</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wark</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Montemagno</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Knotty: efficient and accurate prediction of complex RNA pseudoknot structures</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>22</issue>
        <fpage>3849</fpage>
        <lpage>3856</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty420</pub-id>
        <?supplied-pmid 29868872?>
        <pub-id pub-id-type="pmid">29868872</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Scornavacca</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Weller</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Treewidth-based algorithms for the small parsimony problem on networks</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2022</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>15</fpage>
        <pub-id pub-id-type="doi">10.1186/s13015-022-00216-w</pub-id>
        <?supplied-pmid 35987645?>
        <pub-id pub-id-type="pmid">35987645</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Katoch</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chauhan</surname>
            <given-names>SS</given-names>
          </name>
          <name>
            <surname>Kumar</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>A review on genetic algorithm: past, present, and future</article-title>
        <source>Multimed Tools Appl</source>
        <year>2021</year>
        <volume>80</volume>
        <issue>5</issue>
        <fpage>8091</fpage>
        <lpage>8126</lpage>
        <pub-id pub-id-type="doi">10.1007/s11042-020-10139-6</pub-id>
        <?supplied-pmid 33162782?>
        <pub-id pub-id-type="pmid">33162782</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miklós</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Paige</surname>
            <given-names>TB</given-names>
          </name>
          <name>
            <surname>Ligeti</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Efficient sampling of transpositions and inverted transpositions for bayesian MCMC</article-title>
        <source>Algorithms Bioinform</source>
        <year>2006</year>
        <pub-id pub-id-type="doi">10.1007/11851561_17</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Neumann</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>YT</given-names>
          </name>
          <name>
            <surname>Mallela</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>EF</given-names>
          </name>
          <name>
            <surname>Colvin</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Duprat</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hlavacek</surname>
            <given-names>WS</given-names>
          </name>
          <name>
            <surname>Posner</surname>
            <given-names>RG</given-names>
          </name>
        </person-group>
        <article-title>Implementation of a practical Markov chain Monte Carlo sampling algorithm in PyBioNetFit</article-title>
        <source>Bioinformatics</source>
        <year>2022</year>
        <volume>38</volume>
        <issue>6</issue>
        <fpage>1770</fpage>
        <lpage>1772</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac004</pub-id>
        <?supplied-pmid 34986226?>
        <pub-id pub-id-type="pmid">34986226</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Downey</surname>
            <given-names>RG</given-names>
          </name>
          <name>
            <surname>Fellows</surname>
            <given-names>MR</given-names>
          </name>
        </person-group>
        <source>Parameterized Complexity</source>
        <year>1999</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Rossi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Beek</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Walsh</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <source>Handbook of constraint programming (Foundations of Artificial Intelligence)</source>
        <year>2006</year>
        <publisher-loc>Walthm</publisher-loc>
        <publisher-name>Elsevier Science</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Constraint Proc</source>
        <year>2003</year>
        <publisher-loc>San Francisco</publisher-loc>
        <publisher-name>Morgan Kaufmann</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Reasoning with probabilistic and deterministic graphical models</source>
        <year>2019</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Koster</surname>
            <given-names>AMCA</given-names>
          </name>
        </person-group>
        <article-title>Treewidth computations i. upper bounds</article-title>
        <source>Inform Comput</source>
        <year>2010</year>
        <volume>208</volume>
        <issue>3</issue>
        <fpage>259</fpage>
        <lpage>275</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ic.2009.03.008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Cygan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fomin</surname>
            <given-names>FV</given-names>
          </name>
          <name>
            <surname>Kowalik</surname>
            <given-names>Ł</given-names>
          </name>
          <name>
            <surname>Lokshtanov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Marx</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pilipczuk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pilipczuk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Saurabh</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Parameterized Algorithms</source>
        <year>2015</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Bodini O, Ponty Y. Multi-dimensional Boltzmann sampling of languages. In: Proceedings of the 21st International Meeting on Probabilistic, Combinatorial, and Asymptotic Methods in the Analysis of Algorithms (AofA’10), DMTCS Proceedings, Vienna, Austria. 2010; 49–64.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Fixed-parameter tractable sampling for RNA design with multiple target structures</article-title>
        <source>BMC Bioinf</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-019-2784-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Yao H-T, Waldispühl J, Ponty Y, Will S. Taming disruptive base pairs to reconcile positive and negative structural design of rna. In: Research in Computational Molecular Biology - 25th Annual International Conference, RECOMB 2021. Lecture Notes in Computer Science. Springer, Padova, Italy 2021</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchand</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bulteau</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Tree diet: reducing the treewidth to unlock FPT algorithms in RNA bioinformatics</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2022</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13015-022-00213-z</pub-id>
        <pub-id pub-id-type="pmid">35033127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Marchand B, Will S, Berkemer SJ, Bulteau L, Ponty Y. Automated design of dynamic programming schemes for RNA folding with pseudoknots. In: Boucher, C., Rahmann, S. (eds.) 22nd nternational Workshop on Algorithms in Bioinformatics (WABI 2022). Leibniz International Proceedings in Informatics (LIPIcs), vol. 242, pp. 7–1724. Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl, Germany 2022. 10.4230/LIPIcs.WABI.2022.7 . <ext-link ext-link-type="uri" xlink:href="https://drops.dagstuhl.de/opus/volltexte/2022/17041">https://drops.dagstuhl.de/opus/volltexte/2022/17041</ext-link></mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Busch</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Efficient sequence alignment with side-constraints by cluster tree elimination</article-title>
        <source>Constraints</source>
        <year>2008</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>110</fpage>
        <lpage>129</lpage>
        <pub-id pub-id-type="doi">10.1007/s10601-007-9032-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McCaskill</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>The equilibrium partition function and base pair binding probabilities for RNA secondary structure</article-title>
        <source>Biopolymers</source>
        <year>1990</year>
        <volume>29</volume>
        <issue>6–7</issue>
        <fpage>1105</fpage>
        <lpage>1119</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.360290621</pub-id>
        <?supplied-pmid 1695107?>
        <pub-id pub-id-type="pmid">1695107</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ding</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lawrence</surname>
            <given-names>CE</given-names>
          </name>
        </person-group>
        <article-title>A statistical sampling algorithm for RNA secondary structure prediction</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>7280</fpage>
        <lpage>7301</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg938</pub-id>
        <?supplied-pmid 14654704?>
        <pub-id pub-id-type="pmid">14654704</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hastings</surname>
            <given-names>WK</given-names>
          </name>
        </person-group>
        <article-title>Monte carlo sampling methods using markov chains and their applications</article-title>
        <source>Biometrika</source>
        <year>1970</year>
        <volume>57</volume>
        <issue>1</issue>
        <fpage>97</fpage>
        <lpage>109</lpage>
        <pub-id pub-id-type="doi">10.1093/biomet/57.1.97</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roshan</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Livesay</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>Probalign: multiple sequence alignment using partition function posterior probabilities</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>22</issue>
        <fpage>2715</fpage>
        <lpage>2721</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl472</pub-id>
        <?supplied-pmid 16954142?>
        <pub-id pub-id-type="pmid">16954142</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Joshi</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>LocARNA-P: accurate boundary prediction and improved detection of structural RNAs</article-title>
        <source>RNA</source>
        <year>2012</year>
        <volume>18</volume>
        <issue>5</issue>
        <fpage>900</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1261/rna.029041.111</pub-id>
        <?supplied-pmid 22450757?>
        <pub-id pub-id-type="pmid">22450757</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Schulte C, Tack G, Lagerkvist MZ. Modeling and programming with Gecode. Schulte, Christian and Tack, Guido and Lagerkvist, Mikael 2010;1</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Allouche</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bessiere</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boizumault</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Givry</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gutierrez</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>JHM</given-names>
          </name>
          <name>
            <surname>Leung</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Loudni</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Métivier</surname>
            <given-names>J-P</given-names>
          </name>
          <name>
            <surname>Schiex</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Tractability-preserving transformations of global cost functions</article-title>
        <source>Artif Intell</source>
        <year>2016</year>
        <volume>238</volume>
        <fpage>166</fpage>
        <lpage>189</lpage>
        <pub-id pub-id-type="doi">10.1016/j.artint.2016.06.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Yao H-T, Ponty Y, Will S. Developing complex RNA design applications in the Infrared framework. (2022). preprint; to be published. <ext-link ext-link-type="uri" xlink:href="https://hal.science/hal-03711828">https://hal.science/hal-03711828</ext-link></mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Koster</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Combinatorial optimization on graphs of bounded treewidth</article-title>
        <source>Comput J</source>
        <year>2008</year>
        <volume>51</volume>
        <issue>3</issue>
        <fpage>255</fpage>
        <lpage>269</lpage>
        <pub-id pub-id-type="doi">10.1093/comjnl/bxm037</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
          <collab>Handbook of Constraint Programming</collab>
        </person-group>
        <article-title>Tractable Structures for Constraint Satisfaction Problems. In</article-title>
        <source>Found Artificial Intell</source>
        <year>2006</year>
        <volume>2</volume>
        <fpage>209</fpage>
        <lpage>244</lpage>
        <pub-id pub-id-type="doi">10.1016/S1574-6526(06)80011-8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bachoore</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Tokuyama</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Weighted treewidth algorithmic techniques and results</article-title>
        <source>International symposium on algorithms and computation (ISAAC 2007)</source>
        <year>2007</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>893</fpage>
        <lpage>903</lpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arnborg</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Corneil</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Proskurowski</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Complexity of finding embeddings in a k-tree</article-title>
        <source>SIAM J Algebraic Discrete Methods</source>
        <year>1987</year>
        <volume>8</volume>
        <issue>2</issue>
        <fpage>277</fpage>
        <lpage>284</lpage>
        <pub-id pub-id-type="doi">10.1137/0608024</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tamaki</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Positive-instance driven dynamic programming for treewidth</article-title>
        <source>J Combinatorial Optimizat</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>4</issue>
        <fpage>1283</fpage>
        <lpage>1311</lpage>
        <pub-id pub-id-type="doi">10.1007/s10878-018-0353-z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Bodlaender HL. A linear time algorithm for finding tree-decompositions of small treewidth. In: Proceedings of the Twenty-fifth Annual ACM Symposium on Theory of Computing. 1993;226–234.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Doolittle</surname>
            <given-names>WF</given-names>
          </name>
        </person-group>
        <article-title>Phylogenetic classification and the universal tree</article-title>
        <source>Science</source>
        <year>1999</year>
        <volume>284</volume>
        <issue>5423</issue>
        <fpage>2124</fpage>
        <lpage>2128</lpage>
        <pub-id pub-id-type="doi">10.1126/science.284.5423.2124</pub-id>
        <?supplied-pmid 10381871?>
        <pub-id pub-id-type="pmid">10381871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fitch</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Toward defining the course of evolution: minimum change for a specific tree topology</article-title>
        <source>Syst Biol</source>
        <year>1971</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>406</fpage>
        <lpage>416</lpage>
        <pub-id pub-id-type="doi">10.1093/sysbio/20.4.406</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sankoff</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Rousseau</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Locating the vertices of a steiner tree in an arbitrary metric space</article-title>
        <source>Math Program</source>
        <year>1975</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>240</fpage>
        <lpage>246</lpage>
        <pub-id pub-id-type="doi">10.1007/BF01681346</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darty</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>VARNA: interactive drawing and editing of the RNA secondary structure</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1974</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp250</pub-id>
        <?supplied-pmid 19398448?>
        <pub-id pub-id-type="pmid">19398448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taneda</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Multi-objective optimization for RNA design with multiple target secondary structures</article-title>
        <source>BMC Bioinf</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>280</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-015-0706-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Sabina</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zuker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>Expanded sequence dependence of thermodynamic parameters improves prediction of RNA secondary structure</article-title>
        <source>J Mol Biol</source>
        <year>1999</year>
        <volume>288</volume>
        <issue>5</issue>
        <fpage>911</fpage>
        <lpage>940</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1999.2700</pub-id>
        <?supplied-pmid 10329189?>
        <pub-id pub-id-type="pmid">10329189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>NNDB: the nearest neighbor parameter database for predicting stability of nucleic acid secondary structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>Suppl–1</issue>
        <fpage>280</fpage>
        <lpage>282</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkp892</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol</source>
        <year>1970</year>
        <volume>48</volume>
        <issue>3</issue>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gotoh</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>An improved algorithm for matching biological sequences</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>162</volume>
        <issue>3</issue>
        <fpage>705</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90398-9</pub-id>
        <?supplied-pmid 7166760?>
        <pub-id pub-id-type="pmid">7166760</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chao</surname>
            <given-names>K-M</given-names>
          </name>
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Aligning two sequences within a specified diagonal band</article-title>
        <source>Bioinformatics</source>
        <year>1992</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>481</fpage>
        <lpage>487</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/8.5.481</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pesant</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>A regular language membership constraint for finite sequences of Variables. In: principles and practice of constraint programming - CP</source>
        <year>2001</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>482</fpage>
        <lpage>495</lpage>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Zhou, Y., Ponty, Y., Vialette, S., Waldispuhl, J., Zhang, Y., Denise, A.: Flexible RNA design under structure and sequence constraints using formal languages. In: BCB’13: Proceedings of the International Conference on Bioinformatics, Computational Biology and Biomedical Informatics, pp. 229–238. Association for Computing Machinery, New York, NY, USA (2013). 10.1145/2506583.2506623</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Blanchette</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lécuyer</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>SPARCS: a web server to analyze (un)structured regions in coding RNA sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>W1</issue>
        <fpage>480</fpage>
        <lpage>485</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt461</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reinharz</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>A weighted sampling algorithm for the design of RNA sequences with targeted secondary structure and nucleotide distribution</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>13</issue>
        <fpage>308</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt217</pub-id>
        <pub-id pub-id-type="pmid">23202746</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yao</surname>
            <given-names>H-T</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Adv Design Struct RNAs RNA RedPrint: RNA Bioinformatics</source>
        <year>2020</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Boury, T., Ponty, Y., Reinharz, V.: Automatic exploration of the natural variability of RNA non-canonical geometric patterns with a parameterized sampling technique. In: 23nd International Workshop on Algorithms in Bioinformatics (WABI 2023). Leibniz International Proceedings in Informatics (LIPIcs). Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl, Germany (2023). <ext-link ext-link-type="uri" xlink:href="https://hal.science/hal-04094288">https://hal.science/hal-04094288</ext-link></mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tschiatschek</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>RNAblueprint: flexible multiple target nucleic acid sequence design</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <issue>18</issue>
        <fpage>2850</fpage>
        <lpage>2858</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx263</pub-id>
        <?supplied-pmid 28449031?>
        <pub-id pub-id-type="pmid">28449031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gambette</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gunawan</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Labarre</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vialette</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Solving the tree containment problem in linear time for nearly stable phylogenetic networks</article-title>
        <source>Discrete Appl Math</source>
        <year>2018</year>
        <volume>246</volume>
        <fpage>62</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1016/j.dam.2017.07.015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Eén</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sörensson</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <source>An extensible SAT-solver In Theory and Applications of Satisfiability Testing</source>
        <year>2004</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>502</fpage>
        <lpage>518</lpage>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cplex</surname>
            <given-names>II</given-names>
          </name>
        </person-group>
        <article-title>V12. 1: User’s manual for CPLEX</article-title>
        <source>Int Business Mach Corporat</source>
        <year>2009</year>
        <volume>46</volume>
        <issue>53</issue>
        <fpage>157</fpage>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Steffen</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>A discipline of dynamic programming over sequence data</article-title>
        <source>Sci Comput Programming</source>
        <year>2004</year>
        <volume>51</volume>
        <issue>3</issue>
        <fpage>215</fpage>
        <lpage>263</lpage>
        <pub-id pub-id-type="doi">10.1016/j.scico.2003.12.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sauthoff</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Möhl</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Janssen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Bellman’s GAP–a language and compiler for dynamic programming in sequence analysis</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>551</fpage>
        <lpage>560</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt022</pub-id>
        <?supplied-pmid 23355290?>
        <pub-id pub-id-type="pmid">23355290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zu</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Abfalter</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Computational design of RNAs with complex energy landscapes</article-title>
        <source>Biopolymers</source>
        <year>2013</year>
        <volume>99</volume>
        <issue>12</issue>
        <fpage>1124</fpage>
        <lpage>1136</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.22337</pub-id>
        <pub-id pub-id-type="pmid">23818234</pub-id>
      </element-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riechert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Siederdissen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Algebraic dynamic programming for multiple context-free grammars</article-title>
        <source>Theoret Comput Sci</source>
        <year>2016</year>
        <volume>639</volume>
        <fpage>91</fpage>
        <lpage>109</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2016.05.032</pub-id>
      </element-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Michálik</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Touzet</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Efficient approximations of RNA kinetics landscape using non-redundant sampling</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>283</fpage>
        <lpage>292</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx269</pub-id>
        <pub-id pub-id-type="pmid">27663497</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Algorithms Mol Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Algorithms Mol Biol</journal-id>
    <journal-title-group>
      <journal-title>Algorithms for Molecular Biology : AMB</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1748-7188</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10943887</article-id>
    <article-id pub-id-type="publisher-id">258</article-id>
    <article-id pub-id-type="doi">10.1186/s13015-024-00258-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Infrared: a declarative tree decomposition-powered framework for bioinformatics</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Yao</surname>
          <given-names>Hua-Ting</given-names>
        </name>
        <address>
          <email>htyao@tbi.univie.ac.at</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Marchand</surname>
          <given-names>Bertrand</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Berkemer</surname>
          <given-names>Sarah J.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ponty</surname>
          <given-names>Yann</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Will</surname>
          <given-names>Sebastian</given-names>
        </name>
        <address>
          <email>sebastian.will@polytechnique.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.503305.0</institution-id><institution-id institution-id-type="ISNI">0000 0004 0367 3665</institution-id><institution>LIX, CNRS UMR 7161, Ecole Polytechnique, Institut Polytechnique de Paris, </institution></institution-wrap>Palaiseau, France </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/03prydq77</institution-id><institution-id institution-id-type="GRID">grid.10420.37</institution-id><institution-id institution-id-type="ISNI">0000 0001 2286 1424</institution-id><institution>Department of Theoretical Chemistry, </institution><institution>University of Vienna, </institution></institution-wrap>Vienna, Austria </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/01pxwe438</institution-id><institution-id institution-id-type="GRID">grid.14709.3b</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 8649</institution-id><institution>School of Computer Science, </institution><institution>McGill University, </institution></institution-wrap>Montreal, Canada </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.32197.3e</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2105</institution-id><institution>Earth-Life Science Institute, </institution><institution>Tokyo Institute of Technology, </institution></institution-wrap>Tokyo, Japan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>16</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>16</day>
      <month>3</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>19</volume>
    <elocation-id>13</elocation-id>
    <history>
      <date date-type="received">
        <day>18</day>
        <month>9</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>2</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Motivation</title>
        <p id="Par1">Many bioinformatics problems can be approached as optimization or controlled sampling tasks, and solved exactly and efficiently using Dynamic Programming (DP). However, such exact methods are typically tailored towards specific settings, complex to develop, and hard to implement and adapt to problem variations.</p>
      </sec>
      <sec>
        <title>Methods</title>
        <p id="Par2">We introduce the Infrared framework to overcome such hindrances for a large class of problems. Its underlying paradigm is tailored toward problems that can be declaratively formalized as sparse feature networks, a generalization of constraint networks. Classic Boolean constraints specify a search space, consisting of putative solutions whose evaluation is performed through a combination of features. Problems are then solved using generic cluster tree elimination algorithms over a tree decomposition of the feature network. Their overall complexities are linear on the number of variables, and only exponential in the treewidth of the feature network. For sparse feature networks, associated with low to moderate treewidths, these algorithms allow to find optimal solutions, or generate controlled samples, with practical empirical efficiency.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par3">Implementing these methods, the Infrared software allows Python programmers to rapidly develop exact optimization and sampling applications based on a tree decomposition-based efficient processing. Instead of directly coding specialized algorithms, problems are declaratively modeled as sets of variables over finite domains, whose dependencies are captured by constraints and functions. Such models are then automatically solved by generic DP algorithms. To illustrate the applicability of Infrared in bioinformatics and guide new users, we model and discuss variants of bioinformatics applications. We provide reimplementations and extensions of methods for RNA design, RNA sequence-structure alignment, parsimony-driven inference of ancestral traits in phylogenetic trees/networks, and design of coding sequences. Moreover, we demonstrate multidimensional Boltzmann sampling. These applications of the framework—together with our novel results—underline the practical relevance of Infrared. Remarkably, the achieved complexities are typically equivalent to the ones of specialized algorithms and implementations.</p>
      </sec>
      <sec>
        <title>Availability</title>
        <p id="Par4">Infrared is available at <ext-link ext-link-type="uri" xlink:href="https://amibio.gitlabpages.inria.fr/Infrared">https://amibio.gitlabpages.inria.fr/Infrared</ext-link> with extensive documentation, including various usage examples and API reference; it can be installed using Conda or from source.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13015-024-00258-2.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Bioinformatics</kwd>
      <kwd>Fixed-parameter tractable algorithms</kwd>
      <kwd>Tree decomposition</kwd>
      <kwd>Boltzmann sampling</kwd>
      <kwd>Network phylogeny</kwd>
      <kwd>RNA sequence design</kwd>
      <kwd>RNA alignment</kwd>
      <kwd>Pseudoknots</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100002428</institution-id>
            <institution>Austrian Science Fund</institution>
          </institution-wrap>
        </funding-source>
        <award-id>I 4520</award-id>
        <principal-award-recipient>
          <name>
            <surname>Yao</surname>
            <given-names>Hua-Ting</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001665</institution-id>
            <institution>Agence Nationale de la Recherche</institution>
          </institution-wrap>
        </funding-source>
        <award-id>ANR-21-CE45-0034-01</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100018694</institution-id>
            <institution>HORIZON EUROPE Marie Sklodowska-Curie Actions</institution>
          </institution-wrap>
        </funding-source>
        <award-id>10102967</award-id>
        <principal-award-recipient>
          <name>
            <surname>Berkemer</surname>
            <given-names>Sarah J.</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>University of Vienna</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open access funding provided by University of Vienna.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par5">Typical applications of computational, “bioinformatical” methods to real world biological problems have inherently high complexity at different levels. For example, these include the design of functional control elements for biotechnology [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], identifying homologies in the context of RNA pseudoknots [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR4">4</xref>], or the prediction of phylogenies considering complex inheritance patterns [<xref ref-type="bibr" rid="CR5">5</xref>]. First, <italic>modeling complexity</italic> is directly inherited from the complexity of the biological backdrop. This requires bioinformatics approaches to deal with hard constraints and soft requirements. Moreover, many approaches need to target complex scores, often composed of multiple interdependent objectives, e.g. for predicting optimal solutions or generating designs. In turn, the high modeling complexity is reflected in coding challenges and leads to high <italic>computational complexity</italic> of exact solutions. Frequently, this turns bioinformaticians away from exact, combinatorial methods to less controlled heuristics, for example optimization by local search or genetic algorithms [<xref ref-type="bibr" rid="CR6">6</xref>], or sampling by MCMC (Markov Chain Monte Carlo)-like approaches [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR8">8</xref>], which sacrifice guarantees on the optimality of solutions or the time and space complexity of the computations.</p>
    <p id="Par6">Here, we introduce the framework Infrared to cope with these levels of complexity. This system lets users specify a large class of computational problems and solves them by combinatorial algorithms with parameterized complexity [<xref ref-type="bibr" rid="CR9">9</xref>]. These methods guarantee exactness and work efficiently, when the “complexity” (treewidth) of the problem instance is fixed. In practice, this limits the system to problems with moderately sparse dependencies. The system combines various concepts of computer science, comprising constraint modeling [<xref ref-type="bibr" rid="CR10">10</xref>], constraint and scoring networks [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], tree decomposition [<xref ref-type="bibr" rid="CR13">13</xref>], parameterized complexity [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR14">14</xref>], random generation, and (multidimensional) Boltzmann sampling [<xref ref-type="bibr" rid="CR15">15</xref>]. Along with Infrared, we advocate and hope to promote the use of exact methods. In place of heuristic methods, many NP-hard problems can be solved by algorithms of parameterized complexity, which our system makes more accessible due to proper abstractions. Other problems profit from building heuristic methods on top of exact algorithms.</p>
    <p id="Par7">Historically, the presented framework originated as a generalization of our own previous work on multitarget RNA design (RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]) and our original approach has been completely reimplemented and extended based on Infrared (RNARedprint v2<xref ref-type="fn" rid="Fn1">1</xref>). In parallel to the presented research, we used an early version of the system for original research in the area of negative RNA design (RNAPond, [<xref ref-type="bibr" rid="CR17">17</xref>]). Other recent work has strong conceptual ties: Tree-Diet [<xref ref-type="bibr" rid="CR18">18</xref>] (by using RNAPond and LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]) and AutoDP [<xref ref-type="bibr" rid="CR19">19</xref>]). Moreover, as we show in this text, sequence and RNA sequence-structure alignment can be implemented following the models of LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>] and [<xref ref-type="bibr" rid="CR20">20</xref>]; both papers introduced closely related solving strategies for alignment.</p>
    <p id="Par8">Our framework aims to facilitate the implementation of complex algorithms based on the declarative modeling paradigm. Instead of implementing a concrete algorithm, it allows users to formally describe the problem by specifying the admissible solutions and their quality assessments. Similar to, e.g. constraint programming or integer linear programming systems, those models are solved automatically by a built-in general mechanism.<fig id="Fig1"><label>Fig. 1</label><caption><p>The running example: graph coloring. <bold>A</bold> Example input graph. <bold>B</bold> One valid coloring with 4 colors, corresponding to an assignment of variables to colors (domain values) that satisfies all the inequality constraints along the edges. In our example extension, which minimizes the <italic>feature</italic> counting the different colors in each of its four cycles of length <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq1.gif"/></alternatives></inline-formula>, <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_2,v_3,v_5,v_6)$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq2.gif"/></alternatives></inline-formula>, <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_2,v_5,v_7,v_8)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq3.gif"/></alternatives></inline-formula>, <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_5,v_6,v_7,v_8)$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq4.gif"/></alternatives></inline-formula> and <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_5,v_6,v_8,v_9$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mn>9</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq5.gif"/></alternatives></inline-formula>, this coloring is not optimal (e.g. recolor <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_3$$\end{document}</tex-math><mml:math id="M12"><mml:msub><mml:mi>v</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq6.gif"/></alternatives></inline-formula>)</p></caption><graphic xlink:href="13015_2024_258_Fig1_HTML" id="MO1"/></fig></p>
    <sec id="FPar1">
      <title>Example 1</title>
      <p id="Par9">(Graph coloring) Let us illustrate this idea by modeling graph coloring as a Constraint Satisfaction Problem (CSP). We use this ‘toy problem’ as our running example to formally introduce our main concepts. For this purpose, we will later extend it beyond constraint satisfaction (introducing some quality of colorings).</p>
      <p id="Par10">Given a graph <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V, E)$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq7.gif"/></alternatives></inline-formula>, see Fig. <xref rid="Fig1" ref-type="fig">1</xref>A, the graph coloring problem asks for a vertex labeling by <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M16"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq8.gif"/></alternatives></inline-formula> colors, such that adjacent vertices are colored differently (Fig. <xref rid="Fig1" ref-type="fig">1</xref>B). To solve this classical problem in our system, we model it as a CSP, i.e. as a triple of a set of variables, one domain per variable, and constraints. This CSP introduces one variable per vertex, resulting in the set of variables <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{X_1,\dots ,X_{|V|}\}$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq9.gif"/></alternatives></inline-formula>. Each variable encodes the label of the corresponding vertex, i.e. it takes values from <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq10.gif"/></alternatives></inline-formula> to <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k$$\end{document}</tex-math><mml:math id="M22"><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq11.gif"/></alternatives></inline-formula>, expressed by choosing the domain <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D(X_i)=\{1,\dots , k\}$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:mi>D</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq12.gif"/></alternatives></inline-formula> for each <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq13.gif"/></alternatives></inline-formula>. Finally, we define the constraint set consisting of one inequality constraint <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}$$\end{document}</tex-math><mml:math id="M28"><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq14.gif"/></alternatives></inline-formula> between the variables <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M30"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq15.gif"/></alternatives></inline-formula> and <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M32"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq16.gif"/></alternatives></inline-formula> for every edge <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)\in E$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq17.gif"/></alternatives></inline-formula>.</p>
      <p id="Par11">Solving the problem means finding a <italic>valid</italic> assignment of values to variables that satisfies the constraints. Our system supports constraint solving, even if pure constraint solving serves mostly as a basis for further extensions. We can directly express our graph coloring model in Python code.<graphic position="anchor" xlink:href="13015_2024_258_Figa_HTML" id="MO2"/></p>
      <p>Based on this model, Infrared finds a valid coloring automatically due to its built-in parameterized algorithms in a time that depends on the size of the graph, the number of colors, and the <italic>complexity of G</italic>, i.e. its treewidth. For this purpose, one passes the model to the solver and asks for a valid solution. Since Infrared handles constraint satisfaction and optimization in the same way, its solver is called Optimizer.<graphic position="anchor" xlink:href="13015_2024_258_Figb_HTML" id="MO3"/></p>
    </sec>
    <sec id="Sec28">
      <title>Extending CSPs by features</title>
      <p id="Par13">Beyond validity, Infrared addresses solution quality in terms of one or several <italic>features</italic>—conceptually, we extend Infrared ’s models from CSPs to feature networks. This allows users of the framework to more naturally model complex problems with multiple objectives, as they commonly occur in bioinformatics. Based on specified features, Infrared is then able to perform tasks such as optimization and weighted sampling.</p>
      <sec id="FPar2">
        <title>Example 2</title>
        <p id="Par14">As a first feature example, let us pick up graph coloring and additionally minimize the use of different colors in cycles of length <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq18.gif"/></alternatives></inline-formula> (4-cycles). For this purpose, we specify a feature by imposing one 4-ary function Card for each 4-cycle that counts the different colors in the cycle (set cardinality); the sum of function values defines the value of the feature.</p>
        <p id="Par15">Infrared ’s syntax supports the compositional construction and extension of models. After defining the class of functions Card, we can therefore add them to the previous model.<graphic position="anchor" xlink:href="13015_2024_258_Figc_HTML" id="MO4"/></p>
        <p id="Par16">Given this extended model, the solver automatically finds an assignment with optimal evaluation by the feature.<graphic position="anchor" xlink:href="13015_2024_258_Figd_HTML" id="MO5"/></p>
        <p>Due to the features, the dependencies between variables become more complex. Where we had a dependency between the variables of each edge in the basic graph coloring model, after the extension, all four variables of each 4-cycle depend on each other due to the functions Card. Infrared ’s solver automatically adapts to this increased complexity of the problem.</p>
      </sec>
    </sec>
    <sec id="Sec29">
      <title>Boltzmann sampling</title>
      <p id="Par18">Once specified by a model, a problem can be <italic>solved</italic> in different ways. In addition to finding optimal solutions, one can just as easily sample assignments from a uniform or Boltzmann distribution controlled by potentially multiple features and their weights.</p>
      <sec id="FPar3">
        <title>Example 3</title>
        <p id="Par19">Continuing our example, we can generate random uniform colorings from the same model using a different solver.</p>
        <p id="Par20">In statistical mechanics, Boltzmann distributions describe the probabilities of states in a physical system depending on their energy. They are ubiquitous in physics and have numerous applications in bionformatics e.g. for describing the equilibrium of folding molecules [<xref ref-type="bibr" rid="CR21">21</xref>] or generating energy weighted and near-optimal conformations [<xref ref-type="bibr" rid="CR22">22</xref>]. Beyond physical interpretation, Boltzmann distributions have applications as general tools, e.g. in heuristic optimization [<xref ref-type="bibr" rid="CR23">23</xref>], for deriving probabilities in alignments [<xref ref-type="bibr" rid="CR24">24</xref>, <xref ref-type="bibr" rid="CR25">25</xref>] or for targeting properties [<xref ref-type="bibr" rid="CR15">15</xref>].<graphic position="anchor" xlink:href="13015_2024_258_Fige_HTML" id="MO6"/></p>
        <p id="Par21">Through the weight, we can control the expected value of the feature in the generated distribution. Setting a nonzero weight causes Infrared to sample from a nonuniform Boltzmann distribution, e.g. setting the weight to <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$+2$$\end{document}</tex-math><mml:math id="M38"><mml:mrow><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq19.gif"/></alternatives></inline-formula> shifts the expectation to a large cardinality while setting it to <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-2$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq20.gif"/></alternatives></inline-formula> induces smaller cardinalities.</p>
      </sec>
    </sec>
    <sec id="Sec30">
      <title>Positioning against prior work</title>
      <p id="Par22">As already hinted by the introductory example, Infrared does <bold>not</bold> focus on general constraint solving as performed by constraint programming systems such as Gecode [<xref ref-type="bibr" rid="CR26">26</xref>]. Adding evaluation to our models ties this work closer to weighted constraint problems or cost networks, with some superficial relations to cost function optimizers such as Toulbar2 [<xref ref-type="bibr" rid="CR27">27</xref>]. While such systems combine search with forms of constraint consistency, our solving strategies come from the area of constraint processing in constraint networks [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par23">As such, our system is tailored to exactly and efficiently solve a specific class of problems, where it can algorithmically profit from a sufficiently tree-like structure (parameterized complexity for the parameter treewidth). This characteristic still allows broad and flexible use of the system, e.g. in bionformatics, where many relevant problems and problem instances have this structure. The capability to solve such bioinformatics problems by complete and exact algorithms with predictable complexity enables specific applications, e.g. it is essential for precisely controlled weighted sampling.</p>
    </sec>
    <sec id="Sec31">
      <title>Overview and contributions</title>
      <p id="Par24">In the next section, we formally define the core concepts of modeling problems in our framework; the models that characterize specific problem instances are formalized as feature networks. Moreover, we precisely state the tasks of optimization and sampling that are solved by the system. In Section “Algorithms for solving feature networks”, we describe the main algorithms to solve these tasks based on the model. Along with the algorithms we explain the underlying prerequisite key concepts of tree decomposition and cluster trees [<xref ref-type="bibr" rid="CR12">12</xref>]. The given generic, cluster tree elimination-based, algorithms are efficient for fixed treewidth values of the feature network—in other words, they are exponential in the treewidth only. In the second part of the paper, we present several examples of modeling different classic bioinformatics problems as feature networks. Due to the declarative nature of the Infrared system, stating the feature networks is very close to actually implementing these algorithms. To increase the practical value, we put out documented Python code (in the form of Jupyter notebooks) for each application example as supplementary material. Starting with applications to showcase elementary use of Infrared, we move on to advanced topics, including interesting extensions to preceding examples and the targeting of features by multidimensional Boltzmann sampling. Finally, we discuss implications for the use of the system and its application range, as well as future developments within and beyond the framework.</p>
    </sec>
  </sec>
  <sec id="Sec2">
    <title>Feature networks for modeling problems in Infrared</title>
    <p id="Par25">We conceptualize the declarative models of Infrared as <italic>feature networks</italic> (FNs). They are defined as a form of weighted CSP, explicitly distinguishing several real-valued features (instead of only a single or integer-valued score).</p>
    <sec id="FPar4">
      <title>Definition 1</title>
      <p id="Par26">(Feature Network; FN) A feature network (FN) <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M42"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq21.gif"/></alternatives></inline-formula> is a tuple <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq22.gif"/></alternatives></inline-formula>, where<list list-type="bullet"><list-item><p id="Par27"><inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} =\{X_1,\dots ,X_n\}$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq23.gif"/></alternatives></inline-formula> is a set of <bold>variables</bold>;</p></list-item><list-item><p id="Par28"><inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} =\{D_1,\dots ,D_n\}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:mi mathvariant="script">D</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq24.gif"/></alternatives></inline-formula> is a set of <bold>domains</bold>, one per variable, where each domain is a finite set of integers;</p></list-item><list-item><p id="Par29"><inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}$$\end{document}</tex-math><mml:math id="M50"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq25.gif"/></alternatives></inline-formula> is a finite set of <bold>constraints</bold>;</p></list-item><list-item><p id="Par30"><inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} =\{F_1,\ldots ,F_\ell \}$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi mathvariant="script">F</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq26.gif"/></alternatives></inline-formula> is a set of <bold>features</bold>.</p></list-item></list></p>
      <p>Those networks specify <italic>solutions</italic> to a problem instance as specific assignments of domain values to variables.</p>
    </sec>
    <sec id="FPar5">
      <title>Definition 2</title>
      <p id="Par32">(Assignment) An <bold>assignment</bold>, for a given FN <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M54"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq27.gif"/></alternatives></inline-formula>, is a set of single variable mappings <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i\mapsto x_i$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq28.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq29.gif"/></alternatives></inline-formula> is a variable of <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M60"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq30.gif"/></alternatives></inline-formula>, <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M62"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq31.gif"/></alternatives></inline-formula> is in the domain <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i$$\end{document}</tex-math><mml:math id="M64"><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq32.gif"/></alternatives></inline-formula> of <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq33.gif"/></alternatives></inline-formula> and every <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq34.gif"/></alternatives></inline-formula> occurs at most once. An assignment is called <bold>total</bold>, if every variable of <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M70"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq35.gif"/></alternatives></inline-formula> occurs exactly once; otherwise, it is <bold>partial</bold>.</p>
      <p>Given <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '\subseteq \mathcal {X}$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq36.gif"/></alternatives></inline-formula>, we denote the set of all <bold>assignments</bold>
<italic>x</italic>
<bold>of</bold>
<inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '$$\end{document}</tex-math><mml:math id="M74"><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq37.gif"/></alternatives></inline-formula> as <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A} _{\mathcal {X} '}$$\end{document}</tex-math><mml:math id="M76"><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq38.gif"/></alternatives></inline-formula>. When <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '$$\end{document}</tex-math><mml:math id="M78"><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq39.gif"/></alternatives></inline-formula> (and the order of its variables) is clear, one can write assignments as tuples, e.g. <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(x_1,\ldots ,x_n)$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq40.gif"/></alternatives></inline-formula> in place of <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_1\mapsto x_1,\dots ,X_n\mapsto x_n$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq41.gif"/></alternatives></inline-formula> in the case of a total assignment (<inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '=\mathcal {X}$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>=</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq42.gif"/></alternatives></inline-formula>).</p>
    </sec>
    <sec id="FPar6">
      <title>Example 4</title>
      <p id="Par34">Consider the graph <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq43.gif"/></alternatives></inline-formula> of Fig. <xref rid="Fig1" ref-type="fig">1</xref>. We model graph coloring for <italic>G</italic> and four colors as a feature network <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}= (\mathcal {X} _{\text {col}},\mathcal {D} _{\text {col}},\mathcal {C} _{\text {col}},\mathcal {F} _{\text {col}})$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq44.gif"/></alternatives></inline-formula>. Let us first define <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {col}}= \{X_1, \ldots , X_9\}$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {col}}= \{D_1,\ldots ,D_9\}$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq46.gif"/></alternatives></inline-formula>; <inline-formula id="IEq47"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i=\{1,2,3,4\}$$\end{document}</tex-math><mml:math id="M94"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq47.gif"/></alternatives></inline-formula>. This specifies one variable <inline-formula id="IEq48"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq48.gif"/></alternatives></inline-formula> for every vertex <inline-formula id="IEq49"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i$$\end{document}</tex-math><mml:math id="M98"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq49.gif"/></alternatives></inline-formula> in the graph and one domain per variable, encoding the colors as integer values.</p>
      <p id="Par35">A total assignment <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x=\{X_1\mapsto x_1,\ldots ,\mathcal {X} _9\mapsto x_9\}\in \mathcal {A} _{\mathcal {X} _{\text {col}}}$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>9</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq50.gif"/></alternatives></inline-formula> describes a coloring where the vertex <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i\in V$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq51.gif"/></alternatives></inline-formula> has color <inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq52.gif"/></alternatives></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="Sec32">
    <title>Validity of assignments</title>
    <p id="Par36"> To distinguish valid from invalid assignments, we introduce constraints <inline-formula id="IEq53"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}$$\end{document}</tex-math><mml:math id="M106"><mml:mi mathvariant="script">C</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq53.gif"/></alternatives></inline-formula> that need to be satisfied by valid assignments. In our running example, this allows us to define valid colorings and thus completely specify graph coloring as CSP.</p>
    <sec id="FPar7">
      <title>Definition 3</title>
      <p id="Par37">(Constraint) Given <inline-formula id="IEq54"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq54.gif"/></alternatives></inline-formula>, each <bold>constraint</bold>
<inline-formula id="IEq55"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq55.gif"/></alternatives></inline-formula> is associated with a set of variables <inline-formula id="IEq56"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_1},\ldots ,X_{i_k}\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq56.gif"/></alternatives></inline-formula> and a Boolean function on values <inline-formula id="IEq57"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1},\ldots ,x_{i_k}$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq57.gif"/></alternatives></inline-formula>. Given an assignment <italic>x</italic> containing <inline-formula id="IEq58"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_j}\mapsto x_{i_j}$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub><mml:mo>↦</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq58.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq59"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j\in \{1,\ldots ,k\}$$\end{document}</tex-math><mml:math id="M118"><mml:mrow><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq59.gif"/></alternatives></inline-formula>, we <bold>evaluate the constraint</bold>
<italic>C</italic>
<bold>w.r.t.</bold> <italic>x</italic> by applying the Boolean function to <inline-formula id="IEq60"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1}, \ldots , x_{i_k}$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq60.gif"/></alternatives></inline-formula>. The resulting evaluation is denoted <italic>C</italic>(<italic>x</italic>).<disp-formula id="Equ7"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} C :\quad&amp;D_{i_1}\times \cdots \times D_{i_k}{} &amp; {} \rightarrow{} &amp; {} \{\textsf{True},\textsf{False} \} \\&amp;(x_{i_1},\dots ,x_{i_k}){} &amp; {} \mapsto{} &amp; {} C(x_{i_1},\dots ,x_{i_k}) \end{aligned}$$\end{document}</tex-math><mml:math id="M122" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>C</mml:mi><mml:mo>:</mml:mo><mml:mspace width="1em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="sans-serif">True</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="sans-serif">False</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>↦</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>We say <italic>C</italic> is <italic>k</italic><bold>-ary</bold> or has the <bold>arity</bold>
<italic>k</italic>. Let <inline-formula id="IEq61"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)=\{X_{i_1},\ldots ,X_{i_k}\}$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq61.gif"/></alternatives></inline-formula> denote the <bold>dependency</bold> of <italic>C</italic>. Note that the constraint literature commonly refers to the dependency of a constraint as its <bold>scope</bold>.</p>
      <p>We call an assignment <inline-formula id="IEq62"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _{\mathcal {X} '}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq62.gif"/></alternatives></inline-formula>, <inline-formula id="IEq63"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} '\subseteq \mathcal {X}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>⊆</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq63.gif"/></alternatives></inline-formula>, <bold>valid</bold> iff all constraints <inline-formula id="IEq64"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq64.gif"/></alternatives></inline-formula> with <inline-formula id="IEq65"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)\subseteq \mathcal {X} '$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⊆</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">X</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq65.gif"/></alternatives></inline-formula> are <bold>satisfied</bold> (i.e. evaluated to True) by the assignment <italic>x</italic>.</p>
    </sec>
    <sec id="FPar8">
      <title>Example 5</title>
      <p id="Par39">To enforce the neighbor coloring constraint in our example, it is sufficient to add the constraint below for each edge <inline-formula id="IEq66"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_i, v_j)\in E$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq66.gif"/></alternatives></inline-formula><disp-formula id="Equ8"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; c_{{{\text{col}}}} \,{\text{ = }}\,\left\{ {{\textsf{NotEquals}}_{{\left[ {i,j} \right]}} \,\left| {\left( {v_{i} ,\,v_{j} } \right)\, \in \,E} \right.} \right\}{\text{with}}\,\\ &amp; \quad {\textsf{NotEquals}}_{{[i,j]}} \,\left( {x_{i} ,x_{j} } \right)\, = \,\delta \left( {x_{i} \ne x_{j} } \right), \end{aligned}$$\end{document}</tex-math><mml:math id="M136" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mspace width="0.166667em"/><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>=</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mspace width="0.166667em"/><mml:mfenced close="}" open="{"><mml:mrow><mml:msub><mml:mi mathvariant="sans-serif">NotEquals</mml:mi><mml:mfenced close="]" open="["><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced open="|"><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>∈</mml:mo><mml:mspace width="0.166667em"/><mml:mi>E</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced><mml:mtext>with</mml:mtext><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:msub><mml:mi mathvariant="sans-serif">NotEquals</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mi>δ</mml:mi><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (p)$$\end{document}</tex-math><mml:math id="M138"><mml:mrow><mml:mi>δ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq67.gif"/></alternatives></inline-formula> is the truth value of the expression <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M140"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq68.gif"/></alternatives></inline-formula>.</p>
      <p id="Par40">The constraint <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq69.gif"/></alternatives></inline-formula> determines whether two given colors are distinct. Applying on all edges ensures that a valid assignment is a solution of the graph coloring problem. For example, both assignments <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}=(1,2,3,3,4,2,1,3,1)$$\end{document}</tex-math><mml:math id="M144"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq70.gif"/></alternatives></inline-formula> and <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}=(1,2,4,3,4,2,1,3,1)$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq71.gif"/></alternatives></inline-formula> satisfy the constraints <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {col}}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq72.gif"/></alternatives></inline-formula>.</p>
      <p id="Par41">In addition to finding valid assignments, one often wants to distinguish solutions by their quality. In graph coloring, we can e.g. aim for using fewer colors per 4-cycle; this would make <inline-formula id="IEq73"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}$$\end{document}</tex-math><mml:math id="M150"><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq73.gif"/></alternatives></inline-formula> preferable over <inline-formula id="IEq74"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}$$\end{document}</tex-math><mml:math id="M152"><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq74.gif"/></alternatives></inline-formula>.</p>
    </sec>
  </sec>
  <sec id="Sec33">
    <title>Evaluation of assignments by features</title>
    <p id="Par42"> Each feature <inline-formula id="IEq75"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq75.gif"/></alternatives></inline-formula> is a set of <italic>network functions</italic>. In this way, a feature can describe a global property of assignments, in contrast to constraints and network functions which typically act on a small number of variables. This asymmetry is introduced intentionally to allow us to easily control multiple global properties. It specifies an <italic>evaluation</italic> as a sum over the values of the functions in this set; the single functions are defined in the same way as constraints but return real values (instead of Boolean ones).</p>
    <sec id="FPar9">
      <title>Definition 4</title>
      <p id="Par43">(Network Function) Each <bold>network function</bold>
<inline-formula id="IEq76"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M156"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq76.gif"/></alternatives></inline-formula> of a feature network is associated with variables <inline-formula id="IEq77"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i_1},\ldots ,X_{i_k}\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq77.gif"/></alternatives></inline-formula> and a real-valued function that, given an assignment <italic>x</italic>, maps the values <inline-formula id="IEq78"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{i_1}, \ldots , x_{i_k}$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq78.gif"/></alternatives></inline-formula> to a real number.<disp-formula id="Equ9"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} f:\quad&amp;D_{i_1}\times \cdots \times D_{i_k}{} &amp; {} \rightarrow{} &amp; {} \mathbb {R} \\&amp;(x_{i_1},\dots ,x_{i_k}){} &amp; {} \mapsto{} &amp; {} f(x_{i_1},\dots ,x_{i_k}). \end{aligned}$$\end{document}</tex-math><mml:math id="M162" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:mspace width="1em"/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>↦</mml:mo><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>Analogous to constraints, the returned value is called the <bold>evaluation of</bold>
<inline-formula id="IEq79"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f$$\end{document}</tex-math><mml:math id="M164"><mml:mi>f</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq79.gif"/></alternatives></inline-formula>
<bold>by</bold>
<italic>x</italic>, denoted <italic>f</italic>(<italic>x</italic>), and the dependency is <inline-formula id="IEq80"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f):=\{X_{i_1},\ldots ,X_{i_k}\}$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq80.gif"/></alternatives></inline-formula>.</p>
      <p>Overloading notation, we define the <bold>(induced) feature evaluation</bold> (of valid assignment <italic>x</italic> by feature <italic>F</italic>) by <inline-formula id="IEq81"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F(x) = \sum _{f\in F}f(x)$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq81.gif"/></alternatives></inline-formula>. To account for multiple features, Infrared combines them linearly.</p>
    </sec>
    <sec id="FPar10">
      <title>Definition 5</title>
      <p id="Par45">(Assignment evaluation) Given a feature network <inline-formula id="IEq82"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq82.gif"/></alternatives></inline-formula> and <bold>feature weights</bold>
<inline-formula id="IEq83"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M172"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq83.gif"/></alternatives></inline-formula>; <inline-formula id="IEq84"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M174"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq84.gif"/></alternatives></inline-formula> defines respective weights <inline-formula id="IEq85"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _F$$\end{document}</tex-math><mml:math id="M176"><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq85.gif"/></alternatives></inline-formula> for each feature <italic>F</italic> in <inline-formula id="IEq86"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}$$\end{document}</tex-math><mml:math id="M178"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq86.gif"/></alternatives></inline-formula>. The evaluation of a valid assignment <inline-formula id="IEq87"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M180"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq87.gif"/></alternatives></inline-formula> is defined as a linear combination of the feature values w.r.t. <inline-formula id="IEq88"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M182"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq88.gif"/></alternatives></inline-formula>.<disp-formula id="Equ10"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}E_{\mathcal {N}}(x, \alpha ) = \sum _{F\in \mathcal {F}}\alpha _FF(x).\end{aligned}$$\end{document}</tex-math><mml:math id="M184" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
    <sec id="FPar11">
      <title>Example 6</title>
      <p id="Par46">We can now express our objective in the extended graph coloring problem in terms of a feature. For this purpose, we introduce network functions that each count the different colors in a 4-cycle <inline-formula id="IEq89"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v_i,v_j,v_k,v_l)$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq89.gif"/></alternatives></inline-formula> of the example graph,<disp-formula id="Equ11"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}{\text {\textsf{Card}}}_{[i,j,k,l]}(x_i,x_j,x_k,x_l) = |\{x_i,x_j,x_k,x_l\}|.\end{aligned}$$\end{document}</tex-math><mml:math id="M188" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ11.gif" position="anchor"/></alternatives></disp-formula>The corresponding feature set is then <inline-formula id="IEq90"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {col}} = \{F_{\text {card}}\}$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq90.gif"/></alternatives></inline-formula> with<disp-formula id="Equ12"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}F_{\text {card}}=\{{\text {\textsf{Card}}}_{[2,3,5,6]},{\text {\textsf{Card}}}_{[2,5,7,8]},{\text {\textsf{Card}}}_{[5,6,7,8]}\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M192" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ12.gif" position="anchor"/></alternatives></disp-formula>In feature network <inline-formula id="IEq91"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}=(\mathcal {X} _{\text {col}},\mathcal {D} _{\text {col}},\mathcal {C} _{\text {col}},\mathcal {F} _{\text {col}})$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq91.gif"/></alternatives></inline-formula>, the two assignment examples <inline-formula id="IEq92"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_{\text {col}}$$\end{document}</tex-math><mml:math id="M196"><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq92.gif"/></alternatives></inline-formula> and <inline-formula id="IEq93"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x'_{\text {col}}$$\end{document}</tex-math><mml:math id="M198"><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq93.gif"/></alternatives></inline-formula> are evaluated to <inline-formula id="IEq94"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}(x_{\text {col}},1)=3+4+4=11$$\end{document}</tex-math><mml:math id="M200"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>=</mml:mo><mml:mn>11</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq94.gif"/></alternatives></inline-formula> and <inline-formula id="IEq95"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}(x'_{\text {col}},1)=2+4+4=10$$\end{document}</tex-math><mml:math id="M202"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>x</mml:mi><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq95.gif"/></alternatives></inline-formula>, respectively (for feature weight 1).</p>
      <p>Observe that a constraint satisfaction problem (CSP) is a special case of a feature network <inline-formula id="IEq96"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M204"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq96.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq97"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}$$\end{document}</tex-math><mml:math id="M206"><mml:mi mathvariant="script">F</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq97.gif"/></alternatives></inline-formula> is empty. Feature networks are one of many possible extensions of CSPs known from the literature [<xref ref-type="bibr" rid="CR12">12</xref>] that add forms of quality evaluation. For example, cost networks typically contain only a single set of functions, whereas we decided to explicitly distinguish a set of constraints from multiple sets of functions (features).</p>
    </sec>
  </sec>
  <sec id="Sec34">
    <title>Infrared ’s modeling syntax</title>
    <p id="Par48">Recall the code snippets from the introduction. This code implements the feature network <inline-formula id="IEq98"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M208"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq98.gif"/></alternatives></inline-formula> that we formally developed above. As in our formal model description, the definition via Infrared ’s Python interface defines variables and domains, constraint and function types, and sets of constraints and functions. By providing the functionality to add constraints and functions to a model, we support compositional step-by-step construction and even extension of existing models.</p>
    <p id="Par49">Finally, our code examples demonstrate how models are fed to solvers, e.g. ir.Optimizer or ir.Sampler. This allows finding an optimal solution or generating controlled samples from the same model. We formally state the respective Problems <xref ref-type="sec" rid="FPar12">1</xref> and <xref ref-type="sec" rid="FPar13">2</xref> below; these solvers implement the algorithms of Sec. “Algorithms for solving feature networks”.</p>
    <p id="Par50">To keep this article concise, we refer the reader to our online reference and tutorials for syntactic aspects of using Infrared. For further reference, we recommend our coding-oriented introduction in Infrared in a book chapter [<xref ref-type="bibr" rid="CR28">28</xref>], which focuses on modeling of sequence and RNA design problems. Moreover, recall that we maintain an online archive of documented Infrared application examples (covering all examples of this paper).</p>
  </sec>
  <sec id="Sec35">
    <title>Problem statements</title>
    <p id="Par51">Given a feature network model <inline-formula id="IEq99"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M210"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq99.gif"/></alternatives></inline-formula>, there are two tasks of immediate particular interest: optimization and sampling of the solution space. Our framework addresses both tasks explicitly and solves them automatically based on the specification of <inline-formula id="IEq100"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M212"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq100.gif"/></alternatives></inline-formula>. First, we want to optimize assignments among all valid assignments of <inline-formula id="IEq101"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M214"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq101.gif"/></alternatives></inline-formula>. Concretely, we ask for the assignment that optimizes the evaluation, i.e. the linear combination of the features given specific feature weights <inline-formula id="IEq102"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M216"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq102.gif"/></alternatives></inline-formula>.</p>
    <sec id="FPar12">
      <title>Problem 1</title>
      <p id="Par52">(Assignment maximization)<def-list><def-item><term><sc>Input:</sc></term><def><p id="Par53">Feature network <inline-formula id="IEq103"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M218"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq103.gif"/></alternatives></inline-formula>, feature weights <inline-formula id="IEq104"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M220"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq104.gif"/></alternatives></inline-formula></p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par54">Valid assignment <inline-formula id="IEq105"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x^*\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M222"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mo>∗</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq105.gif"/></alternatives></inline-formula> that is maximal w.r.t. <inline-formula id="IEq106"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M224"><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq106.gif"/></alternatives></inline-formula> and <inline-formula id="IEq107"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M226"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq107.gif"/></alternatives></inline-formula>: <disp-formula id="Equ13"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x^{*} \, = \,\mathop {{\text{arg}}\,{\text{max}}}\limits_{{\begin{array}{*{20}c} {x \in {\mathcal{A}}_{{\mathcal{X}}} } \\ {x{\text{ is valid}}} \\ \end{array} }} \,E_{{\mathcal{N}}} \left( {x,\alpha } \right).$$\end{document}</tex-math><mml:math id="M228" display="block"><mml:mrow><mml:msup><mml:mi>x</mml:mi><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:munder><mml:mrow><mml:mtext>arg</mml:mtext><mml:mspace width="0.166667em"/><mml:mtext>max</mml:mtext></mml:mrow><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow><mml:mi>x</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.166667em"/><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ13.gif" position="anchor"/></alternatives></disp-formula></p></def></def-item></def-list></p>
      <p>Furthermore, we want to use models to sample valid assignments from a Boltzmann distribution, i.e. each sample should be generated with a probability proportional to the Boltzmann weight of their evaluation w.r.t. a given <inline-formula id="IEq108"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M230"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq108.gif"/></alternatives></inline-formula>.</p>
    </sec>
    <sec id="FPar13">
      <title>Problem 2</title>
      <p id="Par56">(Assignment sampling) <def-list><def-item><term><sc>Input:</sc></term><def><p id="Par57">Feature network <inline-formula id="IEq109"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M232"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq109.gif"/></alternatives></inline-formula>, feature weights <inline-formula id="IEq110"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M234"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq110.gif"/></alternatives></inline-formula></p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par58">Valid assignment <inline-formula id="IEq111"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\in \mathcal {A} _\mathcal {X}$$\end{document}</tex-math><mml:math id="M236"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq111.gif"/></alternatives></inline-formula> generated with a probability that is proportional to its Boltzmann weight w.r.t. <inline-formula id="IEq112"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq112.gif"/></alternatives></inline-formula> and <inline-formula id="IEq113"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M240"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq113.gif"/></alternatives></inline-formula>: <disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathbb {P}(x) \propto \exp \left( E_{\mathcal {N}}(x, \alpha )\right) . \end{aligned}$$\end{document}</tex-math><mml:math id="M242" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∝</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p></def></def-item></def-list></p>
      <p>Unfolding the assignment sampling problem, we realize that it implicitly asks for the <bold>partition function</bold><disp-formula id="Equ14"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}Z_{\mathcal {N}, \alpha }:= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \quad \exp \left( E_{\mathcal {N}}(x, \alpha )\right) ,\end{aligned}$$\end{document}</tex-math><mml:math id="M244" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="1em"/><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ14.gif" position="anchor"/></alternatives></disp-formula>i.e. the proportionality factor in Eq. <xref rid="Equ1" ref-type="disp-formula">1</xref>, such that<disp-formula id="Equ15"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathbb {P}(x) = \exp \left( E_{\mathcal {N}}(x, \alpha )\right) / Z_{\mathcal {N},\alpha }.\end{aligned}$$\end{document}</tex-math><mml:math id="M246" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ15.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Algorithms for solving feature networks</title>
    <p id="Par60">Given a feature network <inline-formula id="IEq114"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M248"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq114.gif"/></alternatives></inline-formula>, Problem <xref ref-type="sec" rid="FPar12">1</xref> asks for an optimal assignment to the variables. Here, the exponentially large assignment space forbids naive approaches. Based on a <bold>tree decomposition</bold> [<xref ref-type="bibr" rid="CR29">29</xref>] of the network, we employ a form of dynamic programming that decomposes the computation into<list list-type="bullet"><list-item><p id="Par61">a ‘forward’ optimization phase to determine the optimal evaluation (i.e. only its numerical value), while storing the results of subproblems</p></list-item><list-item><p id="Par62">and a subsequent traceback algorithm to obtain an optimal assignment.</p></list-item></list>Our approach performs the optimization on a tree-like structure, namely, an annotated <italic>tree decomposition</italic> of the network, called the <italic>cluster tree</italic>. Instead of inefficiently searching through all total assignments, it enumerates value combinations of variable subsets at tree nodes and avoids redundant computation by storing the results of subproblems/subtrees; the evaluation of functions and constraints is interleaved with this enumeration. The optimization traverses the tree in bottom-up order; moving top-down in the same tree, based on the (intermediary) results of the first phase, the traceback algorithm identifies one optimal assignment. As such, the approach is a form of <bold>cluster tree elimination (CTE)</bold> [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
    <sec id="Sec6">
      <title>Sampling resembles optimization</title>
      <p id="Par63">Assignment sampling (Problem <xref ref-type="sec" rid="FPar13">2</xref>) can be solved in a remarkably similar way to Problem <xref ref-type="sec" rid="FPar12">1</xref>. This task can also be split into two phases, namely, the computation of <bold>partition functions</bold> followed by stochastic traceback. Similar to standard traceback, stochastic traceback constructs solutions by tracing back through the partial results from the forward computation. However, it randomly selects values of variables based on partial partition functions. In this way it finally selects a total assignment from the intended distribution.</p>
      <p id="Par64">To emphasize the parallels between the problems, let us restate optimization as determining<disp-formula id="Equ16"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E_{\max }&amp;= \max _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \sum _{F\in \mathcal {F}} {\text {\textsf{Id}}}(\alpha _FF(x)) \\ {}&amp;= \max _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \sum _{F\in \mathcal {F}} \sum _{f\in F}{\text {\textsf{Id}}}(\alpha _Ff(x)) \end{aligned}$$\end{document}</tex-math><mml:math id="M250" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>E</mml:mi><mml:mo movablelimits="true">max</mml:mo></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ16.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq115"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Id}}}$$\end{document}</tex-math><mml:math id="M252"><mml:mtext mathvariant="sans-serif">Id</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq115.gif"/></alternatives></inline-formula> is the identity function, compared to the partition function<disp-formula id="Equ17"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} Z_{\mathcal {N}, \alpha }&amp;= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \prod _{F\in \mathcal {F}} \exp \left( \alpha _F F(x)\right) \\ {}&amp;= \sum _{\begin{array}{c} x\in \mathcal {A} _\mathcal {X} \\ x \text { is valid} \end{array}} \prod _{F\in \mathcal {F}} \prod _{f\in F} \exp \left( \alpha _F f(x)\right) . \end{aligned}$$\end{document}</tex-math><mml:math id="M254" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mi mathvariant="script">X</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>F</mml:mi></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ17.gif" position="anchor"/></alternatives></disp-formula>This breakdown into single network functions suggests that a general scheme can be applied to both problems, which specializes to either problem by the choice of algebra: <inline-formula id="IEq116"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\max , +, {\text {\textsf{Id}}})$$\end{document}</tex-math><mml:math id="M256"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">max</mml:mo><mml:mo>,</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq116.gif"/></alternatives></inline-formula> for optimization and <inline-formula id="IEq117"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M258"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq117.gif"/></alternatives></inline-formula> for the partition function (and thus sampling).</p>
    </sec>
    <sec id="Sec7">
      <title>Computation guided by cluster trees</title>
      <p id="Par65">We will define a cluster tree as an annotated tree decomposition of a feature network; it assigns the network functions and constraints to nodes (also called bags or clusters) where they should be evaluated. The computations process these clusters. Here, the tree decomposition determines the processing order. Processing the clusters bottom-up in the forward phase computes a result for the subtree of each cluster. For each cluster, this involves enumerating the assignments of cluster variables, while evaluating the constraints and functions of the cluster as well as previously computed results from the children clusters. The traceback follows the cluster tree top-down, partially re-evaluates the clusters and, on this basis, determines variables.</p>
      <sec id="Sec8">
        <title>Dependency graphs, tree decompositions, and cluster trees</title>
        <p id="Par66">To properly guide the dynamic programming evaluation, cluster trees must reflect the network dependencies through tree decompositions.</p>
        <sec id="FPar14">
          <title>Definition 6</title>
          <p id="Par67">(Dependency graph) The <bold>dependency graph of</bold>
<inline-formula id="IEq118"><alternatives><tex-math id="M259">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M260"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq118.gif"/></alternatives></inline-formula> is the hypergraph <inline-formula id="IEq119"><alternatives><tex-math id="M261">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}=(\mathcal {X}, \mathcal {E_\mathcal {N}})$$\end{document}</tex-math><mml:math id="M262"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq119.gif"/></alternatives></inline-formula>, where the hyperedges <inline-formula id="IEq120"><alternatives><tex-math id="M263">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {E_\mathcal {N}}$$\end{document}</tex-math><mml:math id="M264"><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq120.gif"/></alternatives></inline-formula> are the dependencies of the constraints and functions:<disp-formula id="Equ18"><alternatives><tex-math id="M265">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {E}_\mathcal {N}:= \Big \{{\text {vars}}(C) \mid C\in \mathcal {C}\,\Big \} \cup \Big \{{\text {vars}}(f) \mid f\in \bigcup _{F\in \mathcal {F}} F\,\Big \}.\end{aligned}$$\end{document}</tex-math><mml:math id="M266" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">{</mml:mo></mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∣</mml:mo><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mspace width="0.166667em"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">}</mml:mo></mml:mrow><mml:mo>∪</mml:mo><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">{</mml:mo></mml:mrow><mml:mtext>vars</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∣</mml:mo><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:munder><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:munder><mml:mi>F</mml:mi><mml:mspace width="0.166667em"/><mml:mrow><mml:mo maxsize="1.623em" minsize="1.623em" stretchy="true">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ18.gif" position="anchor"/></alternatives></disp-formula></p>
        </sec>
        <sec id="FPar15">
          <title>Definition 7</title>
          <p id="Par68">(Tree decomposition, treewidth) A <bold>tree decomposition of a dependency graph</bold>
<inline-formula id="IEq121"><alternatives><tex-math id="M267">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M268"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq121.gif"/></alternatives></inline-formula> is a pair <inline-formula id="IEq122"><alternatives><tex-math id="M269">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M270"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq122.gif"/></alternatives></inline-formula> of a (rooted) tree <inline-formula id="IEq123"><alternatives><tex-math id="M271">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T=(V,E)$$\end{document}</tex-math><mml:math id="M272"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq123.gif"/></alternatives></inline-formula> and a node labeling <inline-formula id="IEq124"><alternatives><tex-math id="M273">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi$$\end{document}</tex-math><mml:math id="M274"><mml:mi>χ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq124.gif"/></alternatives></inline-formula> by subsets of variables, i.e. <inline-formula id="IEq125"><alternatives><tex-math id="M275">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi :V\rightarrow 2^\mathcal {X}$$\end{document}</tex-math><mml:math id="M276"><mml:mrow><mml:mi>χ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">X</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq125.gif"/></alternatives></inline-formula>. These subsets are called the <bold>bags</bold> of the tree decomposition. <list list-type="order"><list-item><p id="Par69">Each variable <inline-formula id="IEq126"><alternatives><tex-math id="M277">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M278"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq126.gif"/></alternatives></inline-formula> is in at least one bag;</p></list-item><list-item><p id="Par70">For all hyperedge <inline-formula id="IEq127"><alternatives><tex-math id="M279">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e\in \mathcal {E}_\mathcal {N}$$\end{document}</tex-math><mml:math id="M280"><mml:mrow><mml:mi>e</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">E</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq127.gif"/></alternatives></inline-formula>, there is a node <inline-formula id="IEq128"><alternatives><tex-math id="M281">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\in V$$\end{document}</tex-math><mml:math id="M282"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq128.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq129"><alternatives><tex-math id="M283">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$e\subseteq \chi (u)$$\end{document}</tex-math><mml:math id="M284"><mml:mrow><mml:mi>e</mml:mi><mml:mo>⊆</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq129.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par71">For all variables <inline-formula id="IEq130"><alternatives><tex-math id="M285">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \mathcal {X}$$\end{document}</tex-math><mml:math id="M286"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">X</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq130.gif"/></alternatives></inline-formula>, the set <inline-formula id="IEq131"><alternatives><tex-math id="M287">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{u\in V \mid X\in \chi (u)\}$$\end{document}</tex-math><mml:math id="M288"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi><mml:mo>∣</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq131.gif"/></alternatives></inline-formula> induces a connected tree.</p></list-item></list>The <bold>width</bold> of a tree decomposition <inline-formula id="IEq132"><alternatives><tex-math id="M289">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M290"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq132.gif"/></alternatives></inline-formula> is<disp-formula id="Equ19"><alternatives><tex-math id="M291">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\max _{u\in V} |\chi (u)| - 1.\end{aligned}$$\end{document}</tex-math><mml:math id="M292" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ19.gif" position="anchor"/></alternatives></disp-formula>The <bold>treewidth</bold> of a hypergraph is the minimum width among all possible tree decompositions. The <bold>tree decomposition and treewidth of a feature network</bold>
<inline-formula id="IEq133"><alternatives><tex-math id="M293">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M294"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq133.gif"/></alternatives></inline-formula> are the respective tree decomposition and treewidth of its dependency graph <inline-formula id="IEq134"><alternatives><tex-math id="M295">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_\mathcal {N}$$\end{document}</tex-math><mml:math id="M296"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq134.gif"/></alternatives></inline-formula>.</p>
          <p>For a tree decomposition <inline-formula id="IEq135"><alternatives><tex-math id="M297">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M298"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq135.gif"/></alternatives></inline-formula>, <inline-formula id="IEq136"><alternatives><tex-math id="M299">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T=(V,E)$$\end{document}</tex-math><mml:math id="M300"><mml:mrow><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq136.gif"/></alternatives></inline-formula>, consider two nodes <inline-formula id="IEq137"><alternatives><tex-math id="M301">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u,v\in V$$\end{document}</tex-math><mml:math id="M302"><mml:mrow><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq137.gif"/></alternatives></inline-formula>, where <italic>v</italic> is the parent of <italic>u</italic>. Generally, we assume the tree edges to be oriented toward the root, such that <inline-formula id="IEq138"><alternatives><tex-math id="M303">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v \in E$$\end{document}</tex-math><mml:math id="M304"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq138.gif"/></alternatives></inline-formula>. We define two sets:<list list-type="bullet"><list-item><p id="Par73"><inline-formula id="IEq139"><alternatives><tex-math id="M305">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u):=\chi (u)\cap \chi (v)$$\end{document}</tex-math><mml:math id="M306"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∩</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq139.gif"/></alternatives></inline-formula> the <bold>separator set</bold> of shared variables between <italic>u</italic> and its parent; this set describes the variables whose values are passed between parent and child in a tree traversal;</p></list-item><list-item><p id="Par74"><inline-formula id="IEq140"><alternatives><tex-math id="M307">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u):=\chi (u){\setminus } {\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M308"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq140.gif"/></alternatives></inline-formula> the <bold>difference set</bold> between the child and its parent. These are the ‘introduced’ variables by the child; they will be assigned at a child in the top-down traversal of the traceback.</p></list-item></list>To simplify the traceback step, we require tree decompositions to have empty root and difference sets of size 1 (i.e. <inline-formula id="IEq141"><alternatives><tex-math id="M309">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\text {diff}}(u)| = 1$$\end{document}</tex-math><mml:math id="M310"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq141.gif"/></alternatives></inline-formula> for every child node <inline-formula id="IEq142"><alternatives><tex-math id="M311">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M312"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq142.gif"/></alternatives></inline-formula>); we call this property <bold>gentle</bold>. Gentle tree decompositions have exactly one edge per variable. Note that any tree decomposition (as defined above) can be efficiently turned into a gentle decomposition of the same width by inserting additional bags wherever the difference set is too large and contracting edges where no variables are introduced.<fig id="Fig2"><label>Fig. 2</label><caption><p>Dependency graph and tree decompositions of the running example (feature network <inline-formula id="IEq143"><alternatives><tex-math id="M313">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M314"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq143.gif"/></alternatives></inline-formula>). <bold>A</bold> The dependency graph contains one (binary) edge per dependency due to a constraint <inline-formula id="IEq144"><alternatives><tex-math id="M315">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}\in \mathcal {C} _{\text {col}}$$\end{document}</tex-math><mml:math id="M316"><mml:mrow><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq144.gif"/></alternatives></inline-formula>. The dependency hyperedges due to the three network functions <inline-formula id="IEq145"><alternatives><tex-math id="M317">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}\in F_{\text {card}}$$\end{document}</tex-math><mml:math id="M318"><mml:mrow><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mo>∈</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>card</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq145.gif"/></alternatives></inline-formula> are colored. <bold>B</bold> Two possible tree decompositions of this dependency graph (and therefore <inline-formula id="IEq146"><alternatives><tex-math id="M319">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {col}}$$\end{document}</tex-math><mml:math id="M320"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>col</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq146.gif"/></alternatives></inline-formula>). The difference set is underlined in each bag. Solving of the network could be based on either one, but with different run time, which is dominated by the largest bag (bold). Due to their largest bags of size 5 and 6, the two tree decompositions have respective <italic>width</italic> 4 and 5. The bags handling the 4-ary functions are highlighted, where colors correspond to the hyperedges of A. <bold>C</bold> Tree decomposition of the network without 4-ary functions <inline-formula id="IEq147"><alternatives><tex-math id="M321">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}$$\end{document}</tex-math><mml:math id="M322"><mml:mtext mathvariant="sans-serif">Card</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq147.gif"/></alternatives></inline-formula>. The functions don’t allow any tree decomposition with width 3; thus they make the problem more complex</p></caption><graphic xlink:href="13015_2024_258_Fig2_HTML" id="MO7"/></fig></p>
        </sec>
        <sec id="FPar16">
          <title>Definition 8</title>
          <p id="Par75">(Cluster Tree) A <bold>cluster tree</bold>
<inline-formula id="IEq148"><alternatives><tex-math id="M323">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T, \chi , \phi )$$\end{document}</tex-math><mml:math id="M324"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq148.gif"/></alternatives></inline-formula>
<bold>of an</bold> FN <inline-formula id="IEq149"><alternatives><tex-math id="M325">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M326"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq149.gif"/></alternatives></inline-formula> is a tree decomposition <inline-formula id="IEq150"><alternatives><tex-math id="M327">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T=(V,E),\chi )$$\end{document}</tex-math><mml:math id="M328"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq150.gif"/></alternatives></inline-formula> of <inline-formula id="IEq151"><alternatives><tex-math id="M329">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M330"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq151.gif"/></alternatives></inline-formula> together with an annotation <inline-formula id="IEq152"><alternatives><tex-math id="M331">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi : V\rightarrow 2^\mathcal {C} \cup 2^\mathcal {F}$$\end{document}</tex-math><mml:math id="M332"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">C</mml:mi></mml:msup><mml:mo>∪</mml:mo><mml:msup><mml:mn>2</mml:mn><mml:mi mathvariant="script">F</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq152.gif"/></alternatives></inline-formula>; it associates every <inline-formula id="IEq153"><alternatives><tex-math id="M333">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f\in \bigcup \mathcal {F}$$\end{document}</tex-math><mml:math id="M334"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mo>⋃</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq153.gif"/></alternatives></inline-formula> and <inline-formula id="IEq154"><alternatives><tex-math id="M335">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \mathcal {C}$$\end{document}</tex-math><mml:math id="M336"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq154.gif"/></alternatives></inline-formula> to exactly one node <inline-formula id="IEq155"><alternatives><tex-math id="M337">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\in V$$\end{document}</tex-math><mml:math id="M338"><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq155.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq156"><alternatives><tex-math id="M339">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f) \text { and } {\text {vars}}(C)\subseteq \chi (u)$$\end{document}</tex-math><mml:math id="M340"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>and vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>⊆</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq156.gif"/></alternatives></inline-formula>.</p>
          <p>We use notations <inline-formula id="IEq157"><alternatives><tex-math id="M341">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C\in \phi (u)$$\end{document}</tex-math><mml:math id="M342"><mml:mrow><mml:mi>C</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq157.gif"/></alternatives></inline-formula> and <inline-formula id="IEq158"><alternatives><tex-math id="M343">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f\in \phi (u)$$\end{document}</tex-math><mml:math id="M344"><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq158.gif"/></alternatives></inline-formula> to refer to the constraints and network functions assigned to node <italic>u</italic> of the cluster tree, respectively. Given a cluster tree, we write <inline-formula id="IEq159"><alternatives><tex-math id="M345">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _f$$\end{document}</tex-math><mml:math id="M346"><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq159.gif"/></alternatives></inline-formula> to refer to the weight <inline-formula id="IEq160"><alternatives><tex-math id="M347">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _F$$\end{document}</tex-math><mml:math id="M348"><mml:msub><mml:mi>α</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq160.gif"/></alternatives></inline-formula> of the feature <inline-formula id="IEq161"><alternatives><tex-math id="M349">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M350"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq161.gif"/></alternatives></inline-formula> that contains <italic>f</italic>.</p>
          <p>In addition to the general cluster tree definition, we assume that constraints and functions are assigned to the lowest possible bag (corresponding to the smallest possible subtree).</p>
        </sec>
      </sec>
      <sec id="Sec9">
        <title>Evaluation following the cluster tree</title>
        <p id="Par78">For efficiency, Infrared evaluates constraints and network functions as soon as sufficient partial information is available (in contrast to a <italic>generate-and-evaluate</italic> strategy, which would enumerate assignments and evaluate only total assignments).</p>
        <p id="Par79">Recall the notion of <italic>partial assignments</italic> from Definition <xref ref-type="sec" rid="FPar5">2</xref>. The evaluation of a constraint (resp. network function) w.r.t. the partial assignment <inline-formula id="IEq162"><alternatives><tex-math id="M351">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bar{x}}$$\end{document}</tex-math><mml:math id="M352"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq162.gif"/></alternatives></inline-formula> is denoted <inline-formula id="IEq163"><alternatives><tex-math id="M353">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C(\bar{x})$$\end{document}</tex-math><mml:math id="M354"><mml:mrow><mml:mi>C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq163.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq164"><alternatives><tex-math id="M355">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(\bar{x})$$\end{document}</tex-math><mml:math id="M356"><mml:mrow><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq164.gif"/></alternatives></inline-formula>); it is defined if the assignment assigns all variables of the dependency <inline-formula id="IEq165"><alternatives><tex-math id="M357">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(C)$$\end{document}</tex-math><mml:math id="M358"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>C</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq165.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq166"><alternatives><tex-math id="M359">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {vars}}(f)$$\end{document}</tex-math><mml:math id="M360"><mml:mrow><mml:mtext>vars</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>f</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq166.gif"/></alternatives></inline-formula>). Moreover, the union of partial assignments is well-defined if their variable sets are disjoint; this allows for the composition of larger partial assignments from smaller ones.</p>
        <sec id="FPar17">
          <title>Example 7</title>
          <p id="Par80">(Partial assignments) Consider the bag <inline-formula id="IEq167"><alternatives><tex-math id="M361">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{X_2,X_5,X_6,X_7,X_8\}$$\end{document}</tex-math><mml:math id="M362"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq167.gif"/></alternatives></inline-formula> of Fig. <xref rid="Fig2" ref-type="fig">2</xref>B (root of first tree) from the running graph-coloring example with cardinality network functions <inline-formula id="IEq168"><alternatives><tex-math id="M363">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}$$\end{document}</tex-math><mml:math id="M364"><mml:mtext mathvariant="sans-serif">Card</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq168.gif"/></alternatives></inline-formula>. The set <inline-formula id="IEq169"><alternatives><tex-math id="M365">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}_{\text {col}}=\{X_2\mapsto 2, X_5\mapsto 4, X_6\mapsto 2, X_7\mapsto 1, X_8\mapsto 3\}$$\end{document}</tex-math><mml:math id="M366"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mtext>col</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq169.gif"/></alternatives></inline-formula> is a partial assignment of the bag’s variables; it lets us evaluate <inline-formula id="IEq170"><alternatives><tex-math id="M367">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}_{[2,5,7,8]}$$\end{document}</tex-math><mml:math id="M368"><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq170.gif"/></alternatives></inline-formula>, <inline-formula id="IEq171"><alternatives><tex-math id="M369">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Card}}}_{[2,5,7,8]}(\bar{x}_{\text {col}})=4$$\end{document}</tex-math><mml:math id="M370"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Card</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mtext>col</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq171.gif"/></alternatives></inline-formula>, since the bag contains the dependency variables of this function. Consider another partial assignment <inline-formula id="IEq172"><alternatives><tex-math id="M371">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}=\{X_2\mapsto 2, X_5\mapsto 4, X_6\mapsto 3, X_7\mapsto 1, X_8\mapsto 3\}$$\end{document}</tex-math><mml:math id="M372"><mml:mrow><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>8</mml:mn></mml:msub><mml:mo>↦</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq172.gif"/></alternatives></inline-formula>; <inline-formula id="IEq173"><alternatives><tex-math id="M373">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}$$\end{document}</tex-math><mml:math id="M374"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq173.gif"/></alternatives></inline-formula> is not valid because <inline-formula id="IEq174"><alternatives><tex-math id="M375">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{NotEquals}}}_{[6,8]}$$\end{document}</tex-math><mml:math id="M376"><mml:msub><mml:mtext mathvariant="sans-serif">NotEquals</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq174.gif"/></alternatives></inline-formula> evaluates to False w.r.t. <inline-formula id="IEq175"><alternatives><tex-math id="M377">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}'_{\text {col}}$$\end{document}</tex-math><mml:math id="M378"><mml:msubsup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mtext>col</mml:mtext><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq175.gif"/></alternatives></inline-formula>.</p>
          <p>Given a cluster tree <inline-formula id="IEq176"><alternatives><tex-math id="M379">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi ,\phi )$$\end{document}</tex-math><mml:math id="M380"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq176.gif"/></alternatives></inline-formula> and a node <italic>u</italic> with parent <italic>v</italic>, the forward optimization algorithm successively computes optimal evaluations for subtrees <inline-formula id="IEq177"><alternatives><tex-math id="M381">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_{u}$$\end{document}</tex-math><mml:math id="M382"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq177.gif"/></alternatives></inline-formula> below nodes <italic>u</italic> (constituting subproblems of Problem <xref ref-type="sec" rid="FPar12">1</xref>).</p>
          <p>The <bold>optimal evaluation of subtree</bold>
<inline-formula id="IEq178"><alternatives><tex-math id="M383">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_{u}$$\end{document}</tex-math><mml:math id="M384"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq178.gif"/></alternatives></inline-formula> is<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M385">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \max _{\begin{array}{c} \bar{x}\in \mathcal {A} _{\chi (T_{u})}\\ \bar{x} \text { is valid} \end{array}} \sum _{f\in \phi (T_{u})}\alpha _ff(\bar{x}) \end{aligned}$$\end{document}</tex-math><mml:math id="M386" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mi>χ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq179"><alternatives><tex-math id="M387">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\chi (T_{u}):= \bigcup _{c\in T_{u}}\chi (c)$$\end{document}</tex-math><mml:math id="M388"><mml:mrow><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq179.gif"/></alternatives></inline-formula> and <inline-formula id="IEq180"><alternatives><tex-math id="M389">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi (T_{u}):= \bigcup _{c\in T_{u}}\phi (c)$$\end{document}</tex-math><mml:math id="M390"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:mrow></mml:msub><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq180.gif"/></alternatives></inline-formula>.</p>
          <p>To obtain total subtree evaluations, the algorithm computes and stores <italic>conditional</italic> optimal subtree evaluations, which depend on the partial assignment to <inline-formula id="IEq181"><alternatives><tex-math id="M391">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M392"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq181.gif"/></alternatives></inline-formula>. Thus, they allow decoupling the subtree from the remaining tree.</p>
          <p>For a node <italic>u</italic>, these conditional evaluations are computed for all such valid partial assignments, such that they specify network functions <inline-formula id="IEq182"><alternatives><tex-math id="M393">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u \rightarrow v}$$\end{document}</tex-math><mml:math id="M394"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq182.gif"/></alternatives></inline-formula>. We call them <bold>messages</bold> since they are used to pass information from child <italic>u</italic> to parent <italic>v</italic>.</p>
          <p>Additionally, define <inline-formula id="IEq183"><alternatives><tex-math id="M395">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(T_{u}):=\chi (T_{u}){\setminus }{\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M396"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq183.gif"/></alternatives></inline-formula> as the set of <bold>variables introduced by</bold>
<inline-formula id="IEq184"><alternatives><tex-math id="M397">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$T_u$$\end{document}</tex-math><mml:math id="M398"><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq184.gif"/></alternatives></inline-formula>.</p>
        </sec>
        <sec id="FPar18">
          <title>Definition 9</title>
          <p id="Par86">(Conditional optimal subtree evaluation) Let <inline-formula id="IEq185"><alternatives><tex-math id="M399">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M400"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq185.gif"/></alternatives></inline-formula> be a node in the cluster tree <inline-formula id="IEq186"><alternatives><tex-math id="M401">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi ,\phi )$$\end{document}</tex-math><mml:math id="M402"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq186.gif"/></alternatives></inline-formula>; denote its parent by <italic>v</italic>. The <bold>conditional optimal subtree evaluation</bold> at <italic>u</italic> under condition <inline-formula id="IEq187"><alternatives><tex-math id="M403">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M404"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq187.gif"/></alternatives></inline-formula> is<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M405">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \max _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(T_{u})}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}} \sum _{f\in \phi (T_{u})}\alpha _ff(\bar{x}\cup \bar{x}') \end{aligned}$$\end{document}</tex-math><mml:math id="M406" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>Since the root of <italic>T</italic> is empty, conditional optimal subtree evaluations allow us to directly infer the total evaluation at the root. For every child <italic>u</italic> of the root, <inline-formula id="IEq188"><alternatives><tex-math id="M407">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M408"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq188.gif"/></alternatives></inline-formula> is empty; moreover, the children of the root do not have any variables in common (due to the definition of tree decomposition). Consequently, we obtain the total evaluation by summing the <inline-formula id="IEq189"><alternatives><tex-math id="M409">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M410"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq189.gif"/></alternatives></inline-formula>-ary messages sent to the root from its children<disp-formula id="Equ20"><alternatives><tex-math id="M411">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E_{\max } = \sum _{\text {child } u \text { of root}} m_{u\rightarrow \text { root}}(\varnothing ). \end{aligned}$$\end{document}</tex-math><mml:math id="M412" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mo movablelimits="true">max</mml:mo></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtext>child</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>of root</mml:mtext></mml:mrow></mml:munder><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>root</mml:mtext></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>∅</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ20.gif" position="anchor"/></alternatives></disp-formula></p>
          <p>See Fig. <xref rid="Fig3" ref-type="fig">3</xref> for an illustration of the bottom-up computation and the subsequent top-down traceback. Following Proposition <xref ref-type="sec" rid="FPar19">1</xref> each bag <inline-formula id="IEq190"><alternatives><tex-math id="M413">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u$$\end{document}</tex-math><mml:math id="M414"><mml:mi>u</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq190.gif"/></alternatives></inline-formula> can be processed together with the messages sent to it from its children; thus, we can understand the full computation as bottom-up message passing (Algorithm 1). The notion of message passing stems from more general formulations of CTE on unrooted cluster trees [<xref ref-type="bibr" rid="CR30">30</xref>]. The algorithm is correct due to the following proposition (shown in Additional file 1).</p>
        </sec>
        <sec id="FPar19">
          <title>Proposition 1</title>
          <p id="Par89">Let <inline-formula id="IEq191"><alternatives><tex-math id="M415">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M416"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq191.gif"/></alternatives></inline-formula> be a cluster tree edge and <inline-formula id="IEq192"><alternatives><tex-math id="M417">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M418"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq192.gif"/></alternatives></inline-formula> be a partial assignment of <inline-formula id="IEq193"><alternatives><tex-math id="M419">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M420"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq193.gif"/></alternatives></inline-formula>. The conditional optimal subtree evaluations <inline-formula id="IEq194"><alternatives><tex-math id="M421">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}(\bar{x})$$\end{document}</tex-math><mml:math id="M422"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq194.gif"/></alternatives></inline-formula> (Eq. <xref rid="Equ3" ref-type="disp-formula">3</xref>) can be recursively computed as<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M423">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\!\!\max _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(u)}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}}\! \left[ \!\begin{array}{l} \sum _{f\in \phi (u)} \alpha _ff(\bar{x}\cup \bar{x}') \\ + \sum _{c\text { child of }u} m_{c\rightarrow u}(\bar{x}\cup \bar{x}') \end{array}\!\right] . \end{aligned}$$\end{document}</tex-math><mml:math id="M424" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:munder><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mfenced close="]" open="["><mml:mspace width="-0.166667em"/><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>+</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>child of</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mspace width="-0.166667em"/></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula></p>
          <p><italic>Algorithms for partition functions and sampling</italic> As argued, the computation of partition functions (Problem <xref ref-type="sec" rid="FPar13">2</xref>) follows the same algorithmic structure, changing the algebra in Algorithm 1 from <inline-formula id="IEq195"><alternatives><tex-math id="M425">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\max , +, {\text {\textsf{Id}}})$$\end{document}</tex-math><mml:math id="M426"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">max</mml:mo><mml:mo>,</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mtext mathvariant="sans-serif">Id</mml:mtext><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq195.gif"/></alternatives></inline-formula> to <inline-formula id="IEq196"><alternatives><tex-math id="M427">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M428"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq196.gif"/></alternatives></inline-formula> and setting the initial value of <inline-formula id="IEq197"><alternatives><tex-math id="M429">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M430"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq197.gif"/></alternatives></inline-formula> to <inline-formula id="IEq198"><alternatives><tex-math id="M431">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M432"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq198.gif"/></alternatives></inline-formula>. Consequently, the partition function <inline-formula id="IEq199"><alternatives><tex-math id="M433">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Z_{\mathcal {N},\alpha }$$\end{document}</tex-math><mml:math id="M434"><mml:msub><mml:mi>Z</mml:mi><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>,</mml:mo><mml:mi>α</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq199.gif"/></alternatives></inline-formula> is obtained by multiplying all <inline-formula id="IEq200"><alternatives><tex-math id="M435">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M436"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq200.gif"/></alternatives></inline-formula>-ary messages sent to the root.</p>
          <p>Analogous to partial optimal evaluations, the modified Algorithm 1 with <inline-formula id="IEq201"><alternatives><tex-math id="M437">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(+, \times , \exp )$$\end{document}</tex-math><mml:math id="M438"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>+</mml:mo><mml:mo>,</mml:mo><mml:mo>×</mml:mo><mml:mo>,</mml:mo><mml:mo>exp</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq201.gif"/></alternatives></inline-formula>-algebra computes partial partition functions.</p>
        </sec>
        <sec id="FPar20">
          <title>Definition 10</title>
          <p id="Par92">(Conditional subtree partition functions) Let <italic>u</italic> be a node in a cluster tree <inline-formula id="IEq202"><alternatives><tex-math id="M439">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\xi ,\phi )$$\end{document}</tex-math><mml:math id="M440"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>ξ</mml:mi><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq202.gif"/></alternatives></inline-formula>, where <italic>v</italic> is its parent. The <bold>conditional partition function</bold> at <italic>u</italic> under condition <inline-formula id="IEq203"><alternatives><tex-math id="M441">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M442"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq203.gif"/></alternatives></inline-formula> is<disp-formula id="Equ5"><label>5</label><alternatives><tex-math id="M443">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\!\sum _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(T_{u})}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}} \prod _{f\in \phi (T_{u})}\!\exp (\alpha _f f(\bar{x}\cup \bar{x}')) \end{aligned}$$\end{document}</tex-math><mml:math id="M444" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:mspace width="-0.166667em"/><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>for all <inline-formula id="IEq204"><alternatives><tex-math id="M445">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}.$$\end{document}</tex-math><mml:math id="M446"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq204.gif"/></alternatives></inline-formula></p>
          <p>Partition functions are computed by a recursive algorithm analogous to <xref rid="Sec10" ref-type="sec">1</xref>; its correctness is stated in analogy to Proposition <xref ref-type="sec" rid="FPar19">1</xref> (shown in Additional file 1).</p>
        </sec>
        <sec id="FPar21">
          <title>Proposition 2</title>
          <p id="Par94">Let <inline-formula id="IEq205"><alternatives><tex-math id="M447">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M448"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq205.gif"/></alternatives></inline-formula> be a cluster tree edge and <inline-formula id="IEq206"><alternatives><tex-math id="M449">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {sep}}(u)}$$\end{document}</tex-math><mml:math id="M450"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq206.gif"/></alternatives></inline-formula> be a partial assignment of <inline-formula id="IEq207"><alternatives><tex-math id="M451">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M452"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq207.gif"/></alternatives></inline-formula>. The conditional subtree partition functions (Eq. <xref rid="Equ5" ref-type="disp-formula">5</xref>) can be recursively computed as<disp-formula id="Equ6"><label>6</label><alternatives><tex-math id="M453">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} m_{u\rightarrow v}(\bar{x}) = \!\sum _{\begin{array}{c} \bar{x}'\in \mathcal {A} _{{\text {diff}}(u)}\\ \bar{x}\cup \bar{x}' \text { is valid} \end{array}}\! \left[ \!\begin{array}{l} \prod _{f\in \phi (u)} \exp (\alpha _ff(\bar{x}\cup \bar{x}')) \\ \times \prod _{c\text { child of }u} m_{c\rightarrow u}(\bar{x}\cup \bar{x}') \end{array}\!\right] \end{aligned}$$\end{document}</tex-math><mml:math id="M454" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mspace width="-0.166667em"/><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mspace width="0.333333em"/><mml:mtext>is valid</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="-0.166667em"/><mml:mfenced close="]" open="["><mml:mspace width="-0.166667em"/><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>f</mml:mi><mml:mo>∈</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mo>exp</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>×</mml:mo><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:mi>c</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>child of</mml:mtext><mml:mspace width="0.333333em"/><mml:mi>u</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∪</mml:mo><mml:msup><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mspace width="-0.166667em"/></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>with <inline-formula id="IEq208"><alternatives><tex-math id="M455">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _f$$\end{document}</tex-math><mml:math id="M456"><mml:msub><mml:mi>α</mml:mi><mml:mi>f</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq208.gif"/></alternatives></inline-formula> as in Prop. <xref ref-type="sec" rid="FPar19">1</xref>.</p>
          <p>
            <fig id="Fig3">
              <label>Fig. 3</label>
              <caption>
                <p>Illustration of the forward optimal evaluation and traceback algorithms (by the running example of graph coloring; Fig. <xref rid="Fig1" ref-type="fig">1</xref>). We elaborate steps of the computation guided by the gentle tree decomposition corresponding to Fig. <xref rid="Fig2" ref-type="fig">2</xref>B (top). The indices of variables in the difference set are underlined. On the left, we sketch the computation of the messages <inline-formula id="IEq209"><alternatives><tex-math id="M457">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{w\rightarrow u}$$\end{document}</tex-math><mml:math id="M458"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq209.gif"/></alternatives></inline-formula> and <inline-formula id="IEq210"><alternatives><tex-math id="M459">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M460"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq210.gif"/></alternatives></inline-formula>: For every assignment of the separator set, the algorithm maximizes over assignments of the difference variable (it dismisses invalid assignments); in the computation of <inline-formula id="IEq211"><alternatives><tex-math id="M461">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M462"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq211.gif"/></alternatives></inline-formula>, it used the already computed message <inline-formula id="IEq212"><alternatives><tex-math id="M463">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{w\rightarrow u}$$\end{document}</tex-math><mml:math id="M464"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq212.gif"/></alternatives></inline-formula>. On the right, we show the corresponding computations to assign values to the <italic>underlined</italic> variables during traceback: given an optimal assignment to the variables in <italic>v</italic>, we first infer that <inline-formula id="IEq213"><alternatives><tex-math id="M465">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_5=2$$\end{document}</tex-math><mml:math id="M466"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq213.gif"/></alternatives></inline-formula> is an optimal continuation, and finally <inline-formula id="IEq214"><alternatives><tex-math id="M467">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_3=2$$\end{document}</tex-math><mml:math id="M468"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq214.gif"/></alternatives></inline-formula></p>
              </caption>
              <graphic xlink:href="13015_2024_258_Fig3_HTML" id="MO8"/>
            </fig>
          </p>
        </sec>
      </sec>
    </sec>
    <sec id="Sec10">
      <title>Traceback</title>
      <p id="Par96">Once all messages of partial optimal score are computed by Algorithm 1, the optimal assignment is obtained by a traceback traversing the cluster tree top-down in preorder (Algorithm <xref rid="Sec10" ref-type="sec">2</xref>). At each edge <inline-formula id="IEq215"><alternatives><tex-math id="M469">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M470"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq215.gif"/></alternatives></inline-formula>, an optimal assignment of the variables in the parent <italic>v</italic> is known. Infrared then determines the optimal assignment to the difference variables (in the singleton set <inline-formula id="IEq216"><alternatives><tex-math id="M471">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M472"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq216.gif"/></alternatives></inline-formula>) such that the evaluation of bag <italic>u</italic> equals the message sent to the parent bag <inline-formula id="IEq217"><alternatives><tex-math id="M473">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v$$\end{document}</tex-math><mml:math id="M474"><mml:mi>v</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq217.gif"/></alternatives></inline-formula>. Let <inline-formula id="IEq218"><alternatives><tex-math id="M475">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x$$\end{document}</tex-math><mml:math id="M476"><mml:mi>x</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq218.gif"/></alternatives></inline-formula> be the partial optimal assignment determined thus far in the algorithm (assigning the variables of <italic>v</italic>); the algorithm searches through <inline-formula id="IEq219"><alternatives><tex-math id="M477">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}\in \mathcal {A} _{{\text {diff}}(u)}$$\end{document}</tex-math><mml:math id="M478"><mml:mrow><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq219.gif"/></alternatives></inline-formula> and selects one assignment <inline-formula id="IEq220"><alternatives><tex-math id="M479">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bar{x}$$\end{document}</tex-math><mml:math id="M480"><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq220.gif"/></alternatives></inline-formula> that yields the optimal message. This choice is optimal, such that the algorithm can continue its top-down traversal after updating <italic>x</italic> by <inline-formula id="IEq221"><alternatives><tex-math id="M481">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x\cup \bar{x}$$\end{document}</tex-math><mml:math id="M482"><mml:mrow><mml:mi>x</mml:mi><mml:mo>∪</mml:mo><mml:mover accent="true"><mml:mrow><mml:mi>x</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">¯</mml:mo></mml:mrow></mml:mover></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq221.gif"/></alternatives></inline-formula>.</p>
      <p id="Par97">For sampling, Infrared performs a stochastic traceback (Algorithm 3), requiring the messages from the computation of the partition function. Whereas the general structure resembles that of optimal traceback, at each edge <inline-formula id="IEq222"><alternatives><tex-math id="M483">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M484"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq222.gif"/></alternatives></inline-formula> the algorithm randomly chooses a tracking value <inline-formula id="IEq223"><alternatives><tex-math id="M485">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M486"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq223.gif"/></alternatives></inline-formula> uniformly from the range <inline-formula id="IEq224"><alternatives><tex-math id="M487">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0$$\end{document}</tex-math><mml:math id="M488"><mml:mrow><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq224.gif"/></alternatives></inline-formula> and <inline-formula id="IEq225"><alternatives><tex-math id="M489">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M490"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq225.gif"/></alternatives></inline-formula>. While iterating through the possible assignments for <inline-formula id="IEq226"><alternatives><tex-math id="M491">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M492"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq226.gif"/></alternatives></inline-formula>, <inline-formula id="IEq227"><alternatives><tex-math id="M493">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M494"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq227.gif"/></alternatives></inline-formula> is gradually decreased with partial Boltzmann factors. The value of the difference variable is selected once <inline-formula id="IEq228"><alternatives><tex-math id="M495">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t$$\end{document}</tex-math><mml:math id="M496"><mml:mi>t</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq228.gif"/></alternatives></inline-formula> becomes negative. This selects the value following the desired Boltzmann distribution. We show the following correctness claim in Additional file 1.</p>
      <sec id="FPar22">
        <title>Proposition 3</title>
        <p id="Par98">Algorithm 3 solves Problem <xref ref-type="sec" rid="FPar13">2</xref> by sampling assignments from the Boltzmann distribution of Eq. (<xref rid="Equ1" ref-type="disp-formula">1</xref>).</p>
        <p>
          <fig position="anchor" id="Figf">
            <label>Algorithm 1</label>
            <caption>
              <p>Optimal evaluation</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figf_HTML" id="MO9"/>
          </fig>
        </p>
        <p>
          <fig position="anchor" id="Figg">
            <label>Algorithm 2</label>
            <caption>
              <p>Optimal traceback</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figg_HTML" id="MO10"/>
          </fig>
        </p>
        <p>
          <fig position="anchor" id="Figh">
            <label>Algorithm 3</label>
            <caption>
              <p>Stochastic traceback: sampling</p>
            </caption>
            <graphic position="anchor" xlink:href="13015_2024_258_Figh_HTML" id="MO11"/>
          </fig>
        </p>
      </sec>
    </sec>
    <sec id="Sec11">
      <title>Computational complexity</title>
      <p id="Par102">Note that while computational complexities can be interpreted as corollaries from CTE [<xref ref-type="bibr" rid="CR12">12</xref>], we rephrase the arguments adapted to our concrete algorithms.</p>
      <p id="Par103">For a feature network <inline-formula id="IEq229"><alternatives><tex-math id="M497">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M498"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq229.gif"/></alternatives></inline-formula>, we state complexities in terms of additional parameters: the <bold>largest domain size</bold>
<inline-formula id="IEq230"><alternatives><tex-math id="M499">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d:=\max _{D\in \mathcal {D}}|D|$$\end{document}</tex-math><mml:math id="M500"><mml:mrow><mml:mi>d</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">D</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>D</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq230.gif"/></alternatives></inline-formula>, the <bold>number of variables</bold>
<inline-formula id="IEq231"><alternatives><tex-math id="M501">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {n}:=|\mathcal {X} |$$\end{document}</tex-math><mml:math id="M502"><mml:mrow><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq231.gif"/></alternatives></inline-formula>, and the total <bold>number of constraints and network functions</bold>
<inline-formula id="IEq232"><alternatives><tex-math id="M503">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {m}:=|\mathcal {C} |+\sum _{F\in \mathcal {F}}|F|$$\end{document}</tex-math><mml:math id="M504"><mml:mrow><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>F</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq232.gif"/></alternatives></inline-formula>. Let <inline-formula id="IEq233"><alternatives><tex-math id="M505">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M506"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq233.gif"/></alternatives></inline-formula> denote the <bold>treewidth</bold> of dependency graph <inline-formula id="IEq234"><alternatives><tex-math id="M507">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\mathcal {N}}$$\end{document}</tex-math><mml:math id="M508"><mml:msub><mml:mi>G</mml:mi><mml:mi mathvariant="script">N</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq234.gif"/></alternatives></inline-formula>. Furthermore, we assume that single constraints and network functions are evaluated in constant time. We will see later from the applications in Sections “Applications to concrete bionformatics problems” and “Model extensions and advanced topics” the assumption holds in practice.</p>
      <sec id="FPar23">
        <title>Proposition 4</title>
        <p id="Par104">Algorithm 1 takes <inline-formula id="IEq235"><alternatives><tex-math id="M509">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d ^{w +1} \cdot (\mathfrak {m} + \mathfrak {n}) \right)$$\end{document}</tex-math><mml:math id="M510"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq235.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq236"><alternatives><tex-math id="M511">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d ^w \cdot \mathfrak {n} \right)$$\end{document}</tex-math><mml:math id="M512"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mi>d</mml:mi><mml:mi>w</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq236.gif"/></alternatives></inline-formula> space.</p>
      </sec>
      <sec id="FPar24">
        <title>Proof</title>
        <p id="Par105">Algorithm 1 computes one message <inline-formula id="IEq237"><alternatives><tex-math id="M513">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{u\rightarrow v}$$\end{document}</tex-math><mml:math id="M514"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq237.gif"/></alternatives></inline-formula> for each edge <inline-formula id="IEq238"><alternatives><tex-math id="M515">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M516"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq238.gif"/></alternatives></inline-formula> of the tree decomposition of <inline-formula id="IEq239"><alternatives><tex-math id="M517">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M518"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq239.gif"/></alternatives></inline-formula>. In every child bag <italic>u</italic>, the algorithm computes message values for each assignment of the variables in <inline-formula id="IEq240"><alternatives><tex-math id="M519">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M520"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq240.gif"/></alternatives></inline-formula>, for each value optimizing over assignments of <inline-formula id="IEq241"><alternatives><tex-math id="M521">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M522"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq241.gif"/></alternatives></inline-formula>. In every iteration, it evaluates the constraints and functions in <inline-formula id="IEq242"><alternatives><tex-math id="M523">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi (u)$$\end{document}</tex-math><mml:math id="M524"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq242.gif"/></alternatives></inline-formula>, as well as the messages from the children.</p>
        <p id="Par106">We thus bound the computation by<disp-formula id="Equ21"><alternatives><tex-math id="M525">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v}\ \prod _{x_i\in {\text {sep}}(u)}\!|\mathcal {D} _{i}|\,\cdot \!\prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i|\,\cdot (|\phi (u)|+n_u), \end{aligned}$$\end{document}</tex-math><mml:math id="M526" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ21.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq243"><alternatives><tex-math id="M527">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M528"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq243.gif"/></alternatives></inline-formula> counts the children of u. Since <inline-formula id="IEq244"><alternatives><tex-math id="M529">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M530"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq244.gif"/></alternatives></inline-formula> and <inline-formula id="IEq245"><alternatives><tex-math id="M531">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M532"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq245.gif"/></alternatives></inline-formula> are disjoint and contain exactly the variables of in the bag <italic>u</italic>, there are at most <inline-formula id="IEq246"><alternatives><tex-math id="M533">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d^{w +1}$$\end{document}</tex-math><mml:math id="M534"><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq246.gif"/></alternatives></inline-formula> iterations per bag. We relax the bound to<disp-formula id="Equ22"><alternatives><tex-math id="M535">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;d ^{w +1}\cdot \sum _{u\rightarrow v} (|\phi (u)|+n_u) \end{aligned}$$\end{document}</tex-math><mml:math id="M536" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>·</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ22.gif" position="anchor"/></alternatives></disp-formula>Every constraint and function is evaluated in the iterations of exactly one bag <italic>u</italic>; thus, we can amortize the contributions due to <inline-formula id="IEq247"><alternatives><tex-math id="M537">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sum _{u\rightarrow v} |\phi (u)| = \mathfrak {m}$$\end{document}</tex-math><mml:math id="M538"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq247.gif"/></alternatives></inline-formula>. Moreover, every message from a child is accessed (in constant time) in the iterations of exactly one bag; we can thus amortize due to <inline-formula id="IEq248"><alternatives><tex-math id="M539">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sum _{u\rightarrow v} n_u = |X|$$\end{document}</tex-math><mml:math id="M540"><mml:mrow><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:msub><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq248.gif"/></alternatives></inline-formula>. This lets us simplify the last bound further to derive the claim on the time complexity.</p>
        <p id="Par107">Concerning space, the algorithm stores a message at each edge of the tree decomposition. Per edge <inline-formula id="IEq249"><alternatives><tex-math id="M541">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M542"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq249.gif"/></alternatives></inline-formula>, this takes space <inline-formula id="IEq250"><alternatives><tex-math id="M543">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^{{\text {sep}}(u)})$$\end{document}</tex-math><mml:math id="M544"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq250.gif"/></alternatives></inline-formula>. This bounds the space by <inline-formula id="IEq251"><alternatives><tex-math id="M545">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^s \cdot |E|)$$\end{document}</tex-math><mml:math id="M546"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mi>s</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq251.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq252"><alternatives><tex-math id="M547">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s=\max _u {\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M548"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mi>u</mml:mi></mml:msub><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq252.gif"/></alternatives></inline-formula>. For gentle tree decompositions, <inline-formula id="IEq253"><alternatives><tex-math id="M549">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|E|=|X|$$\end{document}</tex-math><mml:math id="M550"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq253.gif"/></alternatives></inline-formula> and <inline-formula id="IEq254"><alternatives><tex-math id="M551">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s\le w$$\end{document}</tex-math><mml:math id="M552"><mml:mrow><mml:mi>s</mml:mi><mml:mo>≤</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq254.gif"/></alternatives></inline-formula>, showing the claim. <inline-formula id="IEq255"><alternatives><tex-math id="M553">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><mml:math id="M554"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq255.gif"/></alternatives></inline-formula></p>
      </sec>
      <sec id="FPar25">
        <title>Proposition 5</title>
        <p id="Par108">Algo. <xref rid="Sec10" ref-type="sec">2</xref> runs in <inline-formula id="IEq256"><alternatives><tex-math id="M555">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}\left( d \cdot (\mathfrak {m} + \mathfrak {n}) \right)$$\end{document}</tex-math><mml:math id="M556"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:mi>d</mml:mi><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq256.gif"/></alternatives></inline-formula> time.</p>
      </sec>
      <sec id="FPar26">
        <title>Proof</title>
        <p id="Par109">For each edge <inline-formula id="IEq257"><alternatives><tex-math id="M557">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$u\rightarrow v$$\end{document}</tex-math><mml:math id="M558"><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq257.gif"/></alternatives></inline-formula> of the tree decomposition of <inline-formula id="IEq258"><alternatives><tex-math id="M559">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N}$$\end{document}</tex-math><mml:math id="M560"><mml:mi mathvariant="script">N</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq258.gif"/></alternatives></inline-formula>, the task is to determine the best assignment for variables in <inline-formula id="IEq259"><alternatives><tex-math id="M561">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {diff}}(u)$$\end{document}</tex-math><mml:math id="M562"><mml:mrow><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq259.gif"/></alternatives></inline-formula>, given that variables in <inline-formula id="IEq260"><alternatives><tex-math id="M563">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {sep}}(u)$$\end{document}</tex-math><mml:math id="M564"><mml:mrow><mml:mtext>sep</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq260.gif"/></alternatives></inline-formula> are already assigned (as guaranteed by the iteration in preorder). Deciding if an assignment is valid requires computing constraints, while scoring them requires computing network functions (each in constant time due to our assumption).</p>
        <p id="Par110">It is also required to sum up <inline-formula id="IEq261"><alternatives><tex-math id="M565">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M566"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq261.gif"/></alternatives></inline-formula> messages <inline-formula id="IEq262"><alternatives><tex-math id="M567">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_{c\rightarrow u}$$\end{document}</tex-math><mml:math id="M568"><mml:msub><mml:mi>m</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq262.gif"/></alternatives></inline-formula> for <italic>c</italic> children of <italic>u</italic>, where <inline-formula id="IEq263"><alternatives><tex-math id="M569">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_u$$\end{document}</tex-math><mml:math id="M570"><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq263.gif"/></alternatives></inline-formula> denotes the number of children. Given that <inline-formula id="IEq264"><alternatives><tex-math id="M571">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\text {diff}}(u)|=1$$\end{document}</tex-math><mml:math id="M572"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mtext>diff</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq264.gif"/></alternatives></inline-formula> in a gentle tree decomposition, we obtain as an upper bound of time complexity in Algorithm <xref rid="Sec10" ref-type="sec">2</xref>:<disp-formula id="Equ23"><alternatives><tex-math id="M573">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v} \ \prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i| \,\cdot (|\phi (u)|+n_u) \\&amp;\le d \sum _{u\rightarrow v} (|\phi (u)| + n_u) \le d (\mathfrak {m} +\mathfrak {n}). \end{aligned}$$\end{document}</tex-math><mml:math id="M574" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:mi>d</mml:mi><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>≤</mml:mo><mml:mi>d</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ23.gif" position="anchor"/></alternatives></disp-formula><inline-formula id="IEq265"><alternatives><tex-math id="M575">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\square$$\end{document}</tex-math><mml:math id="M576"><mml:mo>□</mml:mo></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq265.gif"/></alternatives></inline-formula></p>
        <p>Note that the complexity results for optimization and optimal traceback directly apply to partition function computation and stochastic traceback, which evaluate exactly the same numbers of constraints, functions and messages.</p>
      </sec>
    </sec>
    <sec id="Sec12">
      <title>Complexity analysis for nonuniform domain sizes</title>
      <p id="Par112">For nonuniform domain sizes, the previous analysis can strongly overestimate the complexity (assuming the worst-case maximum domain size <italic>d</italic> for all variables). In several of our application examples, we can tighten the analysis considering that <inline-formula id="IEq266"><alternatives><tex-math id="M577">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}$$\end{document}</tex-math><mml:math id="M578"><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq266.gif"/></alternatives></inline-formula> is composed of two (analogously extensible to several) ‘series’ of variables in the way<disp-formula id="Equ24"><alternatives><tex-math id="M579">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {X}=\{X_1,\dots ,X_{n_X},Y_1,\dots ,Y_{n_Y}\}\end{aligned}$$\end{document}</tex-math><mml:math id="M580" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">X</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:msub><mml:mi>n</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ24.gif" position="anchor"/></alternatives></disp-formula>with respective maximum domain sizes <inline-formula id="IEq267"><alternatives><tex-math id="M581">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d _X$$\end{document}</tex-math><mml:math id="M582"><mml:msub><mml:mi>d</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq267.gif"/></alternatives></inline-formula> and <inline-formula id="IEq268"><alternatives><tex-math id="M583">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d _Y$$\end{document}</tex-math><mml:math id="M584"><mml:msub><mml:mi>d</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq268.gif"/></alternatives></inline-formula>. For a given tree decomposition, we can define subset widths <inline-formula id="IEq269"><alternatives><tex-math id="M585">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X$$\end{document}</tex-math><mml:math id="M586"><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq269.gif"/></alternatives></inline-formula> and <inline-formula id="IEq270"><alternatives><tex-math id="M587">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _Y$$\end{document}</tex-math><mml:math id="M588"><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq270.gif"/></alternatives></inline-formula> as the maximum number of respective <italic>X</italic> and <italic>Y</italic> variables in a bag minus 1.</p>
      <p id="Par113">Then, we bound more tightly as follows:<disp-formula id="Equ25"><alternatives><tex-math id="M589">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;\sum _{u\rightarrow v}\ \prod _{x_i\in {\text {sep}}(u)}\!|\mathcal {D} _{i}|\,\cdot \!\prod _{x_i\in {\text {diff}}(u)}\!|\mathcal {D} _i|\,\cdot (|\phi (u)|+n_u)\\&amp;\le d _X^{w _X+1}\cdot d _Y^{w _Y+1}\cdot \sum _{u\rightarrow v} (|\phi (u)|+n_u)\\&amp;\le d _X^{w _X+1}\cdot d _Y^{w _Y+1}\cdot (\mathfrak {m} + \mathfrak {n}). \end{aligned}$$\end{document}</tex-math><mml:math id="M590" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mspace width="4pt"/><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>sep</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mspace width="-0.166667em"/></mml:mrow><mml:munder><mml:mo>∏</mml:mo><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mtext>diff</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:munder><mml:mrow><mml:mspace width="-0.166667em"/><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mspace width="0.166667em"/><mml:mo>·</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>+</mml:mo></mml:mrow><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>Y</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi>v</mml:mi></mml:mrow></mml:munder><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ϕ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>u</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo>≤</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>X</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>Y</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ25.gif" position="anchor"/></alternatives></disp-formula></p>
      <sec id="FPar27">
        <title>Corollary 1</title>
        <p id="Par114">The runtime of Algorithm <xref rid="Sec10" ref-type="sec">1</xref> is in<disp-formula id="Equ26"><alternatives><tex-math id="M591">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {O}\left( d _1^{w _1+1}\cdots d _k^{w _k+1} \cdot (\mathfrak {m} + \mathfrak {n}) \right) ,\end{aligned}$$\end{document}</tex-math><mml:math id="M592" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mfenced close=")" open="("><mml:msubsup><mml:mi>d</mml:mi><mml:mn>1</mml:mn><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>⋯</mml:mo><mml:msubsup><mml:mi>d</mml:mi><mml:mi>k</mml:mi><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>·</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ26.gif" position="anchor"/></alternatives></disp-formula>given a feature network where <inline-formula id="IEq271"><alternatives><tex-math id="M593">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}$$\end{document}</tex-math><mml:math id="M594"><mml:mi mathvariant="script">X</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq271.gif"/></alternatives></inline-formula> is a disjoint union of subsets <inline-formula id="IEq272"><alternatives><tex-math id="M595">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _1,\dots ,\mathcal {X} _k$$\end{document}</tex-math><mml:math id="M596"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq272.gif"/></alternatives></inline-formula> and a tree decomposition <inline-formula id="IEq273"><alternatives><tex-math id="M597">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M598"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq273.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq274"><alternatives><tex-math id="M599">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _i = \max _{v\in T} |\{X \in \mathcal {X} _i \mid X \in \chi (v)\}|$$\end{document}</tex-math><mml:math id="M600"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mo movablelimits="true">max</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>T</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∣</mml:mo><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mi>χ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq274.gif"/></alternatives></inline-formula> are the respective subset widths of <inline-formula id="IEq275"><alternatives><tex-math id="M601">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _1,\dots ,\mathcal {X} _k$$\end{document}</tex-math><mml:math id="M602"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq275.gif"/></alternatives></inline-formula> w.r.t. <inline-formula id="IEq276"><alternatives><tex-math id="M603">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(T,\chi )$$\end{document}</tex-math><mml:math id="M604"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>T</mml:mi><mml:mo>,</mml:mo><mml:mi>χ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq276.gif"/></alternatives></inline-formula>.</p>
        <p>It becomes apparent that tree decompositions with minimal width do not necessarily yield best performance in this context (e.g. [<xref ref-type="bibr" rid="CR31">31</xref>]). We can take a shortcut in special cases, where variables <inline-formula id="IEq277"><alternatives><tex-math id="M605">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M606"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq277.gif"/></alternatives></inline-formula> and <inline-formula id="IEq278"><alternatives><tex-math id="M607">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M608"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq278.gif"/></alternatives></inline-formula> for the same <inline-formula id="IEq279"><alternatives><tex-math id="M609">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i \le n$$\end{document}</tex-math><mml:math id="M610"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq279.gif"/></alternatives></inline-formula> (<inline-formula id="IEq280"><alternatives><tex-math id="M611">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n=n_X=n_Y$$\end{document}</tex-math><mml:math id="M612"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>n</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq280.gif"/></alternatives></inline-formula>) depend on each other. Then, one can collapse the nodes of <inline-formula id="IEq281"><alternatives><tex-math id="M613">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M614"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq281.gif"/></alternatives></inline-formula> and <inline-formula id="IEq282"><alternatives><tex-math id="M615">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M616"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq282.gif"/></alternatives></inline-formula> in the dependency graph, generate a standard tree decomposition optimizing its width <inline-formula id="IEq283"><alternatives><tex-math id="M617">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w '$$\end{document}</tex-math><mml:math id="M618"><mml:msup><mml:mi>w</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq283.gif"/></alternatives></inline-formula>, and infer a tree decomposition of the original dependency graph with <inline-formula id="IEq284"><alternatives><tex-math id="M619">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X=w _Y=w '$$\end{document}</tex-math><mml:math id="M620"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq284.gif"/></alternatives></inline-formula>.</p>
      </sec>
    </sec>
    <sec id="Sec13">
      <title>Parameterized complexity classes</title>
      <p id="Par116">Based on our complexity results (Sec. “Computational complexity”), the Optimization (Prob. <xref ref-type="sec" rid="FPar12">1</xref>) and Sampling (Prob. <xref ref-type="sec" rid="FPar13">2</xref>) can be solved efficiently in the <italic>input size</italic>
<italic>n</italic> at fixed values of the treewidth. Assuming that the number of variables and number of edges is on the order of <italic>n</italic>, i.e. <inline-formula id="IEq285"><alternatives><tex-math id="M621">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {n}+\mathfrak {m}\in \mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M622"><mml:mrow><mml:mi mathvariant="fraktur">n</mml:mi><mml:mo>+</mml:mo><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq285.gif"/></alternatives></inline-formula>, the input-dependence of the maximum domain size <italic>d</italic>, <inline-formula id="IEq286"><alternatives><tex-math id="M623">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\in \mathcal {O}(1)$$\end{document}</tex-math><mml:math id="M624"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq286.gif"/></alternatives></inline-formula> or <inline-formula id="IEq287"><alternatives><tex-math id="M625">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d\in \mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M626"><mml:mrow><mml:mi>d</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq287.gif"/></alternatives></inline-formula>, determines the theoretical parameterized complexity class.</p>
      <p id="Par117">For problems parameterized by <italic>k</italic>, one distinguishes the class <bold>FPT</bold> (<bold>fixed parameter tractable</bold>), where problems can be solved in time <inline-formula id="IEq288"><alternatives><tex-math id="M627">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(k)n^{\mathcal {O}(1)}$$\end{document}</tex-math><mml:math id="M628"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq288.gif"/></alternatives></inline-formula> for some computable function <italic>f</italic>, from the class <bold>XP</bold> with a bound of <inline-formula id="IEq289"><alternatives><tex-math id="M629">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f(k)n^{g(k)}$$\end{document}</tex-math><mml:math id="M630"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq289.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] for some computable functions <italic>f</italic>, <italic>g</italic>. The latter class strictly includes the former. <bold>XP</bold> algorithms are also called <bold>slicewise polynomial</bold>, having polynomial complexity for each fixed value of the parameter.</p>
      <p id="Par118">For constant <italic>d</italic>, it follows that solving in Infrared is in the class <bold>FPT</bold> parameterized by the treewidth of the dependency graph. This is the case for the presented applications to RNA design, where the domain size is the number of nucleotides, i.e. typically 4. In our applications to pseudoknotted RNA alignment, the domain size <italic>d</italic> is in <inline-formula id="IEq290"><alternatives><tex-math id="M631">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M632"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq290.gif"/></alternatives></inline-formula>; consequently, we obtain an <bold>XP</bold> solving algorithm.</p>
    </sec>
    <sec id="Sec14">
      <title>Computing tree decompositions</title>
      <p id="Par119">The problem of computing a tree decomposition of minimal treewidth for an input graph/network is NP-hard [<xref ref-type="bibr" rid="CR32">32</xref>]. However, multiple heuristics [<xref ref-type="bibr" rid="CR13">13</xref>] and even efficient exact solvers [<xref ref-type="bibr" rid="CR33">33</xref>] have been designed, motivated by the wide applicability of treewidth-based methods.</p>
      <p id="Par120">From a theoretical perspective, treewidth is FPT to compute, albeit with a prohibitive complexity of <inline-formula id="IEq291"><alternatives><tex-math id="M633">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2^{O(w ^3)}$$\end{document}</tex-math><mml:math id="M634"><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq291.gif"/></alternatives></inline-formula> [<xref ref-type="bibr" rid="CR34">34</xref>]. A <inline-formula id="IEq292"><alternatives><tex-math id="M635">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$4\cdot w +4$$\end{document}</tex-math><mml:math id="M636"><mml:mrow><mml:mn>4</mml:mn><mml:mo>·</mml:mo><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq292.gif"/></alternatives></inline-formula> approximation in <inline-formula id="IEq293"><alternatives><tex-math id="M637">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(8^{w}\cdot w ^2 \cdot |\mathcal {X} |^2)$$\end{document}</tex-math><mml:math id="M638"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>8</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo>·</mml:mo><mml:msup><mml:mi>w</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq293.gif"/></alternatives></inline-formula> is also possible [<xref ref-type="bibr" rid="CR14">14</xref>]. Both of these results guarantee that FPT results remain FPT when including the computation of a tree decomposition prior to applying Algorithm 1 and <xref rid="Sec10" ref-type="sec">2</xref>. However, the actual complexity may be affected, becoming the worst of the two.</p>
      <p id="Par121">Despite these theoretical results, virtually all treewidth-based implementations, including Infrared, use the beforementioned heuristics or solvers to compute tree decompositions.</p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Applications to concrete bionformatics problems</title>
    <sec id="Sec16">
      <title>Network parsimony</title>
      <p id="Par122">
        <fig id="Fig4">
          <label>Fig. 4</label>
          <caption>
            <p>Example phylogenetic network. Optimal solutions for <bold>A</bold> hardwired parsimony. <bold>B</bold> softwired parsimony. <bold>C</bold> parental parsimony; nodes are labeled by character sets. The input for these problems consists of the network and the labels of only the leaves (blue).The other labels are inferred. The example contains one reticulation node (red)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig4_HTML" id="MO12"/>
        </fig>
      </p>
      <sec id="Sec4">
        <title>
          <bold>
            <italic>Parsimony for phylogenetic reconstruction</italic>
          </bold>
        </title>
        <p id="Par123"> For inferring phylogenies, one of the central missions of bioinformatics, parsimony methods determine the most parsimonious explanations for evolutionary relationships. In the classical small parsimony problem the relation between <italic>n</italic> taxa is given as their phylogenetic tree. The leaves are labeled by ‘characters’, i.e. the taxa, and we ask for a labeling of the internal nodes such that the number of label differences over all tree edges is minimized. However, due to <italic>reticulate evolution</italic>, where lineages can be influenced by two or more ancestors, many real phylogenies are better represented by phylogenetic networks than trees [<xref ref-type="bibr" rid="CR35">35</xref>]. This model captures diverse phenomena such as hybrid speciation, horizontal gene transfer, and allopolyploidity due to sexual recombination. While tree parsimony has well-established polynomial-time solutions [<xref ref-type="bibr" rid="CR36">36</xref>, <xref ref-type="bibr" rid="CR37">37</xref>], network parsimony is a topic of current algorithmic research. For example, Scornavacca and Weller [<xref ref-type="bibr" rid="CR5">5</xref>] present artfully hand-crafted fixed-parameter tractable (FPT) algorithms for three variants of network parsimony. We will discuss modeling network parsimony directly in Infrared and, in this way, immediately obtain FPT solutions.</p>
        <sec id="FPar28">
          <title>Definition 11</title>
          <p id="Par124">[Phylogenetic Network] A <bold>phylogenetic network</bold> is a rooted, connected directed acyclic graph <inline-formula id="IEq294"><alternatives><tex-math id="M639">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G = (V,E)$$\end{document}</tex-math><mml:math id="M640"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq294.gif"/></alternatives></inline-formula>. Edges point from <bold>children</bold> to their <bold>parents</bold>. The unique <bold>root</bold>
<inline-formula id="IEq295"><alternatives><tex-math id="M641">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r\in V$$\end{document}</tex-math><mml:math id="M642"><mml:mrow><mml:mi>r</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq295.gif"/></alternatives></inline-formula> is the only node without parents; the <bold>leaves</bold>
<inline-formula id="IEq296"><alternatives><tex-math id="M643">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$L \subseteq V$$\end{document}</tex-math><mml:math id="M644"><mml:mrow><mml:mi>L</mml:mi><mml:mo>⊆</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq296.gif"/></alternatives></inline-formula> are the nodes without children. <bold>Reticulation nodes</bold> have more than one parent.</p>
          <p><bold>Hardwired parsimony</bold> can be seen as a direct extension from tree to network parsimony that minimizes a parsimony score summing over all network edges, <bold>softwired parsimony</bold> inherits—in the case of multiple parents—only from the most favorable one, and <bold>parental parsimony</bold> allows embedding of different lineages in the network (one parent per allele) to cover allopolyploidy [<xref ref-type="bibr" rid="CR5">5</xref>] (Fig. <xref rid="Fig4" ref-type="fig">4</xref>).</p>
          <p>In this text, we describe in detail the modelings of hardwired and softwired parsimony. For Infrared models of all three variants of network parsimony, we refer to our online documentation.</p>
        </sec>
        <sec id="FPar29">
          <title>Problem 3</title>
          <p id="Par127">[Hardwired network parsimony] <def-list><def-item><term><sc>Input:</sc></term><def><p id="Par128">Phylogenetic network <inline-formula id="IEq297"><alternatives><tex-math id="M645">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M646"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq297.gif"/></alternatives></inline-formula> with leaves <italic>L</italic>, set of characters <inline-formula id="IEq298"><alternatives><tex-math id="M647">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M648"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq298.gif"/></alternatives></inline-formula>, and leaf labeling <inline-formula id="IEq299"><alternatives><tex-math id="M649">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi : L\rightarrow \Sigma$$\end{document}</tex-math><mml:math id="M650"><mml:mrow><mml:mi>ϕ</mml:mi><mml:mo>:</mml:mo><mml:mi>L</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq299.gif"/></alternatives></inline-formula>.</p></def></def-item><def-item><term><sc>Output:</sc></term><def><p id="Par129">Minimal parsimony score <inline-formula id="IEq300"><alternatives><tex-math id="M651">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {PS}}^{*}_\text{hw}$$\end{document}</tex-math><mml:math id="M652"><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>hw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq300.gif"/></alternatives></inline-formula> and corresponding labeling <inline-formula id="IEq301"><alternatives><tex-math id="M653">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\psi :V\rightarrow \Sigma$$\end{document}</tex-math><mml:math id="M654"><mml:mrow><mml:mi>ψ</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq301.gif"/></alternatives></inline-formula>, where <disp-formula id="Equ27"><alternatives><tex-math id="M655">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {PS}}^{*}_\text{hw}= \min _{\begin{array}{c} \hbox { labeling}\ \psi \\ \forall v\in L: \psi (v)=\phi (v) \end{array}} \sum _{(u,v)\in E} {\text{d}}(\psi (u),\psi (v)), \end{aligned}$$\end{document}</tex-math><mml:math id="M656" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>hw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>labeling</mml:mtext><mml:mspace width="4pt"/><mml:mi>ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mo>∀</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>:</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ27.gif" position="anchor"/></alternatives></disp-formula> here limiting ourselves, for simplicity, to distance <inline-formula id="IEq302"><alternatives><tex-math id="M657">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {d}}(x,y)={\left\{ \begin{array}{ll}1&amp;{}x\ne y\\ 0&amp;{}x=y.\end{array}\right. }$$\end{document}</tex-math><mml:math id="M658"><mml:mrow><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mn>1</mml:mn></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mo>≠</mml:mo><mml:mi>y</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>x</mml:mi><mml:mo>=</mml:mo><mml:mi>y</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq302.gif"/></alternatives></inline-formula></p></def></def-item></def-list></p>
        </sec>
      </sec>
      <sec id="Sec36">
        <title>
          <bold>
            <italic>Infrared network model</italic>
          </bold>
        </title>
        <p id="Par130">We model labellings as assignments, i.e. we use one variable <inline-formula id="IEq303"><alternatives><tex-math id="M659">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M660"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq303.gif"/></alternatives></inline-formula> per node of <italic>G</italic>, whose value encodes its label, i.e. the domain of internal nodes is <inline-formula id="IEq304"><alternatives><tex-math id="M661">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M662"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq304.gif"/></alternatives></inline-formula>, while the domain of leaf variables is restricted by the input labeling <inline-formula id="IEq305"><alternatives><tex-math id="M663">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\phi$$\end{document}</tex-math><mml:math id="M664"><mml:mi>ϕ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq305.gif"/></alternatives></inline-formula>. We can thus specify the variables and domains of the feature network <inline-formula id="IEq306"><alternatives><tex-math id="M665">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {hw}}=(\mathcal {X} _{\text {hw}},\mathcal {D} _{\text {hw}},\mathcal {C} _{\text {hw}},\mathcal {F} _{\text {hw}})$$\end{document}</tex-math><mml:math id="M666"><mml:mrow><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq306.gif"/></alternatives></inline-formula>, which models Problem <xref ref-type="sec" rid="FPar29">3</xref>:<list list-type="bullet"><list-item><p id="Par131"><inline-formula id="IEq307"><alternatives><tex-math id="M667">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {hw}}=\{X_1,\ldots ,X_{|V|}\}$$\end{document}</tex-math><mml:math id="M668"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq307.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par132"><inline-formula id="IEq308"><alternatives><tex-math id="M669">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal{D}}_{{{\text{hw}}}} \, = \,\left\{ {D_{1} , \ldots ,D_{{|V|}} } \right.\,,$$\end{document}</tex-math><mml:math id="M670"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced open="{"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>D</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:mfenced><mml:mspace width="0.166667em"/><mml:mo>,</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq308.gif"/></alternatives></inline-formula> where <inline-formula id="IEq309"><alternatives><tex-math id="M671">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$D_i={\left\{ \begin{array}{ll} \{\phi (i)\} &amp;{} v_i\in L\\ \Sigma &amp;{} \text {otherwise} \end{array}\right. }$$\end{document}</tex-math><mml:math id="M672"><mml:mrow><mml:msub><mml:mi>D</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:mi>L</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi mathvariant="normal">Σ</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq309.gif"/></alternatives></inline-formula></p></list-item></list>On this basis, we impose constraints and functions. In this case, there are no constraints (all constraints are expressed by restricting the domains, such that all assignments are valid labellings). To express the score (by a set of network functions), we introduce the network function <inline-formula id="IEq310"><alternatives><tex-math id="M673">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Distance}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M674"><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq310.gif"/></alternatives></inline-formula> for the variables <inline-formula id="IEq311"><alternatives><tex-math id="M675">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M676"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq311.gif"/></alternatives></inline-formula> and <inline-formula id="IEq312"><alternatives><tex-math id="M677">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M678"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq312.gif"/></alternatives></inline-formula> is defined to encode the distance <inline-formula id="IEq313"><alternatives><tex-math id="M679">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d(x_i,x_j)$$\end{document}</tex-math><mml:math id="M680"><mml:mrow><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq313.gif"/></alternatives></inline-formula> between their values in an assignment <italic>x</italic>. We finalize the model by<list list-type="bullet"><list-item><p id="Par133"><inline-formula id="IEq314"><alternatives><tex-math id="M681">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {hw}}=\{\}$$\end{document}</tex-math><mml:math id="M682"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq314.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par134"><inline-formula id="IEq315"><alternatives><tex-math id="M683">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {hw}}=\{F_{\text {hwd}}$$\end{document}</tex-math><mml:math id="M684"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>hw</mml:mtext></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo></mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>hwd</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq315.gif"/></alternatives></inline-formula>} with feature <disp-formula id="Equ28"><alternatives><tex-math id="M685">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}F_{\text {hwd}}=\{{\text {\textsf{Distance}}}_{[X_i,X_j]} \mid (v_i,v_j) \in E\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M686" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>hwd</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ28.gif" position="anchor"/></alternatives></disp-formula></p></list-item></list>To implement and solve the problem in Infrared, it suffices to <italic>translate</italic> the model to Infrared syntax and call its optimizer. According to Proposition <xref ref-type="sec" rid="FPar23">4</xref>, the framework determines a most parsimonious solution in time complexity <inline-formula id="IEq316"><alternatives><tex-math id="M687">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}((|E|+ |V|)\cdot |\Sigma |^{w +1})$$\end{document}</tex-math><mml:math id="M688"><mml:mrow><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq316.gif"/></alternatives></inline-formula> in the treewidth <inline-formula id="IEq317"><alternatives><tex-math id="M689">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M690"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq317.gif"/></alternatives></inline-formula> of the input network <inline-formula id="IEq318"><alternatives><tex-math id="M691">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G=(V,E)$$\end{document}</tex-math><mml:math id="M692"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq318.gif"/></alternatives></inline-formula>. For this corollary observe that the dependency graph of the modeled feature network is exactly the input network; moreover the model has |<italic>E</italic>| functions and |<italic>V</italic>| variables with maximum domain size <inline-formula id="IEq319"><alternatives><tex-math id="M693">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d=|\Sigma |$$\end{document}</tex-math><mml:math id="M694"><mml:mrow><mml:mi>d</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq319.gif"/></alternatives></inline-formula>; functions are computed in constant time.</p>
      </sec>
      <sec id="Sec3">
        <title>
          <bold>
            <italic>Beyond hardwired network parsimony</italic>
          </bold>
        </title>
        <p id="Par135">The problem of <bold>softwired network parsimony</bold> redefines the score of hardwired parsimony, such that it asks for<disp-formula id="Equ29"><alternatives><tex-math id="M695">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {PS}}^{*}_\text{sw}= \min _{\begin{array}{c} \hbox { labeling}\ \psi \\ \forall v\in L: \psi (v)=\phi (v) \end{array}} \sum_{u\in V}\min _{v\in {\text{parents}}(u)} {\text{d}}(\psi (u),\psi (v)), \end{aligned}$$\end{document}</tex-math><mml:math id="M696" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msubsup><mml:mrow><mml:mtext>PS</mml:mtext></mml:mrow><mml:mtext>sw</mml:mtext><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>labeling</mml:mtext><mml:mspace width="4pt"/><mml:mi>ψ</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mo>∀</mml:mo><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>:</mml:mo><mml:mi>ψ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>ϕ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>u</mml:mi><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:munder><mml:munder><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mtext>parents</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:munder><mml:mtext>d</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>ψ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ29.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq320"><alternatives><tex-math id="M697">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {parents}}(u)$$\end{document}</tex-math><mml:math id="M698"><mml:mrow><mml:mtext>parents</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq320.gif"/></alternatives></inline-formula> denotes the set of parents of <italic>u</italic>. This does not change the behavior at nonreticulation nodes, but offers a choice in the case of reticulation nodes.</p>
        <p id="Par136">Here, we restrict our model to <bold>binary networks</bold>, where nodes can have up to two children and up to two parents. Then, starting from the hardwired model, we enable this choice by adding a Boolean selector variable <inline-formula id="IEq321"><alternatives><tex-math id="M699">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M700"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq321.gif"/></alternatives></inline-formula> for every reticulation node <inline-formula id="IEq322"><alternatives><tex-math id="M701">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_i$$\end{document}</tex-math><mml:math id="M702"><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq322.gif"/></alternatives></inline-formula>. The distance to the left parent is counted if <inline-formula id="IEq323"><alternatives><tex-math id="M703">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i=0$$\end{document}</tex-math><mml:math id="M704"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq323.gif"/></alternatives></inline-formula>; to the right parent, if <inline-formula id="IEq324"><alternatives><tex-math id="M705">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i=1$$\end{document}</tex-math><mml:math id="M706"><mml:mrow><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq324.gif"/></alternatives></inline-formula>. Then, we replace the distance network functions by special variants at all edges between a reticulate child <italic>u</italic> and one of its parents <italic>v</italic>; feature <inline-formula id="IEq325"><alternatives><tex-math id="M707">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{hwd}$$\end{document}</tex-math><mml:math id="M708"><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">hwd</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq325.gif"/></alternatives></inline-formula> is substituted by<disp-formula id="Equ30"><alternatives><tex-math id="M709">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} F_{swd} =\,\{{\text {\textsf{RDistance}}}_{[X_i,X_j,Y_i;r]} \mid i, j \in (v_i,v_j)\in E,\\ {}\quad v_i \,\text {is a reticulation node}, \\ {}\quad r=1\, \text {if}\, v_j \,\text {is right parent of}\, v_i \,\text {else 0}\} \\\cup \{{\text {\textsf{Distance}}}_{[X_i,X_j]} \mid i, j \in (v_i,v_j)\in E,\\ {}\qquad v_i \,\text {is not a reticulation node}\}, \end{aligned}$$\end{document}</tex-math><mml:math id="M710" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">swd</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mo stretchy="false">{</mml:mo></mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">RDistance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="1em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>is a reticulation node</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="1em"/><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mspace width="0.166667em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>is right parent of</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mspace width="0.166667em"/><mml:mtext>else 0</mml:mtext><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>∪</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>E</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/><mml:mspace width="2em"/><mml:msub><mml:mi>v</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mspace width="0.166667em"/><mml:mtext>is not a reticulation node</mml:mtext><mml:mo stretchy="false">}</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ30.gif" position="anchor"/></alternatives></disp-formula>where <italic>r</italic> controls the selection, i.e.<disp-formula id="Equ31"><alternatives><tex-math id="M711">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{RDistance}}}_{[X_i,X_j,Y_i;r]}(x_i,x_j,y_i) \\&amp;\qquad = {\left\{ \begin{array}{ll} {\text {\textsf{Distance}}}_{[X_i,X_j]}(x_i,x_j) &amp;{}\hbox { if}\ y_i=r\\ +\infty &amp;{}\text {otherwise.} \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M712" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">RDistance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>;</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="2em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Distance</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="4pt"/><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo>+</mml:mo><mml:mi>∞</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise.</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ31.gif" position="anchor"/></alternatives></disp-formula>To improve over the bound of Proposition <xref ref-type="sec" rid="FPar23">4</xref>, we follow Section “Complexity analysis for nonuniform domain sizes”. For the purpose of a conservative worst case complexity analysis, consider a tree decomposition of the dependency graph (which is equivalent to the input network). Now, we modify the problem by adding variables <inline-formula id="IEq326"><alternatives><tex-math id="M713">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M714"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq326.gif"/></alternatives></inline-formula> as well to all the nonreticulation nodes. A tree decomposition of the modified problem can now be obtained by complementing all <inline-formula id="IEq327"><alternatives><tex-math id="M715">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M716"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq327.gif"/></alternatives></inline-formula> by corresponding <inline-formula id="IEq328"><alternatives><tex-math id="M717">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M718"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq328.gif"/></alternatives></inline-formula>. The subset widths <inline-formula id="IEq329"><alternatives><tex-math id="M719">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _X$$\end{document}</tex-math><mml:math id="M720"><mml:msub><mml:mi>w</mml:mi><mml:mi>X</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq329.gif"/></alternatives></inline-formula> and <inline-formula id="IEq330"><alternatives><tex-math id="M721">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w _Y$$\end{document}</tex-math><mml:math id="M722"><mml:msub><mml:mi>w</mml:mi><mml:mi>Y</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq330.gif"/></alternatives></inline-formula> are then equal to the original treewidth <inline-formula id="IEq331"><alternatives><tex-math id="M723">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M724"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq331.gif"/></alternatives></inline-formula>. Therefore, by Cor. <xref ref-type="sec" rid="FPar27">1</xref>, we obtain the complexity <inline-formula id="IEq332"><alternatives><tex-math id="M725">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}( |\Sigma |^{w +1}2^{w} (|V|+|E|) )$$\end{document}</tex-math><mml:math id="M726"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq332.gif"/></alternatives></inline-formula> for solving softwired network parsimony.</p>
      </sec>
      <sec id="Sec37">
        <title>
          <bold>
            <italic>Discussion</italic>
          </bold>
        </title>
        <p id="Par137"> Scornavacca and Weller [<xref ref-type="bibr" rid="CR5">5</xref>] present algorithms for hardwired, softwired, and parental network parsimony with respective complexities of <inline-formula id="IEq333"><alternatives><tex-math id="M727">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}|E|)$$\end{document}</tex-math><mml:math id="M728"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq333.gif"/></alternatives></inline-formula>, <inline-formula id="IEq334"><alternatives><tex-math id="M729">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w}(3^w |\Sigma | |V| + |E|)$$\end{document}</tex-math><mml:math id="M730"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo></mml:mrow><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq334.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq335"><alternatives><tex-math id="M731">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}( 6^{w |\Sigma |} 4^{w \log (c)} |E| )$$\end{document}</tex-math><mml:math id="M732"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>6</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msup><mml:msup><mml:mn>4</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq335.gif"/></alternatives></inline-formula> (after obtaining the tree decomposition). In the hardwired case, we obtain the same complexity out-of-the-box.</p>
        <p id="Par138">In the case of <italic>softwired complexity</italic> for the special case of binary networks, we even obtain a complexity with a better treewidth dependence. To show this, given <inline-formula id="IEq336"><alternatives><tex-math id="M733">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|E|&lt;2|V|$$\end{document}</tex-math><mml:math id="M734"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>&lt;</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq336.gif"/></alternatives></inline-formula> under the assumption of binary networks, one simplifies our result to <inline-formula id="IEq337"><alternatives><tex-math id="M735">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}2^{w}|V|)$$\end{document}</tex-math><mml:math id="M736"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq337.gif"/></alternatives></inline-formula> and theirs to <inline-formula id="IEq338"><alternatives><tex-math id="M737">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(|\Sigma |^{w +1}3^{w}|V| + |\Sigma |^w 2|V|)=\mathcal {O}(|\Sigma |^{w +1}3^w |V|)$$\end{document}</tex-math><mml:math id="M738"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mn>2</mml:mn><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mn>3</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>V</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq338.gif"/></alternatives></inline-formula>.</p>
        <p id="Par139">We refer to our accompanying notebook for the case of <italic>parental parsimony</italic>. There, we provide a model that induces an efficient solution whenever the treewidth of the feature network remains bounded. In this case, the feature network simply consists of the input network, augmented by ternary constraints at reticulation nodes. Consequently, while obtaining an FPT algorithm even for this complex parsimony problem, we cannot directly compare its complexity to [<xref ref-type="bibr" rid="CR5">5</xref>].</p>
      </sec>
    </sec>
    <sec id="Sec17">
      <title>RNA design</title>
      <p id="Par140">
        <fig id="Fig5">
          <label>Fig. 5</label>
          <caption>
            <p>RNA multitarget design. <bold>A</bold> Three target RNA secondary structures of length 100 as 2D plots (by VARNA [<xref ref-type="bibr" rid="CR38">38</xref>]) and dot-bracket strings; taken from a multitarget design benchmark set [<xref ref-type="bibr" rid="CR39">39</xref>]. <bold>B</bold> Histograms of the features G <bold>C</bold> content (left), and the Turner energies (kcal/mol) of the three targets (right) in 5000 sequences sampled from the multitarget design model <inline-formula id="IEq339"><alternatives><tex-math id="M739">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M740"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq339.gif"/></alternatives></inline-formula> at weight -5 for every feature. One can observe that (1) equal weights lead to different mean energies for the targets; (2) strong control of the G C weight is required to avoid extreme G C content for stable designs. To automate the calibration of weights (and target specific feature value combinations), we suggest multidimensional Boltzmann sampling in Section “Multidimensional Boltzmann sampling”</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig5_HTML" id="MO13"/>
        </fig>
      </p>
      <p id="Par141">Designing biomolecules for specific biotechnological or medical applications is typically an interdisciplinary endeavor combining experimentation and computational design. On the computational side this calls for flexible, extensible systems that can express and efficiently cope with various constraints and objectives—a paradigmatic playing field for our framework (see our treatment in [<xref ref-type="bibr" rid="CR28">28</xref>]). A challenging, computationally hard subproblem in this area is the design of RNA sequences that fold into multiple target structures. The Infrared framework generalizes the FPT algorithm of our earlier work RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]—a method to generate RNA sequences <italic>w</italic>, words over <inline-formula id="IEq340"><alternatives><tex-math id="M741">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {A}, \texttt {C}, \texttt {G}, \texttt {U}$$\end{document}</tex-math><mml:math id="M742"><mml:mrow><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq340.gif"/></alternatives></inline-formula> targeting the energies of multiple structures and specific G C content. The latter is defined as the amount of G and C characters, denoted <inline-formula id="IEq341"><alternatives><tex-math id="M743">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\#\texttt {G} \texttt {C} (w)$$\end{document}</tex-math><mml:math id="M744"><mml:mrow><mml:mo>#</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq341.gif"/></alternatives></inline-formula>. Here, we model the core problem of RNARedprint directly as a feature network, which allows its implementation in Infrared.</p>
      <sec id="FPar30">
        <title>Definition 12</title>
        <p id="Par142">[RNA secondary structure] A <bold>secondary structure</bold>
<inline-formula id="IEq342"><alternatives><tex-math id="M745">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S$$\end{document}</tex-math><mml:math id="M746"><mml:mi>S</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq342.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq343"><alternatives><tex-math id="M747">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M748"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq343.gif"/></alternatives></inline-formula> is a set of <bold>base pairs</bold>, i.e. pairs (<italic>i</italic>, <italic>j</italic>) of sequence positions, <inline-formula id="IEq344"><alternatives><tex-math id="M749">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i&lt; j\le n$$\end{document}</tex-math><mml:math id="M750"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq344.gif"/></alternatives></inline-formula>. Secondary structures are required to be <bold>free of base triplets</bold>, i.e. every base <inline-formula id="IEq345"><alternatives><tex-math id="M751">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n$$\end{document}</tex-math><mml:math id="M752"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq345.gif"/></alternatives></inline-formula> is involved in at most one base pair. A secondary structure <italic>S</italic> is called <bold>crossing</bold> iff there are pairs <inline-formula id="IEq346"><alternatives><tex-math id="M753">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j), (k,l)\in S$$\end{document}</tex-math><mml:math id="M754"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq346.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq347"><alternatives><tex-math id="M755">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&lt;k&lt;j&lt;l$$\end{document}</tex-math><mml:math id="M756"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>j</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq347.gif"/></alternatives></inline-formula>; otherwise, it is <bold>noncrossing</bold>.</p>
        <p><italic>Multitarget design sampling</italic> Given one or multiple noncrossing RNA secondary structures as <italic>targets</italic> (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A), we consider the problem of controlled sampling of designs (i.e. RNA sequences) from a Boltzmann distribution governed by the thermodynamic energies of the targets and the G C content, whose respective influence is controlled by weights (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B).</p>
      </sec>
      <sec id="FPar31">
        <title>Problem 4</title>
        <p id="Par144">[Multitarget RNA sequence sampling] Given are <italic>k</italic> target structures, i.e. noncrossing secondary structures <inline-formula id="IEq348"><alternatives><tex-math id="M757">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_1,\dots ,S_k$$\end{document}</tex-math><mml:math id="M758"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq348.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq349"><alternatives><tex-math id="M759">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M760"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq349.gif"/></alternatives></inline-formula>, together with weights <inline-formula id="IEq350"><alternatives><tex-math id="M761">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,\dots ,\alpha _k$$\end{document}</tex-math><mml:math id="M762"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq350.gif"/></alternatives></inline-formula> and <inline-formula id="IEq351"><alternatives><tex-math id="M763">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _{\texttt {G} \texttt {C}}$$\end{document}</tex-math><mml:math id="M764"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq351.gif"/></alternatives></inline-formula>. We ask for <italic>r</italic> RNA sequences of length <italic>n</italic> such that for each sequence <inline-formula id="IEq352"><alternatives><tex-math id="M765">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s$$\end{document}</tex-math><mml:math id="M766"><mml:mi>s</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq352.gif"/></alternatives></inline-formula><disp-formula id="Equ32"><alternatives><tex-math id="M767">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathbb {P}(s) \propto \exp \left( \alpha _{\texttt {G} \texttt {C}}\cdot \#\texttt {G} \texttt {C} (s)\right) \cdot \prod _{\ell =1}^k \exp \left( \alpha _\ell \cdot E(s, S_\ell )\right) \end{aligned}$$\end{document}</tex-math><mml:math id="M768" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="double-struck">P</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∝</mml:mo><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub><mml:mo>·</mml:mo><mml:mo>#</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced><mml:mo>·</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mo>exp</mml:mo><mml:mfenced close=")" open="("><mml:msub><mml:mi>α</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:mi>E</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ32.gif" position="anchor"/></alternatives></disp-formula>with <inline-formula id="IEq353"><alternatives><tex-math id="M769">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s, S_\ell )$$\end{document}</tex-math><mml:math id="M770"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq353.gif"/></alternatives></inline-formula> is the free-energy of the sequence <inline-formula id="IEq354"><alternatives><tex-math id="M771">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s$$\end{document}</tex-math><mml:math id="M772"><mml:mi>s</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq354.gif"/></alternatives></inline-formula> folding into the structure <inline-formula id="IEq355"><alternatives><tex-math id="M773">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_\ell$$\end{document}</tex-math><mml:math id="M774"><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq355.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Constraints and functions</italic> In common energy models of RNAs, such as the nearest neighbor model [<xref ref-type="bibr" rid="CR40">40</xref>], all base pairs must be <bold>canonical</bold>, i.e. in<disp-formula id="Equ33"><alternatives><tex-math id="M775">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}\mathcal {B}=\{(\texttt {A},\texttt {U}), (\texttt {C}, \texttt {G}), (\texttt {G},\texttt {C}), (\texttt {G}, \texttt {U}), (\texttt {U}, \texttt {A}), (\texttt {U},\texttt {G})\}.\end{aligned}$$\end{document}</tex-math><mml:math id="M776" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="script">B</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">}</mml:mo><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ33.gif" position="anchor"/></alternatives></disp-formula>Otherwise, the energy <inline-formula id="IEq356"><alternatives><tex-math id="M777">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s, S)$$\end{document}</tex-math><mml:math id="M778"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq356.gif"/></alternatives></inline-formula> is infinite. This imposes hard constraints on the solutions of our design problem; in [<xref ref-type="bibr" rid="CR16">16</xref>], we proved that these constraints make even the counting of valid solutions (with implications on controlled sampling) #P-hard.</p>
        <p>In our model, in line with [<xref ref-type="bibr" rid="CR16">16</xref>], we express a relatively simple energy function <inline-formula id="IEq357"><alternatives><tex-math id="M779">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E(s,S)$$\end{document}</tex-math><mml:math id="M780"><mml:mrow><mml:mi>E</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq357.gif"/></alternatives></inline-formula>, namely<disp-formula id="Equ34"><alternatives><tex-math id="M781">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}E_{bp}(s,S) = \sum _{(i,j)\in S}{\text {\textsf{BPEnergy}}}(s _i, s _j)\end{aligned}$$\end{document}</tex-math><mml:math id="M782" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>E</mml:mi><mml:mrow><mml:mi mathvariant="italic">bp</mml:mi></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ34.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq358"><alternatives><tex-math id="M783">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPEnergy}}}: \mathcal {B}\rightarrow \mathbb {R}$$\end{document}</tex-math><mml:math id="M784"><mml:mrow><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mo>:</mml:mo><mml:mi mathvariant="script">B</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq358.gif"/></alternatives></inline-formula> is a function assigning values to single base pairs. Note that we empirically demonstrated the direct use of this simple energy model for design sampling [<xref ref-type="bibr" rid="CR16">16</xref>] (apart from being extensible to more accurate models). This is in remarkable contrast to structure prediction, which for relevant accuracy relies on models that assign energies to stabilizing and destabilizing loops [<xref ref-type="bibr" rid="CR40">40</xref>]. Figure <xref rid="Fig5" ref-type="fig">5</xref>B shows that sampling based on the simple base pair model can produce controllable concentrated distributions with regard to Turner energies [<xref ref-type="bibr" rid="CR41">41</xref>]. This effect is studied in more depth in [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
        <p><italic>Feature network for design</italic> We express Problem <xref ref-type="sec" rid="FPar31">4</xref> as a feature network and use Infrared to solve it. The FN <inline-formula id="IEq359"><alternatives><tex-math id="M785">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M786"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq359.gif"/></alternatives></inline-formula> is composed of<list list-type="bullet"><list-item><p id="Par148"><inline-formula id="IEq360"><alternatives><tex-math id="M787">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {design}}=\{X_1,\ldots ,X_n\}$$\end{document}</tex-math><mml:math id="M788"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq360.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par149"><inline-formula id="IEq361"><alternatives><tex-math id="M789">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {design}}=\{\texttt {A},\texttt {C},\texttt {G},\texttt {U} \}^n$$\end{document}</tex-math><mml:math id="M790"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq361.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par150"><inline-formula id="IEq362"><alternatives><tex-math id="M791">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {design}}=\{{\text {\textsf{BPCompl}}}_{[i,j]} \mid (i,j)\in \bigcup _\ell S_\ell \}$$\end{document}</tex-math><mml:math id="M792"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPCompl</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mo>⋃</mml:mo><mml:mi>ℓ</mml:mi></mml:msub><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq362.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par151"><inline-formula id="IEq363"><alternatives><tex-math id="M793">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {design}}=\{F_{gc},F_{1},\dots ,F_{k}\}$$\end{document}</tex-math><mml:math id="M794"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq363.gif"/></alternatives></inline-formula> with features <inline-formula id="IEq364"><alternatives><tex-math id="M795">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{{gc}} \, = \,\left\{ {GC_{{\left[ i \right]}} \,\left| {i\, \in \,\left[ {1,\,n} \right]} \right.} \right\}$$\end{document}</tex-math><mml:math id="M796"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced close="}" open="{"><mml:mrow><mml:mi>G</mml:mi><mml:msub><mml:mi>C</mml:mi><mml:mfenced close="]" open="["><mml:mi>i</mml:mi></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mfenced open="|"><mml:mrow><mml:mi>i</mml:mi><mml:mspace width="0.166667em"/><mml:mo>∈</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced close="]" open="["><mml:mrow><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.166667em"/><mml:mi>n</mml:mi></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq364.gif"/></alternatives></inline-formula> and <inline-formula id="IEq365"><alternatives><tex-math id="M797">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\ell }=\{{\text {\textsf{BPEnergy}}}_{[i,j]} \mid (i,j)\in S_\ell \}$$\end{document}</tex-math><mml:math id="M798"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq365.gif"/></alternatives></inline-formula> (<inline-formula id="IEq366"><alternatives><tex-math id="M799">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le \ell \le k$$\end{document}</tex-math><mml:math id="M800"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>ℓ</mml:mi><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq366.gif"/></alternatives></inline-formula>).</p></list-item></list>The constraint <inline-formula id="IEq367"><alternatives><tex-math id="M801">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPCompl}}}_{[i,j]}(x_i,x_j)$$\end{document}</tex-math><mml:math id="M802"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">BPCompl</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq367.gif"/></alternatives></inline-formula> is <inline-formula id="IEq368"><alternatives><tex-math id="M803">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textsf{True} \text { if } (x_i,x_j)\in \mathcal {B}$$\end{document}</tex-math><mml:math id="M804"><mml:mrow><mml:mi mathvariant="sans-serif">True</mml:mi><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq368.gif"/></alternatives></inline-formula>; it ensures that <inline-formula id="IEq369"><alternatives><tex-math id="M805">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M806"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq369.gif"/></alternatives></inline-formula> is a canonical base pair in the design <italic>w</italic>. The network functions <inline-formula id="IEq370"><alternatives><tex-math id="M807">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPEnergy}}}_{[i,j]}$$\end{document}</tex-math><mml:math id="M808"><mml:msub><mml:mtext mathvariant="sans-serif">BPEnergy</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq370.gif"/></alternatives></inline-formula> and <inline-formula id="IEq371"><alternatives><tex-math id="M809">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{GC}}}_{[i]}$$\end{document}</tex-math><mml:math id="M810"><mml:msub><mml:mtext mathvariant="sans-serif">GC</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq371.gif"/></alternatives></inline-formula> decompose the global properties, energy and G C content, into their local contributions from base pairs or bases. To evaluate the assignment, feature <inline-formula id="IEq372"><alternatives><tex-math id="M811">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{gc}$$\end{document}</tex-math><mml:math id="M812"><mml:msub><mml:mi>F</mml:mi><mml:mrow><mml:mi mathvariant="italic">gc</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq372.gif"/></alternatives></inline-formula> has a weight of <inline-formula id="IEq373"><alternatives><tex-math id="M813">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _{\texttt {G} \texttt {C}}$$\end{document}</tex-math><mml:math id="M814"><mml:msub><mml:mi>α</mml:mi><mml:mrow><mml:mi mathvariant="monospace">G</mml:mi><mml:mi mathvariant="monospace">C</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq373.gif"/></alternatives></inline-formula> and each feature <inline-formula id="IEq374"><alternatives><tex-math id="M815">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_\ell$$\end{document}</tex-math><mml:math id="M816"><mml:msub><mml:mi>F</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq374.gif"/></alternatives></inline-formula> has <inline-formula id="IEq375"><alternatives><tex-math id="M817">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _\ell$$\end{document}</tex-math><mml:math id="M818"><mml:msub><mml:mi>α</mml:mi><mml:mi>ℓ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq375.gif"/></alternatives></inline-formula> for <inline-formula id="IEq376"><alternatives><tex-math id="M819">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\ell \in [1,k]$$\end{document}</tex-math><mml:math id="M820"><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq376.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Efficient solving in Infrared</italic> To randomly generate <italic>r</italic> designs, sampled exactly from the defined distribution of Problem <xref ref-type="sec" rid="FPar13">2</xref>, we encode <inline-formula id="IEq377"><alternatives><tex-math id="M821">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M822"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq377.gif"/></alternatives></inline-formula> as an object of the class infrared.Model and pass it to Infrared ’s sampler infrared.Sampler, which is then asked <italic>r</italic>-times to return a sample. The efficiency of sampling depends exponentially on the complexity of the graph <inline-formula id="IEq378"><alternatives><tex-math id="M823">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\text {design}}=(\{1,\dots ,n\},\bigcup _{\ell =1}^k S_\ell )$$\end{document}</tex-math><mml:math id="M824"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mtext>design</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msubsup><mml:mo>⋃</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq378.gif"/></alternatives></inline-formula>, which combines all the dependencies between sequence positions due to the target structures.</p>
      </sec>
      <sec id="FPar32">
        <title>Corollary 2</title>
        <p id="Par153">Infrared ’s engine solves Problem <xref ref-type="sec" rid="FPar31">4</xref> in <inline-formula id="IEq379"><alternatives><tex-math id="M825">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}((n+m)\cdot 4^{w}) + r\cdot 4(n+m))$$\end{document}</tex-math><mml:math id="M826"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo>+</mml:mo><mml:mi>r</mml:mi><mml:mo>·</mml:mo><mml:mn>4</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq379.gif"/></alternatives></inline-formula> time and <inline-formula id="IEq380"><alternatives><tex-math id="M827">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n\cdot 4^{w})$$\end{document}</tex-math><mml:math id="M828"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>w</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq380.gif"/></alternatives></inline-formula> space, where <inline-formula id="IEq381"><alternatives><tex-math id="M829">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=n+2\sum _{\ell =1}^k|S_\ell |$$\end{document}</tex-math><mml:math id="M830"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn><mml:msubsup><mml:mo>∑</mml:mo><mml:mrow><mml:mi>ℓ</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mi>ℓ</mml:mi></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq381.gif"/></alternatives></inline-formula>, i.e. the total number of functions and constraints, and <inline-formula id="IEq382"><alternatives><tex-math id="M831">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M832"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq382.gif"/></alternatives></inline-formula> is the treewidth of <inline-formula id="IEq383"><alternatives><tex-math id="M833">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_{\text {design}}$$\end{document}</tex-math><mml:math id="M834"><mml:msub><mml:mi>G</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq383.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Discussion</italic> Multitarget design well showcases the advantages due to a declarative system. Thus, we quickly developed RNARedprint v2 with extended functionality and improved performance compared to our original C++ implementation of RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>]. Notably, based on the presented model, this reimplementation has identical computational complexity (Cor. <xref ref-type="sec" rid="FPar32">2</xref>).</p>
        <p>As expected, the declarative modeling framework in Python strongly facilitated the reimplementation and extension. The performance improvements (Fig. <xref rid="Fig11" ref-type="fig">11</xref>A) can be attributed to Infrared ’s systematic Python/C++ hybrid design, which allowed us to better optimize its generic computational engine.</p>
        <p>Our Jupyter notebook for multitarget design shows that RNARedprint ’s targeted sampling functionality can be coded in less than 100 lines of Python. Due to Infrared, this code is extensible and adaptable and makes the functionality well accessible for integration in larger Python workflows, for example, design involving negative design criteria that complements exact sampling with heuristic optimization (see [<xref ref-type="bibr" rid="CR28">28</xref>]). Finally, the Infrared implementation can serve as a basis and “rapid prototyping” experimentation platform for future extensions and ideas on multitarget design.</p>
      </sec>
    </sec>
    <sec id="Sec18">
      <title>Sequence alignment</title>
      <p id="Par157">
        <fig id="Fig6">
          <label>Fig. 6</label>
          <caption>
            <p>Modeling the sequence alignment of AAACUGG and ACGACGC. From left to right, we illustrate the alignment model <inline-formula id="IEq384"><alternatives><tex-math id="M835">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {ali}}$$\end{document}</tex-math><mml:math id="M836"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq384.gif"/></alternatives></inline-formula>; a valid assignment; the corresponding alignment</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig6_HTML" id="MO14"/>
        </fig>
      </p>
      <p id="Par158">Expressing sequence alignment, one of the most prominent problems of bioinformatics, in our framework enables solving various more expressive, even highly complex types of alignment by extending the model. To give an example, we later (Sec. “From sequence alignment to pseudoknot sequence-structure alignment”) discuss the extension to pseudoknotted RNA structure alignment, close to LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]. We start by modeling the elementary problem, which has well-known efficient solutions [<xref ref-type="bibr" rid="CR42">42</xref>, <xref ref-type="bibr" rid="CR43">43</xref>] by classic dynamic programming. The extension of this first model from linear to affine gap cost is discussed in Section “Sequence alignment with affine gap cost”.</p>
      <sec id="FPar33">
        <title>Definition 13</title>
        <p id="Par159">[Sequence alignment] A <bold>sequence alignment</bold>
<inline-formula id="IEq385"><alternatives><tex-math id="M837">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M838"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq385.gif"/></alternatives></inline-formula> of two <bold>sequences</bold>
<inline-formula id="IEq386"><alternatives><tex-math id="M839">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M840"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq386.gif"/></alternatives></inline-formula> and <inline-formula id="IEq387"><alternatives><tex-math id="M841">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M842"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq387.gif"/></alternatives></inline-formula> (both are words over <inline-formula id="IEq388"><alternatives><tex-math id="M843">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M844"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq388.gif"/></alternatives></inline-formula>) is a sequence of pairs (aka <bold>alignment columns</bold>) composed of <inline-formula id="IEq389"><alternatives><tex-math id="M845">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\Sigma \cup \{-\})^2{\setminus } \{(-,-)\}$$\end{document}</tex-math><mml:math id="M846"><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo>-</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo lspace="0.15em" rspace="0.15em" stretchy="false">\</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo>-</mml:mo><mml:mo>,</mml:mo><mml:mo>-</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq389.gif"/></alternatives></inline-formula> such that removing − from the words composed of the first (resp. second) letter of all pairs yields <inline-formula id="IEq390"><alternatives><tex-math id="M847">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M848"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq390.gif"/></alternatives></inline-formula> (resp. <inline-formula id="IEq391"><alternatives><tex-math id="M849">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M850"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq391.gif"/></alternatives></inline-formula>). Let <inline-formula id="IEq392"><alternatives><tex-math id="M851">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M852"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq392.gif"/></alternatives></inline-formula> be a pair in the alignment. We say <inline-formula id="IEq393"><alternatives><tex-math id="M853">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)$$\end{document}</tex-math><mml:math id="M854"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq393.gif"/></alternatives></inline-formula> is a match if <inline-formula id="IEq394"><alternatives><tex-math id="M855">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M856"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq394.gif"/></alternatives></inline-formula> equals to <inline-formula id="IEq395"><alternatives><tex-math id="M857">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M858"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq395.gif"/></alternatives></inline-formula>, an insertion if <inline-formula id="IEq396"><alternatives><tex-math id="M859">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i$$\end{document}</tex-math><mml:math id="M860"><mml:mi>i</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq396.gif"/></alternatives></inline-formula> is -, a deletion if <inline-formula id="IEq397"><alternatives><tex-math id="M861">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j$$\end{document}</tex-math><mml:math id="M862"><mml:mi>j</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq397.gif"/></alternatives></inline-formula> is -, and a mismatch otherwise.</p>
        <p>For simplicity, we begin our discussion with <bold>linear gap cost</bold> scoring models, where the score of an alignment <inline-formula id="IEq398"><alternatives><tex-math id="M863">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M864"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq398.gif"/></alternatives></inline-formula> is defined by gap cost <inline-formula id="IEq399"><alternatives><tex-math id="M865">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M866"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq399.gif"/></alternatives></inline-formula> and an <bold>elementwise score</bold>
<inline-formula id="IEq400"><alternatives><tex-math id="M867">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma :\Sigma ^2 \rightarrow \mathbb {R}$$\end{document}</tex-math><mml:math id="M868"><mml:mrow><mml:mi>σ</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq400.gif"/></alternatives></inline-formula>, as<disp-formula id="Equ35"><alternatives><tex-math id="M869">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {score}} {(\mathcal {A})}=\sum _{i: A_i \,\text {match}} \sigma (A_i) +\# {\text {gaps}}(\mathcal {A}) \gamma , \end{aligned}$$\end{document}</tex-math><mml:math id="M870" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mtext>score</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>match</mml:mtext></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>#</mml:mo><mml:mtext>gaps</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>γ</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ35.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq401"><alternatives><tex-math id="M871">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\# {\text {gaps}}(\mathcal {A})}$$\end{document}</tex-math><mml:math id="M872"><mml:mrow><mml:mo>#</mml:mo><mml:mtext>gaps</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq401.gif"/></alternatives></inline-formula> denotes the number of insertions and deletions in <inline-formula id="IEq402"><alternatives><tex-math id="M873">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M874"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq402.gif"/></alternatives></inline-formula>.</p>
        <p>Consider two RNA sequences AAACUGG and ACGACGC ( <inline-formula id="IEq403"><alternatives><tex-math id="M875">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma =\{\texttt {A},\texttt {C},\texttt {G},\texttt {U} \}$$\end{document}</tex-math><mml:math id="M876"><mml:mrow><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="monospace">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="monospace">U</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq403.gif"/></alternatives></inline-formula> ). Assuming similarity scores 2 for matching, and uniformly <inline-formula id="IEq404"><alternatives><tex-math id="M877">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-1$$\end{document}</tex-math><mml:math id="M878"><mml:mrow><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq404.gif"/></alternatives></inline-formula> for insertion and deletion, their alignment<disp-formula id="Equ36"><alternatives><tex-math id="M879">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \texttt {A} _1 \texttt {A} _2 - - \texttt {A} _3 \texttt {C} _4 \texttt {U} _5 \texttt {G} _6 \texttt {G} _7 -\\ - \texttt {A} _1 \texttt {C} _2 \texttt {G} _3 \texttt {A} _4 \texttt {G} _5 - - \texttt {G} _6 \texttt {C} _7 \end{aligned}$$\end{document}</tex-math><mml:math id="M880" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">U</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>7</mml:mn></mml:msub><mml:mo>-</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">A</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>5</mml:mn></mml:msub><mml:mo>-</mml:mo><mml:mo>-</mml:mo><mml:msub><mml:mi mathvariant="monospace">G</mml:mi><mml:mn>6</mml:mn></mml:msub><mml:msub><mml:mi mathvariant="monospace">C</mml:mi><mml:mn>7</mml:mn></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ36.gif" position="anchor"/></alternatives></disp-formula>has a score of <inline-formula id="IEq405"><alternatives><tex-math id="M881">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$6-3-3=0$$\end{document}</tex-math><mml:math id="M882"><mml:mrow><mml:mn>6</mml:mn><mml:mo>-</mml:mo><mml:mn>3</mml:mn><mml:mo>-</mml:mo><mml:mn>3</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq405.gif"/></alternatives></inline-formula> due to three matches, three insertions, and three deletions.</p>
        <p>The <bold>alignment problem</bold> takes two sequences, denoted <inline-formula id="IEq406"><alternatives><tex-math id="M883">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M884"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq406.gif"/></alternatives></inline-formula> of length <italic>n</italic> and <inline-formula id="IEq407"><alternatives><tex-math id="M885">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M886"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq407.gif"/></alternatives></inline-formula> of length <italic>m</italic>, and an elementwise score <inline-formula id="IEq408"><alternatives><tex-math id="M887">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M888"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq408.gif"/></alternatives></inline-formula>. Assuming that <inline-formula id="IEq409"><alternatives><tex-math id="M889">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M890"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq409.gif"/></alternatives></inline-formula> defines a similarity, it asks for maximizing the <inline-formula id="IEq410"><alternatives><tex-math id="M891">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {score}} (\mathcal {A})$$\end{document}</tex-math><mml:math id="M892"><mml:mrow><mml:mtext>score</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq410.gif"/></alternatives></inline-formula> over all alignments and an optimal alignment <inline-formula id="IEq411"><alternatives><tex-math id="M893">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}^*$$\end{document}</tex-math><mml:math id="M894"><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mo>∗</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq411.gif"/></alternatives></inline-formula>.</p>
        <p><italic>Modeling alignment</italic> We model this problem by introducing one variable <inline-formula id="IEq412"><alternatives><tex-math id="M895">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M896"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq412.gif"/></alternatives></inline-formula> per position <italic>i</italic> of the first sequence, whose values indicate their alignment to positions in the second sequence. Before stating our model, we need to resolve a significant issue with this idea. If we express assignments (match/mismatch) between positions <italic>i</italic> of <inline-formula id="IEq413"><alternatives><tex-math id="M897">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M898"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq413.gif"/></alternatives></inline-formula> and <italic>j</italic> of <inline-formula id="IEq414"><alternatives><tex-math id="M899">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M900"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq414.gif"/></alternatives></inline-formula> directly as assignment of <italic>j</italic> to <inline-formula id="IEq415"><alternatives><tex-math id="M901">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M902"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq415.gif"/></alternatives></inline-formula> (<inline-formula id="IEq416"><alternatives><tex-math id="M903">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i=j$$\end{document}</tex-math><mml:math id="M904"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq416.gif"/></alternatives></inline-formula>) then how do we express deletions of <italic>i</italic>? Naively introducing a <italic>special</italic> value for deletion, e.g. <inline-formula id="IEq417"><alternatives><tex-math id="M905">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\bot :=m+1$$\end{document}</tex-math><mml:math id="M906"><mml:mrow><mml:mi>⊥</mml:mi><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq417.gif"/></alternatives></inline-formula>, makes it <italic>difficult</italic> to express the <bold>noncrossing condition</bold> on assignments, namely the positions <italic>j</italic> of <inline-formula id="IEq418"><alternatives><tex-math id="M907">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M908"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq418.gif"/></alternatives></inline-formula> can be assigned to positions <italic>i</italic> of <inline-formula id="IEq419"><alternatives><tex-math id="M909">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M910"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq419.gif"/></alternatives></inline-formula> in increasing order (<inline-formula id="IEq420"><alternatives><tex-math id="M911">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i&gt;i'$$\end{document}</tex-math><mml:math id="M912"><mml:mrow><mml:mi>i</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq420.gif"/></alternatives></inline-formula> implies <inline-formula id="IEq421"><alternatives><tex-math id="M913">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j&gt;j'$$\end{document}</tex-math><mml:math id="M914"><mml:mrow><mml:mi>j</mml:mi><mml:mo>&gt;</mml:mo><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq421.gif"/></alternatives></inline-formula>). More precisely, naive encoding introduces inequality-like constraints between all pairs of variables <inline-formula id="IEq422"><alternatives><tex-math id="M915">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M916"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq422.gif"/></alternatives></inline-formula> and <inline-formula id="IEq423"><alternatives><tex-math id="M917">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i'}$$\end{document}</tex-math><mml:math id="M918"><mml:msub><mml:mi>X</mml:mi><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq423.gif"/></alternatives></inline-formula> (<inline-formula id="IEq424"><alternatives><tex-math id="M919">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i&lt;i'\le n$$\end{document}</tex-math><mml:math id="M920"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq424.gif"/></alternatives></inline-formula>).</p>
        <p>Instead, following [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>], we model the deletion of a position <italic>i</italic> by assigning the same value to <inline-formula id="IEq425"><alternatives><tex-math id="M921">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M922"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq425.gif"/></alternatives></inline-formula> and <inline-formula id="IEq426"><alternatives><tex-math id="M923">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1}$$\end{document}</tex-math><mml:math id="M924"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq426.gif"/></alternatives></inline-formula>. This keeps the assigned values in increasing order and allows a unique representation of alignments by assignments. To further facilitate modeling, we introduce <italic>sentinel</italic> variables <inline-formula id="IEq427"><alternatives><tex-math id="M925">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_0=0$$\end{document}</tex-math><mml:math id="M926"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq427.gif"/></alternatives></inline-formula> and <inline-formula id="IEq428"><alternatives><tex-math id="M927">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{n+1}=m+1$$\end{document}</tex-math><mml:math id="M928"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq428.gif"/></alternatives></inline-formula>. As illustrated in Fig. <xref rid="Fig6" ref-type="fig">6</xref>, our example alignment is then encoded by the assignment<disp-formula id="Equ37"><alternatives><tex-math id="M929">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \begin{array}{c|ccccccccc} i &amp;{} 0 &amp;{} 1 &amp;{} 2 &amp;{} 3 &amp;{} 4 &amp;{} 5 &amp;{} 6 &amp;{} 7 &amp;{} 8 \\ \hline x_i &amp;{} 0 &amp;{} 0 &amp;{} 1 &amp;{} 4 &amp;{} 5 &amp;{} 5 &amp;{} 5 &amp;{} 6 &amp;{} 8 \end{array}. \end{aligned}$$\end{document}</tex-math><mml:math id="M930" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mtable columnlines="solid none none none none none none none none none" rowlines="solid none"><mml:mtr><mml:mtd><mml:mi>i</mml:mi></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>2</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>3</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>4</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>6</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>7</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>8</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>1</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>4</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>5</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>6</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow/><mml:mn>8</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ37.gif" position="anchor"/></alternatives></disp-formula>With this idea (illustrated in Fig. <xref rid="Fig6" ref-type="fig">6</xref>), the feature network <inline-formula id="IEq429"><alternatives><tex-math id="M931">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {ali}}$$\end{document}</tex-math><mml:math id="M932"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq429.gif"/></alternatives></inline-formula> is formalized by<list list-type="bullet"><list-item><p id="Par165"><inline-formula id="IEq430"><alternatives><tex-math id="M933">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _{\text {ali}}=\{X_0,\ldots , X_{n+1}\}$$\end{document}</tex-math><mml:math id="M934"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq430.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par166"><inline-formula id="IEq431"><alternatives><tex-math id="M935">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _{\text {ali}}=\{0\}\times \{0,\ldots ,m\}^n \times \{m+1\}$$\end{document}</tex-math><mml:math id="M936"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>m</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq431.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par167"><inline-formula id="IEq432"><alternatives><tex-math id="M937">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _{\text {ali}}=\{{\text {\textsf{Leq}}}_{[X_{i-1},X_i]} \mid i\in [2, n]\}$$\end{document}</tex-math><mml:math id="M938"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Leq</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq432.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par168"><inline-formula id="IEq433"><alternatives><tex-math id="M939">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _{\text {ali}}=\{F_{\text {match}}, F_{\text {insertion}}, F_{\text {deletion}}\}$$\end{document}</tex-math><mml:math id="M940"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>insertion</mml:mtext></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>deletion</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq433.gif"/></alternatives></inline-formula> with<list list-type="bullet"><list-item><p id="Par169"><inline-formula id="IEq434"><alternatives><tex-math id="M941">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {match}}=\{{\text {\textsf{Match}}}_{[X_i]}\mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M942"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>match</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Match</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq434.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par170"><inline-formula id="IEq435"><alternatives><tex-math id="M943">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {deletion}}=\{{\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}\mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M944"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>deletion</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq435.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par171"><inline-formula id="IEq436"><alternatives><tex-math id="M945">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_{\text {insertion}}=\{{\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}\mid i\in [1,n+1]\}$$\end{document}</tex-math><mml:math id="M946"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>insertion</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq436.gif"/></alternatives></inline-formula>;</p></list-item></list></p></list-item></list>The constraint <inline-formula id="IEq437"><alternatives><tex-math id="M947">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Leq}}}_{[X_{i-1}, X_i]}:(x_{i-1}, x_i)\mapsto (x_{i-1}\le x_i)$$\end{document}</tex-math><mml:math id="M948"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Leq</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>↦</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≤</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq437.gif"/></alternatives></inline-formula> ensures an increasing order of the values in the assignment. The network functions express the alignment score:<disp-formula id="Equ38"><alternatives><tex-math id="M949">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{Match}}}_{[X_{i-1},X_i]}(x_{i-1},x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \sigma (a [i],b [x_i]) &amp;{} x_{i-1}&lt;x_i \\ 0 &amp;{} \text {otherwise} \end{array}\right. } \\&amp;{\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \gamma &amp;{} x_{i-1}=x_i \\ 0 &amp;{} \text {otherwise} \end{array}\right. } \\&amp;{\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}(x_{i-1}, x_i) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \gamma (x_i - x_{i-1} -1) &amp;{} x_{i-1}\ne x_i \\ 0 &amp;{} \text {otherwise.} \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M950" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Match</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>σ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>a</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>γ</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>γ</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>≠</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise.</mml:mtext></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ38.gif" position="anchor"/></alternatives></disp-formula><bold><italic>Efficient solving</italic></bold> Infrared ’s general solving mechanism computes alignments based on this model in <inline-formula id="IEq438"><alternatives><tex-math id="M951">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \cdot m^2)$$\end{document}</tex-math><mml:math id="M952"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq438.gif"/></alternatives></inline-formula> time, dominating the <inline-formula id="IEq439"><alternatives><tex-math id="M953">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm)$$\end{document}</tex-math><mml:math id="M954"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq439.gif"/></alternatives></inline-formula> time for the traceback, and <inline-formula id="IEq440"><alternatives><tex-math id="M955">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm)$$\end{document}</tex-math><mml:math id="M956"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq440.gif"/></alternatives></inline-formula> space following Propositions <xref ref-type="sec" rid="FPar23">4</xref> and <xref ref-type="sec" rid="FPar25">5</xref> (treewidth 1; <italic>n</italic> variables with domains of size <italic>m</italic>; <inline-formula id="IEq441"><alternatives><tex-math id="M957">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n)$$\end{document}</tex-math><mml:math id="M958"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq441.gif"/></alternatives></inline-formula> functions, each evaluated in constant time).</p>
        <p>Note that while this automatic solution is efficient, it is still more costly than the known dynamic programming alignment algorithms by a linear factor. (In more detail, it does not profit from the linear cost of insertion; one could, within the same complexity, encode nonlinear insertion cost by modifying the functions <inline-formula id="IEq442"><alternatives><tex-math id="M959">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Insertion}}}$$\end{document}</tex-math><mml:math id="M960"><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq442.gif"/></alternatives></inline-formula>.) This issue has been discussed and solved before for the case of sequence alignment based on the presented model [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>]; essentially it can be solved by applying DP to process single bags. Resolving this issue in broader generality is an open problem, whereas in principle the known specific solutions for sequence alignment can be implemented in the framework.</p>
        <p>In practice, this issue is strongly alleviated by <italic>banding strategies</italic> [<xref ref-type="bibr" rid="CR44">44</xref>] that limit the domain size to <inline-formula id="IEq443"><alternatives><tex-math id="M961">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mu&lt;\!&lt;m$$\end{document}</tex-math><mml:math id="M962"><mml:mrow><mml:mi>μ</mml:mi><mml:mo>&lt;</mml:mo><mml:mspace width="-0.166667em"/><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq443.gif"/></alternatives></inline-formula>; this reduces the complexity to <inline-formula id="IEq444"><alternatives><tex-math id="M963">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \mu ^2)$$\end{document}</tex-math><mml:math id="M964"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mi>μ</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq444.gif"/></alternatives></inline-formula> time (and <inline-formula id="IEq445"><alternatives><tex-math id="M965">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \mu )$$\end{document}</tex-math><mml:math id="M966"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mi>μ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq445.gif"/></alternatives></inline-formula> space).</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Model extensions and advanced topics</title>
    <sec id="Sec20">
      <title>Sequence alignment with affine gap cost</title>
      <p id="Par174">For more realistic alignments, the cost of consecutive runs of insertions and deletions (aka <bold>gaps</bold>) is scored in a nonlinear fashion; e.g. <italic>k</italic> consecutive insertions are evolutionarily <italic>less costly</italic> than <italic>k</italic> independent insertions. This motivates redefining the score of an alignment <inline-formula id="IEq446"><alternatives><tex-math id="M967">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {A}$$\end{document}</tex-math><mml:math id="M968"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq446.gif"/></alternatives></inline-formula>:<disp-formula id="Equ39"><alternatives><tex-math id="M969">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\text {score}} '(\mathcal {A})=\sum _{i: A_i \,\text {match}} \sigma (A_i) + {\text {gapcost}}(\mathcal {A}), \end{aligned}$$\end{document}</tex-math><mml:math id="M970" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msup><mml:mrow><mml:mtext>score</mml:mtext></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>match</mml:mtext></mml:mrow></mml:munder><mml:mi>σ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>A</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mtext>gapcost</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ39.gif" position="anchor"/></alternatives></disp-formula>where generally <inline-formula id="IEq447"><alternatives><tex-math id="M971">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {gapcost}}(\mathcal {A}) = \sum _{\text {gap of length}\, \ell \,\text {in}\, \mathcal {A}} g(\ell ).$$\end{document}</tex-math><mml:math id="M972"><mml:mrow><mml:mtext>gapcost</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mtext>gap of length</mml:mtext><mml:mspace width="0.166667em"/><mml:mi>ℓ</mml:mi><mml:mspace width="0.166667em"/><mml:mtext>in</mml:mtext><mml:mspace width="0.166667em"/><mml:mi mathvariant="script">A</mml:mi></mml:mrow></mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq447.gif"/></alternatives></inline-formula> For <inline-formula id="IEq448"><alternatives><tex-math id="M973">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g(\ell ):=\gamma \ell$$\end{document}</tex-math><mml:math id="M974"><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>γ</mml:mi><mml:mi>ℓ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq448.gif"/></alternatives></inline-formula>, this score degenerates to the case of linear gap cost. The most prominent case is <bold>affine gap cost</bold>, where <inline-formula id="IEq449"><alternatives><tex-math id="M975">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$g(\ell ):=\beta + \gamma \ell$$\end{document}</tex-math><mml:math id="M976"><mml:mrow><mml:mi>g</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>ℓ</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi><mml:mi>ℓ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq449.gif"/></alternatives></inline-formula>, distinguishing gap opening <inline-formula id="IEq450"><alternatives><tex-math id="M977">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\beta$$\end{document}</tex-math><mml:math id="M978"><mml:mi>β</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq450.gif"/></alternatives></inline-formula> from gap extension cost <inline-formula id="IEq451"><alternatives><tex-math id="M979">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M980"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq451.gif"/></alternatives></inline-formula>.</p>
      <p id="Par175">Underlining the asymmetry of <inline-formula id="IEq452"><alternatives><tex-math id="M981">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {ali}$$\end{document}</tex-math><mml:math id="M982"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq452.gif"/></alternatives></inline-formula>, we could extend the model to arbitrary cost of insertions by redefining <inline-formula id="IEq453"><alternatives><tex-math id="M983">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Insertion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i):= g(x_i-x_{i-1}-1)$$\end{document}</tex-math><mml:math id="M984"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Insertion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>:</mml:mo><mml:mo>=</mml:mo><mml:mi>g</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq453.gif"/></alternatives></inline-formula>; however, modeling affine cost for deletions cannot be expressed in a direct modification of <inline-formula id="IEq454"><alternatives><tex-math id="M985">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Deletion}}}_{[X_{i-1},X_i]}(x_{i-1},x_i)$$\end{document}</tex-math><mml:math id="M986"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Deletion</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq454.gif"/></alternatives></inline-formula> since we lack information to distinguish gap opening and extension.</p>
      <p id="Par176">One can envision at least two possible fixes. First, we can replace the binary deletion network functions with ternary functions that depend on <inline-formula id="IEq455"><alternatives><tex-math id="M987">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-2},X_{i-1},X_i$$\end{document}</tex-math><mml:math id="M988"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq455.gif"/></alternatives></inline-formula>. This extension comes at the price of increasing the tree width by 1 (and thus the complexity by a further factor of <italic>m</italic>.) Second, we can introduce additional Boolean variables <inline-formula id="IEq456"><alternatives><tex-math id="M989">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M990"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq456.gif"/></alternatives></inline-formula> to reflect the matching state at position <italic>i</italic>: <inline-formula id="IEq457"><alternatives><tex-math id="M991">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M992"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq457.gif"/></alternatives></inline-formula> is assigned to <inline-formula id="IEq458"><alternatives><tex-math id="M993">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=1$$\end{document}</tex-math><mml:math id="M994"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq458.gif"/></alternatives></inline-formula> if <italic>i</italic> is matched; <inline-formula id="IEq459"><alternatives><tex-math id="M995">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=0$$\end{document}</tex-math><mml:math id="M996"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq459.gif"/></alternatives></inline-formula>, if <italic>i</italic> is deleted. In turn, the deletion function can be modified to depend on <inline-formula id="IEq460"><alternatives><tex-math id="M997">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1},$$\end{document}</tex-math><mml:math id="M998"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq460.gif"/></alternatives></inline-formula>
<inline-formula id="IEq461"><alternatives><tex-math id="M999">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1000"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq461.gif"/></alternatives></inline-formula> and <inline-formula id="IEq462"><alternatives><tex-math id="M1001">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_{i-1}$$\end{document}</tex-math><mml:math id="M1002"><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq462.gif"/></alternatives></inline-formula>:<disp-formula id="Equ40"><alternatives><tex-math id="M1003">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; {\text{Deletion}}_{{\left[ {X_{{i - 1}} ,X_{i} ,Y_{{i - 1}} } \right]}} \,(x_{{i - 1}} ,x_{i} ,y_{{i - 1}} )\, \\ &amp;\quad= \,\left\{ {\begin{array}{*{20}l} {\beta + \gamma } \hfill &amp; {x_{{i - 1}} = x_{i} \,{\text{and}}\,y_{{i - 1}} = 0} \hfill \\ \beta \hfill &amp; {x_{{i - 1}} = x_{i} \,{\text{and}}\,y_{{i - 1}} = 1} \hfill \\ 0 \hfill &amp; {{\text{otherwise}}{\text{.}}} \hfill \\ \end{array} } \right. \end{aligned}$$\end{document}</tex-math><mml:math id="M1004" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext>Deletion</mml:mtext><mml:mfenced close="]" open="["><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:msub><mml:mspace width="0.166667em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mi>β</mml:mi><mml:mo>+</mml:mo><mml:mi>γ</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>β</mml:mi></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mspace width="0.166667em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.166667em"/><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mtext>otherwise.</mml:mtext></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ40.gif" position="anchor"/></alternatives></disp-formula><bold><italic>Complexity</italic></bold> For the first idea, we derive a time complexity of <inline-formula id="IEq463"><alternatives><tex-math id="M1005">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(nm^3)$$\end{document}</tex-math><mml:math id="M1006"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mi>m</mml:mi><mml:mn>3</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq463.gif"/></alternatives></inline-formula> (Prop. <xref ref-type="sec" rid="FPar23">4</xref>), since the treewidth is 2. In the second model, adding Boolean variables (and ternary constraints to relate them to the <italic>X</italic> variables) technically increases the treewidth, but since the variables <inline-formula id="IEq464"><alternatives><tex-math id="M1007">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1008"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq464.gif"/></alternatives></inline-formula> have a domain size of 2, in contrast to the linear domain size of the variables <inline-formula id="IEq465"><alternatives><tex-math id="M1009">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1010"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq465.gif"/></alternatives></inline-formula>, their effect on the complexity is much lower (in this case, even constant in sequence length).</p>
      <p id="Par177">Here, the direct application of Proposition <xref ref-type="sec" rid="FPar23">4</xref> would strongly overestimate; instead we follow the argumentation of Section “Complexity analysis for nonuniform domain sizes”. The introduced <inline-formula id="IEq466"><alternatives><tex-math id="M1011">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1012"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq466.gif"/></alternatives></inline-formula> variables each correspond to the <inline-formula id="IEq467"><alternatives><tex-math id="M1013">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1014"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq467.gif"/></alternatives></inline-formula> variable of the same index. Collapsing the nodes of these corresponding variables in the dependency graph, let us us decompose it with width 1. Thus, we bound the time complexity by <inline-formula id="IEq468"><alternatives><tex-math id="M1015">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n \cdot m^2 2^2)$$\end{document}</tex-math><mml:math id="M1016"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>·</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msup><mml:msup><mml:mn>2</mml:mn><mml:mn>2</mml:mn></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq468.gif"/></alternatives></inline-formula>; see also our discussion of the linear case. The <italic>Y</italic> variables thus contribute a constant factor of 4, comparable to the overhead of Gotoh’s algorithm [<xref ref-type="bibr" rid="CR43">43</xref>] over linear gap cost alignment (approximately factor 3). Thus, the second model improves the first one by a linear factor—intuitively, it allows sharing Boolean variables between bags instead of variables of linear domains.</p>
    </sec>
    <sec id="Sec21">
      <title>From sequence alignment to pseudoknot sequence-structure alignment</title>
      <p id="Par178">
        <fig id="Fig7">
          <label>Fig. 7</label>
          <caption>
            <p>Modeling sequence structure alignment. Example of a valid assignment and corresponding alignment with a pseudoknotted structure. The model contains one network function <inline-formula id="IEq469"><alternatives><tex-math id="M1017">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPMatch}}}$$\end{document}</tex-math><mml:math id="M1018"><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq469.gif"/></alternatives></inline-formula> per input base pair (arcs on top). These functions contribute <inline-formula id="IEq470"><alternatives><tex-math id="M1019">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M1020"><mml:mi>τ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq470.gif"/></alternatives></inline-formula> for matches to canonical bases (dashed arcs)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig7_HTML" id="MO15"/>
        </fig>
      </p>
      <p id="Par179">We will develop Infrared models for RNA alignment, where the first RNA is annotated by a potentially crossing secondary structure. We build on the previously described sequence alignment model <inline-formula id="IEq471"><alternatives><tex-math id="M1021">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{ali}$$\end{document}</tex-math><mml:math id="M1022"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mrow><mml:mi mathvariant="italic">ali</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq471.gif"/></alternatives></inline-formula>. Recall our definition of RNA secondary structure from Section “RNA design”; here, we will explicitly consider <italic>general</italic> secondary structures, where base pairs can cross and thereby form arbitrary pseudoknots. This means that we are solving the essentially same optimization problem as LicoRNA [<xref ref-type="bibr" rid="CR3">3</xref>]. While LicoRNA implements hand-crafted, specialized dynamic programming algorithms, Infrared automatically derives closely related algorithms from a network model, typically from less than 100 lines of Python code. These algorithms solve the pseudoknotted RNA alignment problem efficiently for the same fixed treewidth parameter.</p>
      <p id="Par180">Given are two RNA sequences <italic>a</italic> and <italic>b</italic> of respective length <italic>n</italic> and <italic>m</italic>, additionally a general (i.e. not necessarily noncrossing, potentially pseudoknotted) RNA secondary structure <italic>S</italic> of length <italic>n</italic>; <italic>S</italic> is also called <bold>arc-annotation</bold> of <inline-formula id="IEq472"><alternatives><tex-math id="M1023">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M1024"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq472.gif"/></alternatives></inline-formula>.</p>
      <p id="Par181">We are interested in optimizing a type of alignment score that takes the structural relations due to the arc annotation into account; see Fig. <xref rid="Fig7" ref-type="fig">7</xref>. To demonstrate the principle, we extend the sequence alignment score of the previous section by an <bold>arc match bonus</bold>
<inline-formula id="IEq473"><alternatives><tex-math id="M1025">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau$$\end{document}</tex-math><mml:math id="M1026"><mml:mi>τ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq473.gif"/></alternatives></inline-formula>. Let us thus define our <bold>sequence structure alignment score</bold> by<disp-formula id="Equ41"><alternatives><tex-math id="M1027">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} &amp; {\text{score}}_{S} ({\mathcal{A}})\, = \,{\text{score}}({\mathcal{A}})\, \\ &amp;\quad+ \,\sum\limits_{{\left( {i,j} \right) \in S}} {\left\{ {\begin{array}{*{20}c} \tau &amp; {{\mathcal{A}}{\text{ matches }}i {\text{ to }}i^{\prime}} \\ {} &amp; {{\text{and }}j{\text{ to }}j^{\prime};(b[i^{\prime}],b[j^{\prime}]) \in {\mathcal{B}}} \\ 0 &amp; {{\text{otherwise}},} \\ \end{array} } \right.} \end{aligned}$$\end{document}</tex-math><mml:math id="M1028" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext>score</mml:mtext><mml:mi>S</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/><mml:mo>=</mml:mo><mml:mspace width="0.166667em"/><mml:mtext>score</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.166667em"/></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow/></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>+</mml:mo><mml:mspace width="0.166667em"/><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mfenced close=")" open="("><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:mfenced><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:munder><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd><mml:mi>τ</mml:mi></mml:mtd><mml:mtd><mml:mrow><mml:mi mathvariant="script">A</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>matches</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mi>i</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>to</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mrow><mml:mtext>and</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:mi>j</mml:mi><mml:mrow><mml:mspace width="0.333333em"/><mml:mtext>to</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>;</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>i</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mi>j</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd><mml:mrow><mml:mtext>otherwise</mml:mtext><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ41.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq474"><alternatives><tex-math id="M1029">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {B}$$\end{document}</tex-math><mml:math id="M1030"><mml:mi mathvariant="script">B</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq474.gif"/></alternatives></inline-formula> is the set of canonical base pairs (Sec. “RNA design”).</p>
      <sec id="FPar34">
        <title>Problem 5</title>
        <p id="Par182">[General sequence-structure alignment] Given sequences <italic>a</italic>, and <italic>b</italic> annotated by <italic>S</italic>, the <bold>sequence structure alignment problem</bold> asks for a sequence alignment of <italic>a</italic> and <italic>b</italic> (Def. <xref ref-type="sec" rid="FPar33">13</xref>) that optimizes the sequence structure alignment score <inline-formula id="IEq475"><alternatives><tex-math id="M1031">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\text {score}}_S} (\mathcal {A})$$\end{document}</tex-math><mml:math id="M1032"><mml:mrow><mml:msub><mml:mtext>score</mml:mtext><mml:mi>S</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq475.gif"/></alternatives></inline-formula>.</p>
        <p>Our feature network model <inline-formula id="IEq476"><alternatives><tex-math id="M1033">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {sali}$$\end{document}</tex-math><mml:math id="M1034"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>sali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq476.gif"/></alternatives></inline-formula> directly builds on <inline-formula id="IEq477"><alternatives><tex-math id="M1035">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _\text {ali}$$\end{document}</tex-math><mml:math id="M1036"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq477.gif"/></alternatives></inline-formula>, extending it by network functions to encode the structure component of the score. As discussed in the previous subsection (for the purpose of modeling affine gap cost), we introduce Boolean variables <inline-formula id="IEq478"><alternatives><tex-math id="M1037">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1038"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq478.gif"/></alternatives></inline-formula> to indicate the match of position <italic>i</italic> in <inline-formula id="IEq479"><alternatives><tex-math id="M1039">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a$$\end{document}</tex-math><mml:math id="M1040"><mml:mi>a</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq479.gif"/></alternatives></inline-formula> since they let us express the arc match bonus more efficiently. We obtain<list list-type="bullet"><list-item><p id="Par184"><inline-formula id="IEq480"><alternatives><tex-math id="M1041">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X}_\text {sali} = \mathcal {X}_\text {ali}\cup \{Y_1,\dots ,Y_n\}$$\end{document}</tex-math><mml:math id="M1042"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq480.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par185"><inline-formula id="IEq481"><alternatives><tex-math id="M1043">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D}_\text {sali}$$\end{document}</tex-math><mml:math id="M1044"><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>sali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq481.gif"/></alternatives></inline-formula> extends <inline-formula id="IEq482"><alternatives><tex-math id="M1045">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D}_\text {ali}$$\end{document}</tex-math><mml:math id="M1046"><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>ali</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq482.gif"/></alternatives></inline-formula> by Boolean domains {0,1} for all <inline-formula id="IEq483"><alternatives><tex-math id="M1047">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1048"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq483.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par186"><inline-formula id="IEq484"><alternatives><tex-math id="M1049">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_\text {sali} = \mathcal {C}_\text {ali}\cup \mathcal {C}_\text {relXY}$$\end{document}</tex-math><mml:math id="M1050"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>relXY</mml:mtext></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq484.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par187"><inline-formula id="IEq485"><alternatives><tex-math id="M1051">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F}_\text {sali} = \mathcal {F}_\text {ali}\cup \{F_\text {bpmatch}\}$$\end{document}</tex-math><mml:math id="M1052"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>sali</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>ali</mml:mtext></mml:msub><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>F</mml:mi><mml:mtext>bpmatch</mml:mtext></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq485.gif"/></alternatives></inline-formula>;</p></list-item></list>where <inline-formula id="IEq486"><alternatives><tex-math id="M1053">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C}_\text {relXY}$$\end{document}</tex-math><mml:math id="M1054"><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>relXY</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq486.gif"/></alternatives></inline-formula> is a set of constraints that relate the variables <inline-formula id="IEq487"><alternatives><tex-math id="M1055">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1056"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq487.gif"/></alternatives></inline-formula>, <inline-formula id="IEq488"><alternatives><tex-math id="M1057">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i-1}$$\end{document}</tex-math><mml:math id="M1058"><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq488.gif"/></alternatives></inline-formula> and <inline-formula id="IEq489"><alternatives><tex-math id="M1059">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1060"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq489.gif"/></alternatives></inline-formula>, such that <inline-formula id="IEq490"><alternatives><tex-math id="M1061">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_i=1 \iff x_{i-1}&lt;x_i$$\end{document}</tex-math><mml:math id="M1062"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>⟺</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq490.gif"/></alternatives></inline-formula> (for all <inline-formula id="IEq491"><alternatives><tex-math id="M1063">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n$$\end{document}</tex-math><mml:math id="M1064"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq491.gif"/></alternatives></inline-formula>) and <inline-formula id="IEq492"><alternatives><tex-math id="M1065">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F_\text {bpmatch}=\{{\text {\textsf{BPMatch}}}_{[X_i,X_j,Y_i,Y_j]} \mid (i,j)\in S\}$$\end{document}</tex-math><mml:math id="M1066"><mml:mrow><mml:msub><mml:mi>F</mml:mi><mml:mtext>bpmatch</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi>S</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq492.gif"/></alternatives></inline-formula><disp-formula id="Equ42"><alternatives><tex-math id="M1067">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned}&amp;{\text {\textsf{BPMatch}}}_{[X_i,X_j,Y_i,Y_j]}(x_i,x_j,y_i,y_j) \\ {}&amp;\quad = {\left\{ \begin{array}{ll} \tau &amp;{} y_i=1, y_j=1, \text { and } (b[x_i],b[x_j]) \in \mathcal {B} \\ 0 &amp;{} \text {otherwise}. \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M1068" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd/><mml:mtd columnalign="left"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow/><mml:mrow/></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mspace width="1em"/><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>τ</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mspace width="0.333333em"/><mml:mtext>and</mml:mtext><mml:mspace width="0.333333em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>otherwise</mml:mtext><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ42.gif" position="anchor"/></alternatives></disp-formula>Note that <inline-formula id="IEq493"><alternatives><tex-math id="M1069">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{BPMatch}}}$$\end{document}</tex-math><mml:math id="M1070"><mml:mtext mathvariant="sans-serif">BPMatch</mml:mtext></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq493.gif"/></alternatives></inline-formula> (for an arc <inline-formula id="IEq494"><alternatives><tex-math id="M1071">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(i,j)\in S$$\end{document}</tex-math><mml:math id="M1072"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>S</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq494.gif"/></alternatives></inline-formula>) cannot be defined in dependency of only <inline-formula id="IEq495"><alternatives><tex-math id="M1073">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1074"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq495.gif"/></alternatives></inline-formula> and <inline-formula id="IEq496"><alternatives><tex-math id="M1075">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_j$$\end{document}</tex-math><mml:math id="M1076"><mml:msub><mml:mi>X</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq496.gif"/></alternatives></inline-formula>, since <inline-formula id="IEq497"><alternatives><tex-math id="M1077">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(b[x_i],b[x_j]) \in \mathcal {B}$$\end{document}</tex-math><mml:math id="M1078"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi mathvariant="script">B</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq497.gif"/></alternatives></inline-formula> could hold in cases where <italic>i</italic> or <italic>j</italic> are deleted.</p>
        <p><bold><italic>Complexity</italic></bold> As in the analysis of Section “Sequence alignment with affine gap cost”, we collapse each pair of nodes of variables <inline-formula id="IEq498"><alternatives><tex-math id="M1079">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1080"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq498.gif"/></alternatives></inline-formula> and <inline-formula id="IEq499"><alternatives><tex-math id="M1081">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1082"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq499.gif"/></alternatives></inline-formula> (of the same index <italic>i</italic>) in the dependency graph. The result is isomorphic to the <italic>structure graph</italic> of RNA <italic>a</italic>, consisting of its nucleotides as nodes, and edges due to its backbone and base pairs. For the treewidth <inline-formula id="IEq500"><alternatives><tex-math id="M1083">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1084"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq500.gif"/></alternatives></inline-formula> of this graph, we derive <inline-formula id="IEq501"><alternatives><tex-math id="M1085">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(n2^{w +1}m^{w +1})$$\end{document}</tex-math><mml:math id="M1086"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:msup><mml:mn>2</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq501.gif"/></alternatives></inline-formula> time complexity by Corollary <xref ref-type="sec" rid="FPar27">1</xref>.</p>
        <p>Whereas in our models for network parsimony or RNA design the domain size is constantly bounded, here it depends on the input size. Consequently, solving of this RNA alignment problem is not in parameterized complexity class <bold>FPT</bold>, but <bold>XP</bold> (Sec. “Parameterized complexity classes”).</p>
        <p><bold><italic>Discussion</italic></bold> The presented model extension yields an automatically derived solution to the pseudoknot sequence-structure alignment problem with parameterized complexity in the treewidth. Compared to LicoRNA, our algorithms depend on the exact same fixed parameter. Note that, in the current implementation, Infrared’s complexity is worse by a linear factor due to the same reason as we discussed for sequence alignment before. In practice, this is often reduced to a constant factor, namely the band width.</p>
        <p>This is contrasted by general benefits due to the declarative implementation in Infrared (Jupyter notebook). For example, the code is well maintainable, extensible by further constraints and evaluation criteria, and can profit from future developments and optimization of the Infrared system.</p>
      </sec>
    </sec>
    <sec id="Sec22">
      <title>Finite state automata</title>
      <p id="Par192">
        <fig id="Fig8">
          <label>Fig. 8</label>
          <caption>
            <p>Sketch of the 5-state Deterministic finite “Aho-Corasick” automaton accepting the three stop codons UGA, UUA, UUG. We do not draw back-transitions to <inline-formula id="IEq502"><alternatives><tex-math id="M1087">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1088"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq502.gif"/></alternatives></inline-formula>, which occur implicitly for all not explicitly shown cases (i.e.  A,C,G in <inline-formula id="IEq503"><alternatives><tex-math id="M1089">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1090"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq503.gif"/></alternatives></inline-formula>; C in <inline-formula id="IEq504"><alternatives><tex-math id="M1091">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_1$$\end{document}</tex-math><mml:math id="M1092"><mml:msub><mml:mi>q</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq504.gif"/></alternatives></inline-formula>, C,G in <inline-formula id="IEq505"><alternatives><tex-math id="M1093">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_2$$\end{document}</tex-math><mml:math id="M1094"><mml:msub><mml:mi>q</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq505.gif"/></alternatives></inline-formula>; and C in <inline-formula id="IEq506"><alternatives><tex-math id="M1095">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_3$$\end{document}</tex-math><mml:math id="M1096"><mml:msub><mml:mi>q</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq506.gif"/></alternatives></inline-formula>). To <italic>forbid</italic>, instead of accept, all of the three stop codons, we complement the language by making all states but <inline-formula id="IEq507"><alternatives><tex-math id="M1097">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_4$$\end{document}</tex-math><mml:math id="M1098"><mml:msub><mml:mi>q</mml:mi><mml:mn>4</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq507.gif"/></alternatives></inline-formula> accepting</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig8_HTML" id="MO16"/>
        </fig>
      </p>
      <p id="Par193">A common side condition when designing RNA or DNA sequences is to avoid or enforce certain sequence motifs. For example, one could be interested in avoiding stop codons anywhere in the designed sequence (or avoid restriction sites, enforce binding sites...). Such conditions can be generalized in terms of regular languages, accepted by deterministic finite state automata (DFA; Fig. <xref rid="Fig8" ref-type="fig">8</xref>). This idea is well known in constraint programming; for example it is the basis of the global regular language membership constraint [<xref ref-type="bibr" rid="CR45">45</xref>]. In the specific case of sequence design, DFAs have been introduced by [<xref ref-type="bibr" rid="CR46">46</xref>] to perform such tasks efficiently for a set of sequence motifs. We show that finite state automata can be emulated in network models. Remarkably, this allows us to efficiently handle such requirements even in combination with other design objectives; e.g. the automaton model of this section could be merged with our model for multitarget RNA design <inline-formula id="IEq508"><alternatives><tex-math id="M1099">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {design}}$$\end{document}</tex-math><mml:math id="M1100"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>design</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq508.gif"/></alternatives></inline-formula> (Sec. “RNA design”).</p>
      <p id="Par194">The model is a good example for the use of several types of variables, as we are going to introduce, for every sequence position, one variable to model the nucleotide and one to model the automaton state.</p>
      <sec id="FPar35">
        <title>Definition 14</title>
        <p id="Par195">[Deterministic Finite Automaton] A <bold>Deterministic Finite Automaton (DFA)</bold> is a <inline-formula id="IEq509"><alternatives><tex-math id="M1101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$5$$\end{document}</tex-math><mml:math id="M1102"><mml:mrow><mml:mn>5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq509.gif"/></alternatives></inline-formula>-tuple <inline-formula id="IEq510"><alternatives><tex-math id="M1103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {Q},\Sigma ,\delta ,q_0,\mathcal {Q}_F)$$\end{document}</tex-math><mml:math id="M1104"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq510.gif"/></alternatives></inline-formula> with<list list-type="bullet"><list-item><p id="Par196">Finite set of states <inline-formula id="IEq511"><alternatives><tex-math id="M1105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}$$\end{document}</tex-math><mml:math id="M1106"><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq511.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par197">Finite set of symbols <inline-formula id="IEq512"><alternatives><tex-math id="M1107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M1108"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq512.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par198">Transition function <inline-formula id="IEq513"><alternatives><tex-math id="M1109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta :\mathcal {Q}\times \Sigma \rightarrow \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1110"><mml:mrow><mml:mi>δ</mml:mi><mml:mo>:</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq513.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par199">Initial state <inline-formula id="IEq514"><alternatives><tex-math id="M1111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0\in \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1112"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq514.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par200">Set of final, accepting states <inline-formula id="IEq515"><alternatives><tex-math id="M1113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}_F\subset \mathcal {Q}$$\end{document}</tex-math><mml:math id="M1114"><mml:mrow><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo>⊂</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq515.gif"/></alternatives></inline-formula>.</p></list-item></list></p>
        <p>A word <inline-formula id="IEq516"><alternatives><tex-math id="M1115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w=a \ldots w_n$$\end{document}</tex-math><mml:math id="M1116"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mi>a</mml:mi><mml:mo>…</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq516.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq517"><alternatives><tex-math id="M1117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M1118"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq517.gif"/></alternatives></inline-formula> is accepted by a DFA if there exists a sequence of states <inline-formula id="IEq518"><alternatives><tex-math id="M1119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q=\{q_0,\ldots , q_n\}\subset \mathcal {Q}^{n+1}$$\end{document}</tex-math><mml:math id="M1120"><mml:mrow><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>⊂</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq518.gif"/></alternatives></inline-formula> starting with initial state <inline-formula id="IEq519"><alternatives><tex-math id="M1121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_0$$\end{document}</tex-math><mml:math id="M1122"><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq519.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq520"><alternatives><tex-math id="M1123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_n\in \mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1124"><mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq520.gif"/></alternatives></inline-formula> and <inline-formula id="IEq521"><alternatives><tex-math id="M1125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta (q_{i-1}, w_i)=q_i$$\end{document}</tex-math><mml:math id="M1126"><mml:mrow><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq521.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq522"><alternatives><tex-math id="M1127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i\in [1,n]$$\end{document}</tex-math><mml:math id="M1128"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq522.gif"/></alternatives></inline-formula>.</p>
        <p>By modeling a DFA as a network model, we can use Infrared to sample accepted words. We consider two types of variables, one for the word <inline-formula id="IEq523"><alternatives><tex-math id="M1129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1130"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq523.gif"/></alternatives></inline-formula> and the other for the state sequence <inline-formula id="IEq524"><alternatives><tex-math id="M1131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q$$\end{document}</tex-math><mml:math id="M1132"><mml:mi>q</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq524.gif"/></alternatives></inline-formula>. Given a DFA, the accepted word sampling problem is formalized by the feature network <inline-formula id="IEq525"><alternatives><tex-math id="M1133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} _{\text {DFA}}$$\end{document}</tex-math><mml:math id="M1134"><mml:msub><mml:mi mathvariant="script">N</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq525.gif"/></alternatives></inline-formula> as follows:<list list-type="bullet"><list-item><p id="Par203"><inline-formula id="IEq526"><alternatives><tex-math id="M1135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {X} _\text {DFA}=\{X_1,\ldots ,X_n\}\cup \{Y_0,\ldots ,Y_n\}$$\end{document}</tex-math><mml:math id="M1136"><mml:mrow><mml:msub><mml:mi mathvariant="script">X</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>∪</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq526.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par204"><inline-formula id="IEq527"><alternatives><tex-math id="M1137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {D} _\text {DFA}=\Sigma ^n \times \{q_0\} \times \mathcal {Q}^{n-1}\times \mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1138"><mml:mrow><mml:msub><mml:mi mathvariant="script">D</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mi mathvariant="normal">Σ</mml:mi><mml:mi>n</mml:mi></mml:msup><mml:mo>×</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>×</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo>×</mml:mo><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq527.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par205"><inline-formula id="IEq528"><alternatives><tex-math id="M1139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {C} _\text {DFA}=\{{\text {\textsf{Transition}}}_{[X_i,Y_{i-1},Y_i]} \mid i\in [1,n]\}$$\end{document}</tex-math><mml:math id="M1140"><mml:mrow><mml:msub><mml:mi mathvariant="script">C</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mtext mathvariant="sans-serif">Transition</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>∣</mml:mo><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq528.gif"/></alternatives></inline-formula>;</p></list-item><list-item><p id="Par206"><inline-formula id="IEq529"><alternatives><tex-math id="M1141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {F} _\text {DFA}=\{\}$$\end{document}</tex-math><mml:math id="M1142"><mml:mrow><mml:msub><mml:mi mathvariant="script">F</mml:mi><mml:mtext>DFA</mml:mtext></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq529.gif"/></alternatives></inline-formula>.</p></list-item></list>The constraint <inline-formula id="IEq530"><alternatives><tex-math id="M1143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text {\textsf{Transition}}}_{[X_i, Y_{i-1}, Y_i]}:(x_i,y_{i-1},y_i)\mapsto (y_i=\delta (y_{i-1},x_i))$$\end{document}</tex-math><mml:math id="M1144"><mml:mrow><mml:msub><mml:mtext mathvariant="sans-serif">Transition</mml:mtext><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>↦</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>δ</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq530.gif"/></alternatives></inline-formula> encodes the DFA transition function. This ensures that, in each sampled assignment, <inline-formula id="IEq531"><alternatives><tex-math id="M1145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$y_0\ldots y_n$$\end{document}</tex-math><mml:math id="M1146"><mml:mrow><mml:msub><mml:mi>y</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq531.gif"/></alternatives></inline-formula> is the state sequence of the word <inline-formula id="IEq532"><alternatives><tex-math id="M1147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1\ldots x_n$$\end{document}</tex-math><mml:math id="M1148"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>…</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq532.gif"/></alternatives></inline-formula>, which is accepted by DFA as the domain of <inline-formula id="IEq533"><alternatives><tex-math id="M1149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_n$$\end{document}</tex-math><mml:math id="M1150"><mml:msub><mml:mi>Y</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq533.gif"/></alternatives></inline-formula> is the set of final states <inline-formula id="IEq534"><alternatives><tex-math id="M1151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {Q}_F$$\end{document}</tex-math><mml:math id="M1152"><mml:msub><mml:mi mathvariant="script">Q</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq534.gif"/></alternatives></inline-formula>.</p>
        <p><bold><italic>Complexity</italic></bold> Again, we collapse the variables <inline-formula id="IEq535"><alternatives><tex-math id="M1153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M1154"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq535.gif"/></alternatives></inline-formula> and <inline-formula id="IEq536"><alternatives><tex-math id="M1155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y_i$$\end{document}</tex-math><mml:math id="M1156"><mml:msub><mml:mi>Y</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq536.gif"/></alternatives></inline-formula> for the same <italic>i</italic> in the dependency graph; let <inline-formula id="IEq537"><alternatives><tex-math id="M1157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w$$\end{document}</tex-math><mml:math id="M1158"><mml:mi>w</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq537.gif"/></alternatives></inline-formula> be the treewidth of the collapsed graph. We obtain time complexity <inline-formula id="IEq538"><alternatives><tex-math id="M1159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(4^{w +1}|\mathcal {Q}|^{w +1} n)$$\end{document}</tex-math><mml:math id="M1160"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">Q</mml:mi><mml:msup><mml:mo stretchy="false">|</mml:mo><mml:mrow><mml:mi>w</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq538.gif"/></alternatives></inline-formula> by Cor. <xref ref-type="sec" rid="FPar27">1</xref>, where <inline-formula id="IEq539"><alternatives><tex-math id="M1161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w =1$$\end{document}</tex-math><mml:math id="M1162"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq539.gif"/></alternatives></inline-formula> for the pure automaton model (without extensions).</p>
        <p>When forbidding/enforcing motifs in other design settings, e.g. single or multitarget RNA design, the treewidth typically increases since the automaton model causes dependencies between variables of consecutive positions <italic>i</italic> and <inline-formula id="IEq540"><alternatives><tex-math id="M1163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i+1$$\end{document}</tex-math><mml:math id="M1164"><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq540.gif"/></alternatives></inline-formula>, while e.g. RNA design defines dependencies between nonconsecutive positions <italic>i</italic> and <italic>j</italic> for each target base pair (<italic>i</italic>, <italic>j</italic>). Based on this analysis, we achieve efficiency equivalent to that of the hand-crafted algorithm [<xref ref-type="bibr" rid="CR46">46</xref>]. Since the domain size depends on the input size, specifically the number of states, this is another example of solving by Infrared in <bold>XP</bold> (Sec. “Parameterized complexity classes”).</p>
        <p>The complexity due to the automaton should be compared to simpler ideas to enforce/forbid motifs of maximum size <italic>k</italic>. More naively, one could introduce such requirements by <italic>k</italic>-ary constraints on each run of <italic>k</italic> consecutive variables <inline-formula id="IEq541"><alternatives><tex-math id="M1165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_{i},\dots ,X_{i+k-1}$$\end{document}</tex-math><mml:math id="M1166"><mml:mrow><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq541.gif"/></alternatives></inline-formula> (for all <inline-formula id="IEq542"><alternatives><tex-math id="M1167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le n-k+1$$\end{document}</tex-math><mml:math id="M1168"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>n</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq542.gif"/></alternatives></inline-formula>). This idea results in <inline-formula id="IEq543"><alternatives><tex-math id="M1169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(4^k n)$$\end{document}</tex-math><mml:math id="M1170"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mn>4</mml:mn><mml:mi>k</mml:mi></mml:msup><mml:mi>n</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq543.gif"/></alternatives></inline-formula> without additional constraints. Automata thus offer a favorable trade-off between domain size and treewidth/exponent (as advocated in [<xref ref-type="bibr" rid="CR46">46</xref>]). Infrared supports adapting the strategy to the concrete problem.</p>
      </sec>
    </sec>
    <sec id="Sec23">
      <title>Multidimensional Boltzmann sampling</title>
      <p id="Par210">
        <fig id="Fig9">
          <label>Fig. 9</label>
          <caption>
            <p>Multidimensional Boltzmann sampling applied to RNA design. For the example of Fig. <xref rid="Fig5" ref-type="fig">5</xref>, we target G C content 85% and respective energies E1=-40, E2=-40, E3=-30 for the target structures (with tolerances of 5% GC content and 0.5 kcal/mol energy). Infrared ’s multidimensional Boltzmann sampling (MDBS) strategy starts from uniform sampling (weights 0 for every feature). It iteratively generates Boltzmann samples and updates the weights to move the (estimated) expectation closer to the targets. A Accepted samples as well as root mean square distance (RMSD) to the targets during this procedure, which considered over 70,000 total samples to generate 100 targeted samples. B Kernel density estimate plots: distributions of features for uniform sampling (blue) and sampling at the end of the MDBS run (red), where distributions are shifted to the targets (dashed red lines)</p>
          </caption>
          <graphic xlink:href="13015_2024_258_Fig9_HTML" id="MO17"/>
        </fig>
      </p>
      <p id="Par211">
        <fig position="anchor" id="Figi">
          <label>Algorithm 4</label>
          <caption>
            <p>Multidim. Boltzmann sampling</p>
          </caption>
          <graphic position="anchor" xlink:href="13015_2024_258_Figi_HTML" id="MO18"/>
        </fig>
      </p>
      <p id="Par212">Recall that Section “RNA design” demonstrated random generation of solutions by sampling from the Boltzmann distribution defined by multiple features and weights. The histograms from Fig. <xref rid="Fig5" ref-type="fig">5</xref> show the feature distributions resulting from large negative weights for all features in a multitarget RNA design example. In the example, this allows us to produce designs with low target structure energies and G C content.</p>
      <p id="Par213">Substantially extending the level of control, Infrared supports the random generation of objects with narrowly defined target feature values based on multidimensional Boltzmann sampling (MDBS) [<xref ref-type="bibr" rid="CR15">15</xref>]. This technique was successfully demonstrated before in RNA design: generating sequences with defined dinucleotide frequencies [<xref ref-type="bibr" rid="CR47">47</xref>], targeting G C content in single target RNA design by IncaRNAtion [<xref ref-type="bibr" rid="CR48">48</xref>] and generating RNA designs with specific energies of multiple structures and specific G C content by RNARedprint [<xref ref-type="bibr" rid="CR16">16</xref>].</p>
      <p id="Par214"><italic>Problem statement</italic> Concretely, given a network <inline-formula id="IEq544"><alternatives><tex-math id="M1171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {N} =(\mathcal {X},\mathcal {D},\mathcal {C},\mathcal {F})$$\end{document}</tex-math><mml:math id="M1172"><mml:mrow><mml:mi mathvariant="script">N</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">X</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">D</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="script">F</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq544.gif"/></alternatives></inline-formula>, we look at the problem of randomly generating valid assignments <italic>x</italic> that satisfy constraints<disp-formula id="Equ43"><alternatives><tex-math id="M1173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} |F(x)-\tau _F| \le \delta _F, \end{aligned}$$\end{document}</tex-math><mml:math id="M1174" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>F</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo></mml:mrow><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>≤</mml:mo></mml:mrow><mml:msub><mml:mi>δ</mml:mi><mml:mi>F</mml:mi></mml:msub><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13015_2024_258_Article_Equ43.gif" position="anchor"/></alternatives></disp-formula>for given target values <inline-formula id="IEq545"><alternatives><tex-math id="M1175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau _F$$\end{document}</tex-math><mml:math id="M1176"><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq545.gif"/></alternatives></inline-formula> and tolerances <inline-formula id="IEq546"><alternatives><tex-math id="M1177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\delta _F$$\end{document}</tex-math><mml:math id="M1178"><mml:msub><mml:mi>δ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq546.gif"/></alternatives></inline-formula> for all (or a subset) of the features <inline-formula id="IEq547"><alternatives><tex-math id="M1179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$F\in \mathcal {F}$$\end{document}</tex-math><mml:math id="M1180"><mml:mrow><mml:mi>F</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">F</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq547.gif"/></alternatives></inline-formula>. Let us call such assignments <inline-formula id="IEq548"><alternatives><tex-math id="M1181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1182"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq548.gif"/></alternatives></inline-formula>
<bold>-admissible</bold>.</p>
      <p id="Par215"><italic>MDBS strategy and algorithm</italic> As shown in [<xref ref-type="bibr" rid="CR15">15</xref>] the problem can be solved effectively, under certain assumption even with provable efficiency, by MDBS. This strategy combines rejection sampling, which accepts only <inline-formula id="IEq549"><alternatives><tex-math id="M1183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1184"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq549.gif"/></alternatives></inline-formula>-admissible samples, with a learning strategy to maximize its efficiency.</p>
      <p id="Par216">Here, we observe that rejection sampling is most effective, when the targeted values <inline-formula id="IEq550"><alternatives><tex-math id="M1185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tau _F$$\end{document}</tex-math><mml:math id="M1186"><mml:msub><mml:mi>τ</mml:mi><mml:mi>F</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq550.gif"/></alternatives></inline-formula> coincide with the means of the sampled distributions; moreover, these means depend on the feature weights <inline-formula id="IEq551"><alternatives><tex-math id="M1187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1188"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq551.gif"/></alternatives></inline-formula>.</p>
      <p id="Par217">Therefore, Infrared ’s MDBS algorithm (Algorithm 4), starting from initial weights <inline-formula id="IEq552"><alternatives><tex-math id="M1189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1190"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq552.gif"/></alternatives></inline-formula> (by default, <inline-formula id="IEq553"><alternatives><tex-math id="M1191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha =\textbf{0}$$\end{document}</tex-math><mml:math id="M1192"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn mathvariant="bold">0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq553.gif"/></alternatives></inline-formula>), iteratively generates <italic>k</italic>-many samples per round. In every iteration, it tweaks the weights <inline-formula id="IEq554"><alternatives><tex-math id="M1193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M1194"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq554.gif"/></alternatives></inline-formula> aiming to shift the sampling means closer to the targets; the update step-size is controlled by the tweaking factor <inline-formula id="IEq555"><alternatives><tex-math id="M1195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma$$\end{document}</tex-math><mml:math id="M1196"><mml:mi>γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq555.gif"/></alternatives></inline-formula>. The procedure is repeated until <italic>K</italic>-many <inline-formula id="IEq556"><alternatives><tex-math id="M1197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\tau ,\delta )$$\end{document}</tex-math><mml:math id="M1198"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>τ</mml:mi><mml:mo>,</mml:mo><mml:mi>δ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq556.gif"/></alternatives></inline-formula>-admissible samples are generated. To stabilize this heuristic strategy, Infrared additionally implements an annealing scheme based on improvement of the root mean square deviation (RMSD) to the targets and controlled by the cooling factor <inline-formula id="IEq557"><alternatives><tex-math id="M1199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Gamma$$\end{document}</tex-math><mml:math id="M1200"><mml:mi mathvariant="normal">Γ</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq557.gif"/></alternatives></inline-formula>.</p>
      <p id="Par218"><italic>MDBS for RNA design</italic> Fig. <xref rid="Fig9" ref-type="fig">9</xref> illustrates this MDBS strategy for the example of Fig. <xref rid="Fig5" ref-type="fig">5</xref> and specific energy and G C content targets. Showing typical behavior, the strategy improves the RMSD while generating admissible and nonadmissible samples. In this way, it increases the efficiency of generating admissible assignments (Fig. <xref rid="Fig9" ref-type="fig">9</xref>A). Figure <xref rid="Fig9" ref-type="fig">9</xref>B shows how MDBS shifts the multivariate distribution toward the targets (here starting from uniform sampling).</p>
      <p id="Par219"><italic>Targeting by proxy</italic> The multitarget design example showcases an interesting extension of the standard MDBS mechanism. Namely, in this case, we distinguish base pair energy from Turner energy. To target the latter, we use base pair energies as proxies, since they allow much more efficient sampling (and are sufficiently correlated to Turner energies; compare [<xref ref-type="bibr" rid="CR16">16</xref>]). To shift the distributions during the MDBS algorithm, we thus estimate the means of the <italic>Turner energies</italic>; then, based on their difference from the target Turner energies, we update the weights of the corresponding <italic>base pair energy</italic> feature. Our Infrared implementation supports ‘targeting by proxy’ in a generalized way (using a second kind of feature <italic>F</italic> whose evaluations <italic>F</italic>(<italic>x</italic>) are defined explicitly, instead of being induced by their network functions).</p>
      <p id="Par220"><italic>Available code examples</italic> In supplemental online material (Jupyter notebooks), we show the code to produce the samples and plots for Fig. <xref rid="Fig9" ref-type="fig">9</xref>; as a further example, we demonstrate effective random sequence generation targeting all 16 dinucleotide frequencies of a SAM riboswitch (RF00162; from <italic>S. thermophilum</italic>), while maintaining compatibility with its pseudoknotted RNA structure.</p>
    </sec>
  </sec>
  <sec id="Sec24">
    <title>Implementation</title>
    <p id="Par221">
      <fig id="Fig10">
        <label>Fig. 10</label>
        <caption>
          <p>Overview of the Infrared architecture. The C++ <bold>core engine</bold> is connected to a high-end <bold>modeling layer</bold> in Python by a hybrid <bold>connecting layer</bold>. The C++ core implements the computational engine to evaluate forward and traceback algorithms on cluster trees as generic code (e.g. supporting different algebras as evaluation policies; PF for partition function, Arctic for maximization). This optimized low-level layer is exposed to Python using pybind11; the core functionality is moreover extended (by tree decomposition, using module treedecomp, population of the cluster tree...) on the Python side to implement the full computational engine. Finally, the high-level modeling interface of Infrared offers functionality to model and solve feature networks, perform sampling targeting specific features (multidimensional Boltzmann sampling), define custom constrain and function types. Moreover, we include the module rna for RNA-specific functionality</p>
        </caption>
        <graphic xlink:href="13015_2024_258_Fig10_HTML" id="MO19"/>
      </fig>
    </p>
    <p id="Par222">The Infrared software supports declarative modeling of problems as feature networks and treewidth-dependent efficient solving through a high-level Python interface. Figure <xref rid="Fig10" ref-type="fig">10</xref> sketches its architecture. For solving, the software relies on optimized implementations of the presented algorithms in C++. The low-level C++ engine is glued to a high-level ‘modeling’ layer by a pybind11-based C++/Python interface. Thus, Infrared maintains a small algorithmic core in C++ (for high performance), while extending functionality in Python (for increased flexibility). For example, the C++ <bold>core engine</bold> solves cluster trees and focuses on <italic>necessary</italic> functionality, while the construction of the cluster tree from a model, as well as “high-level” functionality such as the declarative composition of models, are implemented in Python.</p>
    <p id="Par223">The C++ code is templated to generically support different function types and evaluation algebras, which keeps the code compact and maintainable; moreover it prepares future extensions of the system. For fast processing of bags, the core engine relies on fast backtracking enumeration of partial assignments (class AssignmentIterator), where constraints and functions are evaluated as early as possible (to avoid unnecessary and redundant computation). Bag processing evaluates constraints (<inline-formula id="IEq558"><alternatives><tex-math id="M1201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {Function&lt;bool&gt;}$$\end{document}</tex-math><mml:math id="M1202"><mml:mrow><mml:mi mathvariant="monospace">Function</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">bool</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq558.gif"/></alternatives></inline-formula>) and functions (<inline-formula id="IEq559"><alternatives><tex-math id="M1203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {Function&lt;double&gt;}$$\end{document}</tex-math><mml:math id="M1204"><mml:mrow><mml:mi mathvariant="monospace">Function</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">double</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq559.gif"/></alternatives></inline-formula>) and, in the forward phase, computes messages, stored in memory as objects of <inline-formula id="IEq560"><alternatives><tex-math id="M1205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\texttt {MaterializedFunction&lt;double&gt;}$$\end{document}</tex-math><mml:math id="M1206"><mml:mrow><mml:mi mathvariant="monospace">MaterializedFunction</mml:mi><mml:mo>&lt;</mml:mo><mml:mi mathvariant="monospace">double</mml:mi><mml:mo>&gt;</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq560.gif"/></alternatives></inline-formula>.</p>
    <p id="Par224">For completion of the Infrared solver, the <bold>connecting layer</bold> exposes the C++ functionality to Python, specializing the templates to optimization (arctic policy) and partition function over real-valued features. Moreover, it extends the core by Python wrapper classes that ‘know’ how to construct cluster trees from feature networks. To prepare the definition of function and constraint classes, it wraps the Boolean and real-valued C++ function classes. Generating tree decompositions is delegated to the module treedecomp. While we provide interfaces to different external tree decomposers and support customization, the implemented default strategy applies a randomized min-fill-in heuristic [<xref ref-type="bibr" rid="CR13">13</xref>] and returns a tree decomposition with heuristically minimized tree width.</p>
    <p id="Par225">Finally, the <bold>modeling interface</bold> layer enables a declarative style of defining feature networks as objects of the class Model through Python code. Adding variables, constraints, and functions supports naturally specifying, but also extending and merging feature networks. From models one can construct solvers to perform different tasks, including optimization, Boltzmann sampling at specified feature weights or targeted sampling; the latter relies on a multidimensional Boltzmann strategy that learns weights to effectively target specific feature values.</p>
    <p id="Par226"><italic>Definition of application-specific constraints and functions</italic> Infrared supports the definition of constraints and functions in Python by special concise syntax via the respective functions def_constraint_class and def_function_class. Examples of their use were given before for defining the constraint NotEquals and network function Card for the introductory graph coloring model. To create Python classes of constraints or network functions, the user calls these functions with the class name and two Python functions. The first function (init) has two roles. It defines the arguments of the constructor and returns the scope (or dependency list) of the constraint or function. The second function (value) defines how the constraint/function is evaluated at specific values of the dependency variables. Using arguments of the same name, information can be passed from initialization to evaluation; e.g. this enables constraint/function type arguments or auxiliary data structures. For clear semantics (while allowing optimizations), we require referential transparency, i.e. the result of the value function must not vary with anything but its arguments.</p>
    <p id="Par227"><italic>Precomputation</italic> The core engine precomputes constraints and network functions when they are added to the cluster tree. For this purpose, they are evaluated for all partial assignments and the results are tabulated (MaterializedFunction). This simple mechanism supports the convenient specification of constraints and functions in Python, while resulting in fast computation times in practice (by significantly reducing the overhead due to the Python computation). From a theoretical perspective, this mechanism preserves the worst case time complexity, since <italic>k</italic>-ary constraints and functions impose a bound on the treewitdh <inline-formula id="IEq561"><alternatives><tex-math id="M1207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w \ge k-1$$\end{document}</tex-math><mml:math id="M1208"><mml:mrow><mml:mi>w</mml:mi><mml:mo>≥</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq561.gif"/></alternatives></inline-formula>. The strategy requires additional space in <inline-formula id="IEq562"><alternatives><tex-math id="M1209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {O}(d ^k\mathfrak {m})$$\end{document}</tex-math><mml:math id="M1210"><mml:mrow><mml:mi mathvariant="script">O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>d</mml:mi><mml:mi>k</mml:mi></mml:msup><mml:mi mathvariant="fraktur">m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq562.gif"/></alternatives></inline-formula>, for maximum domain size <inline-formula id="IEq563"><alternatives><tex-math id="M1211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d$$\end{document}</tex-math><mml:math id="M1212"><mml:mi>d</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq563.gif"/></alternatives></inline-formula> and <inline-formula id="IEq564"><alternatives><tex-math id="M1213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathfrak {m}$$\end{document}</tex-math><mml:math id="M1214"><mml:mi mathvariant="fraktur">m</mml:mi></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq564.gif"/></alternatives></inline-formula> constraints and functions. Space and time consumption due to the precomputation are thus dominated by the solving complexity if <inline-formula id="IEq565"><alternatives><tex-math id="M1215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w &gt; k-1$$\end{document}</tex-math><mml:math id="M1216"><mml:mrow><mml:mi>w</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13015_2024_258_Article_IEq565.gif"/></alternatives></inline-formula>. In this way, the strategy is optimized for the typical performance-critical cases. Future implementations can speed up the precomputation by possibly lazy caching mechanisms without changing semantics and the interface.</p>
  </sec>
  <sec id="Sec25">
    <title>Discussion</title>
    <p id="Par228">The Infrared framework was motivated by the success of related technology in solving complex bioinformatics problems; most directly, by our work on multitarget RNA design [<xref ref-type="bibr" rid="CR16">16</xref>]. Thus, the system started out as a library that generalized the fixed-parameter tractable (FPT) sampling algorithm of RNARedprint and its multidimensional Boltzmann sampling strategy. Since then it has been developed into a broadly applicable framework, supporting convenient declarative modeling of problems with multiple features, where models can be solved by a generic treewidth-based algorithm using different algebras. This text was written to supply the reader with a comprehensive discussion of the techniques combined in the Infrared system. In contrast, our book chapter [<xref ref-type="bibr" rid="CR28">28</xref>] focused on coding of design problems in Infrared and did not in-depth discuss Infrared’s methods in favor of an application-oriented introduction. Furthermore, note that we published a book chapter on the first version of RNARedprint [<xref ref-type="bibr" rid="CR49">49</xref>], which did not make use of the Infrared system.</p>
    <p id="Par229">Since the system’s first application for concisely reimplementing RNARedprint with improved functionality and performance, it has proven to be a very useful tool for further algorithmic developments in bioinformatics [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR19">19</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. Other previous work [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR20">20</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR48">48</xref>] could have directly profited from the Infrared framework. For several previous algorithms [<xref ref-type="bibr" rid="CR3">3</xref>, <xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR48">48</xref>], we presented feature network models and discussed their solving complexity. For these examples, the system yields essentially identical algorithms; with the exception of alignment, where Infrared lacks a problem-specific optimization (Secs. “Sequence alignment” and “From sequence alignment to pseudoknot sequence-structure alignment”), which we plan to add in the future. From the well-researched field of network parsimony, we present further examples where the Infrared ’s solving complexity is on par with state-of-the-art algorithms [<xref ref-type="bibr" rid="CR5">5</xref>] (even improving softwired parsimony on binary networks).</p>
    <p id="Par230"><italic>Utiltity for prototyping and practical applications</italic> In summary, these previous works witness the suitability of Infrared for prototyping novel algorithmic ideas; moreover, their benchmark results show the practical utility of the system to solve relevant problem instances. Of particular interest, we show that—for many practically relevant problem instances—the treewidth is sufficiently low to enable effective solving by Infrared.</p>
    <p id="Par231">In addition, we wanted to learn about Infrared ’s practical performance in relation to optimized problem-specific code in a high-performance computing language (Fig. <xref rid="Fig11" ref-type="fig">11</xref>A). Taking a unique opportunity, we compared our original C++ implementation of multitarget design [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR49">49</xref>], RNARedprint  v1, to our Infrared-based reimplementation RNARedprint  v2. We chose the benchmark set “RNAfold”, e.g. used in [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR51">51</xref>], comprising 400 design instances of 3–6 structures, which were generated to pose ambitious challenges with treewidths up to 16. This experiment was performed on an Intel Core i7-4770 CPU with 32 GB memory.</p>
    <p id="Par232">Moreover, we studied the practical applicability of treewidth-based network parsimony algorithms (Sec. “Network parsimony”) on a set of nonartificial phylogenetic networks [<xref ref-type="bibr" rid="CR52">52</xref>] compiled from the literature (see <ext-link ext-link-type="uri" xlink:href="https://phylnet.univ-mlv.fr/recophync/networkDraw.php">https://phylnet.univ-mlv.fr/recophync/networkDraw.php</ext-link>). This data set is typically used as a reference set for the comparison and evaluation of various algorithms on phylogenetic networks. For our purposes, we determined the treewidths of the networks in dependency on their size and the number of reticulation nodes (Fig. <xref rid="Fig11" ref-type="fig">11</xref>B). Here treewidth directly provides information about the solving efficiency of hardwired and softwired parsimony problems (Sec. “Network parsimony”). The low to moderate treewidths on these instances hint at permissible performance in many real-word scenarios.<fig id="Fig11"><label>Fig. 11</label><caption><p><bold>A</bold> Benchmark comparison of the Infrared-based RNARedPrint v2 to the original C++ implementation “v1”. Time is measured as user time; space, as maximum resident set size (RSS). We run the tools on the RNAfold benchmark set [<xref ref-type="bibr" rid="CR16">16</xref>]. We let both tools generate 1000 samples at fixed weights; note that time and space are strongly dominated by the precomputation phase. To directly compare the implementations of the core algorithms, we run both tools on identical tree decompositions, although Infrared ’s default tree decomposer improves for several instances (including the most expensive one). One observes that the RNARedPrint v2 improves in space and time over the original implementation. Only for very short runtimes, at low treewidth, the C++ implementation has a slight edge, presumably due to less overhead. Both implementation show almost no noticable space increase at low tree widths; however the space requirements of the original implementation increase dramatically for treewidths larger than 10. Due to its extreme space requirement, we didn’t solve the single instance of treewidth 16 with RNARedPrint v1; in other cases, it failed due to a bug. For those instances, we indicate only the performance of version 2 (red crosses). <bold>B</bold> We used Infrared to compute the treewidths for a set of various phylogenetic networks that were collected from recent studies [<xref ref-type="bibr" rid="CR52">52</xref>]. Using the Infrared network parsimony model, we count the number of reticulation nodes in the networks and calculate their treewidth. It can be seen that the treewidth rather correlates with the number of reticulation nodes than with network size (number of nodes and edges). Our study on ’real-world’ phylogenetic networks suggests that treewidths are often low in practice; consequently Infrared can effectively compute network parsimony by solving the presented models</p></caption><graphic xlink:href="13015_2024_258_Fig11_HTML" id="MO20"/></fig></p>
    <p id="Par233"><italic>Characteristics and application range</italic> By modeling a series of concrete bioinformatics problems, we showed that Infrared is broadly applicable, going well beyond the selected examples. As discussed before, this extends to applicability <italic>in practice</italic>, where Infrared can efficiently solve relevant instances of expressible problems. Although feature networks are virtually universal, such that they do not limit the system’s expressivity, Infrared ’s solver relies on a very specific mechanism, where efficiency strictly depends on the treewidth of the problem instance. Arguably, this is a prerequisite for the very characteristic properties of the framework. In contrast to heuristic methods, our tree decomposition-based solving strategy leads to predictable worst-case complexity guarantees for exact optimization <italic>and</italic> sampling. Notably, exact controlled sampling rules out many heuristic pruning-type solving strategies, since it requires exact computation of partition functions.</p>
    <p id="Par234">Nevertheless, the dependency on treewidth necessarily limits the <italic>practically solvable</italic> problems and instances. In practice, such problems (explicitly or implicitly) have some graph structure. Examples are graph coloring or multitarget RNA design, which both are NP hard, but efficiently solvable for specific instances, whose graphs are sufficiently close to trees.</p>
    <p id="Par235">Infrared was designed to handle such tree decomposable problems (and their low-treewidth instances) well, but its general solving mechanism offers the flexibility to go beyond. For example, the framework supports strategies that limit the treewidth of considered instances (e.g. we controlled the maximum treewidth in our negative design approach RNAPOND [<xref ref-type="bibr" rid="CR17">17</xref>]) or reduce the treewidth in controlled ways (e.g. TreeDiet [<xref ref-type="bibr" rid="CR18">18</xref>]). For this class of problems, we identify potential for future improvements of the Infrared solver, which could allow instances to be solved significantly faster or with better complexity. For example, we discussed the complexity of alignment; additionally, consistency-based methods can yield significant improvements over the current evaluation strategy by cluster tree elimination.</p>
    <p id="Par236"><italic>Delimitation</italic> The system is, however, not designed and is even unsuitable for problems that cannot be modeled as a decomposable feature network. This comprises many constraint satisfaction (CSP) or constraint optimization problems (COP) that would typically be solved by general constraint solvers (e.g. the constraint programming system Gecode [<xref ref-type="bibr" rid="CR26">26</xref>]), SAT solving (e.g. MiniSAT [<xref ref-type="bibr" rid="CR53">53</xref>]), or solving of integer linear programs (e.g. CPLEX [<xref ref-type="bibr" rid="CR54">54</xref>]). In many classical CSP examples (e.g. n-Queens, Sudoku), models induce a complete (or almost complete) dependency graph. Here, Infrared does not implement strategies to heuristically cope with the exponential worst case complexity (e.g. constraint propagation or branch and bound); its solving strategy would therefore be essentially brute force. Obviously Infrared is thus not a general solver for CSP/COP, even if its declarative modeling paradigm and interface remind of such systems.</p>
    <p id="Par237">While Infrared proposes a novel form of automated solving of declarative problem specifications by dynamic programming (DP), bioinformatics already has a long tradition of combining declarative methods and dynamic programming in the form of Algebraic Dynamic Programming (ADP) [<xref ref-type="bibr" rid="CR55">55</xref>].</p>
    <p id="Par238">Despite the common DP backdrop, Infrared and ADP pursue different, even orthogonal goals: instead of deriving a DP algorithm from a declarative problem description, ADP implementations such as GAPC [<xref ref-type="bibr" rid="CR56">56</xref>] or ADPFusion [<xref ref-type="bibr" rid="CR57">57</xref>, <xref ref-type="bibr" rid="CR58">58</xref>] aim to support the implementation of DP algorithms through algebraic abstraction.</p>
  </sec>
  <sec id="Sec26">
    <title>Conclusions</title>
    <p id="Par239">We presented a framework for rapidly developing applications that make use of efficient exact optimization and sampling techniques by declaratively specifying problems in Python. As such, the framework provides flexible access to recent advanced algorithmic techniques—while specifying problems resembles common constraint modeling systems.</p>
    <p id="Par240">The system allows modeling problems as feature networks, which we introduced as a form of weighted constrained networks that support several features. The main advantages and characteristics of the framework stem from combining expressive modeling with automated combinatorial solving strategies that support exact optimization and weighted sampling. In particular, exact sampling, which requires complete combinatorial algorithms, can be used in innovative ways. For example, it allows generating decoys and background models in complex settings or targeting multiple features in its extension to multidimensional Boltzmann sampling.</p>
    <p id="Par241">As elaborated, these tasks are performed by generic solving algorithms based on tree decompositions of the models. Being parameterized by the treewidth, this strategy profits from the often moderately low treewidth of many typical problems in bioinformatics.</p>
    <p id="Par242">We underline the broad range of possible applications, by our discussion of diverse application examples and their implementation (online documentation). Demonstrating the concise reimplementation of previous bioinformatics methods, these applications serve as reference coding examples and also show the practical relevance of the framework.</p>
    <p id="Par243">Crucially, the system makes such methods accessible through a declarative interface in Python. Since this strongly facilitates their flexible use, the system promotes future applications of these techniques. Increasing flexibility, the system supports extension and refinement of existing models as well as their composition, e.g. sequence design targeting structure RNA <italic>and</italic> forbidding specific sequence motifs.</p>
    <p id="Par244"><italic>Future work</italic> We plan to further optimize the Infrared solver due to consistency methods and/or forward checking (in single bag processing). In specific cases, such techniques even improve complexity bounds over the currently implemented CTE-like evaluation mechanism. Moreover, we want to adapt the linear-factor speedup over standard evaluation for alignment problems (LicoRNA)—generalizations of this technique pose interesting research questions. As another path of optimization, we will implement improved tree decomposition adapted to our solver.</p>
    <p id="Par245">Furthermore, the architecture of the framework enables additional solvers; for example, such solvers can compute Pareto-optima or perform nonredundant sampling [<xref ref-type="bibr" rid="CR59">59</xref>] based on feature network models. Moreover, it will be interesting to explore the use of further evaluation algebras, which can be used with the generic evaluation algorithms of Infrared ’s C++ core engine.</p>
    <p id="Par246">Finally, the system highlights benefits due to tree decomposition of problems that enable general solving by efficient combinatorial methods. While such methods can be tedious to implement from scratch, we demonstrated their use through a declarative modeling interface. In future work, we envision developing and making related methods accessible in a similar way. One exciting line would extend our work on tree decomposition-based automatic generation of dynamic programming schemes [<xref ref-type="bibr" rid="CR19">19</xref>].
</p>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec27">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13015_2024_258_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1. Correctness proofs</bold>. The file contains proofs of Propositions 1, 2 and 3, which establish the correctness of the optimization and sampling algorithms.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par249"><ext-link ext-link-type="uri" xlink:href="https://gitlab.inria.fr/amibio/RNARedPrint">https://gitlab.inria.fr/amibio/RNARedPrint</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>HTY and SW mainly wrote the methods and application examples; SW wrote the introduction, discussion and conclusion. SW implemented the Infrared framework and the accompanying application examples. HTY contributed crucially to software deployment and documentation and computed results. SJB wrote the network parsimony section and computed results. BM wrote the discussion of theoretical complexities and background on tree decompositions and parameterized complexity. YP and SW initiated the Infrared project. YP made indispensable contributions across the manuscript, improved the presentation and contributed details of multidimensional Boltzmann sampling. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open access funding provided by University of Vienna. This work is supported by the French national research agency ANR: grant ANR-21-CE45-0034-01 “INSSANE”, as well as the Austrian Science Fund (FWF), grant no. I 4520. This project has received funding from the European Union’s Horizon 2020 research and innovation programme under the Marie Sklodowska-Curie grant agreement No 10102967.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar36" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par247">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wachsmuth</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Domin</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lorenz</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Serfling</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Mörl</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Design criteria for synthetic riboswitches acting on transcription</article-title>
        <source>RNA Biol</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>221</fpage>
        <lpage>231</lpage>
        <pub-id pub-id-type="doi">10.1080/15476286.2015.1017235</pub-id>
        <?supplied-pmid 25826571?>
        <pub-id pub-id-type="pmid">25826571</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Andreasson</surname>
            <given-names>JOL</given-names>
          </name>
          <name>
            <surname>Kladwang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Greenleaf</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Automated design of diverse stand-alone riboswitches</article-title>
        <source>ACS Synth Biol</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>8</issue>
        <fpage>1838</fpage>
        <lpage>1846</lpage>
        <pub-id pub-id-type="doi">10.1021/acssynbio.9b00142</pub-id>
        <?supplied-pmid 31298841?>
        <pub-id pub-id-type="pmid">31298841</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rinaudo</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Barth</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Tree decomposition and parameterized algorithms for RNA structure-sequence alignment including tertiary interactions and pseudoknots</article-title>
        <source>Algorithms Bioinform</source>
        <year>2012</year>
        <pub-id pub-id-type="doi">10.1007/978-3-642-33122-0_12</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jabbari</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wark</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Montemagno</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Knotty: efficient and accurate prediction of complex RNA pseudoknot structures</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>22</issue>
        <fpage>3849</fpage>
        <lpage>3856</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty420</pub-id>
        <?supplied-pmid 29868872?>
        <pub-id pub-id-type="pmid">29868872</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Scornavacca</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Weller</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Treewidth-based algorithms for the small parsimony problem on networks</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2022</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>15</fpage>
        <pub-id pub-id-type="doi">10.1186/s13015-022-00216-w</pub-id>
        <?supplied-pmid 35987645?>
        <pub-id pub-id-type="pmid">35987645</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Katoch</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Chauhan</surname>
            <given-names>SS</given-names>
          </name>
          <name>
            <surname>Kumar</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>A review on genetic algorithm: past, present, and future</article-title>
        <source>Multimed Tools Appl</source>
        <year>2021</year>
        <volume>80</volume>
        <issue>5</issue>
        <fpage>8091</fpage>
        <lpage>8126</lpage>
        <pub-id pub-id-type="doi">10.1007/s11042-020-10139-6</pub-id>
        <?supplied-pmid 33162782?>
        <pub-id pub-id-type="pmid">33162782</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miklós</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Paige</surname>
            <given-names>TB</given-names>
          </name>
          <name>
            <surname>Ligeti</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Efficient sampling of transpositions and inverted transpositions for bayesian MCMC</article-title>
        <source>Algorithms Bioinform</source>
        <year>2006</year>
        <pub-id pub-id-type="doi">10.1007/11851561_17</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Neumann</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>YT</given-names>
          </name>
          <name>
            <surname>Mallela</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>EF</given-names>
          </name>
          <name>
            <surname>Colvin</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Duprat</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hlavacek</surname>
            <given-names>WS</given-names>
          </name>
          <name>
            <surname>Posner</surname>
            <given-names>RG</given-names>
          </name>
        </person-group>
        <article-title>Implementation of a practical Markov chain Monte Carlo sampling algorithm in PyBioNetFit</article-title>
        <source>Bioinformatics</source>
        <year>2022</year>
        <volume>38</volume>
        <issue>6</issue>
        <fpage>1770</fpage>
        <lpage>1772</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac004</pub-id>
        <?supplied-pmid 34986226?>
        <pub-id pub-id-type="pmid">34986226</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Downey</surname>
            <given-names>RG</given-names>
          </name>
          <name>
            <surname>Fellows</surname>
            <given-names>MR</given-names>
          </name>
        </person-group>
        <source>Parameterized Complexity</source>
        <year>1999</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Rossi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Beek</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Walsh</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <source>Handbook of constraint programming (Foundations of Artificial Intelligence)</source>
        <year>2006</year>
        <publisher-loc>Walthm</publisher-loc>
        <publisher-name>Elsevier Science</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Constraint Proc</source>
        <year>2003</year>
        <publisher-loc>San Francisco</publisher-loc>
        <publisher-name>Morgan Kaufmann</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <source>Reasoning with probabilistic and deterministic graphical models</source>
        <year>2019</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Koster</surname>
            <given-names>AMCA</given-names>
          </name>
        </person-group>
        <article-title>Treewidth computations i. upper bounds</article-title>
        <source>Inform Comput</source>
        <year>2010</year>
        <volume>208</volume>
        <issue>3</issue>
        <fpage>259</fpage>
        <lpage>275</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ic.2009.03.008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Cygan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Fomin</surname>
            <given-names>FV</given-names>
          </name>
          <name>
            <surname>Kowalik</surname>
            <given-names>Ł</given-names>
          </name>
          <name>
            <surname>Lokshtanov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Marx</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pilipczuk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pilipczuk</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Saurabh</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Parameterized Algorithms</source>
        <year>2015</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Bodini O, Ponty Y. Multi-dimensional Boltzmann sampling of languages. In: Proceedings of the 21st International Meeting on Probabilistic, Combinatorial, and Asymptotic Methods in the Analysis of Algorithms (AofA’10), DMTCS Proceedings, Vienna, Austria. 2010; 49–64.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Fixed-parameter tractable sampling for RNA design with multiple target structures</article-title>
        <source>BMC Bioinf</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>13</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-019-2784-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Yao H-T, Waldispühl J, Ponty Y, Will S. Taming disruptive base pairs to reconcile positive and negative structural design of rna. In: Research in Computational Molecular Biology - 25th Annual International Conference, RECOMB 2021. Lecture Notes in Computer Science. Springer, Padova, Italy 2021</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marchand</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Bulteau</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Tree diet: reducing the treewidth to unlock FPT algorithms in RNA bioinformatics</article-title>
        <source>Algorithms Mol Biol</source>
        <year>2022</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13015-022-00213-z</pub-id>
        <pub-id pub-id-type="pmid">35033127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Marchand B, Will S, Berkemer SJ, Bulteau L, Ponty Y. Automated design of dynamic programming schemes for RNA folding with pseudoknots. In: Boucher, C., Rahmann, S. (eds.) 22nd nternational Workshop on Algorithms in Bioinformatics (WABI 2022). Leibniz International Proceedings in Informatics (LIPIcs), vol. 242, pp. 7–1724. Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl, Germany 2022. 10.4230/LIPIcs.WABI.2022.7 . <ext-link ext-link-type="uri" xlink:href="https://drops.dagstuhl.de/opus/volltexte/2022/17041">https://drops.dagstuhl.de/opus/volltexte/2022/17041</ext-link></mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Busch</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Efficient sequence alignment with side-constraints by cluster tree elimination</article-title>
        <source>Constraints</source>
        <year>2008</year>
        <volume>13</volume>
        <issue>1</issue>
        <fpage>110</fpage>
        <lpage>129</lpage>
        <pub-id pub-id-type="doi">10.1007/s10601-007-9032-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McCaskill</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>The equilibrium partition function and base pair binding probabilities for RNA secondary structure</article-title>
        <source>Biopolymers</source>
        <year>1990</year>
        <volume>29</volume>
        <issue>6–7</issue>
        <fpage>1105</fpage>
        <lpage>1119</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.360290621</pub-id>
        <?supplied-pmid 1695107?>
        <pub-id pub-id-type="pmid">1695107</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ding</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lawrence</surname>
            <given-names>CE</given-names>
          </name>
        </person-group>
        <article-title>A statistical sampling algorithm for RNA secondary structure prediction</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>7280</fpage>
        <lpage>7301</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg938</pub-id>
        <?supplied-pmid 14654704?>
        <pub-id pub-id-type="pmid">14654704</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hastings</surname>
            <given-names>WK</given-names>
          </name>
        </person-group>
        <article-title>Monte carlo sampling methods using markov chains and their applications</article-title>
        <source>Biometrika</source>
        <year>1970</year>
        <volume>57</volume>
        <issue>1</issue>
        <fpage>97</fpage>
        <lpage>109</lpage>
        <pub-id pub-id-type="doi">10.1093/biomet/57.1.97</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roshan</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Livesay</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>Probalign: multiple sequence alignment using partition function posterior probabilities</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <issue>22</issue>
        <fpage>2715</fpage>
        <lpage>2721</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl472</pub-id>
        <?supplied-pmid 16954142?>
        <pub-id pub-id-type="pmid">16954142</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Joshi</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
          <name>
            <surname>Backofen</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>LocARNA-P: accurate boundary prediction and improved detection of structural RNAs</article-title>
        <source>RNA</source>
        <year>2012</year>
        <volume>18</volume>
        <issue>5</issue>
        <fpage>900</fpage>
        <lpage>14</lpage>
        <pub-id pub-id-type="doi">10.1261/rna.029041.111</pub-id>
        <?supplied-pmid 22450757?>
        <pub-id pub-id-type="pmid">22450757</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Schulte C, Tack G, Lagerkvist MZ. Modeling and programming with Gecode. Schulte, Christian and Tack, Guido and Lagerkvist, Mikael 2010;1</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Allouche</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bessiere</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Boizumault</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Givry</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gutierrez</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>JHM</given-names>
          </name>
          <name>
            <surname>Leung</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Loudni</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Métivier</surname>
            <given-names>J-P</given-names>
          </name>
          <name>
            <surname>Schiex</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Tractability-preserving transformations of global cost functions</article-title>
        <source>Artif Intell</source>
        <year>2016</year>
        <volume>238</volume>
        <fpage>166</fpage>
        <lpage>189</lpage>
        <pub-id pub-id-type="doi">10.1016/j.artint.2016.06.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Yao H-T, Ponty Y, Will S. Developing complex RNA design applications in the Infrared framework. (2022). preprint; to be published. <ext-link ext-link-type="uri" xlink:href="https://hal.science/hal-03711828">https://hal.science/hal-03711828</ext-link></mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Koster</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Combinatorial optimization on graphs of bounded treewidth</article-title>
        <source>Comput J</source>
        <year>2008</year>
        <volume>51</volume>
        <issue>3</issue>
        <fpage>255</fpage>
        <lpage>269</lpage>
        <pub-id pub-id-type="doi">10.1093/comjnl/bxm037</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dechter</surname>
            <given-names>R</given-names>
          </name>
          <collab>Handbook of Constraint Programming</collab>
        </person-group>
        <article-title>Tractable Structures for Constraint Satisfaction Problems. In</article-title>
        <source>Found Artificial Intell</source>
        <year>2006</year>
        <volume>2</volume>
        <fpage>209</fpage>
        <lpage>244</lpage>
        <pub-id pub-id-type="doi">10.1016/S1574-6526(06)80011-8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bachoore</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Bodlaender</surname>
            <given-names>HL</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Tokuyama</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Weighted treewidth algorithmic techniques and results</article-title>
        <source>International symposium on algorithms and computation (ISAAC 2007)</source>
        <year>2007</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>893</fpage>
        <lpage>903</lpage>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Arnborg</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Corneil</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Proskurowski</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Complexity of finding embeddings in a k-tree</article-title>
        <source>SIAM J Algebraic Discrete Methods</source>
        <year>1987</year>
        <volume>8</volume>
        <issue>2</issue>
        <fpage>277</fpage>
        <lpage>284</lpage>
        <pub-id pub-id-type="doi">10.1137/0608024</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tamaki</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Positive-instance driven dynamic programming for treewidth</article-title>
        <source>J Combinatorial Optimizat</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>4</issue>
        <fpage>1283</fpage>
        <lpage>1311</lpage>
        <pub-id pub-id-type="doi">10.1007/s10878-018-0353-z</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Bodlaender HL. A linear time algorithm for finding tree-decompositions of small treewidth. In: Proceedings of the Twenty-fifth Annual ACM Symposium on Theory of Computing. 1993;226–234.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Doolittle</surname>
            <given-names>WF</given-names>
          </name>
        </person-group>
        <article-title>Phylogenetic classification and the universal tree</article-title>
        <source>Science</source>
        <year>1999</year>
        <volume>284</volume>
        <issue>5423</issue>
        <fpage>2124</fpage>
        <lpage>2128</lpage>
        <pub-id pub-id-type="doi">10.1126/science.284.5423.2124</pub-id>
        <?supplied-pmid 10381871?>
        <pub-id pub-id-type="pmid">10381871</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fitch</surname>
            <given-names>WM</given-names>
          </name>
        </person-group>
        <article-title>Toward defining the course of evolution: minimum change for a specific tree topology</article-title>
        <source>Syst Biol</source>
        <year>1971</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>406</fpage>
        <lpage>416</lpage>
        <pub-id pub-id-type="doi">10.1093/sysbio/20.4.406</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sankoff</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Rousseau</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Locating the vertices of a steiner tree in an arbitrary metric space</article-title>
        <source>Math Program</source>
        <year>1975</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>240</fpage>
        <lpage>246</lpage>
        <pub-id pub-id-type="doi">10.1007/BF01681346</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darty</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Denise</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>VARNA: interactive drawing and editing of the RNA secondary structure</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>15</issue>
        <fpage>1974</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp250</pub-id>
        <?supplied-pmid 19398448?>
        <pub-id pub-id-type="pmid">19398448</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taneda</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Multi-objective optimization for RNA design with multiple target secondary structures</article-title>
        <source>BMC Bioinf</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>280</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-015-0706-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Sabina</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zuker</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>Expanded sequence dependence of thermodynamic parameters improves prediction of RNA secondary structure</article-title>
        <source>J Mol Biol</source>
        <year>1999</year>
        <volume>288</volume>
        <issue>5</issue>
        <fpage>911</fpage>
        <lpage>940</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1999.2700</pub-id>
        <?supplied-pmid 10329189?>
        <pub-id pub-id-type="pmid">10329189</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Turner</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Mathews</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>NNDB: the nearest neighbor parameter database for predicting stability of nucleic acid secondary structure</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>Suppl–1</issue>
        <fpage>280</fpage>
        <lpage>282</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkp892</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol</source>
        <year>1970</year>
        <volume>48</volume>
        <issue>3</issue>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gotoh</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>An improved algorithm for matching biological sequences</article-title>
        <source>J Mol Biol</source>
        <year>1982</year>
        <volume>162</volume>
        <issue>3</issue>
        <fpage>705</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(82)90398-9</pub-id>
        <?supplied-pmid 7166760?>
        <pub-id pub-id-type="pmid">7166760</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chao</surname>
            <given-names>K-M</given-names>
          </name>
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>Aligning two sequences within a specified diagonal band</article-title>
        <source>Bioinformatics</source>
        <year>1992</year>
        <volume>8</volume>
        <issue>5</issue>
        <fpage>481</fpage>
        <lpage>487</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/8.5.481</pub-id>
      </element-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Pesant</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>A regular language membership constraint for finite sequences of Variables. In: principles and practice of constraint programming - CP</source>
        <year>2001</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>482</fpage>
        <lpage>495</lpage>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Zhou, Y., Ponty, Y., Vialette, S., Waldispuhl, J., Zhang, Y., Denise, A.: Flexible RNA design under structure and sequence constraints using formal languages. In: BCB’13: Proceedings of the International Conference on Bioinformatics, Computational Biology and Biomedical Informatics, pp. 229–238. Association for Computing Machinery, New York, NY, USA (2013). 10.1145/2506583.2506623</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Blanchette</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lécuyer</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>SPARCS: a web server to analyze (un)structured regions in coding RNA sequences</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>W1</issue>
        <fpage>480</fpage>
        <lpage>485</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt461</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Reinharz</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Waldispühl</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>A weighted sampling algorithm for the design of RNA sequences with targeted secondary structure and nucleotide distribution</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>13</issue>
        <fpage>308</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt217</pub-id>
        <pub-id pub-id-type="pmid">23202746</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yao</surname>
            <given-names>H-T</given-names>
          </name>
          <name>
            <surname>Will</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>Adv Design Struct RNAs RNA RedPrint: RNA Bioinformatics</source>
        <year>2020</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Boury, T., Ponty, Y., Reinharz, V.: Automatic exploration of the natural variability of RNA non-canonical geometric patterns with a parameterized sampling technique. In: 23nd International Workshop on Algorithms in Bioinformatics (WABI 2023). Leibniz International Proceedings in Informatics (LIPIcs). Schloss Dagstuhl – Leibniz-Zentrum für Informatik, Dagstuhl, Germany (2023). <ext-link ext-link-type="uri" xlink:href="https://hal.science/hal-04094288">https://hal.science/hal-04094288</ext-link></mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tschiatschek</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Findeiß</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>RNAblueprint: flexible multiple target nucleic acid sequence design</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <issue>18</issue>
        <fpage>2850</fpage>
        <lpage>2858</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx263</pub-id>
        <?supplied-pmid 28449031?>
        <pub-id pub-id-type="pmid">28449031</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gambette</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gunawan</surname>
            <given-names>AD</given-names>
          </name>
          <name>
            <surname>Labarre</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Vialette</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Solving the tree containment problem in linear time for nearly stable phylogenetic networks</article-title>
        <source>Discrete Appl Math</source>
        <year>2018</year>
        <volume>246</volume>
        <fpage>62</fpage>
        <lpage>79</lpage>
        <pub-id pub-id-type="doi">10.1016/j.dam.2017.07.015</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Eén</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sörensson</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <source>An extensible SAT-solver In Theory and Applications of Satisfiability Testing</source>
        <year>2004</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>502</fpage>
        <lpage>518</lpage>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cplex</surname>
            <given-names>II</given-names>
          </name>
        </person-group>
        <article-title>V12. 1: User’s manual for CPLEX</article-title>
        <source>Int Business Mach Corporat</source>
        <year>2009</year>
        <volume>46</volume>
        <issue>53</issue>
        <fpage>157</fpage>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Steffen</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>A discipline of dynamic programming over sequence data</article-title>
        <source>Sci Comput Programming</source>
        <year>2004</year>
        <volume>51</volume>
        <issue>3</issue>
        <fpage>215</fpage>
        <lpage>263</lpage>
        <pub-id pub-id-type="doi">10.1016/j.scico.2003.12.005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sauthoff</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Möhl</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Janssen</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Giegerich</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Bellman’s GAP–a language and compiler for dynamic programming in sequence analysis</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>5</issue>
        <fpage>551</fpage>
        <lpage>560</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt022</pub-id>
        <?supplied-pmid 23355290?>
        <pub-id pub-id-type="pmid">23355290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zu</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Hammer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Abfalter</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hofacker</surname>
            <given-names>IL</given-names>
          </name>
          <name>
            <surname>Flamm</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Computational design of RNAs with complex energy landscapes</article-title>
        <source>Biopolymers</source>
        <year>2013</year>
        <volume>99</volume>
        <issue>12</issue>
        <fpage>1124</fpage>
        <lpage>1136</lpage>
        <pub-id pub-id-type="doi">10.1002/bip.22337</pub-id>
        <pub-id pub-id-type="pmid">23818234</pub-id>
      </element-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Riechert</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Siederdissen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stadler</surname>
            <given-names>PF</given-names>
          </name>
        </person-group>
        <article-title>Algebraic dynamic programming for multiple context-free grammars</article-title>
        <source>Theoret Comput Sci</source>
        <year>2016</year>
        <volume>639</volume>
        <fpage>91</fpage>
        <lpage>109</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2016.05.032</pub-id>
      </element-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Michálik</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Touzet</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ponty</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Efficient approximations of RNA kinetics landscape using non-redundant sampling</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>283</fpage>
        <lpage>292</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx269</pub-id>
        <pub-id pub-id-type="pmid">27663497</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

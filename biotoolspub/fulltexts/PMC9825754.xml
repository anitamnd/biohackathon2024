<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9825754</article-id>
    <article-id pub-id-type="pmid">36477833</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btac789</article-id>
    <article-id pub-id-type="publisher-id">btac789</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Structural Bioinformatics</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Insights from incorporating quantum computing into drug design workflows</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Lau</surname>
          <given-names>Bayo</given-names>
        </name>
        <aff><institution>HypaHealth, HypaHub Inc.</institution>, San Jose, CA 95128, <country country="US">USA</country></aff>
        <xref rid="btac789-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Emani</surname>
          <given-names>Prashant S</given-names>
        </name>
        <aff><institution>Program in Computational Biology and Bioinformatics, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <aff><institution>Department of Molecular Biophysics and Biochemistry, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <xref rid="btac789-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Chapman</surname>
          <given-names>Jackson</given-names>
        </name>
        <aff><institution>Program in Computational Biology and Bioinformatics, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <aff><institution>Department of Molecular Biophysics and Biochemistry, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <xref rid="btac789-FM1" ref-type="author-notes"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Yao</surname>
          <given-names>Lijing</given-names>
        </name>
        <aff><institution>HypaHealth, HypaHub Inc.</institution>, San Jose, CA 95128, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lam</surname>
          <given-names>Tarsus</given-names>
        </name>
        <aff><institution>HypaHealth, HypaHub Inc.</institution>, San Jose, CA 95128, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Merrill</surname>
          <given-names>Paul</given-names>
        </name>
        <aff><institution>HypaHealth, HypaHub Inc.</institution>, San Jose, CA 95128, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Warrell</surname>
          <given-names>Jonathan</given-names>
        </name>
        <aff><institution>Program in Computational Biology and Bioinformatics, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <aff><institution>Department of Molecular Biophysics and Biochemistry, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Gerstein</surname>
          <given-names>Mark B</given-names>
        </name>
        <aff><institution>Program in Computational Biology and Bioinformatics, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <aff><institution>Department of Molecular Biophysics and Biochemistry, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <aff><institution>Department of Computer Science, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <aff><institution>Department of Statistics &amp; Data Science, Yale University</institution>, New Haven, CT 06520, <country country="US">USA</country></aff>
        <xref rid="btac789-cor1" ref-type="corresp"/>
        <!--mark@gersteinlab.org-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-0564-6105</contrib-id>
        <name>
          <surname>Lam</surname>
          <given-names>Hugo Y K</given-names>
        </name>
        <aff><institution>HypaHealth, HypaHub Inc.</institution>, San Jose, CA 95128, <country country="US">USA</country></aff>
        <xref rid="btac789-cor1" ref-type="corresp"/>
        <!--hugo.lam@hypahub.com-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Martelli</surname>
          <given-names>Pier Luigi</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <fn id="btac789-FM1">
        <label>†</label>
        <p>The authors wish it to be known that, in their opinion, the first three authors should be regarded as Joint First Authors.</p>
      </fn>
      <corresp id="btac789-cor1">To whom correspondence should be addressed. <email>mark@gersteinlab.org</email> or <email>hugo.lam@hypahub.com</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>1</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-12-07">
      <day>07</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>07</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <volume>39</volume>
    <issue>1</issue>
    <elocation-id>btac789</elocation-id>
    <history>
      <date date-type="received">
        <day>28</day>
        <month>3</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>14</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>28</day>
        <month>11</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>06</day>
        <month>12</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>23</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btac789.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>While many quantum computing (QC) methods promise theoretical advantages over classical counterparts, quantum hardware remains limited. Exploiting near-term QC in computer-aided drug design (CADD) thus requires judicious partitioning between classical and quantum calculations.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We present HypaCADD, a hybrid classical-quantum workflow for finding ligands binding to proteins, while accounting for genetic mutations. We explicitly identify modules of our drug-design workflow currently amenable to replacement by QC: non-intuitively, we identify the mutation-impact predictor as the best candidate. HypaCADD thus combines classical docking and molecular dynamics with quantum machine learning (QML) to infer the impact of mutations. We present a case study with the coronavirus (SARS-CoV-2) protease and associated mutants. We map a classical machine-learning module onto QC, using a neural network constructed from qubit-rotation gates. We have implemented this in simulation and on two commercial quantum computers. We find that the QML models can perform on par with, if not better than, classical baselines. In summary, HypaCADD offers a successful strategy for leveraging QC for CADD.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Jupyter Notebooks with Python code are freely available for academic use on GitHub: <ext-link xlink:href="https://www.github.com/hypahub/hypacadd_notebook" ext-link-type="uri">https://www.github.com/hypahub/hypacadd_notebook</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>National Institutes of Health</institution>
            <institution-id institution-id-type="DOI">10.13039/100000002</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>MH116492-05</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Rapid advancement of biotechnologies is enabling an unprecedented rate of data generation in the biomedical domain, with game-changing applications if we can harness even some of the multi-scale, many-body biological complexity. Computational biology has provided critical contributions to our understanding of this complexity, in problems, such as protein folding, genome assembly, variant detection and many others. Core computational biology algorithms have thus far been successful in pushing the limit of classical computers, with horizontal scaling across multiple computing units limited mainly by network speed, and vertical scaling in a single computing unit limited by Moore’s Law. One important application of biotechnology is drug discovery, with costly experimental work benefiting from, e.g. the lead search capabilities of computer-aided drug design (CADD). For such combinatorial, many-body problems, modern techniques are limited by computational hardware in both the information content of a model as well as the system size for a given model that can be computed with reasonable computational resources (<xref rid="btac789-B46" ref-type="bibr">Sliwoski <italic toggle="yes">et al.</italic>, 2014</xref>).</p>
    <p>Quantum computing (QC) provides an alternative computing paradigm. Quantum algorithms promise efficient solutions to problems that are difficult through classical computing (<xref rid="btac789-B19" ref-type="bibr">Feynman, 1982</xref> (quantumalgorithmzoo.org), and could be applicable to complicated biochemical systems. Although general-purpose, fault-tolerant, large-scale QC technologies are still in the works, QC technology has already enabled promising simulations of non-trivial Hamiltonians (<xref rid="btac789-B47" ref-type="bibr">Smith <italic toggle="yes">et al.</italic>, 2019</xref>). Current noisy intermediate-scale quantum-era (<xref rid="btac789-B40" ref-type="bibr">Preskill, 2018</xref>) hardware, while significantly limited by noise and short coherence time, is available even through cloud service providers (<ext-link xlink:href="http://aws.amazon.com/braket" ext-link-type="uri">aws.amazon.com/braket</ext-link>; <ext-link xlink:href="http://azure.microsoft.com/en-us/services/quantum" ext-link-type="uri">azure.microsoft.com/en-us/services/quantum</ext-link>). While practical quantum supremacy is still under debate, there is certainly enough evidence that QC could have advantages over analogous classical computing in some aspects in the near future. In fact, many institutions have started to explore QC as applied to drug discovery, with near-term focuses on selected tasks, such as lead optimization or compound screening (<xref rid="btac789-B59" ref-type="bibr">Zinner <italic toggle="yes">et al.</italic>, 2021</xref>).</p>
    <p>Many of the advantages of QC are related to the fact that quantum bits, or qubits, provide a state space that is exponentially larger than that of classical counterparts. Thus, while a classical bit has two discrete states, 0 and 1, a qubit can be treated as a rotatable vector that can be represented by two continuously varying angles. Moreover, by interfering with each other like waves, these qubits can take on joint configurations inaccessible to classical systems. These behaviors may lend QC advantages over classical computing in terms of speed, and potentially even representation of data (<xref rid="btac789-B17" ref-type="bibr">Emani <italic toggle="yes">et al.</italic>, 2021</xref>). However, currently available commercial quantum computers, based on the number of available qubits, limit the size of problems that can be mapped and solved. This is especially true for the logic-gate systems, which perform logical operations via sequential qubit-rotation gates. Available numbers of qubits are on the order of <inline-formula id="IE1"><mml:math id="IM1" display="inline" overflow="scroll"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math></inline-formula> (<xref rid="btac789-B5" ref-type="bibr">Ball, 2021</xref>) (<ext-link xlink:href="http://azure.microsoft.com/en-us/services/quantum/" ext-link-type="uri">azure.microsoft.com/en-us/services/quantum/</ext-link>; <ext-link xlink:href="http://ibm.com/quantum-computing" ext-link-type="uri">ibm.com/quantum-computing</ext-link>), at the higher end. Furthermore, many published QC algorithms were designed based on a putative quantum equivalent of RAM, or qRAM (<xref rid="btac789-B21" ref-type="bibr">Giovannetti <italic toggle="yes">et al.</italic>, 2008</xref>), where superpositions of qubits can be directly queried. The current lack of commercially available realizations of qRAM implies near-term use of QC algorithms has to rely on classical memory. As such, any real-world applications of QC would have to judiciously divide tasks between classical and QC capabilities. These ‘hybrid’ approaches would have to first be evaluated for feasibility (i.e. solving the problem to reasonable accuracy), and subsequently for potential quantum advantages over purely classical equivalents. The question of feasibility is especially important in biological problems where the structure of the data is complex, and has recently been considered for the case of mRNA codon optimization (<xref rid="btac789-B20" ref-type="bibr">Fox <italic toggle="yes">et al.</italic>, 2021</xref>).</p>
    <p>Here, we explore the incorporation of QC into an otherwise classical computational screening workflow. We take this hybrid approach with two primary aims: (i) demonstrating how QC can be combined with classical computing to create a tool that solves real-world, multi-dimensional biomedical problems; and (ii) comparing multiple quantum machine learning (QML) algorithms to published classical counterparts, both in simulation and on actual quantum computers.</p>
    <p>Specifically, we demonstrate a hybrid computing approach, named HypaCADD, applied toward CADD. HypaCADD is a hyperscale computational pipeline that integrates large-scale genomics and protein structure data for drug discovery. It consists of highly computationally intensive applications, such as molecular docking, binding affinity prediction, molecular dynamics and machine-learning (ML)-based lead search and optimization. To prove the readiness and potential utility of QC in drug discovery research, the pipeline uses QML for predicting mutational effects on drug binding. It compares the quantum and classical computing results, and demonstrates the consistency between running in simulation and on real quantum computers from Rigetti (<ext-link xlink:href="http://rigetti.com" ext-link-type="uri">rigetti.com</ext-link>) and IBM (<ext-link xlink:href="http://ibm.com/quantum-computing" ext-link-type="uri">ibm.com/quantum-computing</ext-link>). We choose a straightforward form of hybridity: the data are preprocessed on a classical system and fed to quantum simulators and/or hardware. We identify an independent module of the workflow (<xref rid="btac789-F1" ref-type="fig">Fig. 1</xref>) to convert to a quantum analogue, namely, the module associated with calculating the impact of amino acid mutations on ligand binding affinity. The advantages of this approach are 2-fold. First, we utilize the published results of a classical ML approach (<xref rid="btac789-B55" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2019</xref>) for careful validation of the quantum methods. Second, we completely replace this module in a tractable manner for current quantum simulators and hardware, thereby applying state-of-the-art QC to an important component of the drug-design pipeline. Downstream, we aim to start replacing, partially or even fully, some of the more computationally complex components, such as the molecular docking and molecular dynamics algorithms. As QC continues to advance, it can also be used for virtual screening with larger-size molecules or for more accurate and faster molecular dynamics simulation. For now, we find that many of the quantum algorithms we use for the mutation-impact module perform on par with their classical counterparts. HypaCADD thus affirms the value of leveraging a hybrid approach to make QC readily accessible and meaningful to biomedical scientists in solving challenging drug discovery problems.</p>
    <fig position="float" id="btac789-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Given a set of ligands and a target protein with known or hypothetical mutations, the classical/quantum hybrid screening pipeline seeks for potential leads—ligands that would bind favorably to the protein as well as its mutants (green parallelograms, representing the input data and output results). The current implementation performs classical computation with down-selection after screening and simulation. Using a set of curated data, featurization is performed before modeling by QML (blue rectangles). The impact of mutations on the down-selected ligands is then by the QML (blue rectangles). Further down-selection based on mutation impact is performed classically. We note that the selection is effectively an optimization or ranking problem, which, along with docking and molecular simulation, could be considered to have a quantum computational approach in the future</p>
      </caption>
      <graphic xlink:href="btac789f1" position="float"/>
    </fig>
    <p>This is a measured approach to the introduction of QC into the field of CADD. We prioritized the need for generating a pipeline immediately applicable to large-scale, real-world data for drug repurposing over the ultimate goal of fully exploiting putative advantages of QC. The possible advantages of QML, in particular, could be of the following forms (<xref rid="btac789-B42" ref-type="bibr">Schuld and Petruccione, 2018</xref>): advantages in computational complexity, which is a measure of the number of operations required to obtain a reasonably accurate solution (related to QC ‘speedup’); improvements in sample complexity, which is a measure of the number of data samples needed to generalize well from a training dataset; and improvements in model complexity, which is a measure of the expressivity of a model to represent the structure inherent in the data. There are several instances of particular algorithms with theoretical guarantees of scaling improvements over classical counterparts. However, in a general QML framework, especially hybrid classical-quantum models, the exact advantages of any approach depend on the component algorithms, datasets, associated noise and the number of sampling measurements required for robustness (<xref rid="btac789-B42" ref-type="bibr">Schuld and Petruccione, 2018</xref>). Our target is to use this work as a foundation to make the QML models in the CADD framework increasingly sophisticated, such that they might eventually provide heuristic evidence for QC advantages, without making strong claims about the relative advantages of the methods tested in the current work. Another consideration is that other modules in the docking/MD pipeline may be more inherently ‘quantum mechanical’ in nature, as well as more computationally intensive (and therefore more in need of QC speedup). One of the main focuses of current efforts in this direction is to improve quantum chemistry simulations, which would, in turn, improve the parameterization of force-fields, and also the <italic toggle="yes">ab initio</italic> quantum mechanical calculations of binding affinity (<xref rid="btac789-B12" ref-type="bibr">Cao, 2018</xref>). However, some of those advances will have to wait for both hardware growth and methodological developments to allow for high-throughput screening: the number of qubits required would depend on the size of the ligand and target binding pocket, and the hybrid classical-quantum frameworks would need to be carefully designed for near-term, noisy devices. Instead, several recent approaches to protein design and docking address the scale of the problem by contending with classical parameterizations of the problems: <xref rid="btac789-B34" ref-type="bibr">Mulligan <italic toggle="yes">et al.</italic> (2020)</xref> and <xref rid="btac789-B24" ref-type="bibr">Khatami <italic toggle="yes">et al.</italic> (2022)</xref> tackle protein sequence design using classical pairwise interaction potentials between amino acids as cost functions optimized on quantum annealers and logic-gate-based computers, respectively; <xref rid="btac789-B6" ref-type="bibr">Banchi <italic toggle="yes">et al.</italic> (2020)</xref> find ligand–protein docking solutions on a Gaussian Boson Sampler by representing the interface using a joint distance graph; and <xref rid="btac789-B27" ref-type="bibr">Li <italic toggle="yes">et al.</italic> (2021)</xref> use a reduced representation of ligands and receptors in hybrid classical-QML approaches, finding potential QC advantages. Our employment of QML is complementary to these strategies in employing classical parameters in a quantum model, with a view to targeting the important problem of mutational impact of ligand binding. We particularly foresee the promise of QML, as ML approaches, being agnostic to the underlying causal mechanisms, are often easily generalizable to other problems [see discussion in <xref rid="btac789-B12" ref-type="bibr">Cao (2018)</xref>]. For example, the numerical force-field fitting procedures in the design of programs, such as AutoDock Vina (<xref rid="btac789-B32" ref-type="bibr">Morris <italic toggle="yes">et al.</italic>, 2009</xref>; <xref rid="btac789-B50" ref-type="bibr">Trott <italic toggle="yes">et al.</italic>, 2010</xref>), involve optimization of parameters to minimize the deviation of predictions from known experimental structures. This can potentially be cast as a QML problem. We hope this generality can also be exploited by the CADD community. We further emphasize, however, that our goal here is not to definitively prove the quantum advantage of these models. The exact nature and degree of putative advantages in representation and/or speedup in general QML models are actively being debated by the scientific community. Our analysis is intended to lay out a clear path to QC incorporation, in the near-term and for high-throughput applications.</p>
    <p>HypaCADD is a general-purpose workflow, applicable to any set of input drug ligands, target proteins and point mutations of the proteins. Here, we apply HypaCADD to the highly relevant problem of finding drug ligands that bind with high affinity to SARS-CoV-2 virus proteins, and whose binding is resilient against a spectrum of mutations in the target protein. Because of its importance to protein processing and viral replication, the main SARS-CoV-2 protease 3CL<sup><italic toggle="yes">pro</italic></sup> has been frequently targeted (<xref rid="btac789-B23" ref-type="bibr">Jang <italic toggle="yes">et al.</italic>, 2021</xref>) for drug–ligand analyses. We use this protein and a set of associated amino acid mutations for our analyses. We initially applied a sequential virtual screening protocol, including molecular docking and molecular dynamics simulations, to 30 000 ligands and identified two potential drug candidates for the SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> protein. Subsequently, we predict the effect of protein mutations that can guide lead search and optimization. Our high-throughput screening analysis will complement existing models that incorporate dynamic and structural information to assess the impact of variants on proteins and protein–ligand complexes (<xref rid="btac789-B49" ref-type="bibr">Torrens-Fontanals <italic toggle="yes">et al.</italic>, 2022</xref>). We believe our approach increases the robustness of anti-SARS-CoV-2 drug discovery.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <sec>
      <title>2.1 Datasets</title>
      <p>The drug dataset (features: 3D, Ref/Mid pHs, Drug-like, In-stock) from ZINC in PDBQT format was downloaded from zinc.docking.org, comprising a total of more than 10 million compounds. The X-ray crystallized 3D structure in PDB format of 3CL<sup><italic toggle="yes">pro</italic></sup> of HCoV-229E (PDB code: 2ZU2) (<xref rid="btac789-B26" ref-type="bibr">Lee <italic toggle="yes">et al.</italic>, 2009</xref>) and of 3CL<sup><italic toggle="yes">pro</italic></sup> of SARS-CoV-2 of COVID-19 (PDB code 6W63) (<xref rid="btac789-B30" ref-type="bibr">Mesecar, 2020</xref>) were downloaded from rcsb.org. 2ZU2 was used as the receptor to validate our screening methodology in HCoV-229E and 6W63 was used as the receptor to identify lead compounds for SARS-CoV-2. Mutations in SARS-COV-2 on nsp5 3CL<sup><italic toggle="yes">pro</italic></sup> were collected from covidcg.org.</p>
    </sec>
    <sec>
      <title>2.2 Molecular docking</title>
      <p>AutoDock Vina (<xref rid="btac789-B50" ref-type="bibr">Trott <italic toggle="yes">et al.</italic>, 2010</xref>) was chosen as the docking tool to conduct the initial virtual screening by estimating the non-covalent binding of receptors and ligands. The receptors were processed using a custom script, removing ‘HETATM’ components including ligands, ions and waters and protonating His41 to the neutral state at the epsilon nitrogen (N<italic toggle="yes">ε</italic>2). Then, the preparation of a receptor for docking was finished by a script in AutoDock Tools (<xref rid="btac789-B32" ref-type="bibr">Morris <italic toggle="yes">et al.</italic>, 2009</xref>) (‘prepare_receptor4.py’), where the polar hydrogens and Gasteiger charges were added and where the PDB files were converted to PDBQT format. The grid boxes for docking were centered on the active His41 residue and were set to extend 26 grid points in each direction. The lower the predicted binding affinity score is, the higher the binding affinity between the receptors and ligands.</p>
    </sec>
    <sec>
      <title>2.3 Molecular dynamics simulation</title>
      <p>Molecular dynamics were performed using a combination of GROMACS (<xref rid="btac789-B1" ref-type="bibr">Abraham <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btac789-B8" ref-type="bibr">Berendsen <italic toggle="yes">et al.</italic>, 1995</xref>; <xref rid="btac789-B22" ref-type="bibr">Hess <italic toggle="yes">et al.</italic>, 2008</xref>; <xref rid="btac789-B28" ref-type="bibr">Lindahl <italic toggle="yes">et al.</italic>, 2001</xref>; <xref rid="btac789-B36" ref-type="bibr">Páll <italic toggle="yes">et al.</italic>, 2015</xref>; <xref rid="btac789-B41" ref-type="bibr">Pronk <italic toggle="yes">et al.</italic>, 2013</xref>; <xref rid="btac789-B53" ref-type="bibr">Van Der Spoel <italic toggle="yes">et al.</italic>, 2005</xref>), AMBER03 force-field (<xref rid="btac789-B3" ref-type="bibr">Alvarado <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btac789-B11" ref-type="bibr">Bremer <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btac789-B15" ref-type="bibr">Duan <italic toggle="yes">et al.</italic>, 2003</xref>), Open Babel (<xref rid="btac789-B35" ref-type="bibr">O’Boyle <italic toggle="yes">et al.</italic>, 2011</xref>) and ACPYPE (<xref rid="btac789-B7" ref-type="bibr">Batista <italic toggle="yes">et al.</italic>, 2006</xref>; <xref rid="btac789-B48" ref-type="bibr">Sousa da Silva <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="btac789-B56" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2004</xref>, <xref rid="btac789-B57" ref-type="bibr">2006</xref>) with General Amber Force-Field and TIP3P model (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>). Shorter 0.4 ns simulations were performed for various ligands with different binding affinities estimated by AutoDock Vina (<xref rid="btac789-B50" ref-type="bibr">Trott <italic toggle="yes">et al.</italic>, 2010</xref>). Longer simulations (10 ns) were performed on selected ligands, including the ligand named X77 that was co-crystallized with SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup>. After the simulation, GROMACS’s output is analyzed with gmx_mmPBSA (<xref rid="btac789-B31" ref-type="bibr">Miller <italic toggle="yes">et al.</italic>, 2012</xref>; <xref rid="btac789-B51" ref-type="bibr">Valdés-Tresanco <italic toggle="yes">et al.</italic>, 2021</xref>), which uses Ambertools 2.0’s MMPBSA to calculate binding free energy using the generalized Born surface area (GBSA) method.</p>
    </sec>
    <sec>
      <title>2.4 Evaluation of viral mutations’ impacts on protein–drug interactions</title>
      <p>A classical physical-statistical classifier (<xref rid="btac789-B55" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2019</xref>) was developed to predict the impacts of single nucleotide variants on protein–drug interactions. The classifier, GenoDock, uses genomic, structural and physicochemical features. As discussed in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>, this work reformulates the framework for practical treatment of non-human proteins with less annotations. The GenoDock features per mutation-ligand configuration include (feature names are italicized and in parentheses): amino acid side-chain volume change index (<italic toggle="yes">volume_change_index</italic>), polarity change index (<italic toggle="yes">polarity_change_index</italic>), distance between the mutation and drug ligand (<italic toggle="yes">distance</italic>), molecular weight (<italic toggle="yes">molecular_weight</italic>), H-bond donor (<italic toggle="yes">H_bond_donor</italic>) and acceptor counts (<italic toggle="yes">H_bond_acceptor</italic>), rotatable bond counts (<italic toggle="yes">rotatable_bond</italic>), polar surface area (<italic toggle="yes">Polar_Surface_Area</italic>) and whether the variant occurs in the ligand binding site or not (<italic toggle="yes">bind_site</italic>). For the case of human variants, we also included features that are related to the conservation of a variant and its frequency in human populations: allele frequency (<italic toggle="yes">allele_freq</italic>); SIFT (<italic toggle="yes">SIFT_consequence</italic>) (<xref rid="btac789-B25" ref-type="bibr">Kumar <italic toggle="yes">et al.</italic>, 2009</xref>); PolyPhen-2 (<italic toggle="yes">PPH_consequence</italic>) (<xref rid="btac789-B2" ref-type="bibr">Adzhubei <italic toggle="yes">et al.</italic>, 2013</xref>); and GERP scores (<italic toggle="yes">gerp_score</italic>) (<xref rid="btac789-B14" ref-type="bibr">Davydov <italic toggle="yes">et al.</italic>, 2010</xref>). While well-studied viruses, such as SARS-CoV-2, potentially allow for variant conservation properties to be assessed [see variant frequencies and SIFT scores in <xref rid="btac789-B16" ref-type="bibr">Dunham <italic toggle="yes">et al.</italic> (2021)</xref>], we removed such features to build non-human-genome-compatible classifiers applicable to a wider variety of viruses lacking sufficient information. Furthermore, feature space reduction also facilitates downstream calculations on the limited-qubit quantum computers considered. In general, though, the methods are designed to incorporate all features given availability of sufficiently comprehensive variant databases.</p>
      <p>In this study, we specifically investigate non-human features in the interest of applying the QNN framework to the SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> protein. That is, we consider the subset of all features not specific to human genomes (namely everything except the GERP, PolyPhen2 and SIFT scores, and the allele frequency). This left us with nine features (<italic toggle="yes">bind_site</italic>, <italic toggle="yes">distance</italic>, <italic toggle="yes">molecular_weight</italic>, <italic toggle="yes">H_bond_donor</italic>, <italic toggle="yes">H_bond_acceptor</italic>, <italic toggle="yes">rotatable_bond</italic>, <italic toggle="yes">Polar_Surface_Area</italic>, <italic toggle="yes">polarity_change_index</italic> and <italic toggle="yes">volume_change_index</italic>), which was a tenable number for simulated QNNs. For QNNs that run on IBM’s five-qubit systems, we subselected again to those features which are not ligand-specific, leaving us with four features: <italic toggle="yes">bind_site</italic>, <italic toggle="yes">distance</italic>, <italic toggle="yes">polarity_change_index</italic> and <italic toggle="yes">volume_change_index</italic>. This is a five-qubit problem (one input qubit for each feature plus an additional readout qubit) and therefore perfectly suited to our resources. It is worth noting that, in our testing on simulated devices, we found no significant performance difference between the nine-feature group and the four-feature group. We suspect this is due to the dominance of the <italic toggle="yes">bind_site</italic> feature in the prediction process, but, regardless of the cause, it reassures us that working with the four-feature group is still a meaningful problem.</p>
      <p>We trained various models using GenoDock’s pseudo-gold-standard training set, which was generated by applying AutoDock Vina to a large collection of co-crystal structures from the PDB, and mapping variants from germline and somatic variant databases. We then compared all methods described below [custom QNN (cQNN), qisQNN, weighted margin QNN (weighted mQNN) and GenoDock’s original random forest method] using the Platinum test set (<xref rid="btac789-B39" ref-type="bibr">Pires <italic toggle="yes">et al.</italic>, 2015</xref>). We applied the same models to the 6W63 mutation-ligand features. Such features were computed by GenoDock’s methodology applied to the list of SARS-CoV-2 mutations, the 6W63 crystal structure and ligand structures. Each mutation was located within the PDB structure for the target protein, and the ‘wild-type’ PDB structure of the protein was mutated at this site using the program Modeller (<xref rid="btac789-B58" ref-type="bibr">Webb and Sali, 2016</xref>) (resulting in a ‘mutant’ structure).</p>
      <p>The convention used is to set the label as ‘0’ for non-disruptive mutations and ‘1’ for mutations disruptive to binding. Prior to training the cQNNs and qisQNNs, we balanced the datasets with respect to the labels, and divided the resulting dataset evenly into training/validation/testing partitions. Further information on the datasets and selection of features are provided in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Methods</xref>.</p>
      <p>For a more careful comparison between the classical models and quantum neural networks (QNNs), we also trained classical neural networks (NNs) with approximately matching numbers of parameters. These NNs, due to parameter-number restrictions, were built using scikit-learn’s multilayer perceptrons (<ext-link xlink:href="http://scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html" ext-link-type="uri">scikit-learn.org/stable/modules/generated/sklearn.neural_network.MLPClassifier.html</ext-link>) with a single hidden layer, fully connected with the inputs. The number of nodes in this hidden layer was adjusted to approach the QNN parameter numbers, while allowing for full connections with the input layer. For example, a three-layer QNN (architecture described below) with four input features would have 4 × 3 = 12 free parameters. The classical NN would have four weight and one bias parameters per hidden layer node, and so we restricted the network to have three nodes in the single hidden layer (=15 free parameters). We note that this approach was adopted to provide a standardized method for matching the number of parameters between models, specifically suited to small network comparisons. For larger networks, specific architectural features may need to be matched beyond the parameter count, although, in general, the problem of matching quantum and classical network architectures is non-trivial.</p>
    </sec>
    <sec>
      <title>2.5 Quantum neural network</title>
      <p>Several QNN models (termed cQNN, qisQNN and weighted mQNN, varying in architectures and training) were explored to predict mutation impact on drug binding. The training set was class-imbalanced (9611 negatives and 670 positives), and each formulation had its own approach to treating such imbalance in the training set. We compared the performance of each model on a single, independent, experimentally measured dataset.</p>
      <sec>
        <label>2.5.1</label>
        <title>Weighted mQNN</title>
        <p>The weighted mQNN is based on the margin classifier recommended by PennyLane (<xref rid="btac789-B9" ref-type="bibr">Bergholm <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btac789-B44" ref-type="bibr">Schuld <italic toggle="yes">et al.</italic>, 2020</xref>), which is built on top of Python’s PennyLane and PyTorch frameworks. The original method is insufficient for an imbalanced dataset, and enhancement is required. In particular, we removed the random sampling of data points, and reformulated the cost function as a weighted summation of the loss function of each training point. We explored the impact of the layer and margin hyperparameters by splitting the training data in half while keeping the minority–majority ratio the same. We trained the weighted mQNN on one half of the evaluation set. Details are in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
      </sec>
      <sec>
        <label>2.5.2</label>
        <title>cQNN and qisQNN</title>
        <p>The architecture implemented herein closely follows that of Farhi and Neven (FN) (<xref rid="btac789-B18" ref-type="bibr">Farhi <italic toggle="yes">et al.</italic>, 2018</xref>) (example in <xref rid="btac789-F2" ref-type="fig">Fig. 2</xref>). A series of features are mapped onto an equal number of input qubits, and a training dataset is used to capture structure in the data by making sure that the measurement output of the network closely matches that provided in the training data. By iteratively adjusting the free parameters in the network, we arrive at the best performing model.</p>
        <fig position="float" id="btac789-F2">
          <label>Fig. 2.</label>
          <caption>
            <p>Architecture of the cQNN and qisQNN models. The number of input qubits shown here is a representative example, while in practice the number of inputs varies by the number of features considered. The initial mapping of the continuous inputs onto the interval <inline-formula id="IE2"><mml:math id="IM2" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mo>π</mml:mo><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>, is not shown explicitly here</p>
          </caption>
          <graphic xlink:href="btac789f2" position="float"/>
        </fig>
        <p>As in FN, the QNN models here are variational quantum circuits, where the learned parameters are rotation phases applied to combinations of qubits and each circuit element takes the simple form of a unitary matrix rotation applied to a subset of the qubits: <inline-formula id="IE3"><mml:math id="IM3" display="inline" overflow="scroll"><mml:mrow><mml:mi>U</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mo>θ</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>θ</mml:mo><mml:mo>Σ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE4"><mml:math id="IM4" display="inline" overflow="scroll"><mml:mrow><mml:mo>Σ</mml:mo><mml:mo>=</mml:mo><mml:munderover><mml:mo>∏</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>N</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">qubits</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:munderover><mml:mo>⊗</mml:mo><mml:msup><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula> is a tensor product of operators from the set of 2 × 2 Pauli matrices <inline-formula id="IE5"><mml:math id="IM5" display="inline" overflow="scroll"><mml:mrow><mml:mo>{</mml:mo><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>x</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>y</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>z</mml:mi></mml:msub><mml:mo>}</mml:mo></mml:mrow></mml:math></inline-formula> acting on a subset of the qubits. In the simplest version, the QNN circuit consists of several <italic toggle="yes">input qubits</italic> and a single <italic toggle="yes">readout qubit</italic>. The number of input qubits equals the number of features in the dataset. The qubit <italic toggle="yes">z</italic> basis is assumed throughout this discussion. Each input qubit is initialized according to the data input in the following manner: (i) we directly encode binary feature values as <inline-formula id="IE6"><mml:math id="IM6" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mn>0</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula> or <inline-formula id="IE7"><mml:math id="IM7" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula>. (ii) We apply min–max scaling, <inline-formula id="IE8"><mml:math id="IM8" display="inline" overflow="scroll"><mml:mrow><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">input</mml:mi><mml:mo>−</mml:mo><mml:mi mathvariant="italic">min</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">max</mml:mi><mml:mo>−</mml:mo><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math></inline-formula>, to continuous feature values for a range of <inline-formula id="IE9"><mml:math id="IM9" display="inline" overflow="scroll"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math></inline-formula>. Each input qubit is initialized according to the data via the application of an <inline-formula id="IE10"><mml:math id="IM10" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mi>x</mml:mi></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mo>ϕ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> operator to the <inline-formula id="IE11"><mml:math id="IM11" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mn>0</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula> state, where <inline-formula id="IE12"><mml:math id="IM12" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mo>ϕ</mml:mo></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mo>π</mml:mo></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>i</mml:mi><mml:mi mathvariant="italic">npu</mml:mi><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> for the value of the corresponding data element. The readout qubit is always initialized to <inline-formula id="IE13"><mml:math id="IM13" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula>. We considered the circuit model where, across all circuit operations, input qubits only interact with the readout qubit, and not directly with each other. This choice was made purely for investigating the effect of conditioning the output directly on each input qubit, following FN.</p>
        <p>The interaction gates were chosen from the set of two-qubit <inline-formula id="IE14"><mml:math id="IM14" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mo>θ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE15"><mml:math id="IM15" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mo>θ</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> gates, where the first and second subscripts indicate Pauli matrices applied to a specific input qubit and the readout qubit, respectively: <inline-formula id="IE16"><mml:math id="IM16" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mo>θ</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>θ</mml:mo><mml:msub><mml:mrow><mml:mi>Z</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">input</mml:mi></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">readout</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE17"><mml:math id="IM17" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">(</mml:mo><mml:mo>θ</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mi>e</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>θ</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">input</mml:mi></mml:mrow></mml:msub><mml:mo>⊗</mml:mo><mml:msub><mml:mrow><mml:mi>X</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">readout</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE18"><mml:math id="IM18" display="inline" overflow="scroll"><mml:mrow><mml:mi>Z</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE19"><mml:math id="IM19" display="inline" overflow="scroll"><mml:mrow><mml:mi>X</mml:mi><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mo>σ</mml:mo></mml:mrow><mml:mi>x</mml:mi></mml:msub></mml:mrow></mml:math></inline-formula>, and the <inline-formula id="IE20"><mml:math id="IM20" display="inline" overflow="scroll"><mml:mo>⊗</mml:mo></mml:math></inline-formula> symbol signifies a tensor product between the operators acting on each spin’s separate subspace (the identity operator operates on all other qubits; i.e. each gate only impacts the explicitly identified qubits). A <italic toggle="yes">layer</italic> of gates is a sequence of one type of such gates applied to each of the inputs in turn.</p>
        <p>The degree of interaction is governed by the angle <italic toggle="yes">θ<sub>n</sub></italic> of the <italic toggle="yes">n</italic>th gate, and the <italic toggle="yes">θ<sub>n</sub></italic> are the variable parameters through which the QNN is trained. We utilized an alternating layer structure, similar to FN: the one-layer QNN consisted of a layer of <italic toggle="yes">R<sub>zx</sub></italic> gates; the two-layer QNN of <italic toggle="yes">R<sub>zx</sub></italic> followed by <italic toggle="yes">R<sub>xx</sub></italic> layers; the three-layer QNN of <inline-formula id="IE21"><mml:math id="IM21" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>x</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mrow><mml:mi>z</mml:mi><mml:mi>x</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> layers; and the six-layer QNNs involved three alternations of <italic toggle="yes">R<sub>zx</sub></italic> and <italic toggle="yes">R<sub>xx</sub></italic> layers.</p>
        <p>After all layers are executed, the <italic toggle="yes">y</italic>-component of the readout is measured, and the expectation value of that measurement is the QNN’s predicted label for the given input, <inline-formula id="IE22"><mml:math id="IM22" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">prediction</mml:mi><mml:mo>=</mml:mo><mml:mo>&lt;</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>|</mml:mo><mml:msup><mml:mrow><mml:mi>U</mml:mi></mml:mrow><mml:mo>†</mml:mo></mml:msup><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">readout</mml:mi></mml:mrow></mml:msub><mml:mi>U</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>|</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula>, where <inline-formula id="IE23"><mml:math id="IM23" display="inline" overflow="scroll"><mml:mrow><mml:mi>U</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> is the time-ordered product of all gates <inline-formula id="IE24"><mml:math id="IM24" display="inline" overflow="scroll"><mml:mrow><mml:mi>U</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mo>θ</mml:mo></mml:mrow><mml:mi>n</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math></inline-formula> in the circuit and <inline-formula id="IE25"><mml:math id="IM25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>Y</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> is the measurement of the <italic toggle="yes">y</italic>-component of the readout qubit. <inline-formula id="IE26"><mml:math id="IM26" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula> describes input qubits initialized according to data <italic toggle="yes">z</italic> and a readout qubit initialized to <inline-formula id="IE27"><mml:math id="IM27" display="inline" overflow="scroll"><mml:mrow><mml:mo>|</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo></mml:mrow></mml:math></inline-formula>. Since quantum measurement collapses the state into a single value, repeated measurements (‘shots’) are required to approximate the circuit’s expectation value, given as <inline-formula id="IE28"><mml:math id="IM28" display="inline" overflow="scroll"><mml:mrow><mml:mn>0</mml:mn><mml:mo>×</mml:mo><mml:mi mathvariant="italic">Fraction</mml:mi><mml:mo> </mml:mo><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mo> </mml:mo><mml:mi mathvariant="italic">zero</mml:mi><mml:mo> </mml:mo><mml:mi mathvariant="italic">measurements</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>×</mml:mo><mml:mi mathvariant="italic">Fraction</mml:mi><mml:mo> </mml:mo><mml:mi>o</mml:mi><mml:mi>f</mml:mi><mml:mo> </mml:mo><mml:mi mathvariant="italic">one</mml:mi><mml:mo> </mml:mo><mml:mi mathvariant="italic">measurements</mml:mi></mml:mrow></mml:math></inline-formula>. In our implementation, the number of circuit executions is governed by the <italic toggle="yes">shots</italic> hyperparameter. Though a higher number of shots correspond to greater measurement accuracy, it requires more circuit executions during model training, especially during parameter update (see below). In simulation, we tested shots values ranging from 20 to 200 for the simulated results and found shots = 100 to be sufficiently accurate without dramatically increasing training time. The loss function, following FN, defined as <inline-formula id="IE29"><mml:math id="IM29" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="italic">loss</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:mrow><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mi>l</mml:mi><mml:msup><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow><mml:mo>*</mml:mo></mml:msup><mml:mi>p</mml:mi><mml:mi mathvariant="italic">rediction</mml:mi></mml:mrow></mml:math></inline-formula>, where <italic toggle="yes">l</italic>(<italic toggle="yes">z</italic>) is the true output label of the training set. This function is summed over all the data points <italic toggle="yes">z</italic> and minimized with respect to the parameters <inline-formula id="IE30"><mml:math id="IM30" display="inline" overflow="scroll"><mml:mrow><mml:mover accent="true"><mml:mi>θ</mml:mi><mml:mo>→</mml:mo></mml:mover></mml:mrow></mml:math></inline-formula>. In prediction tasks, the label is assigned to 0 if prediction &lt;0.5 and 1 otherwise.</p>
        <p>As mentioned earlier, the dataset was balanced by taking the smaller number of ‘disruptive’ data points (i.e. mutation–ligand pairs for which AutoDock Vina indicated a positive change in the binding affinity upon mutation) and randomly selecting an equal number of non-disruptive data points. This balanced dataset was then split in a 1:1:1 ratio between training/validation/testing partitions. The training of the QNNs was carried out through batch stochastic gradient descent, where batches of 20 data points were input into the circuit, and the parameter values were updated after each such batch input. A full run-through of all data points in the training set constituted a complete training epoch. The number of epochs in the training depended on the performance, after each epoch, on the validation set. In the absence of improvement of validation loss after a set number of epochs (the <italic toggle="yes">patience</italic> hyperparameter), the training procedure was stopped. We found that unlike the aforementioned original mQNN, which empirically required weighted mQNN modification for good convergence (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S7</xref>), simple batch stochastic gradient descent was sufficient here.</p>
        <p>We have implemented two types of variational QNNs: models labeled ‘cQNN’ are built using custom wrapper functions that we defined using PyTorch in accordance with loss functions and a finite-difference-based parameter update defined by FN. Models labeled ‘qisQNN’ rely on the Qiskit’s NeuralNetworkClassifier class, which uses an L1 loss function and where the parameter update is governed by a Constrained Optimization BY Linear Approximation optimizer (<ext-link xlink:href="http://qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.html" ext-link-type="uri">qiskit.org/documentation/machine-learning/stubs/qiskit_machine_learning.algorithms.NeuralNetworkClassifier.html</ext-link>). The training of these models is carried out using Qiskit’s QASM simulator (<ext-link xlink:href="http://qiskit.org/documentation/stubs/qiskit.circuit.QuantumCircuit.qasm.html" ext-link-type="uri">qiskit.org/documentation/stubs/qiskit.circuit.QuantumCircuit.qasm.html</ext-link>), while a limited set of test predictions based on these trained models were run on IBM Quantum’s open access five-qubit <italic toggle="yes">ibmq_bogota</italic> system (<ext-link xlink:href="http://quantum-computing.ibm.com" ext-link-type="uri">quantum-computing.ibm.com</ext-link>) (feature groups were restricted to four features for these test runs). For the QASM simulator, no additional noise was added, and so the only noise source was the randomness of the individual shots. We avoided adding any noise to obtain the ideal performance of the QNNs on simulators and to enable a one-to-one comparison with the noise-free classical models. On the other hand, the prediction runs on the real quantum devices were run with 1000 shots each to ensure robust statistics amid the inherent hardware noise in these devices.</p>
        <p>To clarify the ensuing results, we emphasize that we have run many versions of these architectures with a differing number of layers, and with differing numbers of features. The variation in the layers is done to meet the restrictions on the IBM Quantum devices, and we state so in Section 3. The variation in the number of features was done to reflect different application scenarios (human versus non-human), as described above, or to reduce the number of features down to a tractable number for the IBM Quantum devices.</p>
        <p>Further details on the QNN training and evaluation are provided in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Methods</xref>.</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 The workflow</title>
      <p>We present a hybrid classical/quantum computational workflow, HypaCADD, which screens for ligands (i) that would bind favorably to a wild-type protein and (ii) that would be less likely to be affected by amino acid mutations of such a wild-type protein. Because the number of potential ligands and the number of potential mutations are both large, the number of potential ligand–protein–mutation combinations quickly becomes intractable for detailed experimental follow-up. <xref rid="btac789-F1" ref-type="fig">Figure 1</xref> illustrates the multi-step screening process, which uses docking and molecular dynamics to select a smaller number of candidates that would bind to a wild-type protein. Using the thus-selected candidates, we predict the impact of potential mutation with QML after featurization. Given a combination of ligand, unmutated protein structure and amino acid mutation, the ML featurization for predicting the impact of mutation is illustrated in <xref rid="btac789-F3" ref-type="fig">Figure 3</xref>. The net result is a set of ligands that would bind to a target protein, and be robust to an input set of mutations.</p>
      <fig position="float" id="btac789-F3">
        <label>Fig. 3.</label>
        <caption>
          <p>Given a combination of ligand, protein and amino acid mutation, the features used for ML are computed by comparing the docked wild-type structure and docked mutated structure computed using MODELLER and AutoDock Vina. Input and output data are represented in yellow, structure data are in gray and computational methods are in blue</p>
        </caption>
        <graphic xlink:href="btac789f3" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>3.2 Method validation</title>
      <p>The paper, ‘Potential Broad Spectrum Inhibitors of the Coronavirus 3CL<sup><italic toggle="yes">pro</italic></sup>: A Virtual Screening and Structure-Based Drug Design Study’, <xref rid="btac789-B10" ref-type="bibr">Berry <italic toggle="yes">et al.</italic> (2015)</xref> has demonstrated an established approach to identify lead compounds, which have shown promise as inhibitors of 3CL<sup><italic toggle="yes">pro</italic></sup> in coronavirus. To obtain confidence in our screening method, we validated our performance with 13 out of their 19 reported ligands, which had identical ZINC IDs in the version of our drug dataset. Beside the 13 ligands, 29 981 randomly selected ligands from our drug dataset were also used as background for method validation.</p>
      <p>The same molecular docking method, AutoDock Vina, was applied to the 13 ligands from <xref rid="btac789-B10" ref-type="bibr">Berry <italic toggle="yes">et al.</italic> (2015)</xref> and the randomly selected ligands, by docking against the 2ZU2 receptor, a 3D structure of 3CL<sup><italic toggle="yes">pro</italic></sup> in HCoV-229E. All the 13 reported ligands had binding affinities &lt;−7 kcal/mol and 8 of them had binding affinities &lt;−9.5 kcal/mol (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>), which was the screening criterion used in <xref rid="btac789-B10" ref-type="bibr">Berry <italic toggle="yes">et al.</italic> (2015)</xref>. Compared to the random ligands, the reported 13 ligands were highly enriched with ligands that can bind to the 2ZU2 receptor with high affinity (Fisher’s exact test <italic toggle="yes">P</italic>-value &lt;2.2e-16) (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>), indicating we were able to identify high-quality candidates in our initial screening for potential lead compounds.</p>
      <p>MD simulation is a more physically realistic but computationally intensive method to assess the free energy of binding between receptors and ligands. We used the MM-GBSA calculation implemented by the GROMACS software for our MD simulations. In a 0.4 ns simulation, MM-GBSA was applied to a manageable subset of the aforementioned ligands with varying binding affinities predicted by AutoDock Vina. Specifically, based on <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>, 32 ligands were selected, which included all the 19 ligands having binding affinities <inline-formula id="IE31"><mml:math id="IM31" display="inline" overflow="scroll"><mml:mo>≤</mml:mo></mml:math></inline-formula>−9.5 kcal/mol and 13 ligands having binding affinities &gt;−9.5 (with 8 selected from the random set). They were processed with MM-GBSA, as shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S3</xref>. Our comparison showed that ligands with MM-GBSA scores &lt;−30 kcal/mol had an average of −9.5 kcal/mol AutoDock affinity score, which was significantly lower than the rest which had an average of −7.3 kcal/mol (<italic toggle="yes">P</italic>-value: 5.04E-−04). Further, we observe that the MM-GBSA binding affinity of all of <xref rid="btac789-B10" ref-type="bibr">Berry <italic toggle="yes">et al.</italic> (2015)</xref> ligands is significantly stronger than the aforementioned eight randomly drawn ligands with affinity &gt;−9.5 (<italic toggle="yes">P</italic>-value: 2.7E-3, Wilcoxon rank-sum). Given these results, and the fact that the Pearson’s correlation of the AutoDock affinity score and MM-GBSA was 0.668, we suggest that the AutoDock affinity is indicative of MM-GBSA affinity. In spite of that, the accuracy of predictions is likely to further improve with more sophisticated MD simulations.</p>
      <p>Overall, our results demonstrated that virtual screening and simulation combined can reliably serve as the foundation for predicting lead compounds for further optimization and selection.</p>
      <sec>
        <label>3.2.1</label>
        <title>Defining benchmarks and accuracy of virtual screening for SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup></title>
        <p>Recently, there have been several resolved X-ray crystallographic structures of SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup>; however, most of those structures are complexed with an irreversible substrate-like inhibitor. At the time of this study, only one structure (PDB code: 6W63) represented SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> with a reversible dipeptide inhibitor (X77). This structure and inhibitor could serve as a benchmark for virtual drug screening for SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup>. To validate the docking method for SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup>, AutoDock Vina and GROMACS MD were applied to the receptor and inhibitor X77 in the 6W63 structure. The root-mean square deviation between the experimental structure of X77 and best predicted pose of docking by AutoDock Vina was 0.814 Å, which was below the well-defined 2 Å benchmark to assess the accuracy of docking methodology (<xref rid="btac789-B54" ref-type="bibr">Wagner <italic toggle="yes">et al.</italic>, 2019</xref>). The overlay of the crystal structure of X77 and docked pose is shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S1</xref>. The AutoDock Vina binding affinity and MM-GBSA between the receptor and inhibitor of 6W63 were −8.3 and −39.98 kcal/mol, respectively.</p>
      </sec>
      <sec>
        <label>3.2.2</label>
        <title>Molecular docking and molecular dynamics for SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup></title>
        <p>Confirming results of <xref rid="btac789-B10" ref-type="bibr">Berry <italic toggle="yes">et al.</italic> (2015)</xref> and benchmarking on the 6W63 structure provided us confidence to use AutoDock Vina and GROMACS MD as high-throughput tools for virtual screening. We further applied our protocol to SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> against the 29 981 randomly selected ligands and 13 previously reported ligands, as aforementioned. Comparison of AutoDock results of the two receptors showed the ligands’ binding affinities to 2ZU2 and 6W63 were highly correlated but some differences existed as shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figures S2 and S3</xref>, which might be due to the highly similar but not identical amino acid sequences between HCoV-229E 3CL<sup><italic toggle="yes">pro</italic></sup> and SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup>. For example, the 13 ligands highlighted in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S2</xref> shows that ligands with a high affinity (&lt;−9.0 kcal/mol) for 2ZU2 did not have affinities as high for 6W63. There were 40 ligands with binding affinity <inline-formula id="IE32"><mml:math id="IM32" display="inline" overflow="scroll"><mml:mo>≤</mml:mo></mml:math></inline-formula>−9.5 kcal/mol for SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup>, of which only four overlapped with those for HCoV-229E (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S3</xref>).</p>
        <p>Furthermore, our MD simulations ran successfully on all the ligands having binding affinity <inline-formula id="IE34"><mml:math id="IM34" display="inline" overflow="scroll"><mml:mo>≤</mml:mo></mml:math></inline-formula>−9.5 kcal/mol and on X77 (<xref rid="btac789-T1" ref-type="table">Table 1</xref>). We surmised that a longer simulation time, such as 10 ns, would yield more stable and accurate results (though it takes a much longer runtime) and so we performed a 10 ns simulation in addition to the 0.4 ns to achieve the best results for 6W63. We observed a Spearman correlation of 0.696 (<italic toggle="yes">P</italic>-value =2.16E−7) between the 0.4 and 10 ns simulations. Results in <xref rid="btac789-T1" ref-type="table">Table 1</xref> show that there were 13 ligands in the 10 ns simulation with a GBSA score lower than that of X77. Of these ligands, ZINC000036707984 had the lowest MM-GBSA and ZINC000016020583 had the lowest AutoDock Vina affinity score, indicating these two ligands could have a higher or comparable binding affinity to the 6W63 receptor when compared to X77. Therefore, they were selected as a manageable set of potential lead compounds for our further investigation. Along with the reference inhibitor X77, they were evaluated for the potential impacts resulting from possible variants in the 6W63 receptor.
</p>
        <table-wrap position="float" id="btac789-T1">
          <label>Table 1.</label>
          <caption>
            <p>Binding affinities (<inline-formula id="IE33"><mml:math id="IM33" display="inline" overflow="scroll"><mml:mo>≤</mml:mo></mml:math></inline-formula>−9.5 kcal/mol) from molecular docking using the 6W63 receptor and free energies of binding predicted by MM-GBSA that were lower than that of X77 in a 10 ns MD simulation</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Ligand</th>
                <th rowspan="1" colspan="1">VinaAffinity</th>
                <th rowspan="1" colspan="1">GBSA 0.4ns</th>
                <th rowspan="1" colspan="1">GBSA 10ns</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">ZINC000036707984</td>
                <td rowspan="1" colspan="1">−9.7</td>
                <td rowspan="1" colspan="1">−48.6984</td>
                <td rowspan="1" colspan="1">−49.8774</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000034758692</td>
                <td rowspan="1" colspan="1">−9.6</td>
                <td rowspan="1" colspan="1">−42.7249</td>
                <td rowspan="1" colspan="1">−44.7871</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000097480050</td>
                <td rowspan="1" colspan="1">−9.6</td>
                <td rowspan="1" colspan="1">−43.0136</td>
                <td rowspan="1" colspan="1">−44.2139</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000096114211</td>
                <td rowspan="1" colspan="1">−9.6</td>
                <td rowspan="1" colspan="1">−43.2604</td>
                <td rowspan="1" colspan="1">−44.1934</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000096115318</td>
                <td rowspan="1" colspan="1">−9.9</td>
                <td rowspan="1" colspan="1">−36.6151</td>
                <td rowspan="1" colspan="1">−43.1172</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000035424775</td>
                <td rowspan="1" colspan="1">−9.6</td>
                <td rowspan="1" colspan="1">−37.8856</td>
                <td rowspan="1" colspan="1">−42.7367</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000230129735</td>
                <td rowspan="1" colspan="1">−10.3</td>
                <td rowspan="1" colspan="1">−43.2664</td>
                <td rowspan="1" colspan="1">−42.4759</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000016020583</td>
                <td rowspan="1" colspan="1">−10.4</td>
                <td rowspan="1" colspan="1">−38.5203</td>
                <td rowspan="1" colspan="1">−41.8849</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000018266226</td>
                <td rowspan="1" colspan="1">−10.4</td>
                <td rowspan="1" colspan="1">−38.262</td>
                <td rowspan="1" colspan="1">−41.6461</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000096115318</td>
                <td rowspan="1" colspan="1">−9.9</td>
                <td rowspan="1" colspan="1">−44.3969</td>
                <td rowspan="1" colspan="1">−41.6005</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000035851646</td>
                <td rowspan="1" colspan="1">−9.5</td>
                <td rowspan="1" colspan="1">−31.9911</td>
                <td rowspan="1" colspan="1">−41.5783</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000032205245</td>
                <td rowspan="1" colspan="1">−9.7</td>
                <td rowspan="1" colspan="1">−38.9963</td>
                <td rowspan="1" colspan="1">−40.9523</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">ZINC000016001299</td>
                <td rowspan="1" colspan="1">−10.1</td>
                <td rowspan="1" colspan="1">−36.6569</td>
                <td rowspan="1" colspan="1">−40.5696</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">X77</td>
                <td rowspan="1" colspan="1">−8.3</td>
                <td rowspan="1" colspan="1">−41.5873</td>
                <td rowspan="1" colspan="1">−39.9814</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
      <sec>
        <label>3.2.3</label>
        <title>Evaluation of virus mutations’ impact on the interactions of the lead compounds with SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup></title>
        <p>GenoDock (<xref rid="btac789-B55" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2019</xref>) is a hybrid physical-statistical classifier to predict the impacts of variants on protein–drug interactions using genomic, structural and chemical features; however, due to the focus on human proteins, some of the features used in the published GenoDock classifier were human-specific and not applicable to viral genomes. In order to make the GenoDock framework applicable to non-human genomes, such as viruses and to further improve the predictive performance, we made several modifications and improvements including removing human-specific features (all the conservation scores and allele frequencies), feature normalization and making use of an ensemble method. The final set of features employed are: volume change, polarity change, distance, molecular weight, H-bond donor, H-bond acceptor, rotatable bond, polar surface area and bind site True/False. <xref rid="btac789-T2" ref-type="table">Table 2</xref> demonstrates that the new virus-genome-compatible classifier with random forest implementation had comparable performance compared to the original GenoDock classifier with random forest implementation based on a 10-fold cross-validation.</p>
        <table-wrap position="float" id="btac789-T2">
          <label>Table 2.</label>
          <caption>
            <p>Comparison of the original GenoDock classifier and new classifier, which is virus-genome compatible after removing human-specific features</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="center" span="1"/>
              <col valign="top" align="center" span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1">Original</th>
                <th rowspan="1" colspan="1">Human-specific features removed</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Accuracy</td>
                <td rowspan="1" colspan="1">0.965 (0.005)</td>
                <td rowspan="1" colspan="1">0.964 (0.006)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1"><italic toggle="yes">F</italic>1</td>
                <td rowspan="1" colspan="1">0.701 (0.040)</td>
                <td rowspan="1" colspan="1">0.705 (0.047)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Recall</td>
                <td rowspan="1" colspan="1">0.640 (0.050)</td>
                <td rowspan="1" colspan="1">0.663 (0.061)</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Precision</td>
                <td rowspan="1" colspan="1">0.779 (0.054)</td>
                <td rowspan="1" colspan="1">0.756 (0.056)</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn2">
              <p><italic toggle="yes">Note</italic>: Both classifiers were implemented using the random forest machine-learning model. The numbers in parentheses are standard deviations of the performance scores.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <label>3.2.4</label>
        <title>Classical computing model performance on external validation set</title>
        <p>We utilized Genodock’s 10,281 ‘pseudo-gold-standard’ training points based on the use of AutoDock Vina to quantify the impacts of amino acid variations on ligand binding, as well as 86 validation data points from the independent Platinum database (<xref rid="btac789-B39" ref-type="bibr">Pires <italic toggle="yes">et al.</italic>, 2015</xref>) for our non-human-feature classifiers. The Platinum database results originate from experimental measurements of mutation effects. We retrained a model using GenoDock’s class-balanced random forest method with the pseudo-gold-standard set, and evaluated against the Platinum validation set. The classification method yielded an AUC of 0.628, which was on par with the original publication. Given the relative scarcity of experimental data measuring the impacts of amino acid mutation on ligand binding, and our consequent training on a computational binding affinity dataset, we see this result as providing reasonable validation for our method. We, however, hope that the future use of experimental data to train models would further improve the agreement.</p>
      </sec>
      <sec>
        <label>3.2.5</label>
        <title>QC model performance on external validation set</title>
        <p>Multiple formulations of QNNs have been explored to compare the performance and practicality of customized versus published formulations. While the primary focus of this article is on demonstrating the application of our computational workflow on SARS-CoV-2 proteins, we also trained our cQNN and qisQNN models on all the feature groups of the original GenoDock publication, including human-specific features, such as conservation scores. Our results on the GenoDock and Platinum datasets (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figs S4 and S5</xref>, respectively) indicate very similar performance of three-layer QNNs with the random forest model (in terms of AUC values). In all cases, the performance of the (approximately parameter-number-matched) classical NNs was on par with the best QNN model. With this confidence in the performance of the QNNs on a more general set of feature groups, we proceeded to apply the cQNN and qisQNN models to the non-human feature group relevant to the SARS-CoV-2 protein. These models performed very well on a GenoDock test set (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S6</xref>). The results for the Platinum dataset below are from three-layer cQNNs and qisQNNs.</p>
        <p>The weighted mQNN (see Section 2) is a reformulation of PennyLane’s margin classifier (unweighted and trained on 500 random samples from training set per iteration). Non-human features from Genodock are fit into a four-qubit formulation. Due to the high computational cost, we trained the model with one half of the pseudo-gold-standard training set, then validated on the hold-out part of the training set. <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S7</xref> shows the convergence of the training process. It reveals that the weighted cost function stabilized the convergence when compared to the unweighted. The classification performance is demonstrated in <xref rid="sup1" ref-type="supplementary-material">Supplementary Figure S8</xref>. It shows that the mQNN could achieve an AUC as high as 0.937 on the validation set.</p>
        <p>We applied our quantum modeling methods with quantum simulators to the Platinum dataset for the comparisons in <xref rid="btac789-F4" ref-type="fig">Figure 4</xref> and <xref rid="btac789-T3" ref-type="table">Table 3</xref>. <xref rid="btac789-F4" ref-type="fig">Figure 4</xref> shows the true positive rate versus false positive rate, where positive calls were made by applying different thresholds to measure, e.g. the <italic toggle="yes">z</italic>-projection of output qubit. We note that the density of points for each curve can vary depending on the number of tie scores (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S4</xref>). <xref rid="btac789-T3" ref-type="table">Table 3</xref> shows the <italic toggle="yes">F</italic>1, sensitivity and precision of binary prediction by the model, as well as the AUC (<xref rid="sup1" ref-type="supplementary-material">Supplementary Methods</xref> S3a), which is a binary-threshold-invariant measurement of model performance. The AUC indicates the sensitivity–specificity trade-offs if one wants to, e.g. increase specificity at the cost of sensitivity. We also note that the precision was calculated from binary calls under heavy class imbalance in favor of positive labels, as discussed in the <xref rid="sup1" ref-type="supplementary-material">Supplementary Material</xref>.</p>
        <fig position="float" id="btac789-F4">
          <label>Fig. 4.</label>
          <caption>
            <p>Receiver operating characteristic evaluated on the 86 validation data points from the Platinum database</p>
          </caption>
          <graphic xlink:href="btac789f4" position="float"/>
        </fig>
        <table-wrap position="float" id="btac789-T3">
          <label>Table 3.</label>
          <caption>
            <p>Sensitivity, precision, specificity and <italic toggle="yes">F</italic>1 score of the models with default classification thresholds</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Method</th>
                <th rowspan="1" colspan="1">AUC</th>
                <th rowspan="1" colspan="1"><italic toggle="yes">F</italic>1</th>
                <th rowspan="1" colspan="1">Sensitivity</th>
                <th rowspan="1" colspan="1">Precision</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">GenoDock</td>
                <td rowspan="1" colspan="1">0.63</td>
                <td rowspan="1" colspan="1">0.83</td>
                <td rowspan="1" colspan="1">0.88</td>
                <td rowspan="1" colspan="1">0.79</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">GenoDock w/SVM</td>
                <td rowspan="1" colspan="1">0.56</td>
                <td rowspan="1" colspan="1">0.83</td>
                <td rowspan="1" colspan="1">0.82</td>
                <td rowspan="1" colspan="1">0.84</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">cQNN</td>
                <td rowspan="1" colspan="1">0.71</td>
                <td rowspan="1" colspan="1">0.82</td>
                <td rowspan="1" colspan="1">0.80</td>
                <td rowspan="1" colspan="1">0.84</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">qisQNN</td>
                <td rowspan="1" colspan="1">0.65</td>
                <td rowspan="1" colspan="1">0.82</td>
                <td rowspan="1" colspan="1">0.80</td>
                <td rowspan="1" colspan="1">0.84</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Weighted mQNN: 3 l, 0.15 m</td>
                <td rowspan="1" colspan="1">0.57</td>
                <td rowspan="1" colspan="1">0.80</td>
                <td rowspan="1" colspan="1">0.77</td>
                <td rowspan="1" colspan="1">0.84</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Weighted mQNN: 3 l, 0.5 m</td>
                <td rowspan="1" colspan="1">0.56</td>
                <td rowspan="1" colspan="1">0.83</td>
                <td rowspan="1" colspan="1">0.82</td>
                <td rowspan="1" colspan="1">0.84</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Weighted mQNN: 6 l, 0.15 m</td>
                <td rowspan="1" colspan="1">0.60</td>
                <td rowspan="1" colspan="1">0.82</td>
                <td rowspan="1" colspan="1">0.80</td>
                <td rowspan="1" colspan="1">0.83</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Weighted mQNN: 6 l, 0.5 m</td>
                <td rowspan="1" colspan="1">0.54</td>
                <td rowspan="1" colspan="1">0.83</td>
                <td rowspan="1" colspan="1">0.82</td>
                <td rowspan="1" colspan="1">0.84</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn3">
              <p><italic toggle="yes">Note</italic>: l and m denote layer and margin setting.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>The cQNN method had higher AUC and sensitivity in the high specificity regime compared to other methods, classical or quantum that we considered here. Importantly, these models designed for near-term quantum devices performed on par with GenoDock, a classical model that was not reduced in its complexity for these comparisons. As an additional corroboration of the quality of the results, we also trained a classical dense NN, which was approximately matched in terms of the number of parameters. The classical NN (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S9</xref>) performed well, showing an AUC of 0.68. This demonstrates that specialized QNNs have, at least, a representational power that is comparable to classical models for the current dataset. However, we did notice that the performance of the QNN models on the external validation set was heavily correlated with a single variable: <italic toggle="yes">bind_site</italic>, a binary indicator variable labeling whether a mutation occurs within the binding site of a ligand or not. For example, if the mutation was experimentally observed to be disruptive but did not occur in the binding site, the cQNN and qisQNN models would incorrectly label the data point as non-disruptive. This was also borne out in the cross-feature group comparisons we conducted using the original GenoDock and Platinum datasets (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figs S4 and S5</xref>), where feature groups that included the <italic toggle="yes">bind_site</italic> and <italic toggle="yes">distance</italic> parameters (both of which are related) performed better. The outsize influence of these variables on the performance of the models was also found in the GenoDock analysis (<xref rid="btac789-B55" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2019</xref>), but does not imply the absence of influence by other features as seen in the original publication. There are some subtle differences in performance between the different feature groups that all include <italic toggle="yes">bind_site</italic> as a feature. It is likely, however, that fully capturing more complex cross-feature interactions would need more qubits and more complex gate architectures. For the mQNN, we see definite performance improvement when class imbalance is addressed by the weighted cost function. We see increased performance when the network is increased from 3 to 6 layers and margin is decreased from 0.5 to 0.15, and when class imbalances are compensated by weighting of the loss function.</p>
        <p><bold>The question of QC advantages:</bold> We do not claim the positive results observed for the cQNN and qisQNN as definitive evidence of QC advantages. There are slight differences in the performance of GenoDock and the QNNs on the Platinum dataset predictions: as mentioned above, the QNNs seem to heavily depend on the <italic toggle="yes">bind_site</italic> variable, sometimes leading to incorrect predictions; GenoDock’s predictions also carry a strong dependence on <italic toggle="yes">bind_site</italic>, but deviate in a small number of cases from being completely determined by this variable. This means that the trained representations of the underlying probability distributions of outputs conditional on inputs are different, without any clear supremacy of one model over the other. We see our approach here as <italic toggle="yes">priming</italic> the problem for more complex QC solutions. That is, provided with this particular way of contending with the problem of mutational impact quantification, we foresee extensions to the model that may lead to more parsimonious representations of the data structure, through improvements in computational complexity (smaller numbers of operations than classical counterparts) or model complexity (a richer model in QC for the same numbers of parameters). Examples of ideas being considered include the use of quantum embedding kernels (<xref rid="btac789-B29" ref-type="bibr">Lloyd, 2020</xref>) to allow non-linearities in the representation of data, and amplitude encoding (e.g. <xref rid="btac789-B43" ref-type="bibr">Schuld <italic toggle="yes">et al.</italic>, 2018</xref>) to possibly compress a higher dimensional problem into a smaller number of qubits. With the formulation provided here as a foundation, we hope that heuristic evidence of QC advantages and interesting differences in representation might be forthcoming in further work in this area.</p>
      </sec>
      <sec>
        <label>3.2.6</label>
        <title>SARS-CoV-2 variant impact predictions in simulation and on real QC devices</title>
        <p>With the quantum formulation established to be at least on par with non-quantum methods, we applied the models to predict the impact of amino acid substitution in the SARS-CoV-2 virus 3CL<sup><italic toggle="yes">pro</italic></sup> on protein–ligand binding. As of January 2021, 98 amino acid substitution variations had been detected in SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S10</xref>). The ligand candidates were chosen to be the X77 ligand for its known crystalized structure with 6W63, ZINC000016020583 for its lowest docking affinity and ZINC000036707984 for its lowest MM-GBSA value (<xref rid="btac789-T1" ref-type="table">Table 1</xref>).</p>
        <p>Because of the scarcity of quantum computer time, we trained all models using quantum simulators. We subsequently established consistency between test set prediction results when executed on quantum simulators and on real quantum computers. Again, addressing resource limitations, we separately trained one- and two-layer cQNNs on simulators and used those for prediction on the real devices. We selected, by Vina docking affinity change estimation, three mutations that would likely cover some positive and negative calls for the ligands, and compared the predictions from simulators and real quantum computers. <xref rid="btac789-T4" ref-type="table">Table 4</xref> shows that cQNN, the best performing model, was consistent between simulation and 1000-shot measurement on an IBM five-qubit device (the <italic toggle="yes">ibmq_bogota</italic> system) with a quantum volume of 32. Interestingly, we had to increase the number of shots relative to the simulation results in order to get robust statistics. Additionally, we found that the noise in the output expectation values increases with an increase in the number of layers, implying that each set of new gates added to a circuit brings further noise. This can be seen in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S5</xref>, where in addition to the same predicted output values as in <xref rid="btac789-T4" ref-type="table">Table 4</xref>, we included the expectation values output by one- and two-layer circuits (and thresholded at 0.5 to determine the final output label of 0 or 1). With two layers, the expectation values appear to cluster closer to the threshold of 0.5, relative to the one-layer case. In summary, while the expectation is that simulated values will deviate from real device-generated results due to decoherence and noise in the real devices, for the small number of data points considered, we find no difference in predictions. However, we see the effects of device noise in the expectation values observed and in the number of shots required for robust statistics.</p>
        <table-wrap position="float" id="btac789-T4">
          <label>Table 4.</label>
          <caption>
            <p>Comparison of outputs between simulation and real quantum computer on the 3CL<sup><italic toggle="yes">pro</italic></sup> mutations</p>
          </caption>
          <table frame="hsides" rules="groups">
            <colgroup span="1">
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="left" span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
              <col valign="top" align="char" char="." span="1"/>
            </colgroup>
            <thead>
              <tr>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1"/>
                <th rowspan="1" colspan="1"/>
                <th align="left" rowspan="1" colspan="1">cQNN</th>
                <th align="left" rowspan="1" colspan="1">cQNN</th>
                <th align="left" rowspan="1" colspan="1">cQNN</th>
                <th align="left" rowspan="1" colspan="1">Weighted mQNN</th>
                <th align="left" rowspan="1" colspan="1">Weighted mQNN</th>
                <th align="left" rowspan="1" colspan="1">Weighted mQNN</th>
              </tr>
              <tr>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="left" rowspan="1" colspan="1">One-layer</th>
                <th align="left" rowspan="1" colspan="1">Two-layer</th>
                <th align="left" rowspan="1" colspan="1">Six-layer, 0.15 margin</th>
                <th align="left" rowspan="1" colspan="1">Six-layer, 0.15 margin</th>
                <th align="left" rowspan="1" colspan="1">Six-layer, 0.15 margin</th>
              </tr>
              <tr>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="center" rowspan="1" colspan="1"/>
                <th align="left" rowspan="1" colspan="1">Five-qubit IBM</th>
                <th align="left" rowspan="1" colspan="1">Five-qubit IBM</th>
                <th align="left" rowspan="1" colspan="1">PennyLane</th>
                <th align="left" rowspan="1" colspan="1">DM1</th>
                <th align="left" rowspan="1" colspan="1">Rigetti</th>
              </tr>
              <tr>
                <th align="left" rowspan="1" colspan="1">Position</th>
                <th align="left" rowspan="1" colspan="1">Ref</th>
                <th align="left" rowspan="1" colspan="1">Alt</th>
                <th align="left" rowspan="1" colspan="1">Ligand</th>
                <th align="left" rowspan="1" colspan="1">Simulation</th>
                <th align="left" rowspan="1" colspan="1">1000 shots</th>
                <th align="left" rowspan="1" colspan="1">1000 shots</th>
                <th align="left" rowspan="1" colspan="1">Simulation</th>
                <th align="left" rowspan="1" colspan="1">1000 shots</th>
                <th align="left" rowspan="1" colspan="1">1000 shots</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">160</td>
                <td rowspan="1" colspan="1">CYS</td>
                <td rowspan="1" colspan="1">PHE</td>
                <td rowspan="1" colspan="1">X77</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">168</td>
                <td rowspan="1" colspan="1">PRO</td>
                <td rowspan="1" colspan="1">SER</td>
                <td rowspan="1" colspan="1">X77</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">188</td>
                <td rowspan="1" colspan="1">ARG</td>
                <td rowspan="1" colspan="1">SER</td>
                <td rowspan="1" colspan="1">X77</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">160</td>
                <td rowspan="1" colspan="1">CYS</td>
                <td rowspan="1" colspan="1">PHE</td>
                <td rowspan="1" colspan="1">ZINC000016020583</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">168</td>
                <td rowspan="1" colspan="1">PRO</td>
                <td rowspan="1" colspan="1">SER</td>
                <td rowspan="1" colspan="1">ZINC000016020583</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">188</td>
                <td rowspan="1" colspan="1">ARG</td>
                <td rowspan="1" colspan="1">SER</td>
                <td rowspan="1" colspan="1">ZINC000016020583</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">160</td>
                <td rowspan="1" colspan="1">CYS</td>
                <td rowspan="1" colspan="1">PHE</td>
                <td rowspan="1" colspan="1">ZINC000036707984</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">168</td>
                <td rowspan="1" colspan="1">PRO</td>
                <td rowspan="1" colspan="1">SER</td>
                <td rowspan="1" colspan="1">ZINC000036707984</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">188</td>
                <td rowspan="1" colspan="1">ARG</td>
                <td rowspan="1" colspan="1">SER</td>
                <td rowspan="1" colspan="1">ZINC000036707984</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">1</td>
                <td rowspan="1" colspan="1">0</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <fn id="tblfn4">
              <p><italic toggle="yes">Note</italic>: Predictions are indicated as 0 or 1 depending on whether a mutation is predicted to be non-disruptive or disruptive to binding of the ligand, respectively. The results shown include: a three-layer (FN architecture) cQNN circuit where both training and predictions were run using the QASM simulator; and one- and two-layer cQNN circuits trained on the QASM simulator, but with prediction runs on an IBM Quantum five-qubit system (marked by the term ‘real’), with 1000 shots in each case; a weighted mQNN circuit with predictions conducted through simulation (default Pennylane simulator with six-layer and 0.15 margin); a six-layer, 0.15 margin, weighted mQNN circuit with predictions conducted through runs on an AWS’s Braket DM1 system, 1000 shots; a six-layer, 0.15 margin, weighted mQNN circuit with predictions conducted through runs on a Rigetti system, 1000 shots.</p>
            </fn>
          </table-wrap-foot>
        </table-wrap>
        <p>We also observed that, unlike the IBM platform, the simulated values produced by PennyLane’s analytical simulator agreed poorly with those produced on the Rigetti Aspen-10 hardware. To understand this, we used the AWS’s SV1 and DM1 simulators to perform 1000-shot simulation with the PennyLane framework, and the SV1 and DM1 results agreed with those of PennyLane’s simulator. We also used the AWS’s Braket API to perform simple individual qubit RX rotations followed by <italic toggle="yes">z</italic>-direction measurements as well as to perform pairwise CNOT operations followed by <italic toggle="yes">z</italic>-direction measurements. Using the <italic toggle="yes">disable_qubit_rewiring</italic> option in the API, we disabled automatic reassignment of the API’s logical qubits onto physical qubits, and we observed that the <italic toggle="yes">z</italic>-direction measurements deviated from simulation/analytical values on a physical qubit-by-qubit basis, and the amount of deviation could be as much as one order of magnitude from one physical qubit to another. This qubit-dependent, heterogeneous noise could in principle be mitigated by a weighted mQNN with four qubits and limited nearest-neighbor CNOT operations, which maps well onto the nearest-neighbor physical connectivity of the Rigetti system (e.g. qubit 1/2/15/16 in <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S11</xref>). However, the encoding of 10 features into four qubits is performed by an extra sequence of gate operations (<xref rid="btac789-B33" ref-type="bibr">Mottonen <italic toggle="yes">et al.</italic>, 2005</xref>) including additional pairwise connectivity that is not present in the Rigetti’s topology if the operations were to be restricted to involve only four qubits. From AWS’s reported metadata, we observed that the PennyLane four-qubit circuit was transpiled into operations with a higher number of gates and operations before execution on the Rigetti machine. We further confirmed this by modifying the <italic toggle="yes">aws-pennylane</italic> plugin to disable qubit reassignment and transpilation, which induced an infrastructure error about missing two-qubit coupling for the CNOT operations (confirmed to be the ones missing from the hardware) that were required to encode 10 features into four qubits. While the PennyLane framework can indeed produce consistent results among all three simulators, actual execution of non-trivial circuits on real physical hardware, such as Rigetti might be hampered by qubit-dependent, heterogeneous noise. We observed that cQNN, developed within the IBM ecosystem, has the best reproducibility between simulated and real quantum simulation.</p>
        <p>Having studied the correlations between real and simulated quantum computation, we make more predictions with the quantum simulator. The models’ predictions are listed in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table S6</xref>. For binary prediction over all mutations and ligands, the cQNN and qisQNN had 100% concordance and the cQNN and Genodock had 99.7% concordance, whereas cQNN and weighted mQNN had 75.2% concordance. To note, X77 was predicted to be susceptible to the mutations VAL20ILE and ILE43VAL, while ZINC000016020583 was predicted to be not affected; furthermore, ZINC000016020583 had stronger binding tendency according to both docking and 10 ns molecular dynamics simulation (<xref rid="btac789-T1" ref-type="table">Table 1</xref>).</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>We establish a hybrid system of classical and QC to advance CADD. It utilizes well-established virtual screening methods to identify lead compounds. It leverages ML to build an improved physical-statistical classifier capable of predicting the effect of variants from hypothetical and real mutations in receptor sequences of any genome to provide insights into drug efficacy. From screening to lead identification and to variant effect prediction, our approach can work not only in classical computing, but also in conjunction with QC to eventually go beyond the current limits of classical computers. We demonstrated its performance and capability by applying the system to viral genomes with QML.</p>
    <p>Antiviral drugs targeting SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> could help to fight against the COVID-19 pandemic. As a proof of concept, we validated our screening method with the HCoV-229E 3CL<sup><italic toggle="yes">pro</italic></sup> protein. We then applied our system to the SARS-CoV-2 3CL<sup><italic toggle="yes">pro</italic></sup> protein, where two lead compounds, ZINC000016020583 and ZINC000036707984, were identified as potential inhibitors from 30 000 compounds subsampled from a drug dataset of over 11 million compounds. The new coronavirus is known to mutate frequently, sometimes with serious consequences in terms of immune evasion. It is essential to efficiently and reliably predict the effect of the mutations on any target drugs in the design process and to know the corresponding efficacy of a candidate drug. We therefore further applied our improved method of variant effect prediction to the identified compounds by using ML and both classical and QC techniques, demonstrating that the performance of QC is on par with classical computing. Specifically, QML models have been shown to have sufficient representational power to capture the structure in large-scale biological data. Our results showed indicative and insightful results based on the known mutations thus far, proving the utility of our approach for an advanced, promising and robust drug design.</p>
    <p>With the rapid advancement of computer power and algorithms, ML has become an indispensable tool to discover patterns in large-scale, high-dimensional data. We explored the emerging field of QML, which is the interplay of quantum computers and ML. Because of its exploitation of operations in the <inline-formula id="IE35"><mml:math id="IM35" display="inline" overflow="scroll"><mml:mrow><mml:msup><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:msup></mml:mrow></mml:math></inline-formula>-dimensional Hilbert space (for <italic toggle="yes">N</italic> qubits), QC can solve certain problems that are hard for classical computers [quantumalgorithmzoo.org (<xref rid="btac789-B45" ref-type="bibr">Shor, 1997</xref>; <xref rid="btac789-B52" ref-type="bibr">Van Dam <italic toggle="yes">et al.</italic>, 2006</xref>)]. In this article, we demonstrated several QML formulations trained on data that was highly imbalanced and was of computational origin, and then benchmarked their performance on test data of experimental origin. The limited, orthogonal Platinum test data showed that the QML models performed at least on par with the established classical ML methods trained on the same dataset. Lastly, we assessed the fidelity of quantum simulators with respect to real quantum computers. Our classical-quantum hybrid approach demonstrated how QC can be combined with classical computing robustly, with significant potential for added value in complex tasks, such as protein-ligand binding predictions. As quantum computers become more powerful and stable, and more quantum-specific algorithms become available, we foresee that the utility of our approach will grow. For example, QC can be used for protein design/folding (<xref rid="btac789-B37" ref-type="bibr">Perdomo <italic toggle="yes">et al.</italic>, 2008</xref>; <xref rid="btac789-B38" ref-type="bibr">Perdomo-Ortiz <italic toggle="yes">et al.</italic>, 2012</xref>), improving QM/MM calculation in molecular docking (<xref rid="btac789-B4" ref-type="bibr">Arodola <italic toggle="yes">et al.</italic>, 2017</xref>), modeling with neural-network quantum states (<xref rid="btac789-B13" ref-type="bibr">Choo <italic toggle="yes">et al.</italic>, 2020</xref>), as well as many other essential computational tasks.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btac789_Supplementary_Data</label>
      <media xlink:href="btac789_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank Eric J. Sorin for the advice on forcefields, Roman Krems for helpful discussions on quantum computing and Jason Zhu and Shrikant Kshirsagar for technical support on the AWS Braket Service. We acknowledge the use of IBM Quantum services for this work. The views expressed are those of the authors, and do not reflect the official policy or position of IBM, the IBM Quantum team, AWS, or the AWS Quantum Solutions team.</p>
    <sec>
      <title>Funding</title>
      <p>HypaHub and Yale University jointly funded and conducted the research to explore the utility and usability of quantum computing. HypaHub funded its employees to perform the research and the AWS computation with its own funding. M.B.G. acknowledges the support of the National Institutes of Health (NIH) grant [MH116492-05]. The software generated using the NIH funding is made freely available.</p>
      <p><italic toggle="yes">Conflict of Interest</italic>: M.B.G is scientific advisor at HypaHub, Inc. B.L., L.Y., and H.Y.K.L. have filed patent applications for this invention.</p>
    </sec>
  </ack>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying the QNN analysis are available with the Jupyter Notebooks for academic use on GitHub: <ext-link xlink:href="https://www.github.com/hypahub/hypacadd_notebook" ext-link-type="uri">https://www.github.com/hypahub/hypacadd_notebook</ext-link>. The datasets were derived from sources in the public domain: drug dataset from zinc.docking.org, receptor structures from rcsb.org, SARS-COV-2 mutations from covidcg.org, Genodock dataset from the supplmenental material of <xref rid="btac789-B55" ref-type="bibr">Wang <italic toggle="yes">et al.</italic>, 2019</xref>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btac789-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Abraham</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>GROMACS: high performance molecular simulations through multi-level parallelism from laptops to supercomputers</article-title>. <source>SoftwareX</source>, <volume>1-2</volume>, <fpage>19</fpage>–<lpage>25</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Adzhubei</surname><given-names>I.</given-names></string-name></person-group><etal>et al</etal> (<year>2013</year>) <article-title>Predicting functional effect of human missense mutations using PolyPhen-2</article-title>. <source>Curr. Protoc. Hum. Genet</source>., <volume>Chapter 7</volume>, <fpage>Unit7.20</fpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alvarado</surname><given-names>W.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Understanding the enzyme–ligand complex: insights from all-atom simulations of butyrylcholinesterase inhibition</article-title>. <source>J. Biomol. Struct. Dyn</source>., <volume>38</volume>, <fpage>1028</fpage>–<lpage>1041</lpage>.<pub-id pub-id-type="pmid">30909811</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Arodola</surname><given-names>O.A.</given-names></string-name></person-group><etal>et al</etal> (<year>2017</year>) <article-title>Quantum mechanics implementation in drug-design workflows: does it really help?</article-title><source>Drug Des. Devel. Ther</source>., <volume>11</volume>, <fpage>2551</fpage>–<lpage>2564</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ball</surname><given-names>P.</given-names></string-name></person-group> (<year>2021</year>) <article-title>First quantum computer to pack 100 qubits enters crowded race</article-title>. <source>Nature</source>, <volume>599</volume>, <fpage>542</fpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Banchi</surname><given-names>L.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Molecular docking with Gaussian Boson Sampling</article-title>. <source>Sci. Adv</source>., <volume>6</volume>, <fpage>eaax1950</fpage>.<pub-id pub-id-type="pmid">32548251</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Batista</surname><given-names>P.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2006</year>) <article-title>Molecular dynamics simulations applied to the study of subtypes of HIV-1 protease</article-title>. <source>Cell Biochem. Biophys</source>., <volume>44</volume>, <fpage>395</fpage>–<lpage>404</lpage>.<pub-id pub-id-type="pmid">16679526</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berendsen</surname><given-names>H.J.C.</given-names></string-name></person-group><etal>et al</etal> (<year>1995</year>) <article-title>GROMACS: a message-passing parallel molecular dynamics implementation</article-title>. <source>Comput. Phys. Commun</source>., <volume>91</volume>, <fpage>43</fpage>–<lpage>56</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B9">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Bergholm</surname><given-names>V.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) PennyLane: automatic differentiation of hybrid quantum-classical computations. arXiv preprint:1811.04968.</mixed-citation>
    </ref>
    <ref id="btac789-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Berry</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>Potential broad spectrum inhibitors of the coronavirus 3CLpro: a virtual screening and structure-based drug design study</article-title>. <source>Viruses</source>, <volume>7</volume>, <fpage>6642</fpage>–<lpage>6660</lpage>.<pub-id pub-id-type="pmid">26694449</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bremer</surname><given-names>P.L.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Overcoming the heuristic nature of k-means clustering: identification and characterization of binding modes from simulations of molecular recognition complexes</article-title>. <source>J. Chem. Inf. Model</source>., <volume>60</volume>, <fpage>3081</fpage>–<lpage>3092</lpage>.<pub-id pub-id-type="pmid">32383869</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cao</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>Potential of quantum computing for drug discovery</article-title>. <source>IBM J. Res. Dev</source>., <volume>62</volume>, <fpage>6:1</fpage>–<lpage>6:20</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Choo</surname><given-names>K.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Fermionic neural-network states for ab-initio electronic structure</article-title>. <source>Nat. Commun</source>., <volume>11</volume>, <fpage>2368</fpage>.<pub-id pub-id-type="pmid">32398658</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Davydov</surname><given-names>E.V.</given-names></string-name></person-group><etal>et al</etal> (<year>2010</year>) <article-title>Identifying a high fraction of the human genome to be under selective constraint using GERP++</article-title>. <source>PLoS Comput. Biol</source>., <volume>6</volume>, <fpage>e1001025</fpage>.<pub-id pub-id-type="pmid">21152010</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Duan</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2003</year>) <article-title>A point-charge force field for molecular mechanics simulations of proteins based on condensed-phase quantum mechanical calculations</article-title>. <source>J. Comput. Chem</source>., <volume>24</volume>, <fpage>1999</fpage>–<lpage>2012</lpage>.<pub-id pub-id-type="pmid">14531054</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B16">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Dunham</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) A missense variant effect prediction and annotation resource for SARS-CoV-2. bioRxiv preprint. <pub-id pub-id-type="doi">10.1101/2021.02.24.432721</pub-id>.</mixed-citation>
    </ref>
    <ref id="btac789-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Emani</surname><given-names>P.S.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Quantum computing at the frontiers of biological sciences</article-title>. <source>Nat. Methods</source>, <volume>18</volume>, <fpage>701</fpage>–<lpage>709</lpage>.<pub-id pub-id-type="pmid">33398186</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B18">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Farhi</surname><given-names>E.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) Classification with quantum neural networks on near term processors. arXiv preprint:1802.06002v2.</mixed-citation>
    </ref>
    <ref id="btac789-B19">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Feynman</surname><given-names>R.P.</given-names></string-name></person-group> (<year>1982</year>) <article-title>Simulating physics with computers</article-title>. <source>Int. J. Theor. Phys</source>., <volume>21</volume>, <fpage>467</fpage>–<lpage>488</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Fox</surname><given-names>D.M.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>mRNA codon optimization with quantum computers</article-title>. <source>PLoS One</source>, <volume>16</volume>, <fpage>e0259101</fpage>.<pub-id pub-id-type="pmid">34714834</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Giovannetti</surname><given-names>V.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Quantum random access memory</article-title>. <source>Phys. Rev. Lett</source>., <volume>100</volume>, <fpage>160501</fpage>.<pub-id pub-id-type="pmid">18518173</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hess</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>GROMACS 4: algorithms for highly efficient, load-balanced, and scalable molecular simulation</article-title>. <source>J. Chem. Theory Comput</source>., <volume>4</volume>, <fpage>435</fpage>–<lpage>447</lpage>.<pub-id pub-id-type="pmid">26620784</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jang</surname><given-names>W.D.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Drugs repurposed for COVID-19 by virtual screening of 6,218 drugs and cell-based assay</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>118</volume>, <fpage>e2024302118</fpage>.<pub-id pub-id-type="pmid">34234012</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B24">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Khatami</surname><given-names>M.H.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) Gate-based quantum computing for protein design. arXiv preprint:2201.12459.</mixed-citation>
    </ref>
    <ref id="btac789-B25">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kumar</surname><given-names>P.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Predicting the effects of coding non-synonymous variants on protein function using the SIFT algorithm</article-title>. <source>Nat. Protoc</source>., <volume>4</volume>, <fpage>1073</fpage>–<lpage>1081</lpage>.<pub-id pub-id-type="pmid">19561590</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B26">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>C.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>Structural basis of inhibition specificities of 3C and 3C-like proteases by zinc-coordinating and peptidomimetic compounds</article-title>. <source>J. Biol. Chem</source>., <volume>284</volume>, <fpage>7646</fpage>–<lpage>7655</lpage>.<pub-id pub-id-type="pmid">19144641</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B27">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) Drug Discovery Approaches Using Quantum Machine Learning. arXiv preprint<ext-link xlink:href="https://arxiv.org/abs/2104.00746" ext-link-type="uri">:2104.00746</ext-link>.</mixed-citation>
    </ref>
    <ref id="btac789-B28">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lindahl</surname><given-names>E.</given-names></string-name></person-group><etal>et al</etal> (<year>2001</year>) <article-title>GROMACS 3.0: a package for molecular simulation and trajectory analysis</article-title>. <source>J. Mol. Model</source>., <volume>7</volume>, <fpage>306</fpage>–<lpage>317</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B29">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Lloyd</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <italic toggle="yes">Quantum Embeddings for Machine Learning</italic>. <fpage>1</fpage>–<lpage>11</lpage>. arXiv preprint: <ext-link xlink:href="http://arxiv.org/abs/2001.03622" ext-link-type="uri">2001.03622</ext-link>.</mixed-citation>
    </ref>
    <ref id="btac789-B30">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Mesecar</surname><given-names>A.</given-names></string-name></person-group> (<year>2020</year>) A taxonomically-driven approach to development of potent, broad-spectrum inhibitors of coronavirus main protease including SARS-CoV-2 (COVID-19).</mixed-citation>
    </ref>
    <ref id="btac789-B31">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miller</surname><given-names>B.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2012</year>) <article-title>MMPBSA.py: an efficient program for end-state free energy calculations</article-title>. <source>J. Chem. Theory Comput</source>., <volume>8</volume>, <fpage>3314</fpage>–<lpage>3321</lpage>.<pub-id pub-id-type="pmid">26605738</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B32">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Morris</surname><given-names>G.M.</given-names></string-name></person-group><etal>et al</etal> (<year>2009</year>) <article-title>AutoDock4 and AutoDockTools4: automated docking with selective receptor flexibility</article-title>. <source>J. Comput. Chem</source>., <volume>30</volume>, <fpage>2785</fpage>–<lpage>2791</lpage>.<pub-id pub-id-type="pmid">19399780</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B33">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mottonen</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2005</year>) <article-title>Transformation of quantum states using uniformly controlled rotations</article-title>. <source>QIC</source>, <volume>5</volume>, <fpage>467</fpage>–<lpage>473</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B34">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Mulligan</surname><given-names>V.K.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <italic toggle="yes">Designing Peptides on a Quantum Computer</italic>. bioRxiv preprint. https://doi.org/10.1101/752485.</mixed-citation>
    </ref>
    <ref id="btac789-B35">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>O’Boyle</surname><given-names>N.M.</given-names></string-name></person-group><etal>et al</etal> (<year>2011</year>) <article-title>Open Babel: an open chemical toolbox</article-title>. <source>J. Cheminform</source>., <volume>3</volume>, <fpage>33</fpage>.<pub-id pub-id-type="pmid">21982300</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B36">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Páll</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <italic toggle="yes">Tackling Exascale Software Challenges in Molecular Dynamics Simulations with GROMACS.</italic> Solving Software Challenges for Exascale. EASC 2014. Lecture Notes in Computer Science, Vol. <volume>8759</volume>, pp. <fpage>3</fpage>–<lpage>27</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B37">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Perdomo</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2008</year>) <article-title>Construction of model Hamiltonians for adiabatic quantum computation and its application to finding low-energy conformations of lattice protein models</article-title>. <source>Phys. Rev. A</source>, <volume>78</volume>, <fpage>012320</fpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B38">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Perdomo-Ortiz</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2012</year>) <article-title>Finding low-energy conformations of lattice protein models by quantum annealing</article-title>. <source>Sci. Rep</source>., <volume>2</volume>, <fpage>571</fpage>.<pub-id pub-id-type="pmid">22891157</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B39">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pires</surname><given-names>D.E.</given-names></string-name></person-group><etal>et al</etal> (<year>2015</year>) <article-title>Platinum: a database of experimentally measured effects of mutations on structurally defined protein-ligand complexes</article-title>. <source>Nucleic Acids Res</source>., <volume>43</volume>, <fpage>D387</fpage>–<lpage>D391</lpage>.<pub-id pub-id-type="pmid">25324307</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B40">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Preskill</surname><given-names>J.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Quantum computing in the NISQ era and beyond</article-title>. <source>Quantum</source>, <volume>2</volume>, <fpage>79</fpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B41">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pronk</surname><given-names>S.</given-names></string-name></person-group><etal>et al</etal> (<year>2013</year>) <article-title>GROMACS 4.5: a high-throughput and highly parallel open source molecular simulation toolkit</article-title>. <source>Bioinformatics</source>, <volume>29</volume>, <fpage>845</fpage>–<lpage>854</lpage>.<pub-id pub-id-type="pmid">23407358</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B42">
      <mixed-citation publication-type="book"><person-group person-group-type="author"><string-name><surname>Schuld</surname><given-names>M.</given-names></string-name>, <string-name><surname>Petruccione</surname><given-names>F.</given-names></string-name></person-group> (<year>2018</year>) <source>Supervised Learning with Quantum Computers</source>. <edition>1st edn</edition>. <publisher-name>Springer Nature Switzerland AG, Switzerland</publisher-name>.</mixed-citation>
    </ref>
    <ref id="btac789-B43">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Schuld</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) Circuit-centric quantum classifiers. arXiv preprint:1804.00633.</mixed-citation>
    </ref>
    <ref id="btac789-B44">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Schuld</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2020</year>) <article-title>Circuit-centric quantum classifiers</article-title>. <source>Phys. Rev. A</source>, <volume>101</volume>, <fpage>032308</fpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B45">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shor</surname><given-names>P.W.</given-names></string-name></person-group> (<year>1997</year>) <article-title>Polynomial-time algorithms for prime factorization and discrete logarithms on a quantum computer</article-title>. <source>SIAM J. Comput</source>., <volume>26</volume>, <fpage>1484</fpage>–<lpage>1509</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B46">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sliwoski</surname><given-names>G.</given-names></string-name></person-group><etal>et al</etal> (<year>2014</year>) <article-title>Computational methods in drug discovery</article-title>. <source>Pharmacol. Rev</source>., <volume>66</volume>, <fpage>334</fpage>–<lpage>395</lpage>.<pub-id pub-id-type="pmid">24381236</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B47">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Smith</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Simulating quantum many-body dynamics on a current digital quantum computer</article-title>. <source>NPJ Quantum Inf</source>., <volume>5</volume>, <fpage>106</fpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B48">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sousa da Silva</surname><given-names>A.W.</given-names></string-name></person-group><etal>et al</etal> (<year>2012</year>) <article-title>ACPYPE - AnteChamber PYthon parser interfacE</article-title>. <source>BMC Res. Notes</source>, <volume>5</volume>, <fpage>367</fpage>.<pub-id pub-id-type="pmid">22824207</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B49">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Torrens-Fontanals</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>SCoV2-MD: a database for the dynamics of the SARS-CoV-2 proteome and variant impact predictions</article-title>. <source>Nucleic Acids Res</source>., <volume>50</volume>, <fpage>D858</fpage>–<lpage>D866</lpage>.<pub-id pub-id-type="pmid">34761257</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B50">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Trott</surname><given-names>O.</given-names></string-name></person-group><etal>et al</etal> (<year>2010</year>) <article-title>AutoDock Vina: improving the speed and accuracy of docking with a new scoring function, efficient optimization, and multithreading</article-title>. <source>J. Comput. Chem</source>., <volume>31</volume>, <fpage>455</fpage>–<lpage>461</lpage>.<pub-id pub-id-type="pmid">19499576</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B51">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Valdés-Tresanco</surname><given-names>M.S.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>gmx_MMPBSA: a new tool to perform end-state free energy calculations with GROMACS</article-title>. <source>J. Chem. Theory Comput</source>., <volume>17</volume>, <fpage>6281</fpage>–<lpage>6291</lpage>.<pub-id pub-id-type="pmid">34586825</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B52">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Van Dam</surname><given-names>W.</given-names></string-name></person-group><etal>et al</etal> (<year>2006</year>) <article-title>Quantum algorithms for some hidden shift problems</article-title>. <source>SIAM J. Comput</source>., <volume>36</volume>, <fpage>763</fpage>–<lpage>778</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B53">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Van Der Spoel</surname><given-names>D.</given-names></string-name></person-group><etal>et al</etal> (<year>2005</year>) <article-title>GROMACS: fast, flexible, and free</article-title>. <source>J. Comput. Chem</source>., <volume>26</volume>, <fpage>1701</fpage>–<lpage>1718</lpage>.<pub-id pub-id-type="pmid">16211538</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B54">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wagner</surname><given-names>J.R.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Continuous evaluation of ligand protein predictions: a weekly community challenge for drug docking</article-title>. <source>Structure</source>, <volume>27</volume>, <fpage>1326</fpage>–<lpage>1335.e4</lpage>.<pub-id pub-id-type="pmid">31257108</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B55">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>B.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Building a hybrid physical-statistical classifier for predicting the effect of variants related to protein-drug interactions</article-title>. <source>Structure</source>, <volume>27</volume>, <fpage>1469</fpage>–<lpage>1481.e3</lpage>.<pub-id pub-id-type="pmid">31279629</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B56">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2004</year>) <article-title>Development and testing of a general amber force field</article-title>. <source>J. Comput. Chem</source>., <volume>25</volume>, <fpage>1157</fpage>–<lpage>1174</lpage>.<pub-id pub-id-type="pmid">15116359</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B57">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wang</surname><given-names>J.</given-names></string-name></person-group><etal>et al</etal> (<year>2006</year>) <article-title>Automatic atom type and bond type perception in molecular mechanical calculations</article-title>. <source>J. Mol. Graph. Model</source>., <volume>25</volume>, <fpage>247</fpage>–<lpage>260</lpage>.<pub-id pub-id-type="pmid">16458552</pub-id></mixed-citation>
    </ref>
    <ref id="btac789-B58">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Webb</surname><given-names>B.</given-names></string-name>, <string-name><surname>Sali</surname><given-names>A.</given-names></string-name></person-group> (<year>2016</year>) <article-title>Comparative protein structure modeling using MODELLER</article-title>. <source>Curr. Protoc. Protein Sci</source>., <volume>86</volume>, <fpage>291</fpage>–<lpage>2937</lpage>.</mixed-citation>
    </ref>
    <ref id="btac789-B59">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zinner</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Quantum computing’s potential for drug discovery: early stage industry dynamics</article-title>. <source>Drug Discov. Today</source>, <volume>26</volume>, <fpage>1680</fpage>–<lpage>1688</lpage>.<pub-id pub-id-type="pmid">34119668</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

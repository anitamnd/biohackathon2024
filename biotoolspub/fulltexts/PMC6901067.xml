<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6901067</article-id>
    <article-id pub-id-type="pmid">31134276</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btz426</article-id>
    <article-id pub-id-type="publisher-id">btz426</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Papers</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Sequence Analysis</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Benchmarking of 4C-seq pipelines based on real and simulated data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Walter</surname>
          <given-names>Carolin</given-names>
        </name>
        <xref ref-type="aff" rid="btz426-aff1">1</xref>
        <xref ref-type="corresp" rid="btz426-cor1"/>
        <!--<email>carolin.walter@uni-muenster.de</email>-->
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-4448-6607</contrib-id>
        <name>
          <surname>Schuetzmann</surname>
          <given-names>Daniel</given-names>
        </name>
        <xref ref-type="aff" rid="btz426-aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Rosenbauer</surname>
          <given-names>Frank</given-names>
        </name>
        <xref ref-type="aff" rid="btz426-aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dugas</surname>
          <given-names>Martin</given-names>
        </name>
        <xref ref-type="aff" rid="btz426-aff1">1</xref>
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Hancock</surname>
          <given-names>John</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <aff id="btz426-aff1"><label>1</label><institution>Institute of Medical Informatics, University of Münster</institution>, Münster, <country country="DE">Germany</country></aff>
    <aff id="btz426-aff2"><label>2</label><institution>Institute of Molecular Tumorbiology, University of Münster</institution>, Münster, <country country="DE">Germany</country></aff>
    <author-notes>
      <corresp id="btz426-cor1">To whom correspondence should be addressed. Email: <email>carolin.walter@uni-muenster.de</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>01</day>
      <month>12</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2019-05-27">
      <day>27</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>27</day>
      <month>5</month>
      <year>2019</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the <pub-date pub-type="epub"/>. -->
    <volume>35</volume>
    <issue>23</issue>
    <fpage>4938</fpage>
    <lpage>4945</lpage>
    <history>
      <date date-type="received">
        <day>01</day>
        <month>12</month>
        <year>2018</year>
      </date>
      <date date-type="rev-recd">
        <day>24</day>
        <month>4</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>5</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2019</copyright-year>
      <license license-type="cc-by-nc" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btz426.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>With its capacity for high-resolution data output in one region of interest, chromosome conformation capture combined with high-throughput sequencing (4C-seq) is a state-of-the-art next-generation sequencing technique that provides epigenetic insights, and regularly advances current medical research. However, 4C-seq data are complex and prone to biases, and while specialized programs exist, an unbiased, extensive benchmarking is still lacking. Furthermore, neither substantial datasets with fully characterized ground truth, nor simulation programs for realistic 4C-seq data have been published.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>We conducted a benchmarking study on 66 4C-seq samples from 20 datasets, and developed a novel 4C-seq simulation software, Basic4CSim, to allow for detailed comparisons of 4C-seq algorithms on 50 simulated datasets with 10–120 samples each. Simulations and benchmarking were adapted to address different characteristics of 4C-seq data. Simulated data were compared with published samples to validate simulation settings. We identified differences between 4C-seq algorithms in terms of precision, recall, interaction structure, and run time, and observed general trends. Novel differential pipeline versions of single-sample based 4C-seq algorithms were included in the benchmarking. While no single tool was optimally suited for both near-<italic>cis</italic> and far-<italic>cis</italic>, and both single-sample and differential analyses, choosing a high-performing algorithm variant did improve results considerably. For near-<italic>cis</italic> scenarios, r3Cseq, peakC and FourCSeq offered high precision, while fourSig demonstrated high overall <italic>F</italic><sub>1</sub> scores in far-<italic>cis</italic> analyses. Finally, 4C-seq simulations may aid in the development of improved analysis algorithms.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>Basic4CSim is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/walter–ca/Basic4CSim">https://github.com/walter–ca/Basic4CSim</ext-link>.</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref ref-type="supplementary-material" rid="sup1">Supplementary data</xref> are available at <italic>Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <named-content content-type="funder-name">University of Muenster Medical Faculty</named-content>
        </funding-source>
        <award-id>Ros2/007/15</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="8"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Circular chromosome conformation capture combined with high-throughput sequencing (4C-seq) is a next-generation sequencing (NGS)-based technique to identify three-dimensional chromosomal contacts between a chosen point of interest (‘viewpoint’), and other regions of the genome (<xref rid="btz426-B6" ref-type="bibr">Gheldof <italic>et al.</italic>, 2012</xref>).</p>
    <p>One 4C-seq experiment typically yields millions of reads, which originate from a specific set of genomic fragments defined by the chosen restriction enzymes. Due to inherent characteristics of the 4C-seq technology, resulting read distributions can suffer from a number of biases, depending on the properties of the fragments of origin (<xref rid="btz426-B21" ref-type="bibr">van de Werken <italic>et al.</italic>, 2012a</xref>). Among those are the distance of a 4C-seq fragment to the experiments’ viewpoint, and the presence or the absence of a second restriction enzyme site within a 4C-seq fragment (‘non-blind’ and ‘blind’, respectively). Consequently, these properties have to be respected during the analysis of 4C-seq data to prevent misinterpretation. 4C-seq is characterized by a region of high-information density around the chosen experimental viewpoint (‘near-<italic>cis</italic>’), combined with relatively sparse data on the remainder of the chromosome on which this viewpoint is located (‘far-<italic>cis</italic>’), or other chromosomes (‘<italic>trans</italic>’). Taking into account the structural differences of the signal for these two regions can potentially improve 4C-seq analysis (<xref rid="btz426-B22" ref-type="bibr">van de Werken <italic>et al.</italic>, 2012b</xref>). While the analysis of a single 4C-seq sample is not trivial, the analysis of samples in a differential setting with a condition and control group becomes even more complex. Since differential questions are regularly encountered in biology and medicine, supporting analysis strategies are of increasing importance. Various algorithms are available to identify near-<italic>cis</italic> or far-<italic>cis</italic> interactions (or both). Some algorithms work on one single sample at a time, while others identify differential interactions between two groups of samples. Results are presented graphically (<xref rid="btz426-B21" ref-type="bibr">van de Werken <italic>et al.</italic>, 2012a</xref>) or as interval sets for predefined <italic>P</italic>-values or false-discovery rate levels; some tools offer additional statistics and visualizations. Output form, candidate interaction structure, run time or requirements differ between all programs. Therefore, comparing the performance of the algorithms for different tasks, situations and parameter settings is complicated, but necessary to achieve an optimized analysis. With a lack of fully characterized 4C-seq benchmarking datasets, simulated 4C-seq data with a known ground truth is critical for a detailed comparison; however, to our best knowledge, a flexible 4C-seq simulation program which can create realistic 4C-seq fragment data with characteristic biases is still missing.</p>
    <p>Hence, we developed a novel 4C-seq data simulation tool, Basic4CSim, which respects the basic structure of experimental 4C-seq data, and can be adapted to simulate different interaction characteristics and noise levels. We then evaluated the precision, recall and <italic>F</italic><sub>1</sub> score of 5 available 4C-seq analysis programs on 20 published datasets with 66 samples and 87 confirmed interactions in total, and used simulated data to assess the performance and candidate interaction structure of the algorithms in more detail. We focused on assessing the precision and recall of the chosen programs for varying levels of background noise, interaction lengths, signal strengths, restriction enzymes, forms of interactions, levels of significance and control sample interaction strength. Furthermore, we included differential pipelines for single-sample-based algorithms in the benchmarking, compared the <italic>F</italic><sub>1</sub> score for all algorithm variants, evaluated the similarity of candidate interactions for replicate data with the help of the Jaccard index (Intersection over Union), and tested the stability and usability of the presented programs.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>Open source 4C-seq analysis programs were identified and downloaded as of August 2018. Web-interfaces or algorithms based on graphical output were excluded from the analysis. Since we were interested in results for both single-sample analyses and differential questions, we created pipeline versions of single-sample algorithms in R (<ext-link ext-link-type="uri" xlink:href="https://www.R-project.org/">https://www.R-project.org/</ext-link>, <xref rid="btz426-B14" ref-type="bibr">R Core Team, 2018</xref>). For each of these algorithms, their native candidate interactions per sample were called, combined and used as a basis for the differential expression algorithm <italic>DESeq2</italic> (<xref rid="btz426-B12" ref-type="bibr">Love <italic>et al.</italic>, 2014</xref>) to create differential analyses (<xref ref-type="fig" rid="btz426-F1">Fig. 1</xref>). Basic statistics for the chosen algorithms are provided in <xref rid="btz426-T1" ref-type="table">Table 1</xref>, details regarding the differential pipelines are included in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S1</xref>. 
</p>
    <fig id="btz426-F1" orientation="portrait" position="float">
      <label>Fig. 1.</label>
      <caption>
        <p>Benchmarking workflow: after a standardized preprocessing, candidate interactions were called for all 4C-seq analysis algorithms, and analyzed. Single-sample-based algorithm results were combined to allow for additional differential analyses</p>
      </caption>
      <graphic xlink:href="btz426f1"/>
    </fig>
    <table-wrap id="btz426-T1" orientation="portrait" position="float">
      <label>Table 1.</label>
      <caption>
        <p>Properties of 4C-seq algorithms chosen for the benchmarking</p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th align="left" rowspan="1" colspan="1">Algorithm</th>
            <th align="left" rowspan="1" colspan="1">Analysis</th>
            <th align="left" rowspan="1" colspan="1">Region</th>
            <th align="left" rowspan="1" colspan="1">Input format</th>
            <th align="left" rowspan="1" colspan="1">Source code</th>
            <th align="left" rowspan="1" colspan="1">Language</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">4C-ker</td>
            <td rowspan="1" colspan="1">Differential</td>
            <td rowspan="1" colspan="1">All</td>
            <td rowspan="1" colspan="1">Tab-delimited count files</td>
            <td rowspan="1" colspan="1">
              <ext-link ext-link-type="uri" xlink:href="https://github.com/rr1859/R.4Cker">https://github.com/rr1859/R.4Cker</ext-link>
            </td>
            <td rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">FourCSeq</td>
            <td rowspan="1" colspan="1">Differential</td>
            <td rowspan="1" colspan="1">All</td>
            <td rowspan="1" colspan="1">Binary alignment/map (.bam)</td>
            <td rowspan="1" colspan="1">
              <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/release/bioc/html/FourCSeq.html">https://bioconductor.org/packages/release/bioc/ html/FourCSeq.html</ext-link>
            </td>
            <td rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">peakC</td>
            <td rowspan="1" colspan="1">Single sample/ groups</td>
            <td rowspan="1" colspan="1">Near-<italic>cis</italic> focus</td>
            <td rowspan="1" colspan="1">Wiggle track format (.wig)</td>
            <td rowspan="1" colspan="1">
              <ext-link ext-link-type="uri" xlink:href="https://github.com/deWitLab/peakC">https://github.com/deWitLab/peakC</ext-link>
            </td>
            <td rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">r3Cseq</td>
            <td rowspan="1" colspan="1">Single sample</td>
            <td rowspan="1" colspan="1">All</td>
            <td rowspan="1" colspan="1">Binary alignment/map (.bam)</td>
            <td rowspan="1" colspan="1">
              <ext-link ext-link-type="uri" xlink:href="https://bioconductor.org/packages/release/bioc/html/r3Cseq.html">https://bioconductor.org/packages/release/bioc/html/ r3Cseq.html</ext-link>
            </td>
            <td rowspan="1" colspan="1">R</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">fourSig</td>
            <td rowspan="1" colspan="1">Single sample</td>
            <td rowspan="1" colspan="1">All</td>
            <td rowspan="1" colspan="1">Sequence alignment/map (.sam)</td>
            <td rowspan="1" colspan="1">
              <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/foursig/">https://sourceforge.net/projects/foursig/</ext-link>
            </td>
            <td rowspan="1" colspan="1">R, Perl</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Splinter</td>
            <td rowspan="1" colspan="1">Single sample</td>
            <td rowspan="1" colspan="1">No near-<italic>cis</italic></td>
            <td rowspan="1" colspan="1">Wiggle track format (.wig)</td>
            <td rowspan="1" colspan="1">Publication supplement (<xref rid="btz426-B17" ref-type="bibr">Splinter <italic>et al.</italic>, 2012</xref>)</td>
            <td rowspan="1" colspan="1">R</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn1">
          <p><italic>Note:</italic> Single-sample exclusive algorithms were combined with the differential expression algorithm DESeq2 to provide differential results.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <sec>
      <title>2.1 4C-seq algorithms</title>
      <p><italic>Splinter’s algorithm</italic> (<xref rid="btz426-B17" ref-type="bibr">Splinter <italic>et al.</italic>, 2012</xref>) is an R-based far-<italic>cis</italic> exclusive single-sample analysis algorithm that complements the graphics-based and near-<italic>cis</italic> focused <italic>4cseqpipe</italic> (<xref rid="btz426-B21" ref-type="bibr">van de Werken <italic>et al.</italic>, 2012a</xref>). Splinter’s tool includes a permutation approach, in which fragment counts within a smaller central window are compared against the distribution of fragments in a longer background window. Splinter’s algorithm does not consider total read counts per restriction fragment, but binarizes the fragment count data.</p>
      <p>The R-package <italic>r3Cseq</italic> (<xref rid="btz426-B20" ref-type="bibr">Thongjuea <italic>et al.</italic>, 2013</xref>) is integrated into the Bioconductor environment, and focuses on the analysis of one sample at a time, with optional consideration of a control sample. The algorithm relies on function fitting and background scaling; candidate interactions are identified with the help of windows with customizable length in base pairs (bp). For each candidate interaction, <italic>P</italic>-values are calculated based on the comparison of residues.</p>
      <p>The single-sample-based algorithm <italic>fourSig</italic> (<xref rid="btz426-B23" ref-type="bibr">Williams <italic>et al.</italic>, 2014</xref>) is written in R and Perl. The tool uses a similar permutation approach as Splinter’s algorithm, but takes fragment read counts into consideration. Additionally, fourSig offers a heuristic filtering strategy that allows to prioritize candidate interactions more likely to be true positives. The program includes routines to mask the viewpoint region, which is recommended for far-<italic>cis</italic> analyses.</p>
      <p>The R/Bioconductor package <italic>FourCSeq</italic> (<xref rid="btz426-B10" ref-type="bibr">Klein <italic>et al.</italic>, 2015</xref>) allows both single-sample and differential analyses and requires groups (<italic>n </italic>&gt;<italic> </italic>1) of samples for each condition; an analysis with one sample per condition is technically possible with previous versions, but not recommended (<xref rid="btz426-B12" ref-type="bibr">Love <italic>et al.</italic>, 2014</xref>). FourCSeq’s main analysis strategy involves the fitting of curves to fragment read counts, and the analysis of residues.</p>
      <p>4C-ker (<xref rid="btz426-B15" ref-type="bibr">Raviram <italic>et al.</italic>, 2016</xref>) is programmed in R and, similar to FourCSeq, relies on the presence of replicate samples for a full differential analysis due to the utilized DESeq2 functionality. As preparation for its differential interaction calling, the tool utilizes a Hidden Markov Model to partition the genome into low-interacting or high-interacting regions, and regions without interactions. Separate functions are included for near-<italic>cis</italic>, far-<italic>cis</italic> and <italic>trans</italic> 4C-seq analyses.</p>
      <p>peakC (<xref rid="btz426-B5" ref-type="bibr">Geeven <italic>et al.</italic>, 2018</xref>) is a non-parametric algorithm, written in R, and based on rank-products. If replicates are present for a dataset, peakC offers a combined analysis, which uses information from all samples to improve precision.</p>
    </sec>
    <sec>
      <title>2.2 Datasets and simulation strategy</title>
      <p>We used simulated and published 4C-seq datasets as a basis for the benchmarking, and considered both mouse and human data, and different restriction enzyme combinations used in the 4C-seq library preparation.</p>
      <p>For the single-sample-based algorithm benchmarking, 6 × 2 replicate samples and 6 pairs of samples with the same viewpoint, but different biological conditions were selected from 12 datasets or subsets in total. The number of selected viewpoints and samples was limited to two and four per study, respectively, in order to reduce possible biases and increase variety. We chose another eight datasets with two or more different conditions per study and at least two replicates per condition to allow for differential analysis and benchmarking. For the differential benchmarking, all available replicates were used to increase statistical power. Details regarding datasets and samples are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S3.1</xref>.</p>
      <p>Most studies with the same restriction enzyme length setup showed similar proportions of aligned reads, reads on the viewpoint chromosome or viewpoint region reads (<xref ref-type="fig" rid="btz426-F2">Fig. 2A</xref>), with a high degree of similarity for replicates of the same dataset. The majority of chosen datasets fulfilled van de Werken’s basic quality parameters (<xref ref-type="fig" rid="btz426-F2">Fig. 2B</xref>).
</p>
      <fig id="btz426-F2" orientation="portrait" position="float">
        <label>Fig. 2.</label>
        <caption>
          <p>Data quality of published datasets (square/dashed line: 6 + 4 bp restriction enzyme combination, circle/dotted line: 4+ 4 bp setup). (<bold>A</bold>) Read count per sample before and after alignment, on the viewpoint chromosome and in the viewpoint region. (<bold>B</bold>) Quality criteria of van de Werken <italic>et al.</italic>: boxplots show fragment coverage in the viewpoint region (ideally &gt;80%), additional diamonds indicate remaining quality statistics. Positions of the diamonds represent the <italic>cis</italic>/<italic>trans</italic> ratio (ideally &gt;40%), and the diamonds’ brightness indicate the number of aligned reads (samples with &lt;1 million reads depicted in black, samples with the recommended &gt;1 million reads in light grey)</p>
        </caption>
        <graphic xlink:href="btz426f2"/>
      </fig>
      <p>All simulations were conducted with the novel 4C-seq simulation tool Basic4CSim, which is based on basic structural attributes deduced from a set of 33 published 4C-seq samples (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S3</xref>). Briefly, we extracted information regarding background noise, near-<italic>cis</italic> read distribution, and interaction structure from the datasets, and created simulated data with predefined noise levels, viewpoint regions and interacting regions (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S2</xref> and <xref ref-type="supplementary-material" rid="sup1">Table S4</xref>). Data quality, e.g. noise and signal strength, was varied between sets of simulated data. Different settings with regard to maximum background noise per fragment, percentage of noise fragments, average length and strength of simulated interactions were included. All simulated datasets consisted of two different simulated conditions, with five replicates each. The second condition displayed a subset of the first condition’s interactions, therefore acting as a control for the first group. In total, 18 sets of <italic>cis</italic> data with 12 subsets each and 6 sets of near-<italic>cis</italic> data with 32 subsets in total were simulated (<xref ref-type="supplementary-material" rid="sup1">Supplementary Table S5</xref>). Each set consisted of two conditions with five replicates. Since no sufficient data on different properties between far-<italic>cis</italic> and <italic>trans</italic> interactions were available, we approximated <italic>trans</italic> interactions with simulated low-density far-<italic>cis</italic> interactions.</p>
    </sec>
    <sec>
      <title>2.3 Standardized data preprocessing and algorithm settings</title>
      <p>All datasets were subjected to a standardized data preprocessing. Parameter choices depended on the specifics of the respective test scenario, with default choices otherwise. Window sizes of algorithms were varied wherever possible, and the resulting algorithm variants were evaluated separately. Details are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S3.2</xref>.</p>
    </sec>
    <sec>
      <title>2.4 Algorithm performance analysis</title>
      <p>For the experimental data we assessed the algorithms’ precision, recall and <italic>F</italic><sub>1</sub> score, though this approach was limited due to the lack of fully characterized viewpoint datasets with validated positive as well as negative interaction sites. We decided to use a base pair level resolution for the majority of analyses, intending to differentiate between programs that solely identified the highest interacting fragments of an interacting region (‘summits’), and tools which output the majority of a whole interaction (‘peaks’). Results per interaction interval with a minimum overlap of 1 bp were provided as comparison for chosen datasets. Information regarding the position of true interaction intervals was either provided directly in the reference papers, or approximated from the associated publication figures. Further details are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S3.3</xref>, definitions and examples for precision, recall and <italic>F</italic><sub>1</sub> score are given in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S3.4</xref>.</p>
    </sec>
  </sec>
  <sec>
    <title>3 Results</title>
    <p>Since real and simulated 4C-seq data are prone to differ in both known and previously unconsidered features and statistics, we evaluated both groups of datasets separately. Furthermore, a number of tools offered specific settings for use in near-<italic>cis</italic> or far-<italic>cis</italic> analyses due to the inherent differences in signal strength between these regions in 4C-seq samples. Since algorithm performance may vary between near-<italic>cis</italic> and far-<italic>cis</italic>, benchmarking was split by setting. Splinter’s algorithm is far-<italic>cis</italic> exclusive, and was therefore excluded from the near-<italic>cis</italic> benchmarking. Default window sizes for 4C-ker change in 4C-seq experiments with different restriction enzyme lengths; furthermore, there are general differences in fragment lengths and structure for these experimental setups. We therefore evaluated the algorithm performance separately on 6 and 4 bp primary restriction enzyme sets before combining the results.</p>
    <sec>
      <title>3.1 Comparison between real and simulated 4C-seq data</title>
      <p>While simulating data is a powerful tool in performance evaluations due to an implicit knowledge of the underlying ground truth, its usefulness depends on the similarity between simulated and real data. We therefore tested our simulated 4C-seq samples for adequate resemblance with published 4C-seq datasets.</p>
      <p>Violin plots (<ext-link ext-link-type="uri" xlink:href="https://CRAN.R-project.org/package=vioplot">https://CRAN.R-project.org/package=vioplot</ext-link>; <xref rid="btz426-B1" ref-type="bibr">Adler, 2005</xref>) indicated that the distribution of reads and thus the chosen signal strength and background noise of the viewpoint region and viewpoint chromosome for the simulated 4C-seq data were within the expected range of real-world 4C-seq samples. Near-<italic>cis</italic> fragment distributions were varied for the Dixon, Groeschel and Lonfat datasets, and ranged from samples with low median read counts and triangular shape of the corresponding probability density to samples with a higher median read count and curved violin plot; similar changes in the general shape of read distributions were achieved for near-<italic>cis</italic> simulation data by varying the number, signal strength and length of the simulated 4C-seq interactions (<xref ref-type="fig" rid="btz426-F3">Fig. 3A</xref>). For all far-<italic>cis</italic> samples, the majority of fragments had no or few reads, with a limited number of high-signal fragments (<xref ref-type="fig" rid="btz426-F3">Fig. 3B</xref>).
</p>
      <fig id="btz426-F3" orientation="portrait" position="float">
        <label>Fig. 3.</label>
        <caption>
          <p>Violin plots for log2-transformed fragment read counts. (<bold>A</bold>) Near-<italic>cis</italic> simulation data for sample 1 of the condition and control group from datasets a1, b1, c1 and d1 (left), and published data samples with comparable number of near-<italic>cis</italic> fragments (right). The central part of each ‘violin’ corresponds to a standard boxplot, with a grey dot as marker for the median; symmetric curves at the sides depict the probability density. (<bold>B</bold>) Far-<italic>cis</italic> simulation data B1, B3, C2 and D4 (left), and published datasets with comparable number of <italic>cis</italic> fragments (right)</p>
        </caption>
        <graphic xlink:href="btz426f3"/>
      </fig>
      <p>The ratio of near-<italic>cis</italic> to <italic>cis</italic> reads varied from 0.11 to 0.84 in the real-world samples; the simulated data showed ratios of 0.26–0.81 depending on the simulation settings. Median near-<italic>cis</italic> fragment coverage between both data types was comparable, with 77.01% for the real-world samples and 70%–95% for the simulated datasets. The range of total read numbers in <italic>cis</italic> of 0.5–10.1 million reads (excluding knockout samples) was matched between real-world and simulation data.</p>
      <p>Details regarding the workflow and results of the simulation are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S2</xref>.</p>
    </sec>
    <sec>
      <title>3.2 Benchmarking: published data</title>
      <sec>
        <title>3.2.1 Precision, recall and <italic>F</italic><sub>1</sub> score</title>
        <p>For the chosen real 4C-seq samples with a 6 + 4bp restriction enzyme setup (<italic>n </italic>=<italic> </italic>28), both fourSig and its heuristic filter version fourSig* showed a consistent median recall of 1.0 in near-<italic>cis</italic> for any tested window size between 3 and 101 fragments, and a median recall of 0.84 for fourSig-1 (<xref ref-type="fig" rid="btz426-F4">Fig. 4A</xref>). The corresponding median precision and <italic>F</italic><sub>1</sub> scores did not exceed 0.05, with smaller values for higher window sizes. Results for r3Cseq were more varied, with increased median precision, lower median recall and generally higher median <italic>F</italic><sub>1</sub> scores than fourSig or fourSig*. r3Cseq’s precision and <italic>F</italic><sub>1</sub> score were maximal for a window size of one fragment on the chosen datasets (0.17 precision, 0.24 <italic>F</italic><sub>1</sub>). Fixed window lengths of 2–100 kb yielded increasing recall with a local maximum in precision and <italic>F</italic><sub>1</sub> score for a window length of 10 kb. peakC’s general performance was comparable to r3Cseq-2k and r3Cseq-5k, but showed higher variance between the datasets and window sizes. FourCSeq’s <italic>F</italic><sub>1</sub> score varied notably, with values between 0.01, 0.49 and no results at all for three datasets, while 4C-ker presented a median recall level of 0.5 for the smaller window choices, matched with a low precision and <italic>F</italic><sub>1</sub> score for the test datasets.
</p>
        <fig id="btz426-F4" orientation="portrait" position="float">
          <label>Fig. 4.</label>
          <caption>
            <p>Benchmarking results for published data in near-<italic>cis</italic>. (<bold>A</bold>) Boxplots of single-sample-based <italic>F</italic><sub>1</sub> scores for 4C-seq algorithm variants, including markers for precision and recall, restricted to 6 + 4 bp data only. (<bold>B</bold>) Similar to (<bold>A</bold>), but restricted to 4 + 4bp data only. (<bold>C</bold>) Similar to (A), with all interactions and samples included. (<bold>D</bold>) Approximated lengths of the actual 4C-seq interaction intervals. (<bold>E</bold>) Number of identified single-sample interactions per algorithm (78 total). Upper/dark: 6 + 4bp, lower/bright: 4 + 4bp. (<bold>F</bold>) Similar to (<bold>E</bold>), but with number of identified differential interactions per algorithm (9 total)</p>
          </caption>
          <graphic xlink:href="btz426f4"/>
        </fig>
        <p>We observed similar trends for the 4 + 4 bp samples (<italic>n </italic>=<italic> </italic>38), namely high median recall and low median precision for fourSig and fourSig*, increased recall and decreased precision with growing window sizes, and generally low <italic>F</italic><sub>1</sub> scores (<xref ref-type="fig" rid="btz426-F4">Fig. 4B</xref>). r3Cseq’s precision and <italic>F</italic><sub>1</sub> score were highest for a window size of 5 kb (precision <italic>P</italic> = 0.09, <italic>F</italic><sub>1</sub>=0.13), while peakC-31’s median <italic>F</italic><sub>1</sub> score was maximal for the 4 + 4bp subset (<italic>F</italic><sub>1</sub> = 0.18). FourCSeq’s did not identify interactions for the majority of the samples, and 4C-ker’s <italic>F</italic><sub>1</sub> score did not exceed a median of 0.04. Consequently, r3Cseq-5kb and r3Cseq-10kb attained the highest overall median <italic>F</italic><sub>1</sub> scores for the whole group of samples (<inline-formula id="IE1"><mml:math id="IM1"><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.16</mml:mn></mml:mrow></mml:math></inline-formula>), with the highest median precision for all algorithms, combined with medium recall (<xref ref-type="fig" rid="btz426-F4">Fig. 4C</xref>). These window sizes matched the prevailing interaction length of 5–10 kb found in the samples (<xref ref-type="fig" rid="btz426-F4">Fig. 4D</xref>). peakC’s precision and <italic>F</italic><sub>1</sub> score were slightly lower than those of the r3Cseq variants (<inline-formula id="IE2"><mml:math id="IM2"><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.14</mml:mn></mml:mrow></mml:math></inline-formula> for peakC-31). An overview of identified interactions per sample and algorithm is shown in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S4</xref>.</p>
      </sec>
      <sec>
        <title>3.2.2 Further analyses</title>
        <p>Given the strikingly low general precision in the base pair level analysis due to lack of fully characterized near-<italic>cis</italic> regions in real datasets, excess candidate interactions for algorithms with longer window sizes, or partly missed interactions for algorithms with shorter windows (<xref ref-type="supplementary-material" rid="sup1">Supplementary Figs S13 and 14</xref>), we asked how many interactions were identified by the chosen tools in total. Results were generally proportional to the algorithms’ recall, with more false-negatives for r3Cseq and FourCSeq, and a full set of identified single-sample interactions by fourSig variants (<xref ref-type="fig" rid="btz426-F4">Fig. 4E and F</xref>). Furthermore, we found patterns for candidate interaction structures, with r3Cseq and FourCSeq usually identifying the central part of interacting regions (‘summits’), and fourSig’s and 4C-ker’s interactions overlapping the whole intervals (‘peaks’). peakC calls fragment-based intervals and tended to cover peak regions for window sizes close to its default value. Accordance between replicate results varied between algorithms and datasets (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.1</xref>).</p>
      </sec>
    </sec>
    <sec>
      <title>3.3 Benchmarking: near-<italic>cis</italic> simulation</title>
      <p>The setup for the near-<italic>cis</italic> simulation data analysis was kept similar to the benchmarking for real-world data. Notable differences included a larger proportion of available differential interactions, fully characterized high-signal regions, and an increased number of replicates per condition (<italic>n </italic>=<italic> </italic>5). Consequently, more options for combining single-sample candidate interval sets were available; we chose to focus on a base pair union (≥1 parallel candidate interactions in five replicates), majority vote (≥3 in five) and overlap strategy (all five samples with candidate interaction intervals) as base for the differential DESeq2 pipeline approach.</p>
      <sec>
        <title>3.3.1 Strong-signal, high-noise data</title>
        <p>For the high noise dataset c6 with strong interactions of 1500–3000 maximum reads per peak fragment, the resulting precision and recall for most algorithms was comparable to the real-world datasets. Interactions for fourSig and fourSig* were scattered throughout the viewpoint area, and showed maximum recall for single-sample analyses and window sizes <inline-formula id="IE3"><mml:math id="IM3"><mml:mrow><mml:mi>w</mml:mi><mml:mo>≥</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math></inline-formula> fragments (<xref ref-type="fig" rid="btz426-F5">Fig. 5</xref>; <xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S17A</xref>); fourSig’s single-sample precision was highest for fragment-based fourSig. Corresponding absolute values for precision and <italic>F</italic><sub>1</sub> score were notably higher than in the published datasets, however, the increase were proportional to the increase in length of the characterized near-<italic>cis</italic> interactions. r3Cseq’s interactions were mainly located at the local maxima of interactions, with increasing coverage of the interacting intervals for longer window lengths. The program’s precision reached its maximum of <italic>P </italic>=<italic> </italic>0.91 for a window size of 2 kb for single samples, while its recall generally increased for longer windows; for the chosen dataset, r3Cseq-10k had the highest overall <italic>F</italic><sub>1</sub> score (median <inline-formula id="IE4"><mml:math id="IM4"><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0.66</mml:mn></mml:mrow></mml:math></inline-formula>). peakC-1 had the highest overall precision of <italic>P </italic>=<italic> </italic>0.91 in group-mode, but a lower <italic>F</italic><sub>1</sub> score than r3Cseq due to lower recall, and reduced precision for single-sample analyses. While FourCSeq did identify single-sample interactions for test data with &lt;5 replicates per condition only, 4C-ker’s high-interacting regions were characterized by a recall of <italic>r </italic>=<italic> </italic>0.71 for the default median window length, combined with a precision <italic>P </italic>=<italic> </italic>0.37, and increasing precision and recall for our tested window sizes.
</p>
        <fig id="btz426-F5" orientation="portrait" position="float">
          <label>Fig. 5.</label>
          <caption>
            <p>Viewpoint overview for simulated data with strong signal: near-<italic>cis</italic> overview plot with locally weighted scatterplot smoothing (LOESS) for fragment counts in pooled condition (cond) and control samples. Interactions and the viewpoint position are marked with black triangles and a grey bar throughout the plot, ‘+c’ denotes regions with added control signal. Candidate interactions are depicted per chosen algorithm variant: default values (‘4C-ker med’) for 4C-ker, default values (‘FourCSeq-40’) and reduced minimum reads per fragments (‘FourCSeq-20’) for FourCSeq, default values and default aggregation per condition for peakC, window sizes of 2000 (‘2k’) base pairs for r3Cseq, window sizes of 1 fragment for fourSig, and 3 fragments for fourSig*. Intervals with black borders indicate differential candidate interactions. cond-u: union of all condition replicate results, cond-mv: majority vote, cond-o: overlap</p>
          </caption>
          <graphic xlink:href="btz426f5"/>
        </fig>
        <p>Regarding differential interactions, the DESeq2 pipeline for union r3Cseq-2kb had the highest <italic>F</italic><sub>1</sub> score of all tested algorithm variants (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S17D</xref>). In general, r3Cseq’s precision dropped for longer window sizes, while its recall increased; candidate interactions were located at interaction summits for fragment-based windows. fourSig and fourSig* usually had higher recall with decreased precision for window lengths between 3 and 11 fragments, and did not identify any differential interactions for larger window sizes. While peakC’s differential pipeline versions retained their high precision, maximum recall dropped to <italic>r </italic>=<italic> </italic>0.05 for peakC-11 and the test dataset. Similarly, FourCSeq identified the summits of a subset of the simulated interactions (<xref ref-type="fig" rid="btz426-F5">Fig. 5</xref>), resulting in low recall. In contrast, 4C-ker’s candidate interactions enveloped most simulated interactions, but also included added noise intervals. As a consequence, FourCSeq’s <italic>F</italic><sub>1</sub> score was 0.04 for a bp-based analysis, while 4C-ker’s default values resulted in an <italic>F</italic><sub>1</sub> score of 0.37.</p>
        <p>A structural comparison based on the Jaccard index between candidate interactions for the simulated data yielded similar results to the corresponding analysis for the published 4C-seq samples. In general, variants of the same program with small differences in window size had similar candidate interactions, indicating a certain degree of stability for the algorithm results. Differential results were more heterogeneous between algorithm variants. Details are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.2</xref>.</p>
      </sec>
      <sec>
        <title>3.3.2 Interaction length</title>
        <p>We assessed the algorithms’ performance on simulated datasets with different interaction lengths, and confirmed general trends from the published datasets and the first set of near-<italic>cis</italic> simulations (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.2</xref>).</p>
      </sec>
      <sec>
        <title>3.3.3 Level of significance</title>
        <p>Default levels of significance <italic>α</italic> were defined for all 4C-seq algorithms, but the influence of variations in <italic>α</italic> was considerable. We therefore chose algorithm variants with overall good performance in the near-<italic>cis</italic> benchmarking, and tested their precision and recall for progressively lower significance levels.</p>
        <p>The recall of most 4C-seq programs decreased for lower values of <italic>α</italic>, while their precision increased or remained stable <xref ref-type="fig" rid="btz426-F6">(Fig. 6</xref>). This general trend was true for simulated datasets with 6 and 4 bp primary restriction enzymes, varying peak lengths and changing levels of background noise. 4C-ker’s precision increased constantly for all chosen near-<italic>cis</italic> datasets up to <inline-formula id="IE5"><mml:math id="IM5"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.001</mml:mn></mml:mrow></mml:math></inline-formula>, with small decreases in recall.
</p>
        <fig id="btz426-F6" orientation="portrait" position="float">
          <label>Fig. 6.</label>
          <caption>
            <p>Precision-recall curves for differential near-<italic>cis</italic> settings and varying levels of significance <italic>α</italic>, with <inline-formula id="IE6"><mml:math id="IM6"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.05</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.01</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.001</mml:mn><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo><mml:mo> </mml:mo><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>7</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula> and <inline-formula id="IE7"><mml:math id="IM7"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mn>10</mml:mn></mml:mrow></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:msup></mml:mrow></mml:math></inline-formula>. Smaller and more opaque symbols depict results for more stringent levels of <italic>α</italic>. (<bold>A</bold>) Dataset c6, medium-length peaks, high noise, 4 + 4bp. (<bold>B</bold>) Dataset a6, short peaks, medium noise levels, 4 + 4bp. (<bold>C</bold>) Dataset d1, long peaks, low noise, 4 + 4bp. (<bold>D</bold>) Dataset g6, long peaks, medium noise, 6 + 4bp</p>
          </caption>
          <graphic xlink:href="btz426f6"/>
        </fig>
      </sec>
      <sec>
        <title>3.3.4 Influence of control samples</title>
        <p>Since the comparison of different conditions can be relevant in biology and medicine, we simulated a series of samples with constant signal strength as a control sample group, but increased the interaction strength for the corresponding condition samples progressively over six datasets. This setup was used to assess the precision and recall of the chosen differential algorithm variants for increasingly divergent signal strengths between conditions. Maximum peak height for the condition samples was adapted, with scaling factor <italic>s </italic>=<italic> </italic>0.5, 1.0,<inline-formula id="IE8"><mml:math id="IM8"><mml:mo>…</mml:mo></mml:math></inline-formula>, 3.0. Condition samples were simulated with a fixed set of 10 interactions; a subset of 5 interactions was also included in the control samples, while the background noise varied (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S20A and B</xref>). We then determined the extent of identified differential control peaks in base pairs. Of all algorithms, only 4C-ker identified more than 10% of the control peaks, with recall <italic>r </italic>=<italic> </italic>0.46 for scaling factor <italic>s </italic>=<italic> </italic>2.0, and <italic>r </italic>=<italic> </italic>0.59 for <italic>s </italic>=<italic> </italic>3.0 (<xref ref-type="supplementary-material" rid="sup1">Supplementary Fig. S20C</xref>).</p>
      </sec>
    </sec>
    <sec>
      <title>3.4 Benchmarking: far-<italic>cis</italic> simulation</title>
      <p>While some algorithm variants performed similarly with regard to their <italic>F</italic><sub>1</sub> score in near-<italic>cis</italic> and far-<italic>cis</italic>, other programs’ precision and recall changed considerably. FourCSeq and r3Cseq continued to show high precision, with reduced recall for r3Cseq in case of longer interactions. fourSig variants retained their high recall, but gained higher precision, while 4C-ker and single-sample peakC lost precision in a number of far-<italic>cis</italic> datasets. However, peakC’s differential pipeline version showed high precision for most window sizes and simulation settings (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.3</xref>). Far-<italic>cis</italic> exclusive Splinter’s algorithm had similar precision and recall as fourSig variants with matching window sizes (<xref ref-type="fig" rid="btz426-F7">Fig. 7</xref>).
</p>
      <fig id="btz426-F7" orientation="portrait" position="float">
        <label>Fig. 7.</label>
        <caption>
          <p>Far-<italic>cis</italic> benchmarking overview for dataset B1: precision and recall for a subset of the chosen benchmarking algorithm variants in differential settings on a low-noise dataset with strong interaction signal; the full algorithm variant set is presented in <xref ref-type="supplementary-material" rid="sup1">Supplementary Figure S21</xref>. Size of symbol glyphs depict recall, the precision is mapped to saturation (color intensity). Maximal values are shown on the right side of the plots for comparison (‘max’), different levels for precision and recall are visualized at the top of the plot. A union of single-sample results was used in the pipeline approach for single-sample 4C-seq algorithms fourSig, fourSig*, r3Cseq and Splinter. Datasets 1–12 are sorted by the simulated interactions’ fragment coverage rate (100, 90, <inline-formula id="IE9"><mml:math id="IM9"><mml:mo>…</mml:mo></mml:math></inline-formula>, 10, 5, 1%)</p>
        </caption>
        <graphic xlink:href="btz426f7"/>
      </fig>
      <p>General trends for algorithm precision and recall were quite stable regarding different background noise levels, interaction lengths, interaction forms, signal strengths and enzyme choices (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.3</xref>). The run time of most programs was low (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.4</xref>); usability depended on the algorithm and the chosen type of analysis (<xref ref-type="supplementary-material" rid="sup1">Supplementary Note S4.5</xref>).</p>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>Currently there is a lack of gold standard validation datasets with a sufficient number of validated 4C-seq interactions in near-<italic>cis</italic> and far-<italic>cis</italic>, while different algorithms for candidate interaction identification are available. We therefore simulated 4C-seq data based on parameters extracted from published and novel 4C-seq experimental data, and compared the 4C-seq programs with regard to their precision, recall, <italic>F</italic><sub>1</sub> score, interaction length, pairwise overlap and general candidate interaction structure for a number of real datasets, and simulated samples with varying interaction strengths and interaction forms. Given the sparse data on predominant 4C-seq noise patterns, we simulated a variety of interferences in the form of background noise and interaction fragments without signal.</p>
    <sec>
      <title>4.1 General results</title>
      <p>Taking together the results of the different simulation settings and published data, we conclude that currently there is no algorithm that performs optimally for all possible conditions and interaction structures of a 4C-seq experiment. While each algorithm identified most simulated interactions in low-noise, strong-signal simulations with a focus close to the experiment’s viewpoint, false-positive and false-negative calls increased with rising noise levels and degrading signal strength. Algorithm-specific patterns emerged, including specifics regarding the general number, length or location of most candidate interactions. Such patterns were mostly independent from specific simulation settings, and also robust between replicates. Despite this, we observed noticeable differences in a subset of the chosen published biological replicate samples, indicating possible variation in the underlying cells, or technical artifacts during the creation of those 4C-seq samples.</p>
      <p>We found a certain degree of stability for most programs’ results in simulated <italic>cis</italic> datasets with high interaction fragment coverage rates. Reductions of the fragment coverage rate from 100% down to 30% did not lead to proportional losses of precision or recall for most algorithms and variants or combination strategies, as long as the background rate was significantly lower, and the simulated interactions were still characterized by a certain length and read coverage per fragment. However, most algorithms could not reliably identify simulated interactions with fragment coverage rates close to the background coverage rate, even if the interaction strength per fragment was higher than the background noise. With Splinter’s binarization approach, this behavior was expected, but fourSig and fourSig* also suffered from decreased precision and recall.</p>
      <p>Despite their inherent specialization, benchmarking results do not suggest that the currently available differential 4C-seq algorithms’ performance is superior to single-sample-based algorithms when combined with a differential DESeq2 setup. For the algorithms with customizable window sizes, optimum performance in terms of the <italic>F</italic><sub>1</sub> score was generally achieved when the size of the simulated interactions corresponded to the chosen window size. This behavior was partly caused by the chosen evaluation strategy, which focused on base pair interactions, and therefore penalized both additional overhangs in candidate peaks and restrictions to summit regions. However, large windows generally have a higher chance to miss smaller regions of high interaction signals by diluting the total signal regardless of the chosen analysis strategy, while small windows often cause an algorithm to ignore larger segments of a chromosome with lower, but consistent signal enrichment. Consequently, comparisons of results for different window lengths usually showed a more pronounced maximum for the <italic>F</italic><sub>1</sub> score at the matching interaction size for both simulated and real-world 4C-seq data. Since the median interaction size per sample is not inherently known for real-world 4C-seq samples, however, recommended approximations are dependent on the respective algorithm.</p>
      <p>Splinter’s algorithm and fourSig offer a form of adaptive window sizes, and merge resulting intervals for smaller window sizes if the signal strength is appropriate. This approach allows for a certain flexibility, and usually leads to high precision and recall for smaller windows sizes up to the matching window length that corresponds to the expected interactions, unless the high-interacting viewpoint region is close by. Given the benchmarking results, we recommend window lengths of 5–11 fragments for fourSig*, 1–11 fragments for fourSig, 11–20 fragments for Splinter’s algorithm in <italic>cis</italic> and fragment-based fourSig for differential near-<italic>cis</italic> analyses. If possible with regard to expected points of interest in near-<italic>cis</italic>, the viewpoint region should be masked out for fourSig analyses. r3Cseq’s maximum window size is 100 kb, with less frequent overlaps and merges between bp-based interacting regions in contrast to the fragment-based techniques; fragment-based r3Cseq reports interaction lengths depending on the actual fragment sizes. With the high number of shorter fragments in a 4 + 4bp experiment, fixed windows of 2–5 kb with union or majority vote combination were found most promising for r3Cseq in near-<italic>cis</italic>, while fragment-based r3Cseq’s greater adaptability for candidate unions was beneficial for 6 bp primary restriction enzyme samples and <italic>cis</italic> analyses. 4C-ker’s default window sizes appeared to be sufficient for near-<italic>cis</italic> analyses, but the program benefited from lower significance levels <italic>α</italic> up to <inline-formula id="IE10"><mml:math id="IM10"><mml:mrow><mml:mo>α</mml:mo><mml:mo>=</mml:mo><mml:mn>0.0001</mml:mn></mml:mrow></mml:math></inline-formula> on datasets with medium noise levels. Similar to the other tools, peakC’s performance varies with its chosen window size; window sizes between 11 and 31 yielded high precision and <italic>F</italic><sub>1</sub> scores for most datasets.</p>
      <p>Absolute values for precision and recall are noticeably low for a majority of algorithm variants in the presented datasets. While this is partly expected due to the chosen bp-based analysis strategy (Supplementary Note S3.4), 4C-seq data analysis is non-trivial in general, and issues with data quality may facilitate concerns regarding algorithm performance. Thorough validation of candidate interactions, as well as use of replicate data, are therefore required for reliable analyses. This is furthermore indicated by the variance between biological replicate samples, and also emphasized by <xref rid="btz426-B5" ref-type="bibr">Geeven <italic>et al.</italic> (2018)</xref>. Additionally, replicates are a technical requirement for any DESeq2-based tool, which makes multiple samples a necessity if FourCSeq, 4C-ker or one of the presented pipeline versions of single-sample algorithms is chosen to analyze an experiment.</p>
      <p>Given the overall fast run times and adequate usability of all considered 4C-seq algorithms, computational 4C-seq analyses are generally not complicated by technical concerns once the overall installation process of the chosen programs has been successfully completed. Due to the comparably low read number of 4C-seq experiments, physical disc space is not an issue either. However, the actual 4C-seq program and associated parameters have to be chosen with respect to the experimental settings and questions of interest, as indicated by the presented benchmarking, and reasonable care should be exercised during the interpretation of the provided results. Algorithm recommendations based on key results for typical 4C-seq analysis use cases are provided in <xref ref-type="supplementary-material" rid="sup1">Supplementary Table S7</xref>.</p>
    </sec>
    <sec>
      <title>4.2 Limitations</title>
      <p>With a limited number of validated 4C-seq interactions in near-<italic>cis</italic> and far-<italic>cis</italic>, the presented simulations and benchmarking do rely on transfer and interpolation of available near-<italic>cis</italic> interaction structure information to areas more distant from the viewpoints. In general, simulated data does not carry the same inherent authenticity as real-world 4C-seq data, and may include simulation-specific biases. While examples of real-world interactions in near-<italic>cis</italic> and far-<italic>cis</italic> indicate that assumptions of similarity are plausible, additional comparisons against validated <italic>cis</italic> and <italic>trans</italic> interacting regions would allow for further tests with simulations outside the actual viewpoint chromosome.</p>
      <p>The standardized data preprocessing and alignment does not allow for optimizations regarding single datasets. We therefore assume that all algorithms might show a certain degree of improvement when more specialized algorithms or adapted parameters are used. However, with similar general results throughout both real and simulated datasets, and good alignment statistics and van de Werken quality metric results for the majority of real-world datasets and all simulated datasets, we expect those improvements to be minor in most cases.</p>
      <p>Technical issues with FourCSeq and 4C-ker for some datasets prompted us to search for problems with the related workflows. For the differential 4C-seq algorithm FourCSeq, a number of datasets did not yield any results at all, and the number of exceptions on published datasets was notable. Single-sample analysis for our simulation datasets with five replicates did not yield significant candidate interactions; since FourCSeq reported results if lower numbers of replicates were analyzed in parallel, the amount of variance between all simulated replicates was likely problematic. However, the program showed high precision on summits for differential interactions on the simulated data, published datasets generally varied more with regard to data quality, and comparable errors were reported by the authors of 4C-ker when evaluating FourCSeq against their own algorithm. Therefore, we believe that the main issue in this case is related to the input data’s signal properties, e.g. high variance between replicates, and not caused by the data analysis workflow. The second differential analysis program, 4C-ker, generally demonstrated a high recall, albeit with lower precision than r3Cseq and FourCSeq in near-<italic>cis</italic> settings. Given the statements in the authors’ paper, this is to be expected, since 4C-ker aims to identify longer domains of medium to high interaction rates. For far-<italic>cis</italic> simulation data, 4C-ker’s precision was generally low.</p>
    </sec>
  </sec>
  <sec>
    <title>5 Conclusion</title>
    <p>Benchmarking results indicate that none of the currently available 4C-seq algorithms is optimally suited for all evaluated tasks. Consequently, different algorithms should be used for an optimized 4C-seq analysis, including differential pipeline versions of single-sample algorithms. We recommend r3Cseq for single-sample near-<italic>cis</italic> settings and the identification of summits in far-<italic>cis</italic>, peakC for near-<italic>cis</italic> group analyses when replicates are present, and the DESeq2-r3Cseq pipeline and FourCSeq for differential near-<italic>cis</italic> analyses. 4C-ker is more suited for the identification of broader peaks and domains in near-<italic>cis</italic>; it is also the most sensitive algorithm for the detection of different signal strengths between conditions. For most far-<italic>cis</italic> analyses, Splinter’s algorithm, fourSig* and their respective differential pipeline versions provide candidate interactions with high precision and recall. Given fourSig’s susceptibility to noise in near-<italic>cis</italic>, the use of replicates and overlaps between candidate intervals are recommended.</p>
    <p>With reduced sequencing costs and rising amounts of data, new 4C-seq algorithms that address sensitive and precise single-sample and differential analyses for the whole genome are highly desirable.</p>
  </sec>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the University of Muenster Medical Faculty [IZKF project Ros2/007/15 to F.R.].</p>
    <p><italic>Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sup1">
      <label>btz426_Supplementary_Data</label>
      <media xlink:href="btz426_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btz426-B1">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><name name-style="western"><surname>Adler</surname><given-names>D.</given-names></name></person-group> (<year>2005</year>) vioplot: Violin plot, R package version 0.2. <ext-link ext-link-type="uri" xlink:href="http://wsopuppenkiste.wiso.uni–goettingen.de/~dadler">http://wsopuppenkiste.wiso.uni–goettingen.de/∼dadler</ext-link>.</mixed-citation>
    </ref>
    <ref id="btz426-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Geeven</surname><given-names>G.</given-names></name></person-group><etal>et al</etal> (<year>2018</year>) 
<article-title>peakC: a flexible, non-parametric peak calling package for 4C and Capture-C data</article-title>. <source>Nucleic Acids Res</source>., <volume>46</volume>, <fpage>e91.</fpage><pub-id pub-id-type="pmid">29800273</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Gheldof</surname><given-names>N.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Detecting long-range chromatin interactions using the chromosome conformation capture sequencing (4C-seq) method</article-title>. <source>Methods Mol. Biol</source>., <volume>786</volume>, <fpage>212</fpage>–<lpage>225</lpage>.</mixed-citation>
    </ref>
    <ref id="btz426-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Klein</surname><given-names>F.A.</given-names></name></person-group><etal>et al</etal> (<year>2015</year>) 
<article-title>FourCSeq: analysis of 4C sequencing data</article-title>. <source>Bioinformatics</source>, <volume>31</volume>, <fpage>3085</fpage>–<lpage>3091</lpage>.<pub-id pub-id-type="pmid">26034064</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Love</surname><given-names>M.I.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>550.</fpage><pub-id pub-id-type="pmid">25516281</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B14">
      <mixed-citation publication-type="other">R Core Team (<year>2018</year>) R: A Language and Environment for Statistical Computing.</mixed-citation>
    </ref>
    <ref id="btz426-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Raviram</surname><given-names>R.</given-names></name></person-group><etal>et al</etal> (<year>2016</year>) 
<article-title>4C-ker: a method to reproducibly identify genome-wide interactions captured by 4C-seq experiments</article-title>. <source>PLoS Comput. Biol</source>., <volume>12</volume>, <fpage>e1004780.</fpage><pub-id pub-id-type="pmid">26938081</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B17">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Splinter</surname><given-names>E.</given-names></name></person-group><etal>et al</etal> (<year>2012</year>) 
<article-title>Determining long-range chromatin interactions for selected genomic sites using 4C-seq technology: from fixation to computation</article-title>. <source>Methods</source>, <volume>58</volume>, <fpage>221</fpage>–<lpage>230</lpage>.<pub-id pub-id-type="pmid">22609568</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B20">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Thongjuea</surname><given-names>S.</given-names></name></person-group><etal>et al</etal> (<year>2013</year>) 
<article-title>r3Cseq: an R/Bioconductor package for the discovery of long-range genomic interactions from chromosome conformation capture and next-generation sequencing data</article-title>. <source>Nucleic Acids Res</source>., <volume>41</volume>, <fpage>e132.</fpage><pub-id pub-id-type="pmid">23671339</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B21">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>van de Werken</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2012a</year>) 
<article-title>Robust 4C-seq data analysis to screen for regulatory DNA interactions</article-title>. <source>Nat. Methods</source>, <volume>9</volume>, <fpage>969</fpage>–<lpage>971</lpage>.<pub-id pub-id-type="pmid">22961246</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B22">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>van de Werken</surname><given-names>H.</given-names></name></person-group><etal>et al</etal> (<year>2012b</year>) 
<article-title>4C technology: protocols and data analysis</article-title>. <source>Methods Enzymol</source>., <volume>513</volume>, <fpage>89</fpage>–<lpage>112</lpage>.<pub-id pub-id-type="pmid">22929766</pub-id></mixed-citation>
    </ref>
    <ref id="btz426-B23">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name name-style="western"><surname>Williams</surname><given-names>R.L.</given-names></name></person-group><etal>et al</etal> (<year>2014</year>) 
<article-title>fourSig: a method for determining chromosomal interactions in 4C-Seq data</article-title>. <source>Nucleic Acids Res</source>., <volume>42</volume>, <fpage>e68.</fpage><pub-id pub-id-type="pmid">24561615</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Synth Biol (Oxf)</journal-id>
    <journal-id journal-id-type="iso-abbrev">Synth Biol (Oxf)</journal-id>
    <journal-id journal-id-type="publisher-id">synbio</journal-id>
    <journal-title-group>
      <journal-title>Synthetic Biology</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2397-7000</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
      <publisher-loc>UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8944294</article-id>
    <article-id pub-id-type="pmid">35350192</article-id>
    <article-id pub-id-type="doi">10.1093/synbio/ysac002</article-id>
    <article-id pub-id-type="publisher-id">ysac002</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00520</subject>
        <subject>AcademicSubjects/SCI00980</subject>
        <subject>AcademicSubjects/SCI01060</subject>
        <subject>AcademicSubjects/SCI02298</subject>
        <subject>AcademicSubjects/SCI02299</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SynBio2Easy—a biologist-friendly tool for batch operations on SBOL designs with Excel inputs</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-0194-5706</contrib-id>
        <name>
          <surname>Zieliński</surname>
          <given-names>Tomasz</given-names>
        </name>
        <aff><institution content-type="department">SynthSys &amp; Institute of Molecular Plant Sciences, School of Biological Sciences, University of Edinburgh</institution>, Edinburgh, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9685-3718</contrib-id>
        <name>
          <surname>Hay</surname>
          <given-names>Johnny</given-names>
        </name>
        <aff><institution content-type="department">EPCC, University of Edinburgh</institution>, Edinburgh, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-0737-2408</contrib-id>
        <name>
          <surname>Romanowski</surname>
          <given-names>Andrew</given-names>
        </name>
        <aff><institution content-type="department">SynthSys &amp; Institute of Molecular Plant Sciences, School of Biological Sciences, University of Edinburgh</institution>, Edinburgh, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nenninger</surname>
          <given-names>Anja</given-names>
        </name>
        <aff><institution content-type="department">SynthSys &amp; Institute of Molecular Plant Sciences, School of Biological Sciences, University of Edinburgh</institution>, Edinburgh, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-7255-872X</contrib-id>
        <name>
          <surname>McCormick</surname>
          <given-names>Alistair</given-names>
        </name>
        <aff><institution content-type="department">SynthSys &amp; Institute of Molecular Plant Sciences, School of Biological Sciences, University of Edinburgh</institution>, Edinburgh, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1756-3654</contrib-id>
        <name>
          <surname>Millar</surname>
          <given-names>Andrew J</given-names>
        </name>
        <!--Andrew.Millar@ed.ac.uk-->
        <xref rid="COR0001" ref-type="corresp"/>
        <aff><institution content-type="department">SynthSys &amp; Institute of Molecular Plant Sciences, School of Biological Sciences, University of Edinburgh</institution>, Edinburgh, <country country="GB">UK</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="COR0001">*Corresponding author: E-mail: <email xlink:href="Andrew.Millar@ed.ac.uk">Andrew.Millar@ed.ac.uk</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-01-26">
      <day>26</day>
      <month>1</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>26</day>
      <month>1</month>
      <year>2022</year>
    </pub-date>
    <volume>7</volume>
    <issue>1</issue>
    <elocation-id>ysac002</elocation-id>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>8</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>26</day>
        <month>11</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>25</day>
        <month>1</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>17</day>
        <month>1</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>07</day>
        <month>2</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="ysac002.pdf"/>
    <abstract>
      <title>Abstract</title>
      <p>Practical delivery of Findable, Accessible, Reusable and Interoperable principles for research data management requires expertise, time resource, (meta)data standards and formats, software tools and public repositories. The Synthetic Biology Open Language (SBOL2) metadata standard enables FAIR sharing of the designs of synthetic biology constructs, notably in the repository of the SynBioHub platform. Large libraries of such constructs are increasingly easy to produce in practice, for example, in DNA foundries. However, manual curation of the equivalent libraries of designs remains cumbersome for a typical lab researcher, creating a barrier to data sharing. Here, we present a simple tool SynBio2Easy, which streamlines and automates operations on multiple Synthetic Biology Open Language (SBOL) designs using <italic toggle="yes">Microsoft Excel®</italic> tables as metadata inputs. The tool provides several utilities for manipulation of SBOL documents and interaction with SynBioHub: for example, generation of a library of plasmids based on an original design template, bulk deposition into SynBioHub, or annotation of existing SBOL component definitions with notes and authorship information. The tool was used to generate and deposit a collection of 3661 cyanobacterium <italic toggle="yes">Synechocystis</italic> plasmids into the public SynBioHub repository. In the process of developing the software and uploading these data, we evaluated some aspects of the SynBioHub platform and SBOL ecosystem, and we discuss proposals for improvement that could benefit the user community. With software such as SynBio2Easy, we aim to deliver a user-driven tooling to make FAIR a reality at all stages of the project lifecycle in synthetic biology research.</p>
      <p>
Graphical Abstract
</p>
      <p>
        <inline-graphic xlink:href="ysac002a1.jpg"/>
      </p>
    </abstract>
    <kwd-group>
      <kwd>synthetic biology</kwd>
      <kwd>SBOL</kwd>
      <kwd>SynBioHub</kwd>
      <kwd>research data management</kwd>
      <kwd>software tools</kwd>
      <kwd>spreadsheet</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Wellcome Trust Institutional Strategic Support Fund</institution>
          </institution-wrap>
        </funding-source>
        <award-id>204804/Z/16/Z</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Biotechnology and Biological Sciences Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000268</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>BB/M018040</award-id>
      </award-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Biotechnology and Biological Sciences Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000268</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>BB/S020128/1</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="9"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <label>1.</label>
    <title>Introduction</title>
    <p>As the open science landscape evolves, funding bodies and researchers themselves are developing ever-increasing expectations for opening access to the outcomes of their projects. The Synthetic Biology research community has a strong record and ethos of data sharing. Concomitantly, ever more rigorous standards have formed relating to open data; critically, how they are stored, documented, accessed and enriched with descriptive metadata. The FAIR data management practices are exemplary: promoting Findability, Accessibility, Interoperability and Reusability in scientific research data (<xref rid="R1" ref-type="bibr">1</xref>, <xref rid="R2" ref-type="bibr">2</xref>). However, it is not always clear for researchers—whose focus is rightly on experimentation and generating meaningful results—how these recommendations can be attained. Therefore, it is vital that research communities invest in not only adopting these practices, but also crucially in facilitating the delivery of these standards and practices by researchers while presenting minimal friction with their primary work.</p>
    <p>One of the most fundamental decisions researchers need to make in order to deliver effective, sustainable outputs with maximum impact is where they will publish and share their data. Candidate data repositories should encourage FAIR practices that will satisfy funders and serve the open science imperatives. They should also provide software tools, support and documentation that will empower researchers to perform their data management tasks with minimum efforts and preferably add value to the data they share. For synthetic biologists who design biological constructs, resources are available such as SynBioHub (<xref rid="R3" ref-type="bibr">3</xref>), or the Joint BioEnergy Institute’s public Inventory of Composable Elements (ICE), an open source registry software and platform for managing information about biological parts (<xref rid="R4" ref-type="bibr">4</xref>). We have previously evaluated both platforms and concluded that while they can be considered complementary solutions, SynBioHub shows more potential with its intrinsic handling of knowledge graphs (<xref rid="R5" ref-type="bibr">5</xref>). The SynBioHub repository offers a set of features that enable FAIR practices, as well as provides a flexible programmatic API with mature software tools and active community support.</p>
    <p>The FAIR data principles are summarized as ‘Facets’: data should be Findable, Accessible, Reusable and Interoperable (<xref rid="R2" ref-type="bibr">2</xref>), and SynBioHub supports these in a number of ways. For findability, (meta)data are registered and indexed as Resource Description Framework (RDF) (<xref rid="R6" ref-type="bibr">6</xref>) documents in a searchable knowledge graph, which can be queried using the ‘SPARQL Protocol and RDF Query Language’ (SPARQL) (<xref rid="R7" ref-type="bibr">7</xref>). This provides a powerful querying interface and allows access to all the metadata stored about entities (<xref rid="R5" ref-type="bibr">5</xref>). Besides using standard protocols such as SPARQL, SynBioHub makes data accessible because it provides a user interface (UI) that is user-friendly, where (meta)data can be easily retrieved in multiple formats, and it also exposes an Application Programming Interface (API) for easy programmatic access. Design (meta)data stored in SynBioHub are represented using SBOL 2.0 (<xref rid="R8" ref-type="bibr">8</xref>), an open, standardized data model for interoperability. The rich metadata model created through SBOL is flexible and expressive, having a plurality of relevant attributes, while data deposited in SynBioHub can be downloaded in the native SBOL format or first converted into an alternative format such as GenBank (<xref rid="R9" ref-type="bibr">9</xref>) or FASTA (<xref rid="R10" ref-type="bibr">10</xref>), thus allowing the designs to be exported easily and reused by future researchers.</p>
    <p>CyanoSource is a joint project between the McCormick lab at the University of Edinburgh, the Lea-Smith lab at the University of East Anglia, Edinburgh Genome foundry and Earlham Biofoundry. Among the outcomes of this research, a collection of recombinant plasmids targeting up to 3661 genes of the cyanobacterium <italic toggle="yes">Synechocystis</italic> sp. PCC 6803 (<italic toggle="yes">Synechocystis</italic> hereafter) are being assembled (based on genome assembly ASM972v1 from Kazusa (<xref rid="R11" ref-type="bibr">11</xref>)). This project aims to significantly advance the development of strains for biotechnology applications, and adherence to FAIR is an effective way to achieve it. The plasmids have been designed and now they are starting to be produced in batches by Golden Gate Assembly, checked and finally transformed into <italic toggle="yes">Synechocystis</italic> to induce a single gene deletion by homologous recombination. During the project, the plasmids will go through the following stages:</p>
    <p>Stage 1—the initial plasmid designs, waiting for production.</p>
    <p>Stage 2—the assembled plasmids. In some cases, they have a different structure than the initial designs from stage 1. If nothing else, their descriptions are updated to reflect the status change to ‘produced’.</p>
    <p>Stage 3—plasmids are verified by sequencing (also to check the barcodes are correct) and the real sequences are attached.</p>
    <p>Stage 4—plasmids are transformed into <italic toggle="yes">Synechocystis</italic> and checked by PCR to see if (i) the target gene has been knocked out and (ii) if the strain has fully segregated (i.e. all copies of the genome in the strain contain the gene deletion). This information is also recorded with the description.</p>
    <p>All of these designs are based on the same template pUC19 plasmid backbone and selection markers (codA and KanR), with variations in the combinations of sequences in homology flanks (i.e. the sequences flanking the gene sequence to be removed) and barcode markers (<xref rid="R12" ref-type="bibr">12</xref>). In our earlier evaluation of the SynBioHub platform (<xref rid="R5" ref-type="bibr">5</xref>), it was clear that the repository is ideal for publication of this type of data. To leverage the best available features of SynBioHub, however, it would be necessary to utilize the SBOL standard to describe the designs. Evidently, expecting researchers to manually create SBOL designs on this scale would be totally impracticable. It was therefore necessary to develop a software tool that would create an original template plasmid document and then generate a derived design for each variation of flank and barcode sequences. Once the library of plasmids was created, they would need to be deposited into SynBioHub for publication, which again would be a perfect task to automate. Finally, as the project transitions through the stages outlined above, there would need to be a convenient mechanism for performing metadata updates on multiple records.</p>
    <p>There is a rich ecosystem of SBOL-related tools that help in creating designs such as SBOLCanvas (<xref rid="R13" ref-type="bibr">13</xref>), SBOLDesigner (<xref rid="R14" ref-type="bibr">14</xref>), ShortBOL (<xref rid="R15" ref-type="bibr">15</xref>) or Cello (<xref rid="R16" ref-type="bibr">16</xref>). However, some of these were not suitable for the requirements of this project because they are intended for biologists to craft a single design at a time in a CAD-like environment (SBOLDesigner) or GUI (SBOLCanvas) and could not easily create multiple designs. Other tools, such as ShortBOL and Cello, require understanding of domain-specific languages or rules-based programming, which was unsuitable for our users who do not have the resources to dedicate to learning these frameworks.</p>
    <p>It was clear from early on in our project that MS Excel (<xref rid="R17" ref-type="bibr">17</xref>) would be the optimal data input format. Biologists routinely use Excel for recording and storing their designs, so the necessary inputs are typically already available in this format. Using Excel tables has the dual benefit that users feel comfortable with a familiar tool, while providing an effective but compact format to represent information about hundreds of synthetic designs. We therefore decided to provide the plasmid sequences and metadata attributes inside Excel spreadsheets, while the software itself is designed to accept various operational parameters such as the path to the Excel file, target SynBioHub collection URL and user credentials. While development of our software progressed, it emerged that another similar tool was in development: Excel2SBOL, an open-source Python library for converting MS Excel templates into SBOL documents (<xref rid="R18" ref-type="bibr">18</xref>). Although it was not available at the inception of our project, the release of Excel2SBOL reaffirms the utility of tools that can generate SBOL documents at scale.</p>
  </sec>
  <sec id="s2">
    <label>2.</label>
    <title>Materials and methods</title>
    <p>The SynBio2Easy application was written in the Java v11 (<xref rid="R19" ref-type="bibr">19</xref>) programming language. There are two main components that comprise the software tool: the SBOL2Easy library (<xref rid="R20" ref-type="bibr">20</xref>) and SynBio2Easy (<xref rid="R21" ref-type="bibr">21</xref>). SBOL2Easy provides the streamlined functions for generating and manipulating SBOL designs by utilizing the lower-level methods of LibSBOLj library (v2.4.0) (<xref rid="R22" ref-type="bibr">22</xref>, <xref rid="R23" ref-type="bibr">23</xref>). The SBOL2Easy library could be easily reused by other projects that would like to utilize some of the implemented operations like, for example, flattening of the designs. The SynBio2Easy application is a Command Line Interface (CLI), the presentation layer that wraps around SBOL2Easy and is responsible for user interaction. It is created with the Spring Boot (<xref rid="R24" ref-type="bibr">24</xref>) framework that provides a standardized application base. Apache Maven (<xref rid="R25" ref-type="bibr">25</xref>) was used to manage the software build and project dependencies. Docker (<xref rid="R26" ref-type="bibr">26</xref>) and the SynBioHub Docker images (<xref rid="R27" ref-type="bibr">27</xref>) were used to provide a SynBioHub platform for testing. The tool was tested with version 1.6.0 of the SynBioHub platform API (<xref rid="R28" ref-type="bibr">28</xref>). The generated designs were deposited into the public instance of SynBioHub (<ext-link xlink:href="https://synbiohub.org" ext-link-type="uri">https://synbiohub.org</ext-link>).</p>
  </sec>
  <sec id="s3">
    <label>3.</label>
    <title>Results</title>
    <sec id="s3-s1">
      <label>3.1</label>
      <title>SynBio2Easy</title>
      <p>The SynBio2Easy CLI application enables users to perform batch creation, deposit and update operations on synthetic biology designs encoded as SBOL ComponentDefinitions (<xref rid="R29" ref-type="bibr">29</xref>). The tool can either generate and modify SBOL documents and components by reading and writing SBOL files or it can be used to interact directly with a target SynBioHub server to upload new designs or update existing components. ‘Batch’ parameters for particular properties belonging to individual designs are recorded in MS Excel.</p>
      <p>The Java programming language was selected for development of the software because it has proven to be very easy to maintain over time, and it is also the primary implementation technology for SBOL 2 libraries and SynBioHub itself. The application was built using the Spring Boot framework, providing numerous advantages including an architecture based on dependency injection that promotes decoupling and simplifies testing. This framework also comes with the benefit that the application can be easily further developed into a web-based graphical UI by extension of the existing code base.</p>
      <p>Although the software is a command line tool, it guides the user through each scenario by prompting with a series of questions as seen in the screenshot (<xref rid="F1" ref-type="fig">Figure 1</xref>). The application also supports specification of all parameters as standard command line options, so that it can be easily integrated with scripts or as part of larger workflows. A detailed description of the available commands and options is provided in the README.md file of the SynBio2Easy repository (<xref rid="R21" ref-type="bibr">21</xref>). A collection of SBOL documents and Excel metadata input files are also provided in the ‘examples’ folder; the ‘README.md’ in this folder contains an end2end scenario that demonstrates all the SynBio2Easy options using the provided example files as inputs. We also created a document (SynBio2Easy_use_cases.docx) based on use cases that guides the user through a series of typical scenarios for working with a library of designs.</p>
      <fig position="float" id="F1" fig-type="figure">
        <label>Figure 1.</label>
        <caption>
          <p>SynBio2Easy Command Line Interface with a guided prompt.</p>
        </caption>
        <graphic xlink:href="ysac002f1" position="float"/>
      </fig>
      <p>The SynBio2Easy command line tool was used to GENERATE and DEPOSIT (see <xref rid="T1" ref-type="table">Table 1</xref>) CyanoSource plasmid designs into SynBioHub (<xref rid="F2 F3" ref-type="fig">Figures 2 and 3</xref>). They are available as the ‘cyano_coda_km’ collection accessible via the ‘sharing’ link (<xref rid="R30" ref-type="bibr">30</xref>) (shortened URL <ext-link xlink:href="https://bit.ly/3btmbd4" ext-link-type="uri">https://bit.ly/3btmbd4</ext-link>). The use cases were shown to be broadly relevant in a separate project conducted by Trevor Ho <italic toggle="yes">et al.</italic> (<xref rid="R31" ref-type="bibr">31</xref>); the ‘Intein_assisted_Bisection_Mapping’ collection generated for this project is publicly available in SynBioHub under the link (<xref rid="R32" ref-type="bibr">32</xref>). This collection was created by firstly uploading GenBank files to SynBioHub, then downloading the whole collection as SBOL and enriching it with additional metadata using the CLEAN and ANNOTATE commands of SynBio2Easy (<xref rid="T1" ref-type="table">Table 1</xref>).</p>
      <table-wrap position="float" id="T1">
        <label>Table 1.</label>
        <caption>
          <p>Available operations of SynBio2Easy</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col align="left" span="1"/>
            <col align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th valign="bottom" align="left" rowspan="1" colspan="1">Command</th>
              <th valign="bottom" align="left" rowspan="1" colspan="1">Behavior and example use case</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" rowspan="1" colspan="1">GENERATE</td>
              <td align="left" rowspan="1" colspan="1">Generates a series of designs based on an SBOL template and ‘concrete’ instance parameters (including sub-components’ sequences) specified in an Excel table<break/>Use case: generation of library of similar designs</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">ANNOTATE</td>
              <td align="left" rowspan="1" colspan="1">Adds information (e.g. descriptions, authors) to multiple component definitions in an SBOL document using details defined in an Excel table<break/>Use case: batch update of designs’ descriptions to change their status to ‘tested’ and add provenance</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">FLATTEN</td>
              <td align="left" rowspan="1" colspan="1">Converts a tree of SBOL sub-components in a design into a ‘flattened’ component definition with an annotated linear sequence<break/>Use case: create an alternative representation of a plasmid suitable for export to GenBank file format (see <xref rid="F3" ref-type="fig">Figure 3</xref>)</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">DEPOSIT</td>
              <td align="left" rowspan="1" colspan="1">Deposits files from a folder(s) into SynBioHub collection(s)<break/>Use case: Deposition of a large collection of designs</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">UPDATE</td>
              <td align="left" rowspan="1" colspan="1">Adds information (e.g. notes) as well as attachment files to multiple records in SynBioHub using details defined in an Excel table. Unlike ANNOTATE it is an online operation on a server.<break/>Use case: attach verified sequences to designs’ descriptions</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">CLEAN</td>
              <td align="left" rowspan="1" colspan="1">Removes annotations and namespaces specific to SynBioHub from an SBOL document, so it can be re-uploaded to SynBioHub<break/>Use case: quick edit of a SynBioHub collection using a text editor and downloaded XML file</td>
            </tr>
            <tr>
              <td align="left" rowspan="1" colspan="1">SYNBIO2TABLE</td>
              <td align="left" rowspan="1" colspan="1">Retrieves identity details of all members of a collection and saves them to an Excel file with headings for metadata columns supported by SynBio2Easy<break/>Use case: preparation of input file for the UPDATE operation</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <fig position="float" id="F2" fig-type="figure">
        <label>Figure 2.</label>
        <caption>
          <p>Example of a SynBioHub record (cs0002_slr0612_codA) a CyanoSource plasmid generated from an SBOL template and Excel descriptions. Red circles mark information that was inserted from the Excel input.</p>
        </caption>
        <graphic xlink:href="ysac002f2" position="float"/>
      </fig>
      <fig position="float" id="F3" fig-type="figure">
        <label>
Figure 3.
</label>
        <caption>
          <p>‘Flattened’ version of the same plasmid (cs0002_slr0612_codA) that contains only one fully annotated sequence that permits visualizations. The term ‘flattened’ means that the SBOL subcomponents in a hierarchical design are now mapped as annotations of one linear sequence.</p>
        </caption>
        <graphic xlink:href="ysac002f3" position="float"/>
      </fig>
      <p>For most operations, the tool requires two inputs: ComponentDefinition(s) from an SBOL document or SynBioHub records and metadata directives in MS Excel format that provide details for the actions to be performed on the designs. The Excel table must always contain the ‘display_id’ column, which is used to identify existing ComponentDefinitions (or to create a new one with the specified ID). Other columns named with selected keywords can provide values for designs attributes like name, description text, location of files to attach or definitions of subcomponents that should be concretized from the ‘generic’ template, all depending on the particular operation (see <xref rid="T1" ref-type="table">Table 1</xref>).</p>
      <p>Cells in the Excel table can include simple formulas, for example, ‘CONCATENATE($B$2, “is a PCR file”)’ (<xref rid="F4" ref-type="fig">Figure 4</xref>), which will be correctly parsed by the tool. Additionally, the tool supports simple templating, for example, the description text: ‘Attachment {display_id}.xls contains activity data’ would be interpolated by substituting ‘{display_id}’ with the corresponding ComponentDefinition display ID cell’s value in the same row of the table.</p>
      <fig position="float" id="F4" fig-type="figure">
        <label>Figure 4.</label>
        <caption>
          <p>Library definition file (top), for each row a new ComponentDefinition is generated. The metadata are provided in the corresponding columns (e.g. ‘author’), and field values can be dynamically calculated using excel formulas and simple templating. The example of a generated design after it is uploaded to SynBioHub (bottom). Arrows link excel cells to corresponding fields in the SynBioHub record.</p>
        </caption>
        <graphic xlink:href="ysac002f4" position="float"/>
      </fig>
      <p>Here, we describe a SynBio2Easy ‘GENERATE’ use case: the process of generating a new library of plasmid design records as in stage 1 of the CyanoSource project. In this scenario, the intention is to generate SBOL files describing a library of designs. A template SBOL ComponentDefinition is required, which contains subcomponents without specified sequences, and these subcomponents will vary between members of the library. The concrete sequences for each instance are provided in the MS Excel spreadsheet along with the descriptive metadata (<xref rid="F4" ref-type="fig">Figure 4</xref>, top). The program generates a new SBOL document containing ComponentDefinitions for each Excel record based on the template and the provided details.</p>
      <p>The ‘examples’ folder in out GitHub repository (<xref rid="R21" ref-type="bibr">21</xref>) contains the example template design in the ‘lib_template.xml’ file, which represents a simple plasmid with ‘left’, ‘right’ and ‘barcode’ subcomponents similar to the real CyanoSource template. Such templates can be generated with a visual tool such as SBOL Designer or SBOL Canvas, although for this project we created the template plasmids programmatically using the SBOL API.</p>
      <p>The same folder includes an example of the Excel library definition file ‘lib_def.xlsx’ (<xref rid="F4" ref-type="fig">Figure 4</xref>, top), which provides descriptive metadata like ‘author’, ‘name’, ‘notes’, etc. for each library member. Apart from the metadata, the Excel file contains the concrete sequences for the barcode, left and right subcomponents. Matching between subcomponents and their structures is done using their id and column headers. The additional columns ‘SUBCOMPONENT_id’, ‘SUBCOMPONENT_name’ can be used to customize the label and name of the generated concrete subcomponents. See <xref rid="F4" ref-type="fig">Figure 4</xref> to observe how the simple variable templating and excel formulas are used to create ‘context’ aware metadata for the individual library members.</p>
      <p>Apart from GENERATE, SynBio2Easy supports six other operations: ANNOTATE, FLATTEN, DEPOSIT, UPDATE, CLEAN and SYNBIO2TABLE, which are briefly described in <xref rid="T1" ref-type="table">Table 1</xref>. We have provided detailed descriptions of all the use cases in the ‘SynBio2Easy_use_cases.docx’ file inside the SynBio2Easy GitHub repository (<xref rid="R21" ref-type="bibr">21</xref>). However, we recommend exploring our tool by following our step-by-step quick start instructions from the ‘examples’ folder in GitHub. It describes a simple end-to-end workflow that operates on the provided example files and guides the user through all the available operations of the tool (including ready-to-copy command line instructions).</p>
    </sec>
    <sec id="s3-s2">
      <label>3.2</label>
      <title>Limitations</title>
      <p>This tool was created to assist us with an actual project, so it is tailored to our particular needs. For example, the batch processing is limited to only instances of ComponentDefinition, flattening works only with sequence locations provided as Range objects, and the tool itself supports only SBOL2.</p>
    </sec>
  </sec>
  <sec id="s4">
    <label>4.</label>
    <title>Discussion</title>
    <p>While developing SynBio2Easy, it became clear that SBOL is a powerful modeling language and that SynBioHub is a highly effective data-sharing platform, both of which are really catering for SBOL experts in the field of synthetic biology. During the initial evaluation of ICE and SynBioHub platforms, one of the authors Anja Nenninger—an experienced biologist—said:</p>
    <p>‘I understand ICE more but SynBioHub looks like being the thing of the future.’</p>
    <p>However, biologists outside the SBOL community may find a steep learning curve to become acquainted with the standard and the necessary tools. Our SynBio2Easy software reduces barriers to depositing research data into SynBioHub for particular use cases, notably automating similar operations on collections of designs and providing functionality to compensate for the limitations of the current platform. In the following section, we discuss how we overcame some limitations of SynBioHub and give our recommendations for improving adoption of SBOL ecosystem by new users.</p>
    <sec id="s4-s1">
      <label>4.1</label>
      <title>Overcoming limitations</title>
      <p>Some of the features in SynBio2Easy were implemented in order to compensate for the current usability limitations of the SynBioHub platform.</p>
      <p>Visualizations are one of the most important features for end users, which in part motivated our ‘FLATTEN’ command. Feedback from our colleagues has made it clear that biologists ‘love’ the functional glyphs of the designs in SynBioHub. At the same time, they also need to see—and are accustomed to seeing—associated annotated sequences. However, those features are only available for simple designs; once subcomponents are integrated, the visualizations of sequences are no longer accessible. At the start of this project, the subcomponents were rendered in SynBioHub below the top-level design if they also contained a nested subcomponent. Whether it was a bug or a feature we are uncertain, but currently only top-level components are rendered and the complex subcomponents are simply depicted as boxes. This degrades the quality of the records because tedious clicking between designs is required to view the subcomponent sequences. The usefulness of records is therefore greatly limited as the full sequence is not visible.</p>
      <p>For the reasons described above, SynBio2Easy offers a ‘FLATTEN’ command, which converts subcomponent tree hierarchies into one annotated sequence (<xref rid="F2 F3" ref-type="fig">Figures 2 and 3</xref>). This feature exists purely to allow the biologist to easily visualize the sequence details, or so they can download the design in GenBank format and edit it in their preferred software such as SnapGene (<xref rid="R33" ref-type="bibr">33</xref>). Such flattening cannot be performed for all ‘abstract’ SBOL ComponentDefinitions, but all instantiations that have been physically assembled and whose concrete sequences are known and present can probably be flattened. This process could be easily integrated into SynBioHub as a pre-export step using our Java implementation or before the annotated sequence is rendered by the visualization plugin.</p>
      <p>A typical workflow for updating public resources consists of the following actions: downloading, modifying and then uploading again. This workflow is not possible with SynBioHub at present, because the downloaded SBOL files cannot be readily re-uploaded to the server. For this reason, we implemented the ‘CLEAN’ feature of our tool, which automatically removes any annotations specific to SynBioHub in the downloaded SBOL document, enabling re-upload of the file back to the server.</p>
      <p>Similarly, the ‘DEPOSIT’ command was implemented to compensate for difficulties with using the SynBioHub web UI to upload large—or sets of multiple—files. Attempting to do so can result in request timeouts and database errors on the back-end server, so the batch upload function provided by SynBio2Easy alleviates these frustrations.</p>
    </sec>
    <sec id="s4-s2">
      <label>4.2</label>
      <title>Enhancing SBOL/SynBioHub adoption</title>
      <p>The development of this software toolkit proved to be more challenging than anticipated, primarily because we were not directly involved in the SBOL community. Half of our project team have experience in research data management and software development, while the other half are molecular biologists with basic computational and bioinformatics expertise. By reading the SBOL specification, the ‘software’ part of the team learned how to encode, construct and assemble appropriate objects into the correct data structures. However, our limited experience meant that it was not always obvious how to represent the design plasmids. On many occasions, we investigated SBOL and SynBioHub capabilities with a ‘forensic programming’ approach, that is, writing code using the supporting libraries to appraise what the outcome would be, for example, generating component designs with varying attributes and structure and evaluating how they are rendered in SynBioHub.</p>
      <p>One helpful element would be a collection of recommended component (<xref rid="R29" ref-type="bibr">29</xref>) and module (<xref rid="R34" ref-type="bibr">34</xref>) definitions. This collection would showcase how different structures and functions can be expressed and represented in SBOL and how they then look and interlink within SynBioHub. Equipped with these reference templates, new users could use them as the basis of their designs or derive inspiration from them for creating their own entirely new entities. The iGEM collections (<xref rid="R35" ref-type="bibr">35</xref>) provide a multitude of examples, but it is not always clear which of these are the most effective and should be considered the best ‘reference’ material upon which to base new designs.</p>
      <p>Similarly, there is a shortage of guidance on how to actually encode concrete characteristics of the synthetic constructs; for example, to declare that ‘The target organism is a cyanobacterium’ for a design, the expected function is an ‘XOR gate’ and it is compatible with the Golden Gate Assembly (<xref rid="R36" ref-type="bibr">36</xref>, <xref rid="R37" ref-type="bibr">37</xref>) method. Without further guidelines on which namespaces and terms to use from the bio-ontologies, much of the knowledge about designs are likely to become unstructured free text appended in the description field, diminishing the full expressive power of the language.</p>
      <p>At the recent Harmony 2021 meeting of SynBioHub developers and users, the idea of ‘minimal information’ for designs was discussed. There is a definite need for recommendations on the structured encoding of standard facts and properties of designs and constituent parts. A list of recommended name spaces and terms are needed, similarly to those currently provided for the ‘role’ and ‘type’ attributes of component definitions.</p>
      <p>The flexibility and powerful expressiveness of SBOL should not hinder biologists from using it. For example, to work around the limitation that including subcomponents would prevent users from seeing the entire sequence in the forms of functional glyphs, we could simply generate only ‘flat’ designs equivalent to annotated DNA sequences. Such representations are essentially GenBank files and defeat the purpose of SBOL. Naturally, the UI should not detract from the rich features offered by the SBOL language. Therefore, it would be a very welcome function in the UI if the user could zoom into subcomponent structures from the top-level design and view the functional glyphs belonging to its subcomponents.</p>
      <p>We found the SynBioHub API easy to use and basic tasks are well documented, with practical examples for Shell scripting, Python and JavaScript languages. However, it would be beneficial to adopt a fully RESTful (<xref rid="R38" ref-type="bibr">38</xref>) API design perhaps based on a standard specification such as the OpenAPI (<xref rid="R39" ref-type="bibr">39</xref>), especially to reduce the number of requests for the update operation.</p>
      <p>On multiple occasions, the public SynBioHub instances manifested glitches preventing it from being used (for instance, rendering loops, failing search engine and timeouts). It is important that any stability issues with the platform are detected early and remedied since users who have a poor experience might be discouraged from returning to the platform in the future.</p>
    </sec>
  </sec>
  <sec id="s5">
    <label>5.</label>
    <title>Conclusions</title>
    <p>At the recent HARMONY 2021, Professor Chris J. Myers and his team from the University of Colorado Boulder presented their Excel2SBOL (<xref rid="R18" ref-type="bibr">18</xref>) tool, which performs functionality similar to that of our tool. This indicates that the previously described shortcomings have also been identified by other researchers and their use cases. While the software that we produced does address the missing functionalities and limitations in the current SBOL/SynBioHub ecosystem, we hope SynBio2Easy will become redundant once the new versions of SBOL 3.0 and SynBioHub 2.0 are delivered.</p>
    <p>Ultimately, for successful adoption of SBOL, SynBioHub should handle all aspects of working with the designs, from specifying their structure, annotating sequences to online editing of all the information. The whole synthetic biology community should support SynBioHub, or an equivalent, that can provide a combination of CAD-like features with a powerful search engine, to become the default tool for synthetic biologists.</p>
    <p>In the meantime, we hope that SynBio2Easy and similar tools will help in widening adoption of the SBOL standard and incorporation of SynBioHub into daily research workflows, even by non-expert users.</p>
  </sec>
</body>
<back>
  <sec sec-type="data-availability" id="s6">
    <title>Data availability</title>
    <p>The version 1.7.0 of SynBio2Easy tool, which is described in this manuscript, has been deposited to Zenodo as <ext-link xlink:href="https://doi.org/10.5281/zenodo.5719362" ext-link-type="uri">https://doi.org/10.5281/zenodo.5719362</ext-link>. The source code for the command line tool SynBio2Easy is available in GitHub: <ext-link xlink:href="https://github.com/BioRDM/synbio2easy" ext-link-type="uri">https://github.com/BioRDM/synbio2easy</ext-link>. The actual implementation of batch operations on SBOL documents is decoupled from the command line driver and available as the sbol2easy project: <ext-link xlink:href="https://github.com/BioRDM/sbol2easy" ext-link-type="uri">https://github.com/BioRDM/sbol2easy</ext-link>.</p>
  </sec>
  <sec id="s7">
    <title>Funding</title>
    <p>UKRI Biotechnology and Biological Sciences Research Council (BBSRC) (grant no [BB/S020128/1] to AMcC; grant no [BB/M018040] to the UK Centre for Mammalian Synthetic Biology); Welcome Trust Institutional Strategic Support Fund (ISSF; award [204804/Z/16/Z] to the University of Edinburgh).</p>
  </sec>
  <sec id="s8">
    <title>Conflict of interest statement.</title>
    <p>No potential conflict of interest was reported by the authors.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="R1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wilkinson</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Dumontier</surname><given-names>M.</given-names></string-name>, <string-name><surname>Aalbersberg</surname><given-names>I.</given-names></string-name>, <string-name><surname>Appleton</surname><given-names>G.</given-names></string-name>, <string-name><surname>Axton</surname><given-names>M.</given-names></string-name>, <string-name><surname>Baak</surname><given-names>A.</given-names></string-name>, <string-name><surname>Blomberg</surname><given-names>N</given-names></string-name>, <string-name><surname>Boiten</surname><given-names>J.W.</given-names></string-name>, <string-name><surname>da Silva Santos</surname><given-names>L.B.</given-names></string-name>, <string-name><surname>Bourne</surname><given-names>P.E.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2016</year>) <article-title>The FAIR Guiding Principles for scientific data management and stewardship</article-title>. <source><italic toggle="yes">Sci. Data</italic></source>, <volume>3</volume>, <page-range>160018</page-range>.</mixed-citation>
    </ref>
    <ref id="R2">
      <label>2.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>FORCE11</collab></person-group>. (<year>2020</year>) <article-title><italic toggle="yes">Guiding</italic>  <italic toggle="yes">Principles for Findable, Accessible, Interoperable and Re-usable Data Publishing</italic>  <italic toggle="yes">version b1.0</italic></article-title>. <ext-link xlink:href="https://www.force11.org/fairprinciples" ext-link-type="uri">https://www.force11.org/fairprinciples</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McLaughlin</surname><given-names>J.A.</given-names></string-name>, <string-name><surname>Myers</surname><given-names>C.J.</given-names></string-name>, <string-name><surname>Zundel</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Mısırlı</surname><given-names>G.</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>M.</given-names></string-name>, <string-name><surname>Ofiteru</surname><given-names>I.D.</given-names></string-name>, <string-name><surname>Goni-Moreno</surname><given-names>A.</given-names></string-name> and <string-name><surname>Wipat</surname><given-names>A</given-names></string-name></person-group>. (<year>2018</year>) <article-title>SynBioHub: a standards-enabled design repository for synthetic biology</article-title>. <source><italic toggle="yes">ACS Synth. Biol.</italic></source>, <volume>7</volume>, <fpage>682</fpage>–<lpage>688</lpage>.<pub-id pub-id-type="pmid">29316788</pub-id></mixed-citation>
    </ref>
    <ref id="R4">
      <label>4.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>JBEI ICE Team</collab></person-group>. (<year>2021</year>) <article-title><italic toggle="yes">ICE</italic>  <italic toggle="yes">D</italic><italic toggle="yes">ocumentation.</italic>  <italic toggle="yes">I</italic><italic toggle="yes">nventory of</italic>  <italic toggle="yes">C</italic><italic toggle="yes">omposable</italic>  <italic toggle="yes">E</italic><italic toggle="yes">lements</italic></article-title>. <ext-link xlink:href="https://ice.jbei.org/" ext-link-type="uri">https://ice.jbei.org/</ext-link> (<comment>9 November 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Urquiza-García</surname><given-names>U.</given-names></string-name>, <string-name><surname>Zieliński</surname><given-names>T.</given-names></string-name> and <string-name><surname>Millar</surname><given-names>A.J.</given-names></string-name></person-group> (<year>2019</year>) <article-title>Better research by efficient sharing: evaluation of free management platforms for synthetic biology designs</article-title>. <source><italic toggle="yes">Synth. Biol.</italic></source>, <volume>4</volume>, <page-range>ysz016</page-range>.</mixed-citation>
    </ref>
    <ref id="R6">
      <label>6.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>World Wide Web Consortium</collab></person-group>. (<year>2014</year>) <article-title><italic toggle="yes">RDF 1.1</italic>  <italic toggle="yes">C</italic><italic toggle="yes">oncepts and</italic>  <italic toggle="yes">A</italic><italic toggle="yes">bstract</italic>  <italic toggle="yes">S</italic><italic toggle="yes">yntax</italic></article-title>. <ext-link xlink:href="https://www.w3.org/TR/rdf11-concepts/" ext-link-type="uri">https://www.w3.org/TR/rdf11-concepts/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R7">
      <label>7.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>World Wide Web Consortium</collab></person-group>. (<year>2013</year>) <article-title><italic toggle="yes">SPARQL 1.1</italic>  <italic toggle="yes">Q</italic><italic toggle="yes">uery</italic>  <italic toggle="yes">L</italic><italic toggle="yes">anguage. SPARQL 1.1</italic>  <italic toggle="yes">Q</italic><italic toggle="yes">uery</italic>  <italic toggle="yes">L</italic><italic toggle="yes">anguage</italic></article-title>. <ext-link xlink:href="https://www.w3.org/TR/sparql11-query/" ext-link-type="uri">https://www.w3.org/TR/sparql11-query/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R8">
      <label>8.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>The SBOL Team</collab></person-group>. (<year>2021</year>) <article-title><italic toggle="yes">The</italic>  <italic toggle="yes">S</italic><italic toggle="yes">ynthetic</italic>  <italic toggle="yes">B</italic><italic toggle="yes">iology</italic>  <italic toggle="yes">O</italic><italic toggle="yes">pen</italic>  <italic toggle="yes">L</italic><italic toggle="yes">anguage</italic></article-title>. <source>The Synthetic Biology Open Language</source>  <ext-link xlink:href="https://sbolstandard.org/" ext-link-type="uri">https://sbolstandard.org/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R9">
      <label>9.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>GenBank Overview</collab></person-group>. <article-title><italic toggle="yes">GenBank</italic>  <italic toggle="yes">O</italic><italic toggle="yes">verview</italic></article-title>. <ext-link xlink:href="https://https.ncbi.nlm.nih.gov/genbank/" ext-link-type="uri">https://https.ncbi.nlm.nih.gov/genbank/</ext-link> (<comment>20 April 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pearson</surname><given-names>W.R.</given-names></string-name> and <string-name><surname>Lipman</surname><given-names>D.J.</given-names></string-name></person-group> (<year>1988</year>) <article-title>Improved tools for biological sequence comparison</article-title>. <source><italic toggle="yes">Proc. Natl Acad. Sci. USA</italic></source>, <volume>85</volume>, <fpage>2444</fpage>–<lpage>2448</lpage>.<pub-id pub-id-type="pmid">3162770</pub-id></mixed-citation>
    </ref>
    <ref id="R11">
      <label>11.</label>
      <mixed-citation publication-type="other">Kaneko,T. Structural analysis of four large plasmids harboring in a unicellular cyanobacterium, Synechocystis sp. PCC 6803. <ext-link xlink:href="https://www.ncbi.nlm.nih.gov/assembly/GCF_000009725.1" ext-link-type="uri">https://www.ncbi.nlm.nih.gov/assembly/GCF_000009725.1</ext-link> (<comment>11 August 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R12">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lea-Smith</surname><given-names>D.J.</given-names></string-name>, <string-name><surname>Vasudevan</surname><given-names>R.</given-names></string-name> and <string-name><surname>Howe</surname><given-names>C.J.</given-names></string-name></person-group> (<year>2016</year>) <article-title>Generation of marked and markerless mutants in model cyanobacterial species</article-title>. <source><italic toggle="yes">J. Vis. Exp.</italic></source>, <bold>111</bold>, 54001–540013.</mixed-citation>
    </ref>
    <ref id="R13">
      <label>13.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Synthetic Biology Data Exchange Group</collab></person-group>. (<year>2021</year>) <ext-link xlink:href="https://github.com/SynBioDex/SBOLCanvas" ext-link-type="uri">https://github.com/SynBioDex/SBOLCanvas</ext-link> (10 January 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="R14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>M.</given-names></string-name>, <string-name><surname>McLaughlin</surname><given-names>J.A.</given-names></string-name>, <string-name><surname>Wipat</surname><given-names>A.</given-names></string-name> and <string-name><surname>Myers</surname><given-names>C.J.</given-names></string-name></person-group> (<year>2017</year>) <article-title>SBOLDesigner 2: an intuitive tool for structural genetic design</article-title>. <source><italic toggle="yes">ACS Synth. Biol.</italic></source>, <volume>6</volume>, <fpage>1150</fpage>–<lpage>1160</lpage>.<pub-id pub-id-type="pmid">28441476</pub-id></mixed-citation>
    </ref>
    <ref id="R15">
      <label>15.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Crowther</surname><given-names>M.</given-names></string-name>, <string-name><surname>Grozinger</surname><given-names>L.</given-names></string-name>, <string-name><surname>Pocock</surname><given-names>M.</given-names></string-name>, <string-name><surname>Taylor</surname><given-names>C.P.D.</given-names></string-name>, <string-name><surname>McLaughlin</surname><given-names>J.A.</given-names></string-name>, <string-name><surname>Mısırlı</surname><given-names>G.</given-names></string-name>, <string-name><surname>Bartley</surname><given-names>B.A.</given-names></string-name>, <string-name><surname>Beal</surname><given-names>J.</given-names></string-name>,<string-name><surname>Goñi-Moreno</surname><given-names>A.</given-names></string-name> and <string-name><surname>Wipat</surname><given-names>A.</given-names></string-name></person-group> (<year>2021</year>) <article-title>ShortBOL. ShortBOL; Integrative bioinformatics @ NCL</article-title>.</mixed-citation>
    </ref>
    <ref id="R16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nielsen</surname><given-names>A.A.</given-names></string-name>, <string-name><surname>Der</surname><given-names>B.S.</given-names></string-name>, <string-name><surname>Shin</surname><given-names>J.</given-names></string-name>, <string-name><surname>Vaidyanathan</surname><given-names>P.</given-names></string-name>, <string-name><surname>Paralanov</surname><given-names>V.</given-names></string-name>, <string-name><surname>Strychalski</surname><given-names>E.A.</given-names></string-name>, <string-name><surname>Ross</surname><given-names>D.</given-names></string-name> and <string-name><surname>Densmore</surname><given-names>D.</given-names></string-name>, <string-name><surname>Voigt</surname><given-names>C.A.</given-names></string-name></person-group> (<year>2016</year>) <article-title>Genetic circuit design automation</article-title>. <source><italic toggle="yes">Science</italic></source>, <volume>352</volume>, <page-range>6281</page-range>.</mixed-citation>
    </ref>
    <ref id="R17">
      <label>17.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Microsoft</collab></person-group>. (<year>2021</year>) <article-title><italic toggle="yes">Microsoft</italic>  <italic toggle="yes">E</italic><italic toggle="yes">xcel</italic>  <italic toggle="yes">S</italic><italic toggle="yes">preadsheet</italic>  <italic toggle="yes">S</italic><italic toggle="yes">oftware</italic></article-title>. <ext-link xlink:href="https://www.microsoft.com/en-us/microsoft-365/excel" ext-link-type="uri">https://www.microsoft.com/en-us/microsoft-365/excel</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R18">
      <label>18.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Synthetic Biology Data Exchange Group</collab></person-group>. (<year>2021</year>) <article-title><italic toggle="yes">SynBioDex/</italic><italic toggle="yes">E</italic><italic toggle="yes">xcel-to-SBOL</italic></article-title>. <ext-link xlink:href="https://github.com/SynBioDex/Excel-to-SBOL" ext-link-type="uri">https://github.com/SynBioDex/Excel-to-SBOL</ext-link> (10 January 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="R19">
      <label>19.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Oracle</collab></person-group>. <article-title><italic toggle="yes">Java</italic>  <italic toggle="yes">S</italic><italic toggle="yes">oftware</italic></article-title>. <ext-link xlink:href="https://www.oracle.com/java/" ext-link-type="uri">https://www.oracle.com/java/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R20">
      <label>20.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Zieliński</surname><given-names>T.</given-names></string-name> and <string-name><surname>Hay</surname><given-names>J.</given-names></string-name></person-group> (<year>2021</year>) <article-title>BioRDM/sbol2easy</article-title>. <ext-link xlink:href="https://github.com/BioRDM/sbol2easy" ext-link-type="uri">https://github.com/BioRDM/sbol2easy</ext-link> (10 January 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="R21">
      <label>21.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Zieliński</surname><given-names>T.</given-names></string-name> and <string-name><surname>Hay</surname><given-names>J.</given-names></string-name></person-group> (<year>2021</year>) <article-title>BioRDM/synbio2easy</article-title>. <ext-link xlink:href="https://github.com/BioRDM/synbio2easy" ext-link-type="uri">https://github.com/BioRDM/synbio2easy</ext-link> (10 January 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="R22">
      <label>22.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Synthetic Biology Data Exchange Group</collab></person-group>. (<year>2020</year>) <ext-link xlink:href="https://github.com/SynBioDex/libSBOLj" ext-link-type="uri">https://github.com/SynBioDex/libSBOLj</ext-link> (10 January 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="R23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Nguyen</surname><given-names>T.</given-names></string-name>, <string-name><surname>Roehner</surname><given-names>N.</given-names></string-name>, <string-name><surname>Misirli</surname><given-names>G.</given-names></string-name>, <string-name><surname>Pocock</surname><given-names>M.</given-names></string-name>, <string-name><surname>Oberortner</surname><given-names>E.</given-names></string-name>, <string-name><surname>Samineni</surname><given-names>M.</given-names></string-name>, <string-name><surname>Zundel</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Beal</surname><given-names>J.</given-names></string-name>, <string-name><surname>Clancy</surname><given-names>K.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2015</year>) <article-title>libSBOLj 2.0: a Java library to support SBOL 2.0</article-title>. <source><italic toggle="yes">IEEE Life Sci. Lett.</italic></source>, <volume>1</volume>, <fpage>34</fpage>–<lpage>37</lpage>.</mixed-citation>
    </ref>
    <ref id="R24">
      <label>24.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Spring Boot</collab></person-group>. <ext-link xlink:href="https://spring.io/projects/spring-boot" ext-link-type="uri">https://spring.io/projects/spring-boot</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R25">
      <label>25.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Maven</surname><given-names>A.</given-names></string-name></person-group> (<year>2021</year>) <ext-link xlink:href="https://maven.apache.org/" ext-link-type="uri">https://maven.apache.org/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R26">
      <label>26.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Docker Inc</collab></person-group>. <ext-link xlink:href="https://hub.docker.com" ext-link-type="uri">https://hub.docker.com</ext-link> (<comment>6 April 2020, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R27">
      <label>27.</label>
      <mixed-citation publication-type="other"><ext-link xlink:href="https://hub.docker.com/r/synbiohub/synbiohub" ext-link-type="uri">https://hub.docker.com/r/synbiohub/synbiohub</ext-link> (<year>2021</year>) (9 November 2021, date last accessed).</mixed-citation>
    </ref>
    <ref id="R28">
      <label>28.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>The SynBioHub Team SynBioHub API Documentation</collab></person-group>. <article-title><italic toggle="yes">SynBioHub API</italic>  <italic toggle="yes">D</italic><italic toggle="yes">ocumentation</italic></article-title>. <ext-link xlink:href="https://wiki.synbiohub.org/api-docs/" ext-link-type="uri">https://wiki.synbiohub.org/api-docs/</ext-link> (<comment>20 April 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R29">
      <label>29.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>ComponentDefinition Class Reference</collab></person-group>. <ext-link xlink:href="http://synbiodex.github.io/libSBOL/classsbol_1_1_component_definition.html" ext-link-type="uri">http://synbiodex.github.io/libSBOL/classsbol_1_1_component_definition.html</ext-link> (<comment>17 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R30">
      <label>30.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>McCormick</surname><given-names>A.</given-names></string-name></person-group> (<year>2021</year>) <article-title>cyano_coda_km_collection</article-title>. <ext-link xlink:href="https://synbiohub.org/user/alistairmccormick/cyano_coda_km/cyano_coda_km_collection/1.0/31ab6b516d8364dd1db9519f2d5b251ad791bdde/share" ext-link-type="uri">https://synbiohub.org/user/alistairmccormick/cyano_coda_km/cyano_coda_km_collection/1.0/31ab6b516d8364dd1db9519f2d5b251ad791bdde/share</ext-link> (<comment>11 August 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ho</surname><given-names>T.Y.H.</given-names></string-name>, <string-name><surname>Shao</surname><given-names>A.</given-names></string-name>, <string-name><surname>Lu</surname><given-names>Z.</given-names></string-name>, <string-name><surname>Savilahti</surname><given-names>H.</given-names></string-name>, <string-name><surname>Menolascina</surname><given-names>F.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>L.</given-names></string-name>, <string-name><surname>Dalchau</surname><given-names>N.</given-names></string-name> and <string-name><surname>Wang</surname><given-names>B.</given-names></string-name></person-group> (<year>2021</year>) <article-title>A systematic approach to inserting split inteins for Boolean logic gate engineering and basal activity reduction</article-title>. <source><italic toggle="yes">Nat. Commun.</italic></source>, <volume>12</volume>, <page-range>2200</page-range>.</mixed-citation>
    </ref>
    <ref id="R32">
      <label>32.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Ho</surname><given-names>T.Y.H.</given-names></string-name></person-group> (<year>2020</year>) <article-title><italic toggle="yes">Intein_assisted_</italic><italic toggle="yes">B</italic><italic toggle="yes">isection_</italic><italic toggle="yes">M</italic><italic toggle="yes">apping</italic></article-title>. <ext-link xlink:href="https://synbiohub.org/public/Intein_assisted_Bisection_Mapping/Intein_assisted_Bisection_Mapping_collection/1" ext-link-type="uri">https://synbiohub.org/public/Intein_assisted_Bisection_Mapping/Intein_assisted_Bisection_Mapping_collection/1</ext-link> (<comment>11 August 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R33">
      <label>33.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>SnapGene</collab></person-group>. <ext-link xlink:href="https://www.snapgene.com/" ext-link-type="uri">https://www.snapgene.com/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R34">
      <label>34.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>ModuleDefinition Class Reference</collab></person-group>. <ext-link xlink:href="http://synbiodex.github.io/libSBOL/classsbol_1_1_module_definition.html" ext-link-type="uri">http://synbiodex.github.io/libSBOL/classsbol_1_1_module_definition.html</ext-link> (<comment>17 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
    <ref id="R35">
      <label>35.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>The iGEM Registry Team Collections</collab></person-group>. <ext-link xlink:href="http://parts.igem.org/Collections" ext-link-type="uri">http://parts.igem.org/Collections</ext-link> (Accessed <comment>May 17, 2021</comment>).</mixed-citation>
    </ref>
    <ref id="R36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Lee</surname><given-names>J.H.</given-names></string-name>, <string-name><surname>Skowron</surname><given-names>P.M.</given-names></string-name>, <string-name><surname>Rutkowska</surname><given-names>S.M.</given-names></string-name>, <string-name><surname>Hong</surname><given-names>S.S.</given-names></string-name> and <string-name><surname>Kim</surname><given-names>S.C.</given-names></string-name></person-group> (<year>1996</year>) <article-title>Sequential amplification of cloned DNA as tandem multimers using class-IIS restriction enzymes</article-title>. <source><italic toggle="yes">Genet. Anal.</italic></source>, <volume>13</volume>, <fpage>139</fpage>–<lpage>145</lpage>.<pub-id pub-id-type="pmid">9117889</pub-id></mixed-citation>
    </ref>
    <ref id="R37">
      <label>37.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Vasudevan</surname><given-names>R.</given-names></string-name>, <string-name><surname>Gale</surname><given-names>G.A.R.</given-names></string-name>, <string-name><surname>Schiavon</surname><given-names>A.A.</given-names></string-name>, <string-name><surname>Puzorjov</surname><given-names>A.</given-names></string-name>, <string-name><surname>Malin</surname><given-names>J.</given-names></string-name>, <string-name><surname>Gillespie</surname><given-names>M.D.</given-names></string-name>, <string-name><surname>Vavitsas</surname><given-names>K.</given-names></string-name>, <string-name><surname>Zulkower</surname><given-names>V.</given-names></string-name>, <string-name><surname>Wang</surname><given-names>B.</given-names></string-name>, <string-name><surname>Howe</surname><given-names>C.J.</given-names></string-name></person-group>  <etal>et al.</etal> (<year>2019</year>) <article-title>CyanoGate: a modular cloning suite for engineering cyanobacteria based on the plant MoClo syntax</article-title>. <source><italic toggle="yes">Plant Physiol.</italic></source>, <volume>180</volume>, <fpage>39</fpage>–<lpage>55</lpage>.<pub-id pub-id-type="pmid">30819783</pub-id></mixed-citation>
    </ref>
    <ref id="R38">
      <label>38.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Wikipedia</collab></person-group>. (<year>2021</year>) <article-title>Representational state transfer</article-title>. <ext-link xlink:href="https://en.wikipedia.org/wiki/Representational_state_transfer" ext-link-type="uri">https://en.wikipedia.org/wiki/Representational_state_transfer</ext-link> (10 January 2022, date last accessed).</mixed-citation>
    </ref>
    <ref id="R39">
      <label>39.</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><collab>Swagger</collab></person-group>. <article-title><italic toggle="yes">OpenAPI</italic>  <italic toggle="yes">S</italic><italic toggle="yes">pecification -</italic>  <italic toggle="yes">V</italic><italic toggle="yes">ersion 3.0.3</italic></article-title>  <ext-link xlink:href="https://swagger.io/specification/" ext-link-type="uri">https://swagger.io/specification/</ext-link> (<comment>19 May 2021, date last accessed).</comment></mixed-citation>
    </ref>
  </ref-list>
</back>

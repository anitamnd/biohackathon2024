<?properties open_access?>
<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3114743</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-12-126</article-id>
    <article-id pub-id-type="pmid">21527030</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-12-126</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>STSE: Spatio-Temporal Simulation Environment Dedicated to Biology</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="A1">
        <name>
          <surname>Stoma</surname>
          <given-names>Szymon</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>szymon.stoma@gmail.com</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Fröhlich</surname>
          <given-names>Martina</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>martina.froehlich@biologie.hu-berlin.de</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Gerber</surname>
          <given-names>Susanne</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>gerber.sj@gmail.com</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Klipp</surname>
          <given-names>Edda</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>edda.klipp@rz.hu-berlin.de</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Humboldt-Universität zu Berlin, Department of Theoretical Biophysics, Invalidenstr. 42, Berlin, Germany</aff>
    <aff id="I2"><label>2</label>Università della Svizzera italiana (USI), Institute of Computational Science, Computational Time Series Analysis, Via Giuseppe Buffi 13, 6900 Lugano, Switzerland</aff>
    <pub-date pub-type="collection">
      <year>2011</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>4</month>
      <year>2011</year>
    </pub-date>
    <volume>12</volume>
    <fpage>126</fpage>
    <lpage>126</lpage>
    <history>
      <date date-type="received">
        <day>21</day>
        <month>10</month>
        <year>2010</year>
      </date>
      <date date-type="accepted">
        <day>28</day>
        <month>4</month>
        <year>2011</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2011 Stoma et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2011</copyright-year>
      <copyright-holder>Stoma et al; licensee BioMed Central Ltd.</copyright-holder>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/2.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/2.0/">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/12/126"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Recently, the availability of high-resolution microscopy together with the advancements in the development of biomarkers as reporters of biomolecular interactions increased the importance of imaging methods in molecular cell biology. These techniques enable the investigation of cellular characteristics like volume, size and geometry as well as volume and geometry of intracellular compartments, and the amount of existing proteins in a spatially resolved manner. Such detailed investigations opened up many new areas of research in the study of spatial, complex and dynamic cellular systems. One of the crucial challenges for the study of such systems is the design of a well stuctured and optimized workflow to provide a systematic and efficient hypothesis verification. Computer Science can efficiently address this task by providing software that facilitates handling, analysis, and evaluation of biological data to the benefit of experimenters and modelers.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>The Spatio-Temporal Simulation Environment (STSE) is a set of <italic>open-source </italic>tools provided to conduct spatio-temporal simulations in discrete structures based on microscopy images. The framework contains modules to <italic>digitize, represent, analyze</italic>, and <italic>mathematically model </italic>spatial distributions of biochemical species. Graphical user interface (GUI) tools provided with the software enable meshing of the simulation space based on the Voronoi concept. In addition, it supports to automatically acquire spatial information to the mesh from the images based on pixel luminosity (e.g. corresponding to molecular levels from microscopy images). STSE is freely available either as a stand-alone version or included in the linux live distribution Systems Biology Operational Software (SB.OS) and can be downloaded from <ext-link ext-link-type="uri" xlink:href="http://www.stse-software.org/">http://www.stse-software.org/</ext-link>. The Python source code as well as a comprehensive user manual and video tutorials are also offered to the research community. We discuss main concepts of the STSE design and workflow. We demonstrate it's usefulness using the example of a signaling cascade leading to formation of a morphological gradient of Fus3 within the cytoplasm of the mating yeast cell <italic>Saccharomyces cerevisiae</italic>.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>STSE is an efficient and powerful novel platform, designed for computational handling and evaluation of microscopic images. It allows for an uninterrupted workflow including digitization, representation, analysis, and mathematical modeling. By providing the means to relate the simulation to the image data it allows for systematic, image driven model validation or rejection. STSE can be scripted and extended using the Python language. STSE should be considered rather as an API together with workflow guidelines and a collection of GUI tools than a stand alone application. The priority of the project is to provide an easy and intuitive way of extending and customizing software using the Python language.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>With the availability of high-resolution microscopy and high-throughput technologies in molecular biology the amount of cellular images in very good resolution quality increases significantly. Such amount of available data consecutively demands for image analysis software adapted to utilize the full capacity of these imaging advancements. The state-of-the-art way of presenting, assessing and evaluating experimental images qualitatively is being increasingly replaced by computational data evaluation. Quantification of e.g. light intensities arising from fluorescent protein (FP) expression in different cellular compartments can be ascertained in a spatially resolved manner and enables us to mathematically verify the current understanding of biological systems.</p>
    <p>Unambiguous and reproducible computational extraction increases the quality and exchangeability of information for subsequent automatic processing steps such as digitization, representation, analysis, and modeling. A variety of image processing-, analysis- or modeling-packages addressing these tasks exist already, either on a commercial basis or as open source software.</p>
    <p>Recently, several eminent reviews have been published which outline the most common methods and tools addressing biological image processing, analysis and modeling (see [<xref ref-type="bibr" rid="B1">1</xref>-<xref ref-type="bibr" rid="B3">3</xref>]). One of the key conclusions is that these tasks are usually separately addressed. Cell segmentation and property extraction, for example, are well established and can be realized by dedicated software such as CellProfiler [<xref ref-type="bibr" rid="B4">4</xref>], Cell-ID [<xref ref-type="bibr" rid="B5">5</xref>] or generic image processing platforms like Labview (National Instruments, Austin, USA) or Imaris (Bitplane, Zurich, Switzerland). A widely used and freely available tool is ImageJ [<xref ref-type="bibr" rid="B6">6</xref>], which comprises standard segmentation algorithms as well as surface or profile plots. Also freely available are additional packages for R like EBImage [<xref ref-type="bibr" rid="B7">7</xref>], which can be used for the segmentation and analysis steps. When it comes to spatial modeling and simulation in microbiology one can distinguish the following classes of dedicated simulators i) spatially partitioned ODE systems (e.g. Virtual Cell) ii) spatially partitioned Gillespie systems (e.g. MesoRD [<xref ref-type="bibr" rid="B8">8</xref>], SmartCell [<xref ref-type="bibr" rid="B9">9</xref>]) iii) particle-based simulators (e.g. Smoldyn [<xref ref-type="bibr" rid="B10">10</xref>], MCell [<xref ref-type="bibr" rid="B11">11</xref>], Meredys [<xref ref-type="bibr" rid="B12">12</xref>]). These techniques differ mostly with respect to the mathematical framework which changes the level of detail represented in the system (e.g. spatially partitioned ODEs are giving the overview of the system and can be used at tissue scale and large time scale, whereas particle based simulators are able to represent the molecule-scale details, however time scale needs to be importantly shortened).</p>
    <p>All of these tools offer excellent solutions for the specific problems they were designed to solve. However, it is still difficult to perform a contiguous and intuitive workflow, starting with almost raw data images and resulting in a running mathematical model, that enables to directly compare the simulation results with biological data (as presented in Figure <xref ref-type="fig" rid="F1">1</xref>).</p>
    <fig id="F1" position="float">
      <label>Figure 1</label>
      <caption>
        <p><bold>Flow Chart</bold>. Sketch of the structure and the modules combined in STSE that allow for an uninterrupted workflow. Starting with microscopy images (raw data) the framework allows for digitize, represent, analyze and mathematically model spatial distributions of species.</p>
      </caption>
      <graphic xlink:href="1471-2105-12-126-1"/>
    </fig>
    <p>The STSE platform intends to close the gaps between <italic>various </italic>tools or software-packages that are in majority specifically designed for these separate steps (i.e image processing/analysis or modeling/simulation). By providing the workflow guidelines and the access to Python language, it offers the advantage of stratifying the interaction with different data-structures and thus minimizes the loss of time and information during the manual export and conversion processes. Therefore, it should be seen as a set of tools facilitating the intuitive workflow between the image analysis tools and simulators.</p>
    <p>Additionally, in its current implementation, it provides examples of how to perform such a transition from segmenting tools to simulation engines implemented internally in Python (spatially partitioned ODEs). For these purposes STSE comprises modules for digitizing and representing microscopy data, enables data analysis as well as manipulation, and can be used for mathematical modeling and simulation of spatial distributions of chemical species. It is a powerful, multifaceted tool for interdisciplinary work.</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <p>The tools are written in Python and have a modular design which allows the modeler to extend their functionality according to custom needs. The default STSE workflow can be summarized as follows (see: Figure <xref ref-type="fig" rid="F1">1</xref>):</p>
    <p>1. Preprocessing of microscopic images for the studied object.</p>
    <p>2. Definition of a discrete representation of the images.</p>
    <p>3. Automatic integration of the information from images into the discrete representation.</p>
    <p>4. Analyzing the digitized data.</p>
    <p>5. Formulating a model: defining interactions between regions of interest and molecules of interest.</p>
    <p>6. Running a model: previously digitized images are used as initial conditions for the evaluation of simulation results.</p>
    <p>A detailed use case as well as comparative studies with some of the above mentioned state-of-the-art tools is provided in the additional file <xref ref-type="supplementary-material" rid="S1">1</xref>. Additionally, the webpage of the project contains examples, video tutorials, access to a discussion group and other helpful information sources. In the following, we give a concise overview of the fundamental methods used in STSE:</p>
    <sec>
      <title>Spatial Segmentation and Digitization</title>
      <p>The process of digitization generates a data structure, allowing for efficient analysis, representation and modeling. The classical approach is to decompose the microscopy image into physiologically distinguishable compartments (e.g. nucleus, cytoplasm, etc.) which is called image segmentation [<xref ref-type="bibr" rid="B13">13</xref>,<xref ref-type="bibr" rid="B14">14</xref>]. Usually, image segmentation results in a data structure linking the compartments with pixels. STSE differs from this approach by introducing an abstract, intermediate layer composed of so-called subcompartments. To generate this layer, each compartment is divided into subcompartments which have the geometry of polygons and are organized in such a way that they fill the entire compartment and do not overlap with each other. The default geometry is automatically composed of equilateral hexagons. The purpose of introducing this abstract layer is to allow for adjusting the digitization precision separately for different compartments, which is useful when it comes to analysis and modeling. To edit the geometry of subcompartments a Voronoi 2D tessellation is used [<xref ref-type="bibr" rid="B15">15</xref>]. With the help of the graphical user interface (GUI) editor, the user may move subcompartment centers (corresponding to the vertices in the Voronoi graph) for fine-tuning. This information implicitly specifies the geometry of each subcompartment. Since these subcompartments share edges, the representation resembles a polygonal mesh (PM).</p>
      <p>Each subcompartment has an individual geometry as well as other user-customizable properties such as cellular compartment affiliation, concentrations of specific substances, etc. The GUI allows for user-friendly inspecting and editing of these properties. Additionally, due to the software implementation design, it is possible to extend the GUI editor by adding custom actions as well as to script the GUI with Python. One of the main goals of STSE is to provide the possibility of framework extension and customization to the users.</p>
      <p>With STSE it is possible to acquire spatial luminosity information from microscopic images, which can correspond e.g. to the inhomogeneous distribution of tagged molecules within the cell. This process is performed on indexed color images (e.g. FP microscopic images). This is an important feature, since it allows for the comparison of simulation results with experimental data.</p>
    </sec>
    <sec>
      <title>Representation and Analysis</title>
      <p>Image representation is performed implicitly by the conversion of the Voronoi-based PM to an internal STSE data structure. This design involves less constraints and thus allows for more latitude in defining polygonal geometries (e.g. including non-convex ones) as well as physiological information. It is realized by storing the polygon corner coordinates explicitly in the data structure instead of computing them using the Voronoi algorithm. The datastructure may be easily modified or inspected via Python. This allows for simulating structures changing in time, which has been, for instance, successfully used in the dynamic modeling of meristem growth [<xref ref-type="bibr" rid="B16">16</xref>]. The analysis is effected via the STSE-GUI as well as with Python scripts and enables a comprehensive and differentiated overview of topological, geometrical and physiological information. The routines provided by STSE allow for visualizing and inspecting compartment properties and can be used for computing different properties and for further, computational analysis of data from images. All structural information can be exported and saved for persistence and dissemination.</p>
    </sec>
    <sec>
      <title>Modeling</title>
      <p>The digitized data can be used <italic>directly </italic>to perform spatial modeling (e.g. as initial conditions or evaluation). STSE does not restrict the user with the simulation framework. Instead, we suggest a workflow based on the so-called "cell-centered" finite volume method [<xref ref-type="bibr" rid="B17">17</xref>]. According to this scheme, a mechanistic model of a studied process needs to be formalized using a set of ordinary differential equations (ODEs) describing the interplay of different actors (e.g. chemical molecules) and different cellular compartments with specified kinetic rules on diffusion, chemical reactions, transport, etc. In this case a SciPy library [<xref ref-type="bibr" rid="B18">18</xref>] may be used to solve the system within the STSE framework.</p>
      <p>Due to its design STSE is fully extendable via Python. The simulation engine can be freely connected with multitude of solutions limited only by the accessibility of these engines via Python.</p>
    </sec>
  </sec>
  <sec>
    <title>Results</title>
    <p>In the following, we demonstrate how to use STSE to analyze and simulate biological systems. A typical STSE workflow includes the modules for digitization, representation, analysis and modeling is presented using the running example of a mitogen-activated protein kinase gradient formation (the double-phosphorylated Fus3 (<italic>Fus3<sup>PP</sup></italic>) in a mating yeast cell [<xref ref-type="bibr" rid="B19">19</xref>].</p>
    <p>Fus3 signaling is part of the yeast mating pheromone pathways: upon stimulation with the pheromone <italic>α</italic>-factor, an intracellular signaling cascade becomes activated, which leads to the double phosphorylation of Fus3. The <italic>Fus3<sup>PP </sup></italic>gets released at the shmoo tip and can diffuse within the cell, which results in an observable <italic>Fus3<sup>PP </sup></italic>gradient. When reaching the nucleus, <italic>Fus3<sup>PP </sup></italic>is actively transported across the nuclear membrane and regulates transcription factors that modulate mating-specific gene expression. We would like to stress that the focus is set rather on the software specifications and the application scenario than on the biological results. To simplify the analysis and to facilitate the usage of examples in a confirmatory way, we work on test data, inspired by the experiments and explanations presented by Maeder et al. [<xref ref-type="bibr" rid="B19">19</xref>].</p>
    <p>An extended workflow comprising amongst others the following examples is given and discussed in the additional file <xref ref-type="supplementary-material" rid="S1">1</xref>. Additionally, video tutorials covering this subject and all Python scripts we use to produce the here presented images and results are provided on the project homepage.</p>
    <p>In a first step we demonstrate the analysis and characterization of the <italic>Fus3<sup>PP </sup></italic>gradient. For this purpose we:</p>
    <p>• Quantify the ratio of the average cytoplasm/nucleus expression of <italic>Fus3<sup>PP </sup></italic>based on fluorescence signal intensity acquired from microscopy images,</p>
    <p>• Show gradient curves for <italic>Fus3<sup>PP </sup></italic>along the x-axis of the cell data image and around the nucleus,</p>
    <p>• Simulate the process of <italic>Fus3<sup>PP </sup></italic>diffusion in the cytoplasm to determine the underlying conditions that lead to the qualitative values captured in the image.</p>
    <p>We evaluate the results of the simulations and discuss i) whether the appearance of a <italic>Fus3<sup>PP </sup></italic>gradient throughout the cell can be explained by simple diffusion and ii) how to define plausible conditions and model parameters allowing to reproduce the experimental observations.</p>
    <sec>
      <title>Digitization</title>
      <p>A major issue in this context is the task to adapted the polygonal mesh. If, for instance the focus is on a particular protein like the <italic>Fus3<sup>PP </sup></italic>in this case, the interesting point is the protein gradient within the cytoplasm but not outside the cell. Thus it is necessary and sufficient to adapt the mesh size according to the area of interest. Here, it is requested to keep a high precision within the cytoplasmic compartment (but not within other compartments) in order to capture and depict the gradient correctly. The analysis accounts the hypothesis that the <italic>Fus3<sup>PP </sup></italic>distribution is neither outside the cell nor in the nucleus (motivation for this is discussed in the additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). Therefore, we use varying "subcompartment densities" in these compartments as presented in Figure <xref ref-type="fig" rid="F2">2</xref>. The default geometry is automatically composed of equilateral hexagons (see Figure <xref ref-type="fig" rid="F2">2a</xref> and <xref ref-type="fig" rid="F2">2b</xref>). The geometry of the subcompartments can afterward be fine-tuned using the GUI editor to match different analysis and modeling requirements (see Figure <xref ref-type="fig" rid="F2">2c</xref>). Another task related to the digitization of image data is the acquisition of subcompartment types (i.e. determining for each abstract subcompartment its affiliation to a cellular compartment). This task can be performed via the GUI or a Python script. Although a subcompartment type can be set manually, in both cases the recommended way is to use an automatic protocol based on binary masks. These binary masks are based on original microscopy images and can be prepared with 3rd party segmentation algorithms (e.g. implemented in ImageJ). Each subcompartment is associated with only one compartment type. When a conflict occures (e.g. in the case of overlapping binary masks) the user can influence subcompartment types by changing the order of application of the binary masks or by defining subcompartment types manually. Here, we use binary masks for localization of the following cell types (see Figure <xref ref-type="fig" rid="F3">3</xref>): the cytoplasm (3a), the nucleus (3b), the cell membrane (3c), the nuclear membrane (3d) and the shmoo tip (3e). These mask files are used to acquire the subcompartment types either by GUI (Figure <xref ref-type="fig" rid="F4">4</xref>) or a Python script. Both methods are covered in detail in the additional file <xref ref-type="supplementary-material" rid="S1">1</xref>.</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>Subcompartment Densities</bold>. Different "subcompartment density" variants (a) rough regular digitization (b) more refined, regular digitization (c) refined, irregular representation edited with the STSE GUI.</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-2"/>
      </fig>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>Binary Masks</bold>. Binary masks created from raw data images. The images present the binary masks for (a) the cytoplasm, (b) the nucleus, (c) the cell membrane, (d) the nuclear membrane and (e) the shmoo tip (a single pixel is sufficient to mark the shmoo tip).</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-3"/>
      </fig>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Subcompartment Type Assignment</bold>. Subcompartment types assignment (a) mesh showing the geometry of subcompartments (b) types of subcompartments acquired from the binary masks. Different sphere colors depict different compartment identities: white - outside, black - the cell membrane, blue - the nucleus, red - the cytoplasm, pink - the nuclear membrane, yellow - the shmoo tip.</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-4"/>
      </fig>
      <p>The automatic acquisition of the signal from the microscopy image is another demanding task and provides the basis for the subsequent analysis and modeling steps. For this purpose we use indexed color images (e.g. standard light/confocal microscopy images) corresponding to molecular concentrations of the molecules of interest. In the running example we use test data images inspired by the experiments described in Maeder et al. [<xref ref-type="bibr" rid="B19">19</xref>], in which the intracellular localization of <italic>Fus3<sup>PP </sup></italic>has been reported by fluorescence lifetime imaging microscopy (FLIM) (see Figure <xref ref-type="fig" rid="F5">5</xref>). In this particular case, since we are interested only in one chemical species (<italic>Fus3<sup>PP</sup></italic>), for each time step we provide only one image (corresponding to a specific channel in fluorescent microscopy). In the more general case, a number of images required for each acquisition time step ideally should be equal to the number of species of interests. To summarize the previous steps: The necessary inputs for the digitization procedure are i) the binary masks, and ii), the indexed color images. The output of the digitization step is a feasible amount of abstract sub-compartments that cover the microscopic image. Each subcompartment is allocated with a specific compartment type and the average intensity of the protein(s) of interest acquired from input data.</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>Signal Quantification</bold>. Signal quantification (a) indexed color image of Fus3<sup>PP </sup>localization (b) result of Fus3<sup>PP </sup>signal quantification based on the indexed color image. Small spheres depict the compartment types.</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-5"/>
      </fig>
    </sec>
    <sec>
      <title>Representation and analysis</title>
      <p>The analysis in STSE is realized via Python scripts. Our running example demonstrates common tasks performed with STSE such as inspecting geometrical, physiological or topological properties of the subcompartments/compartments and removing or resizing the subcompartments. The following information on the <italic>Fus3<sup>PP </sup></italic>gradient can be extracted (see Figure <xref ref-type="fig" rid="F6">6</xref>):</p>
      <fig id="F6" position="float">
        <label>Figure 6</label>
        <caption>
          <p><bold>Fus3 Profile</bold>. Fus3<sup>PP </sup>profiles along the <italic>x</italic>-axis and around the nucleus. (a) subcompartment locations used to distinguish the curves in (c); (b) subcompartment locations and <italic>ψphi </italic>definition used in (d); (c) Fus3<sup>PP </sup>profiles along the <italic>x</italic>-axis; (d) Fus3<sup>PP </sup>profiles around the nucleus.</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-6"/>
      </fig>
      <p>• The distribution of <italic>Fus3<sup>PP </sup></italic>in the cytoplasm along the x-axis in a central part of the analyzed cell is exponential (Figure <xref ref-type="fig" rid="F6">6c</xref>),</p>
      <p>• The distribution of <italic>Fus3<sup>PP </sup></italic>around the nucleus reaches its maximum in the point closest to the shmoo tip (Figure <xref ref-type="fig" rid="F6">6d</xref>),</p>
      <p>• The average <italic>Fus3<sup>PP </sup></italic>signal in the nucleus is 64.0 (a.u.), which is ≈ 25% of the maximal signal measured in the image,</p>
      <p>• The average <italic>Fus3<sup>PP </sup></italic>signal in the cytoplasm is 52.07 (a.u.) (which is ≈ 20% of the maximal signal measured in the image),</p>
      <p>• The ratio of averaged <italic>Fus3<sup>PP </sup></italic>signal in the cytoplasm to nucleus is equal to 0.81.</p>
      <p>Comparative values computed with ImageJ showed an average <italic>Fus3<sup>PP </sup></italic>signal in the nucleus of 64.0 (a.u.) and an average <italic>Fus3<sup>PP </sup></italic>signal in the cytoplasm of 51.27 (a.u.), resulting in a ratio of averaged <italic>Fus3<sup>PP </sup></italic>signal in the cytoplasm to nucleus of 0.801. Which means the relative error due to approximation (i.e. downsampling because of using averaged values from PM instead of actual pixel values) in our example is (0.81 - 0.801)/0.801 ≈ 1%.</p>
    </sec>
    <sec>
      <title>Modeling</title>
      <p>The previously acquired, quantified and structured data can be used to create a dynamic model of the <italic>Fus3<sup>PP </sup></italic>diffusion. According to the STSE dataflow paradigm (see Figure <xref ref-type="fig" rid="F1">1</xref>), the mechanistic model of the studied process needs to be formalized. By focusing on the properties of the <italic>Fus3<sup>PP </sup></italic>gradient we can exclude processes such as i) mechanisms of the stimulation of Fus3 and ii) different mechanisms allowing <italic>Fus3<sup>PP </sup></italic>to enter the nucleus. The kinetic model of <italic>Fus3<sup>PP </sup></italic>is now defined as follows:</p>
      <p>• <italic>Fus3<sup>PP </sup></italic>appears in the shmoo tip compartment,</p>
      <p>• <italic>Fus3<sup>PP </sup></italic>diffuses freely in the cytoplasm compartment,</p>
      <p>• <italic>Fus3<sup>PP </sup></italic>gets dephosphorylated during the diffusion in the cytoplasm,</p>
      <p>• <italic>Fus3<sup>PP </sup></italic>is unable to cross the cellular/nuclear membrane compartments.</p>
      <p>By applying this kinetic model it is next possible to verify whether or not the qualitative properties of the <italic>Fus3<sup>PP </sup></italic>gradient observed in the digitized images can be reproduced. As explained in the Background section, STSE functionality can be modified and extended by connecting various simulation engines via Python. Here, for the purpose of simplification, we use a dedicated, explicit simulation, written directly in Python. For this purpose the model is translated into a system of differential equations (for details please see the additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). An equation describing the changes of <italic>Fus3<sup>PP </sup></italic>concentration is attributed to each subcompartment.<disp-formula><graphic xlink:href="1471-2105-12-126-i1.gif"/></disp-formula></p>
      <p>where:</p>
      <p>• <italic>FUS3<sup>PP</sup><sub>i </sub></italic>is the concentration of Fus3<sup>PP </sup>in the subcompartment <italic>i</italic>,</p>
      <p>• γ <italic><sub>FUS3</sub><sup>PP </sup></italic>is the diffusion constant for Fus3<sup>PP</sup>,</p>
      <p>• α<italic><sub>FUS3</sub><sup>PP </sup></italic>is the rate of Fus3<sup>PP </sup>release in the shmoo tip,</p>
      <p>• β<italic><sub>FUS3</sub><sup>PP </sup></italic>is the rate constant of Fus3<sup>PP </sup>dephosphorylation,</p>
      <p>• <italic>S</italic><sub><italic>i</italic>→<italic>n </italic></sub>is the area of contact surface between subcompartments <italic>i </italic>and <italic>n</italic>,</p>
      <p>• <italic>V<sub>i </sub></italic>is the volume of subcompartment <italic>i</italic>,</p>
      <p>• <italic>i </italic>∈ <italic>A </italic>/<italic>i </italic>∈ <italic>B </italic>if <italic>i </italic>belongs to cytoplasm/shmoo tip compartment,</p>
      <p>• <italic>N<sub>i </sub></italic>is a set of neighbour subcompartments for subcompartment <italic>i</italic>,</p>
      <p>• <inline-formula><inline-graphic xlink:href="1471-2105-12-126-i2.gif"/></inline-formula>, (e.g. [<italic>n </italic>∈ <italic>A </italic>∪ <italic>B</italic>] evaluates to 1 when <italic>n </italic>is element of <italic>A </italic>or <italic>B</italic>) [<xref ref-type="bibr" rid="B20">20</xref>,<xref ref-type="bibr" rid="B21">21</xref>].</p>
      <p>To complete the model it is required to define the rate of Fus3<sup>PP </sup>release in the shmoo tip (<italic>α</italic><sub><italic>FUS3</italic></sub><sup><italic>PP</italic></sup>), the rate constant of Fus3<sup>PP </sup>dephosphorylation <italic>β</italic><sub><italic>FUS</italic>3</sub><sup><italic>PP</italic></sup>, the diffusion constant <italic>γ</italic><sub><italic>FUS3</italic></sub><sup><italic>PP </italic></sup>and the initial conditions. All values can be estimated from the literature or chosen arbitrarily. Additionally, initial conditions can be acquired from the digitization step of the image data. An exemplary implementation of the <italic>Fus</italic>3<italic><sup>PP </sup></italic>model can be downloaded from the project homepage. An animation showing the kinetics of <italic>Fus</italic>3<italic><sup>PP </sup></italic>distribution obtained with the implemented model is available as additional file <xref ref-type="supplementary-material" rid="S2">2</xref>.</p>
      <p>Simulations in STSE can also be utilized to estimate the values of <italic>Fus</italic>3<italic><sup>PP </sup></italic>model parameters based on the image data. As an example, the steady state concentrations for two different simulations are presented in Figure <xref ref-type="fig" rid="F7">7</xref> (for details see additional file <xref ref-type="supplementary-material" rid="S1">1</xref>).</p>
      <fig id="F7" position="float">
        <label>Figure 7</label>
        <caption>
          <p><bold>Steady State Distribution</bold>. Steady state distributions of Fus3<sup>PP </sup>for two different parameter sets (<italic>α</italic><sub><italic>Fus</italic>3</sub>, <italic>β</italic><sub><italic>Fus</italic>3</sub>, <italic>γ</italic><sub><italic>Fus</italic>3</sub>): (a) (0.1, 0.1, 100), (b) (0.1, 0.1, 50). We observe that the gradients have different slopes, which is due to the difference in the diffusion constant <italic>γ</italic><sub><italic>Fus</italic>3</sub>. To visualize Fus3<sup>PP </sup>concentrations, a colormap is used where blue depicts low values and red depicts high values.</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-7"/>
      </fig>
      <p>A second animation (additional file <xref ref-type="supplementary-material" rid="S3">3</xref>) shows the kinetics of <italic>Fus</italic>3<italic><sup>PP </sup></italic>evolution. This simulation differs by changing the diffusion constant for Fus3<sup>PP </sup>from 50 to 100. For further illustration, Figure <xref ref-type="fig" rid="F8">8</xref> presents the contrast between different initial parameter sets. This difference can be used to discriminate between different parameter sets.</p>
      <fig id="F8" position="float">
        <label>Figure 8</label>
        <caption>
          <p><bold>Difference Concentration</bold>. Difference of Fus3<sup>PP </sup>concentration between <inline-formula><inline-graphic xlink:href="1471-2105-12-126-i3.gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="1471-2105-12-126-i4.gif"/></inline-formula>(which approximates the error). (a) shows an <inline-formula><inline-graphic xlink:href="1471-2105-12-126-i5.gif"/></inline-formula> (the overall error did not exceed 20% percent) (b) shows the <italic>E</italic>/<italic>max</italic>(<italic>E</italic>) (when 100% of error was observed in the center; it is important to note, that the model did not allow the Fus3<sup>PP </sup>to enter the nucleus compartment). To visualize <italic>E</italic>, a colormap is used where blue depicts low values and red high ones.</p>
        </caption>
        <graphic xlink:href="1471-2105-12-126-8"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Discussion</title>
    <p>We present STSE, a platform that facilitates execution of spatial simulations based on microscopy images. The application of the STSE is demonstrated on the example of the yeast pheromone MAP kinase cascade, focusing in particular on the distribution of the double-phosphorylated Fus3.</p>
    <p>We demonstrate how to quantify the ratio of the average cytoplasm/nucleus expression of <italic>Fus</italic>3<italic><sup>PP </sup></italic>based on fluorescence signal intensity acquired from microscopy images, create gradient curves for <italic>Fus</italic>3<italic><sup>PP </sup></italic>along the x-axis of the cell and around the nucleus, and simulate the process of <italic>Fus</italic>3<italic><sup>PP </sup></italic>diffusion in the cytoplasm to determine the underlying mechanism.</p>
    <p>The result of the simulations allow us to confirm that a set of hypothesis used in the model allows us to reproduce the experimental observations. We demonstrate also how to use the STSE to discriminate between model parameter sets.</p>
    <p>The running example model yields the highest error in the nuclear compartment. This is consistent with our expectations: the test data set images suggest that <italic>Fus</italic>3<italic><sup>PP </sup></italic>is present in the nuclear compartment (Figure <xref ref-type="fig" rid="F4">4</xref>), but in the specification of the model we skipped the mechanism of <italic>Fus</italic>3<italic><sup>PP </sup></italic>transport via membranes, which results in the <italic>Fus</italic>3<italic><sup>PP </sup></italic>concentration in the nuclear compartment being equal to 0. To correct this property, the model should be extended by an assumption of <italic>Fus</italic>3<italic><sup>PP </sup></italic>transport via the nuclear membrane.</p>
    <p>In the additional file <xref ref-type="supplementary-material" rid="S1">1</xref> STSE modules are also compared with a selection of other available software tools which allow to perform each of the workflow substeps separately i.e. digitization, representation, analysis or modeling.</p>
    <p>Results from STSE are confronted with results achieved by the use of the software ImageJ. Both tools allow for computing the ratio between the <italic>Fus</italic>3<italic><sup>PP </sup></italic>signal in the cytoplasm and the nucleus. Although STSE uses the approximation with subcompartments (which are very usefull when it comes to the simulation task) the approximation error in this example is below 1%. Likewise, the exponential decrease of Fus3<sup>PP </sup>along the cell center as well as the increase in the nucleus can be captured reasonably well with both tools. Nevertheless, if one is interested in the distribution of Fus3<sup>PP </sup>over the whole cell, there is no constitutive way to do so in ImageJ (however plugins allow to perform similar actions). Furthermore, in STSE it is possible to plot various profiles for any selected subcompartments.</p>
    <p>In ImageJ basic analysis is performed via the GUI, but an extensive analysis again requires the usage of Macros, Plugins or Scripts (via Java-like, Java or JavaScript). STSE requires using Python in both basic and extensive analysis. In the latter case the automatization of tasks via Python allows for faster implementation.</p>
    <p>Binary masks can be used for automatization in STSE. The choice of the segmentation algorithm to generate those binary masks depends highly on the particular problem and there already exist a multitude of advanced software packages dedicated to this task. Therefore in the current version of the STSE we decided to use already segmented images as the starting point of the proposed workflow and leave the choice of the optimal segmentation method to the user.</p>
    <p>STSE conceptually differs from selection-based tools by operating on abstract subcompartments rather than on pixels directly. This approach results in the simplification of further processing and it allows for inhomogenous precision in different cellular compartments.</p>
    <p>The precision is regulated in STSE by decreasing the subcompartment size. However, the increase in precision induces slower execution of the modeling routines. It is the modeler's choice to prepare the grid in such a way that both, the precision and speed of modeling routines is optimal. Also it should be kept in mind that, by using larger subcompartments, the assumption of homogeneously distributed molecules within one subcompartment might be disregarded.</p>
    <p>In the additional file <xref ref-type="supplementary-material" rid="S1">1</xref> we also compare STSE with a selected simulation engine, MesoRD [<xref ref-type="bibr" rid="B8">8</xref>], and discuss the main differences, pros and cons. It is important to understand that the scopes of these softwares are different: MesoRD is a mesoscopic, stochastic simulation engine, whereas STSE covers much broader area, but it does not provide a sophisticated simulation engine as such. Our future goal is to provide integration of STSE with a selection of existing simulation software. This would allow users to use state-of-the-art solutions for simulation, keeping the ease of validating the models with microscopy data, as demonstrated in our example.</p>
  </sec>
  <sec>
    <title>Conclusion</title>
    <p>STSE is a software platform, designed for constructing microscopy image-based simulations. It allows for an uninterrupted workflow including digitization, representation, analysis, and mathematical modeling. The main benefit of STSE is that it acts as a "glue" between different steps of the workflow, allowing the user to tailor the platform to their specific needs. Due to its open, modular architecture and integration of Python language, the software allows for full automatization (it applies also to GUI) via scripts, which is usually not possible or very limited with other stand alone applications.</p>
    <p>Further versions of the STSE should provide integration of selected 3rd party simulators and simulation paradigms (e.g. stochastic, agent-based). It would be also crucial to support import and export of SBML (Systems Biology Markup Language) files. For the latter, a prior establishment of a standard for spatial modeling would be required. We strongly encourage the community to provide examples of various microscopy based simulation workflows, which we would be glad to integrate into STSE framework.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p><bold>Project name: </bold>STSE</p>
    <p><bold>Project home page</bold>: <ext-link ext-link-type="uri" xlink:href="http://stse-software.org">http://stse-software.org</ext-link></p>
    <p><bold>Operating system(s</bold>): Linux (availability on other systems depends on 3rd party libraries)</p>
    <p><bold>Programming language</bold>: Python</p>
    <p><bold>Other requirements: </bold>Openalea <ext-link ext-link-type="uri" xlink:href="http://openalea.gforge.inria.fr/">http://openalea.gforge.inria.fr/</ext-link>, Mayavi2 <ext-link ext-link-type="uri" xlink:href="http://code.enthought.com/projects/mayavi/">http://code.enthought.com/projects/mayavi/</ext-link>, Qhull <ext-link ext-link-type="uri" xlink:href="http://www.qhull.org/">http://www.qhull.org/</ext-link>, NetworkX <ext-link ext-link-type="uri" xlink:href="http://networkx.lanl.gov/">http://networkx.lanl.gov/</ext-link>. It is also possible to use the software directly from a live DVD Linux distribution, SB.OS <ext-link ext-link-type="uri" xlink:href="http://www.sbos.eu/">http://www.sbos.eu/</ext-link>, which comes with a comprehensive list of other systems biology software.</p>
    <p><bold>License: </bold>GNU GPL</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>SS is the main developer of STSE. MF, SG, SS, EK wrote the article. MF, SG, SS applied the STSE workflow to the example described in the Results and performed comparative studies of STSE and other state-of-the-art tools. All authors read and approved the final manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>Detailed description of a use case, including all individual steps of the STSE workflow with examples as well as comparative studies with state-of-the-art tools</bold>.</p>
      </caption>
      <media xlink:href="1471-2105-12-126-S1.PDF">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S2">
      <caption>
        <title>Additional file 2</title>
        <p><bold>Animation showing the dynamics of the exemplary system described in the additional file </bold><xref ref-type="supplementary-material" rid="S1">1</xref>.</p>
      </caption>
      <media xlink:href="1471-2105-12-126-S2.AVI">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material content-type="local-data" id="S3">
      <caption>
        <title>Additional file 3</title>
        <p><bold>Animation showing the dynamics of the exemplary system described in the additional file </bold><xref ref-type="supplementary-material" rid="S1">1</xref>.</p>
      </caption>
      <media xlink:href="1471-2105-12-126-S3.AVI">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>The authors thank Jan Traas and Christophe Godin for early support of STSE development (known at this time point as <italic>mersim</italic>). We would like to thank Marta Hoffman-Sommer for the proof reading of the manuscript. This work was supported by the Marie Curie Research Training Network <italic>Aquaglyceroporins </italic>(LSHG-CT-2006-035995-2), the German Ministry for Eduction and Research (BMBF grant for the SysMO project Translucent), the German Research Foundation (DFG grant SFB 740) and by the Swiss HP2C-initiative "Swiss Platform for High-Performance and High-Productivity Computing".</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ljosa</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Carpenter</surname>
          <given-names>AE</given-names>
        </name>
        <article-title>Introduction to the Quantitative Analysis of Two-Dimensional Fluorescence Microscopy Images for Cell-Based Screening</article-title>
        <source>PLoS Comput Biol</source>
        <year>2009</year>
        <volume>5</volume>
        <issue>12</issue>
        <fpage>e1000603</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1000603</pub-id>
        <?supplied-pmid 20041172?>
        <pub-id pub-id-type="pmid">20041172</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Peng</surname>
          <given-names>H</given-names>
        </name>
        <article-title>Bioimage informatics: a new area of engineering biology</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>17</issue>
        <fpage>1827</fpage>
        <lpage>1836</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn346</pub-id>
        <?supplied-pmid 18603566?>
        <pub-id pub-id-type="pmid">18603566</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="book">
        <name>
          <surname>Meijering</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>van Cappellen</surname>
          <given-names>G</given-names>
        </name>
        <source>Quantitative biological image analysis</source>
        <year>2007</year>
        <publisher-name>Imaging Cellular and Molecular Biological Function, Springer Berlin</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lamprecht</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Sabatini</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Carpenter</surname>
          <given-names>A</given-names>
        </name>
        <article-title>CellProfiler: free, versatile software for automated biological image analysis</article-title>
        <source>Biotechniques</source>
        <year>2007</year>
        <volume>42</volume>
        <fpage>71</fpage>
        <lpage>75</lpage>
        <pub-id pub-id-type="doi">10.2144/000112257</pub-id>
        <?supplied-pmid 17269487?>
        <pub-id pub-id-type="pmid">17269487</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Gordon</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Colman-Lerner</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Chin</surname>
          <given-names>TE</given-names>
        </name>
        <name>
          <surname>Benjamin</surname>
          <given-names>KR</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>RC</given-names>
        </name>
        <name>
          <surname>Brent</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Single-cell quantification of molecules and rates using open-source microscope-based cytometry</article-title>
        <source>Nat Methods</source>
        <year>2007</year>
        <volume>4</volume>
        <issue>2</issue>
        <fpage>175</fpage>
        <lpage>181</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth1008</pub-id>
        <?supplied-pmid 17237792?>
        <pub-id pub-id-type="pmid">17237792</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Abramoff</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Magalhaes</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Ram</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Image processing with ImageJ</article-title>
        <source>Biophotonics International</source>
        <year>2004</year>
        <volume>11</volume>
        <fpage>36</fpage>
        <lpage>42</lpage>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Pau</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Fuchs</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Sklyar</surname>
          <given-names>O</given-names>
        </name>
        <name>
          <surname>Boutros</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Huber</surname>
          <given-names>W</given-names>
        </name>
        <article-title>EBImage - an R package for image processing with applications to cellular phenotypes</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>7</issue>
        <fpage>979</fpage>
        <lpage>981</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq046</pub-id>
        <?supplied-pmid 20338898?>
        <pub-id pub-id-type="pmid">20338898</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hattne</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Fange</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Elf</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Stochastic reaction-diffusion simulation with MesoRD</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <issue>12</issue>
        <fpage>2923</fpage>
        <lpage>2924</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti431</pub-id>
        <?supplied-pmid 15817692?>
        <pub-id pub-id-type="pmid">15817692</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ander</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Beltrao</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Di Ventura</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Ferkinghoff-Borg</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Foglierini</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Kaplan</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Lemerle</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Tomás-Oliveira</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Serrano</surname>
          <given-names>L</given-names>
        </name>
        <article-title>SmartCell, a framework to simulate cellular processes that combines stochastic approximation with diffusion and localisation: analysis of simple networks</article-title>
        <source>Systems biology</source>
        <year>2004</year>
        <volume>1</volume>
        <fpage>129</fpage>
        <lpage>138</lpage>
        <pub-id pub-id-type="doi">10.1049/sb:20045017</pub-id>
        <?supplied-pmid 17052123?>
        <pub-id pub-id-type="pmid">17052123</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Andrews</surname>
          <given-names>SS</given-names>
        </name>
        <name>
          <surname>Addy</surname>
          <given-names>NJ</given-names>
        </name>
        <name>
          <surname>Brent</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Arkin</surname>
          <given-names>AP</given-names>
        </name>
        <article-title>Detailed simulations of cell biology with Smoldyn 2.1</article-title>
        <source>PLoS computational biology</source>
        <year>2010</year>
        <volume>6</volume>
        <issue>3</issue>
        <fpage>e1000705+</fpage>
        <?supplied-pmid 20300644?>
        <pub-id pub-id-type="pmid">20300644</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Stiles</surname>
          <given-names>JR</given-names>
        </name>
        <name>
          <surname>Bartol</surname>
          <given-names>TM</given-names>
        </name>
        <name>
          <surname>Salpeter</surname>
          <given-names>MM</given-names>
        </name>
        <name>
          <surname>Salpeter</surname>
          <given-names>EE</given-names>
        </name>
        <name>
          <surname>Sejnowski</surname>
          <given-names>TJ</given-names>
        </name>
        <article-title>Synaptic Variability: New Insights from Reconstructions and Monte Carlo Simulations with MCell</article-title>
        <source>Synapses</source>
        <year>2001</year>
        <volume>1</volume>
        <fpage>681</fpage>
        <lpage>731</lpage>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="other">
        <name>
          <surname>Tolle</surname>
          <given-names>DP</given-names>
        </name>
        <name>
          <surname>Le Novère</surname>
          <given-names>N</given-names>
        </name>
        <article-title>Meredys, a multi-compartment reaction-diffusion simulator using multistate realistic molecular complexes</article-title>
        <source>BMC systems biology</source>
        <year>2010</year>
        <fpage>4</fpage>
        <pub-id pub-id-type="pmid">20100324</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Hamilton</surname>
          <given-names>N</given-names>
        </name>
        <article-title>Quantification and its applications in fluorescent microscopy imaging</article-title>
        <source>Traffic</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>8</issue>
        <fpage>951</fpage>
        <lpage>961</lpage>
        <pub-id pub-id-type="doi">10.1111/j.1600-0854.2009.00938.x</pub-id>
        <?supplied-pmid 19500318?>
        <pub-id pub-id-type="pmid">19500318</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Wollman</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Stuurman</surname>
          <given-names>N</given-names>
        </name>
        <article-title>High throughput microscopy: from raw images to discoveries</article-title>
        <source>J Cell Sci</source>
        <year>2007</year>
        <volume>120</volume>
        <issue>Pt 21</issue>
        <fpage>3715</fpage>
        <lpage>3722</lpage>
        <?supplied-pmid 17959627?>
        <pub-id pub-id-type="pmid">17959627</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <name>
          <surname>Klein</surname>
          <given-names>R</given-names>
        </name>
        <source>Concrete and Abstract Voronoi Diagrams, Volume 200 of Lecture Notes in Computer Science. Springer-Verlag</source>
        <year>1989</year>
        <comment>[ISBN 3540520554]</comment>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Stoma</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Lucas</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Chopard</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Schaedel</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Traas</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Godin</surname>
          <given-names>C</given-names>
        </name>
        <article-title>Flux-Based Transport Enhancement as a Plausible Unifying Mechanism for Auxin Transport in Meristem Development</article-title>
        <source>PLoS Comput Biol</source>
        <year>2008</year>
        <volume>4</volume>
        <issue>10</issue>
        <fpage>e1000207+</fpage>
        <?supplied-pmid 18974825?>
        <pub-id pub-id-type="pmid">18974825</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mishev</surname>
          <given-names>ID</given-names>
        </name>
        <article-title>Finite volume methods on Voronoi meshes</article-title>
        <source>Numer Methods Partial Differential Eq</source>
        <year>1998</year>
        <volume>14</volume>
        <issue>2</issue>
        <fpage>193</fpage>
        <lpage>212</lpage>
        <pub-id pub-id-type="doi">10.1002/(SICI)1098-2426(199803)14:2&lt;193::AID-NUM4&gt;3.0.CO;2-J</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="other">
        <name>
          <surname>Jones</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Oliphant</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Peterson</surname>
          <given-names>P</given-names>
        </name>
        <article-title>SciPy: Open source scientific tools for Python</article-title>
        <year>2001</year>
        <uri>http://www.scipy.org/Citing_SciPy</uri>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Maeder</surname>
          <given-names>CI</given-names>
        </name>
        <name>
          <surname>Hink</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Kinkhabwala</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Mayr</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Bastiaens</surname>
          <given-names>PIH</given-names>
        </name>
        <name>
          <surname>Knop</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Spatial regulation of Fus3 MAP kinase activity through a reaction-diffusion mechanism in yeast pheromone signalling</article-title>
        <source>Nature Cell Biology</source>
        <year>2007</year>
        <volume>9</volume>
        <fpage>1319</fpage>
        <lpage>1326</lpage>
        <pub-id pub-id-type="doi">10.1038/ncb1652</pub-id>
        <?supplied-pmid 17952059?>
        <pub-id pub-id-type="pmid">17952059</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="book">
        <name>
          <surname>Iverson</surname>
          <given-names>KE</given-names>
        </name>
        <source>A Programming Language</source>
        <publisher-name>John Wiley &amp; Sons</publisher-name>
        <uri>http://www.worldcat.org/isbn/0471430145</uri>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Knuth</surname>
          <given-names>DE</given-names>
        </name>
        <article-title>Two notes on notation</article-title>
        <source>Am Math Monthly</source>
        <year>1992</year>
        <volume>99</volume>
        <issue>5</issue>
        <fpage>403</fpage>
        <lpage>422</lpage>
        <pub-id pub-id-type="doi">10.2307/2325085</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

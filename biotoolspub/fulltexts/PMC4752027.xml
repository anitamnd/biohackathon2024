<?properties open_access?>
<?subarticle report12291?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v3.0 20080202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing3.dtd?>
<?SourceDTD.Version 3.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">F1000Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">F1000Res</journal-id>
    <journal-id journal-id-type="pmc">F1000Research</journal-id>
    <journal-title-group>
      <journal-title>F1000Research</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2046-1402</issn>
    <publisher>
      <publisher-name>F1000Research</publisher-name>
      <publisher-loc>London, UK</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4752027</article-id>
    <article-id pub-id-type="pmid">26937268</article-id>
    <article-id pub-id-type="doi">10.12688/f1000research.6852.2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software Tool Article</subject>
      </subj-group>
      <subj-group>
        <subject>Articles</subject>
        <subj-group>
          <subject>Bioinformatics</subject>
        </subj-group>
        <subj-group>
          <subject>Theory &amp; Simulation</subject>
        </subj-group>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>CyAnimator: Simple Animations of Cytoscape Networks</article-title>
      <fn-group content-type="pub-status">
        <fn>
          <p>[version 2; referees: 2 approved</p>
        </fn>
      </fn-group>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Morris</surname>
          <given-names>John H.</given-names>
        </name>
        <xref ref-type="corresp" rid="c1">a</xref>
        <xref ref-type="aff" rid="a1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Vijay</surname>
          <given-names>Dhameliya</given-names>
        </name>
        <xref ref-type="aff" rid="a2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Federowicz</surname>
          <given-names>Steven</given-names>
        </name>
        <xref ref-type="aff" rid="a3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Pico</surname>
          <given-names>Alexander R.</given-names>
        </name>
        <xref ref-type="aff" rid="a4">4</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ferrin</surname>
          <given-names>Thomas E.</given-names>
        </name>
        <xref ref-type="aff" rid="a5">5</xref>
      </contrib>
      <aff id="a1"><label>1</label>Resource for Biocomputing, Visualization and Informatics,, University of California, San Francisco, CA, 94143, USA</aff>
      <aff id="a2"><label>2</label>Dhirubhai Ambani Institute of Information and Communication Technology, Gujarat, India</aff>
      <aff id="a3"><label>3</label>Intrexon Inc., San Diego, CA, 92121, USA</aff>
      <aff id="a4"><label>4</label>Gladstone Institutes, San Francisco, CA, USA</aff>
      <aff id="a5"><label>5</label>Resource for Biocomputing, Visualization and Informatics, University of California, San Francisco, CA, USA</aff>
    </contrib-group>
    <author-notes>
      <corresp id="c1">
        <label>a</label>
        <email xlink:href="mailto:scooter@cgl.ucsf.edu">scooter@cgl.ucsf.edu</email>
      </corresp>
      <fn fn-type="con">
        <p>JHM wrote the manuscript and enhanced the app. SF developed initial version of the app for Cytoscape 2.8. VD ported the app to Cytoscape 3. AP and TF supervised app development and provided input on the manuscript.</p>
      </fn>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>30</day>
      <month>12</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <volume>4</volume>
    <elocation-id>482</elocation-id>
    <history>
      <date date-type="accepted">
        <day>23</day>
        <month>12</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright: © 2015 Morris JH et al.</copyright-statement>
      <copyright-year>2015</copyright-year>
      <license xlink:href="http://creativecommons.org/licenses/by/4.0/">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution Licence, which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:type="simple" xlink:href="f1000research-4-8183.pdf"/>
    <abstract>
      <p>CyAnimator (http://apps.cytoscape.org/apps/cyanimator) is a Cytoscape app that provides a tool for simple animations of Cytoscape networks. The tool allows you to take a series of snapshots (CyAnimator calls them frames) of Cytoscape networks. For example, the first frame might be of a network shown from a ”zoomed out” viewpoint and the second frame might focus on a specific group of nodes. Once these two frames are captured by the tool, it can animate between them by interpolating the changes in location, zoom, node color, node size, edge thickness, presence or absence of annotations, etc. The animations may be saved as a series of individual frames, animated GIFs, or H.264/MP4 movies.</p>
      <p>CyAnimator is available from within the Cytoscape App Manager or from the Cytoscape app store.</p>
    </abstract>
    <kwd-group kwd-group-type="author">
      <kwd>Cytoscape</kwd>
      <kwd>CyAnimator</kwd>
      <kwd>network</kwd>
      <kwd>animation</kwd>
    </kwd-group>
    <funding-group>
      <award-group id="fund-1">
        <funding-source>NIGMS</funding-source>
        <award-id>P41-GM103504</award-id>
        <award-id>P41-GM103311</award-id>
      </award-group>
      <funding-statement>JHM was funded by NIGMS grants P41-GM103504 and P41-GM103311. TF is funded by NIGMS grant P41-GM103311. AP is funded by NIGMS grant P41-GM103504.</funding-statement>
    </funding-group>
  </article-meta>
  <notes notes-type="version-changes">
    <sec sec-type="version-changes">
      <label>Revised</label>
      <title>Amendments from Version 1</title>
      <p>This version of the CyAnimator manuscript describes version 2 of CyAnimator. Version 2 has several significant changes over version 1, which are described in the manuscript, including:
<list list-type="bullet"><list-item><p>Significantly improved coverage of visual attributes  </p></list-item><list-item><p>Ability to save and restore timelines in and from session files  </p></list-item><list-item><p>Reworked UI, including the ability to drag frames to adjust the duration of transitions  </p></list-item><list-item><p>Significant changes to the internal model, which was documented as deficient in version 1 of the manuscript.  This version describes the new internal model, which improves maintainability and robustness.</p></list-item></list>
</p>
    </sec>
  </notes>
</front>
<body>
  <sec sec-type="intro">
    <title>Introduction</title>
    <p>Biological networks are typically represented as nodes and edges (node-link diagrams) that might represent the pathways, signaling cascades, interactions between proteins, and other relationships between biological entities. The problem with this representation is that it makes it seem like these relationships are static, but it is well known that biological networks are dynamic, adapting and changing in response to the cell cycle, environmental conditions, development, and, over longer periods of time, evolution. One of the best methods to represent these changes is to take advantage of motion, showing changes by interpolating between the two states. This use of motion is one way to address “change blindness”
<sup><xref rid="ref-1" ref-type="bibr">1</xref></sup>, which makes it difficult to detect the difference between two images when they are shown in succession. This is important both for presentation of results to collaborators and the broader scientific community and for the exploration of data by individual researchers.</p>
    <p>Cytoscape
<sup><xref rid="ref-2" ref-type="bibr">2</xref></sup> is one of the most common tools used to visualize and analyze biological networks. It provides very powerful visualization tools to map a variety of categorical and numeric data into visual attributes associated with the nodes and edges of node-link diagrams. Unfortunately, Cytoscape does not provide any inherent animation capabilities, making it difficult to use interpolation to detect changes between two states, however, Cytoscape does provide a rich infrastructure for extending its core functionality through “apps”
<sup><xref rid="ref-3" ref-type="bibr">3</xref></sup>. Several Cytoscape apps provide some animation capabilities. For example, VistaClara
<sup><xref rid="ref-4" ref-type="bibr">4</xref></sup>, 3DScape
<sup><xref rid="ref-5" ref-type="bibr">5</xref></sup>, and clusterMaker
<sup><xref rid="ref-6" ref-type="bibr">6</xref></sup> provide support to animate through the columns of a heat map. DynNetwork (
<ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/dynnetwork">http://apps.cytoscape.org/apps/dynnetwork</ext-link>) reads specially constructed input files that specifically encodes changes to the network over time. Of these, only clusterMaker2 and DynNetwork are available in Cytoscape 3, and offer relatively limited restrictive animation capabilities (in the case of clusterMaker2) or require construction of special input files in advance (in the case of DynNetwork). None of the available tools allows for the animation of arbitrary changes to the network topology or visualization.</p>
    <p>CyAnimator attempts to fill this gap by providing a tool that supports animation by allowing the user to designate particular network views as “key frames”. These frames represent the state of the network at particular moments in time including the current list of nodes and edges and the visual attributes of those nodes and edges. The user may then arrange those frames in a desired sequence and CyAnimator will interpolate between the frames resulting in a smooth animation between the states of the network. The resulting animation may be saved as a movie.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <sec>
      <title>Implementation</title>
      <p>The main object in CyAnimator is a CyFrame, which contains all of the information about the visual attributes of the network background, annotations, nodes, and edges. This information is stored in a series of maps indexed by the network, node, edge or annotation object. CyAnimator makes heavy use of the visual property system in Cytoscape and the pseudocode for the general loop for populating a CyFrame is:</p>
      <p>
        <preformat>
          <styled-content style="font-size:15px;">getNetworkVisualProperties();
foreach Node:
   getNodeVisualProperties();
foreach Edge:
   getEdgeVisualProperties();
foreach Annotation:
   getAnnotationVisualProperties();
getImage();</styled-content>
        </preformat>
      </p>
      <p>The captured image is used to show thumbnails to the user in the CyAnimator dialog (see below). The result of the above pseudocode is the creation of 4 maps:</p>
      <p>
        <preformat>
          <styled-content style="font-size:15px;">Map&lt;CyNode, Map&lt;VisualProperty&lt;?&gt;, Object&gt;&gt; nodePropertyMap;
Map&lt;CyEdge, Map&lt;VisualProperty&lt;?&gt;, Object&gt;&gt; edgePropertyMap;
Map&lt;CyNetwork, Map&lt;VisualProperty&lt;?&gt;, Object&gt;&gt; networkPropertyMap;
Map&lt;Annotation, Map&lt;VisualProperty&lt;?&gt;, Object&gt;&gt; annotationPropertyMap;</styled-content>
        </preformat>
      </p>
      <p>When the user clicks on a frame in the CyAnimator dialog or during the animation, the stored visual properties are mapped onto the current network. This is a straightforward mapping except in circumstances where the current network does not have the node, edge, or annotation that the stored CyFrame had or the CyFrame did not have a node, edge, or annotation that the current network has. In the first case, the missing object is added to the network and styled using the stored information. This approach depends on the fact that deleted nodes and edges are not removed from the CyRootNetwork (the root of the network collection), so the topology of the network at the time the CyFrame was stored may be recreated. In the second case, the CyFrame sets the visibility of the object to
<bold>false</bold>, hiding that object, and resulting in a network view that is consistent with the saved visual properties.</p>
      <p>Interpolation between CyFrames is handled by the Interpolator, which maintains lists of interpolators for node visual attributes, edge visual attributes, annotation visual attributes, and network visual attributes. The Interpolator
<italic>makeFrames</italic>() method takes as input the list of CyFrames, the user saved (key frames) and returns an array of frames that includes interpolations between each pair of key frames. So, if the user has requested 30 frames between each key frame, and created 5 key frames,
<italic>makeFrames</italic>(), will return 121 frames, which is the number of key frames to interpolate between (key frames - 1), multiplied by the number of interpolations between each key frame, plus the initial key frame ((keyframes - 1)*interpolations + 1).</p>
      <p>CyAnimator currently supports several different interpolators:</p>
      <table-wrap id="T0" orientation="portrait" position="anchor">
        <table frame="hsides" rules="groups" content-type="article-table">
          <tbody>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Color</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Colors are linearly interpolated
<break/>between the two key frames.
<break/>Color interpolation may include
<break/>interpolation of transparency using
<break/>a Bezier to provide more natural
<break/>fade-in/fade-out</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Size</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Linear interpolation of numerical
<break/>values (usually sizes) between the
<break/>two key frames.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Transparency</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Linear interpolation of transparency
<break/>values</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>ObjectPosition</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Special interpolator for changes
<break/>in label and custom graphics
<break/>positions. Doesn’t support changes
<break/>in justification or object anchor.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Position</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Linearly interpolate changes in
<break/>X,Y position of objects</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Crossfade</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">For properties that can not be easily
<break/>interpolated (e.g. node shape),
<break/>fades the object out, then fades it in
<break/>with the new property</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>CustomGraphicsCrossfade</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Crossfade between two custom
<break/>graphics.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>Visible</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">Fades an object in or out if the
<break/>visibility changes</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <bold>None</bold>
              </td>
              <td valign="top" rowspan="1" colspan="1">This visual attribute is not
<break/>interpolated.</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p><xref ref-type="table" rid="T1">Table 1</xref> shows the interpolated visual attributes and the type of interpolation.</p>
      <table-wrap id="T1" orientation="portrait" position="anchor">
        <label>Table 1. </label>
        <caption>
          <title>Visual Property Interpolations.</title>
        </caption>
        <table frame="hsides" rules="groups" content-type="article-table">
          <thead>
            <tr>
              <th align="left" rowspan="1" colspan="1">Object Type</th>
              <th align="left" rowspan="1" colspan="1">Visual Attributes</th>
              <th align="left" rowspan="1" colspan="1">Interpolation</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="3" valign="middle" colspan="1">Network</td>
              <td rowspan="1" colspan="1">Background Paint</td>
              <td rowspan="1" colspan="1">
                <bold>Color</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">X, Y, and Z Location</td>
              <td rowspan="1" colspan="1">
                <bold>Position</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Depth, Height, Scale Factor, Size, and Width</td>
              <td rowspan="1" colspan="1">
                <bold>Size</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="9" valign="middle" colspan="1">Node</td>
              <td rowspan="1" colspan="1">Border Paint, Fill Color, Label Color</td>
              <td rowspan="1" colspan="1">
                <bold>Color</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Border Transparency, Label Transparency, Transparency</td>
              <td rowspan="1" colspan="1">
                <bold>Transparency</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Border Width, Height, Width, Size, Label Size, Custom Graphics Size
<break/>(1–9)</td>
              <td rowspan="1" colspan="1">
                <bold>Size</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">X, Y, and Z Location</td>
              <td rowspan="1" colspan="1">
                <bold>Position</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Shape, Label, Font Face, </td>
              <td rowspan="1" colspan="1">
                <bold>CrossFade</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Label Position, Custom Graphics Position (1-9)</td>
              <td rowspan="1" colspan="1">
                <bold>ObjectPosition</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Custom Graphics (1–9)</td>
              <td rowspan="1" colspan="1">
                <bold>CustomGraphicsCrossfade</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Nested Network Visible</td>
              <td rowspan="1" colspan="1">
                <bold>None</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Visible</td>
              <td rowspan="1" colspan="1">
                <bold>Visible</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="5" valign="middle" colspan="1">Edge</td>
              <td rowspan="1" colspan="1">Label Color, Paint</td>
              <td rowspan="1" colspan="1">
                <bold>Color</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Label, Font Face, Line Type, </td>
              <td rowspan="1" colspan="1">
                <bold>Crossfade</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Label Transparency, Transparency</td>
              <td rowspan="1" colspan="1">
                <bold>Transparency</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Width, Label Size</td>
              <td rowspan="1" colspan="1">
                <bold>Size</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Visible</td>
              <td rowspan="1" colspan="1">
                <bold>Visible</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="6" valign="middle" colspan="1">Annotations</td>
              <td rowspan="1" colspan="1">X and Y Location</td>
              <td rowspan="1" colspan="1">
                <bold>Position</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Zoom, Width, Height, Border Width, Font Size, Image Contrast,
<break/>Image Brightness, Arrow Source Size, Arrow Width, Arrow Target Size</td>
              <td rowspan="1" colspan="1">
                <bold>Size</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Color, Font Color, Border Color, Arrow Source Color, Arrow Target
<break/>Color, Arrow Color</td>
              <td rowspan="1" colspan="1">
                <bold>Color</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Opacity, Image Opacity</td>
              <td rowspan="1" colspan="1">
                <bold>Transparency</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Shape, Text, Font Style, Font Family, Image URL, Arrow Source
<break/>Anchor, Arrow Target Anchor, Arrow Source Type, Arrow Target Type</td>
              <td rowspan="1" colspan="1">
                <bold>Crossfade</bold>
              </td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Canvas</td>
              <td rowspan="1" colspan="1">
                <bold>None</bold>
              </td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>To implement the creation of a movie, three different mechanisms are used. In each case, an image file is created for each interpolated frame. One option the user has is to just write out the individual frames and allow them to use whatever movie making tool they desire. We have also implemented an animated GIF writer using the native Java ImageIO library. Finally, for creating MP4 movies with the H.264 codec, we utilize the JCodec (
<ext-link ext-link-type="uri" xlink:href="http://jcodec.org/">http://jcodec.org/</ext-link>) Java library, which includes the necessary video codecs.</p>
      <p>CyAnimator is not able to handle all visual properties, however. Currently edge bends are not correctly interpolated and neither are certain changes in label position (particularly those that require knowledge of the rendered width or height). Furthermore, with the introduction of multiple back-end renderers in Cytoscape 3.2 and 3.3, it’s not clear how well CyAnimator will work with other renderer implementations.</p>
    </sec>
    <sec>
      <title>Operation</title>
      <p>To bring up CyAnimator select
<bold>Apps→CyAnimator</bold>. This will bring up an empty CyAnimator dialog (
<xref ref-type="fig" rid="f1">Figure 1</xref>). Note that CyAnimator is only able to animate between networks in the same network collection (In Cytoscape 3, a Network Collection contains multiple networks which possibly share nodes and edges). Starting CyAnimator on a new network collection will create a new, empty, CyAnimator dialog. Once a CyAnimator dialog is open, the general workflow is to manipulate the network to what you want it to look like at the start of your movie, then select
<graphic xlink:href="f1000research-4-8183-g0000.jpg" position="float" orientation="portrait"/> to add the frame to CyAnimator. Once the frame has been added, modify your network to what you want it to look like in the next frame of your movie and then again select
<graphic xlink:href="f1000research-4-8183-g0000.jpg" position="float" orientation="portrait"/>. Note that CyAnimator will do all of the interpolation to get from one frame to another, so the manipulations of the network can include a variety of changes, including changes in color, position, zoom, annotations, etc. Repeat this process until you are happy with your movie, then simply press the record (
<graphic xlink:href="f1000research-4-8183-g0001.jpg" position="float" orientation="portrait"/>) button. If you want more time between any two frames, simply drag the image. The timeline is measured in seconds and assumes that 30 frames will be interpolated for each second.</p>
      <fig fig-type="figure" id="f1" orientation="portrait" position="float">
        <label>Figure 1. </label>
        <caption>
          <title>The CyAnimator Dialog showing two key frames.</title>
          <p>To support creating and modifying complicated movies, CyAnimator saves all of the frames as part of the session. When you open a Cytoscape session that has been saved with an active CyAnimator timeline, that timeline will be presented when the CyAnimator dialog is presented (Apps→CyAnimator).</p>
        </caption>
        <graphic xlink:href="f1000research-4-8183-g0002"/>
      </fig>
    </sec>
    <sec>
      <title>CyAnimator dialog</title>
      <p>The CyAnimator dialog provides the main interface to CyAnimator, including the following controls:</p>
      <table-wrap id="T2" orientation="portrait" position="anchor">
        <table frame="hsides" rules="groups" content-type="article-table">
          <tbody>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0003"/>
              </td>
              <td rowspan="1" colspan="1">Add the current network view as a frame to the
<break/>animation.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0004"/>
              </td>
              <td rowspan="1" colspan="1">Remove all currently selected frames</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <styled-content style="#30358F" style-type="color">
                  <bold>Clear All Frames</bold>
                </styled-content>
              </td>
              <td rowspan="1" colspan="1">Remove all frames from the timeline</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0005"/>
              </td>
              <td rowspan="1" colspan="1">Play the animation by interpolating through
<break/>each frame.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0006"/>
              </td>
              <td rowspan="1" colspan="1">Pause the currently playing animation.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0007"/>
              </td>
              <td rowspan="1" colspan="1">Stop the currently playing animation.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0008"/>
              </td>
              <td rowspan="1" colspan="1">Step backwards to the previous interpolated
<break/>frame.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0009"/>
              </td>
              <td rowspan="1" colspan="1">Step forwards to the next interpolated frame.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0010"/>
              </td>
              <td rowspan="1" colspan="1">This toggle button controls whether the
<break/>animation is looped or not. When the button
<break/>is in, the animation will continue to loop,
<break/>otherwise, it will stop at the end.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <graphic xlink:href="f1000research-4-8183-g0011"/>
              </td>
              <td rowspan="1" colspan="1">Bring up the Output Options dialog and
<break/>record a movie or (optionally) save each of the
<break/>interpolated frames.</td>
            </tr>
            <tr>
              <td valign="top" rowspan="1" colspan="1">
                <styled-content style="#30358F" style-type="color">
                  <bold>Animation Speed</bold>
                </styled-content>
              </td>
              <td rowspan="1" colspan="1">The speed slider controls the speed of the
<break/>animation (but is ignored for the recorded movies,
<break/>which uses it’s own Frames Per Second option.</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>Clicking on a frame and then dragging it will move the frame in the timeline. Holding down the shift key when clicking and dragging a frame will move all of the frames to the right the same amount. To make a frame current (i.e. show that frame in the Network Window), double-click on the frame. To delete a frame, click on the frame to select it, and press the trash can icon (
<graphic xlink:href="f1000research-4-8183-g0012.jpg" position="float" orientation="portrait"/>).</p>
    </sec>
    <sec>
      <title>Output options</title>
      <p>The Output Options Dialog (see
<xref ref-type="fig" rid="f2">Figure 2</xref>) provides the controls to choose the type of video you want to produce, options about the resolution and speed of the video, and the location of the video output.</p>
      <fig fig-type="figure" id="f2" orientation="portrait" position="float">
        <label>Figure 2. </label>
        <caption>
          <title>The Output Options Dialog showing the production of an MP4/H.264 video file at the screen resolution and 30 frames/second.</title>
        </caption>
        <graphic xlink:href="f1000research-4-8183-g0013"/>
      </fig>
    </sec>
    <sec>
      <title>Video types</title>
      <p><bold><italic>Frames</italic></bold>. This is the simplest of the video types. This will output each frame as a ".png" file at the requested resolution (see ’Resolution’ below) into the Video location directory specified. To make a movie, you could use any of the standard video packages that accept individual frames (e.g. iMovie on Mac). Note that the Frames Per Second option doesn’t make sense for this output type since we’re only writing individual frames (no time encoding), so this option is disabled (grayed out) in the interface.</p>
      <p><bold><italic>GIF</italic></bold>. This will output an animated GIF of the interpolated frames. Animated GIF files are easy to show on web sites, but are not the currently accepted standard format. On the other hand, animated GIF files are computationally very easy to produce.</p>
      <p><bold><italic>MP4/H.264</italic></bold>. This will output a raw MPEG4 file of the interpolated frames. Producing an MP4 can be computationally expensive, and will require more time and memory to complete.</p>
    </sec>
    <sec>
      <title>Frame options</title>
      <p><bold><italic>Frame rate</italic></bold>. This controls the speed of the movie in terms of the number of frames per second. Four frame rates are offered, the two standard frame rates: 25 (PAL) and 29.97 (NTSC), and 30 and 60. The timeline dialog is calibrated at 30 frames per second, so a frame rate of 30 will correspond to the timeline and is a good default unless there is a reason to use one of the standards.</p>
      <p><bold><italic>Resolution</italic></bold>. This controls the resolution of the output frames. The units are % expansion, so a Resolution of 300 would result in a 300% (or 3X) expansion of the output image. This is extremely important for high-quality videos. We recommend at least a 2X (Resolution of 200) expansion for any published video.</p>
    </sec>
    <sec>
      <title>Example movie</title>
      <p>A sample movie is provided (see
<xref ref-type="other" rid="SM1">Supplementary_File_1.mov</xref>) that was created with CyAnimator 2.0.2 and Cytoscape 3.3.0. This movie used galFiltered.cys, which may be located in the
<italic>sampleData</italic> subdirectory of the Cytoscape installation directory (e.g. /Applications/Cytoscape_v3.3.0/sampleData on a Mac). The movie consisted of 13 key frames:
<list list-type="simple"><list-item><label>1.</label><p>the full network using the default style</p></list-item><list-item><label>2.</label><p>a view focused on MCM1 (YMR043W)</p></list-item><list-item><label>3.</label><p>that same view using COMMON NAME for the node label and circle for node shape</p></list-item><list-item><label>4.</label><p>same view as 3, but scaled the node size and node label size by Degree</p></list-item><list-item><label>5.</label><p>added in some annotations to highlight MCM1</p></list-item><list-item><label>6.</label><p>Change the node colors using the data from the gal1RGexp column. Color gradient is from blue to yellow. Added a text annotation describing the data</p></list-item><list-item><label>7.</label><p>the same view as the above – to hold it on the screen</p></list-item><list-item><label>8.</label><p>The same as #6, but using gal4RGexp as the column</p></list-item><list-item><label>9.</label><p>Again, use the same frame before to provide some time onscreen</p></list-item><list-item><label>10.</label><p>The same as #8, but using gal80Gexp as the column</p></list-item><list-item><label>11.</label><p>Another frame of gal80Gexp</p></list-item><list-item><label>12.</label><p>This frame uses the custom graphics Chart feature to show all three expression values and shows how custom graphics fade in. The labels were also moved down to avoid the charts</p></list-item><list-item><label>13.</label><p>another capture frame of the same frame as #12</p></list-item></list>
</p>
    </sec>
  </sec>
  <sec sec-type="conclusions">
    <title>Conclusions</title>
    <p>CyAnimator is an important addition to the suite of Cytoscape apps. It provides an easy tool to interpolate between different states of a network and may be used to animate changes over time, condition, or treatment. In the future, we will be adding support for visualization engines other than current default, including the ability to animate 3D renderers.</p>
  </sec>
  <sec>
    <title>Software availability</title>
    <sec>
      <title>Software available from</title>
      <p>
        <ext-link ext-link-type="uri" xlink:href="http://apps.cytoscape.org/apps/cyanimator">http://apps.cytoscape.org/apps/cyanimator</ext-link>
      </p>
    </sec>
    <sec>
      <title>Latest source code</title>
      <p>
        <ext-link ext-link-type="uri" xlink:href="https://github.com/RBVI/CyAnimator">https://github.com/RBVI/CyAnimator</ext-link>
      </p>
    </sec>
    <sec>
      <title>Archived source code as at the time of publication</title>
      <p>
        <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5281/zenodo.35386">http://dx.doi.org/10.5281/zenodo.35386</ext-link>
        <sup>
          <xref rid="ref-7" ref-type="bibr">7</xref>
        </sup>
      </p>
    </sec>
    <sec>
      <title>License: Lesser GNU Public License 3.0</title>
      <p>
        <ext-link ext-link-type="uri" xlink:href="https://www.gnu.org/licenses/lgpl.html">https://www.gnu.org/licenses/lgpl.html</ext-link>
      </p>
    </sec>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>The authors wish to acknowledge the support of the NRNB Academy.</p>
  </ack>
  <sec id="SM1" sec-type="supplementary-material">
    <title>Supplementary material</title>
    <p><bold>Sample movie created with CyAnimator and Cytoscape 3.3.</bold> This movie used galFiltered.cys, which may be located in the sampleData subdirectory of the Cytoscape installation directory (e.g. /Applications/Cytoscape_v3.3.0/sampleData on a Mac) as a starting point.</p>
    <p><supplementary-material content-type="local-data" id="S0"><media xlink:href="f1000research-4-8183-s0000.tgz"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material>.</p>
    <p>See below for the saved session file.</p>
    <p>
      <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5256/f1000research.6852.s110143">http://dx.doi.org/10.5256/f1000research.6852.s110143</ext-link>
    </p>
    <p><supplementary-material content-type="local-data" id="S2"><media xlink:href="f1000research-4-8183-s0002.tgz"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material>.</p>
    <p>Session file used to create the sample video.</p>
    <p>The session file saved with the timeline used to create the sample video.</p>
    <p>
      <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5256/f1000research.6852.s110145">http://dx.doi.org/10.5256/f1000research.6852.s110145</ext-link>
    </p>
    <p><supplementary-material content-type="local-data" id="S1"><media xlink:href="f1000research-4-8183-s0001.tgz"><caption><p>Click here for additional data file.</p></caption></media></supplementary-material>.</p>
  </sec>
  <ref-list>
    <ref id="ref-1">
      <label>1</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Simons</surname><given-names>DJ</given-names></name><name><surname>Ambinder</surname><given-names>MS</given-names></name></person-group>:
<article-title>Change blindness: theory and consequences.</article-title><source><italic>Curr Dir Psychol Sci.</italic></source><year>2005</year>;<volume>14</volume>(<issue>1</issue>):<fpage>44</fpage>–<lpage>48</lpage>.
<pub-id pub-id-type="doi">10.1111/j.0963-7214.2005.00332.x</pub-id></mixed-citation>
    </ref>
    <ref id="ref-2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Shannon</surname><given-names>P</given-names></name><name><surname>Markiel</surname><given-names>A</given-names></name><name><surname>Ozier</surname><given-names>O</given-names></name><etal/></person-group>:
<article-title>Cytoscape: a software environment for integrated models of biomolecular interaction networks.</article-title><source><italic>Genome Res.</italic></source><year>2003</year>;<volume>13</volume>(<issue>11</issue>):<fpage>2498</fpage>–<lpage>2504</lpage>.
<pub-id pub-id-type="doi">10.1101/gr.1239303</pub-id><!--<pub-id pub-id-type="pmcid">403769</pub-id>--><?supplied-pmid 14597658?><pub-id pub-id-type="pmid">14597658</pub-id></mixed-citation>
    </ref>
    <ref id="ref-3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Pico</surname><given-names>AR</given-names></name><name><surname>Bader</surname><given-names>GD</given-names></name><name><surname>Demchak</surname><given-names>B</given-names></name><etal/></person-group>:
<article-title>The Cytoscape app article collection [version 1; referees: not peer reviewed].</article-title><source><italic>F1000Res.</italic></source><year>2014</year>;<volume>3</volume>:<fpage>138</fpage>.
<pub-id pub-id-type="doi">10.12688/f1000research.4642.1</pub-id><!--<pub-id pub-id-type="pmcid">4288400</pub-id>--><?supplied-pmid 25580224?><pub-id pub-id-type="pmid">25580224</pub-id></mixed-citation>
    </ref>
    <ref id="ref-4">
      <label>4</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Kincaid</surname><given-names>R</given-names></name><name><surname>Kuchinsky</surname><given-names>A</given-names></name><name><surname>Creech</surname><given-names>M</given-names></name></person-group>:
<article-title>VistaClara: an expression browser plug-in for Cytoscape.</article-title><source><italic>Bioinformatics.</italic></source><year>2008</year>;<volume>24</volume>(<issue>18</issue>):<fpage>2112</fpage>–<lpage>2114</lpage>.
<pub-id pub-id-type="doi">10.1093/bioinformatics/btn368</pub-id><!--<pub-id pub-id-type="pmcid">2530886</pub-id>--><?supplied-pmid 18678589?><pub-id pub-id-type="pmid">18678589</pub-id></mixed-citation>
    </ref>
    <ref id="ref-5">
      <label>5</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Wang</surname><given-names>Q</given-names></name></person-group>:
<article-title>3DScape: three dimensional visualization plug-in for Cytoscape.</article-title><source><italic>Nature Precedings.</italic></source><year>2011</year><ext-link ext-link-type="uri" xlink:href="http://precedings.nature.com/documents/6094/version/1/files/npre20116094-1.pdf">Reference Source</ext-link></mixed-citation>
    </ref>
    <ref id="ref-6">
      <label>6</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morris</surname><given-names>JH</given-names></name><name><surname>Apeltsin</surname><given-names>L</given-names></name><name><surname>Newman</surname><given-names>AM</given-names></name><etal/></person-group>:
<article-title><italic>clusterMaker</italic>: a multi-algorithm clustering plugin for Cytoscape.</article-title><source><italic>BMC Bioinformatics.</italic></source><year>2011</year>;<volume>12</volume>(<issue>1</issue>):<fpage>436</fpage>.
<pub-id pub-id-type="doi">10.1186/1471-2105-12-436</pub-id><!--<pub-id pub-id-type="pmcid">3262844</pub-id>--><?supplied-pmid 22070249?><pub-id pub-id-type="pmid">22070249</pub-id></mixed-citation>
    </ref>
    <ref id="ref-7">
      <label>7</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><name><surname>Morris</surname><given-names>S</given-names></name><name><surname>Dhameliya</surname><given-names>V</given-names></name><name><surname>Wu</surname><given-names>A</given-names></name><etal/></person-group>:
<article-title>CyAnimator v2: Simple Animations of Cytoscape Networks.</article-title><source><italic>Zenodo.</italic></source><year>2015</year><ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.5281/zenodo.35386">Data Source</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>
<sub-article id="report12291" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.8183.r12291</article-id>
    <title-group>
      <article-title>Referee response for version 2</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Molenaar</surname>
          <given-names>Piet</given-names>
        </name>
        <xref ref-type="aff" rid="r12291a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r12291a1"><label>1</label>Academic Medical Center, Amsterdam, Netherlands</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>2</month>
      <year>2016</year>
    </pub-date>
    <related-article id="d35e1331" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.6852.2">Version 2</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The CyAnimator app is a valuable addition to the Cytoscape network visualization tool. Cytoscape itself doesn't provide animation capabilities and the authors rightfully state that animation can provide additional insights for researchers.</p>
    <p>There is some flickering visible while animating (nodes appearing and disappearing behind other nodes) but this apparently has to do with the current rendering engine. In future implementations it is expected that these issues will be solved.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>
<sub-article id="report10174" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.7370.r10174</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Salomonis</surname>
          <given-names>Nathan</given-names>
        </name>
        <xref ref-type="aff" rid="r10174a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r10174a1"><label>1</label>Cincinnati Children's Hospital Medical Center Research Foundation, Cincinnati, OH, USA</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>2</day>
      <month>9</month>
      <year>2015</year>
    </pub-date>
    <related-article id="d35e1382" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.6852.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve-with-reservations</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The authors present a useful Cytoscape app that fills in an important void not provided by the parent application: dynamically transitioning between distinct network states or associated visualized datasets. The application is thus novel and provides an important function in Cytoscape that could significantly assist with biological interpretation.</p>
    <p><bold>Major Point 1: </bold>The authors state: “Note that CyAnimator is only able to animate between networks in the same network collection.”</p>
    <p>Can a network collection be different networks that share some or all of the same nodes? If not, I understand how this could be a technical limitation of the app, but would be of particular use when curating distinct pathway states from an original network. Often, adding, subtracting, moving and re-coloring nodes in succession to different states in the same network instances is challenging, but storing these as distinct snap shots that can be animated together is extremely powerful. If not present, is this a future option?</p>
    <p><bold>Major Point 2:</bold> The shown movie is a reasonable simple demonstration of CyAnimator, however, this does not show of the more interesting dynamic options of the tools, such as transitioning between different developmental or temporal states (node color attributes, aka gene expression fold differences) or temporally distinct interactions for a given pathway (e.g., chain of metabolic events). While I realize this would be some work to do, this would more strongly demonstrate the capabilities of the software.</p>
    <p>
      <bold> </bold>
    </p>
    <p><bold>Minor Point:</bold> One of the powerful uses of this software would be via programmatic generation of animations, by defining network states and visual parameters. While I know that some of these capabilities are embedded in Cytoscape 3, are these possible within CyAnimator for the purpose of making animations outside of the UI? If so, can the authors provide an example set of code to do this? A link to documentation or a tutorial would also be helpful for the end-users to properly use the software.</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard, however I have significant reservations, as outlined above.</p>
  </body>
  <sub-article id="comment1730" article-type="response">
    <front-stub>
      <contrib-group>
        <contrib contrib-type="author">
          <name>
            <surname>Morris</surname>
            <given-names>Scooter</given-names>
          </name>
          <aff/>
        </contrib>
      </contrib-group>
      <author-notes>
        <fn fn-type="COI-statement">
          <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
        </fn>
      </author-notes>
      <pub-date pub-type="epub">
        <day>14</day>
        <month>12</month>
        <year>2015</year>
      </pub-date>
    </front-stub>
    <body>
      <p>Thank you for your review.  I have just submitted version 2 of the CyAnimator paper, which corresponds to the latest release of the App on the Cytoscape App store.  The new app version is a significant rewrite and offers several advantages over the previous version, which I believe address move of your concerns.  To answer point-by-point:</p>
      <p>
        <italic><bold>Major Point 1: </bold>The authors state: “Note that CyAnimator is only able to animate between networks in the same network collection.”</italic>
      </p>
      <p>
        <italic> </italic>
      </p>
      <p>
        <italic>Can a network collection be different networks that share some or all of the same nodes? If not, I understand how this could be a technical limitation of the app, but would be of particular use when curating distinct pathway states from an original network. Often, adding, subtracting, moving and re-coloring nodes in succession to different states in the same network instances is challenging, but storing these as distinct snap shots that can be animated together is extremely powerful. If not present, is this a future option?</italic>
      </p>
      <p>Yes, a network collection in Cytoscape 3 includes multiple networks that share nodes and edges.  Essentially, a network collection can be thought of as a set of projections of a single network, very similar to the Cytoscape 2 model.  Cytoscape 3 allows users to create multiple network collections and the nodes and edges aren't shared between them.  Both versions of the App support this capability.</p>
      <p>
        <italic><bold>Major Point 2</bold>: The shown movie is a reasonable simple demonstration of CyAnimator, however, this does not show of the more interesting dynamic options of the tools, such as transitioning between different developmental or temporal states (node color attributes, aka gene expression fold differences) or temporally distinct interactions for a given pathway (e.g., chain of metabolic events). While I realize this would be some work to do, this would more strongly demonstrate the capabilities of the software.</italic>
      </p>
      <p>The sample movie has been updated as suggested to show three different expression fold changes and a heat strip representation showing all three at once.</p>
      <p>
        <italic><bold>Minor Point:</bold> One of the powerful uses of this software would be via programmatic generation of animations, by defining network states and visual parameters. While I know that some of these capabilities are embedded in Cytoscape 3, are these possible within CyAnimator for the purpose of making animations outside of the UI? If so, can the authors provide an example set of code to do this? A link to documentation or a tutorial would also be helpful for the end-users to properly use the software.</italic>
      </p>
      <p>This version of the App introduces some simple commands that may be used by app developers to create frames.  At this point, the capability remains somewhat rudimentary and doesn't allow programmatic changes to frame ordering or transition duration.  This will be added in a future version and more detailed documentation will be written at that time.</p>
    </body>
  </sub-article>
</sub-article>
<sub-article id="report9880" article-type="peer-review">
  <front-stub>
    <article-id pub-id-type="doi">10.5256/f1000research.7370.r9880</article-id>
    <title-group>
      <article-title>Referee response for version 1</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Scardoni</surname>
          <given-names>Giovanni</given-names>
        </name>
        <xref ref-type="aff" rid="r9880a1">1</xref>
        <role>Referee</role>
      </contrib>
      <aff id="r9880a1"><label>1</label>Center for BioMedical Computing, University of Verona, Verona, Italy</aff>
    </contrib-group>
    <author-notes>
      <fn fn-type="COI-statement">
        <p><bold>Competing interests: </bold>No competing interests were disclosed.</p>
      </fn>
    </author-notes>
    <pub-date pub-type="epub">
      <day>18</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <related-article id="d35e1517" related-article-type="peer-reviewed-article" ext-link-type="doi" xlink:href="10.12688/f1000research.6852.1">Version 1</related-article>
    <custom-meta-group>
      <custom-meta>
        <meta-name>recommendation</meta-name>
        <meta-value>approve</meta-value>
      </custom-meta>
    </custom-meta-group>
  </front-stub>
  <body>
    <p>The App is very useful and easy to use. As the article highlights It is very important to have a tool allowing the user to create animations from static frames of a network, and there are no other Cytoscape apps with the same characteristics  of CyAnimator. The paper is well written and both implementation and features are easy to understand.</p>
    <p>Minor changes:
<list list-type="bullet"><list-item><p>The sentence about the future implementation of the maps in the implementation section should be moved to the conclusions session or to the supplementary materials. So the reader can concentrate on the current features of the app.</p></list-item><list-item><p>Similarly, the last sentence of the conclusions sounds better as "The ability to save the key frames of an animation as part of a session will be added .....".</p></list-item></list>
</p>
    <p>I have read this submission. I believe that I have an appropriate level of expertise to confirm that it is of an acceptable scientific standard.</p>
  </body>
</sub-article>

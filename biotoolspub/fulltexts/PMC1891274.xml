<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Biol Direct</journal-id>
    <journal-title>Biology Direct</journal-title>
    <issn pub-type="epub">1745-6150</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">1891274</article-id>
    <article-id pub-id-type="publisher-id">1745-6150-2-16</article-id>
    <article-id pub-id-type="pmid">17540033</article-id>
    <article-id pub-id-type="doi">10.1186/1745-6150-2-16</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>nuID: a universal naming scheme of oligonucleotides for Illumina, Affymetrix, and other microarrays</article-title>
    </title-group>
    <contrib-group>
      <contrib id="A1" contrib-type="author">
        <name>
          <surname>Du</surname>
          <given-names>Pan</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>dupan@northwestern.edu</email>
      </contrib>
      <contrib id="A2" contrib-type="author">
        <name>
          <surname>Kibbe</surname>
          <given-names>Warren A</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>wakibbe@northwestern.edu</email>
      </contrib>
      <contrib id="A3" corresp="yes" contrib-type="author">
        <name>
          <surname>Lin</surname>
          <given-names>Simon M</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>s-lin2@northwestern.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Robert H. Lurie Comprehensive Cancer Center, Northwestern University, Chicago, IL, 60611, USA</aff>
    <pub-date pub-type="collection">
      <year>2007</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>31</day>
      <month>5</month>
      <year>2007</year>
    </pub-date>
    <volume>2</volume>
    <fpage>16</fpage>
    <lpage>16</lpage>
    <ext-link ext-link-type="uri" xlink:href="http://www.biology-direct.com/content/2/1/16"/>
    <history>
      <date date-type="received">
        <day>2</day>
        <month>5</month>
        <year>2007</year>
      </date>
      <date date-type="accepted">
        <day>31</day>
        <month>5</month>
        <year>2007</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â© 2007 Du et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2007</copyright-year>
      <copyright-holder>Du et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p>
        <!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Du
               Pan
               
               dupan@northwestern.edu
            </dc:author><dc:title>
            nuID: a universal naming scheme of oligonucleotides for Illumina, Affymetrix, and other microarrays
         </dc:title><dc:date>2007</dc:date><dcterms:bibliographicCitation>Biology Direct 2(1): 16-. (2007)</dcterms:bibliographicCitation><dc:identifier type="sici">1745-6150(2007)2:1&#x0003c;16&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1745-6150</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>-->
      </license>
    </permissions>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Oligonucleotide probes that are sequence identical may have different identifiers between manufacturers and even between different versions of the same company's microarray; and sometimes the same identifier is reused and represents a completely different oligonucleotide, resulting in ambiguity and potentially mis-identification of the genes hybridizing to that probe.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We have devised a unique, non-degenerate encoding scheme that can be used as a universal representation to identify an oligonucleotide across manufacturers. We have named the encoded representation 'nuID', for nucleotide universal identifier. Inspired by the fact that the raw sequence of the oligonucleotide is the true definition of identity for a probe, the encoding algorithm uniquely and non-degenerately transforms the sequence itself into a compact identifier (a lossless compression). In addition, we added a redundancy check (checksum) to validate the integrity of the identifier. These two steps, encoding plus checksum, result in an nuID, which is a unique, non-degenerate, permanent, robust and efficient representation of the probe sequence. For commercial applications that require the sequence identity to be confidential, we have an encryption schema for nuID. We demonstrate the utility of nuIDs for the annotation of Illumina microarrays, and we believe it has universal applicability as a source-independent naming convention for oligomers.</p>
      </sec>
      <sec>
        <title>Reviewers</title>
        <p>This article was reviewed by Itai Yanai, Rong Chen (nominated by Mark Gerstein), and Gregory Schuler (nominated by David Lipman).</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Oligonucleotides (often simply referred to as oligos or oligomers) are typically between 25 to 75 bases long. Microarray manufacturers have extensively used oligos as sequence-specific probes to detect the expression of genes. An oligo sequence that is located on a specific bead or position on a microarray is usually referred to as the probe sequence, or just as the probe. Current microarrays by Affymetrix, Agilent, Illumina and others have tens of thousands or even hundreds of thousands of unique sequence probes in an array [<xref ref-type="bibr" rid="B1">1</xref>].</p>
    <p>In comparison with the stable identifiers for genes that are available through GenBank/EMBL/DDBJ, a stable naming convention or identification scheme for probes has not been established. As a result, some manufacturers have internally created oligonucleotide identifiers, while others have reused external gene identifiers for oligos. Neither of these solutions has been ideal.</p>
    <p>With proprietary identifiers, oligo probes that are sequence identical may have different identifiers between manufacturers and even between different versions of the same company's microarray; and sometimes the same identifier is reused and represents a completely different oligo, resulting in ambiguity and potentially mis-identification of the genes hybridizing to that probe. For example, the same probe was named as "GI_21070949-S" in the Illumina MouseRef-8_V1 chip but as "scl022190.1_154-S" in the later Illumina Mouse-6_V1 chip. The lack of permanency of internal identifiers causes difficulties when combining clinical microarray data collected over time using different versions of the chips. Moreover, internally created identifiers can sometime fail to satisfy the one-to-one mapping rule. For instance, the same probe was identified degeneratively as both "GI_28476905" and "scl0076846.1_142" on the Illumina MouseRef-8_V1 chip. Thus, without a central authority to approve the uniqueness, internally created identifiers can fail to be globally unique, and sometimes even locally unique. However, such a central approval process may not be socially feasible.</p>
    <p>Utilizing external gene identifiers apparently both solves the cross-manufacturer data integration problem and the permanency of the identifier. However, it blurs the distinction between oligo probes and genes. Although a good probe sequence should uniquely hybridize with only the RNA from a single gene, in practice this is very difficult to achieve across a genome due to the presence of alternative transcripts, gene families, conserved domains, and other sequences that, if included in the probe, result in cross hybridization with RNA species from different genes. Moreover, the probe-to-gene mapping is dynamic because of the continual improvement of genome annotations (Figure <xref ref-type="fig" rid="F1">1</xref>). Consequently, a probe mapped to a gene last year might map to a different gene based on the most recent evidence in the genome database. Also, multiple distinct oligos can be used as probes for the same gene transcript, again failing the uniqueness criterion. Thus, the "permanent identification" of a probe by using an external gene identifier also presents a set of limitations. Figure <xref ref-type="fig" rid="F1">1</xref> summarizes the mapping relations from probes to genes, and from genes to annotations. Both the gene (intron and exon structure) and functional annotations to that gene may change as our knowledge of that gene structure and function improves. Only the sequence of the probe is stable over the time after the microarray is manufactured. For these reasons, major commercial vendors now release the exact sequence of each of their probes, and reporting probe-level data from microarray hybridization and analysis results in publications and public repositories is preferred [<xref ref-type="bibr" rid="B2">2</xref>]. The probe-level expression data requires less inference and enables researchers to reanalyze results with the latest mappings of probes to annotation resources such as RefSeq [<xref ref-type="bibr" rid="B3">3</xref>]. Moreover, the reporting of results at the level of the probe facilitates the aggregation of those results across microarray platforms [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B5">5</xref>]. Further, a universal naming convention based on the sequence of the probes will enable better probe-level studies of microarrays, especially as tiling arrays and exon arrays are becoming popular.</p>
    <fig position="float" id="F1">
      <label>Figure 1</label>
      <caption>
        <p><bold>The mapping from probes to genes and annotations</bold>. Note that both genes (for example the definition of a gene or its representative sequence) and annotations (for example, functional annotation by Gene Ontology) are dynamic; so are the mappings among them. Only the probe sequence is stable over time.</p>
      </caption>
      <graphic xlink:href="1745-6150-2-16-1"/>
    </fig>
    <sec>
      <title>Alternative approaches</title>
      <p>A general solution to identifier-problems in biological databases is the Life Science Identifier (LSID). LSIDs are a concatenation of an identifier with its database context using the syntax of urn: lsid:&lt;authority&gt;:&lt;lsid_namespace&gt;: &lt;identifier&gt;:&lt;version&gt; to ensure the global uniqueness of the identifiers [<xref ref-type="bibr" rid="B6">6</xref>]. For example, the Illumina 50-mer probe "ri|E030045A12| PX00206L14| AK053222| 1725-S" on the Mouse-6_v1 chip, is represented by the LSID as a 73-character string of "urn:lsid:illumina.com:Mouse-6_v1:ri|E030045A12| PX00206L14| AK053222| 1725-S". In many cases, the resultant long string is cumbersome to use and for oligonucleotides does not allow us to easily identify degenerate names (the subset of names that are pointing to a single, identical sequence). This identifier is very useful from the standpoint of identifying the origin of the oligo (the vendor) and the version of the microarray, and from a system to system interoperability standpoint will preserve that information independent of other shared header information. However, it does not help resolve identical sequences across vendors or between versions of the chips. Instead of dealing with the general problem of identifying all biological entities, we were seeking a specific solution to a simpler problem, that of finding a common identification and representation mechanism for oligos across manufacturers.</p>
      <p>An additional real world problem is that identifiers can be corrupted when transmitted across platforms [<xref ref-type="bibr" rid="B7">7</xref>]. For example, the tumor suppressor gene DEC1 (deleted in esophageal cancer 1) was being automatically converted to "1-DEC" by Microsoft Excel. Zeeberg et al. [<xref ref-type="bibr" rid="B7">7</xref>] offered an Excel-specific work-around â we were seeking a more general solution for corruption detection.</p>
      <p>In summary, we have developed a permanent identifier schema for oligos, one that is deterministically unique both locally and globally. The proposed identifier should not need a central agency to approve its uniqueness, be easy to generate, and be resistant to transmission accidents. We report such a new naming schema as nucleotide universal identifier (nuID). We demonstrate the utility of the nuID with the Illumina microarray systems. The same identifier scheme can be applied to Affymetrix, Agilent and other oligo-based microarrays. The nuID schema enables the data management system to report hybridizations, annotate microarray elements, and model the gene-to-probe bindings explicitly at the probe-level, and we believe it is ideally suited for labeling the identity of microarray probes.</p>
    </sec>
  </sec>
  <sec>
    <title>Results</title>
    <sec>
      <title>Nucleotide Universal Identifier (nuID)</title>
      <p>Inspired by the fact that the sequence of monomer units is the definition of identity, we devised a simple encoding algorithm to convert the sequence itself into a universal identifier. Inversely, the sequence can be decoded unambiguously from the identifier (Figure <xref ref-type="fig" rid="F2">2</xref>). That is, the nuID compression scheme is loss-less, ensuring a one-to-one relationship between an nuID and a probe sequence.</p>
      <fig position="float" id="F2">
        <label>Figure 2</label>
        <caption>
          <p><bold>The encoding and decoding process of nuID</bold>. The solid arrows represent the encoding process, and the dashed arrows represent the decoding process. The bold-italic number 11 is the numeric value of the checking code "L". The "AA" at the end of sequence is the padded nucleotides.</p>
        </caption>
        <graphic xlink:href="1745-6150-2-16-2"/>
      </fig>
      <p>In addition, we added an error detection code to the identifier. For applications where users want to keep the probe sequence confidential, encryptions can also be easily added to the encoding algorithm. We list a few examples of both Affymetrix and Illumina probes in Table <xref ref-type="table" rid="T1">1</xref>.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Examples of nuIDs</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <td align="left">Array Type</td>
              <td align="left">Manufacturer's Proprietary Identifier</td>
              <td align="left">Nucleotide Sequence</td>
              <td align="left">nuID</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Affymetrix Human</td>
              <td align="left">206064_s_at_probe1</td>
              <td align="left">TGTATATGTCTGGTTTTCTTACCCC</td>
              <td align="left">a7M7ev98VQ</td>
            </tr>
            <tr>
              <td align="left">Illumina Human</td>
              <td align="left">GI_23097300-A</td>
              <td align="left">GCTTCACTCGCTTCCCAGGGGCTCCGTTCACCAACTACATGAGCTACACG</td>
              <td align="left">cn0dn1Sqdb0UHE4nEY</td>
            </tr>
            <tr>
              <td align="left">Illumina Mouse</td>
              <td align="left">TRBV23_AE000664_T_cell_receptor_beta_variable_23_106-S</td>
              <td align="left">GACCCTTCGAAGTGAAAGAACACAGTCATGTTATATGGTATAGTCATGGT</td>
              <td align="left">9hX2C4CBEtO8zrMtOs</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Error detection and identification of nuID</title>
      <p>Although the encoding and decoding of the nuID is an error-free process (i.e., 100% faithful conversion between the nuID and the oligo sequence), the nuID, same as any identifiers, can be accidentally modified during the data transmission process. Besides typos, Zeeberg et al. [<xref ref-type="bibr" rid="B7">7</xref>] demonstrated that applications, such as Excel, can accidentally modify the identifiers. Although such accidents are rare in reality, they have serious consequences when they occur. Another real life situation is that the users might mistakenly take another kind of identifier (a text or string) and request an nuID conversion to an oligo sequence. In order to solve these problems, we have devised a build-in mechanism to make the nuID algorithm "intelligent".</p>
      <p>The error-checking concept is well known in other engineering fields and is nearly ubiquitous in communications; this concept has not, to our knowledge, previously been applied to genomic identifiers. We have chosen a standard checksum error-checking scheme for its simplicity and efficiency. In order to estimate the real error detection power of the current implementation (<italic>N </italic>= 21, see Equation 4 in Methods), we simulated two scenarios: mutating a number of characters in a legitimate nuID; and randomly generating a "spoof" nuID using 95 printable ASCII characters. Under each scenario, the simulation was repeated for 10<sup>5 </sup>times, and the estimated error detection rate is shown in Table <xref ref-type="table" rid="T2">2</xref>. The checksum algorithm can detect the majority of errors in both scenarios, and the detection power increases with the number of mutated characters. The error detection rates of the nuID (<italic>N </italic>= 21) are always over 97.5% in the mutation scenario. Considering that this type of mutation is rare in reality, the error detection rates of the nuID should be sufficient for most applications. For the second simulation scenario, the detection rate of a random sequence is over 99.9%. This means a legitimate nuID can almost always be differentiated from a common text or sequence. If an application has a more stringent error-checking requirement, one more digit of checking code can be added. We have named this identifier nuID2 (<italic>N </italic>= 1344) to distinguish it from our standard encoding scheme. A more sophisticated error detection algorithm can also be applied, and the detection power can be further improved. However, these techniques will add to the length of the identifier and increase the computation required to encrypt and decrypt the probe sequences.</p>
      <table-wrap position="float" id="T2">
        <label>Table 2</label>
        <caption>
          <p>The error detection power of the nuID checksum algorithm (<italic>N </italic>= 21)</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <td align="left">
                <italic>L</italic>
              </td>
              <td align="left">1-character</td>
              <td align="left">2-character</td>
              <td align="left">3-character</td>
              <td align="left">Random</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">25mer</td>
              <td align="left">0.97780</td>
              <td align="left">0.97918</td>
              <td align="left">0.98689</td>
              <td align="left">0.99924</td>
            </tr>
            <tr>
              <td align="left">50mer</td>
              <td align="left">0.97724</td>
              <td align="left">0.97838</td>
              <td align="left">0.98607</td>
              <td align="left">0.99997</td>
            </tr>
            <tr>
              <td align="left">100mer</td>
              <td align="left">0.97894</td>
              <td align="left">0.97825</td>
              <td align="left">0.98617</td>
              <td align="left">1*</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p><italic>L </italic>and <italic>N </italic>are defined in Equation (3) and (4) in Methods. The column "1-character" is the error detection rate of an nuID with only one character mutated. Similar definition for column "2-character" and "3-character". "Random" column is error detection rate of a random ASCII string. The optimum detection power is 1.0.</p>
          <p>* We realize the detection of nuIDs for 100mers is not guaranteed, but in none of our simulations did we ever encounter a randomly assembled string that was a valid nuID.</p>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>Encryption capability of nuID</title>
      <p>For some applications, users may not want the probe sequence public. In this case, an additional encryption step can be added to the nuID. Suppose <italic>f</italic>(<italic>x</italic>) and <italic>f</italic><sup>-1</sup>(<italic>x</italic>) is the encryption and decryption algorithm respectively. Then following Equation (1) and (2), we can easily encrypt and decrypt the nuID.</p>
      <p>
        <disp-formula id="bmcM1">
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1745-6150-2-16-i1" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:mi>x</mml:mi>
                <mml:msub>
                  <mml:mo>'</mml:mo>
                  <mml:mrow>
                    <mml:mi>n</mml:mi>
                    <mml:mi>u</mml:mi>
                    <mml:mi>I</mml:mi>
                    <mml:mi>D</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mi>f</mml:mi>
                <mml:mo stretchy="false">(</mml:mo>
                <mml:msub>
                  <mml:mi>x</mml:mi>
                  <mml:mrow>
                    <mml:mi>n</mml:mi>
                    <mml:mi>u</mml:mi>
                    <mml:mi>I</mml:mi>
                    <mml:mi>D</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo stretchy="false">)</mml:mo>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWG4baEcqGGNaWjdaWgaaWcbaGaemOBa4MaemyDauNaemysaKKaemiraqeabeaakiabg2da9iabdAgaMjabcIcaOiabdIha4naaBaaaleaacqWGUbGBcqWG1bqDcqWGjbqscqWGebaraeqaaOGaeiykaKcaaa@3EF5@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </disp-formula>
      </p>
      <p>
        <disp-formula id="bmcM2">
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1745-6150-2-16-i2" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:msub>
                  <mml:mi>x</mml:mi>
                  <mml:mrow>
                    <mml:mi>n</mml:mi>
                    <mml:mi>u</mml:mi>
                    <mml:mi>I</mml:mi>
                    <mml:mi>D</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:msup>
                  <mml:mi>f</mml:mi>
                  <mml:mrow>
                    <mml:mo>â</mml:mo>
                    <mml:mn>1</mml:mn>
                  </mml:mrow>
                </mml:msup>
                <mml:mo stretchy="false">(</mml:mo>
                <mml:mi>x</mml:mi>
                <mml:msub>
                  <mml:mo>'</mml:mo>
                  <mml:mrow>
                    <mml:mi>n</mml:mi>
                    <mml:mi>u</mml:mi>
                    <mml:mi>I</mml:mi>
                    <mml:mi>D</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo stretchy="false">)</mml:mo>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWG4baEdaWgaaWcbaGaemOBa4MaemyDauNaemysaKKaemiraqeabeaakiabg2da9iabdAgaMnaaCaaaleqabaGaeyOeI0IaeGymaedaaOGaeiikaGIaemiEaGNaei4jaCYaaSbaaSqaaiabd6gaUjabdwha1jabdMeajjabdseaebqabaGccqGGPaqkaaa@4109@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </disp-formula>
      </p>
      <p>where <italic>x</italic><sub><italic>nuID </italic></sub>is the base-64 number corresponding to the nuID, and <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1745-6150-2-16-i3" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:mi>x</mml:mi><mml:msub><mml:mo>'</mml:mo><mml:mrow><mml:mi>n</mml:mi><mml:mi>u</mml:mi><mml:mi>I</mml:mi><mml:mi>D</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWG4baEcqGGNaWjdaWgaaWcbaGaemOBa4MaemyDauNaemysaKKaemiraqeabeaaaaa@342B@</mml:annotation></mml:semantics></mml:math></inline-formula> is the encrypted base-64 number, which can be further transformed as a Base64 encoding identifier, i.e. the encrypted nuID. Different encryption algorithms can be adopted for different application requirements. We have not released code with encryption algorithm and are providing it as a convenience for applications where it is necessary to obfuscate the identity of the probe.</p>
    </sec>
    <sec>
      <title>Application of nuID to Illumina microarrays</title>
      <p>Constructing and managing identifiers on microarrays is a challenging problem. The design of the Illumina Mouse microarray version 1, for example, agglomerated thirteen sequence database sources by taking identifiers from each of those sources and appending additional tags. Illumina expression microarrays have employed two schemes for identifying probes: "Probe Id" and "Target Id". The "Probe Id" is a probe-level identifier. It is a number proprietarily assigned by Illumina Incorporated for the internal decoding process of beads and may potentially change between different versions and occasionally between different batches of microarrays; thus, "Probe Id" is not recommended for external reporting (personal communication with Illumina Technical Support). The "Target Id" is a gene-level identifier, either a Genbank GI number (Mouse version 1), or a manufacturer assigned internal identifier (version 2 or later). Note that one "Target Id" can correspond to several "Probe Ids" based on the best probe-to-gene mapping. Neither "Probe Id" nor "Target Id" can satisfy the properties of the ideal nomenclature system, as was discussed in the introduction section.</p>
      <p>By applying the nuID system to Illumina microarrays, we are able to achieve the following four aims.</p>
      <p>(1) There is a one-to-one mapping between the identifier and probe sequence. We are able to uniquely identify and thus quantify different probes of the same gene, which enables us to search for evidences of alternative splicing. Moreover, the nuID makes the external reporting of microarray results feasible at the probe level.</p>
      <p>(2) The nuID can be directly converted to the probe sequence, and be used to get the most updated RefSeq matches and annotations (see the paper companion website). The available sequence also enables future studies to model the potential cross-hybridization or binding affinity of the probes explicitly.</p>
      <p>(3) The nuID identifiers are permanent and consistent. The same probe in different versions of the microarrays always has the same identifier.</p>
      <p>(4) A shared annotation database of 50-mers, which is independent of array versioning and manufacturers, was created. The use of nuIDs will simplify and standardize the maintenance and usage of probe annotations.</p>
    </sec>
  </sec>
  <sec>
    <title>Discussion and conclusion</title>
    <p>Similar to the manufacturer independent chemical formula (for example, H<sub>2</sub>O) used to identify a chemical compound, we formulated a universal identifier that guarantees global uniqueness for oligonucleotides. Mathematically, the nuID encoding of the sequence is lossless and there is a one-to-one correspondence of the probe sequence to an nuID. A significant advantage of nuIDs is that a sequence can be converted to an nuID by any individual yet is guaranteed to be globally unique and interoperable; no central authority is necessary to assess the uniqueness and approve the legitimacy of the identifier.</p>
    <p>The nuID schema has three significant advantages over using the oligo sequence directly as an identifier: first it is more compact due to the base-64 encoding; second, it has a built-in error detection and self-identification; and third, it can be encrypted in cases where the sequences are preferred not to be disclosed.</p>
    <p>By incorporating the nuID naming scheme into the probe annotation workflow, it is easier to build a generic annotation pipeline that is independent of manufacturer and makes the maintenance of annotations independent of the manufacturer. More importantly, we are able to make the probe-to-gene mapping explicit. Given the proliferation of gigabit/second interconnects and the efficiency of modern computer architectures, the overhead cost of using nuIDs as the primary identifier for a sequence versus an 8 or 10 digit number is trivial. The encoding and decoding algorithm of the nuID has been implemented in R, Perl, and ColdFusion and can be downloaded from the companion website listed in this article.</p>
    <p>We have demonstrated the utility of this encoding schema with Illumina microarrays. As shown in Table <xref ref-type="table" rid="T1">1</xref>, it is actually more compact and efficient for the 25-mer based Affymetrix system. The use of nuIDs will eliminate the need to maintain the probe-to-sequence lookup table currently in the Bioconductor distribution. The nuID and consequently the availability of the probe-sequence itself, enables one to explicitly model individual probe behaviors, which can be used in probe-selection [<xref ref-type="bibr" rid="B8">8</xref>], alternative-transcription modeling [<xref ref-type="bibr" rid="B9">9</xref>], background binding affinity modeling [<xref ref-type="bibr" rid="B10">10</xref>], or probe-affinity modeling [<xref ref-type="bibr" rid="B11">11</xref>]. In addition to microarray probes, we have found that the nuID, without modification, can also be used to name SAGE [<xref ref-type="bibr" rid="B12">12</xref>] tags. For example, the 17-nucleotide SAGE tag of "GCTGATATTTAAAAGAG" can be identified by the nuID of "BnjPwCI", with the same advantages as discussed in the paper. We also expect that nuIDs will be used to cross-reference databases, including commercial catalogs and inventory control systems.</p>
    <p>The nuID scheme is simple to implement, but was not obvious to conceive. The general concept and implementation of the nuID is also applicable to oligopeptides and other objects that are a sequence of defined monomers. Another further application, that has not escaped our notice, is that the encoded string allows us to quickly and easily identify whether the oligos are identical or frameshifted from each other using standard bitstring comparison routines.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <p>Base64 encoding is a scheme that encodes binary data as a string composed of a set of 64 characters. It is widely used in Internet data transfer for its efficiency and ease of use. The transformation of DNA sequence into Base64 results in a three-fold, lossless compression of the nucleotide sequence.</p>
    <p>To encode a DNA oligonucleotide sequence, we use a variation on standard Base64 encoding, where "+" and "/" are replaced with "_" and "." to avoid misinterpretation by some analytical applications, particularly with the "+". Similar to the Base64 standard, the character set A-Z, a-z, 0â9, "_" and ".", represent the base-64 numbers of 0â63. The following steps are used to convert a nucleotide sequence to Base64. First, four nucleotides <bold>A</bold>, <bold>C</bold>, <bold>G </bold>and <bold>T </bold>(<bold>U</bold>) are mapped to the base-4 numbers 0, 1, 2 and 3; then three base-4 digits are combined as one base-64 digit; finally, the base-64 number is mapped to the Base64-encoded character set. This is the essence of the nuID coding scheme. Note that since "<bold>A</bold>" is mapped to 0, sequences that are not divisible by three will appear to have been padded with "<bold>A</bold>"s. In order to make the identifier non-degenerate, we therefore need to add a 'length' bit, to specify whether in the original sequence the last triplet had 1,2 or 3 real nucleotides. Also, the basic encoding steps do not incorporate self-identification or error checking, which are also desirable attributes for a coding scheme.</p>
    <p>By incorporating error checking directly into the nuID, errors occurring during the transmission of the nuID can be immediately detected. This also allows us to differentiate an nuID from an arbitrary character string, providing a means for the auto-detection of nuIDs. Furthermore, because nucleotide "<bold>A</bold>" is padded at the end of nucleotide sequence to make the sequence length divisible by three, we need to record the number of padded "<bold>A</bold>"s. To fulfill these three requirements, we added a checking code <italic>C </italic>at the beginning of the Base-64 encoded string. The base-64 numeric value of the checking code <italic>C </italic>is:</p>
    <p>
      <disp-formula id="bmcM3"><italic>c </italic>= 3 * <italic>n </italic>+ <italic>p</italic>, <italic>p </italic>â {0, 1, 2}</disp-formula>
    </p>
    <p>
      <disp-formula id="bmcM4">
        <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1745-6150-2-16-i4" overflow="scroll">
          <mml:semantics definitionURL="" encoding="">
            <mml:mrow>
              <mml:mtable>
                <mml:mtr>
                  <mml:mtd>
                    <mml:mrow>
                      <mml:mi>n</mml:mi>
                      <mml:mo>=</mml:mo>
                      <mml:mstyle displaystyle="true">
                        <mml:msubsup>
                          <mml:mo>â</mml:mo>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mo>=</mml:mo>
                            <mml:mn>1</mml:mn>
                          </mml:mrow>
                          <mml:mi>L</mml:mi>
                        </mml:msubsup>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mi>d</mml:mi>
                            <mml:mi>i</mml:mi>
                          </mml:msub>
                        </mml:mrow>
                      </mml:mstyle>
                    </mml:mrow>
                  </mml:mtd>
                  <mml:mtd>
                    <mml:mrow>
                      <mml:mo stretchy="false">(</mml:mo>
                      <mml:mi>mod</mml:mi>
                      <mml:mo>â¡</mml:mo>
                      <mml:mi>N</mml:mi>
                      <mml:mo stretchy="false">)</mml:mo>
                    </mml:mrow>
                  </mml:mtd>
                </mml:mtr>
              </mml:mtable>
            </mml:mrow>
            <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaafaqabeqacaaabaGaemOBa4Maeyypa0ZaaabmaeaacqWGKbazdaWgaaWcbaGaemyAaKgabeaaaeaacqWGPbqAcqGH9aqpcqaIXaqmaeaacqWGmbata0GaeyyeIuoaaOqaaiabcIcaOiGbc2gaTjabc+gaVjabcsgaKjabd6eaojabcMcaPaaaaaa@3F60@</mml:annotation>
          </mml:semantics>
        </mml:math>
      </disp-formula>
    </p>
    <p>where <italic>c </italic>is the base-64 numeric value of checking code <italic>C</italic>, <italic>p </italic>is the number of padded "<bold>A</bold>"s, <italic>n </italic>is the checksum residue of module <italic>N</italic>, and <italic>L </italic>is the length of base-64 number <italic>d</italic><sub>i</sub>. To maximize the power of error detection, we selected <italic>N </italic>= 21, and thus <italic>c </italic>â {0,...,62}. Figure <xref ref-type="fig" rid="F2">2</xref> shows an example of encoding and decoding process of oligonucleotide sequence "TGTATATGTCTGG" and its corresponding nuID "L7M7eg". In this example, the oligonucleotide sequence is first padded with two (<italic>p </italic>= 2) "<bold>A</bold>"s to make the sequence length divisible by three; then every three nucleotides are transformed to a base-64 number; based on Equation (4), the checksum of adding all 5 Base64 numbers is 192, taking the modulo 21 and getting <italic>n </italic>= 3; finally, based on Equation (3), multiplying <italic>n </italic>by 3, and adding the number of padding bases <italic>p </italic>(<italic>p </italic>= 2) to get the checking code value <italic>c </italic>(<italic>c </italic>= 11).</p>
    <p>The decoding process is just the reverse of encoding. The checking code is separated first and converted to a numeric value <italic>c</italic>. Based on Equation (3), we can calculate the checksum residue, <italic>n</italic>, and the number of padded "<bold>A</bold>"s, <italic>p</italic>. In parallel, the checksum residue, <italic>n</italic>, can also be calculated based on Equation (4) by using the numeric values of the encoded base-64 string. If the two estimated <italic>n </italic>based on Equation (3) and (4) are different, an error will be reported. It indicates the input string is not an nuID or that there is an error in the storage or transmission of the identifier. The algorithms above are implemented in R and Perl programming language and also as a webservice for broader accessibility (see the paper companion website).</p>
  </sec>
  <sec>
    <title>Availability</title>
    <p>The encoding and decoding algorithm is implemented in R, Perl, and ColdFusion. Supplemental data is at [<xref ref-type="bibr" rid="B13">13</xref>] and also as a web server and a webservice accessible at [<xref ref-type="bibr" rid="B14">14</xref>].</p>
  </sec>
  <sec>
    <title>Competing interests statement</title>
    <p>The authors declare that they have no competing interests. Findings from this paper have been reported to the Technology Transfer Program of Northwestern University.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>PD and SML got the ideas of the nuID through discussion. PD implemented the nuID encoding and decoding algorithms in R (in the BioConductor <italic>lumi </italic>package) and produced nuID indexed Illumina annotation packages. WAK implemented the nuID encoding and decoding algorithms in Perl and ColdFusion, and set up webservices for broader accessibility. SML drafted the manuscript. All the authors participated in the manuscript preparation and modification. All the authors read and approved the final manuscript.</p>
  </sec>
  <sec>
    <title>Reviewer's comments</title>
    <sec>
      <title>Review 1</title>
      <p>Dr. Itai Yanai, Department of Molecular and Cellular Biology, Harvard University</p>
      <p>In this manuscript Lin and colleagues address a problem in microarray probe nomenclature. As microarray design is becoming more and more commonplace, new probes are being designed at an increasing rate. Likewise, the annotation of the RNA species targeted by the probes is quickly being updated. In such a situation, the authors point out, the only stable entity</p>
      <p>is the sequence of the probe. They propose that the probe ID should be based upon the actual sequence, encoded in base-64 along with a checksum to detect corruption of the identifier.</p>
      <p>I agree with the author's assessment of the situation in probe nomenclature. Furthermore, I plead guilty myself in introducing some probe identifiers that perhaps may have been better named. However, many probe identifiers have the usefulness of immediately communicating the target they were from the encoded-sequence identifier. Nevertheless, the proposed system is potentially useful in the modern era of integrating microarray data based upon the probe sequence alone.</p>
      <p>Perhaps one compromise would be for each lab to design two probe identifiers per prone â one formal identifier in the proposed format to be used during publication, and a second identifier for internal use in the lab based upon current annotations. The second informal identifier can change with time while the first, of course, is fixed and true.</p>
      <sec>
        <title>Author's response</title>
        <p><italic>We completely agree with the reviewer's opinion. In addition to the deterministically unique and permanent identifier of nuID for computers, a more flexible and less stringent label can be used to facilitate human communications</italic>.</p>
      </sec>
    </sec>
    <sec>
      <title>Review 2 (nominated by Dr. Mark Gerstein)</title>
      <p>Dr. Rong Chen, Department of Medical Informatics, Stanford University</p>
      <p>This paper addresses a very important problem, standardizing the probe naming in microarrays. It describes an efficient encoding algorithm to transfer a probe sequence into a universal identifier with automatic error detection. It will greatly facilitate microarray data re-analysis and cross-platform comparison. I have no reservation in recommending it for publication.</p>
      <p>Here are some suggestions to make it more readable and helpful to the community. The equation 4 in the method section is not very understandable. Although the authors have provided a R function, a web server for batch encoding and decoding would be more convenient.</p>
      <sec>
        <title>Author's response</title>
        <p><italic>We followed the reviewer's suggestion and rewrite the description of Equation 4 by adding an example to explain it. We also added a web service for batch conversion of nuIDs</italic>.</p>
      </sec>
    </sec>
    <sec>
      <title>Review 3 (nominated by Dr. David Lipman)</title>
      <p>Dr. Gregory Schuler, NCBI</p>
      <p>This reviewer provided no comments for publication.</p>
    </sec>
  </sec>
</body>
<back>
  <ref-list>
    <ref id="B1">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kawasaki</surname>
            <given-names>ES</given-names>
          </name>
        </person-group>
        <article-title>The end of the microarray Tower of Babel: will universal standards lead the way?</article-title>
        <source>J Biomol Tech</source>
        <year>2006</year>
        <volume>17</volume>
        <fpage>200</fpage>
        <lpage>206</lpage>
        <pub-id pub-id-type="pmid">16870711</pub-id>
      </citation>
    </ref>
    <ref id="B2">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Milo</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lawrence</surname>
            <given-names>ND</given-names>
          </name>
          <name>
            <surname>Rattray</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Probe-level measurement error improves accuracy in detecting differential gene expression</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <fpage>2107</fpage>
        <lpage>2113</lpage>
        <pub-id pub-id-type="pmid">16820429</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btl361</pub-id>
      </citation>
    </ref>
    <ref id="B3">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maglott</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ostell</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pruitt</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Tatusova</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Entrez Gene: gene-centered information at NCBI</article-title>
        <source>Nucleic Acids Res</source>
        <year>2005</year>
        <volume>33</volume>
        <fpage>D54</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="pmid">15608257</pub-id>
        <pub-id pub-id-type="doi">10.1093/nar/gki031</pub-id>
      </citation>
    </ref>
    <ref id="B4">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mecham</surname>
            <given-names>BH</given-names>
          </name>
          <name>
            <surname>Klus</surname>
            <given-names>GT</given-names>
          </name>
          <name>
            <surname>Strovel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Augustus</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Byrne</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bozso</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Wetmore</surname>
            <given-names>DZ</given-names>
          </name>
          <name>
            <surname>Mariani</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Kohane</surname>
            <given-names>IS</given-names>
          </name>
          <name>
            <surname>Szallasi</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>Sequence-matched probes produce increased cross-platform consistency and more reproducible biological results in microarray-based gene expression measurements</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>e74</fpage>
        <pub-id pub-id-type="pmid">15161944</pub-id>
        <pub-id pub-id-type="doi">10.1093/nar/gnh071</pub-id>
      </citation>
    </ref>
    <ref id="B5">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>YH</given-names>
          </name>
          <name>
            <surname>Wei</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Su</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Duffin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Liao</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Too much data, but little inter-changeability: a lesson learned from mining public data on tissue specificity of gene expression</article-title>
        <source>Biol Direct</source>
        <year>2006</year>
        <volume>1</volume>
        <fpage>33</fpage>
        <pub-id pub-id-type="pmid">17064414</pub-id>
        <pub-id pub-id-type="doi">10.1186/1745-6150-1-33</pub-id>
      </citation>
    </ref>
    <ref id="B6">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clark</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Liefeld</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Globally distributed object identification for biological knowledgebases</article-title>
        <source>Brief Bioinform</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>59</fpage>
        <lpage>70</lpage>
        <pub-id pub-id-type="pmid">15153306</pub-id>
        <pub-id pub-id-type="doi">10.1093/bib/5.1.59</pub-id>
      </citation>
    </ref>
    <ref id="B7">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zeeberg</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Riss</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kane</surname>
            <given-names>DW</given-names>
          </name>
          <name>
            <surname>Bussey</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>Uchio</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Linehan</surname>
            <given-names>WM</given-names>
          </name>
          <name>
            <surname>Barrett</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Weinstein</surname>
            <given-names>JN</given-names>
          </name>
        </person-group>
        <article-title>Mistaken identifiers: gene name errors can be introduced inadvertently when using Excel in bioinformatics</article-title>
        <source>BMC Bioinformatics</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>80</fpage>
        <pub-id pub-id-type="pmid">15214961</pub-id>
        <pub-id pub-id-type="doi">10.1186/1471-2105-5-80</pub-id>
      </citation>
    </ref>
    <ref id="B8">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xing</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Kapur</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>WH</given-names>
          </name>
        </person-group>
        <article-title>Probe selection and expression index computation of affymetrix exon arrays</article-title>
        <source>PLoS ONE</source>
        <year>2006</year>
        <volume>1</volume>
        <fpage>e88</fpage>
        <pub-id pub-id-type="pmid">17183719</pub-id>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0000088</pub-id>
      </citation>
    </ref>
    <ref id="B9">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fan</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Khalid</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hallahan</surname>
            <given-names>AR</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>LP</given-names>
          </name>
        </person-group>
        <article-title>A statistical method for predicting splice variants between two groups of samples using GeneChip expression array data</article-title>
        <source>Theor Biol Med Model</source>
        <year>2006</year>
        <volume>3</volume>
        <fpage>19</fpage>
        <pub-id pub-id-type="pmid">16603076</pub-id>
        <pub-id pub-id-type="doi">10.1186/1742-4682-3-19</pub-id>
      </citation>
    </ref>
    <ref id="B10">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>ZJ</given-names>
          </name>
          <name>
            <surname>Irizarry</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Gentleman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Martinez-Murillo</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Spencer</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>A model-based background adjustment for oligonucleotide expression arrays</article-title>
        <source>Journal of the American Statistical Association</source>
        <year>2004</year>
        <volume>99</volume>
        <fpage>909</fpage>
        <lpage>917</lpage>
        <pub-id pub-id-type="doi">10.1198/016214504000000683</pub-id>
      </citation>
    </ref>
    <ref id="B11">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Miles</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Aldape</surname>
            <given-names>KD</given-names>
          </name>
        </person-group>
        <article-title>A model of molecular interactions on short oligonucleotide microarrays</article-title>
        <source>Nat Biotechnol</source>
        <year>2003</year>
        <volume>21</volume>
        <fpage>818</fpage>
        <lpage>821</lpage>
        <pub-id pub-id-type="pmid">12794640</pub-id>
        <pub-id pub-id-type="doi">10.1038/nbt836</pub-id>
      </citation>
    </ref>
    <ref id="B12">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <collab>SAGE</collab>
        </person-group>
        <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/projects/SAGE/"/>
      </citation>
    </ref>
    <ref id="B13">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <collab>Supplemental_data</collab>
        </person-group>
        <ext-link ext-link-type="uri" xlink:href="http://www.basic.northwestern.edu/publications/nuID/"/>
      </citation>
    </ref>
    <ref id="B14">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <collab>Webservice_of_nuID</collab>
        </person-group>
        <ext-link ext-link-type="uri" xlink:href="http://www.basic.northwestern.edu/nuID/"/>
      </citation>
    </ref>
  </ref-list>
</back>

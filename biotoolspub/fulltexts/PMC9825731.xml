<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">JAMIA Open</journal-id>
    <journal-id journal-id-type="iso-abbrev">JAMIA Open</journal-id>
    <journal-id journal-id-type="publisher-id">jamiaoa</journal-id>
    <journal-title-group>
      <journal-title>JAMIA Open</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2574-2531</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9825731</article-id>
    <article-id pub-id-type="doi">10.1093/jamiaopen/ooac109</article-id>
    <article-id pub-id-type="publisher-id">ooac109</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Application Notes</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01530</subject>
        <subject>AcademicSubjects/MED00010</subject>
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>StoryboardR: an R package and Shiny application designed to visualize real-world data from clinical patient registries</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9736-9119</contrib-id>
        <name>
          <surname>Miller</surname>
          <given-names>David M</given-names>
        </name>
        <aff><institution>Division of Hematology/Oncology, Department of Medicine, Massachusetts General Hospital</institution>, Boston, Massachusetts, <country country="US">USA</country></aff>
        <aff><institution>Department of Dermatology, Massachusetts General Hospital</institution>, Boston, Massachusetts, <country country="US">USA</country></aff>
        <xref rid="ooac109-cor1" ref-type="corresp"/>
        <!--dmiller4@mgh.harvard.edu-->
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-2783-5265</contrib-id>
        <name>
          <surname>Shalhout</surname>
          <given-names>Sophia Z</given-names>
        </name>
        <aff><institution>Division of Hematology/Oncology, Department of Medicine, Massachusetts General Hospital</institution>, Boston, Massachusetts, <country country="US">USA</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="ooac109-cor1">Corresponding Author: David M. Miller, MD, PhD, Massachusetts General Hospital, Boston, MA, USA; <email>dmiller4@mgh.harvard.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>4</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2023-01-06">
      <day>06</day>
      <month>1</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>06</day>
      <month>1</month>
      <year>2023</year>
    </pub-date>
    <volume>6</volume>
    <issue>1</issue>
    <elocation-id>ooac109</elocation-id>
    <history>
      <date date-type="received">
        <day>7</day>
        <month>2</month>
        <year>2022</year>
      </date>
      <date date-type="rev-recd">
        <day>3</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>7</day>
        <month>12</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023. Published by Oxford University Press on behalf of the American Medical Informatics Association.</copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution-NonCommercial License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">https://creativecommons.org/licenses/by-nc/4.0/</ext-link>), which permits non-commercial re-use, distribution, and reproduction in any medium, provided the original work is properly cited. For commercial re-use, please contact journals.permissions@oup.com</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="ooac109.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Objectives</title>
        <p>Tumor registries are a rich source of real-world data which can be used to test important hypotheses that inform clinical care. Exploratory data analysis at the level of individual subjects, when enhanced by interactive data visualizations, has the potential to provide novel insights and generate new hypothesis.</p>
      </sec>
      <sec id="s2">
        <title>Materials and Methods</title>
        <p>We created StoryboardR: an R package and Shiny application designed to visualize real-word data from tumor registries.</p>
      </sec>
      <sec id="s3">
        <title>Results</title>
        <p>StoryboardR facilitates the data visualization of real-word data from tumor registries captured in REDCap<sup>®</sup>. The output is an interactive timeline that allows for a visual interpretation of the relationship between potential prognostic and/or predictive biomarkers and outcomes.</p>
      </sec>
      <sec id="s4">
        <title>Conclusions</title>
        <p>StoryboardR is freely available under the Massachusetts Institute of Technology license and can be obtained from GitHub. StoryboardR is executed in R and deployed as a Shiny application for non-R users. It produces data visualizations of patient journeys from tumor registries.</p>
      </sec>
    </abstract>
    <kwd-group>
      <kwd>data visualization</kwd>
      <kwd>patient registries</kwd>
      <kwd>Shiny app</kwd>
      <kwd>REDCap</kwd>
      <kwd>clinical informatics</kwd>
    </kwd-group>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>American Skin Association, and ECOG-ACRIN</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="7"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>INTRODUCTION</title>
    <p>Tumor registries are a rich source of patient-level data that can lead to important clinical insights. When optimally executed, tumor registries capture highly structured real-world data (RWD) which facilitates time-to-analysis and time-to-insight. There is significant variability in the scope and depth of data captured within various tumor registries, depending on which elements of the patient journey are targeted for capture. For example, the Project Data Sphere led Merkel Cell Carcinoma Patient Registry<xref rid="ooac109-B1" ref-type="bibr"><sup>1</sup></xref><sup>,</sup><xref rid="ooac109-B2" ref-type="bibr"><sup>2</sup></xref> currently captures over 2000 data elements across 11 forms (<xref rid="ooac109-T1" ref-type="table">Table 1</xref>).</p>
    <table-wrap position="float" id="ooac109-T1">
      <label>Table 1.</label>
      <caption>
        <p>StoryboardR data collection instruments (DCIs)</p>
      </caption>
      <table frame="hsides" rules="groups">
        <colgroup span="1">
          <col valign="top" align="left" span="1"/>
          <col valign="top" align="left" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th rowspan="1" colspan="1">Form</th>
            <th align="center" rowspan="1" colspan="1">Description of data captured</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td rowspan="1" colspan="1">Subject status</td>
            <td rowspan="1" colspan="1">Vital status, condition trend, performance status</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Patient characteristics</td>
            <td rowspan="1" colspan="1">Details of initial diagnosis, demographic data, family history, cancer history, pregnancy history, immunosuppression history</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Presentation and initial staging</td>
            <td rowspan="1" colspan="1">Physical exam findings of initial tumor, radiographic staging at presentation, pathological evaluation at presentation, AJCC staging</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Lesion information</td>
            <td rowspan="1" colspan="1">Date lesion detected, clinical description of lesion, photographic evidence of lesion, response to treatment</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Pathology</td>
            <td rowspan="1" colspan="1">Tissue specimen details, immunohistochemical details, histological features, gross pathology details</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Surgery</td>
            <td rowspan="1" colspan="1">Surgical details (eg, surgical margins, surgical outcomes [eg, R0, R1, R2])</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Radiotherapy</td>
            <td rowspan="1" colspan="1">Radiotherapy details (eg, dose, fractions)</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Systemic antineoplastic therapy</td>
            <td rowspan="1" colspan="1">Agent, dose amount, doses, treatment outcomes (eg, best overall response)</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Adverse events</td>
            <td rowspan="1" colspan="1">CTCAE system organ class, therapeutic attribution, actions taken for AE, outcome of AE</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Lab results</td>
            <td rowspan="1" colspan="1">Complete blood count, comprehensive metabolic panel, immunological/inflammatory markers</td>
          </tr>
          <tr>
            <td rowspan="1" colspan="1">Genomics</td>
            <td rowspan="1" colspan="1">Lesion assessed, platform used, tumor mutation burden, mismatch repair status, gene name, nucleotide, and amino acid variation, copy number variants</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tblfn1">
          <p><italic toggle="yes">Note</italic>: The above DCIs are contained in the Merkel Cell Carcinoma Patient Registry and have been incorporated in the StoryboardR package.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
    <p>While tumor registries can provide large data sets to test important hypotheses, exploratory data analysis (EDA) at the level of individual subjects can lead to novel insights and hypothesis generation. Visualizing patient-level data is a critical part of EDA. Good data visualizations can facilitate the digestion of complex information. Ideal data visualizations leverage superior data, function and design and are thus simple to generate, make data easy to understand, are informative, and visually appealing.</p>
    <p>Here, we present StoryboardR, an R package with a Shiny application front-end, which facilitates the visualization of RWD from clinical registries captured in a Research Electronic Data Capture (REDCap<sup>®</sup>)-based project. REDCap<sup>®</sup> is a web-based electronic data capture (EDC) system utilized by investigators to capture structured data.<xref rid="ooac109-B3" ref-type="bibr"><sup>3</sup></xref> The functions of StoryboardR wrangle and transform data from REDCap<sup>®</sup>-based tumor registries to produce an interactive data visualization of the patient journey (<xref rid="ooac109-F1" ref-type="fig">Figure 1</xref>). StoryboardR is executed in R; however, the application is deployed via Shiny to enhance the user interface (UI) for non-R users.</p>
    <fig position="float" id="ooac109-F1">
      <label>Figure 1.</label>
      <caption>
        <p>Schema of StoryboardR. The StoryboardR package takes a csv file of clinical registry data stored in a REDCap<sup>®</sup> project as input. End users then select a subject to generate an interactive data visualization. Once selected, the package executes a series of server-side functions that wrangles and transforms that data and generates an interactive data visualization of the patient journey.</p>
      </caption>
      <graphic xlink:href="ooac109f1" position="float"/>
    </fig>
    <p>In this article, we provide: (1) the data dictionary to allow users to adopt the MCC Patient Registry platform; (2) the StoryboardR R package with installation instructions and examples, which can be viewed on the package GitHub page (<ext-link xlink:href="http://github.com/TheMillerLab/StoryboardR" ext-link-type="uri">http://github.com/TheMillerLab/StoryboardR</ext-link>); and (3) a sample data set for demonstration purposes, which is embedded in the R package. Importantly, these resources may be adopted by other clinical investigators to facilitate development of a variety of disease-specific registries.</p>
  </sec>
  <sec sec-type="methods">
    <title>METHODS</title>
    <sec>
      <title>Software dependencies</title>
      <p>StoryboardR is written in R (version 4.0.0), organized using roxygen2,<xref rid="ooac109-B4" ref-type="bibr"><sup>4</sup></xref> and utilizes the following packages dplyr,<xref rid="ooac109-B5" ref-type="bibr"><sup>5</sup></xref> tidyr,<xref rid="ooac109-B6" ref-type="bibr"><sup>6</sup></xref> readr,<xref rid="ooac109-B7" ref-type="bibr"><sup>7</sup></xref> stringr,<xref rid="ooac109-B8" ref-type="bibr"><sup>8</sup></xref> TimeWarp,<xref rid="ooac109-B9" ref-type="bibr"><sup>9</sup></xref> magrittr,<xref rid="ooac109-B10" ref-type="bibr"><sup>10</sup></xref> plotly,<xref rid="ooac109-B11" ref-type="bibr"><sup>11</sup></xref> splitstackshape,<xref rid="ooac109-B12" ref-type="bibr"><sup>12</sup></xref> Shinydashboard,<xref rid="ooac109-B13" ref-type="bibr"><sup>13</sup></xref> and Shiny.<xref rid="ooac109-B14" ref-type="bibr"><sup>14</sup></xref> For full details, instructions, and examples, refer to the video demonstration (<ext-link xlink:href="https://github.com/TheMillerLab/StoryboardR/blob/main/Video_Demo.md" ext-link-type="uri">https://github.com/TheMillerLab/StoryboardR/blob/main/Video_Demo.md</ext-link>), or README file (<ext-link xlink:href="https://github.com/TheMillerLab/StoryboardR/blob/main/README.md" ext-link-type="uri">https://github.com/TheMillerLab/StoryboardR/blob/main/README.md</ext-link>), both of which can be viewed on the package GitHub page.</p>
    </sec>
    <sec>
      <title>Clinical informatics dependencies</title>
      <p>StoryboardR facilitates data visualizations of patient data from the Merkel Cell Carcinoma Tumor Registry electronic data capture system, a REDCap<sup>®</sup>-based EDC. The data dictionary for this platform is available on the package GitHub page (<ext-link xlink:href="https://github.com/TheMillerLab/StoryboardR/blob/main/data-raw/StoryboardR_DataDictionary.csv" ext-link-type="uri">https://github.com/TheMillerLab/StoryboardR/blob/main/data-raw/StoryboardR_DataDictionary.csv</ext-link>). While this platform is currently being used by the Merkel Cell Carcinoma Tumor Registry, the fields are generalizable to most solid tumors. Potential customizations of the platform are described below.</p>
    </sec>
  </sec>
  <sec sec-type="results">
    <title>RESULTS</title>
    <sec>
      <title>StoryboardR inputs</title>
      <p>As shown in <xref rid="ooac109-F1" ref-type="fig">Figure 1</xref>, StoryboardR takes data from a REDCap<sup>®</sup> project that has incorporated the instruments from <xref rid="ooac109-T1" ref-type="table">Table 1</xref>. The StoryboardR Shiny application is launched via the function launch_StoryboardR(). This function takes 2 arguments: “Data” and “DateShift.” The “Data” argument is a data frame that contains the raw data from the desired REDCap<sup>®</sup> project. “DateShift,” which defaults to “FALSE,” will generate a random and uniform shift of all the dates in the data frame if “TRUE” is used (this is described in more detail below). launch_StoryboardR() is the only function required to execute and utilize StoryboardR. Once launch_StoryboardR() is called, end users interface with StoryboardR in a web browser.</p>
    </sec>
    <sec>
      <title>StoryboardR UI</title>
      <p>The Shiny application web browser incorporates a streamlined UI with one user input—the subject’s “Record ID”—to maximize usability (<xref rid="ooac109-F2" ref-type="fig">Figure 2A</xref>). The Shiny UI utilizes functions from the shinydashboard package to generate a fully customizable, centralized, easy-to-view dashboard of high-yield clinical information. Patient Characteristics and Initial Staging, Burden of Disease, Genomic Analysis, and Therapeutic Interventions are directly pulled from the tumor registry and displayed for the viewer.</p>
      <fig position="float" id="ooac109-F2">
        <label>Figure 2.</label>
        <caption>
          <p>(A) User interface of StoryboardR. Depicted is the UI of StoryboardR. End users select a subject’s record ID from the list auto-populated from the input data frame. Once selected, the server-side applications of StoryboardR will generate both a subject Dashboard and a Storyboard. To view the Storyboard, users click on “Storyboard” in the left column sidebar. (B) Subject Dashboard for simulated patient 1. Depicted is the subject Dashboard for simulated patient 1. This dashboard provides an overview of salient patient-level data from the EDC in tabular form.</p>
        </caption>
        <graphic xlink:href="ooac109f2" position="float"/>
      </fig>
    </sec>
    <sec>
      <title>StoryboardR server side verbs</title>
      <p>The Shiny application’s server side contains the executable code of StoryboardR. The package contains, in addition to launch_StoryboardR(), a set of functions that wrangle data from the tumor registry’s structured forms, transforms that information into data frames with key information from the patient journey, and graphs the output as an interactive storyboard (<xref rid="ooac109-F1" ref-type="fig">Figure 1</xref>). <xref rid="ooac109-T2" ref-type="table">Table 2</xref> summarizes core functions and their respective actions.</p>
      <table-wrap position="float" id="ooac109-T2">
        <label>Table 2.</label>
        <caption>
          <p>Functions utilized by StoryboardR</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col valign="top" align="left" span="1"/>
            <col valign="top" align="left" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Function</th>
              <th align="center" rowspan="1" colspan="1">Action</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">diagnosis()</td>
              <td rowspan="1" colspan="1">Wrangles data from a tumor registry regarding date of initial histological confirmation of the diagnosis, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">ss()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Subject Status DCI to produce a data frame of details about the Subject Status of subjects</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">clinical_staging()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Presentation and Initial Staging DCI to produce a data frame of details about the initial clinical staging, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">pathological_staging()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Presentation and Initial Staging DCI to produce a data frame of details about the initial pathological staging, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">lesion()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Lesion DCI to produce a data frame of details about the individual tumors, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">surgery()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Surgery DCI to produce a data frame of details about surgical therapy, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">xrt()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Radiotherapy DCI to produce a data frame of details about radiation therapy, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">systemic_therapy()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Systemic Antineoplastic Therapy DCI to produce a data frame of details about systemic therapy, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">genomics()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Genomics DCI to produce a data frame of details about genomic data from tumors or blood, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">adverse_events()</td>
              <td rowspan="1" colspan="1">Wrangles data from the Adverse Events DCI to produce a data frame of details about adverse events of systemic therapy, which can then be incorporated into a Patient Storyboard</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">combine_storyboard_dfs()</td>
              <td rowspan="1" colspan="1">Integrates the various storyboard data frames across the patient journey into one final data frame</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">storyboard_plot()</td>
              <td rowspan="1" colspan="1">Takes the aggregated data frames from combine_storyboard_dfs to produce a plotly data visualization of a patient journey</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">date.shift.df()</td>
              <td rowspan="1" colspan="1">Shifts the dates a unified random number of weeks either forward or back between 1 and 52</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">launch_StoryboardR()</td>
              <td rowspan="1" colspan="1">Launches the StoryboardR Shiny application</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tblfn2">
            <p>DCI: data collection instrument.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>Multi-level functional processing</title>
      <p>In an effort to effectively and efficiently capture clinical data, tumor registries routinely make use of distinct case report forms (CRFs) or data collection instruments (DCIs) for particular elements of a subject’s clinical course. For example, information related to genomic analysis may be captured in a DCI separate from data regarding therapeutic interventions. Furthermore, data regarding multiple therapeutic interventions—eg, first-line chemotherapy vs second-line and beyond—may be captured in repeating DCIs. To generate an integrated data visualization of the patient journey, StoryboardR uses a schema that we refer to as “multi-level functional processing” (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 1</xref>). At the base of this work flow, individual DCI-level functions (eg, ss(), surgery(), genomics()) select fields from their respective CRFs (eg, Subject Status, Surgery, Genomics) and re-map them to a 5 vector data frame, containing the variables “record_id,” “description,” “value,” “date,” and “hover.” The vector “record_id” holds the individual subject identifier. The vector “description” designates the function from which the data was processed (eg, genomics). In this data frame, the vector “value” possesses the transformed data contained within the tumor registry (eg, the name of the therapeutic agent captured [eg, “Avelumab”] or type of lesion detected [eg, “Metastasis”]) that will be displayed on the patient storyboard. The vector “hover” contains additional data from the registry that will be displayed on the storyboard as hover text (eg, the number of Gray of radiation used for treatment). An example of the output of one of the base-level functions, lesion(), when applied to the sample data set embedded in the StoryboardR package, is shown in <xref rid="sup1" ref-type="supplementary-material">Supplementary Table 1</xref>.</p>
      <p>Each base-level function returns the same structured data frame, with the 5 vectors “record_id,” “description,” “value,” “date,” and “hover.” This uniformity allows it to be aggregated with the mid-level function, combine_storyboard_dfs() (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table 2</xref>). Finally, the top-level function storyboard_plot() generates an interactive plotly storyboard (see section “StoryboardR outputs”). Importantly, the multi-level functional processing design permits a high degree of customization and therefore maximizes extensibility. Developers can either modify base-level functions or create new ones to incorporate additional data from their clinical registry project.</p>
    </sec>
    <sec>
      <title>StoryboardR outputs</title>
      <sec>
        <title>Patient overview</title>
        <p>The StoryboardR Shiny application returns 2 outputs: a subject Dashboard and Storyboard. As stated above, the subject Dashboard centralizes high-yield data from the tumor registry in tabular form (<xref rid="ooac109-F2" ref-type="fig">Figure 2A</xref>). This provides an important overview of patient-level information and is fully customizable by the end user.</p>
      </sec>
      <sec>
        <title>Patient storyboard</title>
        <p>To visualize the temporal relationship between patient-level data elements, StoryboardR generates an interactive timeline. This creates a method of EDA to allow for a visual interpretation of the relationship between certain potential prognostic and/or predictive biomarkers (eg, tumor genetics) and outcomes (eg, overall survival, response to therapy) (<xref rid="ooac109-F3" ref-type="fig">Figure 3</xref>). StoryboardR was designed to incorporate patient journeys of varying length and complexity and produce a uniform-appearing data visualization with a consistent structure. This is accomplished via the main graphing function, storyboard_plot(), which takes one argument, “data.” This argument is a data frame downstream of the function combine_storyboard_df(), which, as described above, compiles desired data elements from a tumor registry’s DCIs into a uniform 5-vector data frame. By selecting a specific Record ID in the StoryboardR UI of the web browser, the data frame downstream of combine_storyboard_df() is filtered by the dplyr function filter() for the Record ID of interest. This Record ID-filtered data frame is then used as the “data” argument for “storyboard_plot().”</p>
        <fig position="float" id="ooac109-F3">
          <label>Figure 3.</label>
          <caption>
            <p>Interactive subject storyboard. The centerpiece of StoryboardR is an interactive patient storyboard. Depicted is a timeline of patient-level data captured in a REDCap<sup>®</sup>-based cancer registry. Using plotly functionality, salient data elements are stored as hover text. Abbreviations: AWD: alive with disease, NED: no evidence of disease, PCT: primary cutaneous tumor.</p>
          </caption>
          <graphic xlink:href="ooac109f3" position="float"/>
        </fig>
        <p>The first operation of “storyboard_plot()” is to build the scaffold of the timeline for the interactive plot (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 2</xref>). Subsequently, storyboard_plot() creates a gg object “plot.storyboard” by calling the ggplot2 function ggplot(). Important design aspects of “plot.storyboard” include incorporating hover text to display information, which minimizes data visualization clutter and permits a high-degree of customizability. In addition, grouped data elements (eg, lab results or systemic anti-neoplastic therapies) are color-coded to aid in identification. Finally, storyboard_plot() creates a plotly object by calling the plotly function ggplotly() (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 3</xref>).</p>
      </sec>
    </sec>
    <sec>
      <title>StoryboardR customizations</title>
      <sec>
        <title>Date shifting</title>
        <p>Given that dates of events such as diagnoses and treatment are potential patient identifiers, StoryboardR contains a date shifting function, date.shift.df(). This function takes one argument “data,” a data frame downstream of the function combine_storyboard_df(). date.shift.df() incorporates the dateShift() function from the TimeWarp package to create a unified shift of a random number of weeks either forward or back between 1 and 52 of all of the dates in the date vector. date.shift.df() is found on the server-side of the Shiny application. Users can activate this function by changing the DateShift argument in the launch_StoryboardR() function to TRUE.</p>
      </sec>
      <sec>
        <title>Project-specific alterations</title>
        <p>The source code for StoryboardR is available on GitHub to provide users the ability to customize the UI and server-side functions to accommodate heterogeneity in research needs. For example, StoryboardR has been incorporated in the clinical informatics pipeline of the Project Data Sphere supported MCC Patient Registry.<xref rid="ooac109-B1" ref-type="bibr"><sup>1</sup></xref><sup>,</sup><xref rid="ooac109-B2" ref-type="bibr"><sup>2</sup></xref> Therefore, modifications have been made to the source code to incorporate specific parameters salient to the clinical practice of caring for patients with MCC. As an example, the MCC StoryboardR application has an additional base-level function, amerk(), which wrangles data from the Lab Results form<xref rid="ooac109-B2" ref-type="bibr"><sup>2</sup></xref> to produce a data frame of details about the AMERK Merkel Cell Polyoma Virus Antibody Test,<xref rid="ooac109-B15" ref-type="bibr"><sup>15</sup></xref> which can then be incorporated into a Patient Storyboard (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 4</xref>).</p>
      </sec>
      <sec>
        <title>StoryboardR as a stand-alone R package</title>
        <p>Furthermore, because StoryboardR can function as a free-standing R package (ie, outside of a Shiny application), end users are able to make additional customizations inside an integrated development environment (IDE), such as RStudio<sup>®</sup>.<xref rid="ooac109-B16" ref-type="bibr"><sup>16</sup></xref> For example, if an investigator desired a more pared-down Patient Storyboard without any Systemic Therapy data, they could use the following code inside an IDE:<disp-quote content-type="extract"><p>StoryboardR::storyboard_dataset %&gt;%</p><p> dplyr::filter(record_id == “Simulated Patient 1”) %&gt;%</p><p> StoryboardR::combine_storyboard_dfs() %&gt;%</p><p> dplyr::filter(description! = “Systemic Therapy”) %&gt;%</p><p> StoryboardR::storyboard_plot()</p></disp-quote></p>
        <p>The above code will generate a Storyboard for data visualization within an IDE (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figure 5</xref>). As demonstrated above, the core StoryboardR functions combine_storyboard_dfs(), and storyboard_plot() are compatible with tidyverse syntax and use of the magrittr pipe operator.<xref rid="ooac109-B9" ref-type="bibr"><sup>9</sup></xref></p>
      </sec>
    </sec>
    <sec>
      <title>Limitations and solutions</title>
      <p>StoryboardR is to be used in conjunction with a specific EDC (eg, the PDS MCC registry) and thus, it is dependent on that series of forms being installed into a REDCap<sup>®</sup> project. As a solution, we have made the data dictionary freely available so that others may adopt a similar platform. Importantly, our platform can be modified by other developers to customize both the EDC forms as well as the corresponding R code for the StoryboardR package.</p>
    </sec>
  </sec>
  <sec>
    <title>CONCLUSIONS</title>
    <p>Tumor registries are an important form of RWD and the data they contain can be used for both hypothesis generation as well as hypothesis testing. StoryboardR is an R package with a Shiny application front-end that produces an interactive data visualization of patient-level data. When built around a core data capture system such as a cancer registry, R-based packages like GENETEX,<xref rid="ooac109-B17" ref-type="bibr"><sup>17</sup></xref> eLAB,<xref rid="ooac109-B18" ref-type="bibr"><sup>18</sup></xref> BodyMapR,<xref rid="ooac109-B19" ref-type="bibr"><sup>19</sup></xref> and StoryboardR can combine to form a powerful data informatics ecosystem to both augment data abstraction as well as facilitate data analysis with the goal of accelerating time-to-action for patients with rare tumors.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>ooac109_Supplementary_Data</label>
      <media xlink:href="ooac109_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>FUNDING</title>
    <p>The Harvard Cancer Center Merkel Cell Carcinoma patient registry is supported by grants from Project Data Sphere, the American Skin Association, and ECOG-ACRIN.</p>
  </sec>
  <sec>
    <title>AUTHOR CONTRIBUTIONS</title>
    <p>DMM created and developed the StoryboardR package, authored the manuscript, and granted final approval of the manuscript. SZS contributed to the development of the StoryboardR package, including code writing, participated in the authorship of the manuscript, and granted final approval of the manuscript.</p>
  </sec>
  <sec>
    <title>SUPPLEMENTARY MATERIAL</title>
    <p><xref rid="sup1" ref-type="supplementary-material">Supplementary material</xref> is available at <italic toggle="yes">JAMIA Open</italic> online.</p>
  </sec>
  <sec>
    <title>CONFLICT OF INTEREST STATEMENT</title>
    <p>None declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>DATA AVAILABILITY</title>
    <p>The data/code for this application can be found in our GITHUB repository: (<ext-link xlink:href="https://github.com/TheMillerLab/StoryboardR" ext-link-type="uri">https://github.com/TheMillerLab/StoryboardR</ext-link>).</p>
  </sec>
  <ref-list id="ref1">
    <title>REFERENCES</title>
    <ref id="ooac109-B1">
      <label>1</label>
      <mixed-citation publication-type="other"><collab>Project Data Sphere</collab>. <ext-link xlink:href="https://www.projectdatasphere.org/research/programs/rare-tumor-registries/merkel-cell-carcinoma" ext-link-type="uri">https://www.projectdatasphere.org/research/programs/rare-tumor-registries/merkel-cell-carcinoma</ext-link>. Accessed December 23, 2022.</mixed-citation>
    </ref>
    <ref id="ooac109-B2">
      <label>2</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miller</surname><given-names>D. M</given-names></string-name>, <string-name><surname>Shalhout</surname><given-names>SZ</given-names></string-name>, <string-name><surname>Saqlain</surname><given-names>F</given-names></string-name></person-group>, <etal>et al</etal><article-title>The merkel cell carcinoma patient registry: from promise to prototype to patient</article-title>. <source>J Regist Manag</source><year>2022</year>; <volume>49</volume>: <fpage>4</fpage>–<lpage>9</lpage>.</mixed-citation>
    </ref>
    <ref id="ooac109-B3">
      <label>3</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Harris</surname><given-names>PA</given-names></string-name>, <string-name><surname>Taylor</surname><given-names>R</given-names></string-name>, <string-name><surname>Thielke</surname><given-names>R</given-names></string-name>, <string-name><surname>Payne</surname><given-names>J</given-names></string-name>, <string-name><surname>Gonzalez</surname><given-names>N</given-names></string-name>, <string-name><surname>Conde</surname><given-names>JG.</given-names></string-name></person-group><article-title>Research Electronic Data Capture (REDCap)—a metadata-driven methodology and workflow process for providing translational research informatics support</article-title>. <source>J Biomed Inform</source><year>2009</year>; <volume>42</volume> (<issue>2</issue>): <fpage>377</fpage>–<lpage>81</lpage>.<pub-id pub-id-type="pmid">18929686</pub-id></mixed-citation>
    </ref>
    <ref id="ooac109-B4">
      <label>4</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wickham</surname><given-names>H</given-names></string-name>, <string-name><surname>Danenberg</surname><given-names>P</given-names></string-name>, <string-name><surname>Csárdi</surname><given-names>G</given-names></string-name>, <string-name><surname>Eugster</surname><given-names>M</given-names></string-name></person-group>; RStudio. roxygen2: In-source documentation for R. <year>2013</year>. <ext-link xlink:href="https://cran.r-project.org/package=roxygen2" ext-link-type="uri">https://cran.r-project.org/package=roxygen2</ext-link> (version 6.0.1. <italic toggle="yes">R package</italic> Version 7.1.1). Accessed December 23, 2022.</mixed-citation>
    </ref>
    <ref id="ooac109-B5">
      <label>5</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wickham</surname><given-names>H</given-names></string-name>, <string-name><surname>Francois</surname><given-names>R</given-names></string-name>, <string-name><surname>Henry</surname><given-names>L</given-names></string-name>, <string-name><surname>Muller</surname><given-names>K.</given-names></string-name></person-group> Dplyr: a grammar of data manipulation. <italic toggle="yes">R Package</italic> Version 1.0.5; <year>2021</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B6">
      <label>6</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wickham</surname><given-names>H.</given-names></string-name></person-group> Tidyr: tidy messy data. <italic toggle="yes">R package</italic> Version 1.1.3; <year>2013</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B7">
      <label>7</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wickham</surname><given-names>H</given-names></string-name>, <string-name><surname>Hester</surname><given-names>J</given-names></string-name>, <string-name><surname>Francois</surname><given-names>R.</given-names></string-name></person-group> Readr: Read rectangular text data. <italic toggle="yes">R package</italic> Version 1.4.0; <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B8">
      <label>8</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wickham</surname><given-names>H.</given-names></string-name></person-group> Stringr: simple, consistent wrappers for common string. <italic toggle="yes">R package</italic> Version 1.4.0; <year>2019</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B9">
      <label>9</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Plate</surname><given-names>T</given-names></string-name>, <string-name><surname>Horner</surname><given-names>J</given-names></string-name>, <string-name><surname>Hansen</surname><given-names>L.</given-names></string-name></person-group><italic toggle="yes">TimeWarp: date calculations and manipulation</italic>. <year>2016</year>. <ext-link xlink:href="https://github.com/cran/TimeWarp" ext-link-type="uri">https://github.com/cran/TimeWarp</ext-link>. Accessed December 23, 2022.</mixed-citation>
    </ref>
    <ref id="ooac109-B10">
      <label>10</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Bache</surname><given-names>SM</given-names></string-name>, <string-name><surname>Wickham</surname><given-names>H</given-names></string-name>, <string-name><surname>Henry</surname><given-names>L.</given-names></string-name></person-group> Magrittr: a forward-pipe operator for r. <italic toggle="yes">R package</italic> Version 2.0.1; <year>2020</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B11">
      <label>11</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Sievert</surname><given-names>C</given-names></string-name>, <string-name><surname>Parmer</surname><given-names>C</given-names></string-name>, <string-name><surname>Hocking</surname><given-names>T</given-names></string-name></person-group>, <etal>et al</etal>; <collab>Plotly Technologies Inc</collab>. Plotly: create interactive web graphics via ‘plotly.js’. <italic toggle="yes">R Package</italic> Version 4.9.4.1; <year>2021</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B12">
      <label>12</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Mahto</surname><given-names>A.</given-names></string-name></person-group> Splitstackshape: stack and reshape datasets after splitting concatenated values. <italic toggle="yes">R package</italic> Version 1.4.8; <year>2019</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B13">
      <label>13</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Chang</surname><given-names>W</given-names></string-name>, <string-name><surname>Ribeiro</surname><given-names>BB</given-names></string-name></person-group>, RStudio, Almasaeed Studio, Adobe Systems Incorporated. Shinydashboard: create dashboards with ‘shiny’. <italic toggle="yes">R Package</italic> Version 1.0.5; <year>2021</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B14">
      <label>14</label>
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Chang</surname><given-names>W</given-names></string-name>, <string-name><surname>Cheng</surname><given-names>J</given-names></string-name>, <string-name><surname>Allaire</surname><given-names>JJ</given-names></string-name>, <string-name><surname>Xie</surname><given-names>Y</given-names></string-name>, <string-name><surname>McPherson</surname><given-names>J.</given-names></string-name></person-group> Shiny: web application framework for r. <italic toggle="yes">R package</italic> Version 1.6.0; <year>2018</year>.</mixed-citation>
    </ref>
    <ref id="ooac109-B15">
      <label>15</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Paulson</surname><given-names>KG</given-names></string-name>, <string-name><surname>Lewis</surname><given-names>CW</given-names></string-name>, <string-name><surname>Redman</surname><given-names>MW</given-names></string-name></person-group>, <etal>et al</etal><article-title>Viral oncoprotein antibodies as a marker for recurrence of Merkel cell carcinoma: a prospective validation study</article-title>. <source>Cancer</source><year>2017</year>; <volume>123</volume> (<issue>8</issue>): <fpage>1464</fpage>–<lpage>74</lpage>.<pub-id pub-id-type="pmid">27925665</pub-id></mixed-citation>
    </ref>
    <ref id="ooac109-B16">
      <label>16</label>
      <mixed-citation publication-type="other"><collab>RStudio Team</collab>. <italic toggle="yes">RStudio: Integrated Development Environment for R</italic>. RStudio, PBC; <year>2020</year>. <ext-link xlink:href="https://posit.co/downloads/" ext-link-type="uri">https://posit.co/downloads/</ext-link>. Accessed December 23, 2022.</mixed-citation>
    </ref>
    <ref id="ooac109-B17">
      <label>17</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miller</surname><given-names>D. M</given-names></string-name>, <string-name><surname>Shalhout</surname><given-names>SZ.</given-names></string-name></person-group><article-title>GENETEX—a GENomics report TEXt mining R package and shiny application designed to capture real-world clinico-genomic data</article-title>. <source>JAMIA Open</source><year>2021</year>; <volume>4</volume> (<issue>3</issue>): <fpage>ooab082</fpage>.<pub-id pub-id-type="pmid">34595403</pub-id></mixed-citation>
    </ref>
    <ref id="ooac109-B18">
      <label>18</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shalhout</surname><given-names>SZ</given-names></string-name>, <string-name><surname>Saqlain</surname><given-names>F</given-names></string-name>, <string-name><surname>Wright</surname><given-names>K</given-names></string-name>, <string-name><surname>Akinyemi</surname><given-names>O</given-names></string-name>, <string-name><surname>Miller</surname><given-names>DM.</given-names></string-name></person-group><article-title>Generalizable EHR-R-REDCap pipeline for a national multi-institutional rare tumor patient registry</article-title>. <source>JAMIA Open</source><year>2022</year>; <volume>5</volume> (<issue>1</issue>): <fpage>ooab118</fpage>.<pub-id pub-id-type="pmid">35156001</pub-id></mixed-citation>
    </ref>
    <ref id="ooac109-B19">
      <label>19</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Miller</surname><given-names>DM</given-names></string-name>, <string-name><surname>Shalhout</surname><given-names>SZ.</given-names></string-name></person-group><article-title>BodyMapR: an R package and Shiny application designed to generate anatomical visualizations of cancer lesions</article-title>. <source>JAMIA Open</source><year>2022</year>; <volume>5</volume> (<issue>1</issue>): ooac013.</mixed-citation>
    </ref>
  </ref-list>
</back>

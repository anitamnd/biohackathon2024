<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6480747</article-id>
    <article-id pub-id-type="publisher-id">1690</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-019-1690-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>TransLiG: a de novo transcriptome assembler that uses line graph iteration</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Liu</surname>
          <given-names>Juntao</given-names>
        </name>
        <address>
          <email>juntaosdu@126.com</email>
          <email>juntao@sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Yu</surname>
          <given-names>Ting</given-names>
        </name>
        <address>
          <email>yutingsdu@163.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mu</surname>
          <given-names>Zengchao</given-names>
        </name>
        <address>
          <email>muzengchao@sdu.edu.cn</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Li</surname>
          <given-names>Guojun</given-names>
        </name>
        <address>
          <email>guojunsdu@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1761 1174</institution-id><institution-id institution-id-type="GRID">grid.27255.37</institution-id><institution>School of Mathematics, </institution><institution>Shandong University, </institution></institution-wrap>Jinan, 250100 China </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>23</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>23</day>
      <month>4</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>20</volume>
    <elocation-id>81</elocation-id>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>11</month>
        <year>2018</year>
      </date>
      <date date-type="accepted">
        <day>9</day>
        <month>4</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">We present TransLiG, a new de novo transcriptome assembler, which is able to integrate the sequence depth and pair-end information into the assembling procedure by phasing paths and iteratively constructing line graphs starting from splicing graphs. TransLiG is shown to be significantly superior to all the salient de novo assemblers in both accuracy and computing resources when tested on artificial and real RNA-seq data. TransLiG is freely available at <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/transcriptomeassembly/files/">https://sourceforge.net/projects/transcriptomeassembly/files/</ext-link>.</p>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (10.1186/s13059-019-1690-7) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>RNA-seq data</kwd>
      <kwd>Transcriptome assembly</kwd>
      <kwd>Splicing graph</kwd>
      <kwd>Line graph</kwd>
      <kwd>Algorithm</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001809</institution-id>
            <institution>National Natural Science Foundation of China</institution>
          </institution-wrap>
        </funding-source>
        <award-id>61801265, 61432010, 61771009</award-id>
        <principal-award-recipient>
          <name>
            <surname>Li</surname>
            <given-names>Guojun</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100007129</institution-id>
            <institution>Natural Science Foundation of Shandong Province</institution>
          </institution-wrap>
        </funding-source>
        <award-id>ZR2018PA001</award-id>
        <principal-award-recipient>
          <name>
            <surname>Li</surname>
            <given-names>Guojun</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100002858</institution-id>
            <institution>China Postdoctoral Science Foundation</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2018M632659</award-id>
        <principal-award-recipient>
          <name>
            <surname>Li</surname>
            <given-names>Guojun</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par5">Alternative splicing is an important form of genetic regulation in eukaryotic genes, increasing the gene functional diversity as well as the risk of diseases [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>]. As reported [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR5">5</xref>], most of the eukaryotic genes including human genes undergo the process of alternative splicing, and so one gene could produce tens or even hundreds of splicing isoforms in different cellular conditions, causing different functions and potential diseases. Therefore, the identification of all the full-length transcripts under specific conditions plays a crucial role in many subsequent biological studies. However, we are still far from a complete landscape of human transcripts, and the situation is even much less clear for non-human eukaryotic species [<xref ref-type="bibr" rid="CR6">6</xref>].</p>
    <p id="Par6">RNA-seq is a powerful technology that enables the identification of expressed genes as well as abundance measurements at the whole transcriptome level with unprecedented accuracy [<xref ref-type="bibr" rid="CR7">7</xref>–<xref ref-type="bibr" rid="CR10">10</xref>]. The RNA-seq protocol takes as input the sampled expressed transcripts and produces more than 200 million short reads for a run, and each sequencing read is generally of length 50–150 base pairs, posing great challenges to reconstruct the full-length transcripts from the RNA-seq reads. Firstly, different transcripts could have highly different expression abundances, which makes the constructed sequence graph (splicing graph, <italic>de bruijn</italic> graph, etc.) have quite uneven coverage. Secondly, different transcripts from the same gene can share exonic sequences due to alternative splicing, making the splicing graph even more complicated. Thirdly, a large amount of RNA-seq reads contain sequencing errors, making it more difficult to assemble those lowly expressed transcripts from the RNA-seq data. All of the above have made the transcriptome assembly problem highly challenging.</p>
    <p id="Par7">There have been a growing number of methods developed for solving the transcript assembly problem in recent years, and most of them could be categorized into two approaches: the reference-based (or genome-guided) and the de novo [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>]. The reference-based approaches such as Scallop [<xref ref-type="bibr" rid="CR13">13</xref>], TransComb [<xref ref-type="bibr" rid="CR14">14</xref>], StringTie [<xref ref-type="bibr" rid="CR6">6</xref>], Cufflinks [<xref ref-type="bibr" rid="CR15">15</xref>], and Scripture [<xref ref-type="bibr" rid="CR16">16</xref>] usually first map the RNA-seq reads to a reference genome using alignment tools such as Hisat [<xref ref-type="bibr" rid="CR17">17</xref>], Star [<xref ref-type="bibr" rid="CR18">18</xref>], Tophat [<xref ref-type="bibr" rid="CR19">19</xref>], SpliceMap [<xref ref-type="bibr" rid="CR20">20</xref>], MapSplice [<xref ref-type="bibr" rid="CR21">21</xref>], or GSNAP [<xref ref-type="bibr" rid="CR22">22</xref>], and the reads from the same gene locus would fall into a cluster to form a splicing graph, and all the expressed transcripts could be assembled by traversing the graphs. The assembled transcripts by this strategy generally have higher accuracy compared to those by de novo strategy as it benefits from a reference genome, but it is seriously limited in practice because such a high-quality reference genome is currently unavailable for most species.</p>
    <p id="Par8">De novo assembly is a desired approach when the reference genome is unavailable, incomplete, highly fragmented, or substantially altered as in cancer tissues. There have been a number of de novo assemblers, such as BinPacker [<xref ref-type="bibr" rid="CR23">23</xref>], Bridger [<xref ref-type="bibr" rid="CR24">24</xref>], Trinity [<xref ref-type="bibr" rid="CR12">12</xref>], IDBA-Tran [<xref ref-type="bibr" rid="CR25">25</xref>], SOAPdenovo-trans [<xref ref-type="bibr" rid="CR26">26</xref>], ABySS [<xref ref-type="bibr" rid="CR27">27</xref>], and Oases [<xref ref-type="bibr" rid="CR28">28</xref>]. This strategy usually directly constructs splicing graphs from RNA-seq reads based on their sequence overlaps, and then assembles transcripts by traversing the graphs using different algorithms. Assemblers like IDBA-Tran, SOAPdenovo-trans, ABySS, and Oases were developed based on the key techniques in genome assembly, and so in general, they do not work well in transcriptome assembly. Trinity opens the door to design a method specifically for handling the de novo assembly of transcriptome. It first extends the sequencing reads into long contigs by a k-mer extension strategy, then connects those contigs into a <italic>de bruijn</italic> graph, and finally infers all the expressed transcripts by traversing the <italic>de bruijn</italic> graph. As noticed in the Trinity paper, there are some limitations hindering its applications. The sequence depth information which would be useful in the assembling procedure was not adequately used, and a brute force strategy was applied to search for transcript-representing paths in the <italic>de bruijn</italic> graph, causing it to suffer seriously from false positive rates. Bridger successfully transplants the minimum path-cover model from the reference-based assembler Cufflinks to the de novo assembly and effectively avoids the exhaustive enumeration, making the false positives highly decreased. However, it does not make full use of the sequence depth information which should be useful in the development of assembling procedure as mentioned in the Trinity paper. Subsequently, a new assembler BinPacker was developed to fully use the sequence depth information by a bin-packing model without limiting the minimum number of paths. BinPacker performs better than others of same kind, but it has not integrated the paired-end information into the assembling procedure, leaving a big room to be improved.</p>
    <p id="Par9">In this paper, we introduce a new de novo assembler TransLiG developed by phasing paths and iteratively constructing weighted line graphs starting from splicing graphs. The idea of phasing paths in TransLiG was motivated from Scallop [<xref ref-type="bibr" rid="CR13">13</xref>], a reference-based transcriptome assembler, which also adopted a similar strategy of phasing paths in a graph. Although Scallop and TransLiG shared the same idea of graph decomposition, they were differently using the sequence depth and paired-end information. Different from Scallop which decomposed graphs by iteratively constructing local bipartite graphs, TransLiG pursued the globally optimum solution by iteratively building weighted line graphs.</p>
    <p id="Par10">TransLiG was developed to integrate the sequence depth and pair-end information into the assembling procedure by phasing paths and iteratively constructing line graphs, making it substantially superior to all the salient tools of same kind, e.g., Trinity, Bridger, and BinPacker. When tested on both the artificial and real data, it reaches the precision 6% higher than BinPacker and Bridger, and nearly 15% higher than Trinity on artificial data, and 7%, 14%, and 21% higher than BinPacker, Bridger, and Trinity respectively, on the tested mouse data. Not only does TransLiG achieve the highest precision, but also it reaches the highest sensitivity on all the tested datasets. In addition, TransLiG stably keeps the best performance with different assessment parameters.</p>
  </sec>
  <sec id="Sec2">
    <title>Results and discussion</title>
    <p id="Par11">We compared TransLiG with five salient de novo assemblers: BinPacker (version 1.0), Bridger (version r2014-12-01), Trinity (version 13.02.25), IDBA-Tran (version 1.1.1), and SOAPdenovo-trans (version 1.0.3) on both artificial and real datasets. The parameter settings for each of them are described in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Notes.</p>
  </sec>
  <sec id="Sec3">
    <title>Assessment metrics and performance evaluation</title>
    <p id="Par12">Commonly used criteria were applied to the evaluation of all the salient de novo assembling algorithms in this experiment. Assembled transcripts by each assembler were aligned to the expressed transcripts in ground truth using BLAT [<xref ref-type="bibr" rid="CR29">29</xref>] with 95% sequence identity as cutoff. An expressed transcript is called full-length reconstructed if it was covered by an assembled transcript with at least 95% sequence identity and no more than 5% insertions or deletions (indels), and this assembled transcript is called a true positive. To make more convincing comparisons, we also considered different sequence identity levels (90%, 85%, and 80%) to define full-length reconstructed reference transcripts and true positives. Accuracy is measured by sensitivity and precision, where sensitivity is defined as the number of full-length reconstructed transcripts in ground truth by an assembler, and precision is defined as the fraction of true positives out of all assembled transcripts.</p>
  </sec>
  <sec id="Sec4">
    <title>Evaluation on simulation data</title>
    <p id="Par13">We first tested TransLiG against the other assemblers on the simulation data which was generated by the tool Flux Simulator [<xref ref-type="bibr" rid="CR30">30</xref>] using all the known human transcripts (approximately 83,000 sequences) from the UCSC hg19 gene annotation. The generated dataset contains approximately 55 million strand-specific RNA-seq paired-end reads of 76-bp length.</p>
    <p id="Par14">Testing all the six assemblers on the simulation data, we found that TransLiG reconstructed 7935 full-length expressed transcripts, while BinPacker, Bridger, Trinity, IDBA-Tran, and SOAPdenovo-trans respectively recovered 7602, 7572, 6863, 5405, and 7080 full-length expressed transcripts. Therefore, TransLiG reaches the highest sensitivity followed by BinPacker and Bridger. The reason why BinPacker and Bridger are inferior to TransLiG while superior to the others is simply because they employed appropriately mathematical models in their assembly procedures, while they did not sufficiently use the paired-end and sequence depth information. Trinity was brutally enumerating all the paths over <italic>de Bruijn</italic> graphs, and thus generating a large amount of transcript candidates. However, the brute force strategy involves too many false positives, leading to a poor sensitivity. IDBA-Tran behaves the worst among all the compared tools. We can see from Fig. <xref rid="Fig1" ref-type="fig">1</xref>a that TransLiG recovered 4.38% more full-length expressed transcripts than the next best assembler BinPacker, and 15.62% more than Trinity. In addition, TransLiG consistently behaves the best in sensitivity under different sequence identity levels (95%, 90%, 85%, and 80%) as illustrated in Fig. <xref rid="Fig1" ref-type="fig">1</xref>a and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1. Not only does TransLiG perform better in sensitivity than all the compared tools, but also it does in precision. It reaches the highest precision of 44.21% versus BinPacker of 38.01%, Bridger of 37.94%, Trinity of 29.43%, IDBA-Tran of 27.33%, and SOAPdenovo-trans of 27.37%, and keeps its superiority under different sequence identity levels (see Fig. <xref rid="Fig1" ref-type="fig">1</xref>b and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1). SOAPdenovo-trans recovered more full-length expressed transcripts than Trinity, but its precision is the lowest among all the compared tools.<fig id="Fig1"><label>Fig. 1</label><caption><p>Comparison results on simulated data. <bold>a</bold> Comparison of sensitivity distributions of the six tools against different sequence identity levels. <bold>b</bold> Comparison of precision distributions of the six tools against different sequence identity levels. <bold>c</bold> Comparison of recall distributions of the six tools against transcript expression levels</p></caption><graphic xlink:href="13059_2019_1690_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par15">We also compared their abilities of reconstructing expressed full-length transcripts at different abundance levels, which was evaluated by <italic>recall</italic> defined as the fraction of full-length reconstructed expressed transcripts out of all expressed transcripts under different transcript abundance levels. We can see from Fig. <xref rid="Fig1" ref-type="fig">1</xref>c that IDBA-Tran shows the lowest recall under all the abundance levels, and the recalls of Trinity under low abundances (1–10 and 10–20) are similar with BinPacker and Bridger, a little higher than SOAPdenovo-trans. However, SOAPdenovo-trans demonstrates much higher recalls than Trinity under high abundances (20–100). TransLiG is consistently superior to all the compared tools in recall across all the expression levels.</p>
    <p id="Par16">We further compared the performance of the assemblers in identifying expressed genes. A gene is considered to be correctly identified if at least one of its transcripts was correctly assembled. We found that TransLiG correctly identified 6189 genes, while BinPacker, Bridger, Trinity, IDBA-Tran, and SOAPdenovo-trans identified 5984, 5979, 5247, 4865, and 5951, respectively. Therefore, TransLiG outperforms all the compared assemblers in terms of the number of expressed genes identified.</p>
  </sec>
  <sec id="Sec5">
    <title>Evaluation on real data</title>
    <p id="Par17">In this section, we tested the six assemblers on the following three real biological datasets, the human K562 cells, the human H1 cells, and the mouse dendritic cells datasets, containing 88 million, 41 million, and 53 million paired-end reads, respectively. They were collected from the NCBI Sequence Read Archive (SRA) database with accession codes SRX110318, SRX082572, and SRX062280, respectively. Different from simulated datasets, which provide us the explicit ground truth, it is impossible for us to know all the genuine transcripts encoded in the real datasets. Despite this, we collected all the currently known transcripts in the UCSC genome databases as references. The versions of human and mouse reference transcripts used in this study are GRCh37/hg19 and GRCm38/mm10, respectively.</p>
    <p id="Par18">Running the six assembling tools on the human K562 cells, the human H1 cells and the mouse dendritic cells datasets, we found that TransLiG recovered 9826, 10,017, and 12,247 full-length reference transcripts respectively on the three real datasets, versus 9454, 9557, and 11,761 by the second best assembler BinPacker, and 8315, 8516, and 9937 by Trinity, i.e., TransLiG recovered 3.93%, 4.81%, and 4.13% more full-length reference transcripts than BinPacker, and 18.17%, 17.63%, and 23.25% more than Trinity. In addition, TransLiG consistently keeps the highest sensitivity under different sequence identity levels (see Fig. <xref rid="Fig2" ref-type="fig">2</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2-S4), clearly indicating its higher reliability and stability.<fig id="Fig2"><label>Fig. 2</label><caption><p>Comparison of sensitivity distributions of the six tools against the different sequence identity levels on the three real datasets: <bold>a</bold> human K562, <bold>b</bold> human H1, and <bold>c</bold> mouse dendritic</p></caption><graphic xlink:href="13059_2019_1690_Fig2_HTML" id="MO2"/></fig></p>
    <p id="Par19">As for precision, TransLiG reaches 12.90%, 12.72%, and 33.26% on the human K562 cells, the human H1 cells and the mouse dendritic cells datasets, respectively, versus 10.18%, 8.57%, and 26.03% by the second best BinPacker, and 7.24%, 4.92%, and 12.37% by Trinity. Similar to the results on the simulation datasets, SOAPdenovo-trans shows the lowest precision among all the compared tools on the real datasets. By comparisons, we see that TransLiG has been significantly improved in precision compared to the others, especially on the mouse data, where the TransLiG achieves 7% more than the next best BinPacker, and 21% more than Trinity. In addition, the superiority of TransLiG was also clearly demonstrated by changing the sequence identity levels (see Fig. <xref rid="Fig3" ref-type="fig">3</xref> and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S2-S4).<fig id="Fig3"><label>Fig. 3</label><caption><p>Comparison of precision distributions of the six tools against different sequence identity levels on the three real datasets: <bold>a</bold> human K562, <bold>b</bold> human H1, and <bold>c</bold> mouse dendritic</p></caption><graphic xlink:href="13059_2019_1690_Fig3_HTML" id="MO3"/></fig></p>
    <p id="Par20">Similarly, we also compared the assemblers in terms of the numbers of the expressed genes identified on real datasets. We found that TransLiG correctly identified 5468, 5669, and 7425 genes on the human K562 cells, the human H1 cells, and the mouse dendritic cells datasets, respectively, versus 5359, 5485, and 7250 by BinPacker; 5330, 5509, and 7284 by Bridger; 4726, 5003, and 6262 by Trinity; 2823, 3387, and 4533 by IDBA-Tran; and 4179, 4403, and 7145 by SOAPdenovo-trans.</p>
    <p id="Par21">The evaluations on both artificial and real datasets have fully demonstrated that TransLiG consistently shows the best performance among all the salient tools of same kind no matter in terms of sensitivity, precision, or the number of identified genes.</p>
  </sec>
  <sec id="Sec6">
    <title>Evaluation of computing resource usage</title>
    <p id="Par22">De novo assemblers generally consume large computing resources (e.g., CPU time and memory usage). We by Fig. <xref rid="Fig4" ref-type="fig">4</xref> and Fig. <xref rid="Fig5" ref-type="fig">5</xref> illustrate the CPU time and memory (RAM) usage by individual assemblers on the real datasets. We see from Fig. <xref rid="Fig4" ref-type="fig">4</xref> that Trinity and IDBA-Tran consume much more CPU times than all the others on all the three datasets. SOAPdenovo-trans is the fastest one among all the compared tools, while TransLiG, BinPacker, and Bridger cost CPU times similar to SOAPdenovo-trans. As for the RAM usage, Fig. <xref rid="Fig5" ref-type="fig">5</xref> shows that Trinity consumes much higher memory than all the others on all the three datasets, where TransLiG, BinPacker, and Bridger cost similar memory resources, but higher than IDBA-Tran and SOAPdenovo-trans. IDBA-Tran is the most parsimonious one followed by SOAPdenovo-trans in terms of RAM usage. Overall, TransLiG is not the most parsimonious, but it is quite acceptable for practical use.<fig id="Fig4"><label>Fig. 4</label><caption><p>Comparison of CPU times for the six tools on the three datasets: <bold>a</bold> human K562, <bold>b</bold> human H1, and <bold>c</bold> mouse dendritic</p></caption><graphic xlink:href="13059_2019_1690_Fig4_HTML" id="MO4"/></fig><fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison of RAM usages for the six tools on the three datasets: <bold>a</bold> human K562, <bold>b</bold> human H1, and <bold>c</bold> mouse dendritic</p></caption><graphic xlink:href="13059_2019_1690_Fig5_HTML" id="MO5"/></fig></p>
  </sec>
  <sec id="Sec7">
    <title>Conclusions</title>
    <p id="Par23">In this study, we presented a novel de novo assembler TransLiG for transcriptome assembly using short RNA-seq reads. Compared to the salient assemblers of same kind on both simulated and real datasets, TransLiG consistently performs the best in accuracy (including sensitivity and precision) and the number of correctly identified genes. The superiority may attribute to the following facts. Firstly, TransLiG constructs more accurate splicing graphs by reconnecting fragmented graphs via iterating different lengths of smaller k-mers. Secondly, TransLiG substantially integrates the sequence depth and paired-end information into the assembling procedure via enforcing each pair-supporting path being included in at least one assembled transcript. Thirdly, TransLiG accurately links the in-coming and out-going edges at each node via iteratively solving a series of quadratic programmings, which are optimizing the utilizations of the paired-end and sequencing depth information. Finally, TransLiG benefits from the iterations of weighted line graphs constructed by repeatedly phasing transcript-segment-representing paths. Notice that the final line graph <italic>L</italic><sup><italic>n</italic></sup>(<italic>G</italic>) is empty, and the isolated nodes generated during the line graph iteration could be expanded into assembled transcripts.</p>
    <p id="Par24">To our best knowledge, TransLiG is the first de novo assembler which effectively integrates the paired-end and sequence depth information into the assembling procedure via phasing and contracting paths with the help of line graph iterations. The software has been developed to be user-friendly and expected to play a crucial role in new discoveries of transcriptome studies using RNA-seq data, especially in the research areas of complicated human diseases such as cancers, discoveries of new species, and so on.</p>
  </sec>
  <sec id="Sec8">
    <title>Methods</title>
    <p id="Par25">We designed the new de novo assembler TransLiG to retrieve all the transcript-representing paths in splicing graphs by phasing paths in the splicing graphs and iteratively constructing line graphs starting from the splicing graphs. For a graph <italic>G</italic> = (<italic>V</italic>, <italic>E</italic>), the line graph <italic>L</italic>(<italic>G</italic>) of <italic>G</italic> is the graph with nodes representing edges of <italic>G</italic>, and edges representing incident relationship between edges in <italic>G</italic>, i.e., two nodes <italic>u, v</italic> of <italic>L(G)</italic>, that are edges of <italic>G</italic>, are connected by an edge in <italic>L(G)</italic> if and only if they share a node in <italic>G</italic>. Obviously, the line graph of a directed acyclic graph (DAG) remains a DAG. Therefore, the line graph of a splicing graph must be a DAG. By <italic>L</italic><sup><italic>n</italic></sup>(<italic>G</italic>), we define the line graph of <italic>G</italic> of order <italic>n</italic>, i.e., <italic>L</italic><sup><italic>n</italic></sup>(<italic>G</italic>) = <italic>L</italic>(<italic>L</italic><sup><italic>n</italic>-1</sup>(<italic>G</italic>)), where <italic>L</italic><sup>0</sup>(<italic>G</italic>) = <italic>G</italic>. It then turns out that <italic>L</italic><sup><italic>n</italic></sup>(<italic>G</italic>) is an empty graph, i.e., a graph with all nodes being isolated for a DAG graph <italic>G</italic> of <italic>n</italic> nodes. Obviously, each isolated node generated during the line graph iteration can be expanded into a transcript-representing path <italic>P</italic> in <italic>G</italic>.</p>
    <p id="Par26">The basic idea behind TransLiG is to globally optimize the accuracy of retrieving all the full-length transcripts encoded in a splicing graph by phasing paths and iteratively constructing the next line graph <italic>L</italic><sup><italic>i +</italic> 1</sup>(<italic>G</italic>) weighted by solving series of quadratic programming problems defined on the current (line) graph <italic>L</italic><sup><italic>i</italic></sup>(<italic>G</italic>). After removing all the zero-weighted edges from the constructed line graph, the remaining graph ideally consists of the line graph edges of individual transcript-representing paths in the current graph <italic>L</italic><sup><italic>i</italic></sup>(<italic>G</italic>). Continuing the iteration until <italic>L</italic><sup><italic>n</italic></sup>(<italic>G</italic>) becomes empty. Hopefully, each isolated node generated during the line graph iteration will be expanded into a transcript-representing path, which exactly corresponds to an expressed transcript. The flowchart of the TransLiG is roughly outlined in Fig. <xref rid="Fig6" ref-type="fig">6</xref> and followed by the pseudo-codes of TransLiG.<fig id="Fig6"><label>Fig. 6</label><caption><p>Flowchart of TransLiG. <bold>a</bold> TransLiG takes as input the RNA-seq reads (single or pair) to construct splicing graphs by first using the graph-building framework of BinPacker to build initial splicing graphs, and then modifying initial splicing graphs by merging the isolated pieces in a specific way. <bold>b</bold> TransLiG phases pair-supporting paths from the splicing graphs to ensure that each pair-supporting path is covered by an assembled transcript. <bold>c</bold> TransLiG assembles transcripts by iteratively constructing weighted line graphs until empty. <bold>d</bold> The transcript-representing paths are obtained by expanding all the isolated nodes generated during the line graph iteration</p></caption><graphic xlink:href="13059_2019_1690_Fig6_HTML" id="MO6"/></fig></p>
  </sec>
  <sec id="Sec9">
    <title>De novo assembling algorithm TransLiG</title>
    <sec id="Sec10">
      <title>Step 1: Construction of splicing graphs</title>
      <p id="Par27">We first construct initial splicing graphs based on the graph-building framework of BinPacker [<xref ref-type="bibr" rid="CR23">23</xref>], and then, we designed a novel technique to effectively modify the initial splicing graphs by merging the isolated pieces (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Methods 2.1 for details).</p>
    </sec>
    <sec id="Sec11">
      <title>Step 2: Phasing pair-supporting paths</title>
      <p id="Par28">Ideally, each expressed transcript <italic>T</italic> corresponds to a unique path <italic>P</italic><sub><italic>T</italic></sub> in the splicing graph, and so a segment in the transcript <italic>T</italic> corresponds to a sub-path of <italic>P</italic><sub><italic>T</italic></sub>, which is called a transcript-segment-representing path later on. Two paired-end reads <italic>r</italic><sub>1</sub> and <italic>r</italic><sub>2</sub> are supposed to come from a single transcript, corresponding to a segment in the transcript, and so a transcript-segment-representing path in the splicing graph. The transcript-segment-representing path in this paper is called a pair-supporting path. TransLiG retrieves a set, denoted by <italic>P</italic><sub><italic>G</italic></sub>, of all the pair-supporting paths for each splicing graph <italic>G</italic>.</p>
      <p id="Par29">In detail, for each single-end read <italic>r</italic>, if it spans a sub-path <italic>P</italic> = <italic>n</italic><sub><italic>i</italic>1</sub> → <italic>n</italic><sub><italic>i</italic>2</sub> → … → <italic>n</italic><sub><italic>ip</italic></sub> of graph <italic>G</italic> and <italic>p</italic> ≥ 3, then we add a pair-supporting path <italic>P</italic> = <italic>n</italic><sub><italic>i</italic>1</sub> → <italic>n</italic><sub><italic>i</italic>2</sub> → … → <italic>n</italic><sub><italic>ip</italic></sub> to <italic>P</italic><sub><italic>G</italic></sub>. For the case of paired-end reads <italic>r</italic><sub>1</sub> and <italic>r</italic><sub>2</sub>, if <italic>r</italic><sub>1</sub> spans a sub-path <italic>P</italic><sub>1</sub> = <italic>n</italic><sub><italic>i</italic>1</sub> → <italic>n</italic><sub><italic>i</italic>2</sub> → … → <italic>n</italic><sub><italic>ip</italic></sub>, and <italic>r</italic><sub>2</sub> spans a sub-path <italic>P</italic><sub>2</sub> = <italic>n</italic><sub><italic>j</italic>1</sub> → <italic>n</italic><sub><italic>j</italic>2</sub> → … → <italic>n</italic><sub><italic>jq</italic></sub>, and there exists a unique path <italic>P</italic><sub><italic>in</italic></sub> = <italic>n</italic><sub><italic>ip</italic></sub> → <italic>n</italic><sub><italic>m</italic>1</sub> → <italic>n</italic><sub><italic>m</italic>2</sub> → … → <italic>n</italic><sub><italic>mk</italic></sub> → <italic>n</italic><sub>j1</sub> between <italic>n</italic><sub><italic>ip</italic></sub> and <italic>n</italic><sub><italic>j</italic>1</sub> in <italic>G</italic>, and <italic>p</italic> + <italic>k</italic> + <italic>q</italic> ≥ 3, we then add a pair-supporting path <italic>P</italic> = <italic>P</italic><sub>1</sub> → <italic>P</italic><sub><italic>in</italic></sub> → <italic>P</italic><sub>2</sub> to <italic>P</italic><sub><italic>G</italic></sub>. Different reads (single-end or paired-end) may generate the same pair-supporting path. So, each pair-supporting path <italic>P</italic> is assigned a weight <italic>cov</italic>(<italic>P</italic>) as the number of reads that could generate the path <italic>P</italic>.</p>
    </sec>
    <sec id="Sec12">
      <title>Step 3: Iteratively construction of weighted line graphs</title>
      <p id="Par30">Starting from a splicing graph, let <italic>G</italic> be the current weighted (line) graph. TransLiG weights the line graph <italic>L</italic>(<italic>G</italic>) of <italic>G</italic> via solving a quadratic program at each node of <italic>G</italic>. Assume that node <italic>v</italic> in <italic>G</italic> has <italic>n</italic> in-coming edges and <italic>m</italic> out-going edges. In theory, there are <italic>m</italic> × <italic>n</italic> feasible connections between the <italic>n</italic> in-coming edges and <italic>m</italic> out-going edges. We expect to find the correct connections that the to-be-assembled transcripts pass through. To achieve this goal, we designed the following programming, in which <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\left({s}_j-\sum \limits_{j=1,\dots, m}{w}_{ij}{x}_{ij}\right)}^2 $$\end{document}</tex-math><mml:math id="M2" display="inline"><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>w</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2019_1690_Article_IEq1.gif"/></alternatives></inline-formula> measures the deviation between the weight of the in-coming edge <italic>e</italic><sub><italic>i</italic></sub> and the sum of the weights of all the transcript-representing paths passing through <italic>e</italic><sub><italic>i</italic></sub>, and similarly for <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\left({\mathrm{c}}_j-\sum \limits_{i=1,\dots, n}{w}_{ij}{x}_{ij}\right)}^2 $$\end{document}</tex-math><mml:math id="M4" display="inline"><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi mathvariant="normal">c</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>w</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2019_1690_Article_IEq2.gif"/></alternatives></inline-formula>, where <italic>s</italic><sub><italic>i</italic></sub> is the weight of the in-coming edge <italic>e</italic><sub><italic>i</italic></sub> at <italic>v</italic>, <italic>c</italic><sub><italic>j</italic></sub> the weight of the out-going edge <italic>e</italic><sub><italic>j</italic></sub> at <italic>v</italic>; <italic>x</italic><sub><italic>ij</italic></sub> represents a binary variable with <italic>x</italic><sub><italic>ij</italic></sub> = 1 if there is at least one transcript-representing path passing through <italic>e</italic><sub><italic>i</italic></sub> and <italic>e</italic><sub><italic>j</italic></sub>, and 0 otherwise, and <italic>w</italic><sub><italic>ij</italic></sub> represents the coverage value of all the transcript-representing paths passing through <italic>e</italic><sub><italic>i</italic></sub> and <italic>e</italic><sub><italic>j</italic></sub>. We then minimize the deviations for all the in-coming and out-going edges to find the correct connections between the in-coming and out-going edges. Therefore, the correct way of all the transcript-representing paths passing through the node <italic>v</italic> could be determined by solving the following quadratic program.<disp-formula id="Equa"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\displaystyle \begin{array}{c}\min \kern0.5em z=\sum \limits_{i=1,\dots, n}{\left({s}_i-\sum \limits_{j=1,\dots, m}{w}_{ij}{x}_{ij}\right)}^2+\sum \limits_{j=1,\dots, m}{\left({c}_j-\sum \limits_{i=1,\dots, n}{w}_{ij}{x}_{ij}\right)}^2\\ {}s.t.\kern0.5em \left\{\begin{array}{c}\begin{array}{ccccccc}{x}_{ij}=1,&amp; if&amp; \left({e}_i,{e}_j\right)\subset P,P\in {P}_{\mathrm{G}}&amp; &amp; &amp; &amp; \end{array}\\ {}\begin{array}{cc}{w}_{ij}\ge \sum \limits_{P\in {P}_G,\left({e}_i,{e}_j\right)\subset P}\operatorname{cov}(P),&amp; \begin{array}{cc}i=1,\dots, n,&amp; j=1,\dots, m\end{array}\end{array}\\ {}\begin{array}{cc}\sum \limits_{i=1,\dots, n}{x}_{ij}\ge 1,&amp; j=1,\dots, m\end{array}\\ {}\begin{array}{cc}\sum \limits_{j=1,\dots, m}{x}_{ij}\ge 1,&amp; i=1,\dots, n\end{array}\\ {}{w}_{ij}\ge 0\\ {}\begin{array}{c}{x}_{ij}=\left\{0,1\right\}\\ {}\sum \limits_{\begin{array}{c}i=1,\dots, n\\ {}j=1,\dots, m\end{array}}{x}_{ij}=M\end{array}\end{array}\right.\end{array}} $$\end{document}</tex-math><mml:math id="M6" display="block"><mml:mtable columnalign="center" displaystyle="true"><mml:mtr><mml:mtd><mml:mo>min</mml:mo><mml:mspace width="0.5em"/><mml:mi>z</mml:mi><mml:mo>=</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>w</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msup><mml:mfenced close=")" open="("><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>−</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>w</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub></mml:mrow></mml:mfenced><mml:mn>2</mml:mn></mml:msup></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>t</mml:mi><mml:mo>.</mml:mo></mml:mtd><mml:mtd><mml:mfenced close="" open="{"><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtext mathvariant="italic">if</mml:mtext></mml:mtd><mml:mtd><mml:mfenced close=")" open="(" separators=","><mml:msub><mml:mi>e</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>e</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mfenced><mml:mo>⊂</mml:mo><mml:mi>P</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi mathvariant="normal">G</mml:mi></mml:msub></mml:mtd><mml:mtd/><mml:mtd/><mml:mtd/><mml:mtd/></mml:mtr></mml:mtable></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:msub><mml:mi>w</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>P</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>P</mml:mi><mml:mi>G</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mfenced close=")" open="(" separators=","><mml:msub><mml:mi>e</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>e</mml:mi><mml:mi>j</mml:mi></mml:msub></mml:mfenced><mml:mo>⊂</mml:mo><mml:mi>P</mml:mi></mml:mrow></mml:munder><mml:mo>cov</mml:mo><mml:mfenced close=")" open="("><mml:mi>P</mml:mi></mml:mfenced><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mrow></mml:munder><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo></mml:mtd><mml:mtd><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mi>w</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>≥</mml:mo><mml:mn>0</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfenced close="}" open="{" separators=","><mml:mn>0</mml:mn><mml:mn>1</mml:mn></mml:mfenced></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mtable columnalign="center"><mml:mtr><mml:mtd><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>m</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:munder><mml:msub><mml:mi>x</mml:mi><mml:mi mathvariant="italic">ij</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mi>M</mml:mi></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:mfenced></mml:mtd></mml:mtr></mml:mtable></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="13059_2019_1690_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par31">where <italic>P</italic><sub><italic>G</italic></sub> is the set of pair-supporting paths, and <italic>cov</italic>(<italic>P</italic>) is the coverage of pair-supporting path <italic>P</italic>; <italic>M</italic> represents the expected number of transcript-representing paths passing through the node <italic>v</italic>, and clearly <italic>max</italic>{<italic>m</italic>, <italic>n</italic>} ≤ <italic>M</italic> ≤ <italic>m</italic> × <italic>n</italic> (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Methods 2.2 in details for the determination of <italic>M</italic>). Clearly, this is a mixed integer quadratic programming, an NP-hard problem. However, it is computationally acceptable in our assembly procedure due to the specific properties of the constructed splicing graphs (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Methods 2.3 in details for the solution of the quadratic programming).</p>
      <p id="Par32">Let {<italic>x</italic><sub><italic>ij</italic></sub>, <italic>w</italic><sub><italic>ij</italic></sub>} be the optimum solution of the quadratic program. Then the line graph <italic>L</italic>(<italic>G</italic>) of the current (line) graph <italic>G</italic> is weighted by assigning <italic>w</italic><sub><italic>ij</italic></sub> to (<italic>e</italic><sub><italic>i</italic></sub>, <italic>e</italic><sub><italic>j</italic></sub>) if <italic>x</italic><sub><italic>ij</italic></sub> = 1, and 0 otherwise. Reset <italic>G</italic> to be the graph <italic>L</italic>(<italic>G</italic>) by removing all the zero-weighted edges, and modifying the pair-supporting paths in <italic>P</italic><sub><italic>G</italic></sub> accordingly. Then TransLiG repeats Step 3 until <italic>L</italic>(<italic>G</italic>) is empty.</p>
    </sec>
    <sec id="Sec13">
      <title>Step 4: Recovery of transcripts</title>
      <p id="Par33">TransLiG recovers all the transcripts by expanding all the isolated nodes generated during the line graph iteration, i.e., by tracking back to recover all the transcript-representing paths in the original splicing graphs.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional file</title>
    <sec id="Sec14">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2019_1690_MOESM1_ESM.pdf">
            <label>Additional file 1:</label>
            <caption>
              <p>This file contains the parameter setups of the compared assemblers, the supplementary methods, figures and tables. (PDF 368 kb)</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>NCBI</term>
        <def>
          <p id="Par2">National Center for Biotechnology Information</p>
        </def>
      </def-item>
      <def-item>
        <term>RNA-seq</term>
        <def>
          <p id="Par3">RNA sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>SRA</term>
        <def>
          <p id="Par4">Sequence read archive</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
    <sec id="FPar1">
      <title>Funding</title>
      <p id="Par34">This work was supported by the National Natural Science Foundation of China (61801265, 61432010, 61771009), the National Key Research and Development Program of China (2016YFB0201702), the Natural Science Foundation of Shandong Province with code ZR2018PA001, and the China Postdoctoral Science Foundation with code 2018 M632659. The funders had no role in study design, data collection and analysis, decision to publish, or preparation of the manuscript.</p>
    </sec>
    <sec id="FPar2" sec-type="data-availability">
      <title>Availability of data and materials</title>
      <p id="Par35">The TransLiG package is available at <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/transcriptomeassembly/files/">https://sourceforge.net/projects/transcriptomeassembly/files/</ext-link> [<xref ref-type="bibr" rid="CR31">31</xref>] and 10.5281/zenodo.2576226 [<xref ref-type="bibr" rid="CR32">32</xref>] under the GNU General Public License (GPL). The three real datasets used in this study, the human K562 cells, the human H1 cells, and the mouse dendritic cells datasets can be downloaded from the NCBI Sequence Read Archive (SRA) database with accession codes SRX110318, SRX082572 and SRX062280, respectively [<xref ref-type="bibr" rid="CR33">33</xref>]. Simulated data used in this study is available at <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/transassembly/files/TransLiG-Simulation-Data/">https://sourceforge.net/projects/transassembly/files/TransLiG-Simulation-Data/</ext-link> [<xref ref-type="bibr" rid="CR34">34</xref>].</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>GL conceived and designed the experiments. JL, TY, and ZM performed the experiments. JL and TY analyzed the data. TY and JL contributed reagents/materials/analysis tools. GL and JL wrote the paper. TY and JL designed the software used in analysis. GL oversaw the project. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <sec id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="FPar4">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="FPar5">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="FPar6">
      <title>Publisher’s Note</title>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </sec>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kelemen</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Convertini</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>ZY</given-names>
          </name>
          <name>
            <surname>Wen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Shen</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Falaleeva</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Stamm</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Function of alternative splicing</article-title>
        <source>Gene</source>
        <year>2013</year>
        <volume>514</volume>
        <fpage>1</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="doi">10.1016/j.gene.2012.07.083</pub-id>
        <pub-id pub-id-type="pmid">22909801</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tazi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bakkour</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Stamm</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Alternative splicing and disease</article-title>
        <source>Biochimica Et Biophysica Acta-Mol Basis Dis</source>
        <year>2009</year>
        <volume>1792</volume>
        <fpage>14</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/j.bbadis.2008.09.017</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Singh</surname>
            <given-names>RK</given-names>
          </name>
          <name>
            <surname>Cooper</surname>
            <given-names>TA</given-names>
          </name>
        </person-group>
        <article-title>Pre-mRNA splicing in disease and therapeutics</article-title>
        <source>Trends Mol Med</source>
        <year>2012</year>
        <volume>18</volume>
        <fpage>472</fpage>
        <lpage>482</lpage>
        <pub-id pub-id-type="doi">10.1016/j.molmed.2012.06.006</pub-id>
        <pub-id pub-id-type="pmid">22819011</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>ET</given-names>
          </name>
          <name>
            <surname>Sandberg</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Khrebtukova</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Mayr</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Kingsmore</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Schroth</surname>
            <given-names>GP</given-names>
          </name>
          <name>
            <surname>Burge</surname>
            <given-names>CB</given-names>
          </name>
        </person-group>
        <article-title>Alternative isoform regulation in human tissue transcriptomes</article-title>
        <source>Nature</source>
        <year>2008</year>
        <volume>456</volume>
        <fpage>470</fpage>
        <lpage>476</lpage>
        <pub-id pub-id-type="doi">10.1038/nature07509</pub-id>
        <pub-id pub-id-type="pmid">18978772</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pan</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Shai</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Lee</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Frey</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Blencowe</surname>
            <given-names>BJ</given-names>
          </name>
        </person-group>
        <article-title>Deep surveying of alternative splicing complexity in the human transcriptome by high-throughput sequencing</article-title>
        <source>Nat Genet</source>
        <year>2008</year>
        <volume>40</volume>
        <fpage>1413</fpage>
        <lpage>1415</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.259</pub-id>
        <pub-id pub-id-type="pmid">18978789</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pertea</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>GM</given-names>
          </name>
          <name>
            <surname>Antonescu</surname>
            <given-names>CM</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>TC</given-names>
          </name>
          <name>
            <surname>Mendell</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>StringTie enables improved reconstruction of a transcriptome from RNA-seq reads</article-title>
        <source>Nat Biotechnol</source>
        <year>2015</year>
        <volume>33</volume>
        <fpage>290</fpage>
        <lpage>295</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3122</pub-id>
        <pub-id pub-id-type="pmid">25690850</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ozsolak</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Milos</surname>
            <given-names>PM</given-names>
          </name>
        </person-group>
        <article-title>RNA sequencing: advances, challenges and opportunities</article-title>
        <source>Nat Rev Genet</source>
        <year>2010</year>
        <volume>12</volume>
        <fpage>87</fpage>
        <lpage>98</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2934</pub-id>
        <pub-id pub-id-type="pmid">21191423</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gerstein</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Snyder</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>RNA-Seq: a revolutionary tool for transcriptomics</article-title>
        <source>Nat Rev Genet</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>57</fpage>
        <lpage>63</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2484</pub-id>
        <pub-id pub-id-type="pmid">19015660</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marguerat</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bähler</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>RNA-seq: from technology to biology</article-title>
        <source>Cell Mol Life Sci</source>
        <year>2010</year>
        <volume>67</volume>
        <fpage>569</fpage>
        <lpage>579</lpage>
        <pub-id pub-id-type="doi">10.1007/s00018-009-0180-6</pub-id>
        <pub-id pub-id-type="pmid">19859660</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wilhelm</surname>
            <given-names>BT</given-names>
          </name>
          <name>
            <surname>Landry</surname>
            <given-names>J-R</given-names>
          </name>
        </person-group>
        <article-title>RNA-Seq—quantitative measurement of expression through massively parallel RNA-sequencing</article-title>
        <source>Methods</source>
        <year>2009</year>
        <volume>48</volume>
        <fpage>249</fpage>
        <lpage>257</lpage>
        <pub-id pub-id-type="doi">10.1016/j.ymeth.2009.03.016</pub-id>
        <pub-id pub-id-type="pmid">19336255</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Martin</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>Next-generation transcriptome assembly</article-title>
        <source>Nat Rev Genet</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>671</fpage>
        <lpage>682</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3068</pub-id>
        <pub-id pub-id-type="pmid">21897427</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Grabherr</surname>
            <given-names>MG</given-names>
          </name>
          <name>
            <surname>Haas</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Yassour</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Levin</surname>
            <given-names>JZ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Amit</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Adiconis</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Raychowdhury</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>Q</given-names>
          </name>
        </person-group>
        <article-title>Full-length transcriptome assembly from RNA-Seq data without a reference genome</article-title>
        <source>Nat Biotechnol</source>
        <year>2011</year>
        <volume>29</volume>
        <fpage>644</fpage>
        <lpage>652</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1883</pub-id>
        <pub-id pub-id-type="pmid">21572440</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mingfu Shao</surname>
            <given-names>CK</given-names>
          </name>
        </person-group>
        <article-title>Accurate assembly of transcripts through phase-preserving graph decomposition</article-title>
        <source>Nat Biotechnol</source>
        <year>2017</year>
        <volume>35</volume>
        <fpage>1167</fpage>
        <lpage>1169</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.4020</pub-id>
        <pub-id pub-id-type="pmid">29131147</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>TransComb: genome-guided transcriptome assembly via combing junctions in splicing graphs</article-title>
        <source>Genome Biol</source>
        <year>2016</year>
        <volume>17</volume>
        <fpage>213</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-1074-1</pub-id>
        <pub-id pub-id-type="pmid">27760567</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Williams</surname>
            <given-names>BA</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Mortazavi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kwan</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>van Baren</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Wold</surname>
            <given-names>BJ</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Transcript assembly and quantification by RNA-Seq reveals unannotated transcripts and isoform switching during cell differentiation</article-title>
        <source>Nat Biotechnol</source>
        <year>2010</year>
        <volume>28</volume>
        <fpage>511</fpage>
        <lpage>515</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1621</pub-id>
        <pub-id pub-id-type="pmid">20436464</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Guttman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Garber</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Levin</surname>
            <given-names>JZ</given-names>
          </name>
          <name>
            <surname>Donaghey</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Robinson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Adiconis</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Fan</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Koziol</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Gnirke</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Nusbaum</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Ab initio reconstruction of cell type-specific transcriptomes in mouse reveals the conserved multi-exonic structure of lincRNAs</article-title>
        <source>Nat Biotechnol</source>
        <year>2010</year>
        <volume>28</volume>
        <fpage>503</fpage>
        <lpage>510</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.1633</pub-id>
        <pub-id pub-id-type="pmid">20436462</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>HISAT: a fast spliced aligner with low memory requirements</article-title>
        <source>Nat Methods</source>
        <year>2015</year>
        <volume>12</volume>
        <fpage>357</fpage>
        <lpage>360</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3317</pub-id>
        <pub-id pub-id-type="pmid">25751142</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dobin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Schlesinger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Drenkow</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zaleski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Jha</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Batut</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Chaisson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gingeras</surname>
            <given-names>TR</given-names>
          </name>
        </person-group>
        <article-title>STAR: ultrafast universal RNA-seq aligner</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>15</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts635</pub-id>
        <pub-id pub-id-type="pmid">23104886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pertea</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Kelley</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>TopHat2: accurate alignment of transcriptomes in the presence of insertions, deletions and gene fusions</article-title>
        <source>Genome Biol</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>R36</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2013-14-4-r36</pub-id>
        <pub-id pub-id-type="pmid">23618408</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Au</surname>
            <given-names>KF</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Xing</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>WH</given-names>
          </name>
        </person-group>
        <article-title>Detection of splice junctions from paired-end RNA-seq data by SpliceMap</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <fpage>4570</fpage>
        <lpage>4578</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq211</pub-id>
        <pub-id pub-id-type="pmid">20371516</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Zeng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Coleman</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Savich</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Mieczkowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Grimm</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Perou</surname>
            <given-names>CM</given-names>
          </name>
        </person-group>
        <article-title>MapSplice: accurate mapping of RNA-seq reads for splice junction discovery</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <fpage>e178</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq622</pub-id>
        <pub-id pub-id-type="pmid">20802226</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Nacu</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Fast and SNP-tolerant detection of complex variants and splicing in short reads</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <fpage>873</fpage>
        <lpage>881</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq057</pub-id>
        <pub-id pub-id-type="pmid">20147302</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>McMullen</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>X</given-names>
          </name>
        </person-group>
        <article-title>BinPacker: packing-based de novo transcriptome assembly from RNA-seq data</article-title>
        <source>PLoS Comput Biol</source>
        <year>2016</year>
        <volume>12</volume>
        <fpage>e1004772</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004772</pub-id>
        <pub-id pub-id-type="pmid">26894997</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ashby</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>DL</given-names>
          </name>
          <name>
            <surname>Cramer</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>XZ</given-names>
          </name>
        </person-group>
        <article-title>Bridger: a new framework for de novo transcriptome assembly using RNA-seq data</article-title>
        <source>Genome Biol</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>30</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-015-0596-2</pub-id>
        <pub-id pub-id-type="pmid">25723335</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Peng</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Leung</surname>
            <given-names>HC</given-names>
          </name>
          <name>
            <surname>Yiu</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Lv</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>XG</given-names>
          </name>
          <name>
            <surname>Chin</surname>
            <given-names>FY</given-names>
          </name>
        </person-group>
        <article-title>IDBA-tran: a more robust de novo de Bruijn graph assembler for transcriptomes with uneven expression levels</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>i326</fpage>
        <lpage>i334</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt219</pub-id>
        <pub-id pub-id-type="pmid">23813001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xie</surname>
            <given-names>YL</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>GX</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>Luo</surname>
            <given-names>RB</given-names>
          </name>
          <name>
            <surname>Patterson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>WH</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>GZ</given-names>
          </name>
          <name>
            <surname>Gu</surname>
            <given-names>SC</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>SK</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SOAPdenovo-Trans: de novo transcriptome assembly with short RNA-Seq reads</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>1660</fpage>
        <lpage>1666</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu077</pub-id>
        <pub-id pub-id-type="pmid">24532719</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Jackman</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Schein</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Birol</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>ABySS: a parallel assembler for short read sequence data</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>19</volume>
        <fpage>1117</fpage>
        <lpage>1123</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.089532.108</pub-id>
        <pub-id pub-id-type="pmid">19251739</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schulz</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Vingron</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Oases: robust de novo RNA-seq assembly across the dynamic range of expression levels</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1086</fpage>
        <lpage>1092</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts094</pub-id>
        <pub-id pub-id-type="pmid">22368243</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kent</surname>
            <given-names>WJ</given-names>
          </name>
        </person-group>
        <article-title>BLAT—the BLAST-like alignment tool</article-title>
        <source>Genome Res</source>
        <year>2002</year>
        <volume>12</volume>
        <fpage>656</fpage>
        <lpage>664</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.229202</pub-id>
        <pub-id pub-id-type="pmid">11932250</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Griebel</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Zacher</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ribeca</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Raineri</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Lacroix</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Guigo</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sammeth</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Modelling and simulating generic RNA-Seq experiments with the flux simulator</article-title>
        <source>Nucleic Acids Res</source>
        <year>2012</year>
        <volume>40</volume>
        <fpage>10073</fpage>
        <lpage>10083</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks666</pub-id>
        <pub-id pub-id-type="pmid">22962361</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Liu J, Yu T, Mu Z, Li G. TransLiG: a de novo transcriptome assembler that uses line graph iteration. Source Code SourceForge. 2019. <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/transcriptomeassembly/files/">https://sourceforge.net/projects/transcriptomeassembly/files/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>TransLiG: a de novo transcriptome assembler that uses line graph iteration. Source code. Zenodo</source>
        <year>2019</year>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>TransLiG: a de novo transcriptome assembler that uses line graph iteration. NCBI sequence read archive</source>
        <year>2019</year>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Mu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>TransLiG: a de novo transcriptome assembler that uses line graph iteration. Simulation data</source>
        <year>2019</year>
      </element-citation>
    </ref>
  </ref-list>
</back>

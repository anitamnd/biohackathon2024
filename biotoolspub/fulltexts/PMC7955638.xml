<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7955638</article-id>
    <article-id pub-id-type="publisher-id">502</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-021-00502-6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ChemProps: A RESTful API enabled database for composite polymer name standardization</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0366-8332</contrib-id>
        <name>
          <surname>Hu</surname>
          <given-names>Bingyin</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-5847-2452</contrib-id>
        <name>
          <surname>Lin</surname>
          <given-names>Anqi</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2551-1563</contrib-id>
        <name>
          <surname>Brinson</surname>
          <given-names>L. Catherine</given-names>
        </name>
        <address>
          <email>cate.brinson@duke.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.26009.3d</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 7961</institution-id><institution>Department of Mechanical Engineering and Materials Science, </institution><institution>Duke University, </institution></institution-wrap>Durham, NC 27708 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>3</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>13</volume>
    <elocation-id>22</elocation-id>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>12</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>1</day>
        <month>3</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">The inconsistency of polymer indexing caused by the lack of uniformity in expression of polymer names is a major challenge for widespread use of polymer related data resources and limits broad application of materials informatics for innovation in broad classes of polymer science and polymeric based materials. The current solution of using a variety of different chemical identifiers has proven insufficient to address the challenge and is not intuitive for researchers. This work proposes a multi-algorithm-based mapping methodology entitled ChemProps that is optimized to solve the polymer indexing issue with easy-to-update design both in depth and in width. RESTful API is enabled for lightweight data exchange and easy integration across data systems. A weight factor is assigned to each algorithm to generate scores for candidate chemical names and optimized to maximize the minimum value of the score difference between the ground truth chemical name and the other candidate chemical names. Ten-fold validation is utilized on the 160 training data points to prevent overfitting issues. The obtained set of weight factors achieves a 100% test accuracy on the 54 test data points. The weight factors will evolve as ChemProps grows. With ChemProps, other polymer databases can remove duplicate entries and enable a more accurate “search by SMILES” function by using ChemProps as a common name-to-SMILES translator through API calls. ChemProps is also an excellent tool for auto-populating polymer properties thanks to its easy-to-update design.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13321-021-00502-6.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Polymers</kwd>
      <kwd>SMILES</kwd>
      <kwd>API</kwd>
      <kwd>Materials Informatics</kwd>
      <kwd>NanoMine</kwd>
      <kwd>Database</kwd>
      <kwd>Optimization</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000105</institution-id>
            <institution>Office of Advanced Cyberinfrastructure</institution>
          </institution-wrap>
        </funding-source>
        <award-id>OAC-1835677</award-id>
        <principal-award-recipient>
          <name>
            <surname>Brinson</surname>
            <given-names>L. Catherine</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par14">Significant advances in computing power in the past decade have given birth to many data-driven approaches including Materials Informatics, which facilitates understanding of processing-structure–property relationships and is a cornerstone in the materials design process [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR4">4</xref>]. However, as Ramprasad et al. points out, Materials Informatics requires data to be reliable, uniform and stored in a controlled manner [<xref ref-type="bibr" rid="CR5">5</xref>]. This seemingly simple requirement has posed many challenges for polymeric materials data due to prevalent use of different naming conventions and abbreviations for polymers. While the various aliases are fluently acceptable for humans, they confound attempts to curate data in the robust and consistent manner essential for indexing into databases for Materials Informatics, which is considered a major impediment for the adoption of machine learning techniques [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>].</p>
    <p id="Par15">The correctness of data indexing can impact many aspects of a data resource. Because of the lack of uniformity in expression of polymer names in publications and data sets, exploration of the data via search and visualization tools becomes problematic, leading to difficulties in using a polymer data resource as a viable tool in data driven discovery. For example, the results returned for searching for Poly(methyl methacrylate) (PMMA) on Reaxys [<xref ref-type="bibr" rid="CR8">8</xref>], which is a powerful database with properties and reaction data available for a wide range of substances including polymers, varies by the expression of PMMA.<xref ref-type="fn" rid="Fn1">1</xref></p>
    <p id="Par17">NanoMine is another example. NanoMine is an ontology-enabled open source data resource for the polymer nanocomposite community. The visualization tool of NanoMine is hampered by the polymer nomenclature in terms of the existence of multiple different labels for the same polymer. As a result, users cannot perform simple operations such as filtering the plot by polymer matrix readily. A tool resolving the nomenclature discrepancy is useful to polymer data resources like NanoMine and the whole community.</p>
    <p id="Par18">Researchers have made efforts in polymer indexing through use of chemical identifiers which fall into two categories. The first is source-based such as PubChem CIDs [<xref ref-type="bibr" rid="CR9">9</xref>], ChEBI IDs [<xref ref-type="bibr" rid="CR10">10</xref>] and CAS numbers [<xref ref-type="bibr" rid="CR11">11</xref>]. These number-form identifiers are generated by common online chemical platforms. Regardless of the data quality issue, these chemical identifiers are usually not favorable for cross-database studies due to the source dependency [<xref ref-type="bibr" rid="CR12">12</xref>]. The second category of chemical identifiers are source independent, such as IUPAC names, SMILES notations [<xref ref-type="bibr" rid="CR13">13</xref>] and InChI strings [<xref ref-type="bibr" rid="CR14">14</xref>]. However, Akhondi et al. found out that the consistency of the source independent chemical identifiers between data sources counterintuitively varies significantly [<xref ref-type="bibr" rid="CR15">15</xref>]. A recent effort entitled BigSMILES [<xref ref-type="bibr" rid="CR16">16</xref>] was made to build upon the SMILES notation for better representation of the stochastic nature of polymers. BigSMILES could be a solution to the inconsistency use of chemical identifiers once it is canonicalized, which is still ongoing. Even when a polymer database is correctly indexed, it is not intuitive for users to search for chemicals with chemical identifiers. In many cases, researchers cannot read the chemical identifiers since these expressions are not typically used regularly in communications or record keeping. Consider “polystyrene” as an example, whose IUPAC name is “poly(1-phenylethene-1,2-diyl)”, SMILES notation can be “*CC(*)c1ccccc1” and InChI string is “1S/C8H8/c1-2-8-6-4-3-5-7-8/h2-7H,1H2”. Researchers and publications most typically use simply “Polystyrene” or “poly(styrene)” or “PS” or a handful of similar common shorthands to refer to this common chemical compound. A hub that can link the chemical identifiers with the common conventional names that researchers use is in urgent need. Here we present a multi-algorithm-based mapping methodology that is optimized to solve the indexing issue and promote easy data exchange and application of rapidly advancing machine learning methods to polymer systems.</p>
    <p id="Par19">To generate insights from data resources, in addition to consistent identifiers, computational methods and algorithms require large scale, efficient data exchange. Application Programming Interface (API) is a concise solution. A lightweight REpresentational State Transfer (RESTful) API simplifies the user interaction with the hub to an HTTP request and a return. APIs are widely used in many data resources in the materials design domain [<xref ref-type="bibr" rid="CR17">17</xref>–<xref ref-type="bibr" rid="CR19">19</xref>]. In this work, we propose ChemProps, a RESTful API enabled database that takes in common polymer names and returns chemical identifiers (unique SMILES) with tolerance of expression differences as mentioned earlier. The rest of the paper is as follows. We describe the structure of ChemProps API, data storage/update protocols of ChemProps database, and how we optimize the polymer name mapping algorithms in detail in “<xref rid="Sec2" ref-type="sec">Methods</xref>” section. The results of optimization and examples of how to use ChemProps either through HTTP requests or GUI are given in “<xref rid="Sec6" ref-type="sec">Results</xref>” section. We discuss the potential uses of ChemProps in “<xref rid="Sec10" ref-type="sec">Discussion</xref>” section and summarize in “<xref rid="Sec11" ref-type="sec">Conclusion</xref>” section.</p>
  </sec>
  <sec id="Sec2">
    <title>Methods</title>
    <sec id="Sec3">
      <title>Structure of ChemProps API</title>
      <p id="Par20">Table <xref rid="Tab1" ref-type="table">1</xref> shows the input names and descriptions of a GET request. To use the services, users only need to refer to Table <xref rid="Tab1" ref-type="table">1</xref> to send a GET request to the endpoint at the ChemProps API [<xref ref-type="bibr" rid="CR20">20</xref>]. We would like to highlight that only the <italic>polfil</italic> and the <italic>ChemicalName</italic> parameters are required inputs. Users can combine these two parameters with any combinations or none of the other three optional inputs to form a valid payload to the ChemProps API. The results will be returned within seconds with the format given in Table <xref rid="Tab2" ref-type="table">2</xref>. Figure <xref rid="Fig1" ref-type="fig">1</xref> shows the overall structure of the ChemProps API for polymer name standardization. Please note ChemProps is designed for standardizing both polymer names and composite nano-filler names. The <italic>polfil</italic> parameter, which states whether users search for a polymer name or a filler name, is assumed to be “pol” throughout this paper.<xref ref-type="fn" rid="Fn2">2</xref> In Fig. <xref rid="Fig1" ref-type="fig">1</xref>, only the yellow part is visible to users, showing the essence of a lightweight RESTful API, while the backend scripts carry all the loads. In the backend process, first a script will check for the existence of <italic>SMILES</italic> parameter in the input and send it to the SMILES translation module for standardization, if present. The SMILES translation module sends the input SMILES string to the NIH Online SMILES Translator to generate the Kekule unique SMILES (uSMILES) representation [<xref ref-type="bibr" rid="CR21">21</xref>]. This module can remove flavors from SMILES and unify them in most cases. The details of the uSMILES generation can be found in the work by Weininger et al. [<xref ref-type="bibr" rid="CR22">22</xref>] After this step, the input package moves to the algorithms section, which is the heart of ChemProps. A set of internal evaluation queries are designed to represent a predefined set of mapping algorithms. Each query, which implements a single algorithm, may find multiple results or may not find any results within the ChemProps core database. To ensure the reliability of our service, we assign an optimized weight, which will be updated over time as new polymers are included into the system, to each query and let them vote for the result by summing up the weights of each returned chemical. We describe the optimization process in a later section in detail. The chemical with the highest sum of weights will be returned. There are two cases when we will log the input and notify the admin. First is when no results can be found by any queries, which means ChemProps might need to welcome new chemicals. Second is when two chemicals tie at the top, which we try to avoid through optimization.<table-wrap id="Tab1"><label>Table 1</label><caption><p>A list of input information of a GET request</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th><th align="left">Example</th></tr></thead><tbody><tr><td align="left"><italic>polfil</italic></td><td align="left">String</td><td align="left">Search type: Use “pol” for polymer or “fil” for filler</td><td align="left"><italic>“polfil”: “</italic>pol”</td></tr><tr><td align="left"><italic>ChemicalName</italic></td><td align="left">String</td><td align="left">Chemical name to locate</td><td align="left"><italic>“ChemicalName”: “</italic>polystyrene”</td></tr><tr><td align="left"><italic>Abbreviation</italic></td><td align="left">String</td><td align="left">Optional abbreviation to locate</td><td align="left"><italic>“Abbreviation”: “</italic>PS”</td></tr><tr><td align="left"><italic>TradeName</italic></td><td align="left">String</td><td align="left">Optional trade name to locate</td><td align="left"><italic>“TradeName”: “</italic>Styrofoam”</td></tr><tr><td align="left"><italic>SMILES</italic></td><td align="left">String</td><td align="left">Optional specific SMILES value to locate</td><td align="left"><italic>“SMILES”: “</italic>*CC(*)c1ccccc1”</td></tr></tbody></table></table-wrap><table-wrap id="Tab2"><label>Table 2</label><caption><p>A list of returned information of a GET request if successful (Code 200)</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Name</th><th align="left">Type</th><th align="left">Description</th><th align="left">Example</th></tr></thead><tbody><tr><td align="left"><italic>StandardName</italic></td><td align="left">String</td><td align="left">Standard chemical name</td><td align="left"><italic>“StandardName”</italic>: “Polystyrene”</td></tr><tr><td align="left"><italic>density</italic></td><td align="left">String</td><td align="left">Chemical density at 25 °C in g/cm<sup>3</sup></td><td align="left"><italic>“density”: “</italic>1.04”</td></tr><tr><td align="left"><italic>uSMILES</italic></td><td align="left">String</td><td align="left">Polymer unique SMILES</td><td align="left"><italic>“uSMILES”</italic>: “C(C(C1 = CC = CC = C1)[*])[*]”</td></tr></tbody></table></table-wrap><fig id="Fig1"><label>Fig. 1</label><caption><p>The structure of the ChemProps API</p></caption><graphic xlink:href="13321_2021_502_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>Data</title>
      <p id="Par22">The core ChemProps database was built on MongoDB, a NoSQL database. As a starting point, we begin with a core subset of all possible polymers to create a set of robust algorithms that are continuously calibrated to optimal performance with the introduction of more polymers into ChemProps. Raw data is stored on the cloud in a Google spreadsheet for stability. We pulled 515 polymer names, considered as standard names, from Polymer Genome [<xref ref-type="bibr" rid="CR23">23</xref>] along with associated SMILES and density information as the skeleton of the raw data. We adopted the customization of marking the linking atoms of the polymer chain with [*] by Polymer Genome. We then augmented the raw data with 49 polymer names pulled from NanoMine for a total of 564 unique polymer names sitting in the Google spreadsheet. Of these 564 unique polymer names, 89 polymer names are fully indexed with their unique SMILES, abbreviations, synonyms, trade names and density information, which are used in the rest of this current study. All SMILES notations were converted to unique SMILES by the translation module [<xref ref-type="bibr" rid="CR24">24</xref>]. Additional information was collected from sources including MatWeb [<xref ref-type="bibr" rid="CR25">25</xref>], Polymer Database [<xref ref-type="bibr" rid="CR26">26</xref>], and Polymer Science Dictionary [<xref ref-type="bibr" rid="CR27">27</xref>] semi-automatically. Overtime, more of the 564 polymer names will become fully indexed. 54 fillers (such as silica or carbon nanotubes) are also indexed in ChemProps with their synonyms and density information.</p>
      <p id="Par23">To begin the algorithm development, we borrow the idea of bag-of-words (BOW) [<xref ref-type="bibr" rid="CR28">28</xref>] from natural language processing to build a bag-of-characters notation (BOC). BOC is a string of digits with its first 26 digits indicating the occurrence of 26 alphabetic characters from a to z and its last 10 digits representing the occurrence of 10 Arabic numerals from 0 to 9. We cap the occurrence of a character at 9 in its BOC string since it is not common for a character or numeral to occur more than 9 times in a polymer name. All strings are converted to lowercase before transforming into BOC strings. The merits of BOC include disregarding the character order and ignoring non-alphabetic and non-digit characters like whitespaces, dashes, and parentheses. These merits are especially useful for polymer name translation as minor changes in spacing and hyphenation are common in polymer representation. We also introduce a BOC-alph representation which is an alphabet only version of the BOC string. Upon ingesting data from the cloud into the database, a script will convert standard names, abbreviations, synonyms, and trade names into BOC strings for storage. Figure <xref rid="Fig2" ref-type="fig">2</xref> shows an example of the ingestion and conversion process. On the cloud side, since the skeleton already covers chemical names, SMILES and density, an administrator only needs to fill in the common abbreviations, synonyms, and trade names to “activate” a new polymer. A python script is called automatically every week to back up the spreadsheet from the cloud, scan inside the 564 polymers for all the “activated” polymers that have either abbreviations, synonyms or trade names filled in, which currently numbers 89, format the data, and push into the MongoDB for update. This design makes it easy to update the ChemProps database both in depth and in width, which is critical for a growing database, by only interacting with the Google spreadsheet. In depth, administrators can add more polymers by simply add a row in the Google spreadsheet. In width, a new property such as glass transition temperature can be added to the ChemProps database by adding a column in the Google spreadsheet and a few more lines in the digesting scripts.<fig id="Fig2"><label>Fig. 2</label><caption><p>Illustration of the data ingestion process, BOC correspondence are color coded</p></caption><graphic xlink:href="13321_2021_502_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec5">
      <title>Weighted voting algorithm for name mapping</title>
      <p id="Par24">The conventional way of dealing with synonyms is the brute force approach, which simply tabulates all known synonyms as shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. This method, however, is unstable and still subject to errors as new differences in expression are encountered. Based on our experience with the 1500 + samples in NanoMine, we propose 12 mapping algorithms to vote for the final match given the user input. Table <xref rid="Tab3" ref-type="table">3</xref> summarizes the proposed algorithms.<fig id="Fig3"><label>Fig. 3</label><caption><p>Screenshots of synonyms of polystyrene on PubChem [<xref ref-type="bibr" rid="CR33">33</xref>] and ChEBI [<xref ref-type="bibr" rid="CR34">34</xref>]</p></caption><graphic xlink:href="13321_2021_502_Fig3_HTML" id="MO3"/></fig><table-wrap id="Tab3"><label>Table 3</label><caption><p>Summary of the proposed mapping algorithms</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Algorithm ID</th><th align="left">Description</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">Search within unique SMILES with translated <italic>SMILES</italic></td></tr><tr><td align="left">2</td><td align="left">Search within standard names with <italic>ChemicalName</italic></td></tr><tr><td align="left">3</td><td align="left">Search within abbreviations with <italic>ChemicalName</italic></td></tr><tr><td align="left">4</td><td align="left">Search within synonyms with <italic>ChemicalName</italic></td></tr><tr><td align="left">5</td><td align="left">Search within abbreviations with <italic>Abbreviation</italic></td></tr><tr><td align="left">6</td><td align="left">Search within BOC with BOCed <italic>Abbreviation</italic></td></tr><tr><td align="left">7</td><td align="left">Search within tradenames with <italic>TradeName</italic> using relaxed BOW comparison</td></tr><tr><td align="left">8</td><td align="left">Search within BOC with BOC-alphed <italic>TradeName</italic> by comparing the first 26 digits</td></tr><tr><td align="left">9</td><td align="left">Search within BOC with BOCed <italic>ChemicalName</italic></td></tr><tr><td align="left">10</td><td align="left">Search within BOC with BOC-alphed <italic>ChemicalName</italic> by comparing the first 26 digits</td></tr><tr><td align="left">11</td><td align="left">Search within standard names with <italic>ChemicalName</italic> using relaxed BOW comparison</td></tr><tr><td align="left">12</td><td align="left">Search within synonyms with <italic>ChemicalName</italic> using relaxed BOW comparison</td></tr></tbody></table></table-wrap></p>
      <p id="Par25">We create a variety of BOC and BOW algorithms for high precision polymer name identification that is robust to expression differences. For example, in Table <xref rid="Tab3" ref-type="table">3</xref> algorithm #6 considers abbreviations like PA 6–6, PA 66 and PA 6/6 as the same. However, the BOC method cannot identify that “Diglycidyl ether of bisphenol-A epoxy resin” and “diglycidyl ether of bisphenol-A” are equivalent. To address this issue, we introduce the relaxed BOW comparison, which is a variation from BOW. We first split the input by non-alphabetic characters to form a bag of words. Then we search the database for entries that contain all the words in the bag. Though the two DGEBA epoxy expressions have different BOC strings, they can be identified by algorithm #12 since the BOW of the second expression is a subset of the first expression. Due to the difference in reliability, we apply a weight to each algorithm and optimize the weights for the best mapping performance. The collection of the weights is denoted as a vector <bold><italic>w</italic></bold>.</p>
      <p id="Par26">In order to optimize the weights of algorithms, we use the data from NanoMine divided chronologically into training and validation sets. We extract the reported polymer data following the format given in Table <xref rid="Tab1" ref-type="table">1</xref>. We hereby define a searching package (<bold><italic>SP</italic></bold>) as a combination of <italic>ChemicalName, Abbreviation</italic>, <italic>TradeName</italic>, and <italic>SMILES</italic>. The training set contains 166 unique sets of <bold><italic>SP</italic></bold>s, while the test set contains 54 unique sets of <bold><italic>SP</italic></bold>s. To start the training process, the initial weight of all 12 algorithms is assigned to one. When a <bold><italic>SP</italic></bold> is passed to ChemProps, all 12 algorithms will be used for evaluation one by one. For each algorithm, ChemProps will look at all of the 89 indexed polymers to see if there is a match evaluated through the algorithm using the terms in the <bold><italic>SP</italic></bold>. Intuitively, we create a vector <bold><italic>R</italic></bold> of length 12 for each indexed polymer for initialization. We then fill in the nth spot with either 0 or 1 depending on the evaluation using the nth algorithm with 0 indicating not a match and 1 otherwise. When the <bold><italic>SP</italic></bold> is evaluated by all 12 algorithms, we will have 89 <bold><italic>R</italic></bold> vectors in theory. However, many of the 89 <bold><italic>R</italic></bold> vectors are filled with 12 zeros, which are trivial and discarded. For that specific <bold><italic>SP</italic></bold>, ChemProps only records the indexed polymers with non-trivial <bold><italic>R</italic></bold> vectors and computes their scores by taking the dot product of <bold><italic>w</italic></bold> and <bold><italic>R</italic></bold>. Only the non-trivial <bold><italic>R</italic></bold> vectors are generated for better computational efficiency and we denote the names of indexed polymers associated with those non-trivial <bold><italic>R</italic></bold> vectors as candidate chemical names, one of which must be the ground truth chemical name based on our training data.</p>
      <p id="Par27">In the first pass through ChemProps of the 166 training <bold><italic>SP</italic></bold>s, 102 <bold><italic>SP</italic></bold>s get paired with more than one <bold><italic>R</italic></bold> vector and 64 <bold><italic>SP</italic></bold>s get paired with only one <bold><italic>R</italic></bold> vector, which we will discuss later. For each of the 102 <bold><italic>SP</italic></bold>s, we select from the recorded non-trivial <bold><italic>R</italic></bold> vectors the ones with score ranked top two. Since there could be a tie in score for <bold><italic>R</italic></bold> vectors, we end up collecting 262 <bold><italic>R</italic></bold> vectors from the 102 <bold><italic>SP</italic></bold>s. For this subset of data, our goal is to maximize the score difference between the ground truth chemical name and other top ranked candidate chemical names via an optimal weight vector <bold><italic>w</italic></bold>. To accomplish this goal, for each of the 102 <bold><italic>SP</italic></bold>s, we define a vector <bold><italic>x</italic></bold> as the difference between the <bold><italic>R</italic></bold> vectors of wrongly mapped candidate chemical names and the <bold><italic>R</italic></bold> vector of the ground truth chemical name. <bold><italic>x</italic></bold> is a vector of length 12 with values of − 1, 0 or 1: − 1 results if the algorithm finds an incorrectly mapped chemical name, 0 results if the algorithm either finds both or finds neither of the correct and the wrongly mapped chemicals, and 1 results if the algorithm only finds the ground truth chemical name. Then the score difference can be represented by the dot product of <bold><italic>x</italic></bold> and <bold><italic>w</italic></bold>. It is worth mentioning that the <bold><italic>R</italic></bold> vector of the ground truth chemical name is not necessarily 1 in all spots. For the rest 64 of the 166 <bold><italic>SP</italic></bold>s, each of them is paired with only one <bold><italic>R</italic></bold> vector. Since the associated candidate chemical names are indeed the ground truth chemical name, we denote these 64 <bold><italic>R</italic></bold> vectors as <bold><italic>Rc</italic></bold> with letter “c” standing for “correct”.</p>
      <p id="Par28">An illustration of the training data structure is shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. From top down it shows the breakdown of the training data set. The grey blocks give example for <bold><italic>R</italic></bold> vectors and <bold><italic>Rc</italic></bold> vectors. <italic>y</italic> being 1 stands for the ground truth chemical name and being 0 stands for the wrong mapping. From <bold><italic>SP</italic></bold><sub>1</sub> to <bold><italic>SP</italic></bold><sub>102</sub>, ChemProps returns multiple candidate chemical names meaning multiple <bold><italic>R</italic></bold> vectors mapped to one <bold><italic>SP</italic></bold>. Consider <bold><italic>SP</italic></bold><sub>1</sub> as an example, there are three candidate chemical names returned with <bold><italic>R</italic></bold><sub>1</sub> being the <bold><italic>R</italic></bold> vector of the ground truth. Our next step is to obtain the difference between the ground truth <bold><italic>R</italic></bold><sub>1</sub> and the wrongly mapped <bold><italic>R</italic></bold><sub>2</sub> and <bold><italic>R</italic></bold><sub>3</sub>, leading to the formation of <bold><italic>x</italic></bold><sub>1</sub> and <bold><italic>x</italic></bold><sub>2</sub>. <bold><italic>SP</italic></bold><sub>103</sub> to <bold><italic>SP</italic></bold><sub>166</sub> all return the only ground truth forming the 64 <bold><italic>Rc</italic></bold> vectors.<fig id="Fig4"><label>Fig. 4</label><caption><p>Structure of training data for weights optimization</p></caption><graphic xlink:href="13321_2021_502_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par29">We seek to maximize the score difference between the ground truth chemical name and the wrongly mapped candidate chemical names, while maintaining the weights to be non-negative and the score of 64 <bold><italic>Rc</italic></bold> vectors to be positive, ensuring that the ground truth chemical name will still be returned when <bold><italic>w</italic></bold> is converged. Therefore, we propose the null negative form of the optimization problem as follows:<disp-formula id="Equa"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{minimize}}\;f(\varvec{w}) = - min(\varvec{x}_{i} \cdot \varvec{w}^{{\text{T}}} ),\quad \;i = 1, \ldots ,160$$\end{document}</tex-math><mml:math id="M2" display="block"><mml:mrow><mml:mtext>minimize</mml:mtext><mml:mspace width="0.277778em"/><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mi>m</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">x</mml:mi></mml:mrow><mml:mi>i</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow><mml:mtext>T</mml:mtext></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mspace width="0.277778em"/><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>160</mml:mn></mml:mrow></mml:math><graphic xlink:href="13321_2021_502_Article_Equa.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equb"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{subject to}}\; - w_{j} \le 0\quad j = 1, \ldots ,12$$\end{document}</tex-math><mml:math id="M4" display="block"><mml:mrow><mml:mrow><mml:mtext>subject to</mml:mtext></mml:mrow><mml:mspace width="0.277778em"/><mml:mo>-</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mn>0</mml:mn><mml:mspace width="1em"/><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>12</mml:mn></mml:mrow></mml:math><graphic xlink:href="13321_2021_502_Article_Equb.gif" position="anchor"/></alternatives></disp-formula><disp-formula id="Equc"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$- {\varvec{Rc}}_{k} \cdot {\varvec{w}}^{{\text{T}}} &lt; 0,\quad k = 1, \ldots ,64$$\end{document}</tex-math><mml:math id="M6" display="block"><mml:mrow><mml:mo>-</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="bold-italic">Rc</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msub><mml:mo>·</mml:mo><mml:msup><mml:mrow><mml:mrow><mml:mi mathvariant="bold-italic">w</mml:mi></mml:mrow></mml:mrow><mml:mtext>T</mml:mtext></mml:msup><mml:mo>&lt;</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mspace width="1em"/><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mn>64</mml:mn></mml:mrow></mml:math><graphic xlink:href="13321_2021_502_Article_Equc.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par30">The dot product of <bold><italic>x</italic></bold> and the weight vector <bold><italic>w</italic></bold> is the score difference that we would like to maximize, where a positive score difference indicates that the ground truth chemical name has a higher score than the other candidates and thus will be returned by ChemProps. Instead of maximizing the score difference in the entire training set, we can reduce the objective function to only maximizing the minimum value of all the score differences, as stated in the function above. A detailed example of how we obtain the score difference is given in Fig. <xref rid="Fig5" ref-type="fig">5</xref>.<fig id="Fig5"><label>Fig. 5</label><caption><p>Example of the score difference derivation</p></caption><graphic xlink:href="13321_2021_502_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par31">The example <bold><italic>SP</italic></bold> in Fig. <xref rid="Fig5" ref-type="fig">5</xref> provides “polyvinyl alcohol” as <italic>ChemicalName</italic> and “PVA” as <italic>Abbreviation</italic>. There are two candidates returned, the ground truth Poly(vinyl alcohol) and the wrongly mapped Poly(vinyl acetate). Since both candidates can be abbreviated as “PVA”, algorithm #5 and #6 return both candidates. However, algorithm #9 and #10 can only return the ground truth because Poly(vinyl alcohol) has the same BOCed and BOC-alphed chemical name as the input <italic>ChemicalName</italic>. Therefore, the score difference is the sum of the weights assigned to algorithm #9 and #10, i.e. <bold><italic>w</italic></bold><sub>9</sub> and <bold><italic>w</italic></bold><sub>10</sub>. It is worth noting that algorithm #2 does not find the ground truth due to the existence of the parentheses in the standard name highlighting the need for algorithms #9 and #10 using BOC.</p>
      <p id="Par32">We select the widely used Generalized Reduced Gradient (GRG) nonlinear method for optimization. We also apply a ten-fold validation to the optimization problem in which the 160 <bold><italic>x</italic></bold>’s are randomly divided into ten groups. For each iteration, we omit a group of 16 <bold><italic>x</italic></bold> vectors and conduct optimization on the <bold><italic>w</italic></bold> vector using the remaining 144 <bold><italic>x</italic></bold> vectors. We then use the omitted <bold><italic>x</italic></bold> vectors for validation each time and enforce that the minimum score of the omitted <bold><italic>x</italic></bold> vectors must be positive to pass. This process is repeated ten times.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results</title>
    <sec id="Sec7">
      <title>Optimization</title>
      <p id="Par33">The results of the optimization and ten-fold validation are summarized in Table <xref rid="Tab4" ref-type="table">4</xref>.<table-wrap id="Tab4"><label>Table 4</label><caption><p>Results of weight vector optimization and ten-fold validation</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Fold</th><th align="left"><bold><italic>w</italic></bold><sub>1</sub></th><th align="left"><bold><italic>w</italic></bold><sub>2</sub></th><th align="left"><bold><italic>w</italic></bold><sub>3</sub></th><th align="left"><bold><italic>w</italic></bold><sub>4</sub></th><th align="left"><bold><italic>w</italic></bold><sub>5</sub></th><th align="left"><bold><italic>w</italic></bold><sub>6</sub></th><th align="left"><bold><italic>w</italic></bold><sub>7</sub></th><th align="left"><bold><italic>w</italic></bold><sub>8</sub></th><th align="left"><bold><italic>w</italic></bold><sub>9</sub></th><th align="left"><bold><italic>w</italic></bold><sub>10</sub></th><th align="left"><bold><italic>w</italic></bold><sub>11</sub></th><th align="left"><bold><italic>w</italic></bold><sub>12</sub></th><th align="left">Min training score</th><th align="left">Ten-fold test score</th></tr></thead><tbody><tr><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">0.8</td></tr><tr><td align="left">2</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">2.4</td></tr><tr><td align="left">3</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">2.4</td></tr><tr><td align="left">4</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">0.8</td></tr><tr><td align="left">5</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0</td><td align="left">0</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">2</td><td align="left">1</td><td align="left">0</td></tr><tr><td align="left">6</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">1</td><td align="left">1</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">− 1</td></tr><tr><td align="left">7</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">0.8</td></tr><tr><td align="left">8</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">2</td></tr><tr><td align="left">9</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">1.6</td></tr><tr><td align="left">10</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">1</td><td align="left">0.8</td><td align="left">0.8</td><td align="left">0</td><td align="left">0</td><td align="left">1.2</td><td align="left">1.2</td><td align="left">1</td><td align="left">2</td><td align="left">0.8</td><td align="left">1.6</td></tr></tbody></table></table-wrap></p>
      <p id="Par34">The <bold><italic>w</italic></bold> values in Table <xref rid="Tab4" ref-type="table">4</xref> are the converged weight factors. For each iteration, the minimum training score is the minimum score difference in the 144 <bold><italic>x</italic></bold> vectors used for optimization, while the ten-fold test score is the minimum score difference in the omitted 16 <bold><italic>x</italic></bold> vectors used for validation. The results show that all but iterations 5 and 6 converge to a consistent set of weight factors <italic>w</italic>* = {1, 1, 1, 1, 0.8, 0.8, 0, 0, 1.2, 1.2, 1, 2} with positive ten-fold test score. In contrast, the ten-fold test score of iteration 5 and 6 are non-positive, which means that within the 16 omitted cases, at least one wrongly mapped chemical name has a score that is higher or equal to the ground truth. If we adopt the converged weight factors in iterations 5 and 6, we know that ChemProps will return wrong chemical names in these cases. Our next step is to check the validity of <italic>w</italic>* over the training data in iterations 5 and 6 by recomputing the minimum training score and the ten-fold test score of the two iterations when the original converged weight factors are replaced with <italic>w</italic>*. Positive values for both updated scores indicate that we can consider <italic>w</italic>* a feasible solution to our optimization problem on the training set. <italic>w</italic>* works for the iteration 5, whose min training score decreases from 1 to 0.8 and ten-fold test score increases from 0 to 0.8. <italic>w</italic>* also works for the iteration 6, whose min training score remains the same at 0.8 and ten-fold score increases from − 1 to 1.6. Therefore, we have shown that <italic>w</italic>* is a feasible solution on the training set.</p>
      <p id="Par35">The final step is to verify that <italic>w</italic>* also works for the 54 <bold><italic>SP</italic></bold>s from the test set. We configure ChemProps algorithm section to use <italic>w</italic>* and feed the 54 <bold><italic>SP</italic></bold>s to the API. All <bold><italic>SP</italic></bold>s have the correct mapping returned, indicating <italic>w</italic>* is a feasible solution to our optimization problem. Note that <italic>w*</italic> assigns zero weight to algorithm #7 and #8, which are <italic>TradeName</italic> related. It shows trade names are at this point not an important mapping feature. However, we retain them in the overall framework as the weight factors will continue to evolve through the presented optimization pipeline as ChemProps grows. It is also noted that due to the source of NanoMine data being mostly published literature, none of the current <bold><italic>SP</italic></bold>s, training or test, contain <italic>SMILES</italic>. That is why the weight of algorithm 1 is the same as the initial value in any iteration. We assume <italic>SMILES</italic> as a chemical identifier is reliable if provided. We keep the weight for algorithm #1 as one and as more data enters the system with SMILES fields, the coefficients will evolve.</p>
    </sec>
    <sec id="Sec8">
      <title>Example of API access for ChemProps</title>
      <p id="Par36">In this example we introduce how to use python to access ChemProps API. More examples for accessing by Javascript, Java, Go and PHP are provided (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>). The package requirement includes requests, which can be installed through “pip install requests” in the command line. Users must login into NanoMine platform by InCommon or OneLink accounts to request for tokens needed for API calls. Procedures to apply for the account and to request for tokens are provided elsewhere (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>). Once the token is obtained, users can use the following scripts to use ChemProps API and search, for example, polystyrene:<graphic position="anchor" xlink:href="13321_2021_502_Figa_HTML" id="MO10"/></p>
      <p id="Par37">As guided in Table <xref rid="Tab1" ref-type="table">1</xref>, users can replace the corresponding payload parameters with their values. Optional parameters like <italic>Abbreviation</italic>, <italic>TradeName</italic>, and <italic>SMILES</italic> can be removed from the payload in the previous example.</p>
    </sec>
    <sec id="Sec9">
      <title>Example of GUI access for ChemProps</title>
      <p id="Par38">In addition to the ChemProps API, we also developed a Graphical User Interface (GUI) for users that are not familiar with API calls. We make the GUI open for users without an InCommon or OneLink account. Figure <xref rid="Fig6" ref-type="fig">6</xref> shows the ChemProps GUI.<fig id="Fig6"><label>Fig. 6</label><caption><p>The ChemProps Graphical User Interface [<xref ref-type="bibr" rid="CR35">35</xref>]</p></caption><graphic xlink:href="13321_2021_502_Fig6_HTML" id="MO6"/></fig></p>
      <p id="Par39">Users can select search for either polymer or filler and put the keywords into the corresponding text boxes. For polymer search, a convenient quick search box is enabled, where users can input any one of the chemical name, abbreviation, SMILES or trade name to do the search. An extra feature as compared to the API call is that the chemical structure and formula [<xref ref-type="bibr" rid="CR29">29</xref>] will be displayed on the page when a result is found in ChemProps polymer database. If no results are found in ChemProps, the page will display a warning message “No results found. Admin alerted to update the database. Please try again in a week.” with an error code 404.</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Discussion</title>
    <p id="Par40">ChemProps is a hub that acknowledges the large number of variations of names for polymers, merges those aliases in an intelligent and systematic way, and speaks the languages that both computer and materials scientists understand. Apart from its potential in Materials Informatics in the future, it can be useful to the materials science community immediately. Similar to the example of Reaxys, widely used chemical databases like ChEBI use text search for chemicals by default, which brings inconsistency in the results.<xref ref-type="fn" rid="Fn3">3</xref></p>
    <p id="Par42">With ChemProps, those chemical databases can comb their polymer data and remove the duplicates as needed.</p>
    <p id="Par43">Another immediate usage of ChemProps is to convert common polymer names to uSMILES. Since the introduction of SMILES, major polymer related chemical databases gradually support the more accurate “search by SMILES” function. However, many researchers do not read or speak SMILES. This language barrier stops users from utilizing the more advanced searching functionalities. ChemProps can act as a bridge to enable general chemical name querying in those databases instead of using the complicated SMILES. A general workflow could be (1) users input chemical names in the search box of those databases as usual (2) the search function makes an API call to ChemProps (3) ChemProps returns the result including the uSMILES (4) the search function uses the returned uSMILES for accurate searching. We must point out that since SMILES are software generated, it has different flavors. To reduce the impact of those software generated flavors, ChemProps uses uSMILES throughout the system. So ChemProps returns uSMILES only. To use ChemProps as a bridge for querying by SMILES, it is recommended that our potential collaborators also use uSMILES generated by the SMILES translation module of ChemProps to be consistent with ChemProps such that the returned value of an API call to ChemProps can be used in query directly.</p>
    <p id="Par44">Beyond the original purpose of ChemProps, we have discovered that a robust solution to the polymer indexing problem in NanoMine has led to the solutions of related problems. For example, the amount of filler in a composite system can be expressed by mass fraction or volume fraction, which are convertible if the densities of the polymer matrix and the filler are available. However, such data are not typically provided in publications. By standardizing the polymer and filler names, we have been able to use ChemProps to automatically populate the density data to initiate the mass fraction – volume fraction conversion process. Now that the naming issue is solved, there are yet other automation agents can be enabled beyond the mass fraction – volume fraction conversion agent. For example, an autonomic inference agent that populates storage modulus and loss modulus for polymers can be written readily to deploy. Single-value properties that do not vary significantly within the same polymer class like dielectric constants in the polymer database prepared by Huan et al. [<xref ref-type="bibr" rid="CR30">30</xref>] can also be readily integrated into ChemProps thanks to its ability to resolve polymer names in different forms and flexible data ingestion design. Beyond properties, we can couple with another effort to produce better polymer indexing entitled BigSMILES [<xref ref-type="bibr" rid="CR16">16</xref>] by ingesting the BigSMILES representations that were specifically designed for polymer systems into the ChemProps database to provide another machine-readable representation in the output of the ChemProps API.</p>
    <p id="Par45">An emerging machine-readable format of chemical mixtures are valuable to Materials Informatics, especially polymer composite data resources like NanoMine since mixtures have a significant presence throughout the processing steps [<xref ref-type="bibr" rid="CR31">31</xref>]. However, currently polymers need to be defined by names or database identifiers due to the size of macromolecules as stated by the authors. ChemProps could help with the issue since it standardizes polymer names and provides the associated uSMILES, which is machine-readable. In line with the effort to describe the processing steps, a recent work named PolyName2Structure [<xref ref-type="bibr" rid="CR32">32</xref>] seeks to convert polymer name representations to monomer structures, predict the polymerization pathway and identify the reaction groups. In addition to IUPAC names and source-based names, PolyName2Structure also accepts common names by passing it to an in-house dictionary to resolve the structures. PolyName2Structure can expand the range of feasible common names by making an API call to ChemProps.</p>
  </sec>
  <sec id="Sec11">
    <title>Conclusion</title>
    <p id="Par46">In this work, we propose a twelve algorithm based mapping methodology named ChemProps that is optimized to solve a polymer indexing issue which routinely impedes the progress of Materials Informatics for polymeric based systems. ChemProps acknowledges the large number of variations of names for polymers, merges those aliases in an intelligent and systematic way, and speaks the languages that both computer and materials scientists understand. A cloud-based design makes ChemProps not only reliable but also easy for admins to add data and expand properties. With the RESTful API, users can access the powerful service with a few simple lines of HTTP request or through the user-friendly graphical user interface powered by ChemProps API with quick search function enabled.</p>
    <p id="Par47">To ensure the accuracy of ChemProps, we assign a weight factor to each algorithm to generate scores for candidate chemical names and optimize them using the data from NanoMine. We favor the cases when ground truth chemical names have a higher score than other candidate chemical names as the correct mapping will be returned. Therefore, our goal is to maximize the score difference between the ground truth and other candidate chemical names. To further reduce the computational problem, we maximize the minimum value of the score difference between the ground truth chemical name and the other candidate chemical names. Ten-fold validation is utilized on the training data points to prevent overfitting issues. We configured ChemProps with the converged set of weight factors using training data and tested it on the test-set searching packages. A 100% test accuracy is achieved. The weight factors of two algorithms related with trade names currently converge to zero, showing that trade name might not be an important mapping feature at present. However, we retain the two algorithms in the overall framework since the weight factors will evolve through the same optimization pipeline as ChemProps grows. In the current set of data, we use 166 searching packages (each corresponding to a unique polymer) as training data, retaining 54 searching packages for testing. It is important to note that ChemProps is continuously growing and the living algorithm presented here will be continuously run to update the weighting functions as new polymers are added to the system.</p>
    <p id="Par48">We believe ChemProps can contribute to the community in several ways. First, other polymer databases can use ChemProps to comb their data and remove duplicate entries. Second, other polymer databases that enables the more accurate “search by SMILES” function can allow users to input common human-readable names while using ChemProps as a translator through API calls to conduct SMILES search in the backend. Third, the easy-to-update design makes ChemProps a good tool to auto-populate polymer properties, which is useful to enable a growing array of automated agents for materials data resources.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec12">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13321_2021_502_MOESM1_ESM.docx">
            <caption>
              <p><bold>Additional file 1.</bold> Detailed instructions on how to access ChemProps API.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>PMMA</term>
        <def>
          <p id="Par2">Poly(methyl methacrylate)</p>
        </def>
      </def-item>
      <def-item>
        <term>IUPAC</term>
        <def>
          <p id="Par3">International Union of Pure and Applied Chemistry</p>
        </def>
      </def-item>
      <def-item>
        <term>SMILES</term>
        <def>
          <p id="Par4">Simplified Molecular-Input Line-Entry System</p>
        </def>
      </def-item>
      <def-item>
        <term>InChI</term>
        <def>
          <p id="Par5">International Chemical Identifier</p>
        </def>
      </def-item>
      <def-item>
        <term>API</term>
        <def>
          <p id="Par6">Application Programming Interface</p>
        </def>
      </def-item>
      <def-item>
        <term>REST</term>
        <def>
          <p id="Par7">REpresentational State Transfer</p>
        </def>
      </def-item>
      <def-item>
        <term>uSMILES</term>
        <def>
          <p id="Par8">Kekule unique SMILES</p>
        </def>
      </def-item>
      <def-item>
        <term>BOW</term>
        <def>
          <p id="Par9">Bag-Of-Word notation</p>
        </def>
      </def-item>
      <def-item>
        <term>BOC</term>
        <def>
          <p id="Par10">Bag-Of-Character notation</p>
        </def>
      </def-item>
      <def-item>
        <term>SP</term>
        <def>
          <p id="Par11">Searching Package</p>
        </def>
      </def-item>
      <def-item>
        <term>GRG</term>
        <def>
          <p id="Par12">Generalized Reduced Gradient</p>
        </def>
      </def-item>
      <def-item>
        <term>GUI</term>
        <def>
          <p id="Par13">Graphical User Interface</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par16">Results for “polymethyl methacrylate” counts 3974, while results for Poly(methyl-methacrylate) counts 1 on Reaxys. Note that the quotation marks here are part of the searching term.</p>
    </fn>
    <fn id="Fn2">
      <label>2</label>
      <p id="Par21">The “fil” option for filler search will be described elsewhere.</p>
    </fn>
    <fn id="Fn3">
      <label>3</label>
      <p id="Par41">5 entries were found by searching for Poly(methyl-methacrylate), while 52 entries were found by searching for polymethyl methacrylate on ChEBI.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Erik Daughtrey and Tolulomo Fateye for building the RESTful API service for ChemProps. We would like to thank group members of Brinson Advanced Materials Lab at Duke University for ideas on refining the mapping algorithms.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>BH: design and implementation, AL: data preparation, CB: supervision. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>The authors gratefully acknowledge support of the NSF CSSI program (OAC-1835677).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The source code of ChemProps and a copy of the raw data are openly available at <ext-link ext-link-type="uri" xlink:href="https://github.com/Duke-MatSci/ChemProps">https://github.com/Duke-MatSci/ChemProps</ext-link>. The ChemProps GUI is available at <ext-link ext-link-type="uri" xlink:href="https://materialsmine.org/nm#/ChemProps">https://materialsmine.org/nm#/ChemProps</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par49">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Agrawal</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Choudhary</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Perspective: Materials informatics and big data: realization of the “fourth paradigm” of science in materials science</article-title>
        <source>APL Mater</source>
        <year>2016</year>
        <pub-id pub-id-type="doi">10.1063/1.4946894</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rajan</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Materials informatics: the materials “gene” and Big Data</article-title>
        <source>Annu Rev Mater Res</source>
        <year>2015</year>
        <pub-id pub-id-type="doi">10.1146/annurev-matsci-070214-021132</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Himanen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Geurts</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Foster</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Rinke</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <source>Data-driven materials science: status, challenges, and perspectives</source>
        <year>2019</year>
        <publisher-loc>Sci</publisher-loc>
        <publisher-name>Adv</publisher-name>
        <fpage>6</fpage>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Webb</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Jackson</surname>
            <given-names>NE</given-names>
          </name>
          <name>
            <surname>Gil</surname>
            <given-names>PS</given-names>
          </name>
          <name>
            <surname>de Pablo</surname>
            <given-names>JJ</given-names>
          </name>
        </person-group>
        <article-title>Targeted sequence design within the coarse-grained polymer genome</article-title>
        <source>Sci Adv</source>
        <year>2020</year>
        <pub-id pub-id-type="doi">10.1126/sciadv.abc6216</pub-id>
        <?supplied-pmid 33087352?>
        <pub-id pub-id-type="pmid">33087352</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ramprasad</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Batra</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pilania</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Machine learning in materials informatics: Recent applications and prospects</article-title>
        <source>NPJ Comput Mater</source>
        <year>2017</year>
        <pub-id pub-id-type="doi">10.1038/s41524-017-0056-5</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tchoua</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ajith</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hong</surname>
            <given-names>Z</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Active learning yields better training data for scientific named entity recognition</article-title>
        <source>eScience</source>
        <year>2019</year>
        <volume>2019</volume>
        <fpage>126</fpage>
        <lpage>135</lpage>
        <pub-id pub-id-type="doi">10.1109/eScience.2019.00021</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Audus</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>De Pablo</surname>
            <given-names>JJ</given-names>
          </name>
        </person-group>
        <article-title>Polymer informatics: opportunities and challenges</article-title>
        <source>ACS Macro Lett</source>
        <year>2017</year>
        <volume>6</volume>
        <fpage>1078</fpage>
        <lpage>1082</lpage>
        <pub-id pub-id-type="doi">10.1021/acsmacrolett.7b00228</pub-id>
        <?supplied-pmid 29201535?>
        <pub-id pub-id-type="pmid">29201535</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Reaxys. <ext-link ext-link-type="uri" xlink:href="https://www.reaxys.com">https://www.reaxys.com</ext-link></mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Bolton EE, Wang Y, Thiessen PA, Bryant SH (2008) Chapter 12 PubChem: Integrated Platform of Small Molecules and Biological Activities. In: Annual Reports in Computational Chemistry</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>de Matos</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Alcántara</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Dekker</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Chemical entities of biological interest: an update</article-title>
        <source>Nucleic Acids Res</source>
        <year>2009</year>
        <pub-id pub-id-type="doi">10.1093/nar/gkp886</pub-id>
        <?supplied-pmid 19854951?>
        <pub-id pub-id-type="pmid">19854951</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Weisgerber</surname>
            <given-names>DW</given-names>
          </name>
        </person-group>
        <source>Chemical abstracts service chemical registry system: History, scope, and impacts</source>
        <year>1997</year>
        <publisher-loc>Sci</publisher-loc>
        <publisher-name>J Am Soc Inf</publisher-name>
        <fpage>48</fpage>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Williams</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Ekins</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Tkachenko</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Towards a gold standard: Regarding quality in public domain chemistry databases and approaches to improving the situation</article-title>
        <source>Drug Discov Today</source>
        <year>2012</year>
        <volume>17</volume>
        <fpage>685</fpage>
        <lpage>701</lpage>
        <pub-id pub-id-type="doi">10.1016/j.drudis.2012.02.013</pub-id>
        <?supplied-pmid 22426180?>
        <pub-id pub-id-type="pmid">22426180</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weininger</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>SMILES, a chemical language and information system: 1: introduction to methodology and encoding rules</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>1988</year>
        <pub-id pub-id-type="doi">10.1021/ci00057a005</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heller</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>McNaught</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Stein</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>InChI—The worldwide chemical structure identifier standard</article-title>
        <source>J Cheminform.</source>
        <year>2013</year>
        <volume>5</volume>
        <fpage>78</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-5-7</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Akhondi</surname>
            <given-names>SA</given-names>
          </name>
          <name>
            <surname>Kors</surname>
            <given-names>JA</given-names>
          </name>
          <name>
            <surname>Muresan</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Consistency of systematic chemical identifiers within and between small-molecule databases</article-title>
        <source>J Cheminform</source>
        <year>2012</year>
        <volume>4</volume>
        <fpage>1</fpage>
        <pub-id pub-id-type="doi">10.1186/1758-2946-4-35</pub-id>
        <pub-id pub-id-type="pmid">22236646</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>TS</given-names>
          </name>
          <name>
            <surname>Coley</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Mochigase</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>BigSMILES: a structurally-based line notation for describing macromolecules</article-title>
        <source>ACS Cent Sci</source>
        <year>2019</year>
        <volume>5</volume>
        <fpage>1523</fpage>
        <lpage>1531</lpage>
        <pub-id pub-id-type="doi">10.1021/acscentsci.9b00476</pub-id>
        <?supplied-pmid 31572779?>
        <pub-id pub-id-type="pmid">31572779</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">OPTIMADE - Open Databases Integration for Materials Design. <ext-link ext-link-type="uri" xlink:href="https://www.optimade.org/">https://www.optimade.org/</ext-link></mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Taylor</surname>
            <given-names>RH</given-names>
          </name>
          <name>
            <surname>Rose</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Toher</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A RESTful API for exchanging materials data in the AFLOWLIB.org consortium</article-title>
        <source>Comput Mater Sci</source>
        <year>2014</year>
        <volume>93</volume>
        <fpage>178</fpage>
        <lpage>192</lpage>
        <pub-id pub-id-type="doi">10.1016/j.commatsci.2014.05.014</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gossett</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Toher</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Oses</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>AFLOW-ML: A RESTful API for machine-learning predictions of materials properties</article-title>
        <source>Comput Mater Sci</source>
        <year>2018</year>
        <volume>152</volume>
        <fpage>134</fpage>
        <lpage>145</lpage>
        <pub-id pub-id-type="doi">10.1016/j.commatsci.2018.03.075</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">ChemProps API. <ext-link ext-link-type="uri" xlink:href="https://materialsmine.org/nmr/api/chemprops">https://materialsmine.org/nmr/api/chemprops</ext-link></mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Online SMILES Translator and Structure File Generator. <ext-link ext-link-type="uri" xlink:href="https://cactus.nci.nih.gov/translate/index.html">https://cactus.nci.nih.gov/translate/index.html</ext-link></mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weininger</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Weininger</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Weininger</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>SMILES. 2. Algorithm for Generation of Unique SMILES Notation</article-title>
        <source>J Chem Inf Comput Sci</source>
        <year>1989</year>
        <volume>29</volume>
        <fpage>97</fpage>
        <lpage>101</lpage>
        <pub-id pub-id-type="doi">10.1021/ci00062a008</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chandrasekaran</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Huan</surname>
            <given-names>TD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Polymer genome: a data-powered polymer informatics platform for property predictions</article-title>
        <source>J Phys Chem C</source>
        <year>2018</year>
        <volume>122</volume>
        <fpage>17575</fpage>
        <lpage>17585</lpage>
        <pub-id pub-id-type="doi">10.1021/acs.jpcc.8b02913</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">SMILES_standardize_API. <ext-link ext-link-type="uri" xlink:href="https://github.com/bingyinh/SMILES_standardize_API">https://github.com/bingyinh/SMILES_standardize_API</ext-link></mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Online Materials Information Resource—MatWeb. <ext-link ext-link-type="uri" xlink:href="http://www.matweb.com/">http://www.matweb.com/</ext-link></mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">CROW. <ext-link ext-link-type="uri" xlink:href="http://www.polymerdatabase.com/">http://www.polymerdatabase.com/</ext-link></mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Alger M (2017) Polymer Science Dictionary. Springer Science &amp; Business Media</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Jin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zhou</surname>
            <given-names>ZH</given-names>
          </name>
        </person-group>
        <article-title>Understanding bag-of-words model: A statistical framework</article-title>
        <source>Int J Mach Learn Cybern</source>
        <year>2010</year>
        <pub-id pub-id-type="doi">10.1007/s13042-010-0001-0</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Probst</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Reymond</surname>
            <given-names>JL</given-names>
          </name>
        </person-group>
        <article-title>SmilesDrawer: parsing and drawing SMILES-encoded molecular structures using client-side JavaScript</article-title>
        <source>J Chem Inf Model</source>
        <year>2018</year>
        <pub-id pub-id-type="doi">10.1021/acs.jcim.7b00425</pub-id>
        <?supplied-pmid 30114367?>
        <pub-id pub-id-type="pmid">30114367</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huan</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Mannodi-Kanakkithodi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A polymer dataset for accelerated property prediction and design</article-title>
        <source>Sci Data</source>
        <year>2016</year>
        <volume>3</volume>
        <fpage>1</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1038/sdata.2016.12</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Clark</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>McEwen</surname>
            <given-names>LR</given-names>
          </name>
          <name>
            <surname>Gedeck</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bunin</surname>
            <given-names>BA</given-names>
          </name>
        </person-group>
        <article-title>Capturing mixture composition: an open machine-readable format for representing mixed substances</article-title>
        <source>J Cheminform</source>
        <year>2019</year>
        <volume>11</volume>
        <fpage>1</fpage>
        <lpage>17</lpage>
        <pub-id pub-id-type="doi">10.1186/s13321-019-0357-4</pub-id>
        <pub-id pub-id-type="pmid">30604073</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>P-H</given-names>
          </name>
          <name>
            <surname>Hsiao</surname>
            <given-names>Y</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Essential step toward mining big polymer data: polyname2structure, mapping polymer names to structures</article-title>
        <source>ACS Appl Polym Mater</source>
        <year>2020</year>
        <volume>2</volume>
        <fpage>3107</fpage>
        <lpage>3113</lpage>
        <pub-id pub-id-type="doi">10.1021/acsapm.0c00273</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">SID 319065734—PubChem. <ext-link ext-link-type="uri" xlink:href="https://pubchem.ncbi.nlm.nih.gov/substance/319065734#section=Depositor-Supplied-Synonyms">https://pubchem.ncbi.nlm.nih.gov/substance/319065734#section=Depositor-Supplied-Synonyms</ext-link></mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">polystyrene polymer (CHEBI:61642). <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:61642">https://www.ebi.ac.uk/chebi/searchId.do?chebiId=CHEBI:61642</ext-link></mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <mixed-citation publication-type="other">NanoMine Nanocomposites Data Resource—ChemProps. <ext-link ext-link-type="uri" xlink:href="https://materialsmine.org/nm#/chemprops">https://materialsmine.org/nm#/chemprops</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>

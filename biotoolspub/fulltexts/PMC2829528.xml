<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2829528</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-11-71</article-id>
    <article-id pub-id-type="pmid">20122279</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-11-71</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Multiple structure alignment and consensus identification for proteins</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="A1">
        <name>
          <surname>Ilinkin</surname>
          <given-names>Ivaylo</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>iilinkin@gettysburg.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Ye</surname>
          <given-names>Jieping</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>jieping.ye@asu.edu</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Janardan</surname>
          <given-names>Ravi</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>janardan@cs.umn.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Computer Science, Gettysburg College, Gettysburg, PA, USA</aff>
    <aff id="I2"><label>2</label>Department of Computer Science and Engineering, Arizona State University, Tempe, AZ, USA</aff>
    <aff id="I3"><label>3</label>Department of Computer Science and Engineering, University of Minnesota, Minneapolis, MN, USA</aff>
    <pub-date pub-type="collection">
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>2</day>
      <month>2</month>
      <year>2010</year>
    </pub-date>
    <volume>11</volume>
    <fpage>71</fpage>
    <lpage>71</lpage>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>8</month>
        <year>2009</year>
      </date>
      <date date-type="accepted">
        <day>2</day>
        <month>2</month>
        <year>2010</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright ©2010 Ilinkin et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2010</copyright-year>
      <copyright-holder>Ilinkin et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/11/71"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>An algorithm is presented to compute a multiple structure alignment for a set of proteins and to generate a consensus (pseudo) protein which captures common substructures present in the given proteins. The algorithm represents each protein as a sequence of triples of coordinates of the alpha-carbon atoms along the backbone. It then computes iteratively a sequence of transformation matrices (i.e., translations and rotations) to align the proteins in space and generate the consensus. The algorithm is a heuristic in that it computes an approximation to the optimal alignment that minimizes the sum of the pairwise distances between the consensus and the transformed proteins.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>Experimental results show that the algorithm converges quite rapidly and generates consensus structures that are visually similar to the input proteins. A comparison with other coordinate-based alignment algorithms (MAMMOTH and MATT) shows that the proposed algorithm is competitive in terms of speed and the sizes of the conserved regions discovered in an extensive benchmark dataset derived from the HOMSTRAD and SABmark databases.</p>
        <p>The algorithm has been implemented in C++ and can be downloaded from the project's web page. Alternatively, the algorithm can be used via a web server which makes it possible to align protein structures by uploading files from local disk or by downloading protein data from the RCSB Protein Data Bank.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>An algorithm is presented to compute a multiple structure alignment for a set of proteins, together with their consensus structure. Experimental results show its effectiveness in terms of the quality of the alignment and computational cost.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>This paper presents an algorithm to compute a multiple structure alignment for a set of proteins and to generate a consensus structure. The algorithm is called MAPSCI, which stands for <bold>M</bold>ultiple <bold>A</bold>lignment of <bold>P</bold>rotein <bold>S</bold>tructures and <bold>C</bold>onsensus <bold>I</bold>dentification. MAPSCI addresses the problem of global structure alignment, which has also been considered by CE-MC [<xref ref-type="bibr" rid="B1">1</xref>], MAMMOTH [<xref ref-type="bibr" rid="B2">2</xref>], and MATT [<xref ref-type="bibr" rid="B3">3</xref>]. Specifically, MAPSCI computes an approximation to the multiple structure alignment that minimizes the so-called <italic>Sum-of-Consensus distance (SC-distance)</italic>, i.e. the sum of the pairwise distances between the consensus structure and each protein in the set (see the <bold>Methods </bold>section for the precise definition of <italic>SC-distance</italic>). Our experiments show that MAPSCI converges quite rapidly and produces alignments that compare favorably with the alignments produced by MAMMOTH and MATT. The consensus structures generated by MAPSCI are visually quite similar to the input proteins. Although the consensus structures are not real proteins, they could be used, for instance, as templates to perform fast searches through protein structure databases, such as the Protein Data Dank [<xref ref-type="bibr" rid="B4">4</xref>], to identify structurally similar proteins.</p>
    <p>MAPSCI has similar structure to the algorithm of Ye and Janardan [<xref ref-type="bibr" rid="B5">5</xref>]. However, MAPSCI works directly on the coordinates of the <italic>C</italic><sub><italic>α </italic></sub>atoms and produces true alignments; by contrast, the algorithm in [<xref ref-type="bibr" rid="B5">5</xref>] requires that the backbone vectors be translated to the origin, hence information about the relative positions of the <italic>C</italic><sub><italic>α </italic></sub>atoms in ℝ<sup>3 </sup>is lost and as a result the algorithm does not generate true alignments. The <bold>Methods </bold>section presents the mathematical and algorithmic framework of MAPSCI and provides the complete details where the two algorithms differ significantly; when there is an overlap the reader is referred to publication [<xref ref-type="bibr" rid="B5">5</xref>].</p>
  </sec>
  <sec>
    <title>Implementation</title>
    <p>MAPSCI represents the input proteins and the consensus as sequences of triples of coordinates of the alpha-carbon (or <italic>C</italic><sub><italic>α</italic></sub>) atoms along the backbone. It then computes a correspondence between the coordinate triples of the <italic>C</italic><sub><italic>α </italic></sub>atoms in the different protein structures by choosing one of the proteins as the initial consensus and applying an algorithm that is analogous to the center-star method for multiple sequence alignment [<xref ref-type="bibr" rid="B6">6</xref>]. Next, MAPSCI derives a set of translation and rotation matrices that are optimal for the computed correspondence and uses these to align the structures in space via rigid motions and obtain the new consensus. The process is repeated until the change in <italic>SC-distance </italic>is less than a prescribed threshold. This iterative process is well-defined as it is shown in the <bold>Methods </bold>section that the <italic>SC-distance </italic>is non-increasing from one iteration to the next. The computation of the optimal translations and rotations and the new consensus is itself an iterative process that both uses the current consensus and generates simultaneously a new one.</p>
    <p>Table <xref ref-type="table" rid="T1">1</xref> summarizes the algorithm in pseudocode form. The various steps in the pseudocode are described in more detail in the <bold>Methods </bold>section. The algorithm has been implemented in C++ and can be used stand-alone or run remotely via a web-based interface. The source code of the implementation is available for download from the project's website (see the <bold>Availability </bold>section). The implementation is organized as a library of algorithms and simple data structures that can be integrated in other projects. Examples of using the library within a C++ program are given in the README file of the source code distribution. The iterative process described above employs pairwise structure alignment as an intermediate step and the parameters that control the execution of the multiple alignment algorithm are the parameters for the underlying pairwise alignment algorithm. The current implementation uses the pairwise alignment algorithm described in [<xref ref-type="bibr" rid="B7">7</xref>]; however, other algorithms for pairwise structure alignment can be used instead.</p>
    <table-wrap id="T1" position="float">
      <label>Table 1</label>
      <caption>
        <p>Algorithm MAPSCI: Multiple Alignment of Protein Structures and Consensus Identification</p>
      </caption>
      <table frame="hsides" rules="groups">
        <tbody>
          <tr>
            <td align="left">1. Choose initial consensus structure <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i1.gif"/></inline-formula> from <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i2.gif"/></inline-formula>. <italic>i </italic>← 0. <italic>SC</italic><sup>0 </sup>← ∞.</td>
          </tr>
          <tr>
            <td align="left">2. Do</td>
          </tr>
          <tr>
            <td align="left">3.    if <italic>i </italic>= 0 then compute pairwise structure alignment between <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i3.gif"/></inline-formula> and every <italic>P</italic><sub><italic>j</italic></sub>.</td>
          </tr>
          <tr>
            <td align="left">4.    else use standard dynamic programming to align <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i3.gif"/></inline-formula> with every <italic>P</italic><sub><italic>j</italic></sub>.</td>
          </tr>
          <tr>
            <td align="left">5.    <italic>i </italic>← <italic>i </italic>+ 1.</td>
          </tr>
          <tr>
            <td align="left">6.    Compute correspondence <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i4.gif"/></inline-formula> from the above alignments (either pairwise or dynamic programming) using center-star-like method.</td>
          </tr>
          <tr>
            <td align="left">7.    Compute optimal translation matrix <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i5.gif"/></inline-formula> and optimal rotation matrix <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i6.gif"/></inline-formula> iteratively (Theorems 2 and 3). Transform <italic>P</italic><sub><italic>j </italic></sub>by <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i6.gif"/></inline-formula> and <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i5.gif"/></inline-formula> for every <italic>j </italic>to obtain multiple structure alignment ℳ<sup><italic>i</italic></sup>. <italic>SC</italic><sup><italic>i </italic></sup>← <italic>SC</italic>(ℳ<sup><italic>i</italic></sup>).</td>
          </tr>
          <tr>
            <td align="left">8.    Post-process ℳ<sup><italic>i </italic></sup>by removing all columns consisting of only gaps.</td>
          </tr>
          <tr>
            <td align="left">9.    Compute new consensus structure <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i3.gif"/></inline-formula> from ℳ<sup><italic>i </italic></sup>by Theorem 1.</td>
          </tr>
          <tr>
            <td align="left">10. Until <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i7.gif"/></inline-formula>.//<italic>η </italic>is a user-specified threshold (currently set at 0.0001)</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
  </sec>
  <sec>
    <title>Results</title>
    <sec>
      <title>Web Server</title>
      <p>MAPSCI has been incorporated into a web server for remote access over the Internet (see Figure <xref ref-type="fig" rid="F1">1</xref>). This tool allows for protein structures to be uploaded from files on the local disk or retrieved from the Protein Data Bank (PDB) [<xref ref-type="bibr" rid="B4">4</xref>] by specifying their PDB ids. The results from the alignment are annotated in the standard NBRF/PIR format, which can be previewed online via the Jalview applet [<xref ref-type="bibr" rid="B8">8</xref>]. Integrated with the server is the molecular viewer applet Chemis 3D [<xref ref-type="bibr" rid="B9">9</xref>], which allows for visualization of the aligned protein structures.</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>Web server screenshots</bold>. Screenshots from the web server: main page (top left), results page (bottom left), structure view (top right), sequence view (bottom right).</p>
        </caption>
        <graphic xlink:href="1471-2105-11-71-1"/>
      </fig>
      <p>The web server offers a simple interface that allows for remote access from within other software. Table <xref ref-type="table" rid="T2">2</xref> gives an example of using the programming language Python to retrieve the transformed coordinates (in PDB format) for the multiple alignment of the structures from the HOMSTRAD CUB family. Additional examples and the complete set of options for remote access can be found at the server web page (see the <bold>Availability </bold>section).</p>
      <table-wrap id="T2" position="float">
        <label>Table 2</label>
        <caption>
          <p>Remote access to the server</p>
        </caption>
        <table frame="hsides" rules="groups">
          <tbody>
            <tr>
              <td align="left">
                <monospace>import urllib2</monospace>
              </td>
            </tr>
            <tr>
              <td align="left">
                <monospace>url = "http://www.geom-comp.umn.edu/mapsci/align.cgi?wsget=pdb&amp;rcsb=1sfp+1spp:A+1spp:B"</monospace>
              </td>
            </tr>
            <tr>
              <td align="left">
                <monospace>server = urllib2.urlopen(url)</monospace>
              </td>
            </tr>
            <tr>
              <td align="left">
                <monospace>output = file("alignment.zip", 'wb')</monospace>
              </td>
            </tr>
            <tr>
              <td align="left">
                <monospace>output.write(server.read())</monospace>
              </td>
            </tr>
            <tr>
              <td align="left">
                <monospace>output.close()</monospace>
              </td>
            </tr>
            <tr>
              <td align="left">
                <monospace>server.close()</monospace>
              </td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>An example of using the programming language Python to retrieve the transformed coordinates (in PDB format) for the multiple alignment of the structures from the HOMSTRAD CUB family. Additional examples and the complete set of options for remote access can be found at the server web page (see the <bold>Availability </bold>section).</p>
        </table-wrap-foot>
      </table-wrap>
    </sec>
    <sec>
      <title>Comparison</title>
      <p>As discussed earlier, there are many algorithms for multiple structure alignment. In general, it is difficult to make comparisons among them, since they operate under different sets of assumptions and problem formulations. We compare MAPSCI to two recent algorithms -- MAMMOTH [<xref ref-type="bibr" rid="B2">2</xref>] and MATT [<xref ref-type="bibr" rid="B3">3</xref>] -- which also work with coordinate triples, but employ a different objective function. Our experiments show that MAPSCI is competitive in terms of the sizes of the so-called conserved regions and runs significantly faster than the other two algorithms, hence can potentially scale to much larger datasets.</p>
      <p>The comparison is based on two benchmark datasets. The first dataset is compiled from the HOMSTRAD database [<xref ref-type="bibr" rid="B10">10</xref>], which is a curated database of structure-based alignments for homologous protein families and is considered the "gold" standard. The benchmark dataset consists of the 232 HOMSTRAD families that have at least 4 structures. The second dataset consists of the <italic>superfamily set </italic>in the SABmark database [<xref ref-type="bibr" rid="B11">11</xref>] (version 1.65). It contains 425 families with low to intermediate sequence similarity. The metrics considered in the comparison are the <italic>strict core </italic>(or just <italic>core</italic>) and the core RMSD. This follows the experimental setup in [<xref ref-type="bibr" rid="B2">2</xref>] where <italic>strict core </italic>is defined as "the set of positions with 100% conservation, and within 4.0 Å of each other in the final structural alignment in 3D". A similar metric is discussed in [<xref ref-type="bibr" rid="B12">12</xref>] and [<xref ref-type="bibr" rid="B13">13</xref>]. The results are summarized in Figures <xref ref-type="fig" rid="F2">2</xref> and <xref ref-type="fig" rid="F3">3</xref>, which show the pairwise comparisons (MAPSCI, MAMMOTH), (MAPSCI, MATT) in terms of the core size (expressed in percent of the length of the shortest protein) and the core RMSD. Table <xref ref-type="table" rid="T3">3</xref> provides a comparison of the average core size and average core RMSD for the three methods on the benchmark datasets.</p>
      <table-wrap id="T3" position="float">
        <label>Table 3</label>
        <caption>
          <p>Benchmark datasets performance</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th/>
              <th align="center" colspan="2">HOMSTRAD</th>
              <th align="center" colspan="2">SABmark</th>
            </tr>
            <tr>
              <th/>
              <th align="center">Average Core (%)</th>
              <th align="center">Average Core RMSD</th>
              <th align="center">Average Core (%)</th>
              <th align="center">Average Core RMSD</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="center">MAPSCI</td>
              <td align="center">70.99</td>
              <td align="center">0.83<sub>(<italic>n </italic>= 232)</sub></td>
              <td align="center">48.89</td>
              <td align="center">1.00<sub>(<italic>n </italic>= 385)</sub></td>
            </tr>
            <tr>
              <td align="center">MAMMOTH</td>
              <td align="center">66.74</td>
              <td align="center">0.83<sub>(<italic>n </italic>= 231)</sub></td>
              <td align="center">44.55</td>
              <td align="center">0.99<sub>(<italic>n </italic>= 394)</sub></td>
            </tr>
            <tr>
              <td align="center">MATT</td>
              <td align="center">63.79</td>
              <td align="center">0.85<sub>(<italic>n </italic>= 229)</sub></td>
              <td align="center">47.88</td>
              <td align="center">0.99<sub>(<italic>n </italic>= 420)</sub></td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <p>Statistics for the performance of the three methods on the benchmark datasets. The subscripts in the <italic>Average Core RMSD </italic>columns indicate how many values were used in computing the statistics, since the algorithms failed to compute a core for some of the data sets. For the <italic>Average Core (%) </italic>columns all reported values were used and therefore <italic>n </italic>= 232 and <italic>n </italic>= 425 for the HOMSTRAD and SABmark datasets, respectively.</p>
        </table-wrap-foot>
      </table-wrap>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>HOMSTRAD dataset comparison</bold>. Comparison based on the <italic>strict core </italic>metric (expressed in percent of the size of the shortest protein) and the <italic>strict core RMSD </italic>on the HOMSTRAD dataset.</p>
        </caption>
        <graphic xlink:href="1471-2105-11-71-2"/>
      </fig>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>SABmark dataset comparison</bold>. Comparison based on the <italic>strict core </italic>metric (expressed in percent of the size of the shortest protein) and the <italic>strict core RMSD </italic>on the SABmark dataset.</p>
        </caption>
        <graphic xlink:href="1471-2105-11-71-3"/>
      </fig>
      <p>In general, it is difficult to compare two algorithms based on these two metrics (larger cores tend to have larger RMSD). However, on the HOMSTRAD dataset MAPSCI outperformed MAMMOTH in 45% of the test cases and MATT in 59% of the test cases by computing alignments with both larger cores and smaller core RMSD. (MAMMOTH and MATT were better than MAPSCI on both metrics combined in 6% and 5% of the test cases, respectively). MAPSCI computed cores for all 232 test cases, while MAMMOTH failed to compute a core for one family (<italic>bowman</italic>), and MATT failed to compute a core for three families (<italic>asp</italic>, <italic>lipocalin</italic>, and <italic>tln</italic>).</p>
      <p>On the SABmark dataset MAPSCI computed larger cores with better RMSD in 39% of the test cases when compared with MAMMOTH and in 37% of the test cases against against MATT. (MAMMOTH and MATT were better than MAPSCI on the two metrics combined in 15% and 26% of the test cases, respectively.) MATT was the most robust of the three algorithms and failed to compute a core in only five test cases; MAPSCI failed on 40 families and MAMMOTH failed on 31 families.</p>
      <p>MAPSCI took only 151 seconds to align the 425 families in the SABmark dataset and 85 seconds to align the families in the HOMSTRAD dataset. MAMMOTH took 1100 seconds on the SABmark dataset and 649 seconds on the HOMSTRAD dataset. By contrast, MATT took several hours to process the two datasets. Figure <xref ref-type="fig" rid="F4">4</xref> shows the actual time taken by MAPSCI for all families in the benchmark dataset in terms of the total number of residues per family. The algorithm converges very quickly and can potentially scale to large datasets. The machine used for all experiments reported in the paper runs Ubuntu Linux 8.04 and has 4 GB of RAM with Intel<sup>®</sup>Core™2 Quad CPU Q9550 @ 2.83 GHz. MAMMOTH and MATT were run with their default parameter settings.</p>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Execution time</bold>. The actual execution time of MAPSCI for all families in the benchmark datasets plotted in terms of the total number of residues per family.</p>
        </caption>
        <graphic xlink:href="1471-2105-11-71-4"/>
      </fig>
    </sec>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <p>In this section, we provide the mathematical and algorithmic framework underlying MAPSCI. As mentioned earlier MAPSCI shares common elements with the algorithm in [<xref ref-type="bibr" rid="B5">5</xref>], and therefore, we follow the same general outline. However, we only present the full details when there are significant differences and refer the reader to [<xref ref-type="bibr" rid="B5">5</xref>] when there is an overlap.</p>
    <sec>
      <title>Multiple Structure Alignment: Problem Formulation</title>
      <p>Let {<italic>P</italic><sub>1</sub>, <italic>P</italic><sub>2</sub>, ⋯, <italic>P</italic><sub><italic>k</italic></sub>} be the given set of <italic>K </italic>proteins and let <italic>l</italic><sub><italic>i </italic></sub>be the number of <italic>C</italic><sub><italic>α </italic></sub>atoms along the backbone of protein <italic>P</italic><sub><italic>i</italic></sub>. We represent <italic>P</italic><sub><italic>i </italic></sub>as a sequence of <italic>coordinate triples </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-71-i8.gif"/></inline-formula>, 1 ≤ <italic>j ≤ l</italic><sub><italic>i</italic></sub>, that represent the coordinates of the <italic>j</italic>th <italic>C</italic><sub><italic>α </italic></sub>atom of <italic>P</italic><sub><italic>i </italic></sub>along the backbone. (As is customary [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B15">15</xref>], we consider only the backbone, not the amino acid residues themselves.) Let <italic>P</italic><sub>0 </sub>= <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i9.gif"/></inline-formula>, ⋯, <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i10.gif"/></inline-formula> denote the <italic>consensus structure</italic>, of length <italic>l</italic><sub>0</sub>.</p>
      <p>A <italic>correspondence </italic>of the <italic>K </italic>proteins in <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i11.gif"/></inline-formula> and the consensus structure <italic>P</italic><sub>0 </sub>can be represented as a matrix <italic>H </italic>= (<inline-formula><inline-graphic xlink:href="1471-2105-11-71-i12.gif"/></inline-formula>)<sub>0 ≤ <italic>i </italic>≤ <italic>K</italic>,1 ≤ <italic>j </italic>≤ <italic>L</italic></sub>, for some <italic>L </italic>≥ max<sub>0 ≤ <italic>i </italic>≤ <italic>K</italic></sub>{<italic>l</italic><sub><italic>i</italic></sub>}, where <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i12.gif"/></inline-formula> is either a coordinate triple belonging to the <italic>i</italic>th protein or a <italic>gap</italic>. Distances between coordinate triples are based on the squared distance between them in ℝ<sup>3</sup>. The distance between a coordinate triple and a gap is called a <italic>gap penalty</italic>, and is denoted by <italic>ρ</italic>.</p>
      <p>The results reported in this paper use 16.0 for the value of the gap penalty.</p>
      <p>Let <italic>G</italic><sub><italic>i </italic></sub>= (<italic>H</italic><sub><italic>i </italic></sub>- <italic>T</italic><sub><italic>i</italic></sub>)<italic>R</italic><sub><italic>i </italic></sub>= (<italic>H</italic><sub><italic>i </italic></sub>- <italic>e </italic>× <italic>t</italic><sub><italic>i</italic></sub>)<italic>R</italic><sub><italic>i</italic></sub>, for <italic>i &gt;</italic>0, where <italic>R</italic><sub><italic>i </italic></sub>∈ ℝ<sup>3 × 3 </sup>is some rotation matrix, <italic>T</italic><sub><italic>i </italic></sub>= <italic>e </italic>× <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i13.gif"/></inline-formula> is the translation matrix, <italic>e </italic>∈ ℝ<sup><italic>L </italic>× 1 </sup>is a vector with 1 in each entry, and <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i13.gif"/></inline-formula> ∈ ℝ<sup>1 × 3 </sup>is a translation vector. (The transformation of a gap remains a gap.) Note that <italic>P</italic><sub>0 </sub>remains unchanged, i.e. <italic>G</italic><sub>0 </sub>= <italic>H</italic><sub>0</sub>.</p>
      <p>Under the multiple structure alignment we define the <italic>distance between the consensus structure P</italic><sub>0 </sub><italic>and protein P</italic><sub><italic>j </italic></sub>as <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i14.gif"/></inline-formula>, where <italic>d</italic>(·, ·) denotes the following distance function:<disp-formula><graphic xlink:href="1471-2105-11-71-i15.gif"/></disp-formula></p>
      <p>The distance between <italic>P</italic><sub>0 </sub>and <italic>P</italic><sub><italic>j </italic></sub>can be represented compactly as <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i16.gif"/></inline-formula>, where ||·||<sub><italic>F </italic></sub>denotes the <italic>Frobenius norm </italic>[<xref ref-type="bibr" rid="B16">16</xref>], with the additional convention that the squared difference between a coordinate triple and a gap is <italic>ρ</italic><sup>2</sup>. The total distance of the <italic>K </italic>proteins to the consensus structure, called the <italic>Sum-of-Consensus distance</italic>, or <italic>SC-distance</italic>, is then defined as<disp-formula id="bmcM1"><label>(1)</label><graphic xlink:href="1471-2105-11-71-i17.gif"/></disp-formula></p>
      <p>Intuitively, the <italic>SC-distance </italic>measures how well the consensus structure represents the given set of <italic>K </italic>proteins. A similar distance function is used in [<xref ref-type="bibr" rid="B17">17</xref>], where each protein is represented as a set of vectors in ℝ<sup>4</sup>.</p>
      <p>We can now define the multiple structure alignment problem as follows:</p>
    </sec>
    <sec>
      <title>Multiple Structure Alignment Problem</title>
      <p><italic>Given a set </italic>{<italic>P</italic><sub>1</sub>, <italic>P</italic><sub>2</sub>, ⋯, <italic>P</italic><sub><italic>K</italic></sub>} <italic>of protein structures, compute a transformation (i.e., rotation and translation) for each protein, and generate a consensus structure P</italic><sub>0</sub>, <italic>such that the resulting multiple structure alignment has minimum SC-distance as defined in Equation (1)</italic>.</p>
      <p>In the next section, we present a heuristic for this problem. Our algorithm approximates the global minimum of the <italic>SC-distance </italic>by iterative refinement of an initial multiple structure alignment and converges to a local minimum.</p>
      <sec>
        <title>Step I: Choice of the initial consensus structure</title>
        <p>We consider four choices for initial consensus structure: (i) <italic>median protein</italic>, i.e. the protein of median length; (ii) <italic>center protein</italic>, i.e. the protein that minimizes the sum of the pairwise distances to all the other proteins; (iii) the <italic>minmax </italic>protein, i.e. the protein with the smallest maximum pairwise distance; and (iv) <italic>maxcore protein</italic>, i.e. the protein that generates the largest initial core. (The first three choices for initial consensus are considered in [<xref ref-type="bibr" rid="B5">5</xref>].)</p>
        <p>The experimental results in Figure <xref ref-type="fig" rid="F5">5</xref> indicate that MAPSCI is quite robust in terms of the choice of initial consensus. However, the data suggests that the <italic>median protein </italic>occasionally leads to alignments with very low core size, and therefore is the least reliable choice. The other three choices seem to work well in practice, although they are more expensive computationally. The results reported in the <bold>Comparison </bold>section use the <italic>maxcore protein </italic>as the initial consensus.</p>
        <fig id="F5" position="float">
          <label>Figure 5</label>
          <caption>
            <p><bold>Consensus choice comparison</bold>. Comparison between the sizes of the aligned cores for different choices of initial consensus protein.</p>
          </caption>
          <graphic xlink:href="1471-2105-11-71-5"/>
        </fig>
      </sec>
      <sec>
        <title>Step II: Compute an initial correspondence</title>
        <p>After we determine the consensus structure <italic>P</italic><sub>0 </sub>in Step I, the <italic>K </italic>- 1 pairwise structure alignments between <italic>P</italic><sub>0 </sub>and <italic>P</italic><sub><italic>i </italic></sub>≠ <italic>P</italic><sub>0</sub>, for <italic>i </italic>= 1, ⋯, <italic>K</italic>, are computed using the algorithm in [<xref ref-type="bibr" rid="B7">7</xref>]. (Other pairwise structure alignment algorithms could also be used instead.) The <italic>K </italic>- 1 pairwise structure are combined in Line 6 of the algorithm (Table <xref ref-type="table" rid="T1">1</xref>) using the <italic>center-star-like </italic>method described in [<xref ref-type="bibr" rid="B5">5</xref>].</p>
      </sec>
      <sec>
        <title>Step III: Compute optimal rotation and translation matrices and consensus structure</title>
        <p>Given a correspondence <italic>H </italic>= (<inline-formula><inline-graphic xlink:href="1471-2105-11-71-i12.gif"/></inline-formula>) the objective is to find the rotation and translation matrices <italic>R</italic><sub><italic>j </italic></sub>and <italic>T</italic><sub><italic>j</italic></sub>, for <italic>j </italic>= 1, ⋯, <italic>K</italic>, and the consensus structure <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula>, such that the sum of the pairwise alignment distances between <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula> and each (transformed) <italic>P</italic><sub><italic>j </italic></sub>is minimum; i.e. we wish to minimize<disp-formula id="bmcM2"><label>(2)</label><graphic xlink:href="1471-2105-11-71-i19.gif"/></disp-formula></p>
        <p>Direct minimization of <italic>S </italic>over <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula>, and the <italic>T</italic><sub><italic>j</italic></sub>'s and <italic>R</italic><sub><italic>j</italic></sub>'s seems difficult. Instead, we propose an iterative procedure for minimizing <italic>S</italic>. Within each iteration, the minimization of <italic>S </italic>is carried out in two stages that are interleaved: (1) computation of the optimal <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula> for given <italic>R</italic><sub><italic>j</italic></sub>'s and <italic>T</italic><sub><italic>j</italic></sub>'s, and (2) computation of the optimal <italic>R</italic><sub><italic>j</italic></sub>'s and <italic>T</italic><sub><italic>j</italic></sub>'s for a given <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula>.</p>
      </sec>
      <sec>
        <title>Computation of the optimal consensus structure</title>
        <p>First, we show how to compute the consensus structure, given the rotation and translation matrices <italic>R</italic><sub><italic>j</italic></sub>'s and <italic>T</italic><sub><italic>j</italic></sub>'s, as stated in the following theorem:</p>
        <p><bold>Theorem 1</bold>. <italic>Assume that the correspondence is represented as a matrix H </italic>= (<inline-formula><inline-graphic xlink:href="1471-2105-11-71-i12.gif"/></inline-formula>) <italic>and </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula> = (<italic>J</italic><sub>1</sub>, ⋯, <italic>J</italic><sub><italic>L</italic></sub>)<sup><italic>T </italic></sup><italic>is the optimal consensus structure. For each column j, let I</italic><sub><italic>n </italic></sub><italic>be the set of indices of proteins with a non-gap in the jth column and I</italic><sub><italic>g </italic></sub><italic>be the set of indices of proteins with a gap in the jth column. Then </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-71-i20.gif"/></inline-formula>, <italic>in the jth position of the optimal consensus structure equals either the coordinate triple </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-71-i21.gif"/></inline-formula>, <italic>or a gap</italic>.</p>
        <p><italic>Proof</italic>. For each <italic>j</italic>, we consider two distinct cases for <italic>J</italic><sub><italic>j</italic></sub>: either it is a coordinate triple, <italic>x</italic>, or a gap. If <italic>J</italic><sub><italic>j </italic></sub>is a gap, then the sum of the distances between <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula> and each protein <italic>P</italic><sub><italic>j </italic></sub>along the <italic>j</italic>th column is |<italic>I</italic><sub><italic>n</italic></sub>|<italic>ρ</italic><sup>2</sup>, where <italic>ρ </italic>is the gap penalty. If <italic>J</italic><sub><italic>j </italic></sub>is a coordinate triple, <italic>x</italic>, then the sum of the distances between <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula> and each protein <italic>P</italic><sub><italic>j </italic></sub>along the <italic>j</italic>th column is <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i22.gif"/></inline-formula>, which is minimized, for <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i23.gif"/></inline-formula>. Therefore, if <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i24.gif"/></inline-formula>, then the optimal choice for <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i20.gif"/></inline-formula> is the coordinate triple <italic>x</italic><sub><italic>j</italic></sub>; otherwise, the optimal choice for <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i20.gif"/></inline-formula> is a gap.</p>
      </sec>
      <sec>
        <title>Computation of the optimal translation matrix</title>
        <p>In this section, we show how to compute the optimal translation matrix <italic>T</italic><sub><italic>i</italic></sub>, for each <italic>i</italic>, for a given consensus structure <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula>. From Eq. (2), it is clear that the optimal <italic>T</italic><sub><italic>i </italic></sub>and <italic>T</italic><sub><italic>j</italic></sub>, for <italic>i </italic>≠ <italic>j </italic>are independent of each other. Hence, in the following, we focus on the computation of <italic>T</italic><sub><italic>i</italic></sub>, for a specific <italic>i</italic>. The translation matrix <italic>T</italic><sub><italic>i </italic></sub>can be decomposed as <italic>T</italic><sub><italic>i </italic></sub>= <italic>e </italic>× <italic>t</italic><sub><italic>i</italic></sub>, where <italic>t</italic><sub><italic>i </italic></sub>∈ <italic>R</italic><sup>1 × 3 </sup>is the translation vector.</p>
        <p>As mentioned earlier, the transformation of a gap remains a gap. Hence the computation of the translation and rotation matrices is independent of the mismatches (i.e., where at least one of the two elements being compared is a gap). We can thus simplify the computation by removing all mismatches in the alignment between the consensus structure <inline-formula><inline-graphic xlink:href="1471-2105-11-71-i18.gif"/></inline-formula> and the <italic>i</italic>th protein <italic>P</italic><sub><italic>i</italic></sub>.</p>
        <p>Let <italic>A </italic>∈ ℝ<sup><italic>n </italic>× 3 </sup>and <italic>B </italic>∈ ℝ<sup><italic>n </italic>× 3 </sup>consist of the coordinate triples from the consensus structure and the <italic>i</italic>th protein, respectively, after removing the mismatches. (Here <italic>n </italic>is the number of matches between the consensus structure and the <italic>i</italic>th protein, i.e., comparison of two non-gaps). Without loss of generality, assume <italic>e</italic><sup><italic>T</italic></sup><italic>A </italic>= [0, 0, 0], i.e., the coordinate triples in the consensus protein are centered at the origin. The optimal translation vector is the one that matches the centroids of the coordinate triple vectors from <italic>A </italic>and <italic>B </italic>as stated in the following theorem:</p>
        <p><bold>Theorem 2</bold>. <italic>Let A and B be defined as above. Assume that e</italic><sup><italic>T</italic></sup><italic>A </italic>= [0, 0, 0]. <italic>Then for any rotation matrix R</italic><sub><italic>i</italic></sub>, <italic>the optimal translation vector t</italic><sub><italic>i </italic></sub><italic>for minimizing </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-71-i25.gif"/></inline-formula><italic>is given by </italic><inline-formula><inline-graphic xlink:href="1471-2105-11-71-i26.gif"/></inline-formula>.</p>
        <p>More details can be found in [<xref ref-type="bibr" rid="B18">18</xref>].</p>
      </sec>
      <sec>
        <title>Computation of the optimal rotation matrix</title>
        <p>Next, consider the rotation matrix <italic>R</italic><sub><italic>i</italic></sub>. We can assume that the coordinate triple vectors from both A and B are centered at the origin. It follows that<disp-formula><graphic xlink:href="1471-2105-11-71-i27.gif"/></disp-formula></p>
        <p>Hence the minimum of <italic>S</italic><sub><italic>i </italic></sub>is obtained when trace (<italic>A</italic><sup><italic>T</italic></sup><italic>BR</italic><sub><italic>i</italic></sub>) is maximized.</p>
        <p>Let the Singular Value Decomposition (SVD) [<xref ref-type="bibr" rid="B16">16</xref>] of <italic>A</italic><sup><italic>T</italic></sup><italic>B </italic>be <italic>U</italic>Σ<italic>V</italic><sup><italic>T</italic></sup>, where <italic>U </italic>and <italic>V </italic>are orthogonal and Σ is diagonal.</p>
        <p><bold>Theorem 3</bold>. <italic>The optimal rotation matrix R</italic><sub><italic>i </italic></sub><italic>that minimizes S</italic><sub><italic>i </italic></sub>= ||<italic>A </italic>- <italic>BR</italic><sub><italic>i</italic></sub>||<sup>2 </sup><italic>is given by R</italic><sub><italic>i </italic></sub>= <italic>UWV</italic><sup><italic>T</italic></sup>, <italic>where W </italic>= <italic>diag</italic>(1, 1, 1), <italic>if det</italic>(<italic>UV</italic><sup><italic>T</italic></sup>) = 1, <italic>and W </italic>= <italic>diag</italic>(1, 1, -1), <italic>if det</italic>(<italic>UV</italic><sup><italic>T</italic></sup>) = -1.</p>
        <p>More details can be found in [<xref ref-type="bibr" rid="B18">18</xref>].</p>
      </sec>
      <sec>
        <title>Convergence of the algorithm</title>
        <p>In this section, we show that MAPSCI converges, by showing that the SC-distance is non-increasing from one iteration to the next.</p>
        <p>Recall that from Eq. (1),<disp-formula><graphic xlink:href="1471-2105-11-71-i28.gif"/></disp-formula></p>
        <p>Line 4 in MAPSCI decreases the distance between the consensus structure and each of the <italic>K </italic>proteins, since the dynamic programming produces an alignment with minimum cost. By the property of the center-star-like method, Line 6 leaves unchanged the distance between the consensus structure and each of the <italic>K </italic>proteins. By Theorems 2 and 3, the transformations computed in Line 7 do not increase the distance between the consensus structure and the <italic>j</italic>th protein, for each <italic>j</italic>. It is clear that Line 8 does not change the pairwise distance, since the cost for aligning two gaps is zero. Finally, by Theorem 1, Line 9 does not increase the sum of the pairwise distances from the consensus structure to the other proteins. Hence, the SC-distance is non-increasing, and the algorithm converges.</p>
      </sec>
      <sec>
        <title>Complexity analysis</title>
        <p>Let <italic>n </italic>be the maximum length of the <italic>K </italic>proteins. Then the overall running time of the algorithm is <italic>O</italic>(<italic>K</italic><sup>2</sup><italic>n</italic><sup>2</sup>). (If we choose the initial consensus structure as the protein of median length, the running time is <italic>O</italic>(<italic>Kn</italic><sup>2 </sup>+ <italic>K</italic><sup>2</sup><italic>n</italic>).) The run time analysis is similar to that of the algorithm in [<xref ref-type="bibr" rid="B5">5</xref>].</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>Conclusions</title>
    <p>We have presented an algorithm, called MAPSCI, to compute a multiple structure alignment for a set of proteins, together with their consensus structure. The algorithm represents the input proteins and the consensus as sequences of coordinate triples and computes an approximation to the optimal multiple structure alignment that minimizes the sum of the pairwise distances between the consensus and each input protein. Experimental results on a benchmark datasets derived from the HOMSTRAD and SABmark databases show that the algorithm compares favorably with existing algorithms for multiple structure alignment (MAMMOTH and MATT).</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>• Project name: MAPSCI</p>
    <p>• Project home page: <monospace><ext-link ext-link-type="uri" xlink:href="http://www.geom-comp.umn.edu/mapsci">http://www.geom-comp.umn.edu/mapsci</ext-link></monospace></p>
    <p>• Operating system(s): Platform-independent</p>
    <p>• Programming language: C++</p>
    <p>• License: Free BSD</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>JY contributed to the design of the algorithm and experiments, and drafting of the manuscript. II contributed to the experiments and the implementation of the algorithm. RJ contributed to the refinement of the algorithm and drafting of the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>Research of JY and RJ was sponsored, in part, by the Army High Performance Computing Research Center under the auspices of the Department of the Army, Army Research Laboratory cooperative agreement number DAAD19-01-2-0014, the content of which does not necessarily reflect the position or the policy of the government, and no official endorsement should be inferred.</p>
    <p>Adam Isom contributed to the implementation of the web-based tool.</p>
    <p>The authors thank the MAMMOTH and MATT teams for sharing their source code.</p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="other">
        <name>
          <surname>Guda</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Scheeff</surname>
          <given-names>ED</given-names>
        </name>
        <name>
          <surname>Bourne</surname>
          <given-names>PE</given-names>
        </name>
        <name>
          <surname>Shindyalov</surname>
          <given-names>IN</given-names>
        </name>
        <article-title>A new algorithm for the alignment of multiple protein structures using Monte Carlo optimization</article-title>
        <source>Proceedings of the Pacific Symposium on Biocomputing: 3-7 January 2001; Hawaii</source>
        <year>2001</year>
        <fpage>275</fpage>
        <lpage>286</lpage>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Lupyan</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Leo-Macias</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Ortiz</surname>
          <given-names>AR</given-names>
        </name>
        <article-title>A new progressive-iterative algorithm for multiple structure alignment</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>3255</fpage>
        <lpage>3263</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti527</pub-id>
        <pub-id pub-id-type="pmid">15941743</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Menke</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Berger</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Cowen</surname>
          <given-names>L</given-names>
        </name>
        <article-title>Matt: Local Flexibility Aids Protein Multiple Structure Alignment</article-title>
        <source>PLoS Computational Biology</source>
        <year>2008</year>
        <volume>4</volume>
        <fpage>0088</fpage>
        <lpage>0099</lpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.0040010</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Berman</surname>
          <given-names>HM</given-names>
        </name>
        <name>
          <surname>Westbrook</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Feng</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Gilliland</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Bhat</surname>
          <given-names>TN</given-names>
        </name>
        <name>
          <surname>Weissig</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Shindyalov</surname>
          <given-names>IN</given-names>
        </name>
        <name>
          <surname>Bourne</surname>
          <given-names>PE</given-names>
        </name>
        <article-title>The Protein Data Bank</article-title>
        <source>Nucleic Acids Research</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/28.1.235</pub-id>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ye</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Janardan</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Approximate multiple protein structure alignment using the Sum-of-Pairs distance</article-title>
        <source>Journal of Computational Biology</source>
        <year>2004</year>
        <volume>11</volume>
        <issue>5</issue>
        <fpage>986</fpage>
        <lpage>1000</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2004.11.986</pub-id>
        <pub-id pub-id-type="pmid">15700413</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="book">
        <name>
          <surname>Gusfield</surname>
          <given-names>D</given-names>
        </name>
        <source>Algorithms on Strings, Trees, and Sequences: Computer Science and Computational Biology</source>
        <year>1997</year>
        <publisher-name>Cambridge University Press, Cambridge</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ye</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Janardan</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Liu</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Pairwise protein structure alignment based on an orientation-independent backbone representation</article-title>
        <source>Journal of Bioinformatics and Computational Biology</source>
        <year>2004</year>
        <volume>2</volume>
        <issue>4</issue>
        <fpage>699</fpage>
        <lpage>717</lpage>
        <pub-id pub-id-type="doi">10.1142/S021972000400082X</pub-id>
        <pub-id pub-id-type="pmid">15617162</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Waterhouse</surname>
          <given-names>AM</given-names>
        </name>
        <name>
          <surname>Procter</surname>
          <given-names>JB</given-names>
        </name>
        <name>
          <surname>A</surname>
          <given-names>MDM</given-names>
        </name>
        <name>
          <surname>M</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Barton</surname>
          <given-names>GJ</given-names>
        </name>
        <article-title>Jalview Version 2 - a multiple sequence alignment editor and analysis workbench</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>9</issue>
        <fpage>1189</fpage>
        <lpage>1191</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp033</pub-id>
        <pub-id pub-id-type="pmid">19151095</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="other">
        <article-title>Chemis3D: Molecular Viewer Applet</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://chemis.free.fr/mol3d/">http://chemis.free.fr/mol3d/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mizuguchi</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Deane</surname>
          <given-names>CM</given-names>
        </name>
        <name>
          <surname>Blundell</surname>
          <given-names>TL</given-names>
        </name>
        <name>
          <surname>Overington</surname>
          <given-names>JP</given-names>
        </name>
        <article-title>HOMSTRAD: a database of protein structure alignments for homologous families</article-title>
        <source>Protein Science</source>
        <year>1998</year>
        <volume>7</volume>
        <fpage>2469</fpage>
        <lpage>2471</lpage>
        <pub-id pub-id-type="doi">10.1002/pro.5560071126</pub-id>
        <pub-id pub-id-type="pmid">9828015</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>VanWalle</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Lasters</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Wyns</surname>
          <given-names>L</given-names>
        </name>
        <article-title>SABmark - A benchmark for sequence alignment that covers the entire known fold space</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>1267</fpage>
        <lpage>1268</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth493</pub-id>
        <pub-id pub-id-type="pmid">15333456</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Madhusudhanm</surname>
          <given-names>MS</given-names>
        </name>
        <name>
          <surname>Webb</surname>
          <given-names>BM</given-names>
        </name>
        <name>
          <surname>Marti-Renom</surname>
          <given-names>MA</given-names>
        </name>
        <name>
          <surname>Eswar</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Sali</surname>
          <given-names>A</given-names>
        </name>
        <article-title>Alignment of multiple protein structures based on sequence and structure features</article-title>
        <source>Protein Engineering, Design &amp; Selection</source>
        <year>2009</year>
        <volume>22</volume>
        <issue>9</issue>
        <fpage>569</fpage>
        <lpage>574</lpage>
        <pub-id pub-id-type="doi">10.1093/protein/gzp040</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Venclovas</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Zemla</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Fidelis</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Moult</surname>
          <given-names>J</given-names>
        </name>
        <article-title>Comparison of performance in successive CASP experiments</article-title>
        <source>Proteins</source>
        <year>2001</year>
        <volume>45</volume>
        <issue>S5</issue>
        <fpage>163</fpage>
        <lpage>170</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.10053</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Holm</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Sander</surname>
          <given-names>C</given-names>
        </name>
        <article-title>Protein Structure Comparison by Alignment of Distance Matrices</article-title>
        <source>Journal of Molecular Biology</source>
        <year>1993</year>
        <volume>233</volume>
        <fpage>123</fpage>
        <lpage>138</lpage>
        <pub-id pub-id-type="doi">10.1006/jmbi.1993.1489</pub-id>
        <pub-id pub-id-type="pmid">8377180</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="other">
        <name>
          <surname>Singh</surname>
          <given-names>AP</given-names>
        </name>
        <name>
          <surname>Brutlag</surname>
          <given-names>DL</given-names>
        </name>
        <article-title>Hierarchical protein structure superposition using both secondary structure and atomic representation</article-title>
        <source>Proceedings of the Fifth International Conference on Intelligent Systems for Molecular Biology: 21-26 June, 1997; Halkidiki</source>
        <year>1997</year>
        <fpage>284</fpage>
        <lpage>293</lpage>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="book">
        <name>
          <surname>Golub</surname>
          <given-names>GH</given-names>
        </name>
        <name>
          <surname>Van Loan</surname>
          <given-names>CF</given-names>
        </name>
        <source>Matrix Computations</source>
        <year>1996</year>
        <publisher-name>Johns Hopkins University Press, Baltimore</publisher-name>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="other">
        <name>
          <surname>Chew</surname>
          <given-names>LP</given-names>
        </name>
        <name>
          <surname>Kedem</surname>
          <given-names>K</given-names>
        </name>
        <article-title>Finding the consensus shape of a protein family</article-title>
        <source>Proceedings of the Eighteenth Annual ACM Symposium on Computational Geometry: 5-7 June 2002; Barcelona</source>
        <year>2002</year>
        <fpage>64</fpage>
        <lpage>73</lpage>
        <comment>full_text</comment>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Umeyama</surname>
          <given-names>S</given-names>
        </name>
        <article-title>Least-square estimation of transformation parameters between two point patterns</article-title>
        <source>IEEE Transactions on Pattern Analysis and Machine Intelligence</source>
        <year>1991</year>
        <volume>13</volume>
        <issue>4</issue>
        <fpage>376</fpage>
        <lpage>380</lpage>
        <pub-id pub-id-type="doi">10.1109/34.88573</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD with MathML3 v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1-mathml3.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?all-math-mml yes?>
<?use-mml?>
<?properties open_access?>
<?properties manuscript?>
<?origin nihpa?>
<?iso-abbr Neuroimage?>
<?submitter-system nihms?>
<?submitter-canonical-name Elsevier?>
<?submitter-canonical-id ELSEVIERAM?>
<?submitter-userid 8068823?>
<?submitter-authority myNCBI?>
<?submitter-login elsevieram?>
<?submitter-name Elsevier Author Support?>
<?domain nihpa?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-journal-id">9215515</journal-id>
    <journal-id journal-id-type="pubmed-jr-id">20498</journal-id>
    <journal-id journal-id-type="nlm-ta">Neuroimage</journal-id>
    <journal-id journal-id-type="iso-abbrev">Neuroimage</journal-id>
    <journal-title-group>
      <journal-title>NeuroImage</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1053-8119</issn>
    <issn pub-type="epub">1095-9572</issn>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9119143</article-id>
    <article-id pub-id-type="pmid">35051581</article-id>
    <article-id pub-id-type="doi">10.1016/j.neuroimage.2022.118877</article-id>
    <article-id pub-id-type="manuscript">nihpa1787509</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>ciftiTools: A package for reading, writing, visualizing, and manipulating CIFTI files in R</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Pham</surname>
          <given-names>Damon D.</given-names>
        </name>
        <xref rid="A1" ref-type="aff">a</xref>
        <xref rid="CR1" ref-type="corresp">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Muschelli</surname>
          <given-names>John</given-names>
        </name>
        <xref rid="A2" ref-type="aff">b</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mejia</surname>
          <given-names>Amanda F.</given-names>
        </name>
        <xref rid="A1" ref-type="aff">a</xref>
      </contrib>
    </contrib-group>
    <aff id="A1"><label>a</label>Department of Statistics, Indiana University, USA</aff>
    <aff id="A2"><label>b</label>Department of Biostatistics, Johns Hopkins Bloomberg School of Public Health, USA</aff>
    <author-notes>
      <corresp id="CR1"><label>*</label>Corresponding author. <email>ddpham@iu.edu</email> (D.D. Pham).</corresp>
    </author-notes>
    <pub-date pub-type="nihms-submitted">
      <day>12</day>
      <month>4</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <day>15</day>
      <month>4</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>19</day>
      <month>1</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>19</day>
      <month>5</month>
      <year>2022</year>
    </pub-date>
    <volume>250</volume>
    <fpage>118877</fpage>
    <lpage>118877</lpage>
    <permissions>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbyncndlicense">https://creativecommons.org/licenses/by-nc-nd/4.0/</ali:license_ref>
        <license-p>This is an open access article under the CC BY-NC-ND license (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc-nd/4.0/">http://creativecommons.org/licenses/by-nc-nd/4.0/</ext-link>)</license-p>
      </license>
    </permissions>
    <abstract id="ABS1">
      <p id="P1">There is significant interest in adopting surface- and grayordinate-based analysis of MR data for a number of reasons, including improved whole-cortex visualization, the ability to perform surface smoothing to avoid issues associated with volumetric smoothing, improved inter-subject alignment, and reduced dimensionality. The CIFTI grayordinate file format introduced by the Human Connectome Project further advances grayordinate-based analysis by combining gray matter data from the left and right cortical hemispheres with gray matter data from the subcortex and cerebellum into a single file. Analyses performed in grayordinate space are well-suited to leverage information shared across the brain and across subjects through both traditional analysis techniques and more advanced statistical methods, including Bayesian methods. The R statistical environment facilitates use of advanced statistical techniques, yet little support for grayordinates analysis has been previously available in R Indeed, few comprehensive programmatic tools for working with CIFTI files have been available in any language Here, we present the ciftiTools R package, which provides a unified environment for reading, writing, visualizing and manipulating CIFTI files and related data formats. We illustrate ciftiTools’ convenient and user-friendly suite of tools for working with grayordinates and surface geometry data in R, and we describe how ciftiTools is being utilized to advance the statistical analysis of grayordinate-based functional MRI data.</p>
    </abstract>
    <kwd-group>
      <kwd>fMRI</kwd>
      <kwd>Grayordinate</kwd>
      <kwd>Toolbox</kwd>
    </kwd-group>
  </article-meta>
</front>
<body>
  <sec id="S1">
    <label>1.</label>
    <title>Introduction</title>
    <p id="P2">Surface-based analysis of magnetic resonance (MR) data was pioneered by Freesurfer (<xref rid="R14" ref-type="bibr">Fischl, 2012</xref>) and further popularized by the Human Connectome Project (HCP) (<xref rid="R55" ref-type="bibr">Van Essen et al., 2013</xref>). There is significant interest in adopting surface-based analysis for a number of reasons, including improved whole-cortex visualization (<xref rid="R16" ref-type="bibr">Fischl et al., 1999a</xref>; <xref rid="R54" ref-type="bibr">Van Essen, 2012</xref>), mitigating problems associated with volumetric smoothing such as reduced sensitivity and specificity (<xref rid="R10" ref-type="bibr">Coalson et al., 2018</xref>; <xref rid="R8" ref-type="bibr">Brodoehl et al., 2020</xref>), improved inter-subject alignment of cortical folding patterns and functional areas (<xref rid="R16" ref-type="bibr">Fischl et al., 1999b</xref>; <xref rid="R3" ref-type="bibr">Anticevic et al., 2008</xref>; <xref rid="R20" ref-type="bibr">Glasser et al., 2016</xref>), and reduced dimensionality.</p>
    <p id="P3">Until fairly recently, surface-based MR data were only stored in data formats that exclude relevant subcortical and cerebellar gray matter regions of the brain. For example, GIFTI files are a type of surface format that can contain either metric data (e.g. functional MRI [fMRI] timeseries), label data (e.g. a parcellation) or surface geometry data for a particular hemisphere. Incorporating subcortical and/or cerebellar gray matter in an analysis would require pairing the surface data with volumetric data stored in a traditional NIFTI file. To address this limitation and to advance and promote the adoption of “grayordinates” MR data —a term referring collectively to the cortical, subcortical, and cerebellar gray matter —the HCP introduced the CIFTI file format (<xref rid="R21" ref-type="bibr">Glasser et al., 2013</xref>). “CIFTI” is an acronym for the “Connectivity Informatics Technology Initiative.” (The “N” in “NIFTI” stands for “Neuroscience” and the “G” in “GIFTI” stands for “Geometry.”) CIFTI files are a type of NIFTI file with a numeric matrix for all the grayordinates data, paired with an XML header containing information on the size and type of the data, column names, and brain structure labels. CIFTI files are thus a single data representation for all grayordinates. This combined format provides a convenient and compact file structure for users to perform analysis across all gray matter areas of the brain.</p>
    <p id="P4">Grayordinate-based analysis of MR data also facilitates leveraging information shared across (1) individuals, since spatial alignment of functional areas across subjects is improved, and (2) the brain, since distances along the cortex and within specific gray matter structures tend to be inversely related to similarity of functional and structural features. Traditional MR analysis techniques benefit from these properties when adapted to grayordinate space, such as group averaging, geodesic surface smoothing and parcel-constrained volumetric smoothing. Accuracy and power can be further improved through Bayesian statistical techniques, many of which are implemented in the R statistical environment (<xref rid="R43" ref-type="bibr">R Core Team, 2021</xref>). Examples include Markov chain Monte Carlo (<xref rid="R27" ref-type="bibr">Martin et al., 2011</xref>), an interface to the Stan probabilistic programming language (<xref rid="R52" ref-type="bibr">Stan Development Team, 2021b</xref>), Bayesian hierarchical models (<xref rid="R41" ref-type="bibr">Plummer, 2003</xref>), integrated nested Laplace approximation (INLA) for fast and accurate posterior estimation (<xref rid="R44" ref-type="bibr">Rue et al., 2009</xref>), spatial process priors suitable for surface-based modeling (<xref rid="R25" ref-type="bibr">Lindgren and Rue, 2015</xref>), and excursion set approaches useful for performing joint inference across the cortex to leverage spatial information (<xref rid="R6" ref-type="bibr">Bolin and Lindgren, 2016</xref>). However, the ability to use these advanced statistical methods is currently limited by a lack of tools available for working with CIFTI-format and other surface-based neuroimaging data in R.</p>
    <p id="P5">Here, we present the ciftiTools R package, which provides a user-friendly, high-level interface for accessing and analyzing CIFTI and GIFTI data. Specifically, ciftiTools is a suite of tools for reading, writing, visualizing, processing, and manipulating CIFTI data and compatible surface geometries (<xref rid="F1" ref-type="fig">Fig. 1</xref>). It supports three CIFTI intents or file types: “dtseries” (for timeseries data), “dscalar” (for structural, continuously-valued data), and “dlabel” (for parcellations, labels, or categorical data). It also supports GIFTI metric data (analogous to “dtseries” or “dscalar”) and label data (analogous to “dlabel”) for wider applicability to surface-based analysis. We introduce the object class “xifti”, which refers to the combination of metric or label data (traditionally encoded in CIFTI files or GIFTI metric or label files) with surface geometries encoded in GIFTI surface geometry files. This facilitates the visualization, processing, and analysis of surface data, since the data and its geometric organization are contained within a single object. Below, we describe the structure and functionality of the ciftiTools package (<xref rid="S2" ref-type="sec">Section 2</xref>) and demonstrate its use in an example seed correlation analysis (<xref rid="S8" ref-type="sec">Section 3</xref>). We also explain its relationship with other packages and applications (<xref rid="S13" ref-type="sec">Section 4</xref>, summarized in <xref rid="T1" ref-type="table">Table 1</xref>) to illustrate that ciftiTools uniquely provides unified support for reading, writing, plotting, and manipulating CIFTI-format data.</p>
  </sec>
  <sec id="S2">
    <label>2.</label>
    <title>Overview of ciftiTools structure and functionality</title>
    <p id="P6"><xref rid="F1" ref-type="fig">Figure 1</xref> illustrates the general use case for ciftiTools. A “xifti” object can be constructed from either a CIFTI file or a combination of GIFTI metric or label files and a NIFTI file. In either case, two GIFTI surface geometry files may also be included (Panel A). The “xifti” can subsequently be visualized (Panel B), processed and manipulated (Panels C and D), and written back to a file(s) (Panel A). The integration of surface geometry is convenient because surfaces are required for visualizing and smoothing the cortical data, since no cortical spatial information is included in CIFTI files. Subcortical voxel locations and brain structure labels, in contrast, are contained in the CIFTI XML.</p>
    <p id="P7">In this section, we first describe the structure of the “xifti” object class, and then describe the functionality illustrated in each panel of <xref rid="F1" ref-type="fig">Fig. 1</xref> in greater detail. For the sake of brevity we will not catalog every function belonging to each panel, nor will we cover the functions which do not fit into any of the four panels. However, an organized list of the most commonly used functions can be accessed in <xref rid="APP1" ref-type="app">Appendix A</xref> and is reproduced in R with the command help(ciftiTools). A complete, alphabetical list of all ciftiTools functions can be accessed with the command help(package = “ciftiTools”). For each function, more information can be accessed at its help page using the command help(function_name), e.g. help(read_xifti).</p>
    <sec id="S3">
      <label>2.1.</label>
      <title>The “xifti” object class</title>
      <p id="P8"><xref rid="F2" ref-type="fig">Figure 2</xref> illustrates the structure of the “xifti” object class. It is organized as a nested list with three entries at the first level: data, the data matrices for each brain structure; surf, the left and right cortical surface geometries; and meta, the various metadata including medial wall masks (see <xref rid="APP2" ref-type="app">Appendix B</xref> for information about the medial wall), subcortical labels and mask, and CIFTI intent-specific information. If any entry is not present in the “xifti” it will have a value of NULL. Since a “xifti” is a list, its contents can be parsed with $. For example, xii$meta$cifti$intent returns the CIFTI intent of the “xifti” object xii.</p>
      <p id="P9">The left and right cortical surface geometries are themselves objects of class “surf”. A “surf” object is a list with three entries: vertices, faces, and hemisphere. A “surf” object can also exist separately from any “xifti” object, allowing for direct visualization, resampling, and manipulation of surface geometry data in the absence of metric or label data.</p>
      <p id="P10">The function is.xifti can be used to verify that an R object is a correctly-formatted “xifti” object. This validation is especially useful if the user has manually manipulated the data or metadata in a “xifti” and requires it to be correctly formatted, for example if they plan to write it to a file, visualize it, or further process it with ciftiTools.</p>
      <p id="P11">Several S3 methods are implemented in ciftiTools. S3 methods control the behaviors of certain base R functions when applied to objects of a specific class. Currently, “xifti” objects have S3 methods for summary, print, plot, and several mathematical operations. For example, plot(xii) will invoke the functions view_xifti_surface and/or view_xifti_volume, as described in <xref rid="S5" ref-type="sec">Section 2.3</xref>. “surf” objects have S3 methods for summary, print, and plot. For both “xifti” and “surf” objects, summary and print will display an overview of the object’s contents. Other S3 methods for “xifti” and “surf” objects are described in the corresponding subsections below.</p>
    </sec>
    <sec id="S4">
      <label>2.2.</label>
      <title>Reading and writing</title>
      <p id="P12"><xref rid="F1" ref-type="fig">Figure 1 A</xref> shows how the ciftiTools function read_xifti imports CIFTI data into R as a “xifti” object. read_xifti may also import GIFTI surface geometry data alongside the CIFTI data. Any surfaces will be resampled to match the cortical data resolution in the CIFTI, if there is a difference in resolution. The flow of data is reversed when a “xifti” is written out with write_xifti : surfaces, if any, are written to GIFTI files, and everything else is written to a CIFTI file.</p>
      <p id="P13">Two functions, as.xifti and read_xifti2, provide alternative methods for constructing a “xifti” object. as.xifti creates a “xifti” from R data matrices instead of a CIFTI file, allowing the user to store grayordinate data which may not originate from real neuroimaging, e.g. simulated data. For example, with as.xifti the user can simulate data using a number of powerful simulation tools in R, and then format the data as “xifti” grayordinate data. This “xifti” can then be analyzed with ciftiTools, or it can be written to a CIFTI file for analysis or visualization with methods and software outside of R. The other alternative function, read_xifti2, creates a “xifti” from GIFTI metric or label files instead of a CIFTI file. It is provided to allow for greater flexibility in analyses that are focused on the cortical surface specifically, which would not require the CIFTI format.</p>
      <p id="P14">Additional functions related to reading and writing include separate_xifti, which splits a CIFTI file into GIFTI metric or label files for the cortical data and a NIFTI file for the subcortical data, and info_xifti, which reads in only the metadata of a CIFTI file. write_xifti2 does the opposite of read_xifti2 : it writes a “xifti” with surface data to GIFTI metric or label files. And for surfaces, read_surf and write_surf translate between GIFTI surface geometry files and “surf” objects.</p>
      <p id="P15">A “xifti” object can also be written to an RDS data file using saveRDS, and read back in with readRDS, both base R functions. This allows R users to store CIFTI data and GIFTI surfaces in a single file. However, RDS files are generally not compatible with other programming platforms such as MATLAB or Python. Users interested in cross-platform compatibility should instead use write_xifti to generate CIFTI and GIFTI surface geometry files for subsequent use with MATLAB, Python, or other tools (see <xref rid="S23" ref-type="sec">Section 4.4</xref>).</p>
    </sec>
    <sec id="S5">
      <label>2.3.</label>
      <title>Visualization</title>
      <p id="P16"><xref rid="F1" ref-type="fig">Figure 1 B</xref> illustrates how the grayordinates data in a “xifti” object can be visualized with view_xifti. Equivalently, the generic R function plot can be applied to a “xifti” object, since view_xifti is the plot S3 method for “xifti” objects. view_xifti will plot the cortical data with view_xifti_surface and the subcortical data with view_xifti_volume. If the “xifti” object contains both cortical and subcortical data, the two plots will share the same color scale, palette, and color scale limits. view_xifti_surface and view_xifti_volume can also both be called directly. The functions have similar interfaces: for example, they both can produce either interactive widgets or static images exportable to PNG files. However, they differ in a few notable ways, as described below.</p>
      <p id="P17">The view_xifti_surface function produces a 3D rendering of the cortical surface data using the rgl package (<xref rid="R34" ref-type="bibr">Murdoch and Adler, 2021</xref>). By default, the data are plotted on averaged “inflated” surfaces from the HCP included with ciftiTools (<xref rid="R21" ref-type="bibr">Glasser et al., 2013</xref>) unless other surfaces are contained in the “xifti” or provided in the optional function arguments. (The default “inflated” surfaces are shown in <xref rid="F1" ref-type="fig">Fig. 1</xref>; see <xref rid="APP4" ref-type="app">Appendix D</xref> for a list of other surfaces included in ciftiTools). Additional arguments control the color scale type (sequential, diverging, or qualitative); palette and color scale limits; the hemisphere(s) and view(s) (medial and/or lateral) to show; the data column(s) to display; and whether the plot should be interactive or written to a PNG file(s).</p>
      <p id="P18">If an interactive plot is created with view_xifti_surface, the user may click and drag to rotate the surfaces and scroll to resize them. The interactive plot will usually open in an OpenGL window (<xref rid="R49" ref-type="bibr">Shreiner, 2009</xref>) but in specific cases will open in an HTML widget (<xref rid="R56" ref-type="bibr">Vaidyanathan et al., 2020</xref>). The help page help(view_xifti_surface) explains in depth when each is used, but in general, the HTML widget is used only if: multiple measurements are requested (since it can include a slider bar to control the measurement being displayed); the argument widget is set to TRUE; or if the computing platform is not compatible with OpenGL. All three output types (PNG files, OpenGL windows, and HTML widgets) can be embedded in HTML R Markdown documents, and the PNG files can be embedded in PDF R Markdown documents (see <xref rid="APP3" ref-type="app">Appendix C</xref>). Note that for PNG files and HTML widgets, each plot first needs to be rendered in a temporary OpenGL window which will close automatically.</p>
      <p id="P19">The view_xifti_volume function produces a 2D slicewise plot of the subcortical and cerebellar data overlaid on a 2 mm MNI structural template by default (<xref rid="R13" ref-type="bibr">Evans et al., 2012</xref>). It has the same arguments as view_xifti_surface for controlling the measurement(s) being plotted and the interactivity or file saving. The non-interactive plot is based on the overlay function from the oro.nifti package (<xref rid="R58" ref-type="bibr">Whitcher et al., 2011</xref>) and additionally has the same arguments for color scale type, palette, and color scale limits as view_xifti_surface. It also includes arguments to control the anatomical plane and slice indices being shown. The interactive plot is a wrapper to the namesake function of the papayar package (<xref rid="R35" ref-type="bibr">Muschelli, 2016</xref>) and allows the user to scroll through slices along each anatomical axis and read the value at each voxel. The color scale, palette, and color scale limits can be adjusted within the GUI. The non-interactive plot can be exported to a PNG file and then embedded in R Markdown documents (see <xref rid="APP3" ref-type="app">Appendix C</xref>).</p>
      <p id="P20">“surf” objects can also be visualized independently of any “xifti” data using the function view_surf. The plot S3 method for “surf” objects serves as an alias for view_surf. Like view_xifti_surface, view_surf is based on the rg1 package (<xref rid="R34" ref-type="bibr">Murdoch and Adler, 2021</xref>) and includes arguments to control the view(s) to show and whether the plot should be interactive or written to a PNG file.</p>
      <p id="P21">ciftiTools also includes the function view_comp to assist users with displaying multiple PNG files at a time. view_comp could be used to display the data for multiple columns or “xifti” objects all in a grid, or to display corresponding cortical and subcortical plots side-by-side.</p>
    </sec>
    <sec id="S6">
      <label>2.4.</label>
      <title>Processing</title>
      <p id="P22">The Connectome Workbench is a suite of open-source software tools for neuroimaging data designed especially for HCP data (<xref rid="R26" ref-type="bibr">Marcus et al., 2011</xref>). It includes numerous command-line tools that can execute operations on CIFTI files and other data formats. The ciftiTools package provides a convenient interface for a few Workbench commands including two common processing operations, namely resampling and smoothing, as illustrated in <xref rid="F1" ref-type="fig">Fig. 1 C</xref>. Both “xifti” objects and CIFTI files can be directly resampled and smoothed using ciftiTools, as described below. A full list of Workbench commands used by ciftiTools is in <xref rid="S15" ref-type="sec">Section 4.1.1</xref>, and more interfaces to Workbench commands may be implemented in the future based on user needs.</p>
      <p id="P23">To resample cortical data with resample_xifti, the user simply provides the “xifti” object or path to a CIFTI file, along with the target resolution specified in vertices per hemisphere. Other necessary files, such as the spherical geometries in-register with the target and original resolutions, will be generated automatically in a temporary directory. Note that the exact number of vertices after resampling may differ slightly from the target resolution due to the spherical mapping process by which resampling is performed. Also, note that the subcortex and cerebellum are never resampled. If surfaces are included in the “xifti” object or are specified as GIFTI files by the user, they will be resampled along with the CIFTI data matrix to the same target resolution. It is also possible to resample metric, label, and surface geometry GIFTI files with the function resample_gifti and “surf” objects with the function resample_surf.</p>
      <p id="P24">Smoothing can be performed geodesically along the cortical surface and volumetrically for subcortical and cerebellar data using the function smooth_cifti. The user simply provides a “xifti” object or path to a CIFTI file and the full width at half maximum (FWHM) of the smoothing kernel. Cortical geodesic smoothing will be performed based on the default “inflated” surfaces unless other surfaces are included in the “xifti” or provided in the optional function arguments. By default, volumetric smoothing is constrained within each subcortical structure to avoid blurring across regional boundaries. It is also possible to smooth metric GIFTI files with the function smooth_gifti.</p>
      <p id="P25">One consideration for both resample_xifti and smooth_xifti is that they will process a CIFTI file faster than its equivalent “xifti” object. This is because the Connectome Workbench commands operate on CIFTI files, so “under the hood” of both functions operating on a “xifti” object, that object must be written to a CIFTI file, resampled or smoothed, and then read back in. Writing a “xifti” object is trivially fast for CIFTI data with one or few measurements, but can be slow for a high-resolution CIFTI with many measurements, such as fMRI timeseries data. In the latter case, it is therefore more efficient to directly resample or smooth the CIFTI file before reading it in, if possible.</p>
    </sec>
    <sec id="S7">
      <label>2.5.</label>
      <title>Math and manipulation</title>
      <p id="P26">As illustrated in <xref rid="F1" ref-type="fig">Fig. 1 D</xref>, ciftiTools provides several convenient functions for altering “xifti” objects while preserving a valid “xifti” object structure. These fall into two categories: manipulation and math. <italic toggle="yes">Manipulation</italic> functions explicitly alter one or multiple “xifti” objects. Several of these are listed on the left of Panel D (see <xref rid="APP1" ref-type="app">Appendix A</xref> for a full list with descriptions). They include functions to add or remove brain structures, subset the data matrix or combine it with others, etc. Manipulation functions reduce the need for users to manually edit individual brain structure entries within a “xifti” object while ensuring that the metadata is updated appropriately to preserve a valid “xifti” format. <italic toggle="yes">Math</italic> functions perform mathematical operations, such as arithmetic and univariate transformations, on just the data matrix of one or more “xifti” objects. These are base R functions that can be applied directly to “xifti” objects. For example, the data matrices of two “xifti” objects can be added together with the command xii1 + xii2; the data matrix of a single “xifti” object can be log-transformed using the command log(xii1). xii1 - xii1 == 0 returns a “xifti” with all values equal to 1, representing TRUE. All Math functions are implemented as S3 methods for “xifti” objects; as such, they are limited to fundamental arithmetic and univariate operations (see <xref rid="APP1" ref-type="app">Appendix A</xref> for a full list with descriptions). To perform more advanced mathematical manipulation or analysis of “xifti” objects, we recommend that users extract the data matrix with as.matrix, make the desired changes, and then update the data matrix of the “xifti” object using the function newdata_xifti. For simple operations, though, the manipulation and math functions included in ciftiTools allow users to work with CIFTI data conveniently and with concise code, while providing the building blocks for users to create more involved processing routines specific to their needs.</p>
    </sec>
  </sec>
  <sec id="S8">
    <label>3.</label>
    <title>Example</title>
    <p id="P27">In this section, we will illustrate some of the ciftiTools functionality through a simple example analysis of computing and visualizing seed correlations for a resting-state fMRI (rfMRI) scan from the HCP (<xref rid="R55" ref-type="bibr">Van Essen et al., 2013</xref>) which has been pre-processed with ICA-FIX (<xref rid="R45" ref-type="bibr">Salimi-Khorshidi et al., 2014</xref>). Our seed will be the posterior cingulate cortex (PCC), a highly-connected node of the default mode network (DMN). We will use functional parcellations created by <xref rid="R46" ref-type="bibr">Schaefer et al., 2018</xref> to define the PCC and other brain regions. The analysis is divided into four steps: (1) reading in and smoothing the fMRI data; (2) reading in the parcellation; (3) calculating seed correlations; and (4) visualizing and saving the results. An expanded demonstration which includes data cleaning, the subcortical data, and more functions from ciftiTools is available in the <xref rid="SD3" ref-type="supplementary-material">Supplementary Materials</xref>. Note that we will read in the rfMRI data from a subfolder Data, and we will write out plot image files to a subfolder Plots, so to run this code again these two directories would need to be created, and a rfMRI CIFTI file would need to be downloaded from the HCP and placed in Data.</p>
    <sec id="S9">
      <label>3.1.</label>
      <title>Reading in and smoothing the fMRI data</title>
      <p id="P28">We begin by loading ciftiTools and pointing to the Connectome Workbench folder.</p>
      <preformat position="float" xml:space="preserve">
library (ciftiTools)
##
## * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
## ciftiTools requires the path to the Connectome Workbench folder,
## or directly to ‘wb_command(.exe)’. Please execute the command
## ‘ciftiTools.setOption(‘wb_path’, ‘path/to/workbench’)’
##
## If you do not have the Connectome Workbench, install it here:
## <ext-link xlink:href="http://humanconnectome.org/software/get-connectome-workbench" ext-link-type="uri">humanconnectome.org/software/get-connectome-workbench</ext-link>
## * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * * *
ciftiTools.setOption(“wb_path”, “workbench”)
</preformat>
      <p id="P29">Now we can read in the CIFTI file containing the resting-state fMRI (rfMRI) data with read_xifti. By default, only the left and right cortex are read in: set brainstructures = “a11” to also read in the subcortex. For simplicity, we will not include the subcortex in this analysis (see the expanded demonstration in the <xref rid="SD3" ref-type="supplementary-material">Supplementary Materials</xref>).</p>
      <preformat position="float" xml:space="preserve">
xii &lt;- read_xifti(“Data/rfMRI_FIX.dtseries.nii”)
</preformat>
      <p id="P30">xii stores the CIFTI data as a “xifti” object. summary, or equivalently invoking the implicit print S3 method, will produce an overview of its contents:</p>
      <preformat position="float" xml:space="preserve">
xii
## ==== CIFTI METADATA ===================
## Intent:	3002 (dtseries)
## - time step	0.72 (seconds)
## - time start	0
## Measurements: 1200 columns
##
## ==== BRAIN STRUCTURES =================
## - left cortex	29696 data vertices
##			2796 medial wall vertices (32492 total)
##
## - right cortex	29716 data vertices
##			2776 medial wall vertices (32492 total)
</preformat>
      <p id="P31">The S3 method as.matrix will return the timeseries data in matrix form, with locations (vertices and/or voxels) along the rows and measurements (timepoints) along the columns. Functions like dim which coerce their inputs to data matrices will behave accordingly:</p>
      <preformat position="float" xml:space="preserve">
dim(xii)
## [1] 59412 1200
</preformat>
      <p id="P32">Now we will spatially smooth the data with smooth_xifti using a geodesic Gaussian smoother. We will use the default 5 mm FWHM width, but other levels of smoothing are possible using the surf_FWHM argument to smooth_xifti. As suggested at the end of <xref rid="S6" ref-type="sec">Section 2.4</xref>, we smooth the original CIFTI file and then read it in, rather than smoothing xii which would be slower.</p>
      <preformat position="float" xml:space="preserve">
smooth_xifti(“Data/rfMRI_FIX.dtseries.nii”,
“Data/rfMRI_FIX_sm.dtseries.nii”)
xii_sm &lt;- read_xifti(“Data/rfMRI_FIX_sm.
dtseries.nii”)
</preformat>
      <p id="P33">We can plot the first columns of xii and xii_sm to get an idea of the data scale, range, and effect of smoothing. plot will create a 3D visualization of the cortical data by invoking view_xifti_surface, as described above in <xref rid="S5" ref-type="sec">Section 2.3</xref>. There are several options for displaying the plots (see <xref rid="APP3" ref-type="app">Appendix C</xref>). Here we will plot each “xifti” separately, save the two plots to PNG files, and then composite the PNG files together with view_comp (<xref rid="F3" ref-type="fig">Figure 3</xref>).</p>
      <preformat position="float" xml:space="preserve">
plot(xii, title = “Original”, fname = “Plots/rfMRI.png”)
## ‘zlim’ not provided: using color range
0 – 13300 (data limits: 1160 – 17000).
plot(xii_sm, title = “Smoothed”,
fname = “Plots/rfMRI_sm.png”)
## ‘zlim’ not provided: using color range
0 – 13500 (data limits: 1160 – 17000).
view_comp(c(“Plots/rfMRI.png”,
“Plots/rfMRI_sm.png”), ncol = 2)
</preformat>
      <p id="P34">The color scale limits have been automatically determined based on the data, so they are close but slightly different. Nonetheless, the data on the right are clearly similar to the original except smoother across space.</p>
    </sec>
    <sec id="S10">
      <label>3.2.</label>
      <title>Reading in the parcellation</title>
      <p id="P35">Now we will load the parcellation. For convenience, ciftiTools includes a few commonly used parcellations, which can be read in using load_parc (refer to <xref rid="APP4" ref-type="app">Appendix D</xref>) (<xref rid="R46" ref-type="bibr">Schaefer et al., 2018</xref>; <xref rid="R53" ref-type="bibr">Thomas Yeo et al., 2011</xref>). Here we will use the Schaefer parcellation with 400 parcels. Other parcellations in CIFTI or GIFTI format can be read in using read_xifti or read_xifti2, respectively.</p>
      <preformat position="float" xml:space="preserve">
parc &lt;- load_parc(“Schaefer_400”)
</preformat>
      <p id="P36">Again, we can get an overview of the “xifti” object parc by using summary.</p>
      <preformat position="float" xml:space="preserve">
parc
## ==== CIFTI METADATA ===================
## Intent:		3007 (dlabel)
## - names		“parcels”
## Measurements:	1 column
##
## ==== BRAIN STRUCTURES =================
## - left cortex	32492 data vertices
##
## - right cortex	32492 data vertices
</preformat>
      <p id="P37">The parcellation includes data for the left and right cortical hemispheres at the same resolution of the rfMRI data (approx. 32,000 vertices per hemisphere). The parcellation has the “dlabel” intent which indicates that it contains label i.e. categorical data. Specifically, for each measurement (column) every data location is assigned an integer “key” which corresponds to a certain label and color. A table in the metadata gives the label and color of each key, for each measurement.</p>
      <p id="P38">This file has only one measurement, “parcels”. Its keys range from 0 to 400, with 0 indicating the medial wall and 1–400 indicating a specific parcel. When visualizing the parcellation with plot, each parcel will be colored according to the label table colors by default. In this parcellation, parcels are grouped by network, and those in the same network are colored identically. Therefore, adjacent parcels in the same network are impossible to delineate by color. We can use the border argument of view_xifti_surface to draw outlines between vertices of different keys, allowing us to visualize both the networks, according to color, and the individual parcels, according to outlines.</p>
      <p id="P39">We will also separately visualize parcel 14, which corresponds closely to the PCC. We use transform_xifti to create a mask of only that parcel. The full parcellation and the masked PCC parcel are shown side-by-side in <xref rid="F4" ref-type="fig">Fig. 4</xref>.</p>
      <preformat position="float" xml:space="preserve">
plot(parc, borders = “black”, title = “Schaefer400”, fname = “Plots/parc.png”)
parc_PCC &lt;- transform_xifti(parc, function(x){ ifelse(x == 14, 14, 0) })
plot(parc_PCC, borders = “black”, title = “Parcel 14 (PCC)”, fname = “Plots/pPCC.png”)
view_comp(c(“Plots/parc.png”, “Plots/pPCC.png”), ncol = 2)
</preformat>
    </sec>
    <sec id="S11">
      <label>3.3.</label>
      <title>Computing seed correlations</title>
      <p id="P40">Now that we have the smoothed rfMRI data and parcellation, we can compute the seed correlations. We begin by obtaining the mean timeseries of each parcel. This is easier done with the parcel data directly, rather than with the parc “xifti” object, so we will start by converting the parcellation to a vector. Then, we’ll replace the medial wall vertices in xii_sm with NA data values so that the length of the parcellation vector, parc_vec, will match the number of cortical data vertices in xii_sm. (See <xref rid="APP2" ref-type="app">Appendix B</xref> for information about the medial wall.)</p>
      <preformat position="float" xml:space="preserve">
parc_vec &lt;- c(as.matrix(parc))
length(parc_vec)
## [1] 64984
xii_sm &lt;- move_from_mwall(xii_sm, NA)
dim(xii_sm)
## [1] 64984 1200
</preformat>
      <p id="P41">Now for each parcel we will obtain the mean time series across its constituent vertices. Specifically, we will pre-allocate a matrix xii_pmean, and then for each parcel we will obtain the fMRI timeseries for all its vertices, take the average across space while ignoring medial wall values, and then save the resulting timeseries to a row of xii_pmean.</p>
      <preformat position="float" xml:space="preserve">
xii_mat &lt;- as.matrix(xii_sm)
xii_pmean &lt;- matrix(nrow = 400, ncol = ncol(xii_mat))
for (p in 1:400) {
   data_p &lt;- xii_mat[parc_vec == p,]
   xii_pmean[p, ] &lt;- colMeans(data_p, na.rm = TRUE)
}
</preformat>
      <p id="P42">We then calculate the seed correlations between the PCC parcel and every other parcel.</p>
      <preformat position="float" xml:space="preserve">
seed_cor &lt;- cor(t(xii_pmean))[,14]
</preformat>
    </sec>
    <sec id="S12">
      <label>3.4.</label>
      <title>Visualizing and saving the results</title>
      <p id="P43">We can visualize the results by creating a new “xifti” with newdata_xifti. It will contain one measurement (column) in which the value of each vertex will be the seed correlation for the parcel it belongs to. Notice how the parcellation was converted from a “xifti” to a numeric matrix in the previous section with as.matrix, and after several mathematical operations, it’s now being returned to a “xifti” with newdata_xifti. As suggested in <xref rid="S7" ref-type="sec">Section 2.5</xref>, this is a workflow to use when it is not possible to obtain the result with only the operations built in to ciftiTools.</p>
      <p id="P44">First we’ll convert parc_vec, which gives the parcel key of each vertex, to xii_seed, which gives the seed correlation of the parcel each vertex belongs to. Then we will initialize a one-column “xifti” using select_xifti and replace its data with xii_seed using newdata_xifti.</p>
      <preformat position="float" xml:space="preserve">
xii_seed &lt;- c(NA, seed_cor)[parc_vec + 1]
xii1 &lt;- select_xifti(xii_sm, 1)
xii_seed &lt;- newdata_xifti(xii1, xii_seed)
</preformat>
      <p id="P45">Now we can use the “xifti” S3 method plot again. We’ll use it twice to demonstrate the ability of view_xifti to automatically choose an appropriate zlim (<xref rid="F5" ref-type="fig">Fig. 5</xref>).</p>
      <preformat position="float" xml:space="preserve">
plot(xii_seed, zlim = c(−1, 1), title = “Set zlim”, fname = “Plots/seed.png”)
plot(xii_seed, title = “Auto zlim”, fname = “Plots/seed2.png”)
## ‘zlim’ not provided: using color range −0.345 – 0.345 (data limits: −0.374 – 1).
view_comp(c(“Plots/seed.png”, “Plots/seed2.png”), ncol = 2)
</preformat>
      <p id="P46">As expected, we find that most seed correlation values are positive or near zero, and the brain regions with the highest seed correlation are components of the DMN.</p>
      <p id="P47">Lastly, we can save the result of our analysis with write_xifti. We will write the data to a “dscalar” CIFTI because it does not represent a timeseries (“dtseries”) nor categorical/label data (“dlabel”).</p>
      <preformat position="float" xml:space="preserve">
write_xifti(xii_seed, “Data/PCC_seedCor.dscalar.nii”)
## Writing left cortex.
## Writing right cortex.
## Creating CIFTI file from separated components.
file.exists(“Data/PCC_seedCor.dscalar.nii”)
## [1] TRUE
</preformat>
    </sec>
  </sec>
  <sec id="S13">
    <label>4.</label>
    <title>Relationships with other tools and packages</title>
    <p id="P48">In this section we describe a few key dependencies and reverse dependencies of ciftiTools, and we compare ciftiTools with similar tools in R as well as in other programming environments.</p>
    <sec id="S14">
      <label>4.1.</label>
      <title>Dependencies of ciftiTools</title>
      <p id="P49">ciftiTools has one external dependency, the Connectome Workbench, and several dependencies on other R packages.</p>
      <sec id="S15">
        <label>4.1.1.</label>
        <title>Connectome Workbench</title>
        <p id="P50">Several functions in ciftiTools depend on Connectome Workbench commands (<xref rid="R26" ref-type="bibr">Marcus et al., 2011</xref>), and are listed in <xref rid="T2" ref-type="table">Table 2</xref>. To access the full functionality of ciftiTools, including reading and writing files, the user must therefore have the Workbench installed in their computing environment, and the path to the Connectome Workbench must be indicated at the beginning of each session after loading the package as previously demonstrated in <xref rid="S8" ref-type="sec">Section 3</xref> :</p>
        <preformat position="float" xml:space="preserve">
library(ciftiTools)
ciftiTools.setOption(“wb_path”, “/path/to/workbench”)
</preformat>
        <p id="P51">where /path/to/workbench is the location of either the Connectome Workbench folder or the executable file inside of it (wb_command on Mac and Linux or wb_command.exe on Windows). The path to the executable will be printed to indicate that it was set correctly; otherwise, a warning message will be displayed. If Workbench-dependent tasks are attempted prior to setting the Workbench path, an error message will be displayed.</p>
        <p id="P52">The view_xifti_surface function does not rely on Workbench commands, but was designed to emulate several aspects of visualization using the Workbench, including the layout and default color scales. <xref rid="APP5" ref-type="app">Appendix E</xref> shows a comparison between a plot produced with ciftiTools and one produced with the Connectome Workbench for the same data. Similarly, some manipulation functions resemble Workbench commands but do not depend on them: for example, merge_xifti emulates -cifti-merge, apply_xifti is similar to -cifti-reduce, and transform_xifti is analogous to -cifti-math. These manipulation functions operate completely inside R, saving time by avoiding the need to write the “xifti” to a CIFTI file, process it with Workbench, and then read it back in, as is required for resample_xifti and smooth_xifti. apply_xifti and transform_xifti also benefit from being able to use any R function, including one created by the user, compared to the Workbench commands which are limited to predefined arguments.</p>
      </sec>
      <sec id="S16">
        <label>4.1.2.</label>
        <title>Other R packages</title>
        <p id="P53">ciftiTools depends on several other R packages for working with GIFTI and NIFTI-format data. Specifically, the gifti package (<xref rid="R37" ref-type="bibr">Muschelli, 2020</xref>) supports reading, writing, and parsing GIFTI files. The RNifti package (<xref rid="R9" ref-type="bibr">Clayden et al., 2021</xref>) supports reading and writing NIFTI files, in particular subcortical data which has been separated from a CIFTI file. Cortical visualizations are based on the rgl package (<xref rid="R34" ref-type="bibr">Murdoch and Adler, 2021</xref>). Subcortical visualizations are based on the oro.nifti package (<xref rid="R58" ref-type="bibr">Whitcher et al., 2011</xref>) for static plots and the papayar package (<xref rid="R35" ref-type="bibr">Muschelli, 2016</xref>) for interactive plots. A full list of dependencies can be found in the package DESCRIPTION file.</p>
      </sec>
    </sec>
    <sec id="S17">
      <label>4.2.</label>
      <title>R packages building on ciftiTools for grayordinates data analysis</title>
      <p id="P54">Several R packages depend on ciftiTools to apply both traditional and more advanced statistical analysis techniques to fMRI in grayordinates format. The BayesfMRI package (<xref rid="R51" ref-type="bibr">Spencer et al., 2021</xref>) can be used to perform general linear model (GLM) analysis on task fMRI data for identifying activations. It includes a spatial Bayesian approach designed for cortical surface analysis (<xref rid="R31" ref-type="bibr">Mejia et al., 2020b</xref>) in addition to the classical massive univariate approach (<xref rid="R19" ref-type="bibr">Friston et al., 1994</xref>). The package templateICAr (<xref rid="R29" ref-type="bibr">Mejia, 2021</xref>) includes routines for group independent component analysis (ICA) and estimation of corresponding subject-level independent components (ICs) via dual regression (<xref rid="R4" ref-type="bibr">Beckmann et al., 2009</xref>) or template ICA (<xref rid="R31" ref-type="bibr">Mejia et al., 2020a</xref>). Lastly, fMRIscrub (<xref rid="R39" ref-type="bibr">Pham et al., 2021a</xref>) includes routines for data-driven scrubbing (<xref rid="R50" ref-type="bibr">Smyser et al., 2011</xref>; <xref rid="R30" ref-type="bibr">Mejia et al., 2017</xref>; <xref rid="R1" ref-type="bibr">Afyouni and Nichols, 2018</xref>; <xref rid="R40" ref-type="bibr">Pham et al., 2021b</xref>), motion scrubbing (<xref rid="R42" ref-type="bibr">Power et al., 2014</xref>), and denosing strategies such as anatomical CompCor (<xref rid="R5" ref-type="bibr">Behzadi et al., 2007</xref>).</p>
    </sec>
    <sec id="S18">
      <label>4.3.</label>
      <title>Comparison with other R packages for working with CIFTI files</title>
      <p id="P55">As listed in <xref rid="T1" ref-type="table">Table 1</xref>, a few R packages also support CIFTI files, to varying extents. Below we describe each package in more detail and compare its functionality with that of ciftiTools.</p>
      <sec id="S19">
        <label>4.3.1.</label>
        <title>The cifti R package</title>
        <p id="P56">The cifti R package reads in CIFTI files with any intent (<xref rid="R36" ref-type="bibr">Muschelli, 2018</xref>). It does not currently support writing or visualizing CIFTI files. In contrast, ciftiTools was designed to work specifically with the “dtseries,” “dscalar,” and “dlabel” intents. Given this more limited scope, ciftiTools aims to provide easy access and analysis of CIFTI data with these intents. For example, to extract the right cortex data from a “xifti” object named xii using the ciftiTools package, the code is</p>
        <preformat position="float" xml:space="preserve">
xii$data$cortex_right,
</preformat>
        <p id="P58">whereas the corresponding code for a “cifti” object named cii using the cifti package, shown below, is more verbose. This is because the “cifti” object more closely resembles the original structure of the CIFTI XML, which must be generalizable to all CIFTI intents.</p>
        <preformat position="float" xml:space="preserve">
   all_bs &lt;- sapply(cii$BrainModel, attr,
“BrainStructure”)
   bm &lt;- cii$BrainModel[[which(all_bs ==
“CIFTI_STRUCTURE_CORTEX_RIGHT”)]]
   cii$data[attr(bm, “IndexOffset”) + seq(attr(bm,
“IndexCount”)),]
</preformat>
        <p id="P62">Another important difference is that ciftiTools integrates the Connectome Workbench and support for GIFTI surface geometry, which opens up more functionalities, particularly those listed in Panels B and C of <xref rid="F1" ref-type="fig">Fig. 1</xref>. In contrast, the cifti package does not have any external dependencies.</p>
        <p id="P63">In summary, whereas ciftiTools makes it easy to work with dtseries, dscalar, or dlabel CIFTI files, users interested in working with other intent types, who want to read in the data structured similarly to the original CIFTI file, or who do not want to depend on the Connectome Workbench should look to cifti as an alternative. The R package xml2 may also be helpful for parsing the XML metadata in CIFTI files at a low level (<xref rid="R59" ref-type="bibr">Wickham et al., 2020</xref>).</p>
      </sec>
      <sec id="S20">
        <label>4.3.2.</label>
        <title>The gifti R package</title>
        <p id="P64">The gifti R package reads and writes GIFTI files, but does not provide further support (<xref rid="R37" ref-type="bibr">Muschelli, 2020</xref>). ciftiTools depends on gifti for reading and writing GIFTI files, for example with read_xifti2 and write_xifti2, and therefore builds on top of it to provide additional support for surface-based analyses including visualization and data manipulation. The “xifti” object also allows users to work with the corresponding left and right hemisphere data together, rather than having to separately process the left and right GIFTI files.</p>
      </sec>
      <sec id="S21">
        <label>4.3.3.</label>
        <title>The freesurferformats and fsbrain R packages</title>
        <p id="P65">The R package freesurferformats provides low-level reading and writing functionality for many different types of neuroimaging files, and fsbrain interfaces with it to offer higher-level reading and writing functions as well as a suite of visualization tools (<xref rid="R47" ref-type="bibr">Schäfer and Ecker, 2020</xref>; <xref rid="R48" ref-type="bibr">Schäfer and Ecker, 2021</xref>). The focus of these packages is on structural surface modalities. They are especially designed to support Freesurfer output, but are not limited to the FreeSurfer files or organization structures. There is limited support for CIFTI-format files. For example, the function for reading CIFTI files in freesurferformats, which is built on top of the cifti package, does not distinguish between the left and right hemispheres when reading in data from across the entire cortex. As with cifti, it cannot write out CIFTI files. Compared with ciftiTools, code to accomplish the same task can be more verbose. For example, to plot the cortical data with ciftiTools the command is</p>
        <preformat position="float" xml:space="preserve">
xii &lt;- read_cifti(cii_fname, surfL_fname, surfR_fname)
plot(xii)
whereas for freesurferformats and fsbrain it is
dataL &lt;- read.fs.morph.cifti(cii_fname,”lh”)
dataR &lt;- read.fs.morph.cifti(cii_fname,”rh”)
surfL &lt;- read.fs.surface(surfL_fname)
surfR &lt;- read.fs.surface(surfR_fname)
cmL &lt;- coloredmesh.from.preloaded.
data(surf L, data L, hemi = “lh”)
cmR &lt;- coloredmesh.from.preloaded.
data(surf R, data R, hemi = “rh”)
brainviews(“t4”, list(cmL, cmR), draw_colorbar = TRUE)
</preformat>
      </sec>
      <sec id="S22">
        <label>4.3.4.</label>
        <title>The ggseg, ggseg3d, and ggsegExtra R packages</title>
        <p id="P66">Brain atlases (i.e. segmentations or parcellations) can be plotted with 2-dimensional graphics using ggseg and 3-dimensional, interactive graphics using ggseg3d (<xref rid="R33" ref-type="bibr">Mowinckel and Vidal-Piñeiro, 2020</xref>). ggseg relies on ggplot2 whereas ggseg3d relies on plotly. Each package includes two parcellations —the Desikan-Killiany cortical atlas (<xref rid="R11" ref-type="bibr">Desikan et al., 2006</xref>) and the Fischl subcortical segmentation (<xref rid="R15" ref-type="bibr">Fischl et al., 2002</xref>) —and additional parcellations can be loaded with a separate package, ggsegExtra. While both ciftiTools and ggseg3d can dis- play cortical data on a 3D mesh, ggseg and ggseg3d offer additional visualizations not provided by ciftiTools : ggseg can display cortical data as orthogonal slices, and ggseg3d can display subcortical data as 3D, interactive images. However, these visualizations are primarily useful for parcellated data. In contrast, ciftiTools can display parcellated data but is not limited to it, having the ability to visualize the cortical surface and subcortical volume at the same resolution as the original data. Another important distinction is that ciftiTools is designed for CIFTI, GIFTI, and NIFTI file compatibility whereas ggseg, ggseg3d, and ggsegExtra are designed for Freesurfer-format file directories. In fact, to import new parcellations with ggsegExtra, an installation of Freesurfer is required. Conversion between Freesurfer-format file directories and CIFTI or GIFTI files is possible but non-trivial, so we recommend using ggseg, ggseg3d, and ggsegExtra to work with Freesurfer-format parcellations, and ciftiTools to work with CIFTI files, GIFTI files, and/or non-parcellated data.</p>
      </sec>
    </sec>
    <sec id="S23">
      <label>4.4.</label>
      <title>Working with CIFTI files in other programming environments</title>
      <p id="P67">Several tools have been developed in the Python (<xref rid="R57" ref-type="bibr">van Rossum and Drake, 1995</xref>) and MATLAB (<xref rid="R28" ref-type="bibr">MATLAB, 2021</xref>) programming languages to provide varying levels of support for CIFTI processing, analysis, and visualization. In this section we describe those listed in <xref rid="T1" ref-type="table">Table 1</xref> in greater detail.</p>
      <sec id="S24">
        <label>4.4.1.</label>
        <title>Python</title>
        <p id="P68">The ciftify module (<xref rid="R12" ref-type="bibr">Dickie et al., 2019</xref>) converts volumetric fMRI images with accompanying structural <italic toggle="yes">T</italic><sub>1</sub> -weighted files to the CIFTI format using fmriprep tools, allowing CIFTI-based Workbench and HCP tools to be used on data not originally in the CIFTI format. ciftify has functionality for analyzing and visualizing the resulting files, including a comparison with the original data for quality assurance. The fMRI data are not read into the environment; rather, ciftify functions operate on the files directly and write any results or plots to files. A CIFTI file created by ciftify could be read in with ciftiTools for manipulation and interactive visualization.</p>
        <p id="P69">The NiBabel library (<xref rid="R7" ref-type="bibr">Brett et al., 2016</xref>) supports reading, writing, and manipulation of many neuroimaging file formats, including CIFTI files of all intents. It includes methods for parsing the CIFTI files once read in. For example, the data from a specific brain structure can be extracted as a numpy array, the data matrix structure commonly used by machine learning tools in Python. It does not include support for visualizations. The nilearn toolbox (<xref rid="R23" ref-type="bibr">Huntenburg et al., 2017</xref>) does not currently support CIFTI files per se, but it has functions for projecting data onto surface geometry for visualization. Users can read in CIFTI and GIFTI data with NiBabel and then use nilearn to visualize it. hcp-utils (<xref rid="R24" ref-type="bibr">Janik, 2020</xref>) provides high-level access to CIFTI files, including visualization, parcellation, and spatial masking. hcp-utils extends upon the functionality provided by NiBabel and nilearn, and thus requires both to be installed.</p>
      </sec>
      <sec id="S25">
        <label>4.4.2.</label>
        <title>MATLAB</title>
        <p id="P70">cifti-matlab is a software toolbox recommended by the HCP for working with CIFTI-format data within MATLAB (<xref rid="R38" ref-type="bibr">Oostenveld, 2021</xref>). It does not depend on the Connectome Workbench and supports reading, writing, creation, and some manipulation of CIFTI files. It is currently under development. No visualization support for CIFTI-format data is currently available natively in MATLAB to our knowledge, though GIFTI-format data can be read, written, and visualized using the GIFTI library (<xref rid="R18" ref-type="bibr">Flandin, 2021</xref>).</p>
      </sec>
    </sec>
  </sec>
  <sec id="S26">
    <label>5.</label>
    <title>Discussion</title>
    <p id="P71">Here we have presented and illustrated ciftiTools, an R package for reading, writing, visualizing, and manipulating CIFTI and GIFTI files. The stable version of ciftiTools is available via CRAN <sup><xref rid="FN3" ref-type="fn">1</xref></sup> as well as GitHub <sup><xref rid="FN4" ref-type="fn">2</xref></sup>, where development and archived versions of the package, and a tutorial vignette, can also be found. The primary goal of ciftiTools is to provide a comprehensive, user-friendly programmatic and visualization tool supporting CIFTI- and GIFTI-based workflows. The neuroimaging community is currently in a period of active development of tools for working with grayordinates data. Today, a number of tools in MATLAB, Python, and R have been adapted to provide support for working with CIFTI files. However, ciftiTools is one of the few that has been developed specifically for CIFTI-format data. As such, the set of functionalities provided by ciftiTools for working with and visualizing CIFTI-format data is one of the most extensive and user-friendly among programmatic CIFTI-compatible tools. Moreover, the functionalities provided by ciftiTools will continue to expand as the needs of the user base evolve and become clear.</p>
    <p id="P72">A secondary goal of ciftiTools is to facilitate the use of advanced statistical methods available in R for grayordinate-based fMRI analysis. Prior to the development of ciftiTools, CIFTI files could be read into R but not written out or directly visualized. R users were required to adopt a patchwork approach to visualization of analysis results, first writing results to a generic text or CSV file, reading that data into another program such as MATLAB or Python capable of writing out CIFTI-format data, then finally visualizing the results, e.g. via the Connectome Workbench. To state the obvious, this did not represent a convenient workflow for analysis of grayordinates data in R. By simplifying CIFTI-and GIFTI-based workflows, ciftiTools bridges a gap between existing statistical methods available in R and grayordinates-based MR data for which they are well suited to analyze. Bayesian techniques in particular hold promise for extracting more accurate, specific, and individualized insights by taking advantage of the improved alignment of structural and functional features across subjects, geodesic distances, and reduced dimensionality of grayordinate-based and surface-based MR data. As the statistics and neuroimaging communities working with R continue to grow, our hope is that ciftiTools will also serve as a foundation for the development and adoption of future Bayesian techniques and other advanced statistical methods for grayordinate-based and surface-based MR data.</p>
  </sec>
  <sec sec-type="supplementary-material" id="SM1">
    <title>Supplementary Material</title>
    <supplementary-material id="SD1" position="float" content-type="local-data">
      <label>1</label>
      <media xlink:href="NIHMS1787509-supplement-1.zip" id="d64e709" position="anchor"/>
    </supplementary-material>
    <supplementary-material id="SD2" position="float" content-type="local-data">
      <label>2</label>
      <media xlink:href="NIHMS1787509-supplement-2.zip" id="d64e712" position="anchor"/>
    </supplementary-material>
    <supplementary-material id="SD3" position="float" content-type="local-data">
      <label>3</label>
      <media xlink:href="NIHMS1787509-supplement-3.pdf" id="d64e715" position="anchor"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="S27">
    <title>Acknowledgments</title>
    <p id="P73">This research was supported in part by NIH grant R01EB027119 from the National Institute of Biomedical Imaging and Bioengineering, grant NSF IIS-2023985 from the NSF Division of Information and Intelligent Systems, and NIH grant 5R01NS060910-12 from the National Institute of Neurological Disorders and Stroke.</p>
  </ack>
  <fn-group>
    <fn id="FN1">
      <p id="P93">Credit authorship contribution statement</p>
      <p id="P94"><bold>Damon D. Pham:</bold> Conceptualization, Software, Validation, Investigation, Writing – original draft, Writing – review &amp; editing, Visualization. <bold>John Muschelli:</bold> Software, Writing – review &amp; editing, Funding acquisition. <bold>Amanda F. Mejia:</bold> Conceptualization, Software, Validation, Investigation, Writing – original draft, Writing – review &amp; editing, Visualization, Supervision, Project administration, Funding acquisition.</p>
    </fn>
    <fn id="FN2">
      <p id="P95">Supplementary material</p>
      <p id="P96">Supplementary material associated with this article can be found, in the online version, at <ext-link xlink:href="10.1016/j.neuroimage.2022.118877" ext-link-type="doi">10.1016/j.neuroimage.2022.118877</ext-link>.</p>
    </fn>
    <fn id="FN3">
      <label>1</label>
      <p id="P97">
        <ext-link xlink:href="https://cran.r-project.org/web/packages/ciftiTools/index.html" ext-link-type="uri">https://cran.r-project.org/web/packages/ciftiTools/index.html</ext-link>
      </p>
    </fn>
    <fn id="FN4">
      <label>2</label>
      <p id="P98">
        <ext-link xlink:href="https://github.com/mandymejia/ciftiTools/" ext-link-type="uri">https://github.com/mandymejia/ciftiTools/</ext-link>
      </p>
    </fn>
    <fn id="FN5">
      <label>3</label>
      <p id="P99">
        <ext-link xlink:href="https://www.nitrc.org/frs/?group_id=454" ext-link-type="uri">https://www.nitrc.org/frs/?group_id=454</ext-link>
      </p>
    </fn>
    <fn id="FN6">
      <label>4</label>
      <p id="P100">
        <ext-link xlink:href="https://balsa.wustl.edu/reference/show/pkXDZ" ext-link-type="uri">https://balsa.wustl.edu/reference/show/pkXDZ</ext-link>
      </p>
    </fn>
    <fn id="FN7">
      <label>5</label>
      <p id="P101">
        <ext-link xlink:href="https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/AnatomicalROI/FreeSurferColorLUT" ext-link-type="uri">https://surfer.nmr.mgh.harvard.edu/fswiki/FsTutorial/AnatomicalROI/FreeSurferColorLUT</ext-link>
      </p>
    </fn>
  </fn-group>
  <app-group>
    <app id="APP1">
      <label>Appendix A.</label>
      <title>List of commonly used functions</title>
      <p id="P74"><xref rid="T3" ref-type="table">Table 3</xref> lists the most commonly-used functions in ciftiTools. The same list can be displayed in R Studio using the command help(“ciftiTools”). Note that several of these functions also have aliases. For example, readcii and read_cifti are both equivalent to read_xifti, and writecii and write_cifti are both equivalent to write_xifti. These aliases are provided for convenience to users unfamiliar with the “xifti” nomenclature.</p>
    </app>
    <app id="APP2">
      <label>Appendix B.</label>
      <title>The medial wall in CIFTI files, GIFTI files, and “xifti” objects</title>
      <p id="P75">For both the left and right cortical surfaces, CIFTI files have a metadata entry named “VertexIndices” which lists, in order, the index of each vertex represented by the data matrix. These vertices form the “region of interest” (ROI). Any vertex not in “VertexIndices” does not have data for it. Typically these omitted vertices form the medial wall, for which no gray matter data is available. However, if the CIFTI file only represents a certain portion of the brain surface, it will have a smaller ROI and therefore more vertices omitted from “VertexIndices.” Another metadata entry named “SurfaceNumberOfVertices“ gives the total number of vertices on the associated surface geometry, so that no matter the size of the ROI, the resolution of the data can be known.</p>
      <p id="P76">When a CIFTI file with surface data is separated into GIFTI files with the ciftiTools function separate_cifti, each hemisphere yields two GIFTI files: one for the data, and one for the ROI mask. For the left cortex, for example, these are named “cortexL” and “ROIcortexL” in the vector of file names returned by separate_cifti. The data GIFTI will be padded with zeroes in place of the omitted vertices, and the ROI GIFTI will have ones for vertices inside the ROI, and zeroes for those outside it. Therefore, the ROI GIFTI is necessary to distinguish which zeroes in the data GIFTI are actual zero-valued vertices, and which represent excluded vertices.</p>
      <table-wrap position="anchor" id="T3">
        <label>Table 3</label>
        <caption>
          <p id="P77">Commonly used functions currently available in ciftiTools.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <colgroup span="1">
            <col align="left" valign="middle" span="1"/>
            <col align="left" valign="middle" span="1"/>
          </colgroup>
          <thead>
            <tr>
              <th align="left" valign="top" rowspan="1" colspan="1">Reading in CIFTI or GIFTI data</th>
              <th align="left" valign="top" rowspan="1" colspan="1"/>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">read_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read in a CIFTI file as a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">read_xifti2</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read in GIFTI files as a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">as.xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Combine numeric data to form a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">read_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read in a surface GIFTI file as a“surf“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">info_cifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read the metadata in a CIFTI file</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">load_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read in a surface included in“ciftiTools“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">load_parc</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read in a parcellation included in“ciftiTools“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">
                <bold>Writing CIFTI or GIFTI data</bold>
              </td>
              <td align="left" valign="top" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">write_cifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Write a“xifti“ to a CIFTI file</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">write_cifti2</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Write a“xifti“ to GIFTI and NIFTI files</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">write_metric_gifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Write a numeric data matrix to a metric GIFTI file</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">write_surf_gifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Write a“surf“ to a surface GIFTI file</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">write_subcort_nifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Write subcortical data to NIFTI files</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">separate_cifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Separate a CIFTI file into GIFTI and NIFTI files</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">
                <bold>Manipulating a“xifti“</bold>
              </td>
              <td align="left" valign="top" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">apply_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Apply a function along the rows or columns of the“xifti“ data matrix</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">combine_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Combine multiple“xifti“s with non-overlapping brain structures</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">convert_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Convert the intent of a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">merge_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Concatenate data matrices from multiple“xifti“s</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">newdata_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Replace the data matrix in a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">remove_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Remove a brain structure or surface from a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">select_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Select data matrix columns of a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">transform_xifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Apply a univariate transformation to a“xifti“ or pair of“xifti“s</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">add_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Add surfaces to a“xifti“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">move_from_mwall</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Move medial wall vertices back into the“xifti“ data matrix</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">move_to_mwall</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Move rows with a certain value into the“xifti“ medial wall mask</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">
                <bold>S3 methods for“xifti“s</bold>
              </td>
              <td align="left" valign="top" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">summary and print</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Summarize the contents</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">as.matrix</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Convert data to a locations by measurements numeric matrix</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">dim</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Obtain number of locations and number of measurements</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">plot</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Visualize the cortical surface and/or subcortical data</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">+, -, *, /, ˆ, %%, %/%, ==, ! =</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Operation between a“xifti“ and a scalar, or between two“xifti“s</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">abs, ceiling, exp, floor, log, round, sign, sqrt</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Univariate transformation of“xifti“ data</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">
                <bold>Working with“surf“s</bold>
              </td>
              <td align="left" valign="top" rowspan="1" colspan="1"/>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">read_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Read in a surface GIFTI file as a“surf“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">is.surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Verify a“surf“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">write_surf_gifti</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Write a“surf“ to a surface GIFTI file</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">view_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Visualize a“surf“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">resample_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Resample a“surf“</td>
            </tr>
            <tr>
              <td align="left" valign="top" rowspan="1" colspan="1">rotate_surf</td>
              <td align="left" valign="top" rowspan="1" colspan="1">Rotate the geometry of a“surf“</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p id="P78">The “xifti” object nomenclature assumes that any vertex outside the ROI is part of the medial wall, since this is the case in most applications of CIFTI files. For a “xifti” named xii with left cortex data, xii$meta$cortex$medial_wall_mask$left will be a TRUE / FALSE vector the same length as the associated surface geometry, with TRUE values indicating vertices within the ROI. This is similar to the ROI GIFTI. When the mask is not present, it is assumed to be TRUE for all vertices. The data matrix in xii will not use padding zeroes to represent the vertices outside the ROI, since that would be redundant with the medial wall mask. In this sense, the data matrix is similar to that of CIFTI files. Note this means that two CIFTIs with the same resolution but different medial wall masks will have data matrices with different numbers of rows.</p>
      <p id="P79">To clarify with an example: if a CIFTI file has <italic toggle="yes">m</italic> measurements of <italic toggle="yes">v</italic><sub>0</sub> data locations across the left cortex, and if the surface geometry of the left cortex has <italic toggle="yes">v</italic> total vertices, then its data matrix will be <italic toggle="yes">v</italic><sub>0</sub> ×<italic toggle="yes">m</italic>. “VertexIndices” will list <italic toggle="yes">v</italic><sub>0</sub> indices, and “SurfaceNumberOfVertices” will be <italic toggle="yes">v</italic>. When this CIFTI file is exported to GIFTI files, the data GIFTI will have <italic toggle="yes">m</italic> measurements of <italic toggle="yes">v</italic>-length vectors padded with zeroes, and the ROI GIFTI will have one <italic toggle="yes">v</italic>-length measurement indicating which vertices in the data GIFTI are inside the ROI. When this CIFTI file is read in with xii &lt;- read_xifti(...), dim(xii) will be equal to c(v_0, m) and xii$meta$cortex$medial_wall_mask$left will be a <italic toggle="yes">v</italic>-length logical vector with <italic toggle="yes">v</italic><sub>0</sub> TRUE values.</p>
      <p id="P80">Sometimes it is useful to pad the data matrix with NA, 0, or some other value, instead of using the medial wall mask in the metadata. In this case, the ciftiTools function move_from_mwall can delete the medial wall mask and add rows to the data matrix to pad it. Conversely, move_to_mwall can move vertices with a certain value from the data matrix into the medial wall mask.</p>
    </app>
    <app id="APP3">
      <label>Appendix C.</label>
      <title>Embedding ciftiTools plots in Markdown documents</title>
      <p id="P81">R Markdown and the knitr package are used to create linear, reproducible reports by allowing authors to weave together a mix of Markdown, LaTeX, HTML, and R code (<xref rid="R2" ref-type="bibr">Allaire et al., 2021</xref>; <xref rid="R60" ref-type="bibr">Xie, 2021</xref>). ciftiTools plots can be embedded in R Markdown documents in a number of ways. As demonstrated in <xref rid="S8" ref-type="sec">Section 3</xref>, view_xifti_surface and view_xifti_volume can both write PNG files which may be embedded in R Markdown documents like any other image file. In the example we used the ciftiTools function view_comp. Other options are knitr::include_graphics(“plot.png”) or graphics::rasterImage(png::readPNG(“plot.png”) inside a code chunk, and ![caption](path/to/image.png) outside a code chunk. If the only purpose of saving a PNG file is to embed it in an R Markdown document, the user may write the PNG to a temporary directory or file with tempdir() or tempfile(). For methods that work inside a code chunk, the resulting image size can be controlled with chunk options, including fig.width and fig.height.</p>
      <p id="P82">view_xifti_surface has additional options that work when the resulting document is an HTML file. First, snapshots of the OpenGL window can be directly embedded. This allows plots to be rendered without needing to save an intermediate file. Embedding snapshots requires that a setup function be executed:</p>
      <preformat position="float" xml:space="preserve">
library(rgl)
rgl::setupKnitr()
rgl::rgl.open(); rgl::rgl.close() # first window in doc. may not render properly
</preformat>
      <p id="P83">after which a code chunk can produce a cortical surface plot using the chunk options rgl = TRUE and format = “png”:</p>
      <preformat position="float" xml:space="preserve">
“‘{r, fig.cap = “Snapshot”, rgl = TRUE, format = “png”, eval = FALSE} plot(xii)”’
</preformat>
      <p id="P84">The second option from view_xifti_surface for interactive plots is the HTML widget. Unlike the OpenGL snapshot, an HTML widget will remain interactive when embedded. No setup is required; a chunk just needs to have a call to view_xifti_surface which produces a widget (see <xref rid="S5" ref-type="sec">Section 2.3</xref>), such as in the following chunk.</p>
      <preformat position="float" xml:space="preserve">
“‘{r, eval = FALSE} plot(xii, idx = seq(3))”’
</preformat>
      <p id="P85">These ciftiTools features make it easier for users to write reproducible, interactive documents for the analysis and visualization of grayordinates data. The numerous math and manipulation functions implemented in ciftiTools also enable users to perform many common operations in single lines of code, allowing scripts in R Markdown reports to be more concise and easy for readers to follow.</p>
    </app>
    <app id="APP4">
      <label>Appendix D.</label>
      <title>Data included in ciftiTools</title>
      <p id="P86">Several external datasets are included within the ciftiTools package:</p>
      <list list-type="bullet" id="L2">
        <list-item>
          <p id="P87">Example CIFTI files from NITRC are used for demonstration and codebase testing. <sup><xref rid="FN5" ref-type="fn">3</xref></sup> These are accessed with the command ciftiTools.files()$cifti.</p>
        </list-item>
        <list-item>
          <p id="P88">Surface geometry GIFTI files from the HCP are used for visualizing and smoothing cortical data, should the user not provide their own. Three different surfaces are available–”inflated,” “very inflated,” and “midthickness”–and each has about 32,000 vertices per hemisphere. These are provided according to the HCP Data Use Terms: “Data were provided [in part] by the Human Connectome Project, WU-Minn Consortium (Principal Investigators: David Van Essen and Kamil Ugurbil; 1U54MH091657) funded by the 16 NIH Institutes and Centers that support the NIH Blueprint for Neuroscience Research; and by the McDonnell Center for Systems Neuroscience at Washington University” (<xref rid="R21" ref-type="bibr">Glasser et al., 2013</xref>). <sup><xref rid="FN6" ref-type="fn">4</xref></sup> The files are accessed with the command ciftiTools.files()$surf or load_surf.</p>
        </list-item>
        <list-item>
          <p id="P89">Several cortical parcellations are included for convenience: the Schaefer parcellation at 100, 400, or 1000 parcels resolutions (<xref rid="R46" ref-type="bibr">Schaefer et al., 2018</xref>), and the Yeo parcellation at 7 networks (51 components) or 17 networks (114 components) resolutions (<xref rid="R53" ref-type="bibr">Thomas Yeo et al., 2011</xref>). These can be loaded with the function load_parc.</p>
        </list-item>
        <list-item>
          <p id="P90">The <italic toggle="yes">T</italic><sub>1</sub> image of the MNI ICBM 152 non-linear 6th Generation Symmetric Average Brain Stereotaxic Registration Model is used in the subcortical visualizations as a spatial reference upon which the data is overlaid (<xref rid="R22" ref-type="bibr">Grabner et al., 2006</xref>).</p>
        </list-item>
        <list-item>
          <p id="P91">FreeSurfer color assignments for subcortical structures are used when writing CIFTIs files with subcortical data.<sup><xref rid="FN7" ref-type="fn"> 5</xref></sup></p>
        </list-item>
      </list>
    </app>
    <app id="APP5">
      <label>Appendix E.</label>
      <title>Cortical surface visualization comparison</title>
      <p id="P92"><xref rid="F6" ref-type="fig">Figure 6</xref> compares the cortex surface data plots for ciftiTools and the Connectome Workbench GUI, wb_view.</p>
    </app>
  </app-group>
  <ref-list>
    <title>References</title>
    <ref id="R1">
      <mixed-citation publication-type="journal"><name><surname>Afyouni</surname><given-names>S</given-names></name>, <name><surname>Nichols</surname><given-names>TE</given-names></name>, <year>2018</year>. <article-title>Insight and inference for DVARS</article-title>. <source>Neuroimage</source><volume>172</volume>, <fpage>291</fpage>–<lpage>312</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.neuroimage.2017.12.098</pub-id>.<pub-id pub-id-type="pmid">29307608</pub-id></mixed-citation>
    </ref>
    <ref id="R2">
      <mixed-citation publication-type="other"><name><surname>Allaire</surname><given-names>JJ</given-names></name>, <name><surname>Xie</surname><given-names>Y</given-names></name>, <name><surname>McPherson</surname><given-names>J</given-names></name>, <name><surname>Luraschi</surname><given-names>J</given-names></name>, <name><surname>Ushey</surname><given-names>K</given-names></name>, <name><surname>Atkins</surname><given-names>A</given-names></name>, <name><surname>Wickham</surname><given-names>H</given-names></name>, <name><surname>Cheng</surname><given-names>J</given-names></name>, <name><surname>Chang</surname><given-names>W</given-names></name>, <name><surname>Iannone</surname><given-names>R</given-names></name>, <year>2021</year>. <source>rmarkdown: Dynamic Documents for R</source><comment><ext-link xlink:href="https://github.com/rstudio/rmarkdown" ext-link-type="uri">https://github.com/rstudio/rmarkdown</ext-link>.</comment></mixed-citation>
    </ref>
    <ref id="R3">
      <mixed-citation publication-type="journal"><name><surname>Anticevic</surname><given-names>A</given-names></name>, <name><surname>Dierker</surname><given-names>DL</given-names></name>, <name><surname>Gillespie</surname><given-names>SK</given-names></name>, <name><surname>Repovs</surname><given-names>G</given-names></name>, <name><surname>Csernansky</surname><given-names>JG</given-names></name>, <name><surname>Essen</surname><given-names>DCV</given-names></name>, <name><surname>Barch</surname><given-names>DM</given-names></name>, <year>2008</year>. <article-title>Comparing surface-based and volume-based analyses of functional neuroimaging data in patients with schizophrenia</article-title>. <source>Neuroimage</source><volume>41</volume> (<issue>3</issue>), <fpage>835</fpage>–<lpage>848</lpage>.<pub-id pub-id-type="pmid">18434199</pub-id></mixed-citation>
    </ref>
    <ref id="R4">
      <mixed-citation publication-type="journal"><name><surname>Beckmann</surname><given-names>CF</given-names></name>, <name><surname>Mackay</surname><given-names>CE</given-names></name>, <name><surname>Filippini</surname><given-names>N</given-names></name>, <name><surname>Smith</surname><given-names>SM</given-names></name>, <year>2009</year>. <article-title>Group comparison of resting-state fMRI data using multi-subject ICA and dual regression</article-title>. <source>Neuroimage</source><volume>47</volume> (<issue>Suppl 1</issue>), <fpage>S148</fpage>.</mixed-citation>
    </ref>
    <ref id="R5">
      <mixed-citation publication-type="journal"><name><surname>Behzadi</surname><given-names>Y</given-names></name>, <name><surname>Restom</surname><given-names>K</given-names></name>, <name><surname>Liau</surname><given-names>J</given-names></name>, <name><surname>Liu</surname><given-names>TT</given-names></name>, <year>2007</year>. <article-title>A component based noise correction method (CompCor) for BOLD and perfusion based fMRI</article-title>. <source>Neuroimage</source><volume>37</volume> (<issue>1</issue>), <fpage>90</fpage>–<lpage>101</lpage>.<pub-id pub-id-type="pmid">17560126</pub-id></mixed-citation>
    </ref>
    <ref id="R6">
      <mixed-citation publication-type="other"><name><surname>Bolin</surname><given-names>D</given-names></name>, <name><surname>Lindgren</surname><given-names>F</given-names></name>, <year>2016</year>. <article-title>Calculating probabilistic excursion sets and related quantities using excursions</article-title>. <source>arXiv preprint arXiv:1612.04101</source><comment><ext-link xlink:href="https://cran.r-project.org/package=excursions" ext-link-type="uri">https://cran.r-project.org/package=excursions</ext-link>.</comment></mixed-citation>
    </ref>
    <ref id="R7">
      <mixed-citation publication-type="other"><name><surname>Brett</surname><given-names>M</given-names></name>, <name><surname>Hanke</surname><given-names>M</given-names></name>, <name><surname>Cipollini</surname><given-names>B</given-names></name>, <name><surname>Côté</surname><given-names>MA</given-names></name>, <name><surname>Markiewicz</surname><given-names>C</given-names></name>, <name><surname>Gerhard</surname><given-names>S</given-names></name>, <name><surname>Garyfallidis</surname><given-names>E</given-names></name>, <year>2016</year>. <source>nibabel</source>.</mixed-citation>
    </ref>
    <ref id="R8">
      <mixed-citation publication-type="journal"><name><surname>Brodoehl</surname><given-names>S</given-names></name>, <name><surname>Gaser</surname><given-names>C</given-names></name>, <name><surname>Dahnke</surname><given-names>R</given-names></name>, <name><surname>Witte</surname><given-names>OW</given-names></name>, <name><surname>Klingner</surname><given-names>CM</given-names></name>, <year>2020</year>. <article-title>Surface-based analysis increases the specificity of cortical activation patterns and connectivity results</article-title>. <source>Sci. Rep</source><volume>10</volume> (<issue>1</issue>), <fpage>1</fpage>–<lpage>13</lpage>.<pub-id pub-id-type="pmid">31913322</pub-id></mixed-citation>
    </ref>
    <ref id="R9">
      <mixed-citation publication-type="webpage"><name><surname>Clayden</surname><given-names>J</given-names></name>, <name><surname>Cox</surname><given-names>B</given-names></name>, <name><surname>Jenkinson</surname><given-names>M</given-names></name>, <year>2021</year>. <source>RNifti: Fast R and C++ Access to NIfTI Images</source><comment><ext-link xlink:href="https://CRAN.R-project.org/package=RNifti" ext-link-type="uri">https://CRAN.R-project.org/package=RNifti</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R10">
      <mixed-citation publication-type="journal"><name><surname>Coalson</surname><given-names>TS</given-names></name>, <name><surname>Essen</surname><given-names>DCV</given-names></name>, <name><surname>Glasser</surname><given-names>MF</given-names></name>, <year>2018</year>. <article-title>The impact of traditional neuroimaging methods on the spatial localization of cortical areas</article-title>. <source>Proc. Natl. Acad. Sci</source><volume>115</volume> (<issue>27</issue>), <fpage>E6356</fpage>–<lpage>E6365</lpage>.<pub-id pub-id-type="pmid">29925602</pub-id></mixed-citation>
    </ref>
    <ref id="R11">
      <mixed-citation publication-type="journal"><name><surname>Desikan</surname><given-names>RS</given-names></name>, <name><surname>Ségonne</surname><given-names>F</given-names></name>, <name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Quinn</surname><given-names>BT</given-names></name>, <name><surname>Bradford</surname><given-names>C</given-names></name>, <name><surname>Dickerson</surname></name>, <name><surname>Blacker</surname><given-names>D</given-names></name>, <name><surname>Buckner</surname><given-names>RL</given-names></name>, <etal/>, <year>2006</year>. <article-title>An automated labeling system for subdividing the human cerebral cortex on MRI scans into gyral based regions of interest</article-title>. <source>Neuroimage</source><volume>31</volume> (<issue>3</issue>), <fpage>968</fpage>–<lpage>980</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.neuroimage.2006.01.021</pub-id>.<pub-id pub-id-type="pmid">16530430</pub-id></mixed-citation>
    </ref>
    <ref id="R12">
      <mixed-citation publication-type="journal"><name><surname>Dickie</surname><given-names>EW</given-names></name>, <name><surname>Anticevic</surname><given-names>A</given-names></name>, <name><surname>Smith</surname><given-names>DE</given-names></name>, <name><surname>Coalson</surname><given-names>TS</given-names></name>, <name><surname>Manogaran</surname><given-names>M</given-names></name>, <name><surname>Calarco</surname><given-names>N</given-names></name>, <name><surname>Viviano</surname><given-names>JD</given-names></name>, <name><surname>Glasser</surname><given-names>MF</given-names></name>, <name><surname>Essen</surname><given-names>DCV</given-names></name>, <name><surname>Voineskos</surname><given-names>AN</given-names></name>, <year>2019</year>. <article-title>Ciftify: a framework for surface-based analysis of legacy MR acquisitions</article-title>. <source>Neuroimage</source><volume>197</volume>, <fpage>818</fpage>–<lpage>826</lpage>.<pub-id pub-id-type="pmid">31091476</pub-id></mixed-citation>
    </ref>
    <ref id="R13">
      <mixed-citation publication-type="journal"><name><surname>Evans</surname><given-names>AC</given-names></name>, <name><surname>Janke</surname><given-names>AL</given-names></name>, <name><surname>Collins</surname><given-names>DL</given-names></name>, <name><surname>Baillet</surname><given-names>S</given-names></name>, <year>2012</year>. <article-title>Brain templates and atlases</article-title>. <source>Neuroimage</source><volume>62</volume> (<issue>2</issue>), <fpage>911</fpage>–<lpage>922</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.neuroimage.2012.01.024</pub-id>.<pub-id pub-id-type="pmid">22248580</pub-id></mixed-citation>
    </ref>
    <ref id="R14">
      <mixed-citation publication-type="journal"><name><surname>Fischl</surname><given-names>B</given-names></name>, <year>2012</year>. <article-title>Freesurfer</article-title>. <source>Neuroimage</source><volume>62</volume> (<issue>2</issue>), <fpage>774</fpage>–<lpage>781</lpage>.<pub-id pub-id-type="pmid">22248573</pub-id></mixed-citation>
    </ref>
    <ref id="R15">
      <mixed-citation publication-type="journal"><name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Salat</surname><given-names>DH</given-names></name>, <name><surname>Busa</surname><given-names>E</given-names></name>, <name><surname>Albert</surname><given-names>M</given-names></name>, <name><surname>Dieterich</surname><given-names>M</given-names></name>, <name><surname>Haselgrove</surname><given-names>C</given-names></name>, <name><surname>van der Kouwe</surname><given-names>A</given-names></name>, <etal/>, <year>2002</year>. <article-title>Whole brain segmentation: automated labeling of neuroanatomical structures in the human brain</article-title>. <source>Neuron</source><volume>33</volume> (<issue>3</issue>), <fpage>341</fpage>–<lpage>355</lpage>. doi: <pub-id pub-id-type="doi">10.1016/S0896-6273(02)00569-X</pub-id>.<pub-id pub-id-type="pmid">11832223</pub-id></mixed-citation>
    </ref>
    <ref id="R16">
      <mixed-citation publication-type="journal"><name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Sereno</surname><given-names>MI</given-names></name>, <name><surname>Dale</surname><given-names>AM</given-names></name>, <year>1999</year>. <article-title>Cortical surface-based analysis: II: inflation, flattening, and a surface-based coordinate system</article-title>. <source>Neuroimage</source><volume>9</volume> (<issue>2</issue>), <fpage>195</fpage>–<lpage>207</lpage>.<pub-id pub-id-type="pmid">9931269</pub-id></mixed-citation>
    </ref>
    <ref id="R17">
      <mixed-citation publication-type="journal"><name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Sereno</surname><given-names>MI</given-names></name>, <name><surname>Tootell</surname><given-names>RBH</given-names></name>, <name><surname>Dale</surname><given-names>AM</given-names></name>, <year>1999</year>. <article-title>High-resolution intersubject averaging and a coordinate system for the cortical surface</article-title>. <source>Hum. Brain Mapp</source><volume>8</volume> (<issue>4</issue>), <fpage>272</fpage>–<lpage>284</lpage>.<pub-id pub-id-type="pmid">10619420</pub-id></mixed-citation>
    </ref>
    <ref id="R18">
      <mixed-citation publication-type="webpage"><name><surname>Flandin</surname><given-names>G</given-names></name>, <year>2021</year>. <source>gifti: A MATLAB GIfTI library</source><comment><ext-link xlink:href="https://www.artefact.tk/software/matlab/gifti/" ext-link-type="uri">https://www.artefact.tk/software/matlab/gifti/</ext-link>.</comment></mixed-citation>
    </ref>
    <ref id="R19">
      <mixed-citation publication-type="journal"><name><surname>Friston</surname><given-names>KJ</given-names></name>, <name><surname>Holmes</surname><given-names>AP</given-names></name>, <name><surname>Worsley</surname><given-names>KJ</given-names></name>, <name><surname>Poline</surname><given-names>J-P</given-names></name>, <name><surname>Frith</surname><given-names>CD</given-names></name>, <name><surname>Frackowiak</surname><given-names>RSJ</given-names></name>, <year>1994</year>. <article-title>Statistical parametric maps in functional imaging: a general linear approach</article-title>. <source>Hum. Brain Mapp</source><volume>2</volume> (<issue>4</issue>), <fpage>189</fpage>–<lpage>210</lpage>.</mixed-citation>
    </ref>
    <ref id="R20">
      <mixed-citation publication-type="journal"><name><surname>Glasser</surname><given-names>MF</given-names></name>, <name><surname>Smith</surname><given-names>SM</given-names></name>, <name><surname>Marcus</surname><given-names>DS</given-names></name>, <name><surname>Andersson</surname><given-names>JLR</given-names></name>, <name><surname>Auerbach</surname><given-names>EJ</given-names></name>, <name><surname>Behrens</surname><given-names>TEJ</given-names></name>, <name><surname>Coalson</surname><given-names>TS</given-names></name>, <etal/>, <year>2016</year>. <article-title>The human connectome project’s neuroimaging approach</article-title>. <source>Nat. Neurosci</source><volume>19</volume> (<issue>9</issue>), <fpage>1175</fpage>–<lpage>1187</lpage>.<pub-id pub-id-type="pmid">27571196</pub-id></mixed-citation>
    </ref>
    <ref id="R21">
      <mixed-citation publication-type="journal"><name><surname>Glasser</surname><given-names>MF</given-names></name>, <name><surname>Sotiropoulos</surname><given-names>SN</given-names></name>, <name><surname>Wilson</surname><given-names>JA</given-names></name>, <name><surname>Coalson</surname><given-names>TS</given-names></name>, <name><surname>Fischl</surname><given-names>B</given-names></name>, <name><surname>Andersson</surname><given-names>JL</given-names></name>, <name><surname>Xu</surname><given-names>J</given-names></name>, <etal/>, <year>2013</year>. <article-title>The minimal preprocessing pipelines for the human connectome project</article-title>. <source>Neuroimage</source><volume>80</volume>, <fpage>105</fpage>–<lpage>124</lpage>.<pub-id pub-id-type="pmid">23668970</pub-id></mixed-citation>
    </ref>
    <ref id="R22">
      <mixed-citation publication-type="book"><name><surname>Grabner</surname><given-names>G</given-names></name>, <name><surname>Janke</surname><given-names>AL</given-names></name>, <name><surname>Budge</surname><given-names>MM</given-names></name>, <name><surname>Smith</surname><given-names>D</given-names></name>, <name><surname>Pruessner</surname><given-names>J</given-names></name>, <name><surname>Collins</surname><given-names>L</given-names></name>, <year>2006</year>. <part-title>Symmetric atlasing and model based segmentation: an application to the hippocampus in older adults</part-title>. In: <name><surname>Larsen</surname><given-names>R</given-names></name>, <name><surname>Nielsen</surname><given-names>M</given-names></name>, <name><surname>Sporring</surname><given-names>J</given-names></name>. (Eds.), <source>Medical Image Computing and Computer-Assisted Intervention MICCAI 2006. Lecture Notes in Computer Science</source>. <publisher-name>Springer</publisher-name>, <publisher-loc>Berlin, Heidelberg</publisher-loc>, pp. <fpage>58</fpage>–<lpage>66</lpage>. doi: <pub-id pub-id-type="doi">10.1007/11866763_8</pub-id>.</mixed-citation>
    </ref>
    <ref id="R23">
      <mixed-citation publication-type="journal"><name><surname>Huntenburg</surname><given-names>J</given-names></name>, <name><surname>Abraham</surname><given-names>A</given-names></name>, <name><surname>Loula</surname><given-names>J.a.</given-names></name>, <name><surname>Liem</surname><given-names>F</given-names></name>, <name><surname>Dadi</surname><given-names>K</given-names></name>, <name><surname>Varoquaux</surname><given-names>G</given-names></name>, <year>2017</year>. <article-title>Loading and plotting of cortical surface representations in nilearn</article-title>. <source>Research Ideas and Outcomes</source><volume>3</volume>.</mixed-citation>
    </ref>
    <ref id="R24">
      <mixed-citation publication-type="webpage"><name><surname>Janik</surname><given-names>RA</given-names></name>, <year>2020</year>. <source>hcp-utils: Utilities to Use HCP and HCP-like Data with nilearn and Other Python Tools</source><comment><ext-link xlink:href="https://pypi.org/project/hcp-utils/" ext-link-type="uri">https://pypi.org/project/hcp-utils/</ext-link>.</comment></mixed-citation>
    </ref>
    <ref id="R25">
      <mixed-citation publication-type="journal"><name><surname>Lindgren</surname><given-names>F</given-names></name>, <name><surname>Rue</surname><given-names>H</given-names></name>, <year>2015</year>. <article-title>Bayesian spatial modelling with r-INLA</article-title>. <source>J. Stat. Softw</source><volume>63</volume> (<issue>19</issue>), <fpage>1</fpage>–<lpage>25</lpage>.</mixed-citation>
    </ref>
    <ref id="R26">
      <mixed-citation publication-type="journal"><name><surname>Marcus</surname><given-names>D</given-names></name>, <name><surname>Harwell</surname><given-names>J</given-names></name>, <name><surname>Olsen</surname><given-names>T</given-names></name>, <name><surname>Hodge</surname><given-names>M</given-names></name>, <name><surname>Glasser</surname><given-names>M</given-names></name>, <name><surname>Prior</surname><given-names>F</given-names></name>, <name><surname>Jenkinson</surname><given-names>M</given-names></name>, <name><surname>Laumann</surname><given-names>T</given-names></name>, <name><surname>Curtiss</surname><given-names>S</given-names></name>, <name><surname>Essen</surname><given-names>DV</given-names></name>, <year>2011</year>. <article-title>Informatics and data mining tools and strategies for the human connectome project</article-title>. <source>Front. Neuroinform</source><volume>5</volume>, <fpage>4</fpage>. doi: <pub-id pub-id-type="doi">10.3389/fninf.2011.00004</pub-id>.<pub-id pub-id-type="pmid">21743807</pub-id></mixed-citation>
    </ref>
    <ref id="R27">
      <mixed-citation publication-type="journal"><name><surname>Martin</surname><given-names>AD</given-names></name>, <name><surname>Quinn</surname><given-names>KM</given-names></name>, <name><surname>Park</surname><given-names>JH</given-names></name>, <year>2011</year>. <article-title>MCMCpack: Markov chain Monte Carlo in R</article-title>. <source>J. Stat. Softw</source><volume>42</volume> (<issue>9</issue>), <fpage>22</fpage>. <comment><ext-link xlink:href="https://www.jstatsoft.org/v42/i09/" ext-link-type="uri">https://www.jstatsoft.org/v42/i09/</ext-link></comment></mixed-citation>
    </ref>
    <ref id="R28">
      <mixed-citation publication-type="book"><collab>MATLAB</collab>, <year>2021</year>. <source>Version 9.10.0 (r2021a)</source>. <publisher-loc>Natick, Massachusetts</publisher-loc>: <publisher-name>The MathWorks Inc</publisher-name>.</mixed-citation>
    </ref>
    <ref id="R29">
      <mixed-citation publication-type="webpage"><name><surname>Mejia</surname><given-names>AF</given-names></name>, <year>2021</year>. <source>templateICAr: Estimate Brain Networks Using the Template ICA Model Employing Empirical Population Priors</source><comment><ext-link xlink:href="https://github.com/mandymejia/templateICAr" ext-link-type="uri">https://github.com/mandymejia/templateICAr</ext-link>.</comment></mixed-citation>
    </ref>
    <ref id="R30">
      <mixed-citation publication-type="journal"><name><surname>Mejia</surname><given-names>AF</given-names></name>, <name><surname>Nebel</surname><given-names>MB</given-names></name>, <name><surname>Eloyan</surname><given-names>A</given-names></name>, <name><surname>Caffo</surname><given-names>B</given-names></name>, <name><surname>Lindquist</surname><given-names>MA</given-names></name>, <year>2017</year>. <article-title>PCA leverage: outlier detection for high-dimensional functional magnetic resonance imaging data</article-title>. <source>Biostatistics</source><volume>18</volume> (<issue>3</issue>), <fpage>521</fpage>–<lpage>536</lpage>.<pub-id pub-id-type="pmid">28334131</pub-id></mixed-citation>
    </ref>
    <ref id="R31">
      <mixed-citation publication-type="journal"><name><surname>Mejia</surname><given-names>AF</given-names></name>, <name><surname>Nebel</surname><given-names>MB</given-names></name>, <name><surname>Wang</surname><given-names>Y</given-names></name>, <name><surname>Caffo</surname><given-names>BS</given-names></name>, <name><surname>Guo</surname><given-names>Y</given-names></name>, <year>2020</year>. <article-title>Template independent component analysis: targeted and reliable estimation of subject-level brain networks using big data population priors</article-title>. <source>J. Am. Stat. Assoc</source><volume>115</volume> (<issue>531</issue>), <fpage>1151</fpage>–<lpage>1177</lpage>.<pub-id pub-id-type="pmid">33060872</pub-id></mixed-citation>
    </ref>
    <ref id="R32">
      <mixed-citation publication-type="journal"><name><surname>Mejia</surname><given-names>AF</given-names></name>, <name><surname>Yue</surname><given-names>Y</given-names></name>, <name><surname>Bolin</surname><given-names>D</given-names></name>, <name><surname>Lindgren</surname><given-names>F</given-names></name>, <name><surname>Lindquist</surname><given-names>MA</given-names></name>, <year>2020</year>. <article-title>A Bayesian general linear modeling approach to cortical surface fMRI data analysis</article-title>. <source>J. Am. Stat. Assoc</source><volume>115</volume> (<issue>530</issue>), <fpage>501</fpage>–<lpage>520</lpage>.<pub-id pub-id-type="pmid">33060871</pub-id></mixed-citation>
    </ref>
    <ref id="R33">
      <mixed-citation publication-type="journal"><name><surname>Mowinckel</surname><given-names>AM</given-names></name>, <name><surname>Vidal-Piñeiro</surname><given-names>D</given-names></name>, <year>2020</year>. <article-title>Visualization of brain statistics with R packages ggseg and ggseg3d</article-title>. <source>Adv. Methods Pract. Psychol.Sci</source><volume>3</volume> (<issue>4</issue>), <fpage>466</fpage>–<lpage>483</lpage>. doi: <pub-id pub-id-type="doi">10.1177/2515245920928009</pub-id>.</mixed-citation>
    </ref>
    <ref id="R34">
      <mixed-citation publication-type="webpage"><name><surname>Murdoch</surname><given-names>D</given-names></name>, <name><surname>Adler</surname><given-names>D</given-names></name>, <year>2021</year>. rgl: <fpage>3D</fpage><source>Visualization Using OpenGL</source><comment><ext-link xlink:href="https://github.com/dmurdoch/rgl" ext-link-type="uri">https://github.com/dmurdoch/rgl</ext-link>.</comment></mixed-citation>
    </ref>
    <ref id="R35">
      <mixed-citation publication-type="webpage"><name><surname>Muschelli</surname><given-names>J</given-names></name>, <year>2016</year>. <source>papayar: View Medical Research Images Using the Papaya JavaScript Library</source><comment><ext-link xlink:href="https://CRAN.R-project.org/package=papayar" ext-link-type="uri">https://CRAN.R-project.org/package=papayar</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R36">
      <mixed-citation publication-type="webpage"><name><surname>Muschelli</surname><given-names>John</given-names></name>, <year>2018</year>. <source>cifti: Toolbox for Connectivity Informatics Technology Initiative (‘CIFTI’) Files</source><comment><ext-link xlink:href="https://CRAN.R-project.org/package=cifti" ext-link-type="uri">https://CRAN.R-project.org/package=cifti</ext-link>.</comment><comment><ext-link xlink:href="https://CRAN.R-project.org/package=cifti" ext-link-type="uri">https://CRAN.R-project.org/package=cifti</ext-link></comment></mixed-citation>
    </ref>
    <ref id="R37">
      <mixed-citation publication-type="webpage"><name><surname>Muschelli</surname><given-names>J</given-names></name>, <year>2020</year>. <source>Gifti: Reads in ‘Neuroimaging’ ‘GIFTI’ Files with Geometry Information</source><comment><ext-link xlink:href="https://CRAN.R-project.org/package=gifti" ext-link-type="uri">https://CRAN.R-project.org/package=gifti</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R38">
      <mixed-citation publication-type="webpage"><name><surname>Oostenveld</surname><given-names>R</given-names></name>, <year>2021</year>. <source>cifti-matlab: MATLAB Code for Reading and Writing CIFTI files, v2</source><comment><ext-link xlink:href="https://github.com/Washington-University/cifti-matlab" ext-link-type="uri">https://github.com/Washington-University/cifti-matlab</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R39">
      <mixed-citation publication-type="webpage"><name><surname>Pham</surname><given-names>D</given-names></name>, <name><surname>John</surname><given-names>M</given-names></name>, <name><surname>McDonald</surname><given-names>D</given-names></name>, <name><surname>Mejia</surname><given-names>AF</given-names></name>, <year>2021a</year>. <source>fMRIscrub: Scrubbing and Other Data Cleaning Routines for fMRI</source><comment><ext-link xlink:href="https://github.com/mandymejia/fMRIscrub" ext-link-type="uri">https://github.com/mandymejia/fMRIscrub</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R40">
      <mixed-citation publication-type="other"><name><surname>Pham</surname><given-names>D</given-names></name>, <name><surname>McDonald</surname><given-names>D</given-names></name>, <name><surname>Ding</surname><given-names>L</given-names></name>, <name><surname>Nebel</surname><given-names>MB</given-names></name>, <name><surname>Mejia</surname><given-names>AF</given-names></name>, <year>2021b</year>. <article-title>Projection scrubbing: a more effective, data-driven fMRI denoising method</article-title>. <source>arXiv preprint arXiv:2108.00319</source>.</mixed-citation>
    </ref>
    <ref id="R41">
      <mixed-citation publication-type="webpage"><name><surname>Plummer</surname><given-names>M</given-names></name>, <year>2003</year>. <source>JAGS: A Program for Analysis of Bayesian Graphical Models Using Gibbs Sampling</source></mixed-citation>
    </ref>
    <ref id="R42">
      <mixed-citation publication-type="journal"><name><surname>Power</surname><given-names>JD</given-names></name>, <name><surname>Mitra</surname><given-names>A</given-names></name>, <name><surname>Laumann</surname><given-names>TO</given-names></name>, <name><surname>Snyder</surname><given-names>AZ</given-names></name>, <name><surname>Schlaggar</surname><given-names>BL</given-names></name>, <name><surname>Petersen</surname><given-names>SE</given-names></name>, <year>2014</year>. <article-title>Methods to detect, characterize, and remove motion artifact in resting state fMRI</article-title>. <source>Neuroimage</source><volume>84</volume>, <fpage>320</fpage>–<lpage>341</lpage>.<pub-id pub-id-type="pmid">23994314</pub-id></mixed-citation>
    </ref>
    <ref id="R43">
      <mixed-citation publication-type="book"><collab>R Core Team</collab>, <year>2021</year>. <source>R: A Language and environment for statistical computing</source>. <publisher-loc>Vienna, Austria</publisher-loc>: <publisher-name>R Foundation for Statistical Computing</publisher-name>. <comment><ext-link xlink:href="https://www.R-project.org/" ext-link-type="uri">https://www.R-project.org/</ext-link></comment></mixed-citation>
    </ref>
    <ref id="R44">
      <mixed-citation publication-type="journal"><name><surname>Rue</surname><given-names>H</given-names></name>, <name><surname>Martino</surname><given-names>S</given-names></name>, <name><surname>Chopin</surname><given-names>N</given-names></name>, <year>2009</year>. <article-title>Approximate Bayesian inference for latent Gaussian models using integrated nested Laplace approximations (with discussion)</article-title>. <source>J. R. Stat. Soc. B</source><volume>71</volume>, <fpage>319</fpage>–<lpage>392</lpage>. <comment><ext-link xlink:href="https://www.r-inla.org/" ext-link-type="uri">https://www.r-inla.org/</ext-link></comment></mixed-citation>
    </ref>
    <ref id="R45">
      <mixed-citation publication-type="journal"><name><surname>Salimi-Khorshidi</surname><given-names>G</given-names></name>, <name><surname>Douaud</surname><given-names>G</given-names></name>, <name><surname>Beckmann</surname><given-names>CF</given-names></name>, <name><surname>Glasser</surname><given-names>MF</given-names></name>, <name><surname>Griffanti</surname><given-names>L</given-names></name>, <name><surname>Smith</surname><given-names>SM</given-names></name>, <year>2014</year>. <article-title>Automatic denoising of functional MRI data: combining independent component analysis and hierarchical fusion of classifiers</article-title>. <source>Neuroimage</source><volume>90</volume>, <fpage>449</fpage>–<lpage>468</lpage>. doi: <pub-id pub-id-type="doi">10.1016/j.neuroimage.2013.11.046</pub-id>. <month>April</month><pub-id pub-id-type="pmid">24389422</pub-id></mixed-citation>
    </ref>
    <ref id="R46">
      <mixed-citation publication-type="journal"><name><surname>Schaefer</surname><given-names>A</given-names></name>, <name><surname>Kong</surname><given-names>R</given-names></name>, <name><surname>Gordon</surname><given-names>EM</given-names></name>, <name><surname>Laumann</surname><given-names>TO</given-names></name>, <name><surname>Zuo</surname><given-names>X-N</given-names></name>, <name><surname>Holmes</surname><given-names>AJ</given-names></name>, <name><surname>Eick-hoff</surname><given-names>SB</given-names></name>, <name><surname>Yeo</surname><given-names>BTT</given-names></name>, <year>2018</year>. <article-title>Local-global parcellation of the human cerebral cortex from intrinsic functional connectivity MRI</article-title>. <source>Cerebral Cortex</source><volume>28</volume> (<issue>9</issue>), <fpage>3095</fpage>–<lpage>3114</lpage>. doi: <pub-id pub-id-type="doi">10.1093/cercor/bhx179</pub-id>.<pub-id pub-id-type="pmid">28981612</pub-id></mixed-citation>
    </ref>
    <ref id="R47">
      <mixed-citation publication-type="book"><name><surname>Schäfer</surname><given-names>T</given-names></name>, <name><surname>Ecker</surname><given-names>C</given-names></name>, <year>2020</year>. <source>Fsbrain: An R Package for the Visualization of Structural Neuroimaging Data</source>. <publisher-name>Cold Spring Harbor Laboratory</publisher-name> doi: <pub-id pub-id-type="doi">10.1101/2020.09.18.302935</pub-id>.</mixed-citation>
    </ref>
    <ref id="R48">
      <mixed-citation publication-type="webpage"><name><surname>Schäfer</surname><given-names>T</given-names></name>, <name><surname>Ecker</surname><given-names>C</given-names></name>, <year>2021</year>. <source>freesurferformats: Read and Write ‘FreeSurfer’ Neuroimaging File Formats</source><comment><ext-link xlink:href="https://CRAN.R-project.org/package=freesurferformats" ext-link-type="uri">https://CRAN.R-project.org/package=freesurferformats</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R49">
      <mixed-citation publication-type="webpage"><name><surname>Shreiner</surname><given-names>D</given-names></name>, <year>2009</year>. <source>OpenGL Programming Guide: The Official Guide to Learning OpenGL, Versions 3.0 and 3.1</source>.</mixed-citation>
    </ref>
    <ref id="R50">
      <mixed-citation publication-type="journal"><name><surname>Smyser</surname><given-names>CD</given-names></name>, <name><surname>Snyder</surname><given-names>AZ</given-names></name>, <name><surname>Neil</surname><given-names>JJ</given-names></name>, <year>2011</year>. <article-title>Functional connectivity MRI in infants: exploration of the functional organization of the developing brain</article-title>. <source>Neuroimage</source><volume>56</volume> (<issue>3</issue>), <fpage>1437</fpage>–<lpage>1452</lpage>.<pub-id pub-id-type="pmid">21376813</pub-id></mixed-citation>
    </ref>
    <ref id="R51">
      <mixed-citation publication-type="webpage"><name><surname>Spencer</surname><given-names>D</given-names></name>, <name><surname>Pham</surname><given-names>DD</given-names></name>, <name><surname>Mejia</surname><given-names>AF</given-names></name>, <year>2021</year>. <source>BayesfMRI: Bayesian Methods for Functional MRI</source><comment><ext-link xlink:href="https://github.com/mandymejia/BayesfMRI" ext-link-type="uri">https://github.com/mandymejia/BayesfMRI</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R52">
      <mixed-citation publication-type="webpage"><collab>Stan Development Team</collab>, <year>2021b</year>. <source>RStan: The R Interface to Stan</source>. <comment><ext-link xlink:href="http://mc-stan.org/" ext-link-type="uri">http://mc-stan.org/</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R53">
      <mixed-citation publication-type="journal"><name><surname>Thomas Yeo</surname><given-names>BT</given-names></name>, <name><surname>Krienen</surname><given-names>FM</given-names></name>, <name><surname>Sepulcre</surname><given-names>J</given-names></name>, <name><surname>Sabuncu</surname><given-names>MR</given-names></name>, <name><surname>Lashkari</surname><given-names>D</given-names></name>, <name><surname>Hollinshead</surname><given-names>M</given-names></name>, <name><surname>Roffman</surname><given-names>JL</given-names></name>, <etal/>, <year>2011</year>. <article-title>The organization of the human cerebral cortex estimated by intrinsic functional connectivity</article-title>. <source>J. Neurophysiol</source><volume>106</volume> (<issue>3</issue>), <fpage>1125</fpage>–<lpage>1165</lpage>. doi: <pub-id pub-id-type="doi">10.1152/jn.00338.2011</pub-id>.<pub-id pub-id-type="pmid">21653723</pub-id></mixed-citation>
    </ref>
    <ref id="R54">
      <mixed-citation publication-type="journal"><name><surname>Van Essen</surname><given-names>DC</given-names></name>, <year>2012</year>. <article-title>Cortical cartography and caret software</article-title>. <source>Neuroimage</source><volume>62</volume> (<issue>2</issue>), <fpage>757</fpage>–<lpage>764</lpage>.<pub-id pub-id-type="pmid">22062192</pub-id></mixed-citation>
    </ref>
    <ref id="R55">
      <mixed-citation publication-type="journal"><name><surname>Van Essen</surname><given-names>DC</given-names></name>, <name><surname>Smith</surname><given-names>SM</given-names></name>, <name><surname>Barch</surname><given-names>DM</given-names></name>, <name><surname>Behrens</surname><given-names>TEJ</given-names></name>, <name><surname>Yacoub</surname><given-names>E</given-names></name>, <name><surname>Ugurbil</surname><given-names>K</given-names></name>, <name><surname>Consortium</surname><given-names>W-MH</given-names></name>, <year>2013</year>. <article-title>The WU-minn human connectome project: an overview</article-title>. <source>Neuroimage</source><volume>80</volume>, <fpage>62</fpage>–<lpage>79</lpage>.<pub-id pub-id-type="pmid">23684880</pub-id></mixed-citation>
    </ref>
    <ref id="R56">
      <mixed-citation publication-type="webpage"><name><surname>Vaidyanathan</surname><given-names>Ramnath</given-names></name>, <name><surname>Xie</surname><given-names>Y</given-names></name>, <name><surname>Allaire</surname><given-names>JJ</given-names></name>, <name><surname>Cheng</surname><given-names>J</given-names></name>, <name><surname>Sievert</surname><given-names>C</given-names></name>, <name><surname>Russell</surname><given-names>K</given-names></name>, <year>2020</year>. <source>htmlwidgets: HTML Widgets for R</source><comment><ext-link xlink:href="https://CRAN.R-project.org/package=htmlwidgets" ext-link-type="uri">https://CRAN.R-project.org/package=htmlwidgets</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R57">
      <mixed-citation publication-type="book"><name><surname>van Rossum</surname><given-names>G</given-names></name>, <name><surname>Drake</surname><given-names>FL</given-names><suffix>Jr</suffix></name>, <year>1995</year>. <source>Python Reference Manual</source>. <publisher-name>Centrum voor Wiskunde en Informatica Amsterdam</publisher-name>.</mixed-citation>
    </ref>
    <ref id="R58">
      <mixed-citation publication-type="journal"><name><surname>Whitcher</surname><given-names>B</given-names></name>, <name><surname>Schmid</surname><given-names>VJ</given-names></name>, <name><surname>Thornton</surname><given-names>A</given-names></name>, <year>2011</year>. <article-title>Working with the DICOM and NIfTI data standards in R</article-title>. <source>J. Stat. Softw</source><volume>44</volume> (<issue>6</issue>), <fpage>1</fpage>–<lpage>28</lpage>. <comment><ext-link xlink:href="https://www.jstatsoft.org/v44/i06/" ext-link-type="uri">https://www.jstatsoft.org/v44/i06/</ext-link></comment></mixed-citation>
    </ref>
    <ref id="R59">
      <mixed-citation publication-type="webpage"><name><surname>Wickham</surname><given-names>H</given-names></name>, <name><surname>Hester</surname><given-names>J</given-names></name>, <name><surname>Ooms</surname><given-names>J</given-names></name>, <year>2020</year>. <source>xml2: Parse XML</source>. <comment><ext-link xlink:href="https://CRAN.R-project.org/package=xml2" ext-link-type="uri">https://CRAN.R-project.org/package=xml2</ext-link></comment>.</mixed-citation>
    </ref>
    <ref id="R60">
      <mixed-citation publication-type="webpage"><name><surname>Xie</surname><given-names>Y</given-names></name>, <year>2021</year>. <source>knitr: A general-purpose package for dynamic report generation in R</source>. <comment><ext-link xlink:href="https://yihui.org/knitr/" ext-link-type="uri">https://yihui.org/knitr/</ext-link></comment>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<floats-group>
  <fig position="float" id="F1">
    <label>Fig. 1.</label>
    <caption>
      <title>Summary of ciftiTools functionality.</title>
      <p id="P102">ciftiTools supports reading and writing (A), visualization (B), Workbench processing (C), and data manipulation and math (D) for CIFTI- and GIFTI-format data.</p>
    </caption>
    <graphic xlink:href="nihms-1787509-f0001" position="float"/>
  </fig>
  <fig position="float" id="F2">
    <label>Fig. 2.</label>
    <caption>
      <title>The structure of a “xifti“ object.</title>
      <p id="P103">A “xifti“ object can be constructed from CIFTI data and GIFTI surface geometry data using read_xifti. The object is a nested, ordered list, and any components that are absent will be NULL, for example if the CIFTI did not contain every brain structure or if no surfaces were provided. Using read_xifti2 or as.xifti, it is also possible to construct a “xifti” object from GIFTI files which contain cortical data and/or a NIFTI file which contains subcortical data, rather than from a CIFTI file. In this case, the CIFTI metadata (intent, brain structures, intent-specific metadata, misc.) will be absent.</p>
    </caption>
    <graphic xlink:href="nihms-1787509-f0002" position="float"/>
  </fig>
  <fig position="float" id="F3">
    <label>Fig. 3.</label>
    <caption>
      <p id="P104">First fMRI volume before and after smoothing with smooth_xifti.</p>
    </caption>
    <graphic xlink:href="nihms-1787509-f0003" position="float"/>
  </fig>
  <fig position="float" id="F4">
    <label>Fig. 4.</label>
    <caption>
      <p id="P105">Schaefer parcellation and PCC parcel.</p>
    </caption>
    <graphic xlink:href="nihms-1787509-f0004" position="float"/>
  </fig>
  <fig position="float" id="F5">
    <label>Fig. 5.</label>
    <caption>
      <p id="P106">PCC seed correlation.</p>
    </caption>
    <graphic xlink:href="nihms-1787509-f0005" position="float"/>
  </fig>
  <fig position="float" id="F6">
    <label>Fig. 6.</label>
    <caption>
      <title>Comparison of ciftiTools and Connectome Workbench cortical surface visualizations.</title>
      <p id="P107">The same data and surface are plotted with ciftiTools (A) and the wb_view Connectome Workbench GUI (B). The same color palettes and limits were used, and the background of the Connectome Workbench plot was set to white to match the default for ciftiTools. The plot dimensions and surface sizes differ only slightly, and these parameters can be adjusted with both tools. Otherwise, the main differences are that (1) the color bar has a different appearance and is lower in the ciftiTools plot, such that it does not overlap with the left medial view, (2) missing values are white by default in ciftiTools, but light gray for the Connectome Workbench, and (3) there is more contrast–brighter highlights and darker shadows–in the 3-dimensional shading in the ciftiTools plot.</p>
    </caption>
    <graphic xlink:href="nihms-1787509-f0006" position="float"/>
  </fig>
  <table-wrap position="float" id="T1" orientation="landscape">
    <label>Table 1</label>
    <caption>
      <title>Summary of comparison between programmatic tools for CIFTI and GIFTI files.</title>
      <p id="P108">Checkmarks are assigned if the tool (rows) directly enables a user to complete the task (columns). A “3” for CIFTI functionalities in ciftiTools indicates that only three CIFTI intents are supported: “dtseries,” “dscalar,” and “dlabel.” Moreover, tools receiving checkmarks in the same column may enable the task to different extents. For example, the manipulation functions in hcp-utils support normalizing data values and applying a parcellation, whereas those in cifti-matlab support data and metadata replacement. While ciftiTools is designed to support all listed tasks, other tools are not meant to support all these tasks on their own. For example, hcp-utils is designed to be used in conjunction with NiBabel and nilearn. Lastly, note that some tools have external dependencies: ciftiTools also requires the Connectome Workbench for most of its functionality, ggsegExtra requires FreeSurfer for reading in new parcellations, and ciftify uses FSL, FreeSurfer and the Connectome Workbench to convert and manipulate CIFTI files. An asterisk has been added to the “Language” column for these tools to indicate the need for additional software.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <colgroup span="1">
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
      </colgroup>
      <thead>
        <tr>
          <th align="left" valign="top" rowspan="1" colspan="1"/>
          <th align="left" valign="top" rowspan="1" colspan="1">Language</th>
          <th colspan="2" align="left" valign="top" rowspan="1">Read<hr/></th>
          <th colspan="2" align="left" valign="top" rowspan="1">Write<hr/></th>
          <th colspan="2" align="left" valign="top" rowspan="1">Plot<hr/></th>
          <th colspan="2" align="left" valign="top" rowspan="1">Manipulate<hr/></th>
        </tr>
        <tr>
          <th align="left" valign="top" rowspan="1" colspan="1"/>
          <th align="left" valign="top" rowspan="1" colspan="1"/>
          <th align="left" valign="top" rowspan="1" colspan="1">CIFTI</th>
          <th align="left" valign="top" rowspan="1" colspan="1">GIFTI</th>
          <th align="left" valign="top" rowspan="1" colspan="1">CIFTI</th>
          <th align="left" valign="top" rowspan="1" colspan="1">GIFTI</th>
          <th align="left" valign="top" rowspan="1" colspan="1">Cortex</th>
          <th align="left" valign="top" rowspan="1" colspan="1">Subcortex</th>
          <th align="left" valign="top" rowspan="1" colspan="1">CIFTI</th>
          <th align="left" valign="top" rowspan="1" colspan="1">GIFTI</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">ciftiTools</td>
          <td align="left" valign="top" rowspan="1" colspan="1">R *</td>
          <td align="left" valign="top" rowspan="1" colspan="1">3</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">3</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">3</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">cifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">R</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">gifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">R</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">freesurferformats, fsbrain</td>
          <td align="left" valign="top" rowspan="1" colspan="1">R</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">ggseg, ggseg3d, ggsegExtra</td>
          <td align="left" valign="top" rowspan="1" colspan="1">R *</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">ciftify</td>
          <td align="left" valign="top" rowspan="1" colspan="1">Python *</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">NiBabel</td>
          <td align="left" valign="top" rowspan="1" colspan="1">Python</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">nilearn</td>
          <td align="left" valign="top" rowspan="1" colspan="1">Python</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">hcp-utils</td>
          <td align="left" valign="top" rowspan="1" colspan="1">Python</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">cifti-matlab</td>
          <td align="left" valign="top" rowspan="1" colspan="1">MATLAB</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">GIfTI</td>
          <td align="left" valign="top" rowspan="1" colspan="1">MATLAB</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1">✓</td>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
          <td align="left" valign="top" rowspan="1" colspan="1"/>
        </tr>
      </tbody>
    </table>
  </table-wrap>
  <table-wrap position="float" id="T2" orientation="landscape">
    <label>Table 2</label>
    <caption>
      <title>Connectome Workbench commands used by ciftiTools.</title>
      <p id="P109">Note that any Workbench command, including those not currently integrated in the package, can be executed from within R using the ciftiTools function run_wb_cmd, which conveniently appends the Workbench path to the beginning of the command. Workbench commands can also be executed within the R environment using the base R function system.</p>
    </caption>
    <table frame="hsides" rules="groups">
      <colgroup span="1">
        <col align="left" valign="middle" span="1"/>
        <col align="left" valign="middle" span="1"/>
      </colgroup>
      <thead>
        <tr>
          <th align="left" valign="top" rowspan="1" colspan="1">ciftiTools function</th>
          <th align="left" valign="top" rowspan="1" colspan="1">Workbench command(s) it interfaces with</th>
        </tr>
      </thead>
      <tbody>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">info_cifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-nifti-information</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">read_xifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-convert, -metric-merge</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">write_xifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-create-dense-timeseries, -cifti-create-dense-scalar, -cifti-create-label</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">separate_cifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-separate</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">write_nifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-volume-label-import</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">resample_xifti and resample_gifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-separate, -metric-resample, -label-resample, -surface-resample, -surface-create-sphere, -surface-flip-lr, -set-structure, <break/>-cifti-create-dense-timeseries, -cifti-create-dense-scalar, cifti-create-label</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">resample_cifti_from_template</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-resample</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">smooth_xifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-smoothing, -cifti-change-mapping</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">smooth_gifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-metric-smoothing</td>
        </tr>
        <tr>
          <td align="left" valign="top" rowspan="1" colspan="1">convert_xifti</td>
          <td align="left" valign="top" rowspan="1" colspan="1">-cifti-change-mapping</td>
        </tr>
      </tbody>
    </table>
  </table-wrap>
</floats-group>

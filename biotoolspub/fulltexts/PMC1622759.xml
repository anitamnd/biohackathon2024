<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title>BMC Bioinformatics</journal-title>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">1622759</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-7-449</article-id>
    <article-id pub-id-type="pmid">17038176</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-7-449</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Integrative missing value estimation for microarray data</article-title>
    </title-group>
    <contrib-group>
      <contrib id="A1" contrib-type="author">
        <name>
          <surname>Hu</surname>
          <given-names>Jianjun</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>jianjunh@usc.edu</email>
      </contrib>
      <contrib id="A2" contrib-type="author">
        <name>
          <surname>Li</surname>
          <given-names>Haifeng</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>haifengl@usc.edu</email>
      </contrib>
      <contrib id="A3" contrib-type="author">
        <name>
          <surname>Waterman</surname>
          <given-names>Michael S</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>msw@usc.edu</email>
      </contrib>
      <contrib id="A4" corresp="yes" contrib-type="author">
        <name>
          <surname>Zhou</surname>
          <given-names>Xianghong Jasmine</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>xjzhou@usc.edu</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Molecular and Computational Biology Section, Department of Biological Sciences, University of Southern California, Los Angeles, CA, 900089, USA</aff>
    <pub-date pub-type="collection">
      <year>2006</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>10</month>
      <year>2006</year>
    </pub-date>
    <volume>7</volume>
    <fpage>449</fpage>
    <lpage>449</lpage>
    <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/7/449"/>
    <history>
      <date date-type="received">
        <day>16</day>
        <month>8</month>
        <year>2006</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>10</month>
        <year>2006</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright Â© 2006 Hu et al; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2006</copyright-year>
      <copyright-holder>Hu et al; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p>
        <!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Hu
               Jianjun
               
               jianjunh@usc.edu
            </dc:author><dc:title>
            Integrative missing value estimation for microarray data
         </dc:title><dc:date>2006</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 7(1): 449-. (2006)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2006)7:1&#x0003c;449&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>-->
      </license>
    </permissions>
    <abstract>
      <sec>
        <title>Background</title>
        <p>Missing value estimation is an important preprocessing step in microarray analysis. Although several methods have been developed to solve this problem, their performance is unsatisfactory for datasets with high rates of missing data, high measurement noise, or limited numbers of samples. In fact, more than 80% of the time-series datasets in Stanford Microarray Database contain less than eight samples.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We present the integrative Missing Value Estimation method (iMISS) by incorporating information from multiple reference microarray datasets to improve missing value estimation. For each gene with missing data, we derive a consistent neighbor-gene list by taking reference data sets into consideration. To determine whether the given reference data sets are sufficiently informative for integration, we use a submatrix imputation approach. Our experiments showed that iMISS can significantly and consistently improve the accuracy of the state-of-the-art Local Least Square (LLS) imputation algorithm by up to 15% improvement in our benchmark tests.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>We demonstrated that the order-statistics-based integrative imputation algorithms can achieve significant improvements over the state-of-the-art missing value estimation approaches such as LLS and is especially good for imputing microarray datasets with a limited number of samples, high rates of missing data, or very noisy measurements. With the rapid accumulation of microarray datasets, the performance of our approach can be further improved by incorporating larger and more appropriate reference datasets.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>Microarray technology has been one of the most useful tools in functional genomics research [<xref ref-type="bibr" rid="B1">1</xref>]. However, due to the inherent noise and the limitation of experimental systems, it is estimated that a microarray dataset on average has more than 5% missing values, affecting more than 60% of the genes [<xref ref-type="bibr" rid="B2">2</xref>]. Since many statistical analysis algorithms such as principal component analysis, singular value decomposition, support vector machines, and artificial neural networks either require complete datasets or are subject to significant performance degradations due to missing values [<xref ref-type="bibr" rid="B2">2</xref>], missing value estimation becomes an important preprocessing step for microarray data analysis.</p>
    <p>The key issue of missing value estimation of microarray data is how to exploit the linear [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>] or non-linear relationship [<xref ref-type="bibr" rid="B5">5</xref>] among the genes (rows) or the samples (columns). Since 2001, a series of microarray missing value estimation techniques have been developed [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B6">6</xref>-<xref ref-type="bibr" rid="B11">11</xref>]. These algorithms can be classified into three categories: global approaches, local approaches, and hybrid approaches which are the mixture of the previous two [<xref ref-type="bibr" rid="B12">12</xref>]. Global imputation algorithms such as singular value decomposition (SVDimpute) [<xref ref-type="bibr" rid="B6">6</xref>] and Bayesian principal components analysis (BPCA) [<xref ref-type="bibr" rid="B8">8</xref>] assume the existence of a covariance structure among all the genes or samples in the data matrix and thus are only suitable for datasets with strong global correlation, such as time-series datasets [<xref ref-type="bibr" rid="B8">8</xref>]. In addition, to achieve satisfactory performance, these global algorithms usually require a large number of samples (&gt;20~30) as shown in [<xref ref-type="bibr" rid="B4">4</xref>] and [<xref ref-type="bibr" rid="B8">8</xref>]. However, many microarray datasets are non-time series or are noisy. For these types of datasets, local imputation algorithms such as K-nearest neighbor (KNN) [<xref ref-type="bibr" rid="B6">6</xref>], least square (LSImpute) [<xref ref-type="bibr" rid="B3">3</xref>], local least square (LLS) [<xref ref-type="bibr" rid="B4">4</xref>], collateral missing value estimation (CMVE) [<xref ref-type="bibr" rid="B9">9</xref>], and Gaussian mixture clustering (GMCImpute) are shown to be more suitable as they can exploit the dominant local similarity structure. These algorithms begin by selecting a set of genes with the highest relevance to the gene with missing values, based on Euclidian distance [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B6">6</xref>], Pearson's Correlation [<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>], or covariance estimate [<xref ref-type="bibr" rid="B9">9</xref>]. However, for noisy datasets or datasets with a limited number of samples, it is difficult to reliably identify true neighbor genes, especially when candidate genes contain missing values themselves. For example, LLS is not suggested to be used for datasets with no more than four samples and SVDimpute not for datasets with less than eight samples. In these cases, naturally, additional information should be exploited.</p>
    <p>Recently, Oba <italic>et al </italic>[<xref ref-type="bibr" rid="B8">8</xref>] examined the effect of directly merging two microarray datasets from the same study for imputation, and found that this brought some improvement to BPCA and SVDimpute but degraded the performance of KNN. But they did not exploit external microarray datasets and no method was provided to select these external reference datasets. The first algorithm that explicitly utilizes external information is GOImpute proposed by Tuikkala et al. [<xref ref-type="bibr" rid="B13">13</xref>]. It exploits the functional similarity information embedded in the human-annotated GeneOntology (GO) databases â in addition to expression data similarity â to enhance the neighbor gene selection. For three datasets with less than 10 samples, GOImpute is shown to outperform KNN, but this is significant only when high rates of missing values exist so that KNN cannot estimate the neighborhood relationships correctly. GOImpute also failed to improve the LLS algorithm, which is one of the best local estimation algorithms. In addition, GOImpute is subject to the limitation on the number and accuracy of the gene functions annotated in gene ontology databases.</p>
    <p>In this paper, we propose utilizing the rapidly accumulating microarray data in public databases to improve missing value estimation. Intuitively, if a set of genes frequently show expression similarity to the target gene over multiple data sets, they constitute a robust neighborhood which tend to show expression co-variations with the target gene. This is useful for imputing data sets with a few samples, for which insufficient information is available to select neighbor genes accurately. Here, we design a systematic framework of integrative Missing Value Estimation (iMISS) to automatically select appropriate reference microarray data sets, and discover consistent neighbor gene sets of a target gene based on order statistics. We show that our integrative approach can significantly and consistently improve the performance of the state-of-the-art LLS algorithm, which GOImpute did not achieve [<xref ref-type="bibr" rid="B13">13</xref>]. We compare the order-statistics-based integration method with a basic average-distance-based integration approach and show that the former is more robust. We applied iMISS to both LLS and KNN and demonstrate their performance differences due to their inherent natures.</p>
  </sec>
  <sec>
    <title>Results</title>
    <sec>
      <title>Data sets</title>
      <p>We tested our algorithms on two groups of datasets downloaded from the public yeast microarray datasets [<xref ref-type="bibr" rid="B14">14</xref>]. The first group is composed of three datasets selected to represent diverse dataset types with the consideration that the iMISS approach is most useful for datasets with a small number samples. The first dataset (DER7) is a temporal gene expression dataset studying metabolic shift from fermentation to respiration in <italic>Saccharomyces cerevisiae </italic>[<xref ref-type="bibr" rid="B15">15</xref>]. The second dataset (OGA8) is on the study of phosphate accumulation and polyphosphate metabolism in <italic>S. cerevisiae </italic>by Ogawa et al [<xref ref-type="bibr" rid="B16">16</xref>]. The third dataset (FER4) is the on the study of gene expression patterns following adaptive evolution in yeast [<xref ref-type="bibr" rid="B17">17</xref>]. The second dataset group includes the alpha part (SP.ALPHA18) and the elutriation part (SP.ELU14) [<xref ref-type="bibr" rid="B18">18</xref>] of Spellman time series cell-cycle datasets. They have 18 and 14 samples respectively and are chosen for evaluating how the number of samples may influence the performance of the algorithms. Among these datasets, four have been used in previous missing value estimation studies: DER7, SP.ELU14, and OGA8 were used in GOImpute [<xref ref-type="bibr" rid="B13">13</xref>] and DER7, SP.ELU14, and SP.ALPHA18 were used in KNN imputation [<xref ref-type="bibr" rid="B6">6</xref>].</p>
      <p>To create test datasets, we compiled a complete expression matrix from each of the above microarray datasets by removing any gene that contains missing values. Table <xref ref-type="table" rid="T1">1</xref> shows the size of the resulting test datasets. For each complete matrix, we can then generate arbitrary sets of test datasets with a given missing value rate and/or perturbation/noise level.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Benchmark datasets</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <td align="left">Name</td>
              <td align="left">No. of genes</td>
              <td align="left">No. of samples</td>
              <td align="left">Time-series</td>
              <td align="left">reference</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">DER7</td>
              <td align="left">5298</td>
              <td align="left">7</td>
              <td align="left">Yes</td>
              <td align="left">[15]</td>
            </tr>
            <tr>
              <td align="left">OGA8</td>
              <td align="left">5257</td>
              <td align="left">8</td>
              <td align="left">No</td>
              <td align="left">[16]</td>
            </tr>
            <tr>
              <td align="left">FER4</td>
              <td align="left">3685</td>
              <td align="left">4</td>
              <td align="left">No</td>
              <td align="left">[17]</td>
            </tr>
            <tr>
              <td align="left">ELU14</td>
              <td align="left">5192</td>
              <td align="left">14</td>
              <td align="left">Yes</td>
              <td align="left">[18]</td>
            </tr>
            <tr>
              <td align="left">ALPHA18</td>
              <td align="left">4053</td>
              <td align="left">18</td>
              <td align="left">Yes</td>
              <td align="left">[18]</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>We additionally collected 25 yeast cDNA microarray datasets each of which has less than 2% missing values (details see Supplementary website). When imputing a test dataset, the remaining 4 test datasets and the 25 additional datasets will serve as candidate reference datasets.</p>
    </sec>
    <sec>
      <title>Performance comparison with different neighbor size k</title>
      <p>We compared the performance of the order-statistics-based integrative iLLS-O and iKNN-O to LLS and KNN methods. Although KNN has been shown to be inferior to most second-generation missing value estimation algorithms such as LLS, it is included here as a basis for comparison. We also compared the average-distance-based integrative approach with the order-statistics-based approach by running the same set of experiments with iLLS-D and iKNN-D. The six imputation algorithms are evaluated with different neighborhood sizes <italic>k</italic>. We used three datasets including DER7, OGA8, and FER4. For each dataset, 30 different sub-datasets are randomly generated according to a fixed missing value rate (5% unless otherwise specified). For the missing value rate of 5%, each entry of a target matrix will have a high probability (0.785) of being missing among the 30 simulations. We then apply all six algorithms and calculate the average and standard deviation of the normalized root mean square error (RMSE) relative to the zero-imputation method. For all integrative algorithms (iLLS-D, iKNN-D, iLLS-O, and iKNN-O), we use the dataset similarity score DS (with <italic>T </italic>= 500, see Methods) to automatically select the best five reference datasets from the 29 candidate reference datasets.</p>
      <p>Figure <xref ref-type="fig" rid="F2">2(a)â(c)</xref> show the performance of the algorithms on the three test datasets. Consistent with a previous report [<xref ref-type="bibr" rid="B4">4</xref>], the state-of-the-art LLS achieves much better performance than KNN for all the three datasets in their optimal range neighborhood size <italic>k </italic>(â¥50 for LLS and between 10 and 25 for KNN). While it was previously reported that the GeneOntology-based GOImpute could not improve LLS further [<xref ref-type="bibr" rid="B13">13</xref>], our order-statistics-based iLLS-O method achieves significant improvement over LLS when <italic>k </italic>â¥ 100 for the test datasets DER7, OGA8, and FER4 and is clearly the best algorithm overall. The maximal improvement is up to 14% reduction in terms of RMSE for the dataset OGA8. On the other hand, the average-distance-based method iLLS-D is inferior to the order-statistics-based method iLLS-O. While iLLS-D improves LLS for two of the three datasets, it leads to considerable performance degradation in the FER4 dataset, showing its inherent limitation due to its sensitivity to the variations of expression values across different reference datasets.</p>
      <fig position="float" id="F2">
        <label>Figure 2</label>
        <caption>
          <p><bold>Performances with respect to different neighbourhood size k</bold>. LLS algorithm significantly outperforms KNN. The order-statistics-based iLLS-O is the best among all algorithms. Average-distance-based iLLS-D outperforms LLS in most cases.</p>
        </caption>
        <graphic xlink:href="1471-2105-7-449-2"/>
      </fig>
      <p>We also compared LLS based integrative algorithms iLLS-D and iLLS-O with KNN based algorithms iKNN-D and iKNN-O. While the integrative iLLS-O achieves consistent improvements over LLS for all three datasets, iKNN-O and iKNN-D outperforms KNN only in the dataset FER4 with four samples, showing KNN based integrative algorithms fail to achieve consistent performance gains. The difference in performance gain (over the base algorithms) between the integrative LLS and KNN methods can be attributed to the nature of these two algorithms: KNN uses the inverse of the gene expression distances as the <italic>fixed </italic>weights in weighting the contribution of neighbor genes, while LLS uses a regression procedure to determine the optimal weights for contributions of neighbor genes by taking into account their expression co-variation with the target gene. LLS derives an appropriate linear approximation for the missing values based on those neighbor genes that have strong linear relationships with the target gene. While selecting consistent neighbor genes based on average Euclidean distances across multiple datasets, some genes with similar absolute expression magnitudes as the target gene are more likely to be selected, despite having little or no expression correlation to the target gene. Such genes will receive high contribution weight in KNN and may affect estimation adversely, while LLS will dynamically assigning low or high contribution weights to them appropriately.</p>
      <p>From the above three experiments, we found that on average the best performance of iLLS-D and iLLS-O are achieved with <italic>k </italic>around 100 to 200. Thus, in the following experiments, we use <italic>k </italic>= 150 for LLS, iLLS-D, and iLLS-O. Similarly for KNN, iKNN-D and iKNN-O, <italic>k </italic>will be set at 15 without loss of generality.</p>
    </sec>
    <sec>
      <title>Performance with respect to percentage of missing values</title>
      <p>An important factor that influences accurate selection of neighbor genes is the missing value rate of the dataset. To evaluate how this factor may affect the performance of the imputation algorithms, we generate three series of benchmark datasets with missing value rates from 1% to 20% from DER7, OGA8, and FER4 and apply all six algorithms to them.</p>
      <p>Figure <xref ref-type="fig" rid="F3">3(a)â(b)</xref> shows that the rate of missing values affects the performance of all algorithms for DER7, OGA8. Increasing missing value rate leads to significant performance degradations for KNN-based algorithms, but only moderate degradations for LLS-based algorithms. The consistent performance gains of integrative iLLS-D and iLLS-O over LLS with increasing missing value rates, demonstrates the benefits of the integrative approaches on datasets with high missing value rates. For KNN-based algorithms, the performance degradation rate for KNN with increasing missing value rate is greater than that for iKNN-D and iKNN-O, confirming that the integrative approaches do extract useful information from the reference datasets to increase the reliability of neighbor gene selection. We observed that the performance of the algorithms on FER4 with only four samples (Figure <xref ref-type="fig" rid="F3">3(c)</xref>) is quite different from that of DER7 and OGA8 where both KNN-D and KNN-O work worse than KNN. Here with only four samples, KNN-D algorithm performs consistently better than KNN across all missing value rates while iLLS-O is the dominating winner. We also found that surprisingly, for this dataset, KNN works better for FER4 test datasets with the missing value rate 20% than that with the missing value rate of 10%, showing that KNN is unable to pick appropriate neighbor genes for imputation if the number of samples is too small.</p>
      <fig position="float" id="F3">
        <label>Figure 3</label>
        <caption>
          <p><bold>Performance with respect to percentage of missing values</bold>. Comparison of algorithm performance with respect to the percentage of missing values in the datasets. The iLLS-O algorithm achieves consistent gains across different percentages of missing values.</p>
        </caption>
        <graphic xlink:href="1471-2105-7-449-3"/>
      </fig>
    </sec>
    <sec>
      <title>Performance with respect to the number of samples</title>
      <p>The number of samples in a dataset is another critical factor that influences the performance of imputation algorithms. For example, KNN is not suggested for use on datasets with less than four columns [<xref ref-type="bibr" rid="B6">6</xref>]. For local imputation algorithms, a small number of samples cannot provide sufficient information for reliable selection of neighbor genes. For global methods such as SVDimpute, too few columns lead to ill-conditioned matrices for singular value decomposition. To examine how the number of samples affects the integrative algorithms' performance, we picked the first <italic>c </italic>columns from the test datasets ELU14 and ALPHA18 with 14 and 18 samples respectively (<italic>c </italic>= 4, 5, 6, 10, 14 for ELU14 and <italic>c </italic>= 4, 5, 6, 10, 14, 18 for ALPHA18), and generated 30 benchmark datasets by randomly setting 5% of the values to be missing. We then tested all six algorithms on the benchmark datasets.</p>
      <p>Figure <xref ref-type="fig" rid="F4">4</xref> shows how the performance of the algorithms changes with increasing number of samples in a dataset. A general trend is that both KNN and LLS are subject to significant performance degradation when too few samples are available. When the number of samples is less than 10, the integrative iLLS-D and iLLS-O consistently outperform LLS, and the performance gains increase with decreasing number of samples. For KNN, when the number of samples is no more than 6, the average-distance-based iKNN-D significantly outperforms KNN in both datasets. On the other hand, KNN works better than both iKNN-D and iKNN-O for both datasets when the number of samples is greater than six. When the number of samples drops to four, all integrative approaches including iLLS, iLLS-O, iKNN-D and iKNN-O outperform KNN or LLS respectively. These two experiments on time series datasets and the experiments on non-time series datasets OGA8 and DER7 as shown in Figure <xref ref-type="fig" rid="F2">2</xref> showed that the proposed integrative missing value estimation approach is very useful for imputing datasets with a small number of samples which are insufficient for reliable estimation of good neighbor genes.</p>
      <fig position="float" id="F4">
        <label>Figure 4</label>
        <caption>
          <p><bold>Performance with respect to the number of samples</bold>. Performance comparison with respect to the number of samples. The performance gain of iMISS algorithms is more significant when the number of samples in the microarray dataset is small.</p>
        </caption>
        <graphic xlink:href="1471-2105-7-449-4"/>
      </fig>
    </sec>
    <sec>
      <title>Performance with respect to noise level</title>
      <p>The performance of local imputation algorithms is also subject to measurement noise in microarray data. To evaluate the performance of the integrative algorithms for noisy datasets, we generate a set of benchmark datasets by adding Gaussian noise to the test datasets DER7, OGA8 and FER4. The magnitude of the perturbation is set in terms of standard deviations of Gaussian noise ranging from 0 to 0.25. For each benchmark dataset, we then generate 30 test datasets with randomly selected 5% missing values and applied the algorithms.</p>
      <p>For datasets DER7 and OGA8, Figure <xref ref-type="fig" rid="F5">5(a,b)</xref> shows that the performance of all algorithms degrades with increasing noise levels, and iLLS-D and iLLS-O are consistently the best algorithms. Interestingly, the reduction of RMSE of iLLS-D and iLLS-O compared to LLS are consistent across all noise levels, showing the robustness of the integrative approaches against measurement noise. For KNN-based algorithms, when noise level increases, the performance gap between KNN and iKNN-O and iKNN-D decreases, showing that KNN is strongly subject to the noise levels in the data. This shows that the additional information from reference datasets makes the integrative algorithms more robust against measurement noise than the basic imputation algorithms. In the case of FER4 dataset (Figure <xref ref-type="fig" rid="F5">5c</xref>), the iKNN-D and iLLS-O consistently outperform KNN and LLS across all noise levels of the dataset.</p>
      <fig position="float" id="F5">
        <label>Figure 5</label>
        <caption>
          <p><bold>Performance with respect to the noise levels</bold>. Performance comparison with respect to the noise level of the dataset. The iLLS-O algorithm achieves consistent performance gain across all noise levels.</p>
        </caption>
        <graphic xlink:href="1471-2105-7-449-5"/>
      </fig>
    </sec>
    <sec>
      <title>Performance with respect to the number of reference datasets</title>
      <p>Another parameter which may influence the performance of the integrative imputation algorithm is the number of reference datasets. To examine this potential influence, we apply the algorithms to DER7, OGA8, and FER4 datasets with different numbers of reference datasets selected by the automatic dataset selection method (see Methods). We first calculated an ordered list of reference datasets with decreasing similarity to the target datasets, and then we selected the top 1 to 8 reference datasets to run the iMISS algorithms.</p>
      <p>Figure <xref ref-type="fig" rid="F6">6</xref> shows two different trends of the algorithm performance with respect to the number of reference datasets. For integrative algorithms that outperform the base algorithms such as iLLS-O for all three datasets, iLLS-D for DER7 and OGA8 datasets, and iKNN-D for FER4 dataset, the performance of these integrative algorithms in general is not very sensitive to the number of reference datasets <italic>R</italic>. For example, the performance gains of iLLS-D and iLLS-O over LLS for DER7 and OGA8 are significant for <italic>R </italic>ranging from 4 to 7, although the optimal value of <italic>R </italic>depends on the target dataset. On the other hand, for integrative algorithms in which the neighbor selection method does not match well with the imputation procedure, increasing the number of reference datasets usually leads to even worse results. This is the case for KNN-O for all three datasets, KNN-D for OGA8, and iLLS-D for FER4. In both situations, including too many (e.g. eight in this study) reference datasets leads to performance degradation.</p>
      <fig position="float" id="F6">
        <label>Figure 6</label>
        <caption>
          <p><bold>Performance with respect to the number of reference datasets</bold>. Performance comparison with respect to the number of reference datasets. In general, iMISS algorithms achieve best performance when the number of reference datasets is between 3â7.</p>
        </caption>
        <graphic xlink:href="1471-2105-7-449-6"/>
      </fig>
      <p>Although these results may depend on the matches between available reference datasets and the test datasets, we found that using five reference datasets is a reasonable choice in all our experiments, which we used in all other experiments in this study. Considering that usually only limited numbers of appropriate reference datasets are available and too many reference datasets (e.g. more than 10) can lead to long running time, we suggest the use of order statistics based imputation algorithms such as iKNN-O and iLLS-O only for up to seven reference datasets.</p>
    </sec>
    <sec>
      <title>Submatrix imputation method for choosing imputation algorithms</title>
      <p>Given a microarray dataset to be imputed, we need to assess whether the available reference datasets are appropriate for the iMISS algorithms. For this purpose, we propose a submatrix imputation method and validate its usage as follows. First, we construct 40 benchmark datasets, ten from each of the complete matrices extracted from OGA8, DER7, FER4, and ELU14 by randomly setting 5% of the values to be missing. Next, we randomly pick one out of 30 benchmark datasets to generate a complete submatrix by removing any genes containing simulated missing values. From each submatrix we then generate 30 test datasets by again randomly setting 5% of the values to be missing. We term this class of datasets as <italic>submatrix datasets</italic>. Since the missing values in both benchmark data sets and the submatrix datasets are simulated, we can evaluate whether the performance of integrative algorithms on the two classes of datasets agrees well. If so, for any given microarray dataset to be imputed, we can use its submatrix to predict the performance of the integrative imputation algorithms on the original matrix.</p>
      <p>As discussed in Methods Section, for each benchmark dataset of DER7, OGA8, FER4, and ELU14 we evaluated whether iKNN-D and iKNN-O (or iLLS-D and iLLS-O) work better than the basic algorithm KNN (or LLS). So there are four predictions of the relative performance for a benchmark dataset and the total prediction number is 16 for four benchmark datasets. We found that for 14 out of 16 cases the relative performance of the integrative algorithms with respect to KNN and LLS on the benchmark datasets and on the submatrix datasets is completely consistent. This is not unexpected as in most cases the submatrix datasets share most gene expression patterns with the original target dataset. If the reference datasets are not appropriate, the integrative algorithms will not work on the submatrix datasets and will not be suggested for imputing the original dataset. Similarly, when we want to select the most appropriate imputation algorithm for a given dataset, we can run all algorithms on the submatrices first and pick the one that works best as the final imputation algorithm to be used for the original dataset.</p>
    </sec>
  </sec>
  <sec>
    <title>Discussion</title>
    <p>We have presented an integrative missing value estimation approach named iMISS for exploiting multiple external microarray datasets to improve local missing value estimation algorithms. By addressing the limitations of previous integration methods including the simple data merging method and GOImpute, we demonstrated that the order-statistics-based integrative imputation algorithms iLLS-O achieved significant improvements over the state-of-the-art LLS across a set of benchmark datasets. The average-distance-based iLLS-D is inferior to iLLS-O but also achieves considerable improvements over LLS. A comparative study on the integrative KNN shows that the popular KNN is less amenable to this extension due to its rigid weighted averaging procedure. Our analysis suggests that our integrative approach is especially beneficial for imputing datasets with a limited number of samples, high missing rates, or very noisy measurements. We proposed a dataset similarity scoring scheme to automatically select reference datasets given a target dataset. In addition, we also tested a singular value decomposition (SVD) approach to assess the similarity of two data matrices by comparing their corresponding eigen-spaces, which we found to be inferior to our proposed approach. We also proposed a submatrix imputation method to determine whether to use integrative imputation with a given collection of reference datasets. This method could as well be used to select the appropriate algorithm for imputing a given dataset, which would be very useful as many imputation algorithms exist and there is no absolute best one for all circumstances. As the performance of iMISS-based algorithms increases with better reference datasets, these algorithms are extensible as more microarray datasets become available in public databases. Our work suggests that missing value estimation of microarray data is different from pure statistical missing value estimation problems since the former has much more external information to exploit. It also shows that gene expression neighbourhood relationships are conserved in varying degrees among different microarray datasets and can be used to improve missing value estimation.</p>
    <p>In this study, all data sets used were generated with the same cDNA microarray platform. It is known that even with the same platform technology, merging multiple microarray datasets directly is hindered by systematic variation among datasets, which is often beyond the capability of standard statistical normalization. Here, in the iMISS approach, since Euclidean distance calculation and subsequent neighbor gene ranking are performed within each dataset, ranked neighbor gene lists can be integrated across multiple datasets. However, when integrating microarray datasets from different platforms such as cDNA and Affymetrix platforms, the situation can be more complicated. Due to differences in the hybridization process, variation of expression magnitude of individual genes may bias distance estimation. In this situation, Pearson's correlation will be a more appropriate similarity measure to select neighbor genes, since it concerns relative gene expression changes instead of absolute values. However, using the cDNA datasets in this study, we found that the performance of using Pearson's correlation is inferior to that of Euclidean distance (data not shown). Thus, we recommend that users choose reference datasets from the same platform and use Euclidean distance as the similarity measure. With the rapid accumulation of microarray data, it is not a difficult task to collect significant number of datasets generated by the same technology platform.</p>
    <p>The iMISS integration approach can be further improved in several aspects. For example, it is beneficial to include expert biological knowledge in the reference dataset selection process or as a screening step after the automatic selection. While we have used LLS as the base imputation algorithm to show the benefits of iMISS, other local imputation algorithms such as least squares (LSImpute) [<xref ref-type="bibr" rid="B3">3</xref>], local least squares (LLS) [<xref ref-type="bibr" rid="B4">4</xref>], collateral missing value estimation (CMVE) [<xref ref-type="bibr" rid="B9">9</xref>], and Gaussian mixture clustering (GMCImpute) can also be used within this integrative framework. Another potential enhancement is to differentiate the qualities of the reference datasets as a function of their number of samples, missing rates, or noise levels. In addition, in this study, we gave the same weight to the neighbor information derived from the target dataset and that derived from each reference dataset. Alternatively, users may weight the information from the target dataset higher based on their confidence in the data. Furthermore, neighbor gene information from different reference data sets may be weighted differently based on the similarity of the reference dataset to the target dataset. Another promising extension is to classify the available candidate datasets according to their experimental characteristics such as time-series, non-time-series, cancer, etc. For each category, we can convert multiple datasets into a gene expression neighborhood relationship database which can be used to improve imputation accuracy.</p>
    <p>Our approach follows the integrative strategy for microarray analysis shown to be promising in previous studies [<xref ref-type="bibr" rid="B19">19</xref>-<xref ref-type="bibr" rid="B23">23</xref>]. This approach takes advantage of the conserved gene expression patterns among multiple datasets to enhance the signal/noise separation. In this generic framework, high-level information (e.g. the rank order statistics in this paper) is extracted from each dataset and combined to make more accurate decisions and predictions. This second-order-based approach makes feasible the integration of heterogeneous datasets, and its power will grow with the rapidly accumulation of public datasets.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <p>There are many ways to integrate gene-gene relationship information from external reference microarray datasets into existing imputation algorithms. The simplest approach is just to merge the samples from external data sets directly into the target dataset as is done by Oba <italic>et al </italic>[<xref ref-type="bibr" rid="B8">8</xref>]. However, systematic variation across data sets may bias the similarity estimation and thus the neighbor gene selection process. In the following, we propose and compare two methods, based on average distance and on rank order statistics respectively, to exploit the information in the reference microarray datasets to select neighbor genes reliably. We applied these two approaches to two local missing value imputation algorithms, the popular KNN [<xref ref-type="bibr" rid="B6">6</xref>] and the state-of-the-art LLS [<xref ref-type="bibr" rid="B4">4</xref>], both of which had been used by GOimpute [<xref ref-type="bibr" rid="B13">13</xref>].</p>
    <sec>
      <title>KNN and LLS Imputation</title>
      <p>Assume a <italic>M </italic>Ã <italic>N </italic>matrix <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M1" name="1471-2105-7-449-i1" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:msubsup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msubsup></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aqatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGhbWrcqGH9aqpcqGGOaakcqWGNbWzdaWgaaWcbaGaemyAaKMaeiilaWIaemOAaOgabeaakiabcMcaPmaaDaaaleaacqWGPbqAcqGGSaalcqWGQbGAcqGH9aqpcqaIXaqmaeaacqWGnbqtcqGGSaalcqWGobGtaaaaaa@3E84@</mml:annotation></mml:semantics></mml:math></inline-formula> is the target microarray dataset with missing values to be imputed, where each row is the expression levels of a gene and each column represents a condition. In both KNN and LLS, for each gene with missing values (target gene), first we compute distances <italic>d</italic><sub><italic>i,j </italic></sub>(e.g. Euclidian distances or Pearson's correlations) between candidate neighbor gene <italic>G</italic><sub><italic>j </italic></sub>and the target gene <italic>G</italic><sub><italic>i </italic></sub>in the target, in order to pick up the top <italic>k </italic>nearest neighbor genes. Specifically, to estimating the missing entry in the <italic>l</italic>th column of <italic>G</italic><sub><italic>i</italic></sub>, KNN estimates the missing entry <italic>G</italic><sub><italic>i,l </italic></sub>as the weighted average of neighboring genes: <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M2" name="1471-2105-7-449-i2" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>/</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>k</mml:mi></mml:munderover><mml:mrow><mml:mn>1</mml:mn><mml:mo>/</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle></mml:mrow></mml:mfrac><mml:mo stretchy="false">(</mml:mo><mml:mi>j</mml:mi><mml:mo>â </mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aqatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGhbWrdaWgaaWcbaGaemyAaKMaeiilaWIaemiBaWgabeaakiabg2da9maalaaabaWaaabCaeaacqWGhbWrdaWgaaWcbaGaemOAaOMaeiilaWIaemiBaWgabeaakiabc+caViabdsgaKnaaBaaaleaacqWGPbqAcqGGSaalcqWGQbGAaeqaaaqaaiabdQgaQjabg2da9iabigdaXaqaaiabdUgaRbqdcqGHris5aaGcbaWaaabCaeaacqaIXaqmcqGGVaWlcqWGKbazdaWgaaWcbaGaemyAaKMaeiilaWIaemOAaOgabeaaaeaacqWGQbGAcqGH9aqpcqaIXaqmaeaacqWGRbWAa0GaeyyeIuoaaaGccqGGOaakcqWGQbGAcqGHGjsUcqWGPbqAcqGGPaqkaaa@5894@</mml:annotation></mml:semantics></mml:math></inline-formula>, where the <italic>k </italic>neighbor genes are those with the closest distances to the target gene. In contrast, LLS estimates all missing values of a gene simultaneously. After picking up the top <italic>k </italic>nearest neighbor genes, all the missing values of a gene/array <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M3" name="1471-2105-7-449-i3" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mover accent="true"><mml:mi>u</mml:mi><mml:mo>â</mml:mo></mml:mover><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacuWG1bqDgaWcaaaa@2E31@</mml:annotation></mml:semantics></mml:math></inline-formula> = (<italic>Î±</italic><sub>1</sub>, <italic>Î±</italic><sub>2</sub>,...,<italic>Î±</italic><sub><italic>n</italic></sub>)<sup><italic>T </italic></sup>are estimated as a linear combination of values of other genes/arrays using standard least square regression:</p>
      <p><inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M4" name="1471-2105-7-449-i3" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mover accent="true"><mml:mi>u</mml:mi><mml:mo>â</mml:mo></mml:mover><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacuWG1bqDgaWcaaaa@2E31@</mml:annotation></mml:semantics></mml:math></inline-formula><sup><italic>T </italic></sup>= <italic>W</italic><sup><italic>T</italic></sup><italic>A</italic><sup>â </sup><italic>B</italic>, where <italic>W </italic>is the known values of gene <italic>G</italic><sub><italic>i</italic></sub>, <italic>A</italic><sup>â  </sup>is the pseudo inverse of the sub-matrix composed of values of the <italic>k </italic>neighbor genes in the columns where <italic>G</italic><sub><italic>i </italic></sub>has no missing values. <italic>B </italic>is the sub-matrix composed of values of the <italic>k </italic>neighbor genes in the columns where <italic>G</italic><sub><italic>i </italic></sub>has missing values.</p>
    </sec>
    <sec>
      <title>Framework of integrative missing value estimation (iMISS)</title>
      <p>In Figure <xref ref-type="fig" rid="F1">1</xref> we show the framework of the integrative missing value estimation (iMISS). There are four steps in the estimation process. The first step is to select a set of microarray datasets as reference datasets based on their expression similarity to the target dataset. The second step is to select the top <italic>k </italic>neighbor genes based on the target dataset and the reference datasets. Two methods have been tested: one based on order statistics and the other on average distance. Next, one can use any local missing value estimation algorithm such as LLS and KNN to impute missing values in the dataset. Since it is difficult to know in advance whether the reference datasets are sufficient to produce high quality estimations, a fourth step is introduced to assess estimation quality of integrative imputation algorithms using a submatrix imputation approach.</p>
      <fig position="float" id="F1">
        <label>Figure 1</label>
        <caption>
          <p><bold>Framework of iMISS</bold>. iMISS (Integrative MISSing value estimation using multiple datasets) is composed four steps including reference dataset selection, neighbour gene selection, local imputation, and accuracy estimation.</p>
        </caption>
        <graphic xlink:href="1471-2105-7-449-1"/>
      </fig>
    </sec>
    <sec>
      <title>Selection of reference datasets</title>
      <p>One important step in iMISS is the selection of a set of appropriate reference datasets that show similar gene expression patterns with the target dataset to be imputed. To ensure that only reliable gene relationship information is used, we remove datasets that have more than 2% missing values. We also remove those datasets that have too few samples (less than 5). From the remaining microarray datasets, there are two basic ways to select reference data sets. First, one can utilize biological knowledge. For example, it is reasonable to use cell-cycle datasets to impute a cell-cycle dataset. However, since there are tens or even hundreds of potential reference candidate datasets available, examining their experiment contexts is tedious. Here we propose an automatic method for reference dataset selection by measuring dataset similarity.</p>
      <p>For each gene <italic>G</italic><sub><italic>i </italic></sub>in the target dataset, we pick up the top <italic>T </italic>genes with smallest Euclidean distances to <italic>G</italic><sub><italic>i </italic></sub>in the target dataset <italic>D</italic><sub>0 </sub>and in a potential reference dataset <italic>D</italic><sub><italic>k</italic></sub>. We then calculate the percentage <italic>Ï</italic><sub><italic>i </italic></sub>of the overlapping genes out of these two sets of <italic>T </italic>genes. To further incorporate the rank order information of the overlapping genes in terms of their distances to <italic>G</italic><sub><italic>i</italic></sub>, we further calculate the Spearman's rank correlation coefficient <italic>r</italic><sub><italic>i </italic></sub>for the overlapping genes. We define the dataset similarity (DS) score as</p>
      <p>
        <inline-formula>
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M5" name="1471-2105-7-449-i4" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:mi>D</mml:mi>
                <mml:mi>S</mml:mi>
                <mml:mo>=</mml:mo>
                <mml:mfrac>
                  <mml:mn>1</mml:mn>
                  <mml:mrow>
                    <mml:mo>|</mml:mo>
                    <mml:msub>
                      <mml:mi>G</mml:mi>
                      <mml:mi>I</mml:mi>
                    </mml:msub>
                    <mml:mo>|</mml:mo>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mstyle displaystyle="true">
                  <mml:munderover>
                    <mml:mo>â</mml:mo>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                      <mml:mo>=</mml:mo>
                      <mml:mn>1</mml:mn>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mo>|</mml:mo>
                      <mml:msub>
                        <mml:mi>G</mml:mi>
                        <mml:mi>I</mml:mi>
                      </mml:msub>
                      <mml:mo>|</mml:mo>
                    </mml:mrow>
                  </mml:munderover>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mi>Ï</mml:mi>
                      <mml:mi>i</mml:mi>
                    </mml:msub>
                  </mml:mrow>
                </mml:mstyle>
                <mml:mo>â</mml:mo>
                <mml:msub>
                  <mml:mi>r</mml:mi>
                  <mml:mi>i</mml:mi>
                </mml:msub>
                <mml:mo>,</mml:mo>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aqatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGebarcqWGtbWucqGH9aqpdaWcaaqaaiabigdaXaqaaiabcYha8jabdEeahnaaBaaaleaacqWGjbqsaeqaaOGaeiiFaWhaamaaqahabaacciGae8xWdi3aaSbaaSqaaiabdMgaPbqabaaabaGaemyAaKMaeyypa0JaeGymaedabaGaeiiFaWNaem4raC0aaSbaaWqaaiabdMeajbqabaWccqGG8baFa0GaeyyeIuoakiabgwSixlabdkhaYnaaBaaaleaacqWGPbqAaeqaaOGaeiilaWcaaa@4ACD@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </inline-formula>
      </p>
      <p>where |<italic>G</italic><sub><italic>I</italic></sub>| is the number of common genes in the datasets <italic>D</italic><sub>0 </sub>and <italic>D</italic><sub><italic>k</italic></sub>.</p>
      <p>The motivation for the above scoring scheme is that since only top <italic>T </italic>(usually â¤500) genes are used in local imputation algorithms, the score shall reflect the similarity of gene neighbor structures in two data sets, i.e. the number of shared neighbor genes and the rank order of those neighbor genes.</p>
    </sec>
    <sec>
      <title>Integration using average distance</title>
      <p>This approach is introduced as a comparison to the proposed order-statistics-based integration approach. Specifically, the expression distance or similarity of two genes is calculated as the average of the normalized distances or similarities (normalized by the number of columns) across all reference datasets and the target dataset. Assuming Euclidian distance is used, for a target gene with missing values, we first calculate the normalized distances <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M6" name="1471-2105-7-449-i5" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msubsup></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGKbazdaqhaaWcbaGaemyAaKMaeiilaWIaemOAaOgabaGaem4AaSgaaaaa@3321@</mml:annotation></mml:semantics></mml:math></inline-formula> between the target gene <italic>G</italic><sub><italic>i </italic></sub>and all remaining genes <italic>G</italic><sub><italic>j</italic></sub>, <italic>j </italic>â  <italic>i</italic>, <italic>j </italic>= 0,...,|<italic>D</italic><sub>0</sub>| in both the target dataset and all reference datasets <italic>D</italic><sub><italic>k</italic></sub>, <italic>k </italic>= 0, 1,...,<italic>n</italic>:</p>
      <p><inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M7" name="1471-2105-7-449-i6" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:msubsup><mml:mi>d</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msubsup><mml:mo>=</mml:mo><mml:msqrt><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>N</mml:mi></mml:munderover><mml:mrow><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:mstyle><mml:mo>/</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:msqrt></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGKbazdaqhaaWcbaGaemyAaKMaeiilaWIaemOAaOgabaGaem4AaSgaaOGaeyypa0ZaaOaaaeaadaaeWbqaaiabcIcaOiabdIha4naaBaaaleaacqWGPbqAcqGGSaalcqWGSbaBaeqaaOGaeyOeI0IaemiEaG3aaSbaaSqaaiabdQgaQjabcYcaSiabdYgaSbqabaGccqGGPaqkdaahaaWcbeqaaiabikdaYaaaaeaacqWGSbaBcqGH9aqpcqaIXaqmaeaacqWGobGta0GaeyyeIuoakiabc+caViabd6eaobWcbeaaaaa@4B6A@</mml:annotation></mml:semantics></mml:math></inline-formula>, where <italic>x</italic><sub><italic>i,l </italic></sub>and <italic>x</italic><sub><italic>j,l </italic></sub>are the valid expression values of genes <italic>G</italic><sub><italic>i </italic></sub>and <italic>G</italic><sub><italic>j</italic></sub>; and <italic>N </italic>is the total number of samples that have valid expression values for these two genes in the data set <italic>D</italic><sub><italic>k</italic></sub>.</p>
      <p>We then define the distance of a candidate neighbor gene to the target gene as the average of the normalized distances from all datasets and use it to select neighbor genes.</p>
      <p>
        <inline-formula>
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M8" name="1471-2105-7-449-i7" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:msub>
                  <mml:mi>d</mml:mi>
                  <mml:mrow>
                    <mml:mi>i</mml:mi>
                    <mml:mo>,</mml:mo>
                    <mml:mi>j</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo>=</mml:mo>
                <mml:mo stretchy="false">(</mml:mo>
                <mml:mstyle displaystyle="true">
                  <mml:munderover>
                    <mml:mo>â</mml:mo>
                    <mml:mrow>
                      <mml:mi>k</mml:mi>
                      <mml:mo>=</mml:mo>
                      <mml:mn>0</mml:mn>
                    </mml:mrow>
                    <mml:mi>n</mml:mi>
                  </mml:munderover>
                  <mml:mrow>
                    <mml:msubsup>
                      <mml:mi>d</mml:mi>
                      <mml:mrow>
                        <mml:mi>i</mml:mi>
                        <mml:mo>,</mml:mo>
                        <mml:mi>j</mml:mi>
                      </mml:mrow>
                      <mml:mi>k</mml:mi>
                    </mml:msubsup>
                  </mml:mrow>
                </mml:mstyle>
                <mml:mo stretchy="false">)</mml:mo>
                <mml:mo>/</mml:mo>
                <mml:mo stretchy="false">(</mml:mo>
                <mml:mi>n</mml:mi>
                <mml:mo>+</mml:mo>
                <mml:mn>1</mml:mn>
                <mml:mo stretchy="false">)</mml:mo>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGKbazdaWgaaWcbaGaemyAaKMaeiilaWIaemOAaOgabeaakiabg2da9iabcIcaOmaaqahabaGaemizaq2aa0baaSqaaiabdMgaPjabcYcaSiabdQgaQbqaaiabdUgaRbaaaeaacqWGRbWAcqGH9aqpcqaIWaamaeaacqWGUbGBa0GaeyyeIuoakiabcMcaPiabc+caViabcIcaOiabd6gaUjabgUcaRiabigdaXiabcMcaPaaa@47C0@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </inline-formula>
      </p>
    </sec>
    <sec>
      <title>Integration using order statistics</title>
      <p>Average-distance-based integration is sensitive to variations or outliers of the expression values across the target and the reference datasets. Here we propose an order statistics measurement to select consistent neighbor genes across multiple datasets by integrating the distance rank order of genes to the target gene in all data sets. This approach is more robust since variations of the expression values that do not change the relative ranks will not affect the selection of neighbor genes. Order statistics has been used to measure the significance of gene-gene correlation across multiple species [<xref ref-type="bibr" rid="B24">24</xref>]. Here we use it to select <italic>k </italic>genes that are consistently ranked as neighbor genes across multiple datasets.</p>
      <p>Intuitively, in the case of a single dataset, both KNN and LLS methods rank candidate neighbor genes based on their distances to the target gene in the target dataset and then pick up the top <italic>k </italic>genes with shortest distances. Similarly, with multiple datasets, we can rank the candidate genes in both the target and each of the reference datasets. To select genes that are consistently ranked high in all datasets, we calculate the probability (P-value) of observing their ranks in all datasets. The complete procedure is as follows. First, for each gene <italic>G</italic><sub><italic>i</italic></sub>, <italic>i </italic>= 1,...,|<italic>D</italic><sub>0</sub>|, where |<italic>D</italic><sub>0</sub>| is the number of genes in the target dataset <italic>D</italic><sub>0</sub>, we rank the set of candidate neighbor genes <italic>G</italic><sub><italic>j</italic></sub>, <italic>j </italic>â  <italic>i</italic>, <italic>j </italic>= 1,...,|<italic>D</italic><sub>0</sub>| according to their distances to the target gene in the target dataset. Since different datasets may contain different number of genes, the ranks are then divided by the number (|<italic>D</italic><sub>0</sub>| - 1) of candidate genes to get the rank ratio <italic>r</italic><sub><italic>j</italic>,0 </sub>of the gene <italic>G</italic><sub><italic>j </italic></sub>in the target dataset. Then for each reference dataset (<italic>D</italic><sub><italic>k</italic></sub>, <italic>k </italic>= 1, 2,...,<italic>n</italic>), we first check if <italic>G</italic><sub><italic>i </italic></sub>exists in <italic>D</italic><sub><italic>k</italic></sub>, if it does not, then we set rank ratio <italic>r</italic><sub><italic>j,k </italic></sub>as unavailable. We then determine the intersection set of the <italic>N</italic><sub><italic>k </italic></sub>genes that exist in both the target dataset <italic>D</italic><sub>0 </sub>and the reference dataset <italic>D</italic><sub><italic>k</italic></sub>. These genes are then ranked according to their distances to the target gene <italic>G</italic><sub><italic>i </italic></sub>in <italic>D</italic><sub><italic>k </italic></sub>and their rank ratios <italic>r</italic><sub><italic>j,k </italic></sub>can be calculated by dividing their ranks (ranging from 1 to <italic>N</italic><sub><italic>k</italic></sub>) by <italic>N</italic><sub><italic>k</italic></sub>.</p>
      <p>Assuming the rank ratios <italic>r</italic><sub><italic>j,k</italic></sub>, <italic>k </italic>= 0,...,<italic>n </italic>for a gene <italic>G</italic><sub><italic>i </italic></sub>are drawn independently and uniformly, the <italic>P</italic>-value from the joint cumulative distribution of the <italic>n</italic>-dimensional order statistics can be written as:</p>
      <p><italic>P</italic>(<italic>r</italic><sub><italic>j</italic>,0</sub>, <italic>r</italic><sub><italic>j</italic>,1</sub>, <italic>r</italic><sub><italic>j</italic>,2</sub>,...,<italic>r</italic><sub><italic>j,n</italic></sub>) = <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M9" name="1471-2105-7-449-i8" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:mi>n</mml:mi><mml:mo>!</mml:mo><mml:mstyle displaystyle="true"><mml:mrow><mml:msubsup><mml:mo>â«</mml:mo><mml:mn>0</mml:mn><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:msubsup><mml:mo>â«</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mrow><mml:mstyle displaystyle="true"><mml:mrow><mml:msubsup><mml:mo>â«</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mrow><mml:mn>...</mml:mn><mml:mstyle displaystyle="true"><mml:mrow><mml:msubsup><mml:mo>â«</mml:mo><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mrow><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msubsup><mml:mrow><mml:mi>d</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mi>d</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>d</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mn>...</mml:mn><mml:mi>d</mml:mi><mml:msub><mml:mi>s</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mrow></mml:mstyle></mml:mrow></mml:mrow></mml:mstyle></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqWGUbGBcqGGHaqidaWdXaqaamaapedabaWaa8qmaeaacqGGUaGlcqGGUaGlcqGGUaGldaWdXaqaaiabdsgaKjabdohaZnaaBaaaleaacqaIWaamaeqaaOGaemizaqMaem4Cam3aaSbaaSqaaiabigdaXaqabaGccqWGKbazcqWGZbWCdaWgaaWcbaGaeGOmaidabeaakiabc6caUiabc6caUiabc6caUiabdsgaKjabdohaZnaaBaaaleaacqWGUbGBaeqaaaqaaiabdohaZnaaBaaameaacqWGUbGBcqGHsislcqaIXaqmaeqaaaWcbaGaemOCai3aaSbaaWqaaiabdQgaQjabcYcaSiabd6gaUbqabaaaniabgUIiYdaaleaacqWGZbWCdaWgaaadbaGaeGymaedabeaaaSqaaiabdkhaYnaaBaaameaacqWGQbGAcqGGSaalcqaIYaGmaeqaaaqdcqGHRiI8aaWcbaGaem4Cam3aaSbaaWqaaiabicdaWaqabaaaleaacqWGYbGCdaWgaaadbaGaemOAaOMaeiilaWIaeGymaedabeaaa0Gaey4kIipaaSqaaiabicdaWaqaaiabdkhaYnaaBaaameaacqWGQbGAcqGGSaalcqaIWaamaeqaaaqdcqGHRiI8aaaa@6B63@</mml:annotation></mml:semantics></mml:math></inline-formula> where <italic>s</italic><sub>0</sub>, <italic>s</italic><sub>1</sub>,...,<italic>s</italic><sub><italic>n </italic></sub>are integral variables.</p>
      <p>The above <italic>P</italic>-value can be computed using a recursive formula:</p>
      <p><italic>P</italic>(<italic>r</italic><sub><italic>j</italic>,0</sub>, <italic>r</italic><sub><italic>j</italic>,1</sub>,...,<italic>r</italic><sub><italic>j,n</italic></sub>) = <inline-formula><mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M10" name="1471-2105-7-449-i9" overflow="scroll"><mml:semantics definitionURL="" encoding=""><mml:mrow><mml:mstyle displaystyle="true"><mml:munderover><mml:mo>â</mml:mo><mml:mrow><mml:mi>j</mml:mi><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow><mml:mi>n</mml:mi></mml:munderover><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>â</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>â</mml:mo><mml:mi>j</mml:mi><mml:mo>+</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mn>...</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi>j</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mstyle><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaadaaeWbqaaiabcIcaOiabdkhaYnaaBaaaleaacqWGQbGAcqGGSaalcqWGUbGBcqGHsislcqWGQbGAcqGHRaWkcqaIXaqmaeqaaOGaeyOeI0IaemOCai3aaSbaaSqaaiabdQgaQjabcYcaSiabd6gaUjabgkHiTiabdQgaQbqabaGccqGGPaqkcqWGqbaucqGGOaakcqWGYbGCdaWgaaWcbaGaemOAaOMaeiilaWIaeGimaadabeaakiabcYcaSiabdkhaYnaaBaaaleaacqWGQbGAcqGGSaalcqaIXaqmaeqaaOGaeiilaWIaeiOla4IaeiOla4IaeiOla4IaeiilaWIaemOCai3aaSbaaSqaaiabdQgaQjabcYcaSiabd6gaUjabgkHiTiabdQgaQbqabaGccqGGSaalcqWGYbGCdaWgaaWcbaGaemOAaOMaeiilaWIaemOBa4MaeyOeI0IaemOAaOMaey4kaSIaeGOmaidabeaakiabcYcaSiabc6caUiabc6caUiabc6caUiabcYcaSiabdkhaYnaaBaaaleaacqWGQbGAcqGGSaalcqWGUbGBaeqaaaqaaiabdQgaQjabg2da9iabicdaWaqaaiabd6gaUbqdcqGHris5aOGaeiykaKcaaa@7470@</mml:annotation></mml:semantics></mml:math></inline-formula> where <italic>r</italic><sub><italic>j</italic>,0 </sub>= 0</p>
      <p>So for each gene <italic>G</italic><sub><italic>i</italic></sub>, we can calculate the <italic>P</italic>-value of rank ratios for all candidate neighbor genes and then pick the top <italic>k </italic>genes with lowest P-value as its consistent neighbors. The order-statistics-based iMISS algorithms derived from KNN and LLS are denoted as iKNN-O and iLLS-O, respectively. The imputation algorithms derived by applying this average-distance-based integration method to KNN and LLS are termed iKNN-D and iLLS-D, respectively.</p>
    </sec>
    <sec>
      <title>Submatrix imputation method to assess appropriateness of integrative algorithm</title>
      <p>The performance of iMISS-based integrative imputation algorithms depends on the quality of the reference microarray datasets and their similarity to the target dataset. However, there is no absolute dataset similarity threshold that can guarantee the quality of estimation. Here we propose a submatrix imputation procedure to determine whether our integrative approach can be advantageous to traditional approaches given a set of potential reference datasets.</p>
      <p>The submatrix imputation method predicts the performance of a given imputation algorithm by evaluating its performance on a set of evaluation datasets generated from a complete submatrix extracted from the target dataset. First, from the target dataset we remove all genes with missing values to generate a complete submatrix. Next, we generate 30 evaluation datasets from the complete matrix by removing 5% of the values randomly. We then run all the imputation algorithms to be compared on the 30 evaluation datasets. Now we can evaluate the quality of estimation for each algorithm since we know the "true" values of the missing values. To assess the significance of the performance difference between two algorithms A and B, we use student's <italic>t</italic>-test to compare their RMSE errors on the 30 evaluation datasets. If the p-value is less than 0.05 and the mean RMSE of A is smaller than B, then the two algorithms are regarded to show different performance and A is better than B. By comparing iLLS-D, iLLS-O (or iKNN-D and iKNN-O) with the original LLS (or KNN) algorithm, we can determine whether the use of integrative algorithms is appropriate.</p>
    </sec>
    <sec>
      <title>Evaluation methods</title>
      <p>There are two standard metrics to evaluate the prediction accuracy given the true values of the missing entries. One is normalized RMS error, defined as the root mean squared error between the imputed matrix and the original matrix normalized by the average data value in the complete dataset [<xref ref-type="bibr" rid="B4">4</xref>,<xref ref-type="bibr" rid="B6">6</xref>,<xref ref-type="bibr" rid="B8">8</xref>]. The other metric is RMSE [<xref ref-type="bibr" rid="B11">11</xref>], the root mean squared error between the true values and the imputed values divided by the root mean squared true values of the missing entries:</p>
      <p>
        <inline-formula>
          <mml:math xmlns:mml="http://www.w3.org/1998/Math/MathML" id="M11" name="1471-2105-7-449-i10" overflow="scroll">
            <mml:semantics definitionURL="" encoding="">
              <mml:mrow>
                <mml:mtext>RMSE</mml:mtext>
                <mml:mo>=</mml:mo>
                <mml:msqrt>
                  <mml:mrow>
                    <mml:mi>m</mml:mi>
                    <mml:mi>e</mml:mi>
                    <mml:mi>a</mml:mi>
                    <mml:mi>n</mml:mi>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mo stretchy="false">[</mml:mo>
                        <mml:msub>
                          <mml:mover accent="true">
                            <mml:mi>y</mml:mi>
                            <mml:mo>â</mml:mo>
                          </mml:mover>
                          <mml:mrow>
                            <mml:mi>i</mml:mi>
                            <mml:mi>m</mml:mi>
                            <mml:mi>p</mml:mi>
                            <mml:mi>u</mml:mi>
                            <mml:mi>t</mml:mi>
                            <mml:mi>e</mml:mi>
                            <mml:mi>d</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mo>â</mml:mo>
                        <mml:msub>
                          <mml:mover accent="true">
                            <mml:mi>y</mml:mi>
                            <mml:mo>â</mml:mo>
                          </mml:mover>
                          <mml:mrow>
                            <mml:mi>t</mml:mi>
                            <mml:mi>r</mml:mi>
                            <mml:mi>u</mml:mi>
                            <mml:mi>e</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mo stretchy="false">]</mml:mo>
                      </mml:mrow>
                      <mml:mn>2</mml:mn>
                    </mml:msup>
                  </mml:mrow>
                </mml:msqrt>
                <mml:mo>/</mml:mo>
                <mml:msqrt>
                  <mml:mrow>
                    <mml:mi>m</mml:mi>
                    <mml:mi>e</mml:mi>
                    <mml:mi>a</mml:mi>
                    <mml:mi>n</mml:mi>
                    <mml:msup>
                      <mml:mrow>
                        <mml:mo stretchy="false">[</mml:mo>
                        <mml:msub>
                          <mml:mover accent="true">
                            <mml:mi>y</mml:mi>
                            <mml:mo>â</mml:mo>
                          </mml:mover>
                          <mml:mrow>
                            <mml:mi>t</mml:mi>
                            <mml:mi>r</mml:mi>
                            <mml:mi>u</mml:mi>
                            <mml:mi>e</mml:mi>
                          </mml:mrow>
                        </mml:msub>
                        <mml:mo stretchy="false">]</mml:mo>
                      </mml:mrow>
                      <mml:mn>2</mml:mn>
                    </mml:msup>
                  </mml:mrow>
                </mml:msqrt>
                <mml:mtext>Â Â Â Â Â </mml:mtext>
                <mml:mrow>
                  <mml:mo>(</mml:mo>
                  <mml:mn>2</mml:mn>
                  <mml:mo>)</mml:mo>
                </mml:mrow>
              </mml:mrow>
              <mml:annotation encoding="MathType-MTEF">
 MathType@MTEF@5@5@+=feaafiart1ev1aaatCvAUfKttLearuWrP9MDH5MBPbIqV92AaeXatLxBI9gBaebbnrfifHhDYfgasaacH8akY=wiFfYdH8Gipec8Eeeu0xXdbba9frFj0=OqFfea0dXdd9vqai=hGuQ8kuc9pgc9s8qqaq=dirpe0xb9q8qiLsFr0=vr0=vr0dc8meaabaqaciaacaGaaeqabaqabeGadaaakeaacqqGsbGucqqGnbqtcqqGtbWucqqGfbqrcqGH9aqpdaGcaaqaaiabd2gaTjabdwgaLjabdggaHjabd6gaUjabcUfaBjqbdMha5zaalaWaaSbaaSqaaiabdMgaPjabd2gaTjabdchaWjabdwha1jabdsha0jabdwgaLjabdsgaKbqabaGccqGHsislcuWG5bqEgaWcamaaBaaaleaacqWG0baDcqWGYbGCcqWG1bqDcqWGLbqzaeqaaOGaeiyxa01aaWbaaSqabeaacqaIYaGmaaaabeaakiabc+caVmaakaaabaGaemyBa0MaemyzauMaemyyaeMaemOBa4Maei4waSLafmyEaKNbaSaadaWgaaWcbaGaemiDaqNaemOCaiNaemyDauNaemyzaugabeaakiabc2faDnaaCaaaleqabaGaeGOmaidaaaqabaGccaWLjaGaaCzcamaabmaabaGaeGOmaidacaGLOaGaayzkaaaaaa@644C@</mml:annotation>
            </mml:semantics>
          </mml:math>
        </inline-formula>
      </p>
      <p>This RMSE error has the benefit that the error of zero-imputation algorithm on any dataset is always 1, leading to a common comparison standard for comparing different algorithms on different datasets. In this paper we use the RMSE error to make the results comparable among different datasets.</p>
    </sec>
  </sec>
  <sec>
    <title>Availability</title>
    <p>All benchmark datasets and the program of iMISS with implementation of KNN, iKNN-D, iKNN-O, LLS, iLLS-D, iLLS-O can be downloaded from the supporting website at <ext-link ext-link-type="uri" xlink:href="http://zhoulab.usc.edu/iMISS"/></p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>J.H. designed and implemented the algorithms, carried out the experiments, analyzed the data, and drafted the manuscript. H.L. participated in the design of the algorithm and coded the order-statistics scoring routine. M.S.W. provided scientific and technical advices and edited the manuscript. X.J.Z conceived the project, assisted in the design of the study and in drafting and editing the manuscript. All authors read and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <ack>
    <sec>
      <title>Acknowledgements</title>
      <p>We thank Ming-Chih J. Kao for proof-reading the manuscript. This work is supported by the NIH grants R01GM074163, P50HG002790, the NSF grant 0515936, and a pilot grant from the Seaver foundation.</p>
    </sec>
  </ack>
  <ref-list>
    <ref id="B1">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hoheisel</surname>
            <given-names>JD</given-names>
          </name>
        </person-group>
        <article-title>Microarray technology: beyond transcript profiling and genotype analysis</article-title>
        <source>Nat Rev Genet</source>
        <year>2006</year>
        <volume>7</volume>
        <fpage>200</fpage>
        <lpage>210</lpage>
        <pub-id pub-id-type="pmid">16485019</pub-id>
        <pub-id pub-id-type="doi">10.1038/nrg1809</pub-id>
      </citation>
    </ref>
    <ref id="B2">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>de Brevern</surname>
            <given-names>AG</given-names>
          </name>
          <name>
            <surname>Hazout</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Malpertuy</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Influence of microarrays experiments missing values on the stability of gene groups by hierarchical clustering</article-title>
        <source>BMC Bioinformatics</source>
        <year>2004</year>
        <volume>5</volume>
        <fpage>114</fpage>
        <pub-id pub-id-type="pmid">15324460</pub-id>
        <pub-id pub-id-type="doi">10.1186/1471-2105-5-114</pub-id>
      </citation>
    </ref>
    <ref id="B3">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bo</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Dysvik</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Jonassen</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>LSimpute: accurate estimation of missing values in microarray data with least squares methods</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>e34</fpage>
        <pub-id pub-id-type="pmid">14978222</pub-id>
        <pub-id pub-id-type="doi">10.1093/nar/gnh026</pub-id>
      </citation>
    </ref>
    <ref id="B4">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Golub</surname>
            <given-names>GH</given-names>
          </name>
          <name>
            <surname>Park</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Missing value estimation for DNA microarray gene expression data: local least squares imputation</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>187</fpage>
        <lpage>198</lpage>
        <pub-id pub-id-type="pmid">15333461</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth499</pub-id>
      </citation>
    </ref>
    <ref id="B5">
      <citation citation-type="book">
        <person-group person-group-type="author">
          <collab>M.Scholz</collab>
          <collab>F.Kaplan</collab>
          <collab>C.L.Guy</collab>
          <collab>J.Kopka</collab>
          <collab>J.Selbig</collab>
        </person-group>
        <article-title>Non-linear PCA: a missing data approach</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <publisher-name>Oxford</publisher-name>
        <fpage>3887</fpage>
        <lpage>3895</lpage>
        <pub-id pub-id-type="pmid">16109748</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti634</pub-id>
      </citation>
    </ref>
    <ref id="B6">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Troyanskaya</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Cantor</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Sherlock</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hastie</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Tibshirani</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Botstein</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Altman</surname>
            <given-names>RB</given-names>
          </name>
        </person-group>
        <article-title>Missing value estimation methods for DNA microarrays</article-title>
        <source>Bioinformatics</source>
        <year>2001</year>
        <volume>17</volume>
        <fpage>520</fpage>
        <lpage>525</lpage>
        <pub-id pub-id-type="pmid">11395428</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/17.6.520</pub-id>
      </citation>
    </ref>
    <ref id="B7">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhou</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Dougherty</surname>
            <given-names>ER</given-names>
          </name>
        </person-group>
        <article-title>Missing-value estimation using linear and non-linear regression with Bayesian gene selection</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <fpage>2302</fpage>
        <lpage>2307</lpage>
        <pub-id pub-id-type="pmid">14630659</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg323</pub-id>
      </citation>
    </ref>
    <ref id="B8">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oba</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sato</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Takemasa</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Monden</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Matsubara</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ishii</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A Bayesian missing value estimation method for gene expression profile data</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <fpage>2088</fpage>
        <lpage>2096</lpage>
        <pub-id pub-id-type="pmid">14594714</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg287</pub-id>
      </citation>
    </ref>
    <ref id="B9">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sehgal</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Gondal</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Dooley</surname>
            <given-names>LS</given-names>
          </name>
        </person-group>
        <article-title>Collateral missing value imputation: a new robust missing value estimation algorithm for microarray data</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>2417</fpage>
        <lpage>2423</lpage>
        <pub-id pub-id-type="pmid">15731210</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti345</pub-id>
      </citation>
    </ref>
    <ref id="B10">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Jiang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Missing value estimation for DNA microarray gene expression data by Support Vector Regression imputation and orthogonal coding scheme</article-title>
        <source>BMC Bioinformatics</source>
        <year>2006</year>
        <volume>7</volume>
        <fpage>32</fpage>
        <pub-id pub-id-type="pmid">16426462</pub-id>
        <pub-id pub-id-type="doi">10.1186/1471-2105-7-32</pub-id>
      </citation>
    </ref>
    <ref id="B11">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ouyang</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Welsh</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Georgopoulos</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Gaussian mixture clustering and imputation of microarray data</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>917</fpage>
        <lpage>923</lpage>
        <pub-id pub-id-type="pmid">14751970</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth007</pub-id>
      </citation>
    </ref>
    <ref id="B12">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jornsten</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>HY</given-names>
          </name>
          <name>
            <surname>Welsh</surname>
            <given-names>WJ</given-names>
          </name>
          <name>
            <surname>Ouyang</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>DNA microarray data imputation and significance analysis of differential expression</article-title>
        <source>Bioinformatics</source>
        <year>2005</year>
        <volume>21</volume>
        <fpage>4155</fpage>
        <lpage>4161</lpage>
        <pub-id pub-id-type="pmid">16118262</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bti638</pub-id>
      </citation>
    </ref>
    <ref id="B13">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tuikkala</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Elo</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Nevalainen</surname>
            <given-names>OS</given-names>
          </name>
          <name>
            <surname>Aittokallio</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Improving missing value estimation in microarray data with gene ontology</article-title>
        <source>Bioinformatics</source>
        <year>2006</year>
        <volume>22</volume>
        <fpage>566</fpage>
        <lpage>572</lpage>
        <pub-id pub-id-type="pmid">16377613</pub-id>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btk019</pub-id>
      </citation>
    </ref>
    <ref id="B14">
      <citation citation-type="other">
        <article-title>Princeton SGD Lite yeast datasets</article-title>
        <year>2005</year>
        <ext-link ext-link-type="uri" xlink:href="http://sgdlite.princeton.edu/download/yeast_datasets/"/>
      </citation>
    </ref>
    <ref id="B15">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DeRisi</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Iyer</surname>
            <given-names>VR</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>PO</given-names>
          </name>
        </person-group>
        <article-title>Exploring the metabolic and genetic control of gene expression on a genomic scale</article-title>
        <source>Science</source>
        <year>1997</year>
        <volume>278</volume>
        <fpage>680</fpage>
        <lpage>686</lpage>
        <pub-id pub-id-type="pmid">9381177</pub-id>
        <pub-id pub-id-type="doi">10.1126/science.278.5338.680</pub-id>
      </citation>
    </ref>
    <ref id="B16">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ogawa</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>DeRisi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>PO</given-names>
          </name>
        </person-group>
        <article-title>New components of a system for phosphate accumulation and polyphosphate metabolism in Saccharomyces cerevisiae revealed by genomic expression analysis</article-title>
        <source>Mol Biol Cell</source>
        <year>2000</year>
        <volume>11</volume>
        <fpage>4309</fpage>
        <lpage>4321</lpage>
        <pub-id pub-id-type="pmid">11102525</pub-id>
      </citation>
    </ref>
    <ref id="B17">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ferea</surname>
            <given-names>TL</given-names>
          </name>
          <name>
            <surname>Botstein</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>PO</given-names>
          </name>
          <name>
            <surname>Rosenzweig</surname>
            <given-names>RF</given-names>
          </name>
        </person-group>
        <article-title>Systematic changes in gene expression patterns following adaptive evolution in yeast</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>1999</year>
        <volume>96</volume>
        <fpage>9721</fpage>
        <lpage>9726</lpage>
        <pub-id pub-id-type="pmid">10449761</pub-id>
        <pub-id pub-id-type="doi">10.1073/pnas.96.17.9721</pub-id>
      </citation>
    </ref>
    <ref id="B18">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Spellman</surname>
            <given-names>PT</given-names>
          </name>
          <name>
            <surname>Sherlock</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>MQ</given-names>
          </name>
          <name>
            <surname>Iyer</surname>
            <given-names>VR</given-names>
          </name>
          <name>
            <surname>Anders</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Eisen</surname>
            <given-names>MB</given-names>
          </name>
          <name>
            <surname>Brown</surname>
            <given-names>PO</given-names>
          </name>
          <name>
            <surname>Botstein</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Futcher</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Comprehensive identification of cell cycle-regulated genes of the yeast Saccharomyces cerevisiae by microarray hybridization</article-title>
        <source>Mol Biol Cell</source>
        <year>1998</year>
        <volume>9</volume>
        <fpage>3273</fpage>
        <lpage>3297</lpage>
        <pub-id pub-id-type="pmid">9843569</pub-id>
      </citation>
    </ref>
    <ref id="B19">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhou</surname>
            <given-names>XJ</given-names>
          </name>
          <name>
            <surname>Kao</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Nunez-Iglesias</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Primig</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Aparicio</surname>
            <given-names>OM</given-names>
          </name>
          <name>
            <surname>Finch</surname>
            <given-names>CE</given-names>
          </name>
          <name>
            <surname>Morgan</surname>
            <given-names>TE</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>WH</given-names>
          </name>
        </person-group>
        <article-title>Functional annotation and network reconstruction through cross-platform integration of microarray data</article-title>
        <source>Nat Biotechnol</source>
        <year>2005</year>
        <volume>23</volume>
        <fpage>238</fpage>
        <lpage>243</lpage>
        <pub-id pub-id-type="pmid">15654329</pub-id>
        <pub-id pub-id-type="doi">10.1038/nbt1058</pub-id>
      </citation>
    </ref>
    <ref id="B20">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rhodes</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Barrette</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Ghosh</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Chinnaiyan</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Meta-analysis of microarrays: interstudy validation of gene expression profiles reveals pathway dysregulation in prostate cancer</article-title>
        <source>Cancer Res</source>
        <year>2002</year>
        <volume>62</volume>
        <fpage>4427</fpage>
        <lpage>4433</lpage>
        <pub-id pub-id-type="pmid">12154050</pub-id>
      </citation>
    </ref>
    <ref id="B21">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Choi</surname>
            <given-names>JK</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Yoo</surname>
            <given-names>OJ</given-names>
          </name>
        </person-group>
        <article-title>Combining multiple microarray studies and modeling interstudy variation</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <fpage>184</fpage>
        <lpage>190</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg1010</pub-id>
      </citation>
    </ref>
    <ref id="B22">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rhodes</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Kalyana-Sundaram</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Mahavisno</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Barrette</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Ghosh</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Chinnaiyan</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Mining for regulatory programs in the cancer transcriptome</article-title>
        <source>Nat Genet</source>
        <year>2005</year>
        <volume>37</volume>
        <fpage>579</fpage>
        <lpage>583</lpage>
        <pub-id pub-id-type="pmid">15920519</pub-id>
        <pub-id pub-id-type="doi">10.1038/ng1578</pub-id>
      </citation>
    </ref>
    <ref id="B23">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lamb J</surname>
            <given-names>RSFHLCBMRVKFSZCAPNGTREME</given-names>
          </name>
        </person-group>
        <article-title>A mechanism of cyclin D1 action encoded in the patterns of gene expression in human cancer</article-title>
        <source>Cell</source>
        <year>2003</year>
        <volume>114</volume>
        <fpage>323</fpage>
        <lpage>334</lpage>
        <pub-id pub-id-type="pmid">12914697</pub-id>
        <pub-id pub-id-type="doi">10.1016/S0092-8674(03)00570-1</pub-id>
      </citation>
    </ref>
    <ref id="B24">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stuart</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Segal</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Koller</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>SK</given-names>
          </name>
        </person-group>
        <article-title>A gene-coexpression network for global discovery of conserved genetic modules</article-title>
        <source>Science</source>
        <year>2003</year>
        <volume>302</volume>
        <fpage>249</fpage>
        <lpage>255</lpage>
        <pub-id pub-id-type="pmid">12934013</pub-id>
        <pub-id pub-id-type="doi">10.1126/science.1087447</pub-id>
      </citation>
    </ref>
  </ref-list>
</back>

<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-title>BMC Bioinformatics</journal-title>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">1325270</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-6-298</article-id>
    <article-id pub-id-type="pmid">16343337</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-6-298</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Kalign – an accurate and fast multiple sequence alignment algorithm</article-title>
    </title-group>
    <contrib-group>
      <contrib id="A1" corresp="yes" contrib-type="author">
        <name>
          <surname>Lassmann</surname>
          <given-names>Timo</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>timo.lassmann@cgb.ki.se</email>
      </contrib>
      <contrib id="A2" contrib-type="author">
        <name>
          <surname>Sonnhammer</surname>
          <given-names>Erik LL</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <email>erik.sonnhammer@cgb.ki.se</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Center for Genomics and Bioinformatics, Karolinska Institutet, Berzelius vag 35, S-17177 Stockholm, Sweden</aff>
    <pub-date pub-type="collection">
      <year>2005</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>12</month>
      <year>2005</year>
    </pub-date>
    <volume>6</volume>
    <fpage>298</fpage>
    <lpage>298</lpage>
    <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/1471-2105/6/298"/>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>5</month>
        <year>2005</year>
      </date>
      <date date-type="accepted">
        <day>12</day>
        <month>12</month>
        <year>2005</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2005 Lassmann and Sonnhammer; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2005</copyright-year>
      <copyright-holder>Lassmann and Sonnhammer; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0"/>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</p>
        <!--<rdf xmlns="http://web.resource.org/cc/" xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#" xmlns:dc="http://purl.org/dc/elements/1.1" xmlns:dcterms="http://purl.org/dc/terms"><Work xmlns:dc="http://purl.org/dc/elements/1.1/" xmlns:dcterms="http://purl.org/dc/terms/" rdf:about=""><license rdf:resource="http://creativecommons.org/licenses/by/2.0"/><dc:type rdf:resource="http://purl.org/dc/dcmitype/Text"/><dc:author>
               Lassmann
               Timo
               
               timo.lassmann@cgb.ki.se
            </dc:author><dc:title>
            Kalign &#x02013; an accurate and fast multiple sequence alignment algorithm
         </dc:title><dc:date>2005</dc:date><dcterms:bibliographicCitation>BMC Bioinformatics 6(1): 298-. (2005)</dcterms:bibliographicCitation><dc:identifier type="sici">1471-2105(2005)6:1&#x0003c;298&#x0003e;</dc:identifier><dcterms:isPartOf>urn:ISSN:1471-2105</dcterms:isPartOf><License rdf:about="http://creativecommons.org/licenses/by/2.0"><permits rdf:resource="http://web.resource.org/cc/Reproduction" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/Distribution" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Notice" xmlns=""/><requires rdf:resource="http://web.resource.org/cc/Attribution" xmlns=""/><permits rdf:resource="http://web.resource.org/cc/DerivativeWorks" xmlns=""/></License></Work></rdf>-->
      </license>
    </permissions>
    <abstract>
      <sec>
        <title>Background</title>
        <p>The alignment of multiple protein sequences is a fundamental step in the analysis of biological data. It has traditionally been applied to analyzing protein families for conserved motifs, phylogeny, structural properties, and to improve sensitivity in homology searching. The availability of complete genome sequences has increased the demands on multiple sequence alignment (MSA) programs. Current MSA methods suffer from being either too inaccurate or too computationally expensive to be applied effectively in large-scale comparative genomics.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We developed Kalign, a method employing the Wu-Manber string-matching algorithm, to improve both the accuracy and speed of multiple sequence alignment. We compared the speed and accuracy of Kalign to other popular methods using Balibase, Prefab, and a new large test set. Kalign was as accurate as the best other methods on small alignments, but significantly more accurate when aligning large and distantly related sets of sequences. In our comparisons, Kalign was about 10 times faster than ClustalW and, depending on the alignment size, up to 50 times faster than popular iterative methods.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>Kalign is a fast and robust alignment method. It is especially well suited for the increasingly important task of aligning large numbers of sequences.</p>
      </sec>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>The alignment of multiple sequences is essential in the analysis of protein sequences [<xref ref-type="bibr" rid="B1">1</xref>]. In contrast to pairwise alignment, multiple sequence alignment (MSA) can reveal subtle similarities among large groups of proteins. Such information can be used in phylogenetic analysis [<xref ref-type="bibr" rid="B2">2</xref>], function prediction [<xref ref-type="bibr" rid="B3">3</xref>], HMM building [<xref ref-type="bibr" rid="B4">4</xref>], finding consensus sequences and in the identification of residues critical to function. Due to the importance of multiple sequence alignments in such a wide range of applications, a considerable amount of interest has been focused on improving the accuracy of MSA algorithms. Two basic modes of sequence alignment exist: global, i.e. over the entire length of the sequences [<xref ref-type="bibr" rid="B5">5</xref>], and local, in which only high-scoring areas are considered [<xref ref-type="bibr" rid="B6">6</xref>]. In general, database search algorithms use the local strategy [<xref ref-type="bibr" rid="B7">7</xref>-<xref ref-type="bibr" rid="B10">10</xref>], while most MSA algorithms use the global strategy. However, two noticeable exceptions are the two local MSA methods Poa [<xref ref-type="bibr" rid="B11">11</xref>] and Dialign [<xref ref-type="bibr" rid="B12">12</xref>,<xref ref-type="bibr" rid="B13">13</xref>]. Global methods tend to outperform local methods when sequences are related over their entire length [<xref ref-type="bibr" rid="B14">14</xref>], while local methods are superior in multiple domain cases when sequences may only share one common domain [<xref ref-type="bibr" rid="B15">15</xref>]. Since it is rarely known how sequences are related prior to the alignment, a method attempting to combine both local and global features was proposed by Notredame et al. [<xref ref-type="bibr" rid="B16">16</xref>]. Although this method produces good alignments [<xref ref-type="bibr" rid="B14">14</xref>,<xref ref-type="bibr" rid="B16">16</xref>,<xref ref-type="bibr" rid="B17">17</xref>] it suffers from being time consuming. Recently two new approaches, Mafft [<xref ref-type="bibr" rid="B18">18</xref>] and Muscle [<xref ref-type="bibr" rid="B19">19</xref>] were proposed. Both methods claim to produce alignments as accurate as those by T-Coffee while being considerably faster. The high accuracy is achieved by two iterative refinement strategies that are applied after an initial 'rough' alignment has been found. An important task for multiple sequences alignment algorithms in the future lies in the annotation and analysis of complete proteomes [<xref ref-type="bibr" rid="B20">20</xref>]. For an algorithm to be successful in such a setting it must produce high quality alignments consistently and, due to the volume of data, in a computationally feasible way. With these two goals in mind we developed Kalign, a global, progressive alignment method. We enhanced this approach by employing an approximate string-matching algorithm to calculate sequence distances and by incorporating local matches into the otherwise global alignment. We demonstrate that Kalign is well suited both in terms of speed and accuracy to deal with the challenges posed by large-scale comparative genomics.</p>
  </sec>
  <sec>
    <title>Algorithm</title>
    <sec>
      <title>Alignment strategy</title>
      <p>The Kalign algorithm follows a strategy analogous to the standard progressive method for sequence alignment [<xref ref-type="bibr" rid="B21">21</xref>]. Pairwise distances are calculated, a guide tree is constructed and sequences/profiles are aligned in the order given by the tree. In contrast to existing methods, the Wu-Manber approximate string-matching algorithm [<xref ref-type="bibr" rid="B22">22</xref>] is used in the distance calculation and optionally in the dynamic programming used to align the profiles.</p>
    </sec>
    <sec>
      <title>Distance estimation and tree building</title>
      <p>In progressive alignment the order in which sequences are aligned is crucial for accuracy. The goal is to align the most similar sequences first, to avoid errors in early stages of the alignment that cannot be corrected later on. This is normally accomplished by building a guide tree that dictates the order of pairwise alignments. The tree is typically built from a matrix of pairwise distances between all sequences, e.g. using the UPGMA [<xref ref-type="bibr" rid="B23">23</xref>] or the Neighbour-Joining [<xref ref-type="bibr" rid="B24">24</xref>] method. Performing all pairwise comparisons has quadratic complexity, and hence this step tends to dominate the running time of most progressive methods when aligning many sequences. Performing all pairwise alignments is slow but gives better distance estimates than approximate techniques, e.g. the k-tuple method employed optionally by ClustalW. In Kalign, sequence distances are estimated based on a novel method employing the Wu-Manber approximate string-matching algorithm. This strategy enables Kalign to estimate sequence distances more accurately but as fast as the k-tuple method. We will first discuss the Wu-Manber algorithm in some detail and then explain how it is incorporated into Kalign.</p>
    </sec>
    <sec>
      <title>Wu-Manber algorithm</title>
      <p>The Wu-Manber algorithm is an extension to the exact Baeza-Yates-Gonnet algorithm [<xref ref-type="bibr" rid="B25">25</xref>] that allows string-matching with mismatches. The distance between two strings is measured by the Levenshtein edit distance. Two strings A and B have an edit distance d if A can be transformed into B by applying d mismatches, insertions or deletions. The Wu-Manber algorithm has a complexity of O(<italic>tk</italic>) where t is the length of the text string and <italic>k </italic>the number of errors allowed. Previously, protein sequences were commonly searched with patterns 2–3 long [<xref ref-type="bibr" rid="B7">7</xref>,<xref ref-type="bibr" rid="B9">9</xref>,<xref ref-type="bibr" rid="B10">10</xref>], and hence we choose to search with likewise short, three-residue patterns as well, allowing only one error. Since the maximum number of patterns under these setting is 8000 and only one error is allowed, all input sequences can be searched efficiently. A minor modification of the standard algorithm [<xref ref-type="bibr" rid="B22">22</xref>] allows us to search the sequences with 10 patterns at once, which speeds up this step. The benefit of using approximate string-matching when comparing protein sequences is obvious in two scenarios. Firstly, if sequences have an even degree of similarity along their entire length rather than patches of high identity, the standard k-tuple method fails to detect the similarity. For example, imagine comparing two sequences 'AAAAAA' and 'AALAAL'. Even though the sequences are 66% identical, the standard k-tuple method (with a word length of 3) finds no common patterns between the two sequences while the Wu-Manber algorithm finds 67 common patters ('AAA' matches sequence 1 with a mismatch and sequence 2 exactly, etc.). Similarly, sequences 'AAAAAA' and 'ALALAL' (50% sequence identity) share no exact patterns, yet 25 patterns with mismatches. Secondly, sequences that are less than 30% identical often share few, if any strings of length 3, so the resolution of the k-tuple methods starts to fail. However, shared mismatch patterns can still be readily found and enable the Wu-Manber algorithm to report meaningful distances even between highly divergent sequences. A drawback of using pattern matching for distance estimation is that many spurious matches are reported. Kalign overcomes this problem by considering the locality of the matches found as well as their total number. All matches add a score (16 if the pattern matches both sequences exactly, 8 if one has a mismatch, and 1 if both sequences have a mismatch) to the diagonal on the dynamic programming matrix on which they occur. In similar sequences one diagonal will get a very high score compared to the rest since many matches occur on the same diagonal. However, in distantly related sequences the distribution of scores is less clear and many diagonals will receive relatively low scores. Therefore, the sequence similarity in Kalign is defined as the sum of the three highest scoring diagonals found. By including three diagonals, only matches that are likely to be part of the final alignment are considered when estimating similarity, while many spurious matches are excluded. Although this method is marginally slower than the standard k-tuple counting method, it is much faster than performing all pairwise alignments. The pairwise similarity scores computed in this way are used by the UPGMA clustering method to construct the guide tree.</p>
    </sec>
    <sec>
      <title>Progressive alignment</title>
      <p>At each internal node of the guide tree two sequences, two profiles or one sequence and one profile are aligned. Optionally, Kalign can use Wu-Manber matches as anchor points during the alignment phase, which requires two extra steps in addition to the dynamic programming. This option is intended to improve accuracy in cases of discontinuous alignments, e.g. if a domain has been inserted or deleted. It speeds up the dynamic programming, but the gain is cancelled out by the time to perform the extra steps.</p>
    </sec>
    <sec>
      <title>Dynamic programming</title>
      <p>Kalign employs the global dynamic programming method using affine gap penalties as described in Durbin et al. [<xref ref-type="bibr" rid="B26">26</xref>]. Residues are assigned to three states (aligned, gap in sequence a, or gap in sequence b) which are interconnected by arrows representing transitions. The model has been modified to disallow a gap in one sequence to be immediately followed by a gap in the other sequences. Normally, three matrices of size (m + 1) (n + 1) are used to represent these states. When these 'state-matrices' are filled, the final cell contains the maximum alignment score, and a traceback procedure (requiring these matrices) is used to retrieve the actual alignment. To reduce the amount of memory required we combined two known strategies. Firstly, an additional matrix size (n + 1) (m + 1) is used to store which transition occurs in every cell of the dynamic programming matrix [<xref ref-type="bibr" rid="B27">27</xref>]. By doing so, the optimal alignment can be read off this 'trace-matrix' by looking at which transitions lead from the final cell to the first cell. Secondly, since the three 'state-matrices' are no longer needed to perform the traceback procedure, they can be reduced into one-dimensional arrays because each cell in the dynamic programming matrix only depends on values from the previous column. Thus, instead of using 3 ((n + 1) (m + 1)) memory we now only need 3 (n + 1) + ((n + 1) (m + 1)) memory. In practice, this translates into a ten-fold reduction in memory requirement. The reduction in memory reduces the number of cache-misses and makes the dynamic programming substantially faster. To our knowledge, the combination of these two methods has not been previously described. If the user wishes to use the option of including Wu-Manber matches as anchor points during the alignment phase, two additional steps are performed:</p>
      <sec>
        <title>1. Consistency check</title>
        <p>The task of the consistency check is to sieve through the thousands of matches found between two sequences and find the largest set of matches that can be included into an alignment. For example: a pattern matching at position 100 in both sequences is inconsistent with a pattern that matches sequence A at position 20 and sequence B at position 150. Matches found in both sequences (or profiles) are plotted at the corresponding position into the dynamic programming matrix. Since it is possible for several patterns to match at the same position the number of matching patterns is recorded. The filled matrix is analogous to a homology matrix containing substitution scores in standard sequence alignment. A modified version of the Needleman-Wunsch algorithm is then used to find the path through the dynamic programming matrix that contains the highest number of consistent patters. Because we are interested in local matches here, no gap penalties are used. Finally, all shared matches that occur on too short diagonals are considered spurious and are excluded. We found that a cutoff of 22 residues long diagonals worked well.</p>
      </sec>
      <sec>
        <title>2. Updating of pattern match positions</title>
        <p>Including matches in initial pairwise alignments involving regular sequences is relatively trivial. However, deeper into the guide tree, profiles are aligned both to each other and to sequences. The updating step adjusts the absolute position of matches found within sequences to their relative positions within the profiles generated by the dynamic programming step. For example, a match at position 50 in sequence A can end up in the 55<sup>th </sup>column in a profile, if 5 gaps were inserted anywhere in sequence A before position 50. The matches initially 'tied' to individual sequences are thus assigned to matches within profiles and can be used in the next pairwise alignment step.</p>
      </sec>
    </sec>
    <sec>
      <title>Scoring system</title>
      <p>Like other alignment programs based on dynamic programming, Kalign uses a substitution matrix and affine gap penalties. The choice of matrix and gap penalties has been the subject of previous studies [<xref ref-type="bibr" rid="B28">28</xref>]. The most commonly used substitution matrices are BLOSUM [<xref ref-type="bibr" rid="B29">29</xref>] and PAM [<xref ref-type="bibr" rid="B30">30</xref>]. A common idea is that similar sequences should be aligned with 'hard' matrices like PAM50 or BLOSUM80 while more distantly related sequences align better using 'soft' matrices like PAM250 or BLOSUM40. For instance, the commonly used program ClustalW adjusts the choice of substitution matrix accordingly. However, in agreement with Vogt et al. [<xref ref-type="bibr" rid="B28">28</xref>], we found no significant difference in alignment quality when using a soft matrix instead of a hard matrix on similar sequences. However, in the case of more distantly related sequences, hard matrices generally produce worse results than soft ones. Simply put, similar sequences are easy to align and the choice of substitution matrix does not noticeably affect the alignment quality. However, the correct alignment of dissimilar sequences requires using 'soft' matrices. Therefore we decided not to implement a complicated scheme that adjusts the choice of matrix but use a single soft matrix in all cases. We found little difference in alignment quality between using the BLOSUM50, PAM250 or GONNET250 [<xref ref-type="bibr" rid="B31">31</xref>] matrices and arbitrarily chose the GONNET250 matrix in combination with the parameters reported by Vogt et al. [<xref ref-type="bibr" rid="B28">28</xref>].</p>
    </sec>
    <sec>
      <title>Implementation</title>
      <p>The Kalign algorithm was implemented in standard C.</p>
    </sec>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <p>To compare Kalign to other MSA programs, the following test sets were used: the Balibase 2.01 [<xref ref-type="bibr" rid="B32">32</xref>,<xref ref-type="bibr" rid="B33">33</xref>] test set, Prefab 3.0 [<xref ref-type="bibr" rid="B19">19</xref>] and a new large test set.</p>
    <sec>
      <title>Balibase</title>
      <p>The Balibase test set is a collection of alignments derived from structural databases or from manual alignments in the literature. We used the first five categories in Balibase version 2.01, containing 141 alignments. Each category represents some characteristic such as long or short sequences, high or low sequence identity, or large N/C terminal deletions or extensions. Reference alignments in Balibase contain only few, on average 10, and partial sequences. As noted before [<xref ref-type="bibr" rid="B17">17</xref>], this unnatural bias in the test set favours certain methods. We believe the real challenge lies in aligning large numbers of full-length sequences, which is currently not covered in Balibase. The diversity of the test set is further reduced because several sequences appear in more than one reference alignment.</p>
    </sec>
    <sec>
      <title>Prefab</title>
      <p>Prefab exploits the abundance of pairwise structural alignment to create a multiple alignment test set. Each case in Prefab consists of a pairwise reference alignment and a set of sequences containing the two reference sequences plus 48 additional sequences that were obtained by querying a database with the reference sequences. To perform a test, the set of 50 sequences are aligned, the pairwise alignment of the two reference sequences is extracted from the resulting MSA, and is compared against the pairwise reference alignment. Prefab version 3 contains 1932 individual test cases, each based on a single pairwise alignment. Compared to the 141 test cases in Balibase this seems impressive, but each Balibase test case is an alignment of more than two sequences and in effect Balibase contains 8053 pairwise alignments.</p>
      <p>A drawback of both Balibase and Prefab is that sequence-based MSA methods strive to give evolutionarily motivated alignments that are inherently distinct from the structurally motivated reference alignments in the databases. In structural alignments, residues are assigned to the same column if they are considered structurally equivalent. In evolutionary alignments, aligned residues are thought to have originated from the same residue in a common ancestor. Although these two interpretations of the data often overlap, it is not always the case. Consider the Balibase alignment in Figure <xref ref-type="fig" rid="F1">1</xref>. Clearly, the sequences are very dissimilar from each other (the average sequence identity is 16%) and it is virtually impossible for any sequence-based alignment algorithm to even remotely reproduce this alignment. Even given structural information this alignment seems to be difficult since the corresponding reference alignment in Balibase 1.0 differs by 75% from the one shown in Figure <xref ref-type="fig" rid="F1">1</xref>. Comparing structural and sequence-based alignments can thus be problematic.</p>
      <fig position="float" id="F1">
        <label>Figure 1</label>
        <caption>
          <p>Balibase 2.01 reference alignment 1tvxA ref1 viewed by Belvu [37], showing conservation by "average similarity by BLOSUM62".</p>
        </caption>
        <graphic xlink:href="1471-2105-6-298-1"/>
      </fig>
    </sec>
    <sec>
      <title>Large testset</title>
      <p>As Balibase and Prefab alignments are relatively small (10 and 50 sequences), we felt the need to examine performance on larger alignments. Since no real testset with large alignments exists, we were forced to use simulations to create this dataset. We used Rose version 1.3 [<xref ref-type="bibr" rid="B34">34</xref>], a program that simulates the evolution of sequences in a probabilistic fashion. Given a specified number of sequences and a target average evolutionary distance between them, Rose constructs a random phylogenetic tree, a random ancestor sequence at the root, and simulates evolution by applying substitutions, insertions, and deletions to create the sequences along the edges. As all the events in the history of the sequences are known, the true alignment is known and is recorded. Although some aspects of the simulation may be artificial, it is the only method that provides 100% knowledge of the true alignment. Obviously, alignments and sequences cannot be simulated perfectly by an evolutionary model. For example, two sequences modelled at a PAM distance of 200 might resemble real sequences at a PAM250 more closely than at PAM200. However, it is undeniable that also simulated sequences will become more and more difficult to align with increasing PAM distances. Alignment programs will align distant sequences differently, and based on this a meaningful and informative comparison between the programs can be made. A large test set such as this offers the opportunity to analyze the running times of alignment methods in depth.</p>
    </sec>
    <sec>
      <title>Quality measure</title>
      <p>The alignment quality of each method was determined by calculating the sum-of-pairs score (SP) according to Thompson et al. [<xref ref-type="bibr" rid="B14">14</xref>]. This score reflects the percentage of correctly aligned residues determined by comparison to a reference alignment, and has little in common with the likewise called sum-of-pairs score often used as an objective function. We do not use the column score (CS) [<xref ref-type="bibr" rid="B14">14</xref>] as we feel this score is inadequate and does not reflect the biological correctness of alignments. For example, even if 99% of the sequences are correctly aligned, the column score can become zero due to a single misaligned sequence. In practice, the CS score gives lower accuracies than the SP score, but the ranking of the methods remains the same (results not shown).</p>
    </sec>
    <sec>
      <title>Alignment programs</title>
      <p>We compared our method Kalign (with the default parameters) to Mafft version 3.85 [<xref ref-type="bibr" rid="B18">18</xref>], Muscle version 3.0 [<xref ref-type="bibr" rid="B19">19</xref>], ClustalW version 1.83 [<xref ref-type="bibr" rid="B35">35</xref>], Dialign version 2.2.1 [<xref ref-type="bibr" rid="B13">13</xref>] and T-Coffee version 1.37 [<xref ref-type="bibr" rid="B16">16</xref>]. A comprehensive review of the individual programs and their options is beyond this paper. Unless otherwise stated, we used the programs tested here in their highest accuracy mode. In the case of Mafft, four different scripts govern whether Fast Fourier Transform (FFT) and iterative refinement are used or not. Our experience in using Mafft revealed only small differences in quality and speed between the scripts using FFT or not (results not shown). We used the FFTNSI script throughout because it is slightly faster than the corresponding NWNSI (lacking FFT) script. The Muscle program, similar to the NWNSI script of Mafft, was run using all of the available refinement options.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and Discussion</title>
    <sec>
      <title>Balibase</title>
      <p>The average sum-of-pairs score was calculated for each category in Balibase and the results are shown in Table <xref ref-type="table" rid="T1">1</xref>. Importantly, only conserved blocks in the Balibase alignments were used for evaluation. On this test set, Kalign performs slightly worse on average than Mafft and Muscle. We do not believe that these differences are meaningful due to the small size of alignments (on average 10 sequences) in Balibase and due to the fact that there are so few of them (141). Unfortunately, some of the methods tested here were developed using Balibase making comparisons to other methods problematic. For example, both ClustalW and Muscle were trained on Balibase [<xref ref-type="bibr" rid="B36">36</xref>]. Given that we did not make an attempt to train on Balibase we believe Kalign performs considerably well in general, and especially well in category 2 and 3.</p>
      <table-wrap position="float" id="T1">
        <label>Table 1</label>
        <caption>
          <p>Balibase results. Categories ("Cat.") refer to the five Balibase categories. Average 1 is the average sum-of-pairs score over all 141 alignments, while average 2 is the average across all five categories.</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <td align="left">Method</td>
              <td align="left">CPU time (sec.)</td>
              <td align="left">Cat. 1</td>
              <td align="left">Cat. 2</td>
              <td align="left">Cat. 3</td>
              <td align="left">Cat. 4</td>
              <td align="left">Cat. 5</td>
              <td align="left">Average 1</td>
              <td align="left">Average 2</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Kalign</td>
              <td align="left">27</td>
              <td align="left">0.85</td>
              <td align="left">0.92</td>
              <td align="left">0.79</td>
              <td align="left">0.88</td>
              <td align="left">0.92</td>
              <td align="left">0.86</td>
              <td align="left">0.87</td>
            </tr>
            <tr>
              <td align="left">ClustalW</td>
              <td align="left">75</td>
              <td align="left">0.85</td>
              <td align="left">0.93</td>
              <td align="left">0.75</td>
              <td align="left">0.85</td>
              <td align="left">0.86</td>
              <td align="left">0.86</td>
              <td align="left">0.85</td>
            </tr>
            <tr>
              <td align="left">Muscle</td>
              <td align="left">75</td>
              <td align="left">0.88</td>
              <td align="left">0.93</td>
              <td align="left">0.82</td>
              <td align="left">0.88</td>
              <td align="left">0.97</td>
              <td align="left">0.89</td>
              <td align="left">0.89</td>
            </tr>
            <tr>
              <td align="left">Mafft</td>
              <td align="left">100</td>
              <td align="left">0.86</td>
              <td align="left">0.92</td>
              <td align="left">0.78</td>
              <td align="left">0.91</td>
              <td align="left">0.96</td>
              <td align="left">0.88</td>
              <td align="left">0.89</td>
            </tr>
            <tr>
              <td align="left">Dialign</td>
              <td align="left">234</td>
              <td align="left">0.80</td>
              <td align="left">0.89</td>
              <td align="left">0.68</td>
              <td align="left">0.90</td>
              <td align="left">0.94</td>
              <td align="left">0.83</td>
              <td align="left">0.84</td>
            </tr>
            <tr>
              <td align="left">T-Coffee</td>
              <td align="left">1286</td>
              <td align="left">0.86</td>
              <td align="left">0.93</td>
              <td align="left">0.78</td>
              <td align="left">0.92</td>
              <td align="left">0.96</td>
              <td align="left">0.88</td>
              <td align="left">0.89</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Prefab</title>
      <p>Due to the large number of test cases in Prefab we limited this analysis to ClustalW, Kalign, Muscle and Mafft. The results (Table <xref ref-type="table" rid="T2">2</xref>) agree with the results obtained from Balibase, with Kalign being approximately as accurate as Muscle and Mafft. It is worth noting that in 644 out of the 1932 cases Kalign produced better alignments than Muscle and in 702 cases better alignments than Mafft. In 1238 alignments the difference in accuracy between Kalign and Muscle was less than 1%. Similarly, there were 1232 alignments in which the difference between Kalign and Mafft was less than 1%. Based on this we conclude that Muscle, Mafft and Kalign are equally accurate on Prefab, and that all three methods are more accurate than ClustalW. Kalign was between 4 and 7 times faster than the other methods in completing all 1932 alignments.</p>
      <table-wrap position="float" id="T2">
        <label>Table 2</label>
        <caption>
          <p>Prefab results</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <td align="left">Method</td>
              <td align="left">CPU time (sec.)</td>
              <td align="left">Average</td>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">Kalign</td>
              <td align="left">1743</td>
              <td align="left">0.63</td>
            </tr>
            <tr>
              <td align="left">ClustalW</td>
              <td align="left">12404</td>
              <td align="left">0.59</td>
            </tr>
            <tr>
              <td align="left">Muscle</td>
              <td align="left">8824</td>
              <td align="left">0.63</td>
            </tr>
            <tr>
              <td align="left">Mafft</td>
              <td align="left">7653</td>
              <td align="left">0.64</td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec>
      <title>Large testset</title>
      <p>To further evaluate the quality and speed of multiple alignment methods, we used our own large testset with up to 400 sequences per alignment, and up to an evolutionary distance of 400 PAM. T-Coffee and Dialign were excluded from these tests due to computational limitations. To investigate the effect of the Wu-Manber algorithm, we generated a series of alignments with Rose, each containing 50 sequences with an average evolutionary distance ranging from 0 – 400 (Figure <xref ref-type="fig" rid="F2">2</xref>). We tested the Kalign algorithm with the Wu-Manber string matching enabled (Kalign-default) and disabled (Kalign-ktuple). To make a fair comparison with other methods, we included versions of Mafft and Muscle with the iterative refinement disabled (FFTNSI and Muscle with the '-maxiters 1' option) and ClustalW run with the '-quicktree' option. In accordance with the results obtained on the Balibase and Prefab test set, ClustalW-quicktree is least accurate method. The alignment procedures used in Kalign-ktuple, Muscle-fast and Mafft-fast are comparable and as expected these methods are equally accurate. The default Kalign algorithm using the Wu-Manber algorithm becomes more accurate than the k-tuple based methods at high evolutionary distances. This confirms that the Wu-Manber method is superior to the k-tuple method traditionally used to estimate sequence distances and that both Mafft and Muscle could potentially benefit from using it. In order to examine the effects of evolutionary distance and number of sequences, we generated a test set containing 300 alignments. The evolutionary distance was varied in steps of 20 up to 400 and the number of sequences was gradually increased from 20 to 300 sequences. For each individual alignment in this test the winner, i.e. the program with the highest score, was determined (Figure <xref ref-type="fig" rid="F3">3</xref>). Kalign (shown in red) generally wins in difficult cases of high evolutionary distance and in cases with many sequences. The cases where Kalign does not win are alignments with few and highly similar sequences. Since these are relatively easy alignments the differences to Kalign are insignificant. As shown in Figure <xref ref-type="fig" rid="F2">2b</xref>, if a margin of 2% is required to call a winner, Kalign wins all the non-tied cases with only three exceptions that are won by Muscle. To further demonstrate the differences in accuracy and to analyze the running time in detail, we focused on one row and one column in Figure <xref ref-type="fig" rid="F3">3</xref>. The row was taken at 300 sequences, varying the evolutionary distance (Figure <xref ref-type="fig" rid="F4">4</xref>), and the column at an evolutionary distance of 300, varying the number of sequences (Figure <xref ref-type="fig" rid="F5">5</xref>). In contrast to Figure <xref ref-type="fig" rid="F3">3</xref>, the tests were repeated three times and the average scores are plotted with error bars. Figure <xref ref-type="fig" rid="F4">4a</xref> reveals that there is little difference in terms of quality between the methods at low evolutionary distances. However, at high evolutionary distances, Kalign is superior to Mafft and Muscle. In comparison to the other methods, ClustalW performs very poorly in this test. The analysis of the running times (Figure <xref ref-type="fig" rid="F4">4b</xref>), reveals a strong tendency of Mafft and Muscle to run increasingly slower with increasing evolutionary distances. In contrast, Kalign's complexity is not affected by evolutionary distance and is consistently faster than the other methods tested. ClustalW on the other hand, which starts off as the slowest method, becomes slightly faster with increased evolutionary distance and is in fact faster than both Mafft and Muscle at 400 PAM. The number of input sequences has a big effect on the running time of each method as the complexity of all alignment algorithms depend on it. Conversely, the more sequences that are used in an alignment, the better an alignment algorithm should perform. To our surprise, the quality of all methods except for Kalign decreased when the number of input sequences was increased (Figure <xref ref-type="fig" rid="F5">5a</xref>). The difference in alignment quality between Kalign and the next best method Muscle reaches 15% at 400 sequences. The analysis of running time versus increased number of sequences reveals a clear advantage of the Kalign algorithm over other methods (Figure <xref ref-type="fig" rid="F5">5b</xref>). Again Muscle is the slowest program; above 100 sequences it is on average four times slower than the second slowest program, ClustalW. Kalign takes 5 minutes to align 500 sequences while the same alignment takes 90 minutes using Muscle. Although we consider alignment quality to be the more important than speed, it is clearly advantageous in practice to have a fast alignment method.</p>
      <fig position="float" id="F2">
        <label>Figure 2</label>
        <caption>
          <p>Analysis of the contribution to alignment accuracy made by different algorithmic variants. Kalign-default uses Wu-Manber approximate string matching, while Kalign-ktuple, Mafft-fast, Muscle-fast, and ClustalW-quicktree use exact k-tuple matching. The default Kalign Wu-Manber based algorithm becomes more accurate than other methods at high evolutionary distances. The alignments consisted of 50 simulated sequences.</p>
        </caption>
        <graphic xlink:href="1471-2105-6-298-2"/>
      </fig>
      <fig position="float" id="F3">
        <label>Figure 3</label>
        <caption>
          <p>A 2D plot indicating in which situations different methods perform better on the large testset. The accuracy of the most accurate versions of Kalign, Muscle, and Mafft was measured for each combination of average evolutionary distance (in PAM units) and number of sequences. The cells were colored according to the most accurate program as: Kalign:red; Muscle:blue; Mafft:yellow. If there was a tie between two or more methods the cell is black. In (a) it is enough to win by the smallest margin, whereas in (b) the program must win by a margin of 2%. Up to 200 PAM no program stands out as a clear winner while above this distance Kalign dominates.</p>
        </caption>
        <graphic xlink:href="1471-2105-6-298-3"/>
      </fig>
      <fig position="float" id="F4">
        <label>Figure 4</label>
        <caption>
          <p>Plots of the accuracy (a) and speed (b) achieved by of Kalign, Mafft (FFTNSI), Muscle, and ClustalW on the large testset with increasing average evolutionary distance. The number of sequences (300) and the average sequence length (500 residues) are kept constant.</p>
        </caption>
        <graphic xlink:href="1471-2105-6-298-4"/>
      </fig>
      <fig position="float" id="F5">
        <label>Figure 5</label>
        <caption>
          <p>Plots of the accuracy (a) and speed (b) achieved by of Kalign, Mafft (FFTNSI), Muscle, and ClustalW on the large testset with increasing number of sequences. The evolutionary distance (300 PAM) and the average sequence length (500 residues) are kept constant.</p>
        </caption>
        <graphic xlink:href="1471-2105-6-298-5"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>Conclusion</title>
    <p>In this paper we present Kalign, a novel multiple sequence alignment algorithm based on Wu-Manber approximate pattern matching that combines high quality with high speed. Compared to existing programs, Kalign performed much more robustly when aligning large amounts of sequences or distant sequences in a large-scale benchmark of generated alignments. In terms of computational efficiency, Kalign is superior to the other methods, and readily aligns hundreds of sequences in minutes on a normal desktop computer. Coupled with the fact that Kalign gives very accurate alignments, this makes Kalign a very attractive overall method. The high accuracy of Kalign is due to the innovative use of the approximate Wu-Manber string-matching algorithm. This allows sequence distances to be accurately estimated even in difficult cases. Precise sequence distances generate good quality guide trees that, in turn, lead to good alignments. At the same time, Wu-Manber string-matching is very fast and dramatically cuts down the time required for the distance estimation step that dominates the running time of most alignment programs. The strategy detailed here can, in principle, be applied to any other progressive alignment method. Even when disregarding the results on the new large testset, Kalign's performance on Balibase and Prefab is impressive especially when considering that unlike other methods Kalign was not trained on either test set, and that other methods with similar performance are much slower.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>The Kalign program and a Kalign server are freely available at <ext-link ext-link-type="uri" xlink:href="http://msa.cgb.ki.se"/> or by request from the authors.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>TL had the idea of using a fuzzy-string matching algorithm in multiple sequence alignments, implemented the method and carried out the evaluation. ELLS supervised the work. All authors read and approved the final manuscript.</p>
  </sec>
</body>
<back>
  <ack>
    <sec>
      <title>Acknowledgements</title>
      <p>We would like to thank Alistair Chalk for many useful discussions and Robert Edgar for help with the Prefab testset.</p>
    </sec>
  </ack>
  <ref-list>
    <ref id="B1">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Notredame</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Recent progress in multiple sequence alignment: a survey</article-title>
        <source>Pharmacogenomics</source>
        <year>2002</year>
        <volume>3</volume>
        <fpage>131</fpage>
        <lpage>144</lpage>
        <pub-id pub-id-type="pmid">11966409</pub-id>
      </citation>
    </ref>
    <ref id="B2">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Felsenstein</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>PHYLIP – Phylogeny Inference Package (Version 3.2)</article-title>
        <source>Cladistics</source>
        <year>1989</year>
        <volume>5</volume>
        <fpage>164</fpage>
        <lpage>166</lpage>
      </citation>
    </ref>
    <ref id="B3">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sjolander</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Phylogenomic inference of protein molecular function: advances and challenges</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>170</fpage>
        <lpage>179</lpage>
        <pub-id pub-id-type="pmid">14734307</pub-id>
      </citation>
    </ref>
    <ref id="B4">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Bateman</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Coin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Finn</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Hollich</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Griffiths-Jones</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Khanna</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Marshall</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Moxon</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Sonnhammer</surname>
            <given-names>ELL</given-names>
          </name>
          <name>
            <surname>Studholme</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Yeats</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>The Pfam protein families database</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <fpage>138</fpage>
        <lpage>141</lpage>
      </citation>
    </ref>
    <ref id="B5">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol</source>
        <year>1970</year>
        <volume>48</volume>
        <fpage>443</fpage>
        <lpage>453</lpage>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </citation>
    </ref>
    <ref id="B6">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>J Mol Biol</source>
        <year>1981</year>
        <volume>147</volume>
        <fpage>195</fpage>
        <lpage>197</lpage>
        <pub-id pub-id-type="pmid">7265238</pub-id>
      </citation>
    </ref>
    <ref id="B7">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Improved tools for biological sequence comparison</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>1988</year>
        <volume>85</volume>
        <fpage>2444</fpage>
        <lpage>2448</lpage>
        <pub-id pub-id-type="pmid">3162770</pub-id>
      </citation>
    </ref>
    <ref id="B8">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
        </person-group>
        <article-title>Rapid and sensitive sequence comparison with FASTP and FASTA</article-title>
        <source>Methods Enzymol</source>
        <year>1990</year>
        <volume>183</volume>
        <fpage>63</fpage>
        <lpage>98</lpage>
        <pub-id pub-id-type="pmid">2156132</pub-id>
      </citation>
    </ref>
    <ref id="B9">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Gish</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Basic local alignment search tool</article-title>
        <source>J Mol Biol</source>
        <year>1990</year>
        <volume>215</volume>
        <fpage>403</fpage>
        <lpage>410</lpage>
        <pub-id pub-id-type="pmid">2231712</pub-id>
      </citation>
    </ref>
    <ref id="B10">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Madden</surname>
            <given-names>TL</given-names>
          </name>
          <name>
            <surname>Schaffer</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Gapped BLAST and PSI-BLAST: a new generation of protein database search programs</article-title>
        <source>Nucleic Acids Res</source>
        <year>1997</year>
        <volume>25</volume>
        <fpage>3389</fpage>
        <lpage>3402</lpage>
        <pub-id pub-id-type="pmid">9254694</pub-id>
      </citation>
    </ref>
    <ref id="B11">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lee</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Grasso</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sharlow</surname>
            <given-names>MF</given-names>
          </name>
        </person-group>
        <article-title>Multiple sequence alignment using partial order graphs</article-title>
        <source>Bioinformatics</source>
        <year>2002</year>
        <volume>18</volume>
        <fpage>452</fpage>
        <lpage>464</lpage>
        <pub-id pub-id-type="pmid">11934745</pub-id>
      </citation>
    </ref>
    <ref id="B12">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgenstern</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Dress</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Werner</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Multiple DNA and protein sequence alignment based on segment-to-segment comparison</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>1996</year>
        <volume>93</volume>
        <fpage>12098</fpage>
        <lpage>12103</lpage>
        <pub-id pub-id-type="pmid">8901539</pub-id>
      </citation>
    </ref>
    <ref id="B13">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgenstern</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>DIALIGN 2: improvement of the segment-to-segment approach to multiple sequence alignment</article-title>
        <source>Bioinformatics</source>
        <year>1999</year>
        <volume>15</volume>
        <fpage>211</fpage>
        <lpage>218</lpage>
        <pub-id pub-id-type="pmid">10222408</pub-id>
      </citation>
    </ref>
    <ref id="B14">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thompson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Plewniak</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Poch</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>A comprehensive comparison of multiple sequence alignment programs</article-title>
        <source>Nucleic Acids Res</source>
        <year>1999</year>
        <volume>27</volume>
        <fpage>2682</fpage>
        <lpage>2690</lpage>
        <pub-id pub-id-type="pmid">10373585</pub-id>
      </citation>
    </ref>
    <ref id="B15">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lassmann</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Sonnhammer</surname>
            <given-names>ELL</given-names>
          </name>
        </person-group>
        <article-title>Quality assessment of multiple alignment programs</article-title>
        <source>FEBS Lett</source>
        <year>2002</year>
        <volume>529</volume>
        <fpage>126</fpage>
        <lpage>130</lpage>
        <pub-id pub-id-type="pmid">12354624</pub-id>
      </citation>
    </ref>
    <ref id="B16">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Notredame</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Higgins</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Heringa</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>T-Coffee: A novel method for fast and accurate multiple sequence alignment</article-title>
        <source>J Mol Biol</source>
        <year>2000</year>
        <volume>302</volume>
        <fpage>205</fpage>
        <lpage>217</lpage>
        <pub-id pub-id-type="pmid">10964570</pub-id>
      </citation>
    </ref>
    <ref id="B17">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Karplus</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of protein multiple alignments by SAM-T99 using the BAliBASE multiple alignment test set</article-title>
        <source>Bioinformatics</source>
        <year>2001</year>
        <volume>17</volume>
        <fpage>713</fpage>
        <lpage>720</lpage>
        <pub-id pub-id-type="pmid">11524372</pub-id>
      </citation>
    </ref>
    <ref id="B18">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Katoh</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Misawa</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kuma</surname>
            <given-names>Ki</given-names>
          </name>
          <name>
            <surname>Miyata</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>MAFFT: a novel method for rapid multiple sequence alignment based on fast Fourier transform</article-title>
        <source>Nucleic Acids Res</source>
        <year>2002</year>
        <volume>30</volume>
        <fpage>3059</fpage>
        <lpage>3066</lpage>
        <pub-id pub-id-type="pmid">12136088</pub-id>
      </citation>
    </ref>
    <ref id="B19">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>MUSCLE: multiple sequence alignment with high accuracy and high throughput</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>1792</fpage>
        <lpage>1797</lpage>
        <pub-id pub-id-type="pmid">15034147</pub-id>
      </citation>
    </ref>
    <ref id="B20">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lecompte</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Plewniak</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Thierry</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Poch</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>Multiple alignment of complete sequences (MACS) in the post-genomic era</article-title>
        <source>Gene</source>
        <year>2001</year>
        <volume>270</volume>
        <fpage>17</fpage>
        <lpage>30</lpage>
        <pub-id pub-id-type="pmid">11403999</pub-id>
      </citation>
    </ref>
    <ref id="B21">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Feng</surname>
            <given-names>DF</given-names>
          </name>
          <name>
            <surname>Doolittle</surname>
            <given-names>RF</given-names>
          </name>
        </person-group>
        <article-title>Progressive sequence alignment as a prerequisite to correct phylogenetic trees</article-title>
        <source>J Mol Biol</source>
        <year>1987</year>
        <volume>25</volume>
        <fpage>351</fpage>
        <lpage>360</lpage>
      </citation>
    </ref>
    <ref id="B22">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Manber</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Fast Text Searching Allowing Errors</article-title>
        <source>Communications of the ACM</source>
        <year>1992</year>
        <volume>35</volume>
        <fpage>83</fpage>
        <lpage>91</lpage>
      </citation>
    </ref>
    <ref id="B23">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sokal</surname>
            <given-names>RR</given-names>
          </name>
          <name>
            <surname>Michener</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A statistical method for evaluating systematic relationships</article-title>
        <source>Univ Kansas Sci Bul 1</source>
        <year>1958</year>
        <volume>38</volume>
        <fpage>1409</fpage>
        <lpage>1438</lpage>
      </citation>
    </ref>
    <ref id="B24">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Saitou</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Nei</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>The neighbor-joining method: a new method for reconstructing phylogenetic trees</article-title>
        <source>Mol Biol Evol</source>
        <year>1987</year>
        <volume>4</volume>
        <fpage>406</fpage>
        <lpage>425</lpage>
        <pub-id pub-id-type="pmid">3447015</pub-id>
      </citation>
    </ref>
    <ref id="B25">
      <citation citation-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Baeza-Yates</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Gonnet</surname>
            <given-names>GH</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Belkin NJ, van Rijsbergen CJ</surname>
          </name>
        </person-group>
        <article-title>A new approach to text searching</article-title>
        <source>Proceedings of the 12th International Conference on Research and Development in Information Retrieval</source>
        <year>1989</year>
        <publisher-name>Cambridge, MA: ACM Press</publisher-name>
        <fpage>168</fpage>
        <lpage>175</lpage>
        <ext-link ext-link-type="uri" xlink:href="http://citeseer.ist.psu.edu/50265.html"/>
      </citation>
    </ref>
    <ref id="B26">
      <citation citation-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Eddy</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Krogh</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Mitchison</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <source>Biological sequence analysis</source>
        <year>1998</year>
        <publisher-name>Cambridge University Press</publisher-name>
      </citation>
    </ref>
    <ref id="B27">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Goad</surname>
            <given-names>WB</given-names>
          </name>
          <name>
            <surname>Kanehisa</surname>
            <given-names>MI</given-names>
          </name>
        </person-group>
        <article-title>Pattern recognition in nucleic acid sequences. I. A general method for finding local homologies and symmetries</article-title>
        <source>Nucleic Acids Res</source>
        <year>1982</year>
        <volume>10</volume>
        <fpage>247</fpage>
        <lpage>263</lpage>
        <pub-id pub-id-type="pmid">6801626</pub-id>
      </citation>
    </ref>
    <ref id="B28">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vogt</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Etzold</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Argos</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>An assessment of amino acid exchange matrices in aligning protein sequences: the twilight zone revisited</article-title>
        <source>J Mol Biol</source>
        <year>1995</year>
        <volume>249</volume>
        <fpage>816</fpage>
        <lpage>831</lpage>
        <pub-id pub-id-type="pmid">7602593</pub-id>
      </citation>
    </ref>
    <ref id="B29">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Henikoff</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Henikoff</surname>
            <given-names>JG</given-names>
          </name>
        </person-group>
        <article-title>Amino acid substitution matrices from protein blocks</article-title>
        <source>Proc Natl Acad Sci USA</source>
        <year>1992</year>
        <volume>89</volume>
        <fpage>10915</fpage>
        <lpage>10919</lpage>
        <pub-id pub-id-type="pmid">1438297</pub-id>
      </citation>
    </ref>
    <ref id="B30">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dayhoff</surname>
            <given-names>MO</given-names>
          </name>
          <name>
            <surname>Schwartz</surname>
            <given-names>RM</given-names>
          </name>
          <name>
            <surname>Orcutt</surname>
            <given-names>BC</given-names>
          </name>
        </person-group>
        <article-title>A model of evolutionary change in proteins</article-title>
        <source>Atlas of protein sequence and structure</source>
        <year>1978</year>
        <volume>5</volume>
        <fpage>345</fpage>
        <lpage>358</lpage>
        <comment>[National biomedical research foundation Washington DC]</comment>
      </citation>
    </ref>
    <ref id="B31">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gonnet</surname>
            <given-names>GH</given-names>
          </name>
          <name>
            <surname>Cohen</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Benner</surname>
            <given-names>SA</given-names>
          </name>
        </person-group>
        <article-title>Exhaustive matching of the entire protein sequence database</article-title>
        <source>Science</source>
        <year>1992</year>
        <volume>256</volume>
        <fpage>1443</fpage>
        <lpage>1445</lpage>
        <pub-id pub-id-type="pmid">1604319</pub-id>
      </citation>
    </ref>
    <ref id="B32">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bahr</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Thierry</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Poch</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>BAliBASE (Benchmark Alignment dataBASE): enhancements for repeats, transmembrane sequences and circular permutations</article-title>
        <source>Nucleic Acids Res</source>
        <year>2001</year>
        <volume>29</volume>
        <fpage>323</fpage>
        <lpage>326</lpage>
        <pub-id pub-id-type="pmid">11125126</pub-id>
      </citation>
    </ref>
    <ref id="B33">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thompson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Plewniak</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Poch</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <article-title>BAliBASE: a benchmark alignment database for the evaluation of multiple alignment programs</article-title>
        <source>Bioinformatics</source>
        <year>1999</year>
        <volume>15</volume>
        <fpage>87</fpage>
        <lpage>88</lpage>
        <pub-id pub-id-type="pmid">10068696</pub-id>
      </citation>
    </ref>
    <ref id="B34">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Stoye</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Evers</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Rose: generating sequence families</article-title>
        <source>Bioinformatics</source>
        <year>1998</year>
        <volume>14</volume>
        <fpage>157</fpage>
        <lpage>163</lpage>
        <pub-id pub-id-type="pmid">9545448</pub-id>
      </citation>
    </ref>
    <ref id="B35">
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thompson</surname>
            <given-names>JD</given-names>
          </name>
          <name>
            <surname>Higgins</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Gibson</surname>
            <given-names>TJ</given-names>
          </name>
        </person-group>
        <article-title>CLUSTAL W: improving the sensitivity of progressive multiple sequence alignment through sequence weighting, position-specific gap penalties and weight matrix choice</article-title>
        <source>Nucleic Acids Res</source>
        <year>1994</year>
        <volume>22</volume>
        <fpage>4673</fpage>
        <lpage>4680</lpage>
        <pub-id pub-id-type="pmid">7984417</pub-id>
      </citation>
    </ref>
    <ref id="B36">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>RC</given-names>
          </name>
        </person-group>
        <article-title>MUSCLE: Low-complexity multiple sequence alignment with T-Coffee accuracy [Short Paper]</article-title>
        <source>ISMB/ECCB</source>
        <year>2004</year>
      </citation>
    </ref>
    <ref id="B37">
      <citation citation-type="other">
        <person-group person-group-type="author">
          <name>
            <surname>Sonnhammer</surname>
            <given-names>ELL</given-names>
          </name>
        </person-group>
        <article-title>Belvu</article-title>
        <year>1999</year>
        <ext-link ext-link-type="uri" xlink:href="http://www.cgb.ki.se/cgb/groups/sonnhammer/Belvu.html"/>
      </citation>
    </ref>
  </ref-list>
</back>

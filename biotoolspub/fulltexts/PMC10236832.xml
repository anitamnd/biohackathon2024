<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10236832</article-id>
    <article-id pub-id-type="pmid">37264470</article-id>
    <article-id pub-id-type="publisher-id">2967</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02967-0</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>mutscan</italic>—a flexible R package for efficient end-to-end analysis of multiplexed assays of variant effect data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3833-2169</contrib-id>
        <name>
          <surname>Soneson</surname>
          <given-names>Charlotte</given-names>
        </name>
        <address>
          <email>charlotte.soneson@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5266-4675</contrib-id>
        <name>
          <surname>Bendel</surname>
          <given-names>Alexandra M.</given-names>
        </name>
        <address>
          <email>alexandra.bendel@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-9153-4523</contrib-id>
        <name>
          <surname>Diss</surname>
          <given-names>Guillaume</given-names>
        </name>
        <address>
          <email>guillaume.diss@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-2269-4934</contrib-id>
        <name>
          <surname>Stadler</surname>
          <given-names>Michael B.</given-names>
        </name>
        <address>
          <email>michael.stadler@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.482245.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2110 3787</institution-id><institution>Friedrich Miescher Institute for Biomedical Research, </institution></institution-wrap>Basel, Switzerland </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.419765.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2223 3006</institution-id><institution>SIB Swiss Institute of Bioinformatics, </institution></institution-wrap>Basel, Switzerland </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.6612.3</institution-id><institution-id institution-id-type="ISNI">0000 0004 1937 0642</institution-id><institution>University of Basel, </institution></institution-wrap>Basel, Switzerland </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>1</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>1</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>132</elocation-id>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Multiplexed assays of variant effect (MAVE) experimentally measure the effect of large numbers of sequence variants by selective enrichment of sequences with desirable properties followed by quantification by sequencing. <italic>mutscan</italic> is an R package for flexible analysis of such experiments, covering the entire workflow from raw reads up to statistical analysis and visualization. The core components are implemented in C++ for efficiency. Various experimental designs are supported, including single or paired reads with optional unique molecular identifiers. To find variants with changed relative abundance, <italic>mutscan</italic> employs established statistical models provided in the <italic>edgeR</italic> and <italic>limma</italic> packages. <italic>mutscan</italic> is available from <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan">https://github.com/fmicompbio/mutscan</ext-link>.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02967-0.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Deep mutational scanning</kwd>
      <kwd>Multiplexed assays of variant effect</kwd>
      <kwd>R package</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001711</institution-id>
            <institution>Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung</institution>
          </institution-wrap>
        </funding-source>
        <award-id>197593</award-id>
        <principal-award-recipient>
          <name>
            <surname>Diss</surname>
            <given-names>Guillaume</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Novartis Research Foundation</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">A major question in biology is that of how sequence and function are related. The advances made in modern sequencing technology have resulted in an exponential increase in whole-genome and exome sequencing data over the past few decades and genome-wide association studies (GWAS) have found statistical associations between certain genetic variants and phenotypes or diseases [<xref ref-type="bibr" rid="CR1">1</xref>]. However, the phenotypic consequences of a large fraction of variants identified in the human genome remain elusive [<xref ref-type="bibr" rid="CR2">2</xref>], which is why these variants have been termed variants of uncertain significance (VUS). For example, 41.8% of variants currently listed in ClinVar are characterized as VUS [<xref ref-type="bibr" rid="CR3">3</xref>]. Therefore, a pressing objective has been to find ways to annotate these variants in an efficient way.</p>
    <p id="Par3">Over the past decades, multiplexed assays of variant effect (MAVE) have revolutionized the study of sequence-function relationships by enabling the simultaneous assessment of the functional consequences of thousands of sequence variants on a given phenotype. For example, a large library of variants is created by mutating a sequence of interest (deep mutational scanning (DMS)), and this library is exposed to a pooled selective assay which results in an enrichment of variants with high activity in the given assay and a depletion of variants with low activity [<xref ref-type="bibr" rid="CR4">4</xref>]. The frequency of each variant before and after selection can be quantified using high-throughput sequencing (Fig. <xref rid="Fig1" ref-type="fig">1</xref>A). Variant counts can be obtained by either sequencing the variants directly or using molecular barcodes that uniquely identify each variant. The latter can reduce sequencing costs and increase read quality [<xref ref-type="bibr" rid="CR5">5</xref>]. Enrichment scores calculated from the variant frequencies can be used to infer molecular function and thus the functional effect of a mutation relative to the wild-type sequence [<xref ref-type="bibr" rid="CR4">4</xref>]. The variety of experimental designs that can be used in MAVE emphasizes the value of these assays and their flexibility in addressing diverse biological questions. They have been used to examine activities of proteins, such as protein–protein interaction (PPI) [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR8">8</xref>], E3 ubiquitin ligase activity [<xref ref-type="bibr" rid="CR8">8</xref>], protein abundance [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR9">9</xref>], receptor binding [<xref ref-type="bibr" rid="CR10">10</xref>], aggregation [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], and activity within signaling pathways [<xref ref-type="bibr" rid="CR13">13</xref>]. The functional assays used to achieve enrichment or depletion of variants are equally diverse and include for example fitness or cell growth [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], different reporter assays coupled with fluorescence-activated cell sorting (FACS) [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>], and protein display [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR15">15</xref>].<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of the main functionality of <italic>mutscan</italic>. <bold>A</bold> Multiplexed assays of variant effect experiments are based on the enrichment and depletion of protein variants in an assay that selects for a desired activity of the given variants. Enrichment and depletion are quantified using high-throughput sequencing. <bold>B</bold> The <italic>digestFastqs()</italic> function processes the FASTQ file(s) for each sample independently and encompasses filtering of low-quality reads and reads with more than the allowed number of mutations, extraction of read components, and aggregation into a vector of counts for variants of interest. <bold>C</bold> The output objects from <italic>digestFastqs()</italic> are then combined into a joint <italic>SummarizedExperiment</italic> object which is in turn provided to downstream functions in <italic>mutscan</italic>, or one of the many other R packages based on <italic>SummarizedExperiment</italic> objects, for statistical analysis and plotting. For more details about the individual steps, see the main text</p></caption><graphic xlink:href="13059_2023_2967_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par4">The growth of the field has been further driven by the decreasing cost of sequencing and the simplified construction of large libraries thanks to the commercial large-scale synthesis of DNA oligonucleotides [<xref ref-type="bibr" rid="CR16">16</xref>]. New technical developments that allow the synthesis of large libraries of entire synthetic genes will probably result in even larger libraries [<xref ref-type="bibr" rid="CR17">17</xref>]. Recently, a database was launched with the aim to collect the rich data gathered from MAVE assays in a central place with a unified structure to make it accessible to the scientific community [<xref ref-type="bibr" rid="CR18">18</xref>]. This, however, also calls for streamlined and more standardized analysis methods, including rigorous statistical analysis that considers the possible sources of error in MAVE experiments and therefore allows to make confident statements about the true functional consequences of variants. Several tools have been published to address this demand (Table <xref rid="Tab1" ref-type="table">1</xref>), the most elaborate and widely used among these are <italic>Enrich2</italic> [<xref ref-type="bibr" rid="CR19">19</xref>] and <italic>DiMSum</italic> [<xref ref-type="bibr" rid="CR20">20</xref>].<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of different tools for the analysis of MAVE data. In our evaluations, we compare <italic>mutscan</italic> to <italic>DiMSum</italic> and <italic>Enrich2</italic>, as these are widely used in the field, and align with <italic>mutscan</italic> in terms of their scope and aim</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><bold>Aspect</bold></th><th align="left"><bold><italic>mutscan</italic></bold></th><th align="left"><bold><italic>DiMSum</italic></bold> [<xref ref-type="bibr" rid="CR20">20</xref>]</th><th align="left"><bold><italic>Enrich2</italic></bold> [<xref ref-type="bibr" rid="CR19">19</xref>]</th></tr></thead><tbody><tr><td align="left">OS availability</td><td align="left">All</td><td align="left">Unix-like</td><td align="left">All (requires Python 2.7, end of life since January 1, 2020)</td></tr><tr><td align="left">External dependencies (in addition to R/Python packages)</td><td align="left">None</td><td align="left">FastQC [<xref ref-type="bibr" rid="CR21">21</xref>], cutadapt [<xref ref-type="bibr" rid="CR22">22</xref>], VSEARCH [<xref ref-type="bibr" rid="CR23">23</xref>], starcode [<xref ref-type="bibr" rid="CR24">24</xref>]</td><td align="left">None</td></tr><tr><td align="left">Diagnostic report</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">Yes (autogenerated plots)</td></tr><tr><td align="left">Parallelizable</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">No</td></tr><tr><td align="left">Supported library design</td><td align="left">Single-end, paired-end</td><td align="left">Single-end, paired-end</td><td align="left">Single-end, paired-end</td></tr><tr><td align="left">Statistical test specification</td><td align="left">Any fixed effect model (formula)</td><td align="left">No test. Calculates an enrichment score and error, limited to 9 replicates</td><td align="left">One score per replicate, combined using a mixed-effects model</td></tr><tr><td align="left">Modularity</td><td align="left">Samples are processed independently. Modularity between workflow steps</td><td align="left">The entire experiment is processed together. Modularity between workflow steps if intermediate files are retained</td><td align="left">The entire experiment is processed together. Intermediate results are reused if present</td></tr><tr><td align="left">Installation package</td><td align="left">R package</td><td align="left">Bioconda package</td><td align="left">None</td></tr><tr><td align="left">Enrichment scores</td><td align="left">Absolute and relative</td><td align="left">Relative</td><td align="left">Absolute and relative</td></tr><tr><td align="left">Use of barcodes or variant sequence</td><td align="left">Both</td><td align="left">Both</td><td align="left">Both</td></tr><tr><td align="left">Alignment strategy</td><td align="left">Tree-based string matching (Hamming or Levenshtein distance)</td><td align="left">Clustering (Levenshtein distance, using starcode [<xref ref-type="bibr" rid="CR24">24</xref>])</td><td align="left">String matching or gapped alignment (Needleman-Wunsch)</td></tr><tr><td align="left">UMIs</td><td align="left">Yes</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">Filtering options</td><td align="left">Read length consistency, forbidden codons, base quality, nbr mismatches in constant sequence, nbr mutated bases/codons, nbr N bases</td><td align="left">Minimal read length, base quality, expected errors, nbr mutated bases/amino acids, min nbr reads, invalid overlap, forbidden substitution, mutation type</td><td align="left">Base quality, min nbr reads, nbr mutations, nbr N bases, invalid overlap</td></tr><tr><td align="left">Multiple amplicons</td><td align="left">Yes</td><td align="left">No</td><td align="left">No</td></tr></tbody></table></table-wrap></p>
    <p id="Par5">Here, we present <italic>mutscan</italic>, a novel R package that provides a unified, flexible interface to the analysis of MAVE experiments, covering the entire workflow from FASTQ files to count tables and statistical analysis and visualization. The core read processing module is implemented in C++ , which enables the analysis of large sequencing experiments within reasonable time and memory constraints. <italic>mutscan</italic> is easy to install and use, has a flexible interface that encompasses a broad range of experimental designs, and employs established statistical testing frameworks developed for count data. We apply <italic>mutscan</italic>, as well as <italic>Enrich2</italic> and <italic>DiMSum</italic>, to several experimental MAVE data sets and show that while estimated counts and enrichment scores are often highly concordant between methods, <italic>mutscan</italic> is generally able to process the data faster, with lower memory requirements, and more efficient use of multi-core processing. Given the variety of MAVE experimental designs, the ever-increasing scale of MAVE experiments, and the democratization of the field, we believe that its flexibility, efficiency, and ease of access will make <italic>mutscan</italic> an important addition to the MAVE analysis tool ecosystem.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Example data sets</title>
      <p id="Par6">The results presented below are obtained by applying <italic>mutscan</italic> and other tools (Table <xref rid="Tab1" ref-type="table">1</xref>) to four deep mutational scanning data sets (Table <xref rid="Tab2" ref-type="table">2</xref>). These data sets represent a variety of typical MAVE experimental designs and have been previously used for evaluation purposes [<xref ref-type="bibr" rid="CR20">20</xref>].<table-wrap id="Tab2"><label>Table 2</label><caption><p>Overview of deep mutational scanning data sets used in this study</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set</th><th align="left">Number of replicates</th><th align="left">Library type</th><th align="left">Molecule</th><th align="left">Activity measured</th><th align="left">Total number of reads (Mio.)</th></tr></thead><tbody><tr><td align="left">Diss_FOS [<xref ref-type="bibr" rid="CR6">6</xref>]</td><td align="left">3</td><td align="left">Individual locus</td><td align="left">Protein</td><td align="left">PPI</td><td align="left">262.4</td></tr><tr><td align="left">Diss_FOS_JUN [<xref ref-type="bibr" rid="CR6">6</xref>]</td><td align="left">3</td><td align="left">Two paired loci</td><td align="left">Protein</td><td align="left">PPI</td><td align="left">245.7</td></tr><tr><td align="left">Bolognesi_TDP43_290_331 [<xref ref-type="bibr" rid="CR11">11</xref>]</td><td align="left">3</td><td align="left">Individual locus</td><td align="left">Protein</td><td align="left">Aggregation</td><td align="left">180.0</td></tr><tr><td align="left">Li_tRNA_sel30 [<xref ref-type="bibr" rid="CR25">25</xref>]</td><td align="left">5</td><td align="left">Individual locus</td><td align="left">RNA</td><td align="left">Fitness</td><td align="left">511.4 (1685.7<sup>a</sup>)</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>In the Li_tRNA_sel30 data set, a single-input replicate is paired with multiple output replicates. While the modular design of <italic>mutscan</italic> allows to process this shared input replicate just once, <italic>DiMSum</italic> (with the design used here, in agreement with [<xref ref-type="bibr" rid="CR20">20</xref>]) requires it to be processed repeatedly, once for each selected replicate, which increases the number of processed read pairs from 511.4 to 1685.7 Mio</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec4">
      <title>Overview of the mutscan workflow</title>
      <p id="Par7"><italic>mutscan</italic> is implemented as an R package, with core processing modules written in C++ for efficiency. Figure <xref rid="Fig1" ref-type="fig">1</xref>B, C provides an overview of the full analysis workflow (for more details about the individual steps, see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). The first part of the workflow processes each sequencing library independently. Hence, additional samples can easily be added to an experiment without the need to re-process the existing samples. In this step, reads that do not adhere to the user specifications (e.g., too low base quality, too many or forbidden mutations compared to a provided wild-type sequence) are filtered out, and the remaining ones are used to tabulate the number of reads (or unique UMI sequences, if applicable) corresponding to each observed sequence variant. For increased processing speed, this step can be parallelized. In the second part, the output from all samples in the experiment is combined into a joint <italic>SummarizedExperiment</italic> object [<xref ref-type="bibr" rid="CR26">26</xref>], containing the merged count matrix, a summary of the filtering applied to each individual sample, and additional information about the detected variants, such as the nucleotide and amino acid sequence; the number of mutated bases, codons, and amino acids; and the type of mutations (silent, non-synonymous, stop). Finally, the merged object can be used as the input to functions generating diagnostic plots and reports, as well as statistical analysis functions that estimate log-fold changes and find variants that are increasing or decreasing significantly in abundance during the selection process. Since the data is represented as a <italic>SummarizedExperiment</italic> object, it can also be directly used as input to a wide range of analysis and visualization tools from the Bioconductor ecosystem [<xref ref-type="bibr" rid="CR27">27</xref>].</p>
    </sec>
    <sec id="Sec5">
      <title>Case study: evaluating interaction strength between FOS and JUN variants</title>
      <p id="Par8">To illustrate the practical use of <italic>mutscan</italic>, we reprocess the “trans” data set from [<xref ref-type="bibr" rid="CR6">6</xref>]. Here, libraries of single amino acid mutants of FOS and JUN’s basic leucine zipper domains were constructed by oligonucleotide replacing each codon by one of the 32 codons ending with a C or a G (encoded by NNS in the IUPAC code [<xref ref-type="bibr" rid="CR28">28</xref>]). The two libraries were then cloned together on the same plasmid to measure the effects of combining one mutation on each partner on the protein–protein interaction (PPI) between FOS and JUN. The interaction was scored by deepPCA [<xref ref-type="bibr" rid="CR6">6</xref>], which couples protein–protein interaction to the growth rate in a typical MAVE setting. A rendered report detailing the full analysis can be found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>. The data set contains three replicates, each with an input and an output sequencing library (before/after the selection assay, respectively). As indicated above, we start by processing each of the six FASTQ files separately with the <italic>digestFastqs()</italic> function from <italic>mutscan</italic>. This step extracts the sequences of the variable regions corresponding to the FOS and JUN variants from the paired reads, compares them to the provided wild-type sequences and identifies the differences, and tabulates the number of reads and unique UMIs for each identified variant combination. Since the variable regions of the forward and reverse reads correspond to variants of different proteins encoded at two different loci and do not share any common sequence, we instruct <italic>digestFastqs()</italic> to process them separately rather than attempting to merge them. This also allows us to submit separate wild-type sequences for the variable regions in the forward and reverse reads. We retain only reads with at most one mutated codon in each of the two proteins.</p>
      <p id="Par9">The output of this initial processing step is a list for each sample, containing a count table, a filtering summary, and a record of the parameters that were used (Fig. <xref rid="Fig1" ref-type="fig">1</xref>B). While these objects can be explored as they are, it is more convenient to merge them into a joint <italic>SummarizedExperiment</italic> [<xref ref-type="bibr" rid="CR26">26</xref>] object for downstream analysis (Fig. <xref rid="Fig1" ref-type="fig">1</xref>C), which is done via the <italic>summarizeExperiment()</italic> function in <italic>mutscan</italic>. The resulting object contains a matrix with the UMI counts for all variants in all six samples, as well as a summary of the number of reads filtered out at each step, and any metadata provided for the samples (replicate ID, condition, optical density, etc.), and feeds directly into the diagnostic plot and statistical analysis functions in <italic>mutscan</italic>, including <italic>plotPairs()</italic> and <italic>plotFiltering()</italic>, the outputs of which are shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. We observe that, as expected, we find more unique variants with multiple base mutations, but the observed abundance of individual variants with multiple mutations is markedly lower than for variants with no or a single mutated base (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A, B). Using <italic>mutscan</italic> to visualize the filtering process further illustrates that across all samples, the main reasons for read pairs being filtered out are that they contain an adapter or that they contain more than the allowed number of mutated codons (Fig. <xref rid="Fig2" ref-type="fig">2</xref>C, D).<fig id="Fig2"><label>Fig. 2</label><caption><p>Results from the <italic>mutscan</italic> re-analysis of the FOS/JUN protein interaction data set from [<xref ref-type="bibr" rid="CR6">6</xref>]. <bold>A</bold> The number of variants detected with different numbers of mutated bases. <bold>B</bold> The average abundance of variants with different numbers of mutated bases. While a larger number of different variants with two or more mutations are observed, these are generally much less abundant than variants with no or a single mutated base. <bold>C</bold>, <bold>D</bold> Diagnostic plots of read filtering performed by <italic>digestFastqs()</italic>. In this data set, the main reasons for filtering out read pairs are that they either contain an adapter sequence or that the number of mutated codons exceeds the defined threshold of maximum one mutated codon per protein. <bold>E</bold> Pairs plot displaying the concordance of the observed counts across the six samples. Generally, high correlations are observed between the three input samples as well as between the three output samples, indicating good robustness of the measurements. The correlation between the input and output samples is considerably lower, reflecting the impact of the selection. <bold>F</bold> Heatmap showing the estimated protein–protein interaction score for all single-amino acid variants of each of the two proteins. Red color indicates an increased interaction, while blue signifies decreased interaction</p></caption><graphic xlink:href="13059_2023_2967_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par10">Next, we use <italic>mutscan</italic> to investigate the concordance among the six samples, by plotting the estimated variant counts (Fig. <xref rid="Fig2" ref-type="fig">2</xref>E). As expected, the correlation within each type of sample (input/output) is considerably higher than the correlation between input and output samples, indicating that the selection step indeed influences the sample composition.</p>
      <p id="Par11">After the initial quality assessment, we use <italic>mutscan</italic> to summarize the counts for variants with the same amino acid sequence. From this matrix, we then estimate a protein–protein interaction score for each variant and replicate, indicating the effect of the variant relative to the wild-type sequence as described by [<xref ref-type="bibr" rid="CR6">6</xref>]. Focusing only on variants with a mutated amino acid in either FOS or JUN (but not both), we can generate a heatmap summarizing the impact of each single amino acid mutation on the overall interaction score (Fig. <xref rid="Fig2" ref-type="fig">2</xref>F). These heatmaps serve as the basis for interpreting the mechanisms by which mutations impact the molecular activity studied. For instance, as was observed in the original paper [<xref ref-type="bibr" rid="CR6">6</xref>] for this data set, positions crucial for heterodimerization are highly sensitive to mutations. Any substitution of the leucine at positions 4, 11, 18, and 25, which form the hydrophobic core of the interaction interface, is detrimental. Positions involved in salt bridge formation across the interface, for instance, between position 21 in Fos and position 26 in Jun, are also typically detrimental for heterodimer formation, although the magnitude of the effect is lower than at core positions. The heatmap can also reveal positions where the wild-type appears sub-optimal, such as position 8 in Fos where substitution of the hydrophilic wild-type threonine by more hydrophobic amino acids leads to an increase in interaction score, as one would expect for a position at the hydrophobic core of the interface. The presence of this sub-optimal residue in the wild-type sequence might thus result from an evolutionary trade-off with other properties of Fos, such as interaction with other partners.</p>
    </sec>
    <sec id="Sec6">
      <title>mutscan enables processing flexibility</title>
      <p id="Par12">The <italic>digestFastq()</italic> function in <italic>mutscan</italic>, which performs the initial processing of each individual library, is designed to provide flexibility in the sample processing, thereby enabling the analysis of a wide range of library designs, not limited to MAVE experiments. Here, we highlight some of the main features.<list list-type="bullet"><list-item><p id="Par13"><italic>Processing of single- or paired-end reads with arbitrary composition of basic elements</italic>: <italic>mutscan</italic> accepts FASTQ files from both single-end and paired-end experiments. In addition, a vector of (pairs of) FASTQ files can be provided, and these will be internally concatenated. If some part of the variable regions of the forward and reverse reads is shared, e.g., if they correspond to overlapping parts of the same protein, the reads in a pair can be merged before further processing. The size of the overlap can be anywhere between a single base and the length of the whole read, and restrictions on what constitutes a valid overlap can be specified by the user. For each read, the user further specifies the sequence composition in terms of five element types (see Box 1): variable regions (typically the sequences of interest), constant regions, skipped regions, primers, and UMIs. Each read can contain multiple (adjacent or nonadjacent) regions of each element type except primers, and the lengths of the regions can be defined by the user or automatically inferred by <italic>mutscan</italic>. This design provides an intuitive interface for the user and implies that many different types of experiments can be analyzed within the same framework. Moreover, processing parameters and read compositions are specified separately for the forward and reverse reads, which allows direct processing of constructs with multiple variable regions, e.g., corresponding to different proteins.</p></list-item><list-item><p id="Par14"><italic>Sequence-based analysis or comparison (or collapsing) to one or more wild-type sequences</italic>: <italic>mutscan</italic> allows the optional specification of one or more wild-type sequences, against which the extracted variable regions will be compared. If more than one wild-type sequence is provided, <italic>mutscan</italic> will find the most similar one for each read, and match the read against that. The variant identifiers used by <italic>mutscan</italic> consist of the name of the most similar wild-type sequence, augmented with the observed deviation(s). For example, an identifier of the form GENEX.10. A indicates that the closest wild-type sequence was that of GENEX, and the observed read deviated from this wild-type sequence in that the tenth base was an A, rather than the reference base. It is also possible to collapse all variants to their closest reference sequence, if the mutations are not of interest. If no wild-type sequence is provided, <italic>mutscan</italic> represents each identified variant by its actual nucleotide sequence.</p></list-item><list-item><p id="Par15"><italic>Codon- or nucleotide-based analysis</italic>: <italic>mutscan</italic> allows the processing of both coding and non-coding sequences. If wild-type sequences are provided, the user can choose to limit either the number of mutated bases or the number of distinct mutated codons that are allowed in the identified variants. This choice will further impact the naming of the variants (in terms of the codon or nucleotide deviations from the closest wild-type sequence).</p></list-item><list-item><p id="Par16"><italic>Collapsing of similar sequences</italic>: If no wild-type sequences are provided, the user has the option to collapse variants (unique variable sequences) with at most a given number of mutations between them. The collapsing is done in a greedy way, starting from the most abundant variant, and can be limited to only collapsing variants with a large enough abundance ratio.</p></list-item><list-item><p id="Par17"><italic>Processing only a subset of the reads</italic>: For testing purposes, it is often useful to process only a small subset of the reads. <italic>mutscan</italic> allows the user to limit the processing to the first N reads in the FASTQ file, where N is specified by the user.</p></list-item><list-item><p id="Par18"><italic>Various filtering criteria</italic>: <italic>mutscan</italic> implements a range of filtering criteria, including the number of “N” bases in the variable and/or UMI sequence, the number of mutations in the constant and/or variable sequence (if a reference sequence is provided), the base quality of the identified mutations and/or the average base quality in the read, the presence of forbidden codons (specified using IUPAC code), or the invalid overlap between forward and reverse reads for merging. The output object contains a table listing the number of reads filtered out by each of the criteria.</p></list-item><list-item><p id="Par19"><italic>Export of excluded reads (with a reason for exclusion) to FASTQ files for further investigation</italic>: In cases where reads are filtered out for any of the reasons listed above, it may be helpful to be able to process these further. <italic>mutscan</italic> can write reads that are filtered out to a (pair of) FASTQ file(s), including the reason for exclusion in the read identifier.</p></list-item><list-item><p id="Par20"><italic>Estimation of sequencing error rate</italic>: If the input reads contain a constant region, <italic>mutscan</italic> estimates the sequencing error rate by counting the number of mismatches compared to the expected sequence across the reads. The error rate is further stratified by the base quality reported in the FASTQ file.</p></list-item><list-item><p id="Par21"><italic>Nucleotide- or amino acid-based analysis</italic>: The main output from <italic>digestFastqs()</italic> is represented in base or codon space. However, the corresponding amino acid information is recorded, and the count matrix can easily be collapsed on the amino acid level. In addition, <italic>mutscan</italic> reports the type of mutations (silent, non-synonymous, stop) present in each variant.</p></list-item><list-item><p id="Par22"><italic>Flexible analysis frameworks</italic>: The statistical testing module in <italic>mutscan</italic> is based on established packages for the analysis of digital gene expression data (<italic>edgeR</italic> [<xref ref-type="bibr" rid="CR29">29</xref>] and <italic>limma-voom</italic> [<xref ref-type="bibr" rid="CR30">30</xref>]). Both tools allow the user to specify an arbitrary (fixed-effect) design and thus provides excellent flexibility for testing complex hypotheses, not limited to paired comparisons of input and output samples. Moreover, several different normalizations are available, allowing calculation of both “absolute” and “relative” log-fold changes (e.g., changes relative to a wild-type reference).</p></list-item></list></p>
    </sec>
    <sec id="Sec7">
      <boxed-text>
        <label>Box 1 Read components</label>
        <p id="Par23"><italic>mutscan</italic> requires the user to specify the composition of the input read(s) in terms of the following five component types:</p>
        <p id="Par24">- Variable regions (V): these are typically the regions of interest. If one or more wild-type sequences are provided, the variable regions will be compared to those to identify variants. If no wild-type sequences are provided, the sequence of the variable region will be used to represent the variant</p>
        <p id="Par25">- Constant regions (C): these regions are used to estimate the sequencing error rates. Reads can also be filtered out if they have too many mutations in the constant region</p>
        <p id="Par26">- Skipped regions (S): these regions will be ignored in the processing</p>
        <p id="Par27">- Primers (P): a primer sequence differs from a constant region by the fact that it is not required to occur in a pre-defined position in the read. Instead, <italic>mutscan</italic> will search the read for a perfect match for the primer sequence</p>
        <p id="Par28">- UMIs (U): these sequences will be used to correct PCR amplification biases. If present, the output count table will contain, for each variant, both the number of reads and the number of unique associated UMIs</p>
        <p id="Par29">For example, an experiment where the reads have the following composition:</p>
        <p id="Par30">
          <bold>[1 skipped nt] − [10 nt UMI] − [18 nt constant sequence] − [96 nt variable region]</bold>
        </p>
        <p id="Par31">would be specified to <italic>digestFastqs()</italic> by an element string “SUCV” and an element length vector c(1, 10, 18, 96)</p>
        <p id="Par32">For a library design with a primer sequence, the primer acts as an “anchor,” and the read composition before and after the primer is specified. For example, reads with the following composition:</p>
        <p id="Par33">
          <bold>[unknown sequence] − [10 nt primer] − [variable region, constituting the remainder of the read]</bold>
        </p>
        <p id="Par34">would be represented by an element string “SPV” and an element length vector c(<bold>-</bold>1, 10, -1), where the -1 indicates that the corresponding read part consists of the remaining part of the read, not accounted for by any of the other specified parts</p>
      </boxed-text>
    </sec>
    <sec id="Sec8">
      <title>mutscan controls the type I error</title>
      <p id="Par35">To evaluate whether the statistical approaches employed by <italic>mutscan</italic> are able to control the type I error rate at the expected level, we designed a null comparison for each of the example data sets. Briefly, we assigned approximately half of the replicates to group “A,” and the rest of the replicates to group “B,” and tested, for each variant, whether the output/input count ratio was different between the two artificial groups. The procedure was repeated for all possible assignments of the replicates to two approximately equally sized groups. Overall, the nominal <italic>p</italic>-value distributions from <italic>mutscan</italic>, using either <italic>edgeR</italic> and <italic>limma</italic> as the inference engine, were largely uniform, indicating that the tests are well calibrated (Fig. <xref rid="Fig3" ref-type="fig">3</xref>).<fig id="Fig3"><label>Fig. 3</label><caption><p><italic>mutscan p</italic>-value distributions for null comparisons. For each data set, repeated null data sets were generated by artificially splitting the replicates into two approximately equally sized groups. For each such artificial null data set, <italic>mutscan</italic> (with the method set to <italic>edgeR</italic> and <italic>limma</italic>, respectively) was used to fit a model and test whether the log-fold change between input and output samples differed significantly between the two artificial groups. The colored densities represent the individual data splits, while the dark gray density represents the union of <italic>p</italic>-values from all data splits. Since the groupings are artificial, uniform <italic>p</italic>-value distributions are expected. While technical differences among the samples, and the low sample size in general, imply that not all comparisons provide exactly uniform <italic>p</italic>-value distributions, we do not observe a systematic bias in the <italic>p</italic>-values from <italic>mutscan</italic>. Only variants with more than 50 counts in all input samples were considered for this analysis. The number of retained features is indicated in each panel</p></caption><graphic xlink:href="13059_2023_2967_Fig3_HTML" id="MO3"/></fig></p>
    </sec>
    <sec id="Sec9">
      <title>mutscan is computationally efficient</title>
      <p id="Par36">In order to evaluate the computational efficiency of <italic>mutscan</italic> (v0.2.31), we applied it to the four example data sets and used the benchmarking capabilities of <italic>snakemake</italic> [<xref ref-type="bibr" rid="CR31">31</xref>] to track CPU and memory usage as well as the volume of data input and output. We also ran <italic>DiMSum</italic> v1.2.11 (on all data sets) and <italic>Enrich2</italic> v1.3.1 (for the Diss_FOS data set only, due to the long execution time), attempting to set the parameters of the different tools in such a way that the similarity between the performed analyses would be maximized (see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). We evaluated the entire process, from raw FASTQ files to output tables and additionally included the generation of the summary report where applicable.</p>
      <p id="Par37">For all data sets, the total execution time for <italic>mutscan</italic> was lower than for <italic>DiMSum</italic> (Fig. <xref rid="Fig4" ref-type="fig">4</xref>), and both of these finished in less time than <italic>Enrich2</italic>. The distribution of time spent in the different stages varied across data sets as the processing time for individual samples is largely determined by the number of reads, while the time required to perform statistical tests and generate plots for quality assessment is rather dependent on the number of identified and retained variants. The same effect is seen for the memory consumption. Only a small amount of memory is required for the initial sample processing by <italic>mutscan</italic>, while the memory required for the later analysis and statistical testing depends on the number of retained variants, and thus, the size of the count matrix that needs to be loaded into the R session for processing. We also note that, apart from reading the FASTQ files, the total volume of input and output data for <italic>mutscan</italic> is very low, as the whole sample processing is performed by a single function that traverses the input files only once and without the need to create intermediate files on disk for transfer of data between different software tools. The total runtime of <italic>DiMSum</italic>, which is reading and writing much larger volumes of data to disk, also likely depends more strongly on the performance of the storage system. Another consequence of <italic>mutscan</italic>’s design is that a larger fraction of the time is spent on actions that are parallelizable, which can be seen by its higher average CPU load (400–600% for <italic>mutscan</italic> when run with 10 cores, compared with 100–200% for <italic>DiMSum</italic> with 10 cores). <italic>Enrich2</italic> is not parallelizable and thus exhibits a constant load of 100%.<fig id="Fig4"><label>Fig. 4</label><caption><p>Comparison of computational performance metrics for <italic>mutscan</italic>, <italic>Enrich2</italic>, and <italic>DiMSum</italic>. Generally, <italic>mutscan</italic> processes the included data sets faster and with a lower memory footprint than competing methods. In addition, only small amounts of data are being read from and written to disk during the processing. The <italic>digestFastqs()</italic> metrics for the Li_tRNA_sel30 data set are averaged across the five runs on the single input sample, since only one run is required for <italic>mutscan</italic>. Total I/O volumes are separated in input and output, indicated above by I and O, respectively. RSS, resident set size</p></caption><graphic xlink:href="13059_2023_2967_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par38">While the evaluations mentioned above were all run with 10 cores, we also investigated how the key performance parameters scaled with the number of cores provided to <italic>mutscan</italic> when running the <italic>digestFastqs()</italic> function on a single pair of FASTQ files (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S1). The results suggest that while the average load increases linearly with an increasing number of cores, indicating good scalability of the parallel parts of the code, the benefit in terms of decreased total execution time is significantly reduced when more than 10 cores are used. This is likely explained by the constant runtime consumed by the serial parts in the code. In addition, for a fixed number of cores, the raw data processing performed by <italic>digestFastqs()</italic> scales linearly with the number of input reads in terms of execution time and close to linearly in terms of memory requirement (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S2).</p>
    </sec>
    <sec id="Sec10">
      <title>mutscan counts and log-fold changes are comparable to those from Enrich2 and DiMSum</title>
      <p id="Par39">In order to further compare the return values of <italic>mutscan</italic> to those obtained from <italic>DiMSum</italic> and <italic>Enrich2</italic>, we contrasted the sets of variants identified by the different tools. In addition, we chose a representative sample for each of the data sets and contrasted the estimated counts for all variants identified by at least one tool (Fig. <xref rid="Fig5" ref-type="fig">5</xref>, Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S3-S10). As previously described, we attempted to set the parameters of each tool in such a way as to maximize the similarity between the analysis workflows (see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). In general, most variants with up to two mutations (bases or amino acids, depending on the data set) were detected by all methods (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S3, S5, S7, S9). The variants that were found with only one of the tools also generally had a lower abundance than the variants found consistently with all tools.<fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison of counts estimated by <italic>mutscan</italic>, <italic>DiMSum</italic>, and <italic>Enrich2</italic>. For each data set, a representative sample is shown (indicated in the respective figure titles, together with the data set). In general, the counts estimated by the three methods show a high correlation, and deviations are likely explained by differences in aspects such as how the set of allowed or forbidden mutations is specified, how the filtering of low-quality sequences is implemented, and whether mismatches or partial matches are allowed in the specified primer sequence</p></caption><graphic xlink:href="13059_2023_2967_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par40">Also, when comparing the estimated counts for the variants between the tools, we noticed a high degree of similarity, but also data set-specific differences. For the Diss_FOS_JUN data set, we hypothesize that one reason for the generally higher counts observed with <italic>DiMSum</italic> than with <italic>mutscan</italic> is the different way in which the allowed codon mutations are specified. More precisely, with <italic>mutscan</italic> we are defining the format of any forbidden mutated codon (in our case, IUPAC code “NNW”). <italic>DiMSum</italic>, on the other hand, approaches this by specifying the allowed IUPAC code for each position in the entire variable sequence. Hence, with this setup, mutated codons that already end in a “T” or an “A” in the wild-type sequence will not disqualify the read from being included in the analysis. The shift from the diagonal line in the Bolognesi_TDP43_290_331 data set may be caused by the differences between approaches in <italic>mutscan</italic> and <italic>DiMSum</italic> for detecting the primer sequence immediately preceding the variable sequence. While <italic>DiMSum</italic> utilizes <italic>cutadapt</italic> to trim the unwanted sequence, <italic>mutscan</italic> requires a perfect match to the specified primer sequence whenever its position in the read is not fully specified.</p>
      <p id="Par41">Similarly to the sets of detected variants, the correlation between the estimated counts from the different tools also decreased as the number of mutations in the variant increased (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S4, S6, S8, S10).</p>
      <p id="Par42">Finally, we calculated enrichment scores using the three tools (Fig. <xref rid="Fig6" ref-type="fig">6</xref>). For <italic>mutscan</italic>, we evaluated both built-in frameworks, based on <italic>limma-voom</italic> and <italic>edgeR</italic>, respectively. The log-fold change of a variant relative to that of the wild-type (obtained by using the latter as a replacement for the library size in the offset/normalization steps of <italic>edgeR</italic>/<italic>limma</italic>) is used as an enrichment score for <italic>mutscan</italic> and compared to the returned enrichment score from <italic>DiMSum</italic> (called “fitness score” in <italic>DiMSum</italic>), and the average of the sample-wise scores from <italic>Enrich2</italic>. As for the variant counts, we see a strong correlation between the enrichment scores from the different methods. This corroborates findings from [<xref ref-type="bibr" rid="CR32">32</xref>], where <italic>DiMSum</italic>’s enrichment scores were found to be highly correlated with log-fold changes calculated using <italic>DESeq2</italic> [<xref ref-type="bibr" rid="CR33">33</xref>] on the same count matrix. As for the detected variants, the correlation between the enrichment scores is much stronger for variants with only a single mutation and decreases as the number of mutations increases (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S11-S14), possibly due to the lower absolute counts observed for variants with more mutations. It is worth noting that the data set with the lowest correlation among the enrichment scores (Bolognesi_TDP43_290_331) is also the one where the correlations between the <italic>DiMSum</italic> enrichment scores for the individual replicates are the lowest (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S15). Again, most of the discrepancies are contributed by variants with more mutated bases (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S13).<fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison of enrichment scores estimated by <italic>mutscan</italic>, <italic>DiMSum</italic>, and <italic>Enrich2</italic>. For <italic>mutscan</italic>, the values are logFCs estimated by either <italic>edgeR</italic> or <italic>limma</italic>. For <italic>DiMSum</italic>, they correspond to the enrichment score derived from all replicates. For <italic>Enrich2</italic>, they are the averages of the scores for the replicates. The lower correlations seen in the Bolognesi_TDP43_290_331 data set, and to some extent, the Diss_FOS_JUN data set reflect the less stringent variant filtering criteria used in these data sets (up to 3 mutated bases for Bolognesi_TDP43_290_331 and up to two mutated codons for Diss_FOS_JUN, see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). Considering only variants with fewer recorded mutations leads to higher correlations, more comparable to the Diss_FOS data set where only up to two mutated bases were allowed (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figs. S11-S14)</p></caption><graphic xlink:href="13059_2023_2967_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec11">
    <title>Discussion</title>
    <p id="Par43">We are describing <italic>mutscan</italic>, a new package to process and analyze multiplexed assays of variant effect data. <italic>mutscan</italic> is an R package and does not depend on external software libraries beyond other R packages; thus, it is easy to install and use across all major operating systems. At the same time, it provides a high degree of interoperability with other tools, since the summarized data is represented in a <italic>SummarizedExperiment</italic> object, which can be directly used with a wide range of analysis and visualization functions within the Bioconductor ecosystem.</p>
    <p id="Par44">For many of the MAVE studies to date (including the ones used for evaluation in this study), the readout is the actual DNA sequence of the target protein(s) of interest. However, the field is increasingly moving towards instead sequencing unique barcodes associated with these variants, as this provides a way of better distinguishing true variants and sequencing errors, and also simplifies the analysis of longer protein sequences. <italic>mutscan</italic> supports also this type of experimental setup. If no reference sequence is provided, the variants (barcodes) will be represented by their sequence. Moreover, observed sequences can be collapsed if they are within a given distance, and have at least a pre-specified ratio of abundance in the sample. Current development work for <italic>mutscan</italic> includes streamlining the analysis workflow for large barcode sequencing experiments further, including the mapping of barcodes to true variants.</p>
  </sec>
  <sec id="Sec12">
    <title>Conclusions</title>
    <p id="Par45">We have described <italic>mutscan</italic>, a flexible, easy-to-use R package for processing and statistical analysis of multiplexed assays of variant effect data. <italic>mutscan</italic> is designed in a modular way and is directly applicable also to other types of data aimed at identifying and tabulating substitution variants compared to a provided reference sequence, or tabulating unique sequences directly, potentially after collapsing variants within a certain distance. By leveraging established tools for statistical analysis of count data, the analytical framework provides a high degree of flexibility to address a variety of practical questions.</p>
  </sec>
  <sec id="Sec13">
    <title>Methods</title>
    <p id="Par46">Figure <xref rid="Fig1" ref-type="fig">1</xref> provides an overview of the functionality implemented in <italic>mutscan</italic>. A typical workflow can often be summarized in three main steps: (1) processing of individual samples/sequencing libraries; (2) aggregation of the output from the individual samples into a single, combined object; and (3) analysis and visualization.</p>
    <sec id="Sec14">
      <title>Processing of individual samples</title>
      <p id="Par47">The individual sample processing starts from a FASTQ file with sequencing reads (or a pair of FASTQ files for a paired-end sequencing experiment). Multiple (pairs of) FASTQ files per sample are supported. The <italic>digestFastqs()</italic> function takes these FASTQ files as input and processes the reads to generate a variant count table. The first part of this analysis proceeds read by read and consists of the following steps:<list list-type="order"><list-item><p id="Par48">If applicable, search for user-specified adapter sequences and remove any read (pair) where these are detected.</p></list-item><list-item><p id="Par49">Split the read (pair) into components as specified by the user (see Box 1 for details); in particular, extract the constant and variable parts of the reads. In the process, filter out reads that are not compatible with the user-specified composition.</p></list-item><list-item><p id="Par50">Reverse complement the forward and/or reverse constant and variable sequences if requested.</p></list-item><list-item><p id="Par51">If requested, merge the forward and reverse variable sequences. The user can specify the minimum and maximum overlaps, the minimum and maximum lengths of the merged sequence, and the maximal fraction of allowed mismatches. If no valid overlap is found satisfying these criteria, the read pair is filtered out.</p></list-item><list-item><p id="Par52">Filter out reads where the average base quality in the variable sequence is below the user-specified threshold or where the number of Ns in the variable or UMI sequence exceeds an imposed threshold.</p></list-item><list-item><p id="Par53">If one or more wild-type/reference sequences are provided, compare the extracted variable region to these and find the closest match. If no wild-type sequence is found within an imposed mismatch limit, or if more than one wild-type sequence provides an equally good optimal match, the read (pair) is filtered out. Reads will also be filtered out if the base quality of the identified mutation(s) is below an imposed threshold, or if the mutated codon(s) matches a user-specified list of forbidden codons. Separate sets of wild-type sequences can be provided for the forward and reverse reads in a pair, if appropriate.</p></list-item><list-item><p id="Par54">Similarly, compare the extracted constant sequences to provided reference sequences, and filter out reads where the difference exceeds a given threshold, or where more than one reference sequence provides equally good optimal matching.</p></list-item><list-item><p id="Par55">If the read has not been filtered out in any of the steps above, store the observed sequence as well as an assigned “mutant name,” consisting of the name of the closest wild-type sequence together with the positions and sequences of the mutated nucleotides or codons. If no wild-type sequences are provided, the mutant name is the observed variable sequence.</p></list-item></list></p>
      <p id="Par56">The read processing is implemented in C++ for efficiency. Moreover, reads can be processed in parallel using OpenMP [<xref ref-type="bibr" rid="CR34">34</xref>] in order to speed up this first step of an analysis. <italic>mutscan</italic> also supports writing all reads that are filtered out, together with the reason for the exclusion, to a FASTQ file (pair) for potential further processing/troubleshooting.</p>
      <p id="Par57">After all reads have been processed individually and the final set of sequences to retain has been determined, <italic>mutscan</italic> supports additional post-processing steps. If no wild-type sequences are provided, reads that are within a certain Hamming distance of each other can be collapsed (the assumption is that these correspond to sequencing or PCR error variants). This step will collapse a lower-frequency read to a higher-frequency one if their similarity as well as the abundance of the most frequent sequence and the ratio of the two abundances exceed given thresholds. The read counts for the collapsed sequences are summed, and all individual sequences contributing to a collapsed feature are recorded. Similarly, if the reads contain UMI sequences, these can be collapsed within a given variable sequence to avoid over-counting UMIs because of sequencing errors.</p>
      <p id="Par58">The individual sample processing with <italic>digestFastqs()</italic> returns an output object with four components. The count table records all the observed variants, together with their abundances (number of reads and/or UMIs); the number of mutated bases, codons, and amino acids; and the set of observed sequences contributing to each variant. The filtering table summarizes the number of reads that were filtered out in each step outlined above. If a read is filtered out in one step, it will not be considered for the following ones. The output also contains a list of all argument values provided to <italic>digestFastqs()</italic>, as well as information about when the analysis was run, and with which version of <italic>mutscan</italic>. Finally, if one or more constant regions are included in the reads, <italic>mutscan</italic> tabulates the number of mismatches for each base quality and returns the table.</p>
    </sec>
    <sec id="Sec15">
      <title>Merging processed data from multiple samples</title>
      <p id="Par59">A typical MAVE experiment consists of input and output (post-selection) libraries from multiple replicates. The process outlined in the previous section generates a count vector for each of these samples. To perform downstream analyses, the count vectors from the individual samples are merged into a single <italic>SummarizedExperiment</italic> object by the <italic>summarizeExperiment()</italic> function. Variants not detected in specific samples are thereby assigned a count of 0. In addition to the counts, the <italic>summarizeExperiment</italic> function propagates the filtering summary and parameter settings, as well as user-provided metadata about the samples, and stores these for convenient access in the joint object.</p>
    </sec>
    <sec id="Sec16">
      <title>Statistical analysis and visualization</title>
      <p id="Par60">In order to find variants that either increase or decrease their relative abundance upon selection, potentially compared to a wild-type variant, <italic>mutscan</italic> employs the widely used and established statistical models provided in the <italic>edgeR</italic> [<xref ref-type="bibr" rid="CR29">29</xref>] and <italic>limma</italic> [<xref ref-type="bibr" rid="CR35">35</xref>] Bioconductor packages to perform statistical analysis, leveraging a large number of distinct variants for improved inference. Normalization factors can be calculated using either the TMM method [<xref ref-type="bibr" rid="CR36">36</xref>] (which generates sample-specific normalization factors) or the <italic>csaw</italic> package [<xref ref-type="bibr" rid="CR37">37</xref>] (which generates feature- and sample-specific normalization factors). Alternatively, if the user wishes to calculate abundance changes relative to those of one or more wild-type sequences, the sum or geometric mean of the counts of the latter can be used as offsets. Similar approaches were previously explored, and found to perform well, for the analysis of multiple parallel reporter assays [<xref ref-type="bibr" rid="CR38">38</xref>]. The user can further select whether to use the <italic>edgeR-QLF</italic> [<xref ref-type="bibr" rid="CR39">39</xref>] or the <italic>limma-voom</italic> [<xref ref-type="bibr" rid="CR30">30</xref>] framework to fit a (generalized) linear model to each feature. The log-fold changes returned by these models can be used as a proxy for a molecular activity for downstream interpretation. In addition, for growth rate-based experiments, <italic>mutscan</italic> can be used to estimate PPI scores as described by [<xref ref-type="bibr" rid="CR6">6</xref>].</p>
      <p id="Par61">In addition to the statistical analysis functionality, <italic>mutscan</italic> provides a variety of diagnostic plots, including a summary of the filtering steps, pairs plots displaying the correlations among samples, plots showing the distribution of abundances by sample, and static or interactive MA plots and volcano plots for easier interpretation of the statistical analysis results. It also provides a convenient wrapper function to generate a quality report in html format for an experiment.</p>
    </sec>
    <sec id="Sec17">
      <title>Comparison to Enrich2 and DiMSum</title>
      <p id="Par62">To benchmark <italic>mutscan</italic>, we compared the computational performance metrics as well as the output counts and enrichment scores to those from <italic>DiMSum</italic> [<xref ref-type="bibr" rid="CR20">20</xref>] and <italic>Enrich2</italic> [<xref ref-type="bibr" rid="CR19">19</xref>], which are both widely used tools for the analysis of MAVE data. We aimed to set the parameters of the three methods in such a way that the output values were comparable, wherever possible. For the Diss_FOS data set, we limited the number of mutated nucleotides to 2 and analyzed the data on the nucleotide level rather than collapsing on the codon or amino acid level. We also did not use the information in the included UMIs but counted the number of reads assigned to each variant. For the Bolognesi_TDP43_290_331 data set, we allowed up to three nucleotide substitutions. For the Li_tRNA_sel30 data set, we allowed any number of mutations but filtered the quantified variants to only retain those with a count exceeding 2000 in all the input samples and exceeding 200 in all output samples. For the Diss_FOS_JUN data set, we instructed <italic>mutscan</italic> to allow up to one mutated codon in each of the two variable sequences, and only allowed mutated codons encoded by the “NNS” IUPAC code. For <italic>DiMSum</italic>, we limited the total number of mutated amino acids to two (across the concatenated wild-type sequence), indicated that the mutagenesis was done on the codon level, and provided the IUPAC code for the allowed nucleotide sequence. Before comparison, we further filtered out the <italic>DiMSum</italic> variants where the two mutated amino acids occurred in the same protein. We also removed variants with both non-synonymous and silent mutations from the <italic>mutscan</italic> output, as the default setting in <italic>DiMSum</italic> is to exclude these. Configuration files for all methods are available from <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan_manuscript_2022">https://github.com/fmicompbio/mutscan_manuscript_2022</ext-link>.</p>
    </sec>
    <sec id="Sec18">
      <title>Estimation of computational performance metrics</title>
      <p id="Par63">All analyses were run on a server with two Intel Xeon Platinum 8168 CPUs with a total of 48 cores, 1024 GB of random access memory and parallel file system accessed via GPFS. Memory requirement (max RSS), CPU usage, execution time, and total I/O were measured using the benchmark directives of a slightly modified version of <italic>snakemake</italic> v7.8.3 (modified to return the values of read_chars and write_chars from <italic>psutil</italic>, in addition to the default read_bytes and write_bytes; patch file available at <ext-link ext-link-type="uri" xlink:href="https://gist.github.com/mbstadler/3f5131b5aa88f87196d030a82081e1ea">https://gist.github.com/mbstadler/3f5131b5aa88f87196d030a82081e1ea</ext-link>).</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2967_MOESM1_ESM.html">
            <caption>
              <p><bold>Additional file 1.</bold> Available from https://doi.org/10.5281/zenodo.7896393. Reprocessing of FOS/JUN data from Diss &amp; Lehner. This file provides a reproducible record describing how mutscan was used to reprocess the data from a previous publication.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2967_MOESM2_ESM.pdf">
            <caption>
              <p><bold>Additional file 2:</bold> <bold>Figure S1.</bold> Computational performance metrics for <italic>mutscan</italic>’s <italic>digestFastqs()</italic> function run with different numbers of cores, processing a single input sample from the Li_tRNA_sel30 dataset. The black dots represent the average across five independent runs, each indicated by a smaller red dot. The dashed curves connect the average values for different numbers of cores. RSS -resident set size. <bold>Figure S2.</bold> Execution time and maximum memory required by the <italic>digestFastqs()</italic> function when processing different numbers of reads (achieved by setting the maxNReads argument of the <italic>digestFastqs()</italic> function to N, which limits the processing to the first N reads in the FASTQ file). The black dots represent the average across five independent runs, each indicated by a smaller red dot. The dashed line in (A) is a linear regression line, while the dashed curve in (B) connects the average values for different numbers of cores. RSS - resident set size. <bold>Figure S3.</bold> Comparison of the variants detected by <italic>mutscan</italic>, <italic>DiMSum</italic> and <italic>Enrich2</italic> in the Diss_FOS dataset,  stratified by the number of mutated bases in the variant. All variants with up to two mutated bases are consistently detected by all three tools. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S4.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic>, <italic>DiMSum</italic> and <italic>Enrich2</italic> in the Diss_FOS dataset, stratified by the number of mutated bases in the variant. <bold>Figure S5.</bold> Comparison of the variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Diss_FOS_JUN dataset, stratified by the number of mutated amino acids in the variant. Most variants are found consistently with both tools. The ones found by a single tool tend to have a low read count. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S6.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Diss_FOS_JUN dataset, stratified by the number of mutated amino acids in the variant. <bold>Figure S7.</bold> Comparison of the variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Bolognesi_TDP43_290_331 dataset, stratified by the number of mutated bases in the variant. Almost all variants with up to two mutations are consistently detected by both methods. The ones found by a single tool tend to have a low read count. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S8.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Bolognesi_TDP43_290_331 dataset, stratified by the number of mutated bases in the variant. <bold>Figure S9.</bold> Comparison of the variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Li_tRNA_sel30 dataset, stratified by the number of mutated bases in the variant. Only variants with up to six mutations are shown. Most variants are found with both tools, and the ones found by a single tool tend to have a lower read count. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S10.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Li_tRNA_sel30 dataset, stratified by the number of mutated bases in the variant. Only variants with up to six mutations are shown. <bold>Figure S11.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic>, <italic>DiMSum</italic> and <italic>Enrich2</italic> in the Diss_FOS dataset, stratified by the number of mutated bases in the variant. The agreement between the fitness scores from the different methods is very high for variants with a single mutation, and decreases as the number of mutations increases (and alongside that, the average abundance decreases). <bold>Figure S12.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Diss_FOS_JUN dataset, stratified by the number of mutated amino acids in the variant. The agreement between the fitness scores from the different methods is very high for variants with a single mutation, and decreases as the number of mutations increases. <bold>Figure S13.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Bolognesi_TDP43_290_331 dataset, stratified by the number of mutated bases in the variant. The agreement between the fitness scores from the different methods is very high for variants with a single mutation, and decreases as the number of mutations increases. <bold>Figure S14.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Li_tRNA_sel30 dataset, stratified by the number of mutated bases in the variant. <bold>Figure S15.</bold> Comparison of fitness scores estimated by <italic>DiMSum</italic> for individual replicates in the four example data sets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13059_2023_2967_MOESM3_ESM.docx">
            <caption>
              <p><bold>Additional file 3.</bold> Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors would like to thank the current and former members of the Diss, Thomä and Stadler groups at FMI for the discussions, testing, and feedback.</p>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par64">Anahita Bishop was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par65">The review history is available as Additional file <xref rid="MOESM3" ref-type="media">3</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>CS: conceptualization, methodology, software, formal analysis, writing—original draft, and visualization. AMB: investigation, writing—original draft, and validation. GD: conceptualization, resources, validation, writing —review and editing, and project administration. MBS: conceptualization, methodology, software, and writing—original draft. The authors read and approved the final manuscript.</p>
    <sec id="FPar3">
      <title>Authors’ Twitter handles</title>
      <p id="Par66">@AlexBendel_ (Alexandra M. Bendel); @Guillaume_Diss (Guillaume Diss)</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Novartis Research Foundation (all authors) and SNF Project grant 197593 (GD, AMB). The funding bodies did not have any role in the design of the study; the collection, analysis, and interpretation of the data; or writing of the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: <italic>mutscan</italic> (v0.2.31 used for all analyses, v0.2.35 adds additional variant names based on reviewers’ comments).</p>
    <p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan">https://github.com/fmicompbio/mutscan</ext-link>[<xref ref-type="bibr" rid="CR40">40</xref>], <ext-link ext-link-type="uri" xlink:href="https://fmicompbio.github.io/mutscan/">https://fmicompbio.github.io/mutscan/</ext-link></p>
    <p>Archived versions: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7129132">https://doi.org/10.5281/zenodo.7129132</ext-link> (v0.2.31) [<xref ref-type="bibr" rid="CR41">41</xref>], <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7702318">https://doi.org/10.5281/zenodo.7702318</ext-link> (v0.2.35) [<xref ref-type="bibr" rid="CR42">42</xref>].</p>
    <p>Operating system(s): Platform independent.</p>
    <p>Programming language: R, C++ </p>
    <p>Other requirements: none.</p>
    <p>License: MIT.</p>
    <p>Any restrictions to use by non-academics: none.</p>
    <p>The code used to generate the results in the paper is available from <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan_manuscript_2022">https://github.com/fmicompbio/mutscan_manuscript_2022</ext-link>.</p>
    <p>The data sets supporting the conclusions of this article are available in the Gene Expression Omnibus repository [<xref ref-type="bibr" rid="CR43">43</xref>–<xref ref-type="bibr" rid="CR45">45</xref>].</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar4">
      <title>Ethics approval and consent to participate</title>
      <p id="Par67">Not applicable.</p>
    </notes>
    <notes id="FPar5">
      <title>Consent for publication</title>
      <p id="Par68">Not applicable.</p>
    </notes>
    <notes id="FPar6" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par69">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uffelmann</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>QQ</given-names>
          </name>
          <name>
            <surname>Munung</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>de Vries</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Okada</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>AR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Genome-wide association studies</article-title>
        <source>Nature Reviews Methods Primers</source>
        <year>2021</year>
        <volume>1</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1038/s43586-021-00056-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burke</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Parens</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Chung</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Berger</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Appelbaum</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>The challenge of genetic variants of uncertain clinical significance: a narrative review</article-title>
        <source>Ann Intern Med</source>
        <year>2022</year>
        <volume>175</volume>
        <issue>7</issue>
        <fpage>994</fpage>
        <lpage>1000</lpage>
        <pub-id pub-id-type="doi">10.7326/M21-4109</pub-id>
        <?supplied-pmid 35436152?>
        <pub-id pub-id-type="pmid">35436152</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pir</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Bilgin</surname>
            <given-names>HI</given-names>
          </name>
          <name>
            <surname>Sayici</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Coşkun</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Torun</surname>
            <given-names>FM</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ConVarT: a search engine for matching human genetic variants with variants from non-human species</article-title>
        <source>Nucleic Acids Res</source>
        <year>2022</year>
        <volume>50</volume>
        <issue>D1</issue>
        <fpage>D1172</fpage>
        <lpage>D1178</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab939</pub-id>
        <?supplied-pmid 34718716?>
        <pub-id pub-id-type="pmid">34718716</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowler</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Fields</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Deep mutational scanning: a new style of protein science</article-title>
        <source>Nat Methods</source>
        <year>2014</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>801</fpage>
        <lpage>807</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3027</pub-id>
        <?supplied-pmid 25075907?>
        <pub-id pub-id-type="pmid">25075907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowler</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Stephany</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Fields</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Measuring the activity of protein variants on a large scale using deep mutational scanning</article-title>
        <source>Nat Protoc</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>9</issue>
        <fpage>2267</fpage>
        <lpage>2284</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2014.153</pub-id>
        <?supplied-pmid 25167058?>
        <pub-id pub-id-type="pmid">25167058</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Diss</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The genetic landscape of a physical interaction</article-title>
        <source>Elife</source>
        <year>2018</year>
        <volume>7</volume>
        <fpage>e32472</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.32472</pub-id>
        <?supplied-pmid 29638215?>
        <pub-id pub-id-type="pmid">29638215</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Domingo</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schmiedel</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Hidalgo-Carcedo</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Diss</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Mapping the energetic and allosteric landscapes of protein binding domains</article-title>
        <source>Nature</source>
        <year>2022</year>
        <volume>604</volume>
        <issue>7904</issue>
        <fpage>175</fpage>
        <lpage>183</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-022-04586-4</pub-id>
        <?supplied-pmid 35388192?>
        <pub-id pub-id-type="pmid">35388192</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Starita</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Young</surname>
            <given-names>DL</given-names>
          </name>
          <name>
            <surname>Islam</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kitzman</surname>
            <given-names>JO</given-names>
          </name>
          <name>
            <surname>Gullingsrud</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hause</surname>
            <given-names>RJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Massively parallel functional analysis of BRCA1 RING domain variants</article-title>
        <source>Genetics</source>
        <year>2015</year>
        <volume>200</volume>
        <issue>2</issue>
        <fpage>413</fpage>
        <lpage>422</lpage>
        <pub-id pub-id-type="doi">10.1534/genetics.115.175802</pub-id>
        <?supplied-pmid 25823446?>
        <pub-id pub-id-type="pmid">25823446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Matreyek</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Starita</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Stephany</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Chiasson</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Gray</surname>
            <given-names>VE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Multiplex assessment of protein variant abundance by massively parallel sequencing</article-title>
        <source>Nat Genet</source>
        <year>2018</year>
        <volume>50</volume>
        <issue>6</issue>
        <fpage>874</fpage>
        <lpage>882</lpage>
        <pub-id pub-id-type="doi">10.1038/s41588-018-0122-z</pub-id>
        <?supplied-pmid 29785012?>
        <pub-id pub-id-type="pmid">29785012</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Starr</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Greaney</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Hilton</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Ellis</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Crawford</surname>
            <given-names>KHD</given-names>
          </name>
          <name>
            <surname>Dingens</surname>
            <given-names>AS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Deep mutational scanning of SARS-CoV-2 receptor binding domain reveals constraints on folding and ACE2 binding</article-title>
        <source>Cell</source>
        <year>2020</year>
        <volume>182</volume>
        <issue>5</issue>
        <fpage>1295</fpage>
        <lpage>310.e20</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2020.08.012</pub-id>
        <?supplied-pmid 32841599?>
        <pub-id pub-id-type="pmid">32841599</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolognesi</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Seuma</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schmiedel</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Tartaglia</surname>
            <given-names>GG</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The mutational landscape of a prion-like domain</article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-12101-z</pub-id>
        <pub-id pub-id-type="pmid">30602773</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Seuma</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Badia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bolognesi</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The genetic landscape for amyloid beta fibril nucleation accurately discriminates familial Alzheimer’s disease mutations</article-title>
        <source>Elife</source>
        <year>2021</year>
        <volume>1</volume>
        <issue>10</issue>
        <fpage>e63364</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.63364</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jones</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Lubock</surname>
            <given-names>NB</given-names>
          </name>
          <name>
            <surname>Venkatakrishnan</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tseng</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Paggi</surname>
            <given-names>JM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Structural and functional characterization of G protein–coupled receptors with deep mutational scanning</article-title>
        <source>Elife</source>
        <year>2020</year>
        <volume>21</volume>
        <issue>9</issue>
        <fpage>e54895</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.54895</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Carmody</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Zimmer</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Kuntz</surname>
            <given-names>CP</given-names>
          </name>
          <name>
            <surname>Harrington</surname>
            <given-names>HR</given-names>
          </name>
          <name>
            <surname>Duckworth</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Penn</surname>
            <given-names>WD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Coordination of -1 programmed ribosomal frameshifting by transcript and nascent chain features revealed by deep mutational scanning</article-title>
        <source>Nucleic Acids Res</source>
        <year>2021</year>
        <volume>49</volume>
        <issue>22</issue>
        <fpage>12943</fpage>
        <lpage>12954</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab1172</pub-id>
        <?supplied-pmid 34871407?>
        <pub-id pub-id-type="pmid">34871407</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowler</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Araya</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Fleishman</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Kellogg</surname>
            <given-names>EH</given-names>
          </name>
          <name>
            <surname>Stephany</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>High-resolution mapping of protein sequence-function relationships</article-title>
        <source>Nat Methods</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>9</issue>
        <fpage>741</fpage>
        <lpage>746</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1492</pub-id>
        <?supplied-pmid 20711194?>
        <pub-id pub-id-type="pmid">20711194</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rocklin</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Chidyausiku</surname>
            <given-names>TM</given-names>
          </name>
          <name>
            <surname>Goreshnik</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Ford</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Houliston</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lemak</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Global analysis of protein folding using massively parallel design, synthesis, and testing</article-title>
        <source>Science</source>
        <year>2017</year>
        <volume>357</volume>
        <issue>6347</issue>
        <fpage>168</fpage>
        <lpage>175</lpage>
        <pub-id pub-id-type="doi">10.1126/science.aan0693</pub-id>
        <?supplied-pmid 28706065?>
        <pub-id pub-id-type="pmid">28706065</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Plesa</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sidore</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Lubock</surname>
            <given-names>NB</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Kosuri</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Multiplexed gene synthesis in emulsions for exploring protein functional landscapes</article-title>
        <source>Science</source>
        <year>2018</year>
        <volume>359</volume>
        <issue>6373</issue>
        <fpage>343</fpage>
        <lpage>347</lpage>
        <pub-id pub-id-type="doi">10.1126/science.aao5167</pub-id>
        <?supplied-pmid 29301959?>
        <pub-id pub-id-type="pmid">29301959</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Rubin AF, Min JK, Rollins NJ, Da EY, Esposito D, Harrington M, et al. MaveDB v2: a curated community database with over three million variant effects from multiplexed functional assays [Internet]. bioRxiv. 2021. p. 2021.11.29.470445. Available from:  <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2021.11.29.470445v1">https://www.biorxiv.org/content/10.1101/2021.11.29.470445v1</ext-link>. Cited 1 Dec 2021</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rubin</surname>
            <given-names>AF</given-names>
          </name>
          <name>
            <surname>Gelman</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Bajjalieh</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Papenfuss</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Speed</surname>
            <given-names>TP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A statistical framework for analyzing deep mutational scanning data</article-title>
        <source>Genome Biol</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>150</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1272-5</pub-id>
        <?supplied-pmid 28784151?>
        <pub-id pub-id-type="pmid">28784151</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Schmiedel</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Baeza-Centurion</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>DiMSum: an error model and pipeline for analyzing deep mutational scanning data and diagnosing common experimental pathologies</article-title>
        <source>Genome Biol</source>
        <year>2020</year>
        <volume>21</volume>
        <issue>1</issue>
        <fpage>207</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-020-02091-3</pub-id>
        <?supplied-pmid 32799905?>
        <pub-id pub-id-type="pmid">32799905</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Andrews</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>FastQC: a quality control tool for high throughput sequence data [Online] [Internet]</source>
        <year>2010</year>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Martin</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Cutadapt removes adapter sequences from high-throughput sequencing reads</article-title>
        <source>EMBnet.journal</source>
        <year>2011</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>10</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.14806/ej.17.1.200</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rognes</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Flouri</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Nichols</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Quince</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mahé</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>VSEARCH: a versatile open source tool for metagenomics</article-title>
        <source>PeerJ</source>
        <year>2016</year>
        <volume>18</volume>
        <issue>4</issue>
        <fpage>e2584</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.2584</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zorita</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Cuscó</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Filion</surname>
            <given-names>GJ</given-names>
          </name>
        </person-group>
        <article-title>Starcode: sequence clustering based on all-pairs search</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>12</issue>
        <fpage>1913</fpage>
        <lpage>1919</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv053</pub-id>
        <?supplied-pmid 25638815?>
        <pub-id pub-id-type="pmid">25638815</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Multi-environment fitness landscapes of a tRNA gene</article-title>
        <source>Nat Ecol Evol</source>
        <year>2018</year>
        <volume>2</volume>
        <issue>6</issue>
        <fpage>1025</fpage>
        <lpage>1032</lpage>
        <pub-id pub-id-type="doi">10.1038/s41559-018-0549-8</pub-id>
        <?supplied-pmid 29686238?>
        <pub-id pub-id-type="pmid">29686238</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Morgan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Obenchain</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Hester</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pagès</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>SummarizedExperiment: SummarizedExperiment container [Internet]</source>
        <year>2022</year>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
          <name>
            <surname>Gentleman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Carlson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carvalho</surname>
            <given-names>BS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Orchestrating high-throughput genomic analysis with Bioconductor</article-title>
        <source>Nat Methods</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>115</fpage>
        <lpage>121</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id>
        <?supplied-pmid 25633503?>
        <pub-id pub-id-type="pmid">25633503</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cornish-Bowden</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Nomenclature for incompletely specified bases in nucleic acid sequences: recommendations 1984</article-title>
        <source>Nucleic Acids Res</source>
        <year>1985</year>
        <volume>13</volume>
        <issue>9</issue>
        <fpage>3021</fpage>
        <lpage>3030</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/13.9.3021</pub-id>
        <?supplied-pmid 2582368?>
        <pub-id pub-id-type="pmid">2582368</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>McCarthy</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>1</issue>
        <fpage>139</fpage>
        <lpage>140</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp616</pub-id>
        <?supplied-pmid 19910308?>
        <pub-id pub-id-type="pmid">19910308</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Law</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>voom: precision weights unlock linear model analysis tools for RNA-seq read counts</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>R29</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-2-r29</pub-id>
        <?supplied-pmid 24485249?>
        <pub-id pub-id-type="pmid">24485249</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mölder</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Jablonski</surname>
            <given-names>KP</given-names>
          </name>
          <name>
            <surname>Letcher</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>MB</given-names>
          </name>
          <name>
            <surname>Tomkins-Tinch</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Sochat</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Sustainable data analysis with Snakemake</article-title>
        <source>F1000Res</source>
        <year>2021</year>
        <volume>10</volume>
        <fpage>33</fpage>
        <pub-id pub-id-type="doi">10.12688/f1000research.29032.2</pub-id>
        <?supplied-pmid 34035898?>
        <pub-id pub-id-type="pmid">34035898</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Soo</surname>
            <given-names>VWC</given-names>
          </name>
          <name>
            <surname>Swadling</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Warnecke</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Fitness landscape of a dynamic RNA structure</article-title>
        <source>PLoS Genet</source>
        <year>2021</year>
        <volume>17</volume>
        <issue>2</issue>
        <fpage>e1009353</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pgen.1009353</pub-id>
        <?supplied-pmid 33524037?>
        <pub-id pub-id-type="pmid">33524037</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Love</surname>
            <given-names>MI</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>12</issue>
        <fpage>550</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-014-0550-8</pub-id>
        <?supplied-pmid 25516281?>
        <pub-id pub-id-type="pmid">25516281</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dagum</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Menon</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>OpenMP: an industry standard API for shared-memory programming</article-title>
        <source>IEEE Comput Sci Eng</source>
        <year>1998</year>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>46</fpage>
        <lpage>55</lpage>
        <pub-id pub-id-type="doi">10.1109/99.660313</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ritchie</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Phipson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Law</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>limma powers differential expression analyses for RNA-sequencing and microarray studies</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <issue>7</issue>
        <fpage>e47</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv007</pub-id>
        <?supplied-pmid 25605792?>
        <pub-id pub-id-type="pmid">25605792</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Oshlack</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>A scaling normalization method for differential expression analysis of RNA-seq data</article-title>
        <source>Genome Biol</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>3</issue>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2010-11-3-r25</pub-id>
        <?supplied-pmid 20196867?>
        <pub-id pub-id-type="pmid">20196867</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lun</surname>
            <given-names>ATL</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>csaw: a Bioconductor package for differential binding analysis of ChIP-seq data using sliding windows</article-title>
        <source>Nucleic Acids Res</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>5</issue>
        <fpage>e45</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1191</pub-id>
        <?supplied-pmid 26578583?>
        <pub-id pub-id-type="pmid">26578583</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Myint</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Avramopoulos</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Goff</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Hansen</surname>
            <given-names>KD</given-names>
          </name>
        </person-group>
        <article-title>Linear models enable powerful differential activity analysis in massively parallel reporter assays</article-title>
        <source>BMC Genomics</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>209</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-019-5556-x</pub-id>
        <?supplied-pmid 30866806?>
        <pub-id pub-id-type="pmid">30866806</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lun</surname>
            <given-names>ATL</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>It’s DE-licious: a recipe for differential expression analyses of RNA-seq experiments using quasi-likelihood methods in edgeR</article-title>
        <source>Methods Mol Biol</source>
        <year>2016</year>
        <volume>1418</volume>
        <fpage>391</fpage>
        <lpage>416</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-4939-3578-9_19</pub-id>
        <?supplied-pmid 27008025?>
        <pub-id pub-id-type="pmid">27008025</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">Soneson C, Bendel AM, Diss G, Stadler MB. mutscan. GitHub. 2023.<ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan">https://github.com/fmicompbio/mutscan</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">Soneson C, Bendel AM, Diss G, Stadler MB. mutscan v0.2.31. Zenodo. 2023.10.5281/zenodo.7129132.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Soneson C, Bendel AM, Diss G, Stadler MB. mutscan v0.2.35. Zenodo. 2023. 10.5281/zenodo.7702318.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Diss G, Lehner B. The genetic landscape of a physical interaction. GSE102901. Gene Expression Omnibus. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE102901">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE102901</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Bolognesi B, Lehner B. The mutational landscape of a Prion-like domain. GSE128165. Gene Expression Omnibus. 2019. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE128165">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE128165</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Li C, Zhang J. Multi-environment fitness landscapes of a tRNA gene. GSE111508. Gene Expression Omnibus. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111508">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111508</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10236832</article-id>
    <article-id pub-id-type="pmid">37264470</article-id>
    <article-id pub-id-type="publisher-id">2967</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02967-0</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title><italic>mutscan</italic>—a flexible R package for efficient end-to-end analysis of multiplexed assays of variant effect data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-3833-2169</contrib-id>
        <name>
          <surname>Soneson</surname>
          <given-names>Charlotte</given-names>
        </name>
        <address>
          <email>charlotte.soneson@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5266-4675</contrib-id>
        <name>
          <surname>Bendel</surname>
          <given-names>Alexandra M.</given-names>
        </name>
        <address>
          <email>alexandra.bendel@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-9153-4523</contrib-id>
        <name>
          <surname>Diss</surname>
          <given-names>Guillaume</given-names>
        </name>
        <address>
          <email>guillaume.diss@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-2269-4934</contrib-id>
        <name>
          <surname>Stadler</surname>
          <given-names>Michael B.</given-names>
        </name>
        <address>
          <email>michael.stadler@fmi.ch</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.482245.d</institution-id><institution-id institution-id-type="ISNI">0000 0001 2110 3787</institution-id><institution>Friedrich Miescher Institute for Biomedical Research, </institution></institution-wrap>Basel, Switzerland </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.419765.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2223 3006</institution-id><institution>SIB Swiss Institute of Bioinformatics, </institution></institution-wrap>Basel, Switzerland </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.6612.3</institution-id><institution-id institution-id-type="ISNI">0000 0004 1937 0642</institution-id><institution>University of Basel, </institution></institution-wrap>Basel, Switzerland </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>1</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>1</day>
      <month>6</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>132</elocation-id>
    <history>
      <date date-type="received">
        <day>27</day>
        <month>10</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Multiplexed assays of variant effect (MAVE) experimentally measure the effect of large numbers of sequence variants by selective enrichment of sequences with desirable properties followed by quantification by sequencing. <italic>mutscan</italic> is an R package for flexible analysis of such experiments, covering the entire workflow from raw reads up to statistical analysis and visualization. The core components are implemented in C++ for efficiency. Various experimental designs are supported, including single or paired reads with optional unique molecular identifiers. To find variants with changed relative abundance, <italic>mutscan</italic> employs established statistical models provided in the <italic>edgeR</italic> and <italic>limma</italic> packages. <italic>mutscan</italic> is available from <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan">https://github.com/fmicompbio/mutscan</ext-link>.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02967-0.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Deep mutational scanning</kwd>
      <kwd>Multiplexed assays of variant effect</kwd>
      <kwd>R package</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001711</institution-id>
            <institution>Schweizerischer Nationalfonds zur Förderung der Wissenschaftlichen Forschung</institution>
          </institution-wrap>
        </funding-source>
        <award-id>197593</award-id>
        <principal-award-recipient>
          <name>
            <surname>Diss</surname>
            <given-names>Guillaume</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Novartis Research Foundation</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">A major question in biology is that of how sequence and function are related. The advances made in modern sequencing technology have resulted in an exponential increase in whole-genome and exome sequencing data over the past few decades and genome-wide association studies (GWAS) have found statistical associations between certain genetic variants and phenotypes or diseases [<xref ref-type="bibr" rid="CR1">1</xref>]. However, the phenotypic consequences of a large fraction of variants identified in the human genome remain elusive [<xref ref-type="bibr" rid="CR2">2</xref>], which is why these variants have been termed variants of uncertain significance (VUS). For example, 41.8% of variants currently listed in ClinVar are characterized as VUS [<xref ref-type="bibr" rid="CR3">3</xref>]. Therefore, a pressing objective has been to find ways to annotate these variants in an efficient way.</p>
    <p id="Par3">Over the past decades, multiplexed assays of variant effect (MAVE) have revolutionized the study of sequence-function relationships by enabling the simultaneous assessment of the functional consequences of thousands of sequence variants on a given phenotype. For example, a large library of variants is created by mutating a sequence of interest (deep mutational scanning (DMS)), and this library is exposed to a pooled selective assay which results in an enrichment of variants with high activity in the given assay and a depletion of variants with low activity [<xref ref-type="bibr" rid="CR4">4</xref>]. The frequency of each variant before and after selection can be quantified using high-throughput sequencing (Fig. <xref rid="Fig1" ref-type="fig">1</xref>A). Variant counts can be obtained by either sequencing the variants directly or using molecular barcodes that uniquely identify each variant. The latter can reduce sequencing costs and increase read quality [<xref ref-type="bibr" rid="CR5">5</xref>]. Enrichment scores calculated from the variant frequencies can be used to infer molecular function and thus the functional effect of a mutation relative to the wild-type sequence [<xref ref-type="bibr" rid="CR4">4</xref>]. The variety of experimental designs that can be used in MAVE emphasizes the value of these assays and their flexibility in addressing diverse biological questions. They have been used to examine activities of proteins, such as protein–protein interaction (PPI) [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR8">8</xref>], E3 ubiquitin ligase activity [<xref ref-type="bibr" rid="CR8">8</xref>], protein abundance [<xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR9">9</xref>], receptor binding [<xref ref-type="bibr" rid="CR10">10</xref>], aggregation [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], and activity within signaling pathways [<xref ref-type="bibr" rid="CR13">13</xref>]. The functional assays used to achieve enrichment or depletion of variants are equally diverse and include for example fitness or cell growth [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR7">7</xref>, <xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>], different reporter assays coupled with fluorescence-activated cell sorting (FACS) [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>], and protein display [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR15">15</xref>].<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of the main functionality of <italic>mutscan</italic>. <bold>A</bold> Multiplexed assays of variant effect experiments are based on the enrichment and depletion of protein variants in an assay that selects for a desired activity of the given variants. Enrichment and depletion are quantified using high-throughput sequencing. <bold>B</bold> The <italic>digestFastqs()</italic> function processes the FASTQ file(s) for each sample independently and encompasses filtering of low-quality reads and reads with more than the allowed number of mutations, extraction of read components, and aggregation into a vector of counts for variants of interest. <bold>C</bold> The output objects from <italic>digestFastqs()</italic> are then combined into a joint <italic>SummarizedExperiment</italic> object which is in turn provided to downstream functions in <italic>mutscan</italic>, or one of the many other R packages based on <italic>SummarizedExperiment</italic> objects, for statistical analysis and plotting. For more details about the individual steps, see the main text</p></caption><graphic xlink:href="13059_2023_2967_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par4">The growth of the field has been further driven by the decreasing cost of sequencing and the simplified construction of large libraries thanks to the commercial large-scale synthesis of DNA oligonucleotides [<xref ref-type="bibr" rid="CR16">16</xref>]. New technical developments that allow the synthesis of large libraries of entire synthetic genes will probably result in even larger libraries [<xref ref-type="bibr" rid="CR17">17</xref>]. Recently, a database was launched with the aim to collect the rich data gathered from MAVE assays in a central place with a unified structure to make it accessible to the scientific community [<xref ref-type="bibr" rid="CR18">18</xref>]. This, however, also calls for streamlined and more standardized analysis methods, including rigorous statistical analysis that considers the possible sources of error in MAVE experiments and therefore allows to make confident statements about the true functional consequences of variants. Several tools have been published to address this demand (Table <xref rid="Tab1" ref-type="table">1</xref>), the most elaborate and widely used among these are <italic>Enrich2</italic> [<xref ref-type="bibr" rid="CR19">19</xref>] and <italic>DiMSum</italic> [<xref ref-type="bibr" rid="CR20">20</xref>].<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of different tools for the analysis of MAVE data. In our evaluations, we compare <italic>mutscan</italic> to <italic>DiMSum</italic> and <italic>Enrich2</italic>, as these are widely used in the field, and align with <italic>mutscan</italic> in terms of their scope and aim</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"><bold>Aspect</bold></th><th align="left"><bold><italic>mutscan</italic></bold></th><th align="left"><bold><italic>DiMSum</italic></bold> [<xref ref-type="bibr" rid="CR20">20</xref>]</th><th align="left"><bold><italic>Enrich2</italic></bold> [<xref ref-type="bibr" rid="CR19">19</xref>]</th></tr></thead><tbody><tr><td align="left">OS availability</td><td align="left">All</td><td align="left">Unix-like</td><td align="left">All (requires Python 2.7, end of life since January 1, 2020)</td></tr><tr><td align="left">External dependencies (in addition to R/Python packages)</td><td align="left">None</td><td align="left">FastQC [<xref ref-type="bibr" rid="CR21">21</xref>], cutadapt [<xref ref-type="bibr" rid="CR22">22</xref>], VSEARCH [<xref ref-type="bibr" rid="CR23">23</xref>], starcode [<xref ref-type="bibr" rid="CR24">24</xref>]</td><td align="left">None</td></tr><tr><td align="left">Diagnostic report</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">Yes (autogenerated plots)</td></tr><tr><td align="left">Parallelizable</td><td align="left">Yes</td><td align="left">Yes</td><td align="left">No</td></tr><tr><td align="left">Supported library design</td><td align="left">Single-end, paired-end</td><td align="left">Single-end, paired-end</td><td align="left">Single-end, paired-end</td></tr><tr><td align="left">Statistical test specification</td><td align="left">Any fixed effect model (formula)</td><td align="left">No test. Calculates an enrichment score and error, limited to 9 replicates</td><td align="left">One score per replicate, combined using a mixed-effects model</td></tr><tr><td align="left">Modularity</td><td align="left">Samples are processed independently. Modularity between workflow steps</td><td align="left">The entire experiment is processed together. Modularity between workflow steps if intermediate files are retained</td><td align="left">The entire experiment is processed together. Intermediate results are reused if present</td></tr><tr><td align="left">Installation package</td><td align="left">R package</td><td align="left">Bioconda package</td><td align="left">None</td></tr><tr><td align="left">Enrichment scores</td><td align="left">Absolute and relative</td><td align="left">Relative</td><td align="left">Absolute and relative</td></tr><tr><td align="left">Use of barcodes or variant sequence</td><td align="left">Both</td><td align="left">Both</td><td align="left">Both</td></tr><tr><td align="left">Alignment strategy</td><td align="left">Tree-based string matching (Hamming or Levenshtein distance)</td><td align="left">Clustering (Levenshtein distance, using starcode [<xref ref-type="bibr" rid="CR24">24</xref>])</td><td align="left">String matching or gapped alignment (Needleman-Wunsch)</td></tr><tr><td align="left">UMIs</td><td align="left">Yes</td><td align="left">No</td><td align="left">No</td></tr><tr><td align="left">Filtering options</td><td align="left">Read length consistency, forbidden codons, base quality, nbr mismatches in constant sequence, nbr mutated bases/codons, nbr N bases</td><td align="left">Minimal read length, base quality, expected errors, nbr mutated bases/amino acids, min nbr reads, invalid overlap, forbidden substitution, mutation type</td><td align="left">Base quality, min nbr reads, nbr mutations, nbr N bases, invalid overlap</td></tr><tr><td align="left">Multiple amplicons</td><td align="left">Yes</td><td align="left">No</td><td align="left">No</td></tr></tbody></table></table-wrap></p>
    <p id="Par5">Here, we present <italic>mutscan</italic>, a novel R package that provides a unified, flexible interface to the analysis of MAVE experiments, covering the entire workflow from FASTQ files to count tables and statistical analysis and visualization. The core read processing module is implemented in C++ , which enables the analysis of large sequencing experiments within reasonable time and memory constraints. <italic>mutscan</italic> is easy to install and use, has a flexible interface that encompasses a broad range of experimental designs, and employs established statistical testing frameworks developed for count data. We apply <italic>mutscan</italic>, as well as <italic>Enrich2</italic> and <italic>DiMSum</italic>, to several experimental MAVE data sets and show that while estimated counts and enrichment scores are often highly concordant between methods, <italic>mutscan</italic> is generally able to process the data faster, with lower memory requirements, and more efficient use of multi-core processing. Given the variety of MAVE experimental designs, the ever-increasing scale of MAVE experiments, and the democratization of the field, we believe that its flexibility, efficiency, and ease of access will make <italic>mutscan</italic> an important addition to the MAVE analysis tool ecosystem.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Example data sets</title>
      <p id="Par6">The results presented below are obtained by applying <italic>mutscan</italic> and other tools (Table <xref rid="Tab1" ref-type="table">1</xref>) to four deep mutational scanning data sets (Table <xref rid="Tab2" ref-type="table">2</xref>). These data sets represent a variety of typical MAVE experimental designs and have been previously used for evaluation purposes [<xref ref-type="bibr" rid="CR20">20</xref>].<table-wrap id="Tab2"><label>Table 2</label><caption><p>Overview of deep mutational scanning data sets used in this study</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Data set</th><th align="left">Number of replicates</th><th align="left">Library type</th><th align="left">Molecule</th><th align="left">Activity measured</th><th align="left">Total number of reads (Mio.)</th></tr></thead><tbody><tr><td align="left">Diss_FOS [<xref ref-type="bibr" rid="CR6">6</xref>]</td><td align="left">3</td><td align="left">Individual locus</td><td align="left">Protein</td><td align="left">PPI</td><td align="left">262.4</td></tr><tr><td align="left">Diss_FOS_JUN [<xref ref-type="bibr" rid="CR6">6</xref>]</td><td align="left">3</td><td align="left">Two paired loci</td><td align="left">Protein</td><td align="left">PPI</td><td align="left">245.7</td></tr><tr><td align="left">Bolognesi_TDP43_290_331 [<xref ref-type="bibr" rid="CR11">11</xref>]</td><td align="left">3</td><td align="left">Individual locus</td><td align="left">Protein</td><td align="left">Aggregation</td><td align="left">180.0</td></tr><tr><td align="left">Li_tRNA_sel30 [<xref ref-type="bibr" rid="CR25">25</xref>]</td><td align="left">5</td><td align="left">Individual locus</td><td align="left">RNA</td><td align="left">Fitness</td><td align="left">511.4 (1685.7<sup>a</sup>)</td></tr></tbody></table><table-wrap-foot><p><sup>a</sup>In the Li_tRNA_sel30 data set, a single-input replicate is paired with multiple output replicates. While the modular design of <italic>mutscan</italic> allows to process this shared input replicate just once, <italic>DiMSum</italic> (with the design used here, in agreement with [<xref ref-type="bibr" rid="CR20">20</xref>]) requires it to be processed repeatedly, once for each selected replicate, which increases the number of processed read pairs from 511.4 to 1685.7 Mio</p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec4">
      <title>Overview of the mutscan workflow</title>
      <p id="Par7"><italic>mutscan</italic> is implemented as an R package, with core processing modules written in C++ for efficiency. Figure <xref rid="Fig1" ref-type="fig">1</xref>B, C provides an overview of the full analysis workflow (for more details about the individual steps, see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). The first part of the workflow processes each sequencing library independently. Hence, additional samples can easily be added to an experiment without the need to re-process the existing samples. In this step, reads that do not adhere to the user specifications (e.g., too low base quality, too many or forbidden mutations compared to a provided wild-type sequence) are filtered out, and the remaining ones are used to tabulate the number of reads (or unique UMI sequences, if applicable) corresponding to each observed sequence variant. For increased processing speed, this step can be parallelized. In the second part, the output from all samples in the experiment is combined into a joint <italic>SummarizedExperiment</italic> object [<xref ref-type="bibr" rid="CR26">26</xref>], containing the merged count matrix, a summary of the filtering applied to each individual sample, and additional information about the detected variants, such as the nucleotide and amino acid sequence; the number of mutated bases, codons, and amino acids; and the type of mutations (silent, non-synonymous, stop). Finally, the merged object can be used as the input to functions generating diagnostic plots and reports, as well as statistical analysis functions that estimate log-fold changes and find variants that are increasing or decreasing significantly in abundance during the selection process. Since the data is represented as a <italic>SummarizedExperiment</italic> object, it can also be directly used as input to a wide range of analysis and visualization tools from the Bioconductor ecosystem [<xref ref-type="bibr" rid="CR27">27</xref>].</p>
    </sec>
    <sec id="Sec5">
      <title>Case study: evaluating interaction strength between FOS and JUN variants</title>
      <p id="Par8">To illustrate the practical use of <italic>mutscan</italic>, we reprocess the “trans” data set from [<xref ref-type="bibr" rid="CR6">6</xref>]. Here, libraries of single amino acid mutants of FOS and JUN’s basic leucine zipper domains were constructed by oligonucleotide replacing each codon by one of the 32 codons ending with a C or a G (encoded by NNS in the IUPAC code [<xref ref-type="bibr" rid="CR28">28</xref>]). The two libraries were then cloned together on the same plasmid to measure the effects of combining one mutation on each partner on the protein–protein interaction (PPI) between FOS and JUN. The interaction was scored by deepPCA [<xref ref-type="bibr" rid="CR6">6</xref>], which couples protein–protein interaction to the growth rate in a typical MAVE setting. A rendered report detailing the full analysis can be found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>. The data set contains three replicates, each with an input and an output sequencing library (before/after the selection assay, respectively). As indicated above, we start by processing each of the six FASTQ files separately with the <italic>digestFastqs()</italic> function from <italic>mutscan</italic>. This step extracts the sequences of the variable regions corresponding to the FOS and JUN variants from the paired reads, compares them to the provided wild-type sequences and identifies the differences, and tabulates the number of reads and unique UMIs for each identified variant combination. Since the variable regions of the forward and reverse reads correspond to variants of different proteins encoded at two different loci and do not share any common sequence, we instruct <italic>digestFastqs()</italic> to process them separately rather than attempting to merge them. This also allows us to submit separate wild-type sequences for the variable regions in the forward and reverse reads. We retain only reads with at most one mutated codon in each of the two proteins.</p>
      <p id="Par9">The output of this initial processing step is a list for each sample, containing a count table, a filtering summary, and a record of the parameters that were used (Fig. <xref rid="Fig1" ref-type="fig">1</xref>B). While these objects can be explored as they are, it is more convenient to merge them into a joint <italic>SummarizedExperiment</italic> [<xref ref-type="bibr" rid="CR26">26</xref>] object for downstream analysis (Fig. <xref rid="Fig1" ref-type="fig">1</xref>C), which is done via the <italic>summarizeExperiment()</italic> function in <italic>mutscan</italic>. The resulting object contains a matrix with the UMI counts for all variants in all six samples, as well as a summary of the number of reads filtered out at each step, and any metadata provided for the samples (replicate ID, condition, optical density, etc.), and feeds directly into the diagnostic plot and statistical analysis functions in <italic>mutscan</italic>, including <italic>plotPairs()</italic> and <italic>plotFiltering()</italic>, the outputs of which are shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>. We observe that, as expected, we find more unique variants with multiple base mutations, but the observed abundance of individual variants with multiple mutations is markedly lower than for variants with no or a single mutated base (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A, B). Using <italic>mutscan</italic> to visualize the filtering process further illustrates that across all samples, the main reasons for read pairs being filtered out are that they contain an adapter or that they contain more than the allowed number of mutated codons (Fig. <xref rid="Fig2" ref-type="fig">2</xref>C, D).<fig id="Fig2"><label>Fig. 2</label><caption><p>Results from the <italic>mutscan</italic> re-analysis of the FOS/JUN protein interaction data set from [<xref ref-type="bibr" rid="CR6">6</xref>]. <bold>A</bold> The number of variants detected with different numbers of mutated bases. <bold>B</bold> The average abundance of variants with different numbers of mutated bases. While a larger number of different variants with two or more mutations are observed, these are generally much less abundant than variants with no or a single mutated base. <bold>C</bold>, <bold>D</bold> Diagnostic plots of read filtering performed by <italic>digestFastqs()</italic>. In this data set, the main reasons for filtering out read pairs are that they either contain an adapter sequence or that the number of mutated codons exceeds the defined threshold of maximum one mutated codon per protein. <bold>E</bold> Pairs plot displaying the concordance of the observed counts across the six samples. Generally, high correlations are observed between the three input samples as well as between the three output samples, indicating good robustness of the measurements. The correlation between the input and output samples is considerably lower, reflecting the impact of the selection. <bold>F</bold> Heatmap showing the estimated protein–protein interaction score for all single-amino acid variants of each of the two proteins. Red color indicates an increased interaction, while blue signifies decreased interaction</p></caption><graphic xlink:href="13059_2023_2967_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par10">Next, we use <italic>mutscan</italic> to investigate the concordance among the six samples, by plotting the estimated variant counts (Fig. <xref rid="Fig2" ref-type="fig">2</xref>E). As expected, the correlation within each type of sample (input/output) is considerably higher than the correlation between input and output samples, indicating that the selection step indeed influences the sample composition.</p>
      <p id="Par11">After the initial quality assessment, we use <italic>mutscan</italic> to summarize the counts for variants with the same amino acid sequence. From this matrix, we then estimate a protein–protein interaction score for each variant and replicate, indicating the effect of the variant relative to the wild-type sequence as described by [<xref ref-type="bibr" rid="CR6">6</xref>]. Focusing only on variants with a mutated amino acid in either FOS or JUN (but not both), we can generate a heatmap summarizing the impact of each single amino acid mutation on the overall interaction score (Fig. <xref rid="Fig2" ref-type="fig">2</xref>F). These heatmaps serve as the basis for interpreting the mechanisms by which mutations impact the molecular activity studied. For instance, as was observed in the original paper [<xref ref-type="bibr" rid="CR6">6</xref>] for this data set, positions crucial for heterodimerization are highly sensitive to mutations. Any substitution of the leucine at positions 4, 11, 18, and 25, which form the hydrophobic core of the interaction interface, is detrimental. Positions involved in salt bridge formation across the interface, for instance, between position 21 in Fos and position 26 in Jun, are also typically detrimental for heterodimer formation, although the magnitude of the effect is lower than at core positions. The heatmap can also reveal positions where the wild-type appears sub-optimal, such as position 8 in Fos where substitution of the hydrophilic wild-type threonine by more hydrophobic amino acids leads to an increase in interaction score, as one would expect for a position at the hydrophobic core of the interface. The presence of this sub-optimal residue in the wild-type sequence might thus result from an evolutionary trade-off with other properties of Fos, such as interaction with other partners.</p>
    </sec>
    <sec id="Sec6">
      <title>mutscan enables processing flexibility</title>
      <p id="Par12">The <italic>digestFastq()</italic> function in <italic>mutscan</italic>, which performs the initial processing of each individual library, is designed to provide flexibility in the sample processing, thereby enabling the analysis of a wide range of library designs, not limited to MAVE experiments. Here, we highlight some of the main features.<list list-type="bullet"><list-item><p id="Par13"><italic>Processing of single- or paired-end reads with arbitrary composition of basic elements</italic>: <italic>mutscan</italic> accepts FASTQ files from both single-end and paired-end experiments. In addition, a vector of (pairs of) FASTQ files can be provided, and these will be internally concatenated. If some part of the variable regions of the forward and reverse reads is shared, e.g., if they correspond to overlapping parts of the same protein, the reads in a pair can be merged before further processing. The size of the overlap can be anywhere between a single base and the length of the whole read, and restrictions on what constitutes a valid overlap can be specified by the user. For each read, the user further specifies the sequence composition in terms of five element types (see Box 1): variable regions (typically the sequences of interest), constant regions, skipped regions, primers, and UMIs. Each read can contain multiple (adjacent or nonadjacent) regions of each element type except primers, and the lengths of the regions can be defined by the user or automatically inferred by <italic>mutscan</italic>. This design provides an intuitive interface for the user and implies that many different types of experiments can be analyzed within the same framework. Moreover, processing parameters and read compositions are specified separately for the forward and reverse reads, which allows direct processing of constructs with multiple variable regions, e.g., corresponding to different proteins.</p></list-item><list-item><p id="Par14"><italic>Sequence-based analysis or comparison (or collapsing) to one or more wild-type sequences</italic>: <italic>mutscan</italic> allows the optional specification of one or more wild-type sequences, against which the extracted variable regions will be compared. If more than one wild-type sequence is provided, <italic>mutscan</italic> will find the most similar one for each read, and match the read against that. The variant identifiers used by <italic>mutscan</italic> consist of the name of the most similar wild-type sequence, augmented with the observed deviation(s). For example, an identifier of the form GENEX.10. A indicates that the closest wild-type sequence was that of GENEX, and the observed read deviated from this wild-type sequence in that the tenth base was an A, rather than the reference base. It is also possible to collapse all variants to their closest reference sequence, if the mutations are not of interest. If no wild-type sequence is provided, <italic>mutscan</italic> represents each identified variant by its actual nucleotide sequence.</p></list-item><list-item><p id="Par15"><italic>Codon- or nucleotide-based analysis</italic>: <italic>mutscan</italic> allows the processing of both coding and non-coding sequences. If wild-type sequences are provided, the user can choose to limit either the number of mutated bases or the number of distinct mutated codons that are allowed in the identified variants. This choice will further impact the naming of the variants (in terms of the codon or nucleotide deviations from the closest wild-type sequence).</p></list-item><list-item><p id="Par16"><italic>Collapsing of similar sequences</italic>: If no wild-type sequences are provided, the user has the option to collapse variants (unique variable sequences) with at most a given number of mutations between them. The collapsing is done in a greedy way, starting from the most abundant variant, and can be limited to only collapsing variants with a large enough abundance ratio.</p></list-item><list-item><p id="Par17"><italic>Processing only a subset of the reads</italic>: For testing purposes, it is often useful to process only a small subset of the reads. <italic>mutscan</italic> allows the user to limit the processing to the first N reads in the FASTQ file, where N is specified by the user.</p></list-item><list-item><p id="Par18"><italic>Various filtering criteria</italic>: <italic>mutscan</italic> implements a range of filtering criteria, including the number of “N” bases in the variable and/or UMI sequence, the number of mutations in the constant and/or variable sequence (if a reference sequence is provided), the base quality of the identified mutations and/or the average base quality in the read, the presence of forbidden codons (specified using IUPAC code), or the invalid overlap between forward and reverse reads for merging. The output object contains a table listing the number of reads filtered out by each of the criteria.</p></list-item><list-item><p id="Par19"><italic>Export of excluded reads (with a reason for exclusion) to FASTQ files for further investigation</italic>: In cases where reads are filtered out for any of the reasons listed above, it may be helpful to be able to process these further. <italic>mutscan</italic> can write reads that are filtered out to a (pair of) FASTQ file(s), including the reason for exclusion in the read identifier.</p></list-item><list-item><p id="Par20"><italic>Estimation of sequencing error rate</italic>: If the input reads contain a constant region, <italic>mutscan</italic> estimates the sequencing error rate by counting the number of mismatches compared to the expected sequence across the reads. The error rate is further stratified by the base quality reported in the FASTQ file.</p></list-item><list-item><p id="Par21"><italic>Nucleotide- or amino acid-based analysis</italic>: The main output from <italic>digestFastqs()</italic> is represented in base or codon space. However, the corresponding amino acid information is recorded, and the count matrix can easily be collapsed on the amino acid level. In addition, <italic>mutscan</italic> reports the type of mutations (silent, non-synonymous, stop) present in each variant.</p></list-item><list-item><p id="Par22"><italic>Flexible analysis frameworks</italic>: The statistical testing module in <italic>mutscan</italic> is based on established packages for the analysis of digital gene expression data (<italic>edgeR</italic> [<xref ref-type="bibr" rid="CR29">29</xref>] and <italic>limma-voom</italic> [<xref ref-type="bibr" rid="CR30">30</xref>]). Both tools allow the user to specify an arbitrary (fixed-effect) design and thus provides excellent flexibility for testing complex hypotheses, not limited to paired comparisons of input and output samples. Moreover, several different normalizations are available, allowing calculation of both “absolute” and “relative” log-fold changes (e.g., changes relative to a wild-type reference).</p></list-item></list></p>
    </sec>
    <sec id="Sec7">
      <boxed-text>
        <label>Box 1 Read components</label>
        <p id="Par23"><italic>mutscan</italic> requires the user to specify the composition of the input read(s) in terms of the following five component types:</p>
        <p id="Par24">- Variable regions (V): these are typically the regions of interest. If one or more wild-type sequences are provided, the variable regions will be compared to those to identify variants. If no wild-type sequences are provided, the sequence of the variable region will be used to represent the variant</p>
        <p id="Par25">- Constant regions (C): these regions are used to estimate the sequencing error rates. Reads can also be filtered out if they have too many mutations in the constant region</p>
        <p id="Par26">- Skipped regions (S): these regions will be ignored in the processing</p>
        <p id="Par27">- Primers (P): a primer sequence differs from a constant region by the fact that it is not required to occur in a pre-defined position in the read. Instead, <italic>mutscan</italic> will search the read for a perfect match for the primer sequence</p>
        <p id="Par28">- UMIs (U): these sequences will be used to correct PCR amplification biases. If present, the output count table will contain, for each variant, both the number of reads and the number of unique associated UMIs</p>
        <p id="Par29">For example, an experiment where the reads have the following composition:</p>
        <p id="Par30">
          <bold>[1 skipped nt] − [10 nt UMI] − [18 nt constant sequence] − [96 nt variable region]</bold>
        </p>
        <p id="Par31">would be specified to <italic>digestFastqs()</italic> by an element string “SUCV” and an element length vector c(1, 10, 18, 96)</p>
        <p id="Par32">For a library design with a primer sequence, the primer acts as an “anchor,” and the read composition before and after the primer is specified. For example, reads with the following composition:</p>
        <p id="Par33">
          <bold>[unknown sequence] − [10 nt primer] − [variable region, constituting the remainder of the read]</bold>
        </p>
        <p id="Par34">would be represented by an element string “SPV” and an element length vector c(<bold>-</bold>1, 10, -1), where the -1 indicates that the corresponding read part consists of the remaining part of the read, not accounted for by any of the other specified parts</p>
      </boxed-text>
    </sec>
    <sec id="Sec8">
      <title>mutscan controls the type I error</title>
      <p id="Par35">To evaluate whether the statistical approaches employed by <italic>mutscan</italic> are able to control the type I error rate at the expected level, we designed a null comparison for each of the example data sets. Briefly, we assigned approximately half of the replicates to group “A,” and the rest of the replicates to group “B,” and tested, for each variant, whether the output/input count ratio was different between the two artificial groups. The procedure was repeated for all possible assignments of the replicates to two approximately equally sized groups. Overall, the nominal <italic>p</italic>-value distributions from <italic>mutscan</italic>, using either <italic>edgeR</italic> and <italic>limma</italic> as the inference engine, were largely uniform, indicating that the tests are well calibrated (Fig. <xref rid="Fig3" ref-type="fig">3</xref>).<fig id="Fig3"><label>Fig. 3</label><caption><p><italic>mutscan p</italic>-value distributions for null comparisons. For each data set, repeated null data sets were generated by artificially splitting the replicates into two approximately equally sized groups. For each such artificial null data set, <italic>mutscan</italic> (with the method set to <italic>edgeR</italic> and <italic>limma</italic>, respectively) was used to fit a model and test whether the log-fold change between input and output samples differed significantly between the two artificial groups. The colored densities represent the individual data splits, while the dark gray density represents the union of <italic>p</italic>-values from all data splits. Since the groupings are artificial, uniform <italic>p</italic>-value distributions are expected. While technical differences among the samples, and the low sample size in general, imply that not all comparisons provide exactly uniform <italic>p</italic>-value distributions, we do not observe a systematic bias in the <italic>p</italic>-values from <italic>mutscan</italic>. Only variants with more than 50 counts in all input samples were considered for this analysis. The number of retained features is indicated in each panel</p></caption><graphic xlink:href="13059_2023_2967_Fig3_HTML" id="MO3"/></fig></p>
    </sec>
    <sec id="Sec9">
      <title>mutscan is computationally efficient</title>
      <p id="Par36">In order to evaluate the computational efficiency of <italic>mutscan</italic> (v0.2.31), we applied it to the four example data sets and used the benchmarking capabilities of <italic>snakemake</italic> [<xref ref-type="bibr" rid="CR31">31</xref>] to track CPU and memory usage as well as the volume of data input and output. We also ran <italic>DiMSum</italic> v1.2.11 (on all data sets) and <italic>Enrich2</italic> v1.3.1 (for the Diss_FOS data set only, due to the long execution time), attempting to set the parameters of the different tools in such a way that the similarity between the performed analyses would be maximized (see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). We evaluated the entire process, from raw FASTQ files to output tables and additionally included the generation of the summary report where applicable.</p>
      <p id="Par37">For all data sets, the total execution time for <italic>mutscan</italic> was lower than for <italic>DiMSum</italic> (Fig. <xref rid="Fig4" ref-type="fig">4</xref>), and both of these finished in less time than <italic>Enrich2</italic>. The distribution of time spent in the different stages varied across data sets as the processing time for individual samples is largely determined by the number of reads, while the time required to perform statistical tests and generate plots for quality assessment is rather dependent on the number of identified and retained variants. The same effect is seen for the memory consumption. Only a small amount of memory is required for the initial sample processing by <italic>mutscan</italic>, while the memory required for the later analysis and statistical testing depends on the number of retained variants, and thus, the size of the count matrix that needs to be loaded into the R session for processing. We also note that, apart from reading the FASTQ files, the total volume of input and output data for <italic>mutscan</italic> is very low, as the whole sample processing is performed by a single function that traverses the input files only once and without the need to create intermediate files on disk for transfer of data between different software tools. The total runtime of <italic>DiMSum</italic>, which is reading and writing much larger volumes of data to disk, also likely depends more strongly on the performance of the storage system. Another consequence of <italic>mutscan</italic>’s design is that a larger fraction of the time is spent on actions that are parallelizable, which can be seen by its higher average CPU load (400–600% for <italic>mutscan</italic> when run with 10 cores, compared with 100–200% for <italic>DiMSum</italic> with 10 cores). <italic>Enrich2</italic> is not parallelizable and thus exhibits a constant load of 100%.<fig id="Fig4"><label>Fig. 4</label><caption><p>Comparison of computational performance metrics for <italic>mutscan</italic>, <italic>Enrich2</italic>, and <italic>DiMSum</italic>. Generally, <italic>mutscan</italic> processes the included data sets faster and with a lower memory footprint than competing methods. In addition, only small amounts of data are being read from and written to disk during the processing. The <italic>digestFastqs()</italic> metrics for the Li_tRNA_sel30 data set are averaged across the five runs on the single input sample, since only one run is required for <italic>mutscan</italic>. Total I/O volumes are separated in input and output, indicated above by I and O, respectively. RSS, resident set size</p></caption><graphic xlink:href="13059_2023_2967_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par38">While the evaluations mentioned above were all run with 10 cores, we also investigated how the key performance parameters scaled with the number of cores provided to <italic>mutscan</italic> when running the <italic>digestFastqs()</italic> function on a single pair of FASTQ files (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S1). The results suggest that while the average load increases linearly with an increasing number of cores, indicating good scalability of the parallel parts of the code, the benefit in terms of decreased total execution time is significantly reduced when more than 10 cores are used. This is likely explained by the constant runtime consumed by the serial parts in the code. In addition, for a fixed number of cores, the raw data processing performed by <italic>digestFastqs()</italic> scales linearly with the number of input reads in terms of execution time and close to linearly in terms of memory requirement (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S2).</p>
    </sec>
    <sec id="Sec10">
      <title>mutscan counts and log-fold changes are comparable to those from Enrich2 and DiMSum</title>
      <p id="Par39">In order to further compare the return values of <italic>mutscan</italic> to those obtained from <italic>DiMSum</italic> and <italic>Enrich2</italic>, we contrasted the sets of variants identified by the different tools. In addition, we chose a representative sample for each of the data sets and contrasted the estimated counts for all variants identified by at least one tool (Fig. <xref rid="Fig5" ref-type="fig">5</xref>, Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S3-S10). As previously described, we attempted to set the parameters of each tool in such a way as to maximize the similarity between the analysis workflows (see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). In general, most variants with up to two mutations (bases or amino acids, depending on the data set) were detected by all methods (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S3, S5, S7, S9). The variants that were found with only one of the tools also generally had a lower abundance than the variants found consistently with all tools.<fig id="Fig5"><label>Fig. 5</label><caption><p>Comparison of counts estimated by <italic>mutscan</italic>, <italic>DiMSum</italic>, and <italic>Enrich2</italic>. For each data set, a representative sample is shown (indicated in the respective figure titles, together with the data set). In general, the counts estimated by the three methods show a high correlation, and deviations are likely explained by differences in aspects such as how the set of allowed or forbidden mutations is specified, how the filtering of low-quality sequences is implemented, and whether mismatches or partial matches are allowed in the specified primer sequence</p></caption><graphic xlink:href="13059_2023_2967_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par40">Also, when comparing the estimated counts for the variants between the tools, we noticed a high degree of similarity, but also data set-specific differences. For the Diss_FOS_JUN data set, we hypothesize that one reason for the generally higher counts observed with <italic>DiMSum</italic> than with <italic>mutscan</italic> is the different way in which the allowed codon mutations are specified. More precisely, with <italic>mutscan</italic> we are defining the format of any forbidden mutated codon (in our case, IUPAC code “NNW”). <italic>DiMSum</italic>, on the other hand, approaches this by specifying the allowed IUPAC code for each position in the entire variable sequence. Hence, with this setup, mutated codons that already end in a “T” or an “A” in the wild-type sequence will not disqualify the read from being included in the analysis. The shift from the diagonal line in the Bolognesi_TDP43_290_331 data set may be caused by the differences between approaches in <italic>mutscan</italic> and <italic>DiMSum</italic> for detecting the primer sequence immediately preceding the variable sequence. While <italic>DiMSum</italic> utilizes <italic>cutadapt</italic> to trim the unwanted sequence, <italic>mutscan</italic> requires a perfect match to the specified primer sequence whenever its position in the read is not fully specified.</p>
      <p id="Par41">Similarly to the sets of detected variants, the correlation between the estimated counts from the different tools also decreased as the number of mutations in the variant increased (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S4, S6, S8, S10).</p>
      <p id="Par42">Finally, we calculated enrichment scores using the three tools (Fig. <xref rid="Fig6" ref-type="fig">6</xref>). For <italic>mutscan</italic>, we evaluated both built-in frameworks, based on <italic>limma-voom</italic> and <italic>edgeR</italic>, respectively. The log-fold change of a variant relative to that of the wild-type (obtained by using the latter as a replacement for the library size in the offset/normalization steps of <italic>edgeR</italic>/<italic>limma</italic>) is used as an enrichment score for <italic>mutscan</italic> and compared to the returned enrichment score from <italic>DiMSum</italic> (called “fitness score” in <italic>DiMSum</italic>), and the average of the sample-wise scores from <italic>Enrich2</italic>. As for the variant counts, we see a strong correlation between the enrichment scores from the different methods. This corroborates findings from [<xref ref-type="bibr" rid="CR32">32</xref>], where <italic>DiMSum</italic>’s enrichment scores were found to be highly correlated with log-fold changes calculated using <italic>DESeq2</italic> [<xref ref-type="bibr" rid="CR33">33</xref>] on the same count matrix. As for the detected variants, the correlation between the enrichment scores is much stronger for variants with only a single mutation and decreases as the number of mutations increases (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S11-S14), possibly due to the lower absolute counts observed for variants with more mutations. It is worth noting that the data set with the lowest correlation among the enrichment scores (Bolognesi_TDP43_290_331) is also the one where the correlations between the <italic>DiMSum</italic> enrichment scores for the individual replicates are the lowest (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S15). Again, most of the discrepancies are contributed by variants with more mutated bases (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Fig. S13).<fig id="Fig6"><label>Fig. 6</label><caption><p>Comparison of enrichment scores estimated by <italic>mutscan</italic>, <italic>DiMSum</italic>, and <italic>Enrich2</italic>. For <italic>mutscan</italic>, the values are logFCs estimated by either <italic>edgeR</italic> or <italic>limma</italic>. For <italic>DiMSum</italic>, they correspond to the enrichment score derived from all replicates. For <italic>Enrich2</italic>, they are the averages of the scores for the replicates. The lower correlations seen in the Bolognesi_TDP43_290_331 data set, and to some extent, the Diss_FOS_JUN data set reflect the less stringent variant filtering criteria used in these data sets (up to 3 mutated bases for Bolognesi_TDP43_290_331 and up to two mutated codons for Diss_FOS_JUN, see the “<xref rid="Sec13" ref-type="sec">Methods</xref>” section). Considering only variants with fewer recorded mutations leads to higher correlations, more comparable to the Diss_FOS data set where only up to two mutated bases were allowed (Additional file <xref rid="MOESM2" ref-type="media">2</xref>: Figs. S11-S14)</p></caption><graphic xlink:href="13059_2023_2967_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec11">
    <title>Discussion</title>
    <p id="Par43">We are describing <italic>mutscan</italic>, a new package to process and analyze multiplexed assays of variant effect data. <italic>mutscan</italic> is an R package and does not depend on external software libraries beyond other R packages; thus, it is easy to install and use across all major operating systems. At the same time, it provides a high degree of interoperability with other tools, since the summarized data is represented in a <italic>SummarizedExperiment</italic> object, which can be directly used with a wide range of analysis and visualization functions within the Bioconductor ecosystem.</p>
    <p id="Par44">For many of the MAVE studies to date (including the ones used for evaluation in this study), the readout is the actual DNA sequence of the target protein(s) of interest. However, the field is increasingly moving towards instead sequencing unique barcodes associated with these variants, as this provides a way of better distinguishing true variants and sequencing errors, and also simplifies the analysis of longer protein sequences. <italic>mutscan</italic> supports also this type of experimental setup. If no reference sequence is provided, the variants (barcodes) will be represented by their sequence. Moreover, observed sequences can be collapsed if they are within a given distance, and have at least a pre-specified ratio of abundance in the sample. Current development work for <italic>mutscan</italic> includes streamlining the analysis workflow for large barcode sequencing experiments further, including the mapping of barcodes to true variants.</p>
  </sec>
  <sec id="Sec12">
    <title>Conclusions</title>
    <p id="Par45">We have described <italic>mutscan</italic>, a flexible, easy-to-use R package for processing and statistical analysis of multiplexed assays of variant effect data. <italic>mutscan</italic> is designed in a modular way and is directly applicable also to other types of data aimed at identifying and tabulating substitution variants compared to a provided reference sequence, or tabulating unique sequences directly, potentially after collapsing variants within a certain distance. By leveraging established tools for statistical analysis of count data, the analytical framework provides a high degree of flexibility to address a variety of practical questions.</p>
  </sec>
  <sec id="Sec13">
    <title>Methods</title>
    <p id="Par46">Figure <xref rid="Fig1" ref-type="fig">1</xref> provides an overview of the functionality implemented in <italic>mutscan</italic>. A typical workflow can often be summarized in three main steps: (1) processing of individual samples/sequencing libraries; (2) aggregation of the output from the individual samples into a single, combined object; and (3) analysis and visualization.</p>
    <sec id="Sec14">
      <title>Processing of individual samples</title>
      <p id="Par47">The individual sample processing starts from a FASTQ file with sequencing reads (or a pair of FASTQ files for a paired-end sequencing experiment). Multiple (pairs of) FASTQ files per sample are supported. The <italic>digestFastqs()</italic> function takes these FASTQ files as input and processes the reads to generate a variant count table. The first part of this analysis proceeds read by read and consists of the following steps:<list list-type="order"><list-item><p id="Par48">If applicable, search for user-specified adapter sequences and remove any read (pair) where these are detected.</p></list-item><list-item><p id="Par49">Split the read (pair) into components as specified by the user (see Box 1 for details); in particular, extract the constant and variable parts of the reads. In the process, filter out reads that are not compatible with the user-specified composition.</p></list-item><list-item><p id="Par50">Reverse complement the forward and/or reverse constant and variable sequences if requested.</p></list-item><list-item><p id="Par51">If requested, merge the forward and reverse variable sequences. The user can specify the minimum and maximum overlaps, the minimum and maximum lengths of the merged sequence, and the maximal fraction of allowed mismatches. If no valid overlap is found satisfying these criteria, the read pair is filtered out.</p></list-item><list-item><p id="Par52">Filter out reads where the average base quality in the variable sequence is below the user-specified threshold or where the number of Ns in the variable or UMI sequence exceeds an imposed threshold.</p></list-item><list-item><p id="Par53">If one or more wild-type/reference sequences are provided, compare the extracted variable region to these and find the closest match. If no wild-type sequence is found within an imposed mismatch limit, or if more than one wild-type sequence provides an equally good optimal match, the read (pair) is filtered out. Reads will also be filtered out if the base quality of the identified mutation(s) is below an imposed threshold, or if the mutated codon(s) matches a user-specified list of forbidden codons. Separate sets of wild-type sequences can be provided for the forward and reverse reads in a pair, if appropriate.</p></list-item><list-item><p id="Par54">Similarly, compare the extracted constant sequences to provided reference sequences, and filter out reads where the difference exceeds a given threshold, or where more than one reference sequence provides equally good optimal matching.</p></list-item><list-item><p id="Par55">If the read has not been filtered out in any of the steps above, store the observed sequence as well as an assigned “mutant name,” consisting of the name of the closest wild-type sequence together with the positions and sequences of the mutated nucleotides or codons. If no wild-type sequences are provided, the mutant name is the observed variable sequence.</p></list-item></list></p>
      <p id="Par56">The read processing is implemented in C++ for efficiency. Moreover, reads can be processed in parallel using OpenMP [<xref ref-type="bibr" rid="CR34">34</xref>] in order to speed up this first step of an analysis. <italic>mutscan</italic> also supports writing all reads that are filtered out, together with the reason for the exclusion, to a FASTQ file (pair) for potential further processing/troubleshooting.</p>
      <p id="Par57">After all reads have been processed individually and the final set of sequences to retain has been determined, <italic>mutscan</italic> supports additional post-processing steps. If no wild-type sequences are provided, reads that are within a certain Hamming distance of each other can be collapsed (the assumption is that these correspond to sequencing or PCR error variants). This step will collapse a lower-frequency read to a higher-frequency one if their similarity as well as the abundance of the most frequent sequence and the ratio of the two abundances exceed given thresholds. The read counts for the collapsed sequences are summed, and all individual sequences contributing to a collapsed feature are recorded. Similarly, if the reads contain UMI sequences, these can be collapsed within a given variable sequence to avoid over-counting UMIs because of sequencing errors.</p>
      <p id="Par58">The individual sample processing with <italic>digestFastqs()</italic> returns an output object with four components. The count table records all the observed variants, together with their abundances (number of reads and/or UMIs); the number of mutated bases, codons, and amino acids; and the set of observed sequences contributing to each variant. The filtering table summarizes the number of reads that were filtered out in each step outlined above. If a read is filtered out in one step, it will not be considered for the following ones. The output also contains a list of all argument values provided to <italic>digestFastqs()</italic>, as well as information about when the analysis was run, and with which version of <italic>mutscan</italic>. Finally, if one or more constant regions are included in the reads, <italic>mutscan</italic> tabulates the number of mismatches for each base quality and returns the table.</p>
    </sec>
    <sec id="Sec15">
      <title>Merging processed data from multiple samples</title>
      <p id="Par59">A typical MAVE experiment consists of input and output (post-selection) libraries from multiple replicates. The process outlined in the previous section generates a count vector for each of these samples. To perform downstream analyses, the count vectors from the individual samples are merged into a single <italic>SummarizedExperiment</italic> object by the <italic>summarizeExperiment()</italic> function. Variants not detected in specific samples are thereby assigned a count of 0. In addition to the counts, the <italic>summarizeExperiment</italic> function propagates the filtering summary and parameter settings, as well as user-provided metadata about the samples, and stores these for convenient access in the joint object.</p>
    </sec>
    <sec id="Sec16">
      <title>Statistical analysis and visualization</title>
      <p id="Par60">In order to find variants that either increase or decrease their relative abundance upon selection, potentially compared to a wild-type variant, <italic>mutscan</italic> employs the widely used and established statistical models provided in the <italic>edgeR</italic> [<xref ref-type="bibr" rid="CR29">29</xref>] and <italic>limma</italic> [<xref ref-type="bibr" rid="CR35">35</xref>] Bioconductor packages to perform statistical analysis, leveraging a large number of distinct variants for improved inference. Normalization factors can be calculated using either the TMM method [<xref ref-type="bibr" rid="CR36">36</xref>] (which generates sample-specific normalization factors) or the <italic>csaw</italic> package [<xref ref-type="bibr" rid="CR37">37</xref>] (which generates feature- and sample-specific normalization factors). Alternatively, if the user wishes to calculate abundance changes relative to those of one or more wild-type sequences, the sum or geometric mean of the counts of the latter can be used as offsets. Similar approaches were previously explored, and found to perform well, for the analysis of multiple parallel reporter assays [<xref ref-type="bibr" rid="CR38">38</xref>]. The user can further select whether to use the <italic>edgeR-QLF</italic> [<xref ref-type="bibr" rid="CR39">39</xref>] or the <italic>limma-voom</italic> [<xref ref-type="bibr" rid="CR30">30</xref>] framework to fit a (generalized) linear model to each feature. The log-fold changes returned by these models can be used as a proxy for a molecular activity for downstream interpretation. In addition, for growth rate-based experiments, <italic>mutscan</italic> can be used to estimate PPI scores as described by [<xref ref-type="bibr" rid="CR6">6</xref>].</p>
      <p id="Par61">In addition to the statistical analysis functionality, <italic>mutscan</italic> provides a variety of diagnostic plots, including a summary of the filtering steps, pairs plots displaying the correlations among samples, plots showing the distribution of abundances by sample, and static or interactive MA plots and volcano plots for easier interpretation of the statistical analysis results. It also provides a convenient wrapper function to generate a quality report in html format for an experiment.</p>
    </sec>
    <sec id="Sec17">
      <title>Comparison to Enrich2 and DiMSum</title>
      <p id="Par62">To benchmark <italic>mutscan</italic>, we compared the computational performance metrics as well as the output counts and enrichment scores to those from <italic>DiMSum</italic> [<xref ref-type="bibr" rid="CR20">20</xref>] and <italic>Enrich2</italic> [<xref ref-type="bibr" rid="CR19">19</xref>], which are both widely used tools for the analysis of MAVE data. We aimed to set the parameters of the three methods in such a way that the output values were comparable, wherever possible. For the Diss_FOS data set, we limited the number of mutated nucleotides to 2 and analyzed the data on the nucleotide level rather than collapsing on the codon or amino acid level. We also did not use the information in the included UMIs but counted the number of reads assigned to each variant. For the Bolognesi_TDP43_290_331 data set, we allowed up to three nucleotide substitutions. For the Li_tRNA_sel30 data set, we allowed any number of mutations but filtered the quantified variants to only retain those with a count exceeding 2000 in all the input samples and exceeding 200 in all output samples. For the Diss_FOS_JUN data set, we instructed <italic>mutscan</italic> to allow up to one mutated codon in each of the two variable sequences, and only allowed mutated codons encoded by the “NNS” IUPAC code. For <italic>DiMSum</italic>, we limited the total number of mutated amino acids to two (across the concatenated wild-type sequence), indicated that the mutagenesis was done on the codon level, and provided the IUPAC code for the allowed nucleotide sequence. Before comparison, we further filtered out the <italic>DiMSum</italic> variants where the two mutated amino acids occurred in the same protein. We also removed variants with both non-synonymous and silent mutations from the <italic>mutscan</italic> output, as the default setting in <italic>DiMSum</italic> is to exclude these. Configuration files for all methods are available from <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan_manuscript_2022">https://github.com/fmicompbio/mutscan_manuscript_2022</ext-link>.</p>
    </sec>
    <sec id="Sec18">
      <title>Estimation of computational performance metrics</title>
      <p id="Par63">All analyses were run on a server with two Intel Xeon Platinum 8168 CPUs with a total of 48 cores, 1024 GB of random access memory and parallel file system accessed via GPFS. Memory requirement (max RSS), CPU usage, execution time, and total I/O were measured using the benchmark directives of a slightly modified version of <italic>snakemake</italic> v7.8.3 (modified to return the values of read_chars and write_chars from <italic>psutil</italic>, in addition to the default read_bytes and write_bytes; patch file available at <ext-link ext-link-type="uri" xlink:href="https://gist.github.com/mbstadler/3f5131b5aa88f87196d030a82081e1ea">https://gist.github.com/mbstadler/3f5131b5aa88f87196d030a82081e1ea</ext-link>).</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec19">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2967_MOESM1_ESM.html">
            <caption>
              <p><bold>Additional file 1.</bold> Available from https://doi.org/10.5281/zenodo.7896393. Reprocessing of FOS/JUN data from Diss &amp; Lehner. This file provides a reproducible record describing how mutscan was used to reprocess the data from a previous publication.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2967_MOESM2_ESM.pdf">
            <caption>
              <p><bold>Additional file 2:</bold> <bold>Figure S1.</bold> Computational performance metrics for <italic>mutscan</italic>’s <italic>digestFastqs()</italic> function run with different numbers of cores, processing a single input sample from the Li_tRNA_sel30 dataset. The black dots represent the average across five independent runs, each indicated by a smaller red dot. The dashed curves connect the average values for different numbers of cores. RSS -resident set size. <bold>Figure S2.</bold> Execution time and maximum memory required by the <italic>digestFastqs()</italic> function when processing different numbers of reads (achieved by setting the maxNReads argument of the <italic>digestFastqs()</italic> function to N, which limits the processing to the first N reads in the FASTQ file). The black dots represent the average across five independent runs, each indicated by a smaller red dot. The dashed line in (A) is a linear regression line, while the dashed curve in (B) connects the average values for different numbers of cores. RSS - resident set size. <bold>Figure S3.</bold> Comparison of the variants detected by <italic>mutscan</italic>, <italic>DiMSum</italic> and <italic>Enrich2</italic> in the Diss_FOS dataset,  stratified by the number of mutated bases in the variant. All variants with up to two mutated bases are consistently detected by all three tools. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S4.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic>, <italic>DiMSum</italic> and <italic>Enrich2</italic> in the Diss_FOS dataset, stratified by the number of mutated bases in the variant. <bold>Figure S5.</bold> Comparison of the variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Diss_FOS_JUN dataset, stratified by the number of mutated amino acids in the variant. Most variants are found consistently with both tools. The ones found by a single tool tend to have a low read count. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S6.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Diss_FOS_JUN dataset, stratified by the number of mutated amino acids in the variant. <bold>Figure S7.</bold> Comparison of the variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Bolognesi_TDP43_290_331 dataset, stratified by the number of mutated bases in the variant. Almost all variants with up to two mutations are consistently detected by both methods. The ones found by a single tool tend to have a low read count. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S8.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Bolognesi_TDP43_290_331 dataset, stratified by the number of mutated bases in the variant. <bold>Figure S9.</bold> Comparison of the variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Li_tRNA_sel30 dataset, stratified by the number of mutated bases in the variant. Only variants with up to six mutations are shown. Most variants are found with both tools, and the ones found by a single tool tend to have a lower read count. The abundance represents the average log<sub>10</sub>(count+1) across samples where the variant was quantified. <bold>Figure S10.</bold> Comparison of the observed counts for variants detected by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Li_tRNA_sel30 dataset, stratified by the number of mutated bases in the variant. Only variants with up to six mutations are shown. <bold>Figure S11.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic>, <italic>DiMSum</italic> and <italic>Enrich2</italic> in the Diss_FOS dataset, stratified by the number of mutated bases in the variant. The agreement between the fitness scores from the different methods is very high for variants with a single mutation, and decreases as the number of mutations increases (and alongside that, the average abundance decreases). <bold>Figure S12.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Diss_FOS_JUN dataset, stratified by the number of mutated amino acids in the variant. The agreement between the fitness scores from the different methods is very high for variants with a single mutation, and decreases as the number of mutations increases. <bold>Figure S13.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Bolognesi_TDP43_290_331 dataset, stratified by the number of mutated bases in the variant. The agreement between the fitness scores from the different methods is very high for variants with a single mutation, and decreases as the number of mutations increases. <bold>Figure S14.</bold> Comparison of fitness scores estimated by <italic>mutscan</italic> and <italic>DiMSum</italic> in the Li_tRNA_sel30 dataset, stratified by the number of mutated bases in the variant. <bold>Figure S15.</bold> Comparison of fitness scores estimated by <italic>DiMSum</italic> for individual replicates in the four example data sets.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="13059_2023_2967_MOESM3_ESM.docx">
            <caption>
              <p><bold>Additional file 3.</bold> Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors would like to thank the current and former members of the Diss, Thomä and Stadler groups at FMI for the discussions, testing, and feedback.</p>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par64">Anahita Bishop was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par65">The review history is available as Additional file <xref rid="MOESM3" ref-type="media">3</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>CS: conceptualization, methodology, software, formal analysis, writing—original draft, and visualization. AMB: investigation, writing—original draft, and validation. GD: conceptualization, resources, validation, writing —review and editing, and project administration. MBS: conceptualization, methodology, software, and writing—original draft. The authors read and approved the final manuscript.</p>
    <sec id="FPar3">
      <title>Authors’ Twitter handles</title>
      <p id="Par66">@AlexBendel_ (Alexandra M. Bendel); @Guillaume_Diss (Guillaume Diss)</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by the Novartis Research Foundation (all authors) and SNF Project grant 197593 (GD, AMB). The funding bodies did not have any role in the design of the study; the collection, analysis, and interpretation of the data; or writing of the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: <italic>mutscan</italic> (v0.2.31 used for all analyses, v0.2.35 adds additional variant names based on reviewers’ comments).</p>
    <p>Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan">https://github.com/fmicompbio/mutscan</ext-link>[<xref ref-type="bibr" rid="CR40">40</xref>], <ext-link ext-link-type="uri" xlink:href="https://fmicompbio.github.io/mutscan/">https://fmicompbio.github.io/mutscan/</ext-link></p>
    <p>Archived versions: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7129132">https://doi.org/10.5281/zenodo.7129132</ext-link> (v0.2.31) [<xref ref-type="bibr" rid="CR41">41</xref>], <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.5281/zenodo.7702318">https://doi.org/10.5281/zenodo.7702318</ext-link> (v0.2.35) [<xref ref-type="bibr" rid="CR42">42</xref>].</p>
    <p>Operating system(s): Platform independent.</p>
    <p>Programming language: R, C++ </p>
    <p>Other requirements: none.</p>
    <p>License: MIT.</p>
    <p>Any restrictions to use by non-academics: none.</p>
    <p>The code used to generate the results in the paper is available from <ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan_manuscript_2022">https://github.com/fmicompbio/mutscan_manuscript_2022</ext-link>.</p>
    <p>The data sets supporting the conclusions of this article are available in the Gene Expression Omnibus repository [<xref ref-type="bibr" rid="CR43">43</xref>–<xref ref-type="bibr" rid="CR45">45</xref>].</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar4">
      <title>Ethics approval and consent to participate</title>
      <p id="Par67">Not applicable.</p>
    </notes>
    <notes id="FPar5">
      <title>Consent for publication</title>
      <p id="Par68">Not applicable.</p>
    </notes>
    <notes id="FPar6" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par69">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Uffelmann</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>QQ</given-names>
          </name>
          <name>
            <surname>Munung</surname>
            <given-names>NS</given-names>
          </name>
          <name>
            <surname>de Vries</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Okada</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>AR</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Genome-wide association studies</article-title>
        <source>Nature Reviews Methods Primers</source>
        <year>2021</year>
        <volume>1</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1038/s43586-021-00056-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burke</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Parens</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Chung</surname>
            <given-names>WK</given-names>
          </name>
          <name>
            <surname>Berger</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Appelbaum</surname>
            <given-names>PS</given-names>
          </name>
        </person-group>
        <article-title>The challenge of genetic variants of uncertain clinical significance: a narrative review</article-title>
        <source>Ann Intern Med</source>
        <year>2022</year>
        <volume>175</volume>
        <issue>7</issue>
        <fpage>994</fpage>
        <lpage>1000</lpage>
        <pub-id pub-id-type="doi">10.7326/M21-4109</pub-id>
        <?supplied-pmid 35436152?>
        <pub-id pub-id-type="pmid">35436152</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pir</surname>
            <given-names>MS</given-names>
          </name>
          <name>
            <surname>Bilgin</surname>
            <given-names>HI</given-names>
          </name>
          <name>
            <surname>Sayici</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Coşkun</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Torun</surname>
            <given-names>FM</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>ConVarT: a search engine for matching human genetic variants with variants from non-human species</article-title>
        <source>Nucleic Acids Res</source>
        <year>2022</year>
        <volume>50</volume>
        <issue>D1</issue>
        <fpage>D1172</fpage>
        <lpage>D1178</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab939</pub-id>
        <?supplied-pmid 34718716?>
        <pub-id pub-id-type="pmid">34718716</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowler</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Fields</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Deep mutational scanning: a new style of protein science</article-title>
        <source>Nat Methods</source>
        <year>2014</year>
        <volume>11</volume>
        <issue>8</issue>
        <fpage>801</fpage>
        <lpage>807</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3027</pub-id>
        <?supplied-pmid 25075907?>
        <pub-id pub-id-type="pmid">25075907</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowler</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Stephany</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Fields</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Measuring the activity of protein variants on a large scale using deep mutational scanning</article-title>
        <source>Nat Protoc</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>9</issue>
        <fpage>2267</fpage>
        <lpage>2284</lpage>
        <pub-id pub-id-type="doi">10.1038/nprot.2014.153</pub-id>
        <?supplied-pmid 25167058?>
        <pub-id pub-id-type="pmid">25167058</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Diss</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The genetic landscape of a physical interaction</article-title>
        <source>Elife</source>
        <year>2018</year>
        <volume>7</volume>
        <fpage>e32472</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.32472</pub-id>
        <?supplied-pmid 29638215?>
        <pub-id pub-id-type="pmid">29638215</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Domingo</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schmiedel</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Hidalgo-Carcedo</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Diss</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Mapping the energetic and allosteric landscapes of protein binding domains</article-title>
        <source>Nature</source>
        <year>2022</year>
        <volume>604</volume>
        <issue>7904</issue>
        <fpage>175</fpage>
        <lpage>183</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-022-04586-4</pub-id>
        <?supplied-pmid 35388192?>
        <pub-id pub-id-type="pmid">35388192</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Starita</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Young</surname>
            <given-names>DL</given-names>
          </name>
          <name>
            <surname>Islam</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kitzman</surname>
            <given-names>JO</given-names>
          </name>
          <name>
            <surname>Gullingsrud</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Hause</surname>
            <given-names>RJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Massively parallel functional analysis of BRCA1 RING domain variants</article-title>
        <source>Genetics</source>
        <year>2015</year>
        <volume>200</volume>
        <issue>2</issue>
        <fpage>413</fpage>
        <lpage>422</lpage>
        <pub-id pub-id-type="doi">10.1534/genetics.115.175802</pub-id>
        <?supplied-pmid 25823446?>
        <pub-id pub-id-type="pmid">25823446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Matreyek</surname>
            <given-names>KA</given-names>
          </name>
          <name>
            <surname>Starita</surname>
            <given-names>LM</given-names>
          </name>
          <name>
            <surname>Stephany</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Chiasson</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Gray</surname>
            <given-names>VE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Multiplex assessment of protein variant abundance by massively parallel sequencing</article-title>
        <source>Nat Genet</source>
        <year>2018</year>
        <volume>50</volume>
        <issue>6</issue>
        <fpage>874</fpage>
        <lpage>882</lpage>
        <pub-id pub-id-type="doi">10.1038/s41588-018-0122-z</pub-id>
        <?supplied-pmid 29785012?>
        <pub-id pub-id-type="pmid">29785012</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Starr</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Greaney</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Hilton</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Ellis</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Crawford</surname>
            <given-names>KHD</given-names>
          </name>
          <name>
            <surname>Dingens</surname>
            <given-names>AS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Deep mutational scanning of SARS-CoV-2 receptor binding domain reveals constraints on folding and ACE2 binding</article-title>
        <source>Cell</source>
        <year>2020</year>
        <volume>182</volume>
        <issue>5</issue>
        <fpage>1295</fpage>
        <lpage>310.e20</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2020.08.012</pub-id>
        <?supplied-pmid 32841599?>
        <pub-id pub-id-type="pmid">32841599</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolognesi</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Seuma</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schmiedel</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Tartaglia</surname>
            <given-names>GG</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The mutational landscape of a prion-like domain</article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-12101-z</pub-id>
        <pub-id pub-id-type="pmid">30602773</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Seuma</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Badia</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bolognesi</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>The genetic landscape for amyloid beta fibril nucleation accurately discriminates familial Alzheimer’s disease mutations</article-title>
        <source>Elife</source>
        <year>2021</year>
        <volume>1</volume>
        <issue>10</issue>
        <fpage>e63364</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.63364</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jones</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Lubock</surname>
            <given-names>NB</given-names>
          </name>
          <name>
            <surname>Venkatakrishnan</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Tseng</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Paggi</surname>
            <given-names>JM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Structural and functional characterization of G protein–coupled receptors with deep mutational scanning</article-title>
        <source>Elife</source>
        <year>2020</year>
        <volume>21</volume>
        <issue>9</issue>
        <fpage>e54895</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.54895</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Carmody</surname>
            <given-names>PJ</given-names>
          </name>
          <name>
            <surname>Zimmer</surname>
            <given-names>MH</given-names>
          </name>
          <name>
            <surname>Kuntz</surname>
            <given-names>CP</given-names>
          </name>
          <name>
            <surname>Harrington</surname>
            <given-names>HR</given-names>
          </name>
          <name>
            <surname>Duckworth</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Penn</surname>
            <given-names>WD</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Coordination of -1 programmed ribosomal frameshifting by transcript and nascent chain features revealed by deep mutational scanning</article-title>
        <source>Nucleic Acids Res</source>
        <year>2021</year>
        <volume>49</volume>
        <issue>22</issue>
        <fpage>12943</fpage>
        <lpage>12954</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab1172</pub-id>
        <?supplied-pmid 34871407?>
        <pub-id pub-id-type="pmid">34871407</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fowler</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Araya</surname>
            <given-names>CL</given-names>
          </name>
          <name>
            <surname>Fleishman</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Kellogg</surname>
            <given-names>EH</given-names>
          </name>
          <name>
            <surname>Stephany</surname>
            <given-names>JJ</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>High-resolution mapping of protein sequence-function relationships</article-title>
        <source>Nat Methods</source>
        <year>2010</year>
        <volume>7</volume>
        <issue>9</issue>
        <fpage>741</fpage>
        <lpage>746</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1492</pub-id>
        <?supplied-pmid 20711194?>
        <pub-id pub-id-type="pmid">20711194</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rocklin</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Chidyausiku</surname>
            <given-names>TM</given-names>
          </name>
          <name>
            <surname>Goreshnik</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Ford</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Houliston</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Lemak</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Global analysis of protein folding using massively parallel design, synthesis, and testing</article-title>
        <source>Science</source>
        <year>2017</year>
        <volume>357</volume>
        <issue>6347</issue>
        <fpage>168</fpage>
        <lpage>175</lpage>
        <pub-id pub-id-type="doi">10.1126/science.aan0693</pub-id>
        <?supplied-pmid 28706065?>
        <pub-id pub-id-type="pmid">28706065</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Plesa</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Sidore</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Lubock</surname>
            <given-names>NB</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Kosuri</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Multiplexed gene synthesis in emulsions for exploring protein functional landscapes</article-title>
        <source>Science</source>
        <year>2018</year>
        <volume>359</volume>
        <issue>6373</issue>
        <fpage>343</fpage>
        <lpage>347</lpage>
        <pub-id pub-id-type="doi">10.1126/science.aao5167</pub-id>
        <?supplied-pmid 29301959?>
        <pub-id pub-id-type="pmid">29301959</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Rubin AF, Min JK, Rollins NJ, Da EY, Esposito D, Harrington M, et al. MaveDB v2: a curated community database with over three million variant effects from multiplexed functional assays [Internet]. bioRxiv. 2021. p. 2021.11.29.470445. Available from:  <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2021.11.29.470445v1">https://www.biorxiv.org/content/10.1101/2021.11.29.470445v1</ext-link>. Cited 1 Dec 2021</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rubin</surname>
            <given-names>AF</given-names>
          </name>
          <name>
            <surname>Gelman</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lucas</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Bajjalieh</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Papenfuss</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Speed</surname>
            <given-names>TP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A statistical framework for analyzing deep mutational scanning data</article-title>
        <source>Genome Biol</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>150</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1272-5</pub-id>
        <?supplied-pmid 28784151?>
        <pub-id pub-id-type="pmid">28784151</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Schmiedel</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Baeza-Centurion</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Lehner</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>DiMSum: an error model and pipeline for analyzing deep mutational scanning data and diagnosing common experimental pathologies</article-title>
        <source>Genome Biol</source>
        <year>2020</year>
        <volume>21</volume>
        <issue>1</issue>
        <fpage>207</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-020-02091-3</pub-id>
        <?supplied-pmid 32799905?>
        <pub-id pub-id-type="pmid">32799905</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Andrews</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <source>FastQC: a quality control tool for high throughput sequence data [Online] [Internet]</source>
        <year>2010</year>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Martin</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Cutadapt removes adapter sequences from high-throughput sequencing reads</article-title>
        <source>EMBnet.journal</source>
        <year>2011</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>10</fpage>
        <lpage>2</lpage>
        <pub-id pub-id-type="doi">10.14806/ej.17.1.200</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rognes</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Flouri</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Nichols</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Quince</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mahé</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>VSEARCH: a versatile open source tool for metagenomics</article-title>
        <source>PeerJ</source>
        <year>2016</year>
        <volume>18</volume>
        <issue>4</issue>
        <fpage>e2584</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.2584</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zorita</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Cuscó</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Filion</surname>
            <given-names>GJ</given-names>
          </name>
        </person-group>
        <article-title>Starcode: sequence clustering based on all-pairs search</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>31</volume>
        <issue>12</issue>
        <fpage>1913</fpage>
        <lpage>1919</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btv053</pub-id>
        <?supplied-pmid 25638815?>
        <pub-id pub-id-type="pmid">25638815</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Multi-environment fitness landscapes of a tRNA gene</article-title>
        <source>Nat Ecol Evol</source>
        <year>2018</year>
        <volume>2</volume>
        <issue>6</issue>
        <fpage>1025</fpage>
        <lpage>1032</lpage>
        <pub-id pub-id-type="doi">10.1038/s41559-018-0549-8</pub-id>
        <?supplied-pmid 29686238?>
        <pub-id pub-id-type="pmid">29686238</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Morgan</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Obenchain</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Hester</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Pagès</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <source>SummarizedExperiment: SummarizedExperiment container [Internet]</source>
        <year>2022</year>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Carey</surname>
            <given-names>VJ</given-names>
          </name>
          <name>
            <surname>Gentleman</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Carlson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Carvalho</surname>
            <given-names>BS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Orchestrating high-throughput genomic analysis with Bioconductor</article-title>
        <source>Nat Methods</source>
        <year>2015</year>
        <volume>12</volume>
        <issue>2</issue>
        <fpage>115</fpage>
        <lpage>121</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3252</pub-id>
        <?supplied-pmid 25633503?>
        <pub-id pub-id-type="pmid">25633503</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cornish-Bowden</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Nomenclature for incompletely specified bases in nucleic acid sequences: recommendations 1984</article-title>
        <source>Nucleic Acids Res</source>
        <year>1985</year>
        <volume>13</volume>
        <issue>9</issue>
        <fpage>3021</fpage>
        <lpage>3030</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/13.9.3021</pub-id>
        <?supplied-pmid 2582368?>
        <pub-id pub-id-type="pmid">2582368</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>McCarthy</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>edgeR: a Bioconductor package for differential expression analysis of digital gene expression data</article-title>
        <source>Bioinformatics</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>1</issue>
        <fpage>139</fpage>
        <lpage>140</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp616</pub-id>
        <?supplied-pmid 19910308?>
        <pub-id pub-id-type="pmid">19910308</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Law</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>voom: precision weights unlock linear model analysis tools for RNA-seq read counts</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>R29</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-2-r29</pub-id>
        <?supplied-pmid 24485249?>
        <pub-id pub-id-type="pmid">24485249</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mölder</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Jablonski</surname>
            <given-names>KP</given-names>
          </name>
          <name>
            <surname>Letcher</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hall</surname>
            <given-names>MB</given-names>
          </name>
          <name>
            <surname>Tomkins-Tinch</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Sochat</surname>
            <given-names>V</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Sustainable data analysis with Snakemake</article-title>
        <source>F1000Res</source>
        <year>2021</year>
        <volume>10</volume>
        <fpage>33</fpage>
        <pub-id pub-id-type="doi">10.12688/f1000research.29032.2</pub-id>
        <?supplied-pmid 34035898?>
        <pub-id pub-id-type="pmid">34035898</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Soo</surname>
            <given-names>VWC</given-names>
          </name>
          <name>
            <surname>Swadling</surname>
            <given-names>JB</given-names>
          </name>
          <name>
            <surname>Faure</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Warnecke</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Fitness landscape of a dynamic RNA structure</article-title>
        <source>PLoS Genet</source>
        <year>2021</year>
        <volume>17</volume>
        <issue>2</issue>
        <fpage>e1009353</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pgen.1009353</pub-id>
        <?supplied-pmid 33524037?>
        <pub-id pub-id-type="pmid">33524037</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Love</surname>
            <given-names>MI</given-names>
          </name>
          <name>
            <surname>Huber</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Anders</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Moderated estimation of fold change and dispersion for RNA-seq data with DESeq2</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>12</issue>
        <fpage>550</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-014-0550-8</pub-id>
        <?supplied-pmid 25516281?>
        <pub-id pub-id-type="pmid">25516281</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dagum</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Menon</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>OpenMP: an industry standard API for shared-memory programming</article-title>
        <source>IEEE Comput Sci Eng</source>
        <year>1998</year>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>46</fpage>
        <lpage>55</lpage>
        <pub-id pub-id-type="doi">10.1109/99.660313</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ritchie</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Phipson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Law</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>limma powers differential expression analyses for RNA-sequencing and microarray studies</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <issue>7</issue>
        <fpage>e47</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv007</pub-id>
        <?supplied-pmid 25605792?>
        <pub-id pub-id-type="pmid">25605792</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Robinson</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Oshlack</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>A scaling normalization method for differential expression analysis of RNA-seq data</article-title>
        <source>Genome Biol</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>3</issue>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2010-11-3-r25</pub-id>
        <?supplied-pmid 20196867?>
        <pub-id pub-id-type="pmid">20196867</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lun</surname>
            <given-names>ATL</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>csaw: a Bioconductor package for differential binding analysis of ChIP-seq data using sliding windows</article-title>
        <source>Nucleic Acids Res</source>
        <year>2016</year>
        <volume>44</volume>
        <issue>5</issue>
        <fpage>e45</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1191</pub-id>
        <?supplied-pmid 26578583?>
        <pub-id pub-id-type="pmid">26578583</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Myint</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Avramopoulos</surname>
            <given-names>DG</given-names>
          </name>
          <name>
            <surname>Goff</surname>
            <given-names>LA</given-names>
          </name>
          <name>
            <surname>Hansen</surname>
            <given-names>KD</given-names>
          </name>
        </person-group>
        <article-title>Linear models enable powerful differential activity analysis in massively parallel reporter assays</article-title>
        <source>BMC Genomics</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>209</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-019-5556-x</pub-id>
        <?supplied-pmid 30866806?>
        <pub-id pub-id-type="pmid">30866806</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lun</surname>
            <given-names>ATL</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
        </person-group>
        <article-title>It’s DE-licious: a recipe for differential expression analyses of RNA-seq experiments using quasi-likelihood methods in edgeR</article-title>
        <source>Methods Mol Biol</source>
        <year>2016</year>
        <volume>1418</volume>
        <fpage>391</fpage>
        <lpage>416</lpage>
        <pub-id pub-id-type="doi">10.1007/978-1-4939-3578-9_19</pub-id>
        <?supplied-pmid 27008025?>
        <pub-id pub-id-type="pmid">27008025</pub-id>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">Soneson C, Bendel AM, Diss G, Stadler MB. mutscan. GitHub. 2023.<ext-link ext-link-type="uri" xlink:href="https://github.com/fmicompbio/mutscan">https://github.com/fmicompbio/mutscan</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">Soneson C, Bendel AM, Diss G, Stadler MB. mutscan v0.2.31. Zenodo. 2023.10.5281/zenodo.7129132.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Soneson C, Bendel AM, Diss G, Stadler MB. mutscan v0.2.35. Zenodo. 2023. 10.5281/zenodo.7702318.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Diss G, Lehner B. The genetic landscape of a physical interaction. GSE102901. Gene Expression Omnibus. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE102901">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE102901</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Bolognesi B, Lehner B. The mutational landscape of a Prion-like domain. GSE128165. Gene Expression Omnibus. 2019. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE128165">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE128165</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Li C, Zhang J. Multi-environment fitness landscapes of a tRNA gene. GSE111508. Gene Expression Omnibus. 2018. <ext-link ext-link-type="uri" xlink:href="https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111508">https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE111508</ext-link>.</mixed-citation>
    </ref>
  </ref-list>
</back>

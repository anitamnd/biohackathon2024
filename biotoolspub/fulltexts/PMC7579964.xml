<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7579964</article-id>
    <article-id pub-id-type="publisher-id">3815</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-020-03815-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MetaLAFFA: a flexible, end-to-end, distributed computing-compatible metagenomic functional annotation pipeline</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Eng</surname>
          <given-names>Alexander</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Verster</surname>
          <given-names>Adrian J.</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Borenstein</surname>
          <given-names>Elhanan</given-names>
        </name>
        <address>
          <email>elbo@tauex.tau.ac.il</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
        <xref ref-type="aff" rid="Aff5">5</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.34477.33</institution-id><institution-id institution-id-type="ISNI">0000000122986657</institution-id><institution>Department of Genome Sciences, </institution><institution>University of Washington, </institution></institution-wrap>Seattle, WA 98195 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.57544.37</institution-id><institution-id institution-id-type="ISNI">0000 0001 2110 2143</institution-id><institution>Present Address: Bureau of Food Surveillance and Science Integration, Food Directorate, Health Canada, </institution></institution-wrap>Ottawa, ON K1A 0K9 Canada </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.12136.37</institution-id><institution-id institution-id-type="ISNI">0000 0004 1937 0546</institution-id><institution>Blavatnik School of Computer Science, </institution><institution>Tel Aviv University, </institution></institution-wrap>6997801 Tel Aviv, Israel </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.12136.37</institution-id><institution-id institution-id-type="ISNI">0000 0004 1937 0546</institution-id><institution>Sackler Faculty of Medicine, </institution><institution>Tel Aviv University, </institution></institution-wrap>6997801 Tel Aviv, Israel </aff>
      <aff id="Aff5"><label>5</label><institution-wrap><institution-id institution-id-type="GRID">grid.209665.e</institution-id><institution-id institution-id-type="ISNI">0000 0001 1941 1940</institution-id><institution>Santa Fe Institute, </institution></institution-wrap>Santa Fe, NM 87501 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>21</day>
      <month>10</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>21</day>
      <month>10</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>471</elocation-id>
    <history>
      <date date-type="received">
        <day>1</day>
        <month>7</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>10</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Microbial communities have become an important subject of research across multiple disciplines in recent years. These communities are often examined via shotgun metagenomic sequencing, a technology which can offer unique insights into the genomic content of a microbial community. Functional annotation of shotgun metagenomic data has become an increasingly popular method for identifying the aggregate functional capacities encoded by the community’s constituent microbes. Currently available metagenomic functional annotation pipelines, however, suffer from several shortcomings, including limited pipeline customization options, lack of standard raw sequence data pre-processing, and insufficient capabilities for integration with distributed computing systems.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">Here we introduce MetaLAFFA, a functional annotation pipeline designed to take unfiltered shotgun metagenomic data as input and generate functional profiles. MetaLAFFA is implemented as a Snakemake pipeline, which enables convenient integration with distributed computing clusters, allowing users to take full advantage of available computing resources. Default pipeline settings allow new users to run MetaLAFFA according to common practices while a Python module-based configuration system provides advanced users with a flexible interface for pipeline customization. MetaLAFFA also generates summary statistics for each step in the pipeline so that users can better understand pre-processing and annotation quality.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">MetaLAFFA is a new end-to-end metagenomic functional annotation pipeline with distributed computing compatibility and flexible customization options. MetaLAFFA source code is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/borenstein-lab/MetaLAFFA">https://github.com/borenstein-lab/MetaLAFFA</ext-link> and can be installed via Conda as described in the accompanying documentation.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Metagenomics</kwd>
      <kwd>Functional annotation</kwd>
      <kwd>Pipeline</kwd>
      <kwd>Distributed computing</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>1R01GM124312</award-id>
        <award-id>R01DK095869</award-id>
        <principal-award-recipient>
          <name>
            <surname>Borenstein</surname>
            <given-names>Elhanan</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Israel Science Foundation</institution>
        </funding-source>
        <award-id>2435/19</award-id>
        <principal-award-recipient>
          <name>
            <surname>Borenstein</surname>
            <given-names>Elhanan</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>National Institutes of Health</institution>
        </funding-source>
        <award-id>U19AG057377</award-id>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par5">The analysis of the functional capacities of microbial communities has become an important component of microbiome-based studies, providing novel insights into associations between the gut microbiome and host conditions such as depression [<xref ref-type="bibr" rid="CR22">22</xref>], autism [<xref ref-type="bibr" rid="CR18">18</xref>], and type 2 diabetes [<xref ref-type="bibr" rid="CR16">16</xref>]. Such functional profiles are generally obtained via shotgun metagenomic sequencing and subsequent functional annotation. This functional annotation can be performed either by assembling reads into contigs and mapping detected open reading frames to annotated gene sequences, or by directly mapping individual reads to annotated gene sequences [<xref ref-type="bibr" rid="CR17">17</xref>]. Assembly-based approaches can provide certain benefits by enabling the reconstruction of metagenomic assembled genomes (MAGs), but this assembly process can be incredibly challenging and prohibitively time and memory intensive. Additionally, these efforts often result in highly fragmented assemblies due to factors such as uneven sequencing depth across different genomes and high strain-level sequence diversity [<xref ref-type="bibr" rid="CR7">7</xref>]. By comparison, assembly-free, or read-based, annotation approaches can offer a more practical and accessible option due to lower resource requirements and an avoidance of the assembly problem. The pipeline we present here utilizes this latter, read-based annotation approach.</p>
    <p id="Par6">To facilitate such read-based annotation processes, various pipelines, including HUMAnN2 [<xref ref-type="bibr" rid="CR6">6</xref>], MG-RAST [<xref ref-type="bibr" rid="CR10">10</xref>], eggNOG-mapper [<xref ref-type="bibr" rid="CR8">8</xref>], SUPER-FOCUS [<xref ref-type="bibr" rid="CR19">19</xref>], and YAMP [<xref ref-type="bibr" rid="CR23">23</xref>], have been recently introduced. The standard workflow of these pipelines involves taking FASTQ or FASTA files as inputs, mapping reads to a database of microbial gene sequences, annotating reads with the functional capacities that have previously been associated with those genes, and eventually producing functional profiles at one or more levels of descriptive resolution. These pipelines, however, often lack one or more critical features essential for modern, high-throughput, complete, distributed, and computationally-intensive functional annotation, such as the ability to process unfiltered sequencing data, native integration with distributed computing systems, and/or adequate options for workflow customization (Table <xref rid="Tab1" ref-type="table">1</xref>).<table-wrap id="Tab1"><label>Table 1</label><caption><p>Comparison of read-based metagenomic annotation pipeline features</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Feature</th><th align="left">MG-RAST</th><th align="left">SUPER-FOCUS</th><th align="left">eggNOG-mapper</th><th align="left">HUMAnN2</th><th align="left">YAMP</th><th align="left">MetaLAFFA</th></tr></thead><tbody><tr><td align="left">Metagenomic functional annotation</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Uses DIAMOND for read alignment</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Read pre-processing</td><td align="left">✓</td><td align="left"/><td align="left"/><td align="left"/><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Ortholog aggregation to broader functional categorizations</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Available as a web service</td><td align="left">✓</td><td align="left"/><td align="left">✓</td><td align="left"/><td align="left"/><td align="left"/></tr><tr><td align="left">Native integration with distributed computing systems</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Automatic continuation from intermediate steps after interruption</td><td align="left"/><td align="left"/><td align="left"/><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Convenient incorporation of new pipeline steps</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left">✓</td><td align="left">✓</td></tr><tr><td align="left">Universal single-copy gene-based abundance normalization via MUSiCC</td><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left"/><td align="left">✓</td></tr></tbody></table></table-wrap></p>
    <p id="Par7">Here, we describe MetaLAFFA, a new functional annotation pipeline that addresses these shortcomings. MetaLAFFA avoids requiring users to separately run common pre-processing steps by incorporating various quality control measures into the pipeline. MetaLAFFA is also designed to easily and effectively integrate with compute cluster management systems, allowing users to take full advantage of available computational resources and distributed, parallel data processing. Finally, MetaLAFFA offers a convenient interface for configuring pipeline operation, providing users with extensive customization options that include the choice of which pipeline steps to perform and the operating parameters for individual steps.</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Default MetaLAFFA workflow</title>
      <p id="Par8">In its default configuration, MetaLAFFA performs metagenomic annotation in three basic phases: quality control, read mapping, and functional annotation (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). Broadly, the quality control phase aims to remove unwanted or low-quality reads from the input shotgun metagenomic data via common pre-processing operations. Next, the read mapping phase aligns the quality-controlled reads to a sequence database of microbial genes and calculates the abundance of each gene. Finally, the functional annotation phase translates these gene abundances into classifications of community functional capacities and their abundances within the community’s metagenome. In this section, we will elaborate on the exact steps performed by MetaLAFFA in its default configuration, including the default choices for tools and databases, and possible alterations users can make to fit their specific use cases.<fig id="Fig1"><label>Fig. 1</label><caption><p>Flowchart of the default MetaLAFFA workflow. The default MetaLAFFA workflow consists of three phases, quality control (top), read mapping (middle), and functional annotation (bottom). This flowchart outlines the individual processing steps taken in each phase (colored rectangular boxes), the intermediate outputs of these steps (grey rounded boxes), supporting data files required for specific steps (yellow rounded boxes), user-provided input to MetaLAFFA (red rounded box), and the final outputs of the pipeline (purple rounded boxes). Third-party tools used in the default pipeline workflow are indicated in parentheses for their associated processing steps. File types of all inputs, outputs, and supporting data files are indicated by file suffix</p></caption><graphic xlink:href="12859_2020_3815_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par9">MetaLAFFA’s quality control phase (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, highlighted in green) was inspired by the Human Microbiome Project (HMP) [<xref ref-type="bibr" rid="CR20">20</xref>] protocol, though specific methodology has been updated to reflect current best practices. While it utilizes some component tools similar to KneadData, MetaLAFFA does not employ KneadData to better compartmentalize each step and better enable user configuration and customization of individual components. First, MetaLAFFA removes host reads by mapping reads to the hs37d5 human genome reference with decoy sequences available from the 1000 genomes project [<xref ref-type="bibr" rid="CR1">1</xref>] using Bowtie 2 [<xref ref-type="bibr" rid="CR12">12</xref>] and then discarding any reads identified as human. Depending on the project, users can substitute alternative “host” databases to remove contaminants from different host organisms. Next, MetaLAFFA removes artificial duplicates by identifying duplicate reads using MarkDuplicates from the PICARD toolset [<xref ref-type="bibr" rid="CR5">5</xref>] and then discarding those reads. The final step in the quality control phase is quality trimming and filtering, which removes low-quality bases from the ends of reads and then discards reads that are too short. This is performed using Trimmomatic [<xref ref-type="bibr" rid="CR2">2</xref>] and the MAXINFO trimming criterion. After this quality control phase, users should be left with high-quality microbial reads that can serve as the basis for profiling community metagenomic content.</p>
      <p id="Par10">The read mapping phase (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, highlighted in blue) begins with aligning reads to the UniRef90 database of protein sequences using DIAMOND [<xref ref-type="bibr" rid="CR3">3</xref>], a core tool for rapid sequence alignment in most metagenomic annotation procedures. Other databases can be substituted for the UniRef90 database depending on the goals of the annotation project. For example, using a database like CARD, which contains a collection of antibiotic resistance genes [<xref ref-type="bibr" rid="CR15">15</xref>], can allow users to focus specifically on profiling abundances of these antibiotic resistance genes within their community of interest. Similar to HUMAnN2 [<xref ref-type="bibr" rid="CR6">6</xref>] and other pipelines, paired-end reads are mapped separately during the read mapping phase to avoid overly penalizing pairs where only one half of the pair aligns to a gene. After aligning reads, MetaLAFFA scans these matches to identify the best match (or best matches if there are ties) for each read in the database. This <italic>best match</italic> strategy was shown to yield high specificity in functional profiling [<xref ref-type="bibr" rid="CR4">4</xref>], though users can choose alternative strategies to increase sensitivity at the cost of specificity. For example, MetaLAFFA also provides the option for a <italic>best N matches</italic> strategy, where a read is associated with the top N genes that the read mapped to. This strategy may be desirable if, for instance, the user is concerned that long reads may span adjacent genes. After refining matches from the alignment step, gene abundances are calculated by summing up the number of reads that mapped to each gene. If a read matches equally well to multiple genes, then that read contributes a fractional count distributed evenly across the abundances of each of those genes. This results in a gene abundance profile for each sample, which can be translated into more interpretable classifications of community functional capacities in MetaLAFFA’s third phase.</p>
      <p id="Par11">Finally, MetaLAFFA performs its functional annotation phase (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, highlighted in orange). The first step in this phase is to calculate the abundances of genes with similar functional capacities, or functional orthologs. By default, these associations between genes and functional orthology groups come from the annotations in the UniRef90 database, mapping genes to KEGG orthology groups, or KOs [<xref ref-type="bibr" rid="CR9">9</xref>]. If users choose a different database to map reads against (e.g. CARD), then users will need to update the gene-to-ortholog mapping appropriately. Similar to calculating gene abundances in the previous phase, MetaLAFFA does this by summing up the abundance of genes that belong to each group of functional orthologs. If a gene is associated with multiple orthology groups, its abundance is distributed evenly between the abundances of each of those orthology groups. The resulting functional profile is then corrected using MUSiCC [<xref ref-type="bibr" rid="CR13">13</xref>] to convert read counts of orthologs into the average copy number per genome of each functional ortholog. Alternatively, users can set MetaLAFFA to leave functional profiles in terms of relative abundances. Finally, MetaLAFFA aggregates ortholog abundances into abundances of broader functional classifications using EMPANADA [<xref ref-type="bibr" rid="CR14">14</xref>]. This tool aggregates KO abundances into KEGG pathway (and module) abundances based on the supporting evidence for the presence of each pathway. Users may need to change the ortholog-to-broader-classification mapping, or skip it all together, if they wish to use a different database for mapping reads to genes. The output of the functional annotation phase, and the final output from MetaLAFFA are the KEGG KO-, module-, and pathway-level profiles of community functional capacities.</p>
      <p id="Par12">After each step in the default MetaLAFFA pipeline is completed, MetaLAFFA also generates a table of summary statistics for that step. For example, during the steps in the quality control phase, these tables summarize how many reads were discarded from each sample, the new average base quality of each sample, and the average read length of each sample post-quality trimming. For later steps, these summary statistics include how many reads were successfully aligned to the gene database, how many matches remained when reduced to best matches, and how many unique functional orthologs were present in each sample. Once MetaLAFFA has completed its functional annotation, these summary statistics are combined into a single table summarizing the pipeline’s operation.</p>
    </sec>
    <sec id="Sec4">
      <title>Workflow management and distributed computing integration via Snakemake</title>
      <p id="Par13">MetaLAFFA is implemented in Snakemake [<xref ref-type="bibr" rid="CR11">11</xref>], a Python-based workflow management framework that is specifically designed for bioinformatics analysis pipelines. Snakemake determines dependencies between different steps of a pipeline based on the expected inputs and outputs of each step, and ensures that later steps are only run once their inputs become available. One benefit of this approach is that Snakemake automatically detects when the expected outputs of a step are missing, halts the pipeline, and allows the user to simply resume operation from the most recent successfully completed steps after they address any issues that led to the failure.</p>
      <p id="Par14">Another useful feature of Snakemake is its ability to compartmentalize pipeline operations. Snakemake can split steps in the pipeline into independent jobs where, for example, each job processes a separate sample. MetaLAFFA takes advantage of this option to separate the quality control and read mapping of multiple FASTQ files into sample-specific jobs, rather than trying to process them all as a single operation. This compartmentalization means that if MetaLAFFA fails when processing a single sample (e.g. host filtering fails because the input FASTQ was malformed), any samples that were successfully processed prior to the failure will be recognized as successfully processed. Consequently, MetaLAFFA will avoid unnecessarily re-processing those samples once the cause of the failure has been addressed and the user resumes MetaLAFFA operation.</p>
      <p id="Par15">Finally, Snakemake has built-in capabilities to take advantage of parallel processing and distributed computing, which allows MetaLAFFA users to make the best use of their available computational resources. Specifically, Snakemake automatically determines which steps (and individual jobs when steps are split into separate jobs) are independent and can be run in parallel. Then Snakemake will use available cores if being run locally, or an available distributed computing environment (e.g. HTCondor, SGE, SLURM) to run independent jobs in parallel. This allows MetaLAFFA users to take full advantage of any available compute clusters and can enable the expedited annotation of large shotgun metagenomic datasets.</p>
    </sec>
    <sec id="Sec5">
      <title>MetaLAFFA configuration and customization</title>
      <p id="Par16">MetaLAFFA provides convenient pipeline configuration and customization options for both novice and advanced users. There are two main components that define pipeline configuration: a text file defining the overall pipeline workflow (i.e. how each step feeds into one or more subsequent steps) and a Python module that organizes general pipeline options and step-specific settings into separate submodules.</p>
      <p id="Par17">The workflow file enables users to make several modifications to the MetaLAFFA workflow and should be amenable to those with little or no programming experience. For example, setting a later step to use user-provided data as input will cause MetaLAFFA to skip prior steps during operation. This may be helpful if the user has already used quality control tools to process their data and would prefer to skip to MetaLAFFA’s read mapping phase. The workflow file is also used to designate special qualities to steps in the pipeline, including: which steps take user-provided files as initial input, which steps produce important final output files, which steps generate summary statistic tables, and which steps produce intermediate files that can be safely deleted after they’ve been used. Users can also modify this configuration file to reorder steps in the pipeline if so desired (e.g. perform host read removal after quality trimming and filtering) by changing how steps feed into each other.</p>
      <p id="Par18">The Python configuration module controls the rest of MetaLAFFA operation and can be used by both naïve and savvy users. Specifically, users with zero programming experience can still access this module to modify basic configuration options. The step-specific submodule that controls the read mapping step (“map_reads_to_genes.py”) offers a good example of this basic customization. For instance, this submodule sets the DIAMOND [<xref ref-type="bibr" rid="CR3">3</xref>] operating parameters that will be used when mapping reads to genes, including the alignment method, the top percentage of best matches to keep, the E-value cutoff for saved matches, and the alignment sensitivity. Each of these parameters can be modified within the submodule by opening the file in a text editor and changing the appropriate value (e.g. finding where the “evalue_cutoff” variable is defined and changing its value from 0.001 to 1). Operating parameters for all steps in the pipeline can be modified in a similar manner.</p>
      <p id="Par19">Importantly, the values of parameters that can change a step’s output (e.g. different settings for DIAMOND’s sensitivity parameter) are tracked via output folder and file names. This helps users keep track of the specific MetaLAFFA configuration that produced a particular set of functional profiles. Additionally, this system leverages Snakemake’s usage of workflow specification through input and output naming patterns to enable users to more quickly experiment with different operating parameters. Specifically, if MetaLAFFA is run once under a specific configuration and the user then wants to rerun MetaLAFFA after changing parameters in various pipeline steps, MetaLAFFA will begin running from the earliest step for which parameters have been changed, rather than from the beginning of the entire pipeline. This is supported thanks to Snakemake’s ability to identify, based on output folder and file names, which intermediate outputs need to be newly generated.</p>
      <p id="Par20">Via the Python configuration module, Python-savvy users can further customize the actual operations run during each step in the pipeline. Returning to the read mapping step as an example, users can alter the behavior of this pipeline step by modifying the default function for step operations. This function tells MetaLAFFA how to run DIAMOND on indicated input files and passes DIAMOND the specified operating parameters mentioned above. Users can add code to this function that will be run in addition to the basic read alignment performed with DIAMOND, but they can also make more involved modifications such as changing which aligner MetaLAFFA uses for read mapping. Furthermore, users can add new steps to the pipeline, with existing step submodules serving as templates.</p>
    </sec>
  </sec>
  <sec id="Sec6">
    <title>Results</title>
    <p id="Par21">For a practical example of MetaLAFFA operation, we used MetaLAFFA in its default configuration to functionally annotate 4 stool samples (SRS011061, SRS011134, SRS011239, and SRS012273) from the HMP [<xref ref-type="bibr" rid="CR20">20</xref>]. These samples ranged in size from 90 million reads to 130 million reads. Initial formatting of the input data and operation of MetaLAFFA to annotate these samples required very little effort, including:<list list-type="order"><list-item><p id="Par22">Expanding the downloaded compressed sample directories.</p></list-item><list-item><p id="Par23">Compressing individual read files to save disk space.</p></list-item><list-item><p id="Par24">Modifying the suffixes of the forward, reverse, and singleton read filenames to match default MetaLAFFA expectations (“R1.fastq”, “R2.fastq”, and “S.fastq” respectively).</p></list-item><list-item><p id="Par25">Creating a new MetaLAFFA project directory using the associated script.</p></list-item><list-item><p id="Par26">Moving read files into the new project’s “data/” directory.</p></list-item><list-item><p id="Par27">Running “./MetaLAFFA.py” from the command line</p></list-item></list></p>
    <p id="Par28">Since these data files are post-HMP quality control, minimal reads were discarded from each sample during MetaLAFFA’s quality control phase. The percentage of reads that had a match in the UniRef90 [<xref ref-type="bibr" rid="CR21">21</xref>] database varied from 53% to 78% across samples, with unique gene matches ranging from 1.5 million to 2.7 million across samples. The resulting functional profiles contained 3.9–5.6 thousand unique KOs, 304–367 unique modules, and 135–141 unique pathways in each sample. The resulting KO-, module-, and pathway-level profiles, as well as a full summary of operating statistics for this MetaLAFFA run can be found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Tables S1–S4.</p>
  </sec>
  <sec id="Sec7">
    <title>Conclusions</title>
    <p id="Par29">MetaLAFFA is an end-to-end functional annotation pipeline that incorporates several important features for efficient, high-throughput functional annotation of shotgun metagenomic data. It makes use of standard tools for shotgun metagenome processing and functional annotation to allow out-of-the-box operation for a wide audience, while also providing a convenient customization interface that allows users to tailor the pipeline to their specific needs. Implemented using Snakemake, MetaLAFFA can take advantage of extensive parallelization, making use of either local or distributed computing resources. Taken together, this combined convenience, customizability, and high-throughput nature of MetaLAFFA should increase the accessibility of shotgun metagenome functional annotation, enabling a larger audience to participate in exploring the functions of diverse microbial communities.</p>
  </sec>
  <sec id="Sec8">
    <title>Availability and requirements</title>
    <p id="Par30"><italic>Project name</italic> MetaLAFFA.</p>
    <p id="Par31"><italic>Project home page</italic><ext-link ext-link-type="uri" xlink:href="http://borensteinlab.com/software_metalaffa.html">http://borensteinlab.com/software_metalaffa.html</ext-link>.</p>
    <p id="Par32"><italic>Operating systems</italic> Mac and Linux.</p>
    <p id="Par33"><italic>Programming language</italic> Python and Snakemake.</p>
    <p id="Par34"><italic>Other requirements</italic> Python 3.6 or greater, Conda 4.8 or greater, and Snakemake 3.13.3 or greater.</p>
    <p id="Par35"><italic>License</italic> GNU General Public License v3.0.</p>
    <p id="Par36"><italic>Any restrictions to use by non-academics</italic>: None.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec9">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2020_3815_MOESM1_ESM.xlsx">
            <caption>
              <p><bold>Additional file 1: Tables S1, S2, S3 and S4</bold>. Example output tables generated by annotating 4 HMP samples using MetaLAFFA.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviation</title>
    <def-list>
      <def-item>
        <term>HMP</term>
        <def>
          <p id="Par4">Human microbiome project</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12859-020-03815-9.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Efrat Muller, Yotam Cohen, Or Segal, and Ran Armoni for testing MetaLAFFA and providing helpful feedback. We would also like to thank the University of Washington Genome Sciences IT team and the Tel Aviv University Computer Science IT team for their technical support during development.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>AE, AJV, and EB conceived and designed the MetaLAFFA pipeline. AE and AJV implemented the initial version of MetaLAFFA. AE refactored MetaLAFFA and implemented the configuration system. AE and EB wrote the manuscript. All authors have read and approved the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This project was supported in part by NIH Grant 1R01GM124312 to EB, NIH Grant R01DK095869, NIH Grant U19AG057377, and ISF Grant 2435/19 to EB. EB is a Faculty Fellow of the Edmond J. Safra Center for Bioinformatics at Tel Aviv University. The funder had no role in collection, analysis, or interpretation of data, study design, or in writing the manuscript included in this submission.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The MetaLAFFA homepage can be found at <ext-link ext-link-type="uri" xlink:href="http://borensteinlab.com/software_metalaffa.html">http://borensteinlab.com/software_metalaffa.html</ext-link>. The code and documentation are both available on GitHub at <ext-link ext-link-type="uri" xlink:href="https://github.com/borenstein-lab/MetaLAFFA">https://github.com/borenstein-lab/MetaLAFFA</ext-link>. MetaLAFFA is available for installation via Conda. Example HMP data can be downloaded from <ext-link ext-link-type="uri" xlink:href="https://hmpdacc.org/hmp/HMASM/">https://hmpdacc.org/hmp/HMASM/</ext-link>.</p>
  </notes>
  <notes id="FPar1">
    <title>Ethics approval and consent to participate</title>
    <p id="Par37">Not applicable.</p>
  </notes>
  <notes id="FPar2">
    <title>Consent for publication</title>
    <p id="Par38">Not applicable.</p>
  </notes>
  <notes id="FPar3" notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par39">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <collab>1000 Genomes Project Consortium</collab>
        </person-group>
        <article-title>A global reference for human genetic variation</article-title>
        <source>Nature</source>
        <year>2015</year>
        <volume>526</volume>
        <issue>7571</issue>
        <fpage>68</fpage>
        <lpage>74</lpage>
        <pub-id pub-id-type="doi">10.1038/nature15393</pub-id>
        <pub-id pub-id-type="pmid">26432245</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bolger</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Lohse</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Usadel</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Trimmomatic: a flexible trimmer for illumina sequence data</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>15</issue>
        <fpage>2114</fpage>
        <lpage>2120</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu170</pub-id>
        <pub-id pub-id-type="pmid">24695404</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buchfink</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Xie</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Huson</surname>
            <given-names>DH</given-names>
          </name>
        </person-group>
        <article-title>Fast and sensitive protein alignment using DIAMOND</article-title>
        <source>Nat Methods</source>
        <year>2014</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>59</fpage>
        <lpage>60</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.3176</pub-id>
        <pub-id pub-id-type="pmid">25402007</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Carr</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Borenstein</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Comparative analysis of functional metagenomic annotation and the mappability of short reads</article-title>
        <source>PLoS ONE</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>8</issue>
        <fpage>e105776</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0105776</pub-id>
        <pub-id pub-id-type="pmid">25148512</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Fennel, T. et al. 2009. Picard. <ext-link ext-link-type="uri" xlink:href="http://Broadinstitute.Github.Io/Picard">https://Broadinstitute.Github.Io/Picard</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Franzosa</surname>
            <given-names>EA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Species-level functional profiling of metagenomes and metatranscriptomes</article-title>
        <source>Nat Methods</source>
        <year>2018</year>
        <volume>15</volume>
        <issue>11</issue>
        <fpage>962</fpage>
        <lpage>968</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-018-0176-y</pub-id>
        <pub-id pub-id-type="pmid">30377376</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ghurye</surname>
            <given-names>JS</given-names>
          </name>
          <name>
            <surname>Cepeda-Espinoza</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Metagenomic assembly: overview, challenges and applications</article-title>
        <source>Yale J Biol Med</source>
        <year>2016</year>
        <volume>89</volume>
        <issue>3</issue>
        <fpage>353</fpage>
        <lpage>362</lpage>
        <?supplied-pmid 27698619?>
        <pub-id pub-id-type="pmid">27698619</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huerta-Cepas</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast genome-wide functional annotation through orthology assignment by EggNOG-mapper</article-title>
        <source>Mol Biol Evol</source>
        <year>2017</year>
        <volume>34</volume>
        <issue>8</issue>
        <fpage>2115</fpage>
        <lpage>2122</lpage>
        <pub-id pub-id-type="doi">10.1093/molbev/msx148</pub-id>
        <pub-id pub-id-type="pmid">28460117</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kanehisa</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>KEGG as a reference resource for gene and protein annotation</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>44</volume>
        <issue>D1</issue>
        <fpage>D457</fpage>
        <lpage>D462</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkv1070</pub-id>
        <pub-id pub-id-type="pmid">26476454</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Keegan</surname>
            <given-names>KP</given-names>
          </name>
          <name>
            <surname>Glass</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Martin</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Uroz</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>MG-RAST, a metagenomics service for analysis of microbial community structure and function</article-title>
        <source>Microbial environmental genomics (MEG). Methods in molecular biology</source>
        <year>2016</year>
        <publisher-loc>New York</publisher-loc>
        <publisher-name>Humana Press</publisher-name>
        <fpage>207</fpage>
        <lpage>233</lpage>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koster</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rahmann</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Snakemake—a scalable bioinformatics workflow engine</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>19</issue>
        <fpage>2520</fpage>
        <lpage>2522</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts480</pub-id>
        <pub-id pub-id-type="pmid">22908215</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast gapped-read alignment with bowtie 2</article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <issue>4</issue>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Manor</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Borenstein</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>MUSiCC: a marker genes based framework for metagenomic normalization and accurate profiling of gene abundances in the microbiome</article-title>
        <source>Genome Biol</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>1</issue>
        <fpage>53</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-015-0610-8</pub-id>
        <pub-id pub-id-type="pmid">25885687</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Manor</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Borenstein</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Revised computational metagenomic processing uncovers hidden and biologically meaningful functional variation in the human microbiome</article-title>
        <source>Microbiome</source>
        <year>2017</year>
        <volume>5</volume>
        <issue>1</issue>
        <fpage>19</fpage>
        <pub-id pub-id-type="doi">10.1186/s40168-017-0231-4</pub-id>
        <pub-id pub-id-type="pmid">28179006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McArthur</surname>
            <given-names>AG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The comprehensive antibiotic resistance database</article-title>
        <source>Antimicrob Agents Chemother</source>
        <year>2013</year>
        <volume>57</volume>
        <issue>7</issue>
        <fpage>3348</fpage>
        <lpage>3357</lpage>
        <pub-id pub-id-type="doi">10.1128/AAC.00419-13</pub-id>
        <pub-id pub-id-type="pmid">23650175</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Qin</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A metagenome-wide association study of gut microbiota in type 2 diabetes</article-title>
        <source>Nature</source>
        <year>2012</year>
        <volume>490</volume>
        <issue>7418</issue>
        <fpage>55</fpage>
        <lpage>60</lpage>
        <pub-id pub-id-type="doi">10.1038/nature11450</pub-id>
        <pub-id pub-id-type="pmid">23023125</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quince</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Shotgun metagenomics, from sampling to analysis</article-title>
        <source>Nat Biotechnol</source>
        <year>2017</year>
        <volume>35</volume>
        <issue>9</issue>
        <fpage>833</fpage>
        <lpage>844</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3935</pub-id>
        <pub-id pub-id-type="pmid">28898207</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sharon</surname>
            <given-names>G</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Human gut microbiota from autism spectrum disorder promote behavioral symptoms in mice</article-title>
        <source>Cell</source>
        <year>2019</year>
        <volume>177</volume>
        <issue>6</issue>
        <fpage>1600</fpage>
        <lpage>1618.e17</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2019.05.004</pub-id>
        <pub-id pub-id-type="pmid">31150625</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Silva</surname>
            <given-names>GGZ</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>KT</given-names>
          </name>
          <name>
            <surname>Dutilh</surname>
            <given-names>BE</given-names>
          </name>
          <name>
            <surname>Edwards</surname>
            <given-names>RA</given-names>
          </name>
        </person-group>
        <article-title>SUPER-FOCUS: a tool for agile functional analysis of shotgun metagenomic data</article-title>
        <source>Bioinformatics</source>
        <year>2015</year>
        <volume>32</volume>
        <issue>3</issue>
        <fpage>btv584</fpage>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <collab>The Human Microbiome Project Consortium</collab>
        </person-group>
        <article-title>Structure, function and diversity of the healthy human microbiome</article-title>
        <source>Nature</source>
        <year>2012</year>
        <volume>486</volume>
        <issue>7402</issue>
        <fpage>207</fpage>
        <lpage>214</lpage>
        <pub-id pub-id-type="doi">10.1038/nature11234</pub-id>
        <pub-id pub-id-type="pmid">22699609</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <collab>The UniProt Consortium</collab>
        </person-group>
        <article-title>UniProt: a worldwide hub of protein knowledge</article-title>
        <source>Nucleic Acids Res</source>
        <year>2019</year>
        <volume>47</volume>
        <issue>D1</issue>
        <fpage>D506</fpage>
        <lpage>D515</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1049</pub-id>
        <pub-id pub-id-type="pmid">30395287</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Valles-Colomer</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The neuroactive potential of the human gut microbiota in quality of life and depression</article-title>
        <source>Nat Microbiol</source>
        <year>2019</year>
        <volume>1</volume>
        <fpage>623</fpage>
        <lpage>632</lpage>
        <pub-id pub-id-type="doi">10.1038/s41564-018-0337-x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Visconti</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>TC</given-names>
          </name>
          <name>
            <surname>Falchi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>YAMP: a containerized workflow enabling reproducibility in metagenomics research</article-title>
        <source>GigaScience</source>
        <year>2018</year>
        <volume>7</volume>
        <issue>7</issue>
        <fpage>giy072</fpage>
        <pub-id pub-id-type="doi">10.1093/gigascience/giy072</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

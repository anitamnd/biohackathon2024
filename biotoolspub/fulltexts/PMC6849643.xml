<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//ACS//DTD ACS Journal DTD v1.02 20061031//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName ACSJournal-v102.dtd?>
<?SourceDTD.Version 1.02?>
<?ConverterInfo.XSLTName acs2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Chem Inf Model</journal-id>
    <journal-id journal-id-type="publisher-id">ci</journal-id>
    <journal-id journal-id-type="coden">jcisd8</journal-id>
    <journal-title-group>
      <journal-title>Journal of Chemical Information and Modeling</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1549-9596</issn>
    <issn pub-type="epub">1549-960X</issn>
    <publisher>
      <publisher-name>American Chemical
Society</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6849643</article-id>
    <article-id pub-id-type="doi">10.1021/acs.jcim.9b00703</article-id>
    <article-categories>
      <subj-group>
        <subject>Application Note</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>PCAViz: An Open-Source Python/JavaScript Toolkit for
Visualizing Molecular Dynamics Simulations in the Web Browser</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" id="ath1">
        <name>
          <surname>Pacheco</surname>
          <given-names>Sayuri</given-names>
        </name>
        <xref rid="notes-1" ref-type="notes">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath2">
        <name>
          <surname>Kaminsky</surname>
          <given-names>Jesse C.</given-names>
        </name>
        <xref rid="notes-1" ref-type="notes">†</xref>
      </contrib>
      <contrib contrib-type="author" id="ath3">
        <name>
          <surname>Kochnev</surname>
          <given-names>Iurii K.</given-names>
        </name>
      </contrib>
      <contrib contrib-type="author" corresp="yes" id="ath4">
        <name>
          <surname>Durrant</surname>
          <given-names>Jacob D.</given-names>
        </name>
        <xref rid="cor1" ref-type="other">*</xref>
      </contrib>
      <aff id="aff1">Department of Biological
Sciences, <institution>University of Pittsburgh</institution>, Pittsburgh, Pennsylvania 15260, <country>United States</country></aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><label>*</label>Email: <email>durrantj@pitt.edu</email>.</corresp>
    </author-notes>
    <pub-date pub-type="epub">
      <day>03</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <day>28</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>03</day>
      <month>10</month>
      <year>2020</year>
    </pub-date>
    <volume>59</volume>
    <issue>10</issue>
    <fpage>4087</fpage>
    <lpage>4092</lpage>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>08</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>Copyright © 2019 American Chemical
Society</copyright-statement>
      <copyright-year>2019</copyright-year>
      <copyright-holder>American Chemical
Society</copyright-holder>
      <license>
        <license-p>This is an open access article published under an ACS AuthorChoice <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/page/policy/authorchoice_termsofuse.html">License</ext-link>, which permits copying and redistribution of the article or any adaptations for non-commercial purposes.</license-p>
      </license>
    </permissions>
    <abstract>
      <p content-type="toc-graphic">
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci9b00703_0003" id="ab-tgr1"/>
      </p>
      <p>Molecular dynamics (MD) simulations
reveal molecular motions at
atomic resolution. Recent advances in high-performance computing now
enable microsecond-long simulations capable of sampling a wide range
of biologically relevant events. But the disk space required to store
an MD trajectory increases with simulation length and system size,
complicating collaborative sharing and visualization. To overcome
these limitations, we created PCAViz, an open-source toolkit for sharing
and visualizing MD trajectories via the web browser. PCAViz includes
two components: the PCAViz Compressor, which compresses and saves
simulation data; and the PCAViz Interpreter, which decompresses the
data in users’ browsers and feeds it to any of several browser-based
molecular-visualization libraries (e.g., 3Dmol.js, NGL Viewer, etc.).
An easy-to-install WordPress plugin enables “plug-and-play”
trajectory visualization. PCAViz will appeal to a broad audience of
researchers and educators. The source code is available at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://durrantlab.com/pcaviz/">http://durrantlab.com/pcaviz/</uri>, and the WordPress plugin is available via the official WordPress
Plugin Directory.</p>
    </abstract>
    <custom-meta-group>
      <custom-meta>
        <meta-name>document-id-old-9</meta-name>
        <meta-value>ci9b00703</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>document-id-new-14</meta-name>
        <meta-value>ci9b00703</meta-value>
      </custom-meta>
      <custom-meta>
        <meta-name>ccc-price</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="sec1">
    <title>Introduction</title>
    <p>Molecular dynamics
(MD) simulations predict biomolecular dynamics
by applying Newton’s laws of motion to atomic-resolution models.
In brief, MD engines represent atoms and bonds as simple spheres connected
by virtual springs.<sup><xref ref-type="bibr" rid="ref1">1</xref></sup> If the radii/partial
charges of the spheres and the stiffness/length of the springs are
properly parametrized, virtual Newtonian and actual quantum-mechanical
forces are similar.<sup><xref ref-type="bibr" rid="ref2">2</xref></sup> The MD engine nudges
virtual atoms per the approximated forces and advances the simulation
mere femtoseconds. Repeating this process millions of times produces
trajectories that capture protein motions.</p>
    <p>Simulations reveal
important information that static structures
cannot. For example, they can resolve structural artifacts introduced
by protein crystallography (e.g., crystal contacts that are not biologically
relevant,<sup><xref ref-type="bibr" rid="ref3">3</xref></sup> potential steric clashes, etc.).
Simulations can also demonstrate the relationships between protein
structure and function,<sup><xref ref-type="bibr" rid="ref4">4</xref></sup> the effects of
solvent pH on protein dynamics,<sup><xref ref-type="bibr" rid="ref5">5</xref></sup> and the
paths through conformational space that a protein must traverse to
reach different energetic states.<sup><xref ref-type="bibr" rid="ref6">6</xref></sup></p>
    <p>Simulations also play a prominent role in structure-based, computer-aided
drug discovery. Crystal structures capture single, static protein
conformations. In contrast, MD simulations sample a more continuous
range of conformations. As binding-pocket geometries transition between
states, transient druggable subpockets sometimes form that are hidden
to experiment. These cryptic pockets<sup><xref ref-type="bibr" rid="ref7">7</xref>,<xref ref-type="bibr" rid="ref8">8</xref></sup> often play
important roles in allostery and protein–protein interactions
and so provide new drug-discovery opportunities for targeting otherwise
challenging proteins.</p>
    <p>JavaScript libraries such as 3DMol.js,<sup><xref ref-type="bibr" rid="ref9">9</xref></sup> NGL Viewer,<sup><xref ref-type="bibr" rid="ref10">10</xref></sup> and
PV<sup><xref ref-type="bibr" rid="ref11">11</xref></sup> allow researchers and web developers
to visualize static
molecular structures in any modern web browser. Many of these libraries
can also load small MD trajectories (e.g., several frames). But more
extensive MD simulations are far larger, demanding too much bandwidth
and memory for in-browser visualization. And yet, with advances in
computer parallelization and software, the extensive microsecond-long
simulations that are required to capture biological events such as
ligand binding or protein folding (e.g., refs (<xref ref-type="bibr" rid="ref12">12</xref> and <xref ref-type="bibr" rid="ref13">13</xref>)) have become routine.</p>
    <p>We
here present PCAViz, an open-source Python/JavaScript toolkit
for visualizing long MD trajectories in a web browser. Browser-based
visualization is a powerful collaboration and teaching tool. It allows
researchers to send URLs for convenient viewing rather than having
to transfer large MD trajectories that are often many gigabytes in
size. Educators can also share PCAViz URLs with their students in
a classroom setting. Convenient 3D viewing of biomolecules on laptops,
phones, and tablets often provides a clearer understanding of biological
systems.</p>
    <p>The PCAViz toolkit includes both a compression tool
and an in-browser
interpreter. The PCAViz Compressor is an easy-to-use, Python-based,
command-line utility that extracts information from an MD trajectory
using principal component analysis.<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> It
stores that information in the JSON format, a format specifically
designed to ease data transfer between web servers and browsers. The
PCAViz Interpreter is a JavaScript library that runs in the browser
without requiring users to install any plugins. It accepts the JSON
file from the server and converts it back into a format that can be
visualized using any of several in-browser molecular visualization
libraries.<sup><xref ref-type="bibr" rid="ref9">9</xref>,<xref ref-type="bibr" rid="ref10">10</xref>,<xref ref-type="bibr" rid="ref15">15</xref>,<xref ref-type="bibr" rid="ref16">16</xref></sup> The PCAViz download includes examples showing how
to integrate the Interpreter into existing web pages, and a PCAViz-powered
WordPress plugin makes browser-based trajectory visualization particularly
easy.</p>
    <p>PCAViz will be a useful tool for the computational-biology
community.
It is available free of charge from <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://durrantlab.com/pcaviz/">http://durrantlab.com/pcaviz/</uri> under the terms of the open-source GNU General Public License, version
2.</p>
  </sec>
  <sec id="sec2">
    <title>Results and Discussion</title>
    <sec id="sec2.1">
      <title>Atom-Position Accuracy</title>
      <p>PCAViz uses
several lossy techniques
to reduce bandwidth, memory, and CPU demands. Consequently, the atomic
positions of a PCAViz-processed trajectory will not exactly match
those of the original simulation. But if one chooses the proper compression
settings, the accuracy is acceptably high for in-browser visualization.
In contrast, dedicated molecular-visualization programs such as VMD<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> and PyMOL<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> are better
suited for more rigorous analyses of trajectory dynamics.</p>
      <p>Understanding
the trade-offs between atom-position accuracy and file size will help
users pick the best PCAViz settings for their needs. The first potential
source of atom-position inaccuracy is the PCA compression itself.
The first principal component describes the predominant motions of
the protein. But projecting a trajectory onto this component alone
eliminates the more subtle motions that are only explained by subsequent
components. After reverse transformation from PCA space back into
Cartesian space, the atomic positions may differ substantially from
those of the source trajectory (i.e., PCA compression is lossy). Using
the top two components captures more detailed atomic motions, but
the added data reduces compression, resulting in larger file sizes.
At the other extreme, projecting a trajectory onto all principal components
captures all simulated motions exactly, but the resulting data is
not compressed at all.</p>
      <p>The second potential source of atom-position
inaccuracy arises
due to rounding. To reduce the size of the JSON file containing the
PCA data, our implementation rounds all principal-component vectors
and coefficients to a user-defined number of decimal places. Rounding
substantially reduces file sizes, but retaining too few decimal places
introduces inaccuracies into the reverse-transformed atomic coordinates
beyond those intrinsic to PCA itself.</p>
      <p>To illustrate the impact
of PCA compression and rounding, we used
PCAViz to transform a simulation of La-related protein 1 (LARP1)<sup><xref ref-type="bibr" rid="ref19">19</xref></sup> into PCA space and then back into Cartesian
space (<xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref> and <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/suppl/10.1021/acs.jcim.9b00703/suppl_file/ci9b00703_si_001.pdf">Table S1</ext-link>). The simulation consisted of 100 frames
spaced 4.4 ns apart. We considered only non-hydrogen protein atoms
(1326 atoms per frame). To remove global translational and rotation
motions, each frame was aligned to a common reference by minimizing
C<sub>α</sub> RMSD using VMD.<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> We
applied PCAViz to this trajectory multiple times, each time retaining
the top principal components required to account for 20%, 25%, 30%,
40%, 50%, 60%, 70%, 75%, 80%, 90%, and 100% of the positional variance
captured by the aligned simulation, respectively. We also tested different
rounding precisions, including rounding to the nearest tenth, hundredth,
and thousandth. To measure atomic-position accuracy, in each case
we calculated the non-hydrogen-atom RMSD between the original and
processed frames (<xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>A). We also recorded the file sizes associated with each setting
(<xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>B). <xref rid="fig2" ref-type="fig">Figure <xref rid="fig2" ref-type="fig">2</xref></xref> illustrates the
impact of these various settings on a specific frame taken from the
simulation.</p>
      <fig id="fig1" position="float">
        <label>Figure 1</label>
        <caption>
          <p>Atom-position accuracy and file sizes. We compressed the benchmark
LARP1 simulation using various positional-variance (<italic>X</italic> axis) and rounding-precision parameters (line styles). (A) To judge
atom-position accuracy, we decompressed each simulation to recover
the atomic Cartesian coordinates. We calculated the average RMSD between
each frame of the original trajectory and the corresponding frame
of the PCAViz-processed trajectory. (B) We also recorded the file
size of each output JSON file produced using the same positional-variance/rounding-precision
combinations.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci9b00703_0001" id="gr1" position="float"/>
      </fig>
      <fig id="fig2" position="float">
        <label>Figure 2</label>
        <caption>
          <p>Atom-position accuracy depicted visually. We
considered the 50th
frame of our 100-frame LARP1 simulation. The original structure is
shown in pink. PCAViz-processed structures are shown in blue and white.
(A) Rounding PCA values to the nearest tenth and hundredth gave the
blue and white structures, respectively. In both cases, principal
components accounted for 100% of the positional variance. Rounding
to the nearest hundredth and thousandth gave structures nearly identical
to the original (pink). (B) Including sufficient principal components
to account for 25% and 50% of the positional variance gave the blue
and white structures, respectively. In both cases, the PCA values
were rounded to the nearest hundredth. Accounting for 75% of the variance
gave a structure nearly identical to the original (pink). These figures
were generated using BlendMol.<sup><xref ref-type="bibr" rid="ref20">20</xref></sup></p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci9b00703_0002" id="gr2" position="float"/>
      </fig>
      <p>As is clear from <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref>, accuracy improves as more principal components
are retained.
Similarly, accuracy improves with higher numeric precision (i.e.,
the number of digits retained after the decimal point). But these
improvements come at the cost of file size. We note that when the
output files are further compressed using GZIP, as is common when
transmitting data over the Internet, the file sizes are further reduced
(between ∼2.5 and ∼20 times in our tests).</p>
      <p>As
a second demonstration, we used PCAViz to transform a previously
aligned trajectory of TEM-1 β-lactamase (TEM-1)<sup><xref ref-type="bibr" rid="ref21">21</xref></sup> into PCA space and then back into Cartesian space. The
TEM-1 simulation consisted of 1000 frames spaced 50 ps apart. We considered
only non-hydrogen protein atoms (2030 atoms per frame). The RMSDs
between the original and PCAViz-processed trajectory frames for different
variance and precision settings are given in <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/suppl/10.1021/acs.jcim.9b00703/suppl_file/ci9b00703_si_001.pdf">Table S2</ext-link>, together with the sizes of the output JSON files. We saw
the same trends with the TEM-1 simulation that we saw with the LARP1
simulation. Accuracy improved when we used higher positional-variance
and numeric-precision cutoffs, at the cost of file size.</p>
    </sec>
    <sec id="sec2.2">
      <title>Comparison
to Related Programs</title>
      <p>We are not the first
to use PCA to compress and expand MD trajectories. For example, the
pyPcazip Python package<sup><xref ref-type="bibr" rid="ref22">22</xref></sup> uses a compression
scheme similar to ours to enable PCA-based analysis via third-party
packages such as MDAnalysis.<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> But our
primary goal is browser-based trajectory visualization, so PCAViz
additionally:<list list-type="simple"><list-item><label>1.</label><p>Stores the compressed PCA data as a
JSON file to facilitate browser/server communication,</p></list-item><list-item><label>2.</label><p>Includes the information required to
correctly represent atomic bonds in the browser,</p></list-item><list-item><label>3.</label><p>Allows users to stride the trajectory
to further reduce file size, relying on interpolation between frames
to approximate intermediate conformations,</p></list-item><list-item><label>4.</label><p>Rounds numeric values to further reduce
file sizes,</p></list-item><list-item><label>5.</label><p>Includes
a JavaScript decompression
library (the PCAViz Interpreter) to decompress the trajectory files
in users’ browsers.</p></list-item></list></p>
      <p>Popular browser-based
molecular visualization packages
such as 3DMol.js,<sup><xref ref-type="bibr" rid="ref9">9</xref></sup> NGL Viewer,<sup><xref ref-type="bibr" rid="ref10">10</xref></sup> and PV<sup><xref ref-type="bibr" rid="ref11">11</xref></sup> can also
display multiframe PDB files such as those produced by NMR. But visualizing
a long-timescale MD trajectory using these tools is not practical
given bandwidth and memory constraints. The PCAViz JavaScript interpreter
effectively enhances these popular libraries. It downloads the compressed
PCA data and decompresses it in the browser, delivering PDB-formatted
frames to these packages as needed. The PCAViz download includes examples
showing how to use PCAViz with 3DMol.js,<sup><xref ref-type="bibr" rid="ref9">9</xref></sup> NGL Viewer,<sup><xref ref-type="bibr" rid="ref10">10</xref></sup> and PV.<sup><xref ref-type="bibr" rid="ref11">11</xref></sup></p>
      <p>Programs such as MDSrv<sup><xref ref-type="bibr" rid="ref23">23</xref></sup> and HTMoL<sup><xref ref-type="bibr" rid="ref24">24</xref></sup> similarly interface with
browser-based molecular
viewers to enable trajectory visualization. But MDSrv/HTMoL and PCAViz
take fundamentally different approaches. MDSrv and HTMoL require users
to separately set up a web server that streams trajectory frames to
the browser on request, eliminating the need to approximate atomic
positions. But few researchers and educators have the ability to set
up a separate server dedicated exclusively to streaming simulation
data. Additionally, on slow Internet connections the need to download
each frame may lead to substantial lag times. In contrast, PCAViz
downloads the PCA representation of the entire trajectory as a single
file, using the same technology a standard Web site might use to download
an image file. It then approximates the atomic positions of any frame
in the browser itself, without requiring a separate trajectory-streaming
server.</p>
      <p>We have recently created other software tools that similarly
enable
browser-based trajectory visualization. For example, our BlendMol<sup><xref ref-type="bibr" rid="ref20">20</xref></sup> plugin for the popular 3D modeling program Blender allow users to
import VMD- or PyMOL-visualized proteins as meshes. Our Pyrite<sup><xref ref-type="bibr" rid="ref25">25</xref></sup> plugin can then animate these meshes according
to MD-captured motions. Additional plugins created by others allow
Blender to export animations in file formats that are compatible with
JavaScript libraries such as Babylon.js and three.js. Depending on
the details of the workflow, this approach can produce photorealistic
trajectory visualizations that are excellent for outreach and education.
But the process is far from automated. Additionally, because the animations
are applied to protein-shaped meshes rather than full atomistic models,
accurately capturing atomic-resolution motions is more challenging.
PCAViz overcomes these limitations.</p>
    </sec>
    <sec id="sec2.3">
      <title>Usage</title>
      <p>The PCAViz
download includes a detailed README
file describing how to use the Python and JavaScript components of
the toolkit, together with examples of use. The download also includes
simple trajectory files for testing. To obtain a detailed description
of the available PCAViz-Compressor command-line parameters, users
need only pass the “--help” parameter to the Python
script (i.e., <italic>python PCAViz.py --help</italic>). To see how
to integrate the PCAViz Interpreter into an existing HTML page, users
can examine the highly commented example HTML files included with
the PCAViz download.</p>
      <p>To encourage browser-based molecular visualization
among educators and scientists without HTML and JavaScript expertise,
we also developed a PCAViz WordPress plugin that automatically integrates
the PCAViz Interpreter into any WordPress site. WordPress is an easy-to-use,
open-source content management system that powers roughly 75 million
websites around the world.<sup><xref ref-type="bibr" rid="ref26">26</xref></sup> WordPress
shortcodes make it easy to add a PCAViz widget to any post or page.
We have included several PCAViz JSON files with the WordPress plugin
itself so educators without their own MD trajectories can teach their
students about protein dynamics.</p>
    </sec>
    <sec id="sec2.4">
      <title>Conclusion</title>
      <p>PCAViz
is a useful tool for visualizing
MD trajectories online that drastically reduces the amount of data
that must be transmitted from the server to the browser. For example,
consider PCAViz applied to our 100-frame, 1326-atom benchmark LARP1
simulation. When we retained only the components required to account
for 90% of the variance and rounded all values to the nearest hundredth
(see <xref rid="fig1" ref-type="fig">Figure <xref rid="fig1" ref-type="fig">1</xref></xref> and <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/suppl/10.1021/acs.jcim.9b00703/suppl_file/ci9b00703_si_001.pdf">Table S1</ext-link>), the resulting JSON file was only 497
K (101 K when further compressed with GZIP). In contrast, a PDB file
containing the full trajectory was 10M. And yet the frames of the
PCAViz-processed trajectory deviated from those of the original by
only 0.62 Å on average (RMSD).</p>
      <p>When performing detailed
analyses of MD simulations, subangstrom accuracy may be necessary.
In these cases, we recommend dedicated analysis programs such as VMD<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> and PyMOL,<sup><xref ref-type="bibr" rid="ref18">18</xref></sup> or an
online streaming solution such as MDSrv.<sup><xref ref-type="bibr" rid="ref23">23</xref></sup> But PCAViz is ideal when one wishes only to easily and effectively
visualize MD simulations in the browser.</p>
      <p>We expect PCAViz to
appeal to a broad audience, including researchers
who wish to collaboratively share their simulations, outreach coordinators
who wish to communicate the power of computational biology, and students
learning about protein motions in a classroom setting. We release
it under the terms of the open-source GNU General Public License,
version 2. A copy can be downloaded free of charge from <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://durrantlab.com/pcaviz/">http://durrantlab.com/pcaviz/</uri>. The WordPress plugin is available via the official WordPress Plugin
Directory.</p>
    </sec>
  </sec>
  <sec id="sec3">
    <title>Materials and Methods</title>
    <sec id="sec3.1">
      <title>PCAViz Compressor (Python)</title>
      <p>The PCAViz Compressor script
is a command-line program written in Python that converts MD files
from standard 3D-Cartesian formats (e.g., dcd, netcdf, xtc) to the
compressed/simplified PCAViz JSON format. We have tested the PCAViz
Compressor on several operating systems, using several different versions
of the required Python libraries (<xref rid="tbl1" ref-type="other">Table <xref rid="tbl1" ref-type="other">1</xref></xref>). To obtain a copy of the compressor, users
can (1) download (or clone) the entire PCAViz git repository at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://git.durrantlab.com/jdurrant/pcaviz">http://git.durrantlab.com/jdurrant/pcaviz</uri>, (2) download only the compressor-relevant files from the repository
(pcaviz-compressor-python.zip), or (3) install the compressor via
the <italic>pip</italic> package-management system (<italic>pip install
pcaviz-durrantlab</italic>).</p>
      <table-wrap id="tbl1" position="float">
        <label>Table 1</label>
        <caption>
          <title>PCAViz Compressor
Compatibility<xref rid="tbl1-fn1" ref-type="table-fn">a</xref></title>
        </caption>
        <table frame="hsides" rules="groups" border="0">
          <colgroup>
            <col align="left"/>
            <col align="left"/>
            <col align="left"/>
            <col align="left"/>
            <col align="left"/>
          </colgroup>
          <thead>
            <tr>
              <th style="border:none;" align="center">Operating
System</th>
              <th style="border:none;" align="center">Python</th>
              <th style="border:none;" align="center">MD analysis</th>
              <th style="border:none;" align="center">Scikit-learn</th>
              <th style="border:none;" align="center">NumPy</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td style="border:none;" align="left">macOS Mojave 10.14.4</td>
              <td style="border:none;" align="left">3.6.7</td>
              <td style="border:none;" align="left">0.19.2</td>
              <td style="border:none;" align="left">0.20.3</td>
              <td style="border:none;" align="left">1.16.3</td>
            </tr>
            <tr>
              <td style="border:none;" align="left">macOS Mojave 10.14.4</td>
              <td style="border:none;" align="left">2.7.15</td>
              <td style="border:none;" align="left">0.19.2</td>
              <td style="border:none;" align="left">0.20.3</td>
              <td style="border:none;" align="left">1.16.3</td>
            </tr>
            <tr>
              <td style="border:none;" align="left">Ubuntu 18.04.1</td>
              <td style="border:none;" align="left">3.6.6</td>
              <td style="border:none;" align="left">0.19.2</td>
              <td style="border:none;" align="left">0.19.1</td>
              <td style="border:none;" align="left">1.15.4</td>
            </tr>
            <tr>
              <td style="border:none;" align="left">Ubuntu 18.04.1</td>
              <td style="border:none;" align="left">2.7.16</td>
              <td style="border:none;" align="left">0.18.0</td>
              <td style="border:none;" align="left">0.20.0</td>
              <td style="border:none;" align="left">1.15.2</td>
            </tr>
            <tr>
              <td style="border:none;" align="left">Microsoft Windows 10 Home</td>
              <td style="border:none;" align="left">3.7.1</td>
              <td style="border:none;" align="left">0.19.2</td>
              <td style="border:none;" align="left">0.20.3</td>
              <td style="border:none;" align="left">1.16.3</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="tbl1-fn1">
            <label>a</label>
            <p>We have tested the PCAViz Compressor
on several operating systems using different versions of Python, MDAnalysis,
scikit-learn, and NumPy.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <sec id="sec3.1.1">
        <title>Loading the
Trajectory</title>
        <p>The PCAViz Compressor uses the
MDAnalysis package<sup><xref ref-type="bibr" rid="ref14">14</xref></sup> to load simulation
coordinate (trajectory) and topology files. MDAnalysis supports many
popular coordinate-file formats (e.g., dcd, xtc, trr, out, trz, mdcrd,
inpcrd, restrt, netcdf, nc) as well as many topology-file formats
(e.g., psf, prmtop, parm7, top, and xml).</p>
        <p>To preserve the global
translational and rotational motions of the simulated system, PCAViz
does not perform any least-squares fitting of trajectory frames to
a common reference (e.g., the first frame). In many cases, users may
wish to use a separate program (e.g., VMD<sup><xref ref-type="bibr" rid="ref17">17</xref></sup> or PyMOL<sup><xref ref-type="bibr" rid="ref18">18</xref></sup>) to align the trajectory before
PCAViz processing. Otherwise, global motions may dominate the positional
variance of the system, degrading the representation of often more
interesting internal motions.</p>
      </sec>
      <sec id="sec3.1.2">
        <title>Pruning the Trajectory</title>
        <p>The compressor allows the user
to remove atoms from the simulated system that will not be visualized
in the browser. Removing unnecessary atoms simplifies the trajectory
and accelerates subsequent steps. It also helps alleviate the memory
and bandwidth constraints associated with in-browser viewing. For
example, if the user does not wish to display solute–solvent
interactions, water molecules can be removed. If the user is primarily
interested in side-chain motions, hydrogen atoms may also be unnecessary.
If the intent is to visualize a protein using the ribbon or new cartoon
representations, retaining only backbone atoms is sufficient.</p>
        <p>The user can also stride the simulation, keeping only every few frames.
Striding drastically reduces the amount of data that must be stored,
improving the performance of subsequent steps. Interpolating between
the retained frames often reasonably reconstructs the dropped frames.</p>
      </sec>
      <sec id="sec3.1.3">
        <title>Principal Component Analysis</title>
        <p>The PCAViz Compressor
next uses principal component analysis (PCA),<sup><xref ref-type="bibr" rid="ref27">27</xref></sup> as implemented in the scikit-learn Python package,<sup><xref ref-type="bibr" rid="ref28">28</xref></sup> to approximate the motions of the remaining atoms. PCA
involves identifying orthogonal vectors (principal components) that
maximize the positional variation across the trajectory. The first
component explains the most variation, with each consecutive component
explaining less. The atomic coordinates of each frame can be expressed
as a linear combination of the components, where each component is
multiplied by a frame-specific coefficient. To reduce the dimensionality
of the data while minimizing the loss of variation in a quantified
way, one can approximate atomic coordinates by considering only the
first <italic>n</italic> components. But, the resulting lossy compression
comes at the cost of atom-position accuracy.</p>
        <p>The user can specify
the amount of positional variance that should be explained by the
principal components. In a given PCA decomposition, each component
accounts for a certain percentage of the total variance. The PCAViz
Compressor identifies the smallest set of top components that—when
considered together—account for the user-specified (cumulative)
positional variance. Allowing users to specify the cumulative variance
is more intuitive than requiring them to directly specify the number
of principal components. For interested users, running the PCAViz
Compressor with the “check_accuracy” flag outputs the
number of top components retained. <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/suppl/10.1021/acs.jcim.9b00703/suppl_file/ci9b00703_si_001.pdf">Tables S1 and S2</ext-link> provide two illustrations of how the number of retained
components varies according to the user-specified cumulative-variance
cutoff. To obtain the best results, users should find a good balance
between the variance cutoff and the desired atom-position accuracy.
Accounting for more variance (by allowing PCAViz to include more components)
improves accuracy at the cost of compression.</p>
      </sec>
      <sec id="sec3.1.4">
        <title>Controlling
the JSON File Size</title>
        <p>The compressor outputs
a JSON file that contains the PCA components and frame-specific coefficients;
the average atomic Cartesian coordinates (i.e., the origin in PCA
space); the residue names and sequence numbers; the atom names; and
the atomic coordinates of the first frame to enable in-browser bond-by-distance
calculations. To optimize the JSON file for transfer over the web,
the compressor stores this information as efficiently as possible.
It deletes unnecessary spaces present in the file, rounds floating-point
numbers to a user-defined precision, and represents all numeric values
as integers (eliminating decimal points). These approaches substantially
reduce the file size, enabling rapid transfer over the Internet.</p>
      </sec>
      <sec id="sec3.1.5">
        <title>Evaluating Accuracy</title>
        <p>To evaluate the impact of compression
on atom-position accuracy, users can optionally instruct the PCAViz
Compressor to calculate the root-mean-square deviation (RMSD) between
each pre- and postcompression frame. Examining the output CSV file
containing these values provides a sense for how much accuracy is
lost due to compression.</p>
      </sec>
    </sec>
    <sec id="sec3.2">
      <title>PCAViz Interpreter (JavaScript)</title>
      <p>The PCAViz Interpreter
displays the processed trajectories in any modern web browser. We
have specifically tested it on Google Chrome, Firefox, and Safari.
To obtain a copy of the interpreter, users can download the entire
PCAViz git repository at <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="http://git.durrantlab.com/jdurrant/pcaviz">http://git.durrantlab.com/jdurrant/pcaviz</uri>. The same Web site also includes a single ZIP file containing only
the interpreter-relevant files (pcaviz-interpreter-javascript.zip).</p>
      <sec id="sec3.2.1">
        <title>Converting
from PCA to Cartesian Space</title>
        <p>The Interpreter
first retrieves the JSON file from a web server and converts all the
numeric values from integers back into decimal numbers. If the original
trajectory was strided, the PCA coefficients associated with some
trajectory frames may be missing. The JavaScript interpreter estimates
the values of the missing coefficients by linearly interpolating between
frames that do have defined coefficients.</p>
        <p>Next, the JavaScript
interpreter converts the PCA data back into 3D Cartesian coordinates,
as required to visualize the trajectory using popular molecular-visualization
JavaScript libraries such as 3DMol.js,<sup><xref ref-type="bibr" rid="ref9">9</xref></sup> NGL Viewer,<sup><xref ref-type="bibr" rid="ref10">10</xref></sup> and PV.<sup><xref ref-type="bibr" rid="ref11">11</xref></sup> For each frame, the original coordinates can be recovered
by multiplying each principal component by the corresponding frame-specific
coefficient, summing the scaled vectors, and adding the average atomic
Cartesian coordinates.</p>
      </sec>
      <sec id="sec3.2.2">
        <title>Optimizing the Use of Available Resources</title>
        <p>Converting
from PCA space back to Cartesian space can be computationally expensive.
The JavaScript interpreter provides three caching options to manage
these calculations. The first, though CPU intensive, allows for quick
start times and low memory usage. The coordinates of each frame are
(re)calculated every time that frame is displayed. Previously calculated
frame coordinates are discarded to keep memory usage low. Unfortunately,
because this option is CPU intensive, trajectory playback on low-end
machines is sometimes choppy.</p>
        <p>The second option, though more
memory intensive, allows for quick start times and lower CPU usage.
The coordinates of each frame are calculated only once, when the frame
is first displayed. The initial trajectory playback may be choppy
as the CPU performs these initial calculations. But calculated coordinates
are saved to memory, so the animation is smoother each time the trajectory
is replayed (e.g., in loop playback mode).</p>
        <p>The third option
prioritizes smooth playback at the expense of
both quick start times and memory usage. The coordinates of all frames
are calculated and saved to memory before displaying any frame of
the trajectory. As no new coordinates need be calculated during playback,
playback tends to be much smoother once it starts.</p>
        <p>Several other
PCAViz options also aim to improve in-browser playback.
The user can instruct the JavaScript interpreter to update atomic
positions less frequently than the default 60 times per second (i.e.,
every 16.7 ms). Shortening the trajectory-playback duration can also
reduce the number of frame coordinates that need be calculated in
some cases. These adjustments may require the user to smooth the trajectory
to improve visualization. If so, the PCAViz interpreter can also calculate
a moving average of the frame coordinates, using a sample window of
user-specified length.</p>
      </sec>
    </sec>
  </sec>
</body>
<back>
  <notes id="notes-2" notes-type="si">
    <title>Supporting Information Available</title>
    <p>The Supporting Information
is available free of charge on the <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org">ACS Publications website</ext-link> at DOI: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/abs/10.1021/acs.jcim.9b00703">10.1021/acs.jcim.9b00703</ext-link>.<list id="silist" list-type="simple"><list-item><p>Tables S1 and
S2, an extended description of PCAViz
accuracy vs compression (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="http://pubs.acs.org/doi/suppl/10.1021/acs.jcim.9b00703/suppl_file/ci9b00703_si_001.pdf">PDF</ext-link>)</p></list-item></list></p>
  </notes>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="sifile1">
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="ci9b00703_si_001.pdf">
        <caption>
          <p>ci9b00703_si_001.pdf</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
  <notes notes-type="" id="notes-1">
    <title>Author Contributions</title>
    <p><sup>†</sup> The authors wish it to be known that, in
their opinion, the first
two authors should be regarded as joint first authors.</p>
  </notes>
  <notes notes-type="COI-statement" id="notes-4">
    <p>The authors
declare no competing financial interest.</p>
  </notes>
  <ack>
    <title>Acknowledgments</title>
    <p>This work
was supported by a computing allocation from the
University of Pittsburgh’s Center for Research Computing (allocation
to J.D.D). We also acknowledge funding from the National Institutes
of Health’s Building Infrastructure Leading to Diversity (BUILD)
program (no. 8TL4GM118977-02).</p>
  </ack>
  <ref-list>
    <title>References</title>
    <ref id="ref1">
      <mixed-citation publication-type="journal" id="cit1"><name><surname>Durrant</surname><given-names>J. D.</given-names></name>; <name><surname>McCammon</surname><given-names>J. A.</given-names></name><article-title>Computer-Aided Drug-Discovery
Techniques That Account
for Receptor Flexibility</article-title>. <source>Curr. Opin. Pharmacol.</source><year>2010</year>, <volume>10</volume>, <fpage>770</fpage>–<lpage>774</lpage>. <pub-id pub-id-type="doi">10.1016/j.coph.2010.09.001</pub-id>.<pub-id pub-id-type="pmid">20888294</pub-id></mixed-citation>
    </ref>
    <ref id="ref2">
      <mixed-citation publication-type="journal" id="cit2"><name><surname>Cornell</surname><given-names>W. D.</given-names></name>; <name><surname>Cieplak</surname><given-names>P.</given-names></name>; <name><surname>Bayly</surname><given-names>C. I.</given-names></name>; <name><surname>Gould</surname><given-names>I. R.</given-names></name>; <name><surname>Merz</surname><given-names>K. M.</given-names></name>; <name><surname>Ferguson</surname><given-names>D. M.</given-names></name>; <name><surname>Spellmeyer</surname><given-names>D. C.</given-names></name>; <name><surname>Fox</surname><given-names>T.</given-names></name>; <name><surname>Caldwell</surname><given-names>J. W.</given-names></name>; <name><surname>Kollman</surname><given-names>P. A.</given-names></name><article-title>A Second Generation Force Field for
the Simulation
of Proteins, Nucleic Acids, and Organic Molecules</article-title>. <source>J. Am. Chem. Soc.</source><year>1995</year>, <volume>117</volume>, <fpage>5179</fpage>–<lpage>5197</lpage>. <pub-id pub-id-type="doi">10.1021/ja00124a002</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref3">
      <mixed-citation publication-type="book" id="cit3"><person-group person-group-type="allauthors"><name><surname>Rhodes</surname><given-names>G.</given-names></name></person-group><article-title>An Overview of
Protein Crystallography</article-title>. In <source>Crystallography
Made Crystal Clear</source>; <publisher-name>Academic Press</publisher-name>: <year>2006</year>; Chapter 2, pp <fpage>7</fpage>–<lpage>30</lpage>.</mixed-citation>
    </ref>
    <ref id="ref4">
      <mixed-citation publication-type="journal" id="cit4"><name><surname>Hospital</surname><given-names>A.</given-names></name>; <name><surname>Goni</surname><given-names>J. R.</given-names></name>; <name><surname>Orozco</surname><given-names>M.</given-names></name>; <name><surname>Gelpi</surname><given-names>J. L.</given-names></name><article-title>Molecular Dynamics
Simulations: Advances and Applications</article-title>. <source>Adv.
Appl. Bioinform. Chem.</source><year>2015</year>, <volume>8</volume>, <fpage>37</fpage>–<lpage>47</lpage>. <pub-id pub-id-type="doi">10.2147/AABC.S70333</pub-id>.<pub-id pub-id-type="pmid">26604800</pub-id></mixed-citation>
    </ref>
    <ref id="ref5">
      <mixed-citation publication-type="journal" id="cit5"><name><surname>Zhang</surname><given-names>B. W.</given-names></name>; <name><surname>Brunetti</surname><given-names>L.</given-names></name>; <name><surname>Brooks</surname><given-names>C. L.</given-names><suffix>3rd.</suffix></name><article-title>Probing Ph-Dependent
Dissociation of Hdea Dimers</article-title>. <source>J. Am. Chem. Soc.</source><year>2011</year>, <volume>133</volume>, <fpage>19393</fpage>–<lpage>19398</lpage>. <pub-id pub-id-type="doi">10.1021/ja2060066</pub-id>.<pub-id pub-id-type="pmid">22026371</pub-id></mixed-citation>
    </ref>
    <ref id="ref6">
      <mixed-citation publication-type="journal" id="cit6"><name><surname>Rajan</surname><given-names>A.</given-names></name>; <name><surname>Freddolino</surname><given-names>P. L.</given-names></name>; <name><surname>Schulten</surname><given-names>K.</given-names></name><article-title>Going Beyond Clustering in Md Trajectory
Analysis: An Application to Villin Headpiece Folding</article-title>. <source>PLoS One</source><year>2010</year>, <volume>5</volume>, <fpage>e9890</fpage><pub-id pub-id-type="doi">10.1371/journal.pone.0009890</pub-id>.<pub-id pub-id-type="pmid">20419160</pub-id></mixed-citation>
    </ref>
    <ref id="ref7">
      <mixed-citation publication-type="journal" id="cit7"><name><surname>Vajda</surname><given-names>S.</given-names></name>; <name><surname>Beglov</surname><given-names>D.</given-names></name>; <name><surname>Wakefield</surname><given-names>A. E.</given-names></name>; <name><surname>Egbert</surname><given-names>M.</given-names></name>; <name><surname>Whitty</surname><given-names>A.</given-names></name><article-title>Cryptic Binding
Sites on Proteins: Definition, Detection, and Druggability</article-title>. <source>Curr. Opin. Chem. Biol.</source><year>2018</year>, <volume>44</volume>, <fpage>1</fpage>–<lpage>8</lpage>. <pub-id pub-id-type="doi">10.1016/j.cbpa.2018.05.003</pub-id>.<pub-id pub-id-type="pmid">29800865</pub-id></mixed-citation>
    </ref>
    <ref id="ref8">
      <mixed-citation publication-type="journal" id="cit8"><name><surname>Beglov</surname><given-names>D.</given-names></name>; <name><surname>Hall</surname><given-names>D. R.</given-names></name>; <name><surname>Wakefield</surname><given-names>A. E.</given-names></name>; <name><surname>Luo</surname><given-names>L.</given-names></name>; <name><surname>Allen</surname><given-names>K. N.</given-names></name>; <name><surname>Kozakov</surname><given-names>D.</given-names></name>; <name><surname>Whitty</surname><given-names>A.</given-names></name>; <name><surname>Vajda</surname><given-names>S.</given-names></name><article-title>Exploring
the Structural
Origins of Cryptic Sites on Proteins</article-title>. <source>Proc.
Natl. Acad. Sci. U. S. A.</source><year>2018</year>, <volume>115</volume>, <fpage>E3416</fpage>–<lpage>E3425</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1711490115</pub-id>.<pub-id pub-id-type="pmid">29581267</pub-id></mixed-citation>
    </ref>
    <ref id="ref9">
      <mixed-citation publication-type="journal" id="cit9"><name><surname>Rego</surname><given-names>N.</given-names></name>; <name><surname>Koes</surname><given-names>D.</given-names></name><article-title>3dmol.Js: Molecular Visualization with Webgl</article-title>. <source>Bioinformatics</source><year>2015</year>, <volume>31</volume>, <fpage>1322</fpage>–<lpage>1324</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu829</pub-id>.<pub-id pub-id-type="pmid">25505090</pub-id></mixed-citation>
    </ref>
    <ref id="ref10">
      <mixed-citation publication-type="journal" id="cit10"><name><surname>Rose</surname><given-names>A. S.</given-names></name>; <name><surname>Hildebrand</surname><given-names>P. W.</given-names></name><article-title>Ngl Viewer: A Web Application for
Molecular Visualization</article-title>. <source>Nucleic Acids Res.</source><year>2015</year>, <volume>43</volume>, <fpage>W576</fpage>–<lpage>579</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv402</pub-id>.<pub-id pub-id-type="pmid">25925569</pub-id></mixed-citation>
    </ref>
    <ref id="ref11">
      <mixed-citation publication-type="weblink" id="cit11"><person-group person-group-type="allauthors"><name><surname>Biasini</surname><given-names>M.</given-names></name></person-group><article-title>Pv–Javascript
Protein Viewer</article-title>. <uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://biasmv.github.io/pv/">https://biasmv.github.io/pv/</uri> (accessed 7/23/2019).</mixed-citation>
    </ref>
    <ref id="ref12">
      <mixed-citation publication-type="journal" id="cit12"><name><surname>Durrant</surname><given-names>J. D.</given-names></name>; <name><surname>Bush</surname><given-names>R. M.</given-names></name>; <name><surname>Amaro</surname><given-names>R. E.</given-names></name><article-title>Microsecond Molecular
Dynamics Simulations
of Influenza Neuraminidase Suggest a Mechanism for the Increased Virulence
of Stalk-Deletion Mutants</article-title>. <source>J. Phys. Chem. B</source><year>2016</year>, <volume>120</volume>, <fpage>8590</fpage>–<lpage>8599</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jpcb.6b02655</pub-id>.<pub-id pub-id-type="pmid">27141956</pub-id></mixed-citation>
    </ref>
    <ref id="ref13">
      <mixed-citation publication-type="journal" id="cit13"><name><surname>Duan</surname><given-names>M.</given-names></name>; <name><surname>Liu</surname><given-names>N.</given-names></name>; <name><surname>Zhou</surname><given-names>W.</given-names></name>; <name><surname>Li</surname><given-names>D.</given-names></name>; <name><surname>Yang</surname><given-names>M.</given-names></name>; <name><surname>Hou</surname><given-names>T.</given-names></name><article-title>Structural
Diversity of Ligand-Binding Androgen Receptors Revealed by Microsecond
Long Molecular Dynamics Simulations and Enhanced Sampling</article-title>. <source>J. Chem. Theory Comput.</source><year>2016</year>, <volume>12</volume>, <fpage>4611</fpage>–<lpage>4619</lpage>. <pub-id pub-id-type="doi">10.1021/acs.jctc.6b00424</pub-id>.<pub-id pub-id-type="pmid">27560203</pub-id></mixed-citation>
    </ref>
    <ref id="ref14">
      <mixed-citation publication-type="journal" id="cit14"><name><surname>Michaud-Agrawal</surname><given-names>N.</given-names></name>; <name><surname>Denning</surname><given-names>E. J.</given-names></name>; <name><surname>Woolf</surname><given-names>T. B.</given-names></name>; <name><surname>Beckstein</surname><given-names>O.</given-names></name><article-title>MDAnalysis:
A Toolkit for the Analysis of Molecular Dynamics Simulations</article-title>. <source>J. Comput. Chem.</source><year>2011</year>, <volume>32</volume>, <fpage>2319</fpage>–<lpage>2327</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.21787</pub-id>.<pub-id pub-id-type="pmid">21500218</pub-id></mixed-citation>
    </ref>
    <ref id="ref15">
      <mixed-citation publication-type="journal" id="cit15"><name><surname>Hanson</surname><given-names>R. M.</given-names></name><article-title>Jmol–a
Paradigm Shift in Crystallographic Visualization</article-title>. <source>J. Appl. Crystallogr.</source><year>2010</year>, <volume>43</volume>, <fpage>1250</fpage>–<lpage>1260</lpage>. <pub-id pub-id-type="doi">10.1107/S0021889810030256</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref16">
      <mixed-citation publication-type="journal" id="cit16"><name><surname>Hanson</surname><given-names>R. M.</given-names></name>; <name><surname>Prilusky</surname><given-names>J.</given-names></name>; <name><surname>Renjian</surname><given-names>Z.</given-names></name>; <name><surname>Nakane</surname><given-names>T.</given-names></name>; <name><surname>Sussman</surname><given-names>J. L.</given-names></name><article-title>Jsmol and
the Next-Generation Web-Based Representation of 3D Molecular Structure
as Applied to Proteopedia</article-title>. <source>Isr. J. Chem.</source><year>2013</year>, <volume>53</volume>, <fpage>207</fpage>–<lpage>216</lpage>. <pub-id pub-id-type="doi">10.1002/ijch.201300024</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref17">
      <mixed-citation publication-type="journal" id="cit17"><name><surname>Humphrey</surname><given-names>W.</given-names></name>; <name><surname>Dalke</surname><given-names>A.</given-names></name>; <name><surname>Schulten</surname><given-names>K.</given-names></name><article-title>VMD: Visual
Molecular Dynamics</article-title>. <source>J. Mol. Graphics</source><year>1996</year>, <volume>14</volume>, <fpage>33</fpage>–<lpage>38</lpage>. <pub-id pub-id-type="doi">10.1016/0263-7855(96)00018-5</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref18">
      <mixed-citation publication-type="journal" id="cit18"><name><surname>DeLano</surname><given-names>W. L.</given-names></name><article-title>Pymol:
An Open-Source Molecular Graphics Tool</article-title>. <source>CCP4
Newsletter On Protein Crystallography</source><year>2002</year>, <volume>40</volume>, <fpage>82</fpage>–<lpage>92</lpage>.</mixed-citation>
    </ref>
    <ref id="ref19">
      <mixed-citation publication-type="journal" id="cit19"><name><surname>Lahr</surname><given-names>R. M.</given-names></name>; <name><surname>Mack</surname><given-names>S. M.</given-names></name>; <name><surname>Heroux</surname><given-names>A.</given-names></name>; <name><surname>Blagden</surname><given-names>S. P.</given-names></name>; <name><surname>Bousquet-Antonelli</surname><given-names>C.</given-names></name>; <name><surname>Deragon</surname><given-names>J. M.</given-names></name>; <name><surname>Berman</surname><given-names>A. J.</given-names></name><article-title>The La-related protein 1-Specific
Domain Repurposes HEAT-like Repeats to Directly Bind a 5′TOP
Sequence</article-title>. <source>Nucleic Acids Res.</source><year>2015</year>, <volume>43</volume>, <fpage>8077</fpage>–<lpage>8088</lpage>. <pub-id pub-id-type="doi">10.1093/nar/gkv748</pub-id>.<pub-id pub-id-type="pmid">26206669</pub-id></mixed-citation>
    </ref>
    <ref id="ref20">
      <mixed-citation publication-type="journal" id="cit20"><name><surname>Durrant</surname><given-names>J. D.</given-names></name><article-title>BlendMol:
Advanced Macromolecular Visualization in Blender</article-title>. <source>Bioinformatics</source><year>2019</year>, <volume>35</volume>, <fpage>2323</fpage>–<lpage>2325</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/bty968</pub-id>.<pub-id pub-id-type="pmid">30481283</pub-id></mixed-citation>
    </ref>
    <ref id="ref21">
      <mixed-citation publication-type="journal" id="cit21"><name><surname>Stec</surname><given-names>B.</given-names></name>; <name><surname>Holtz</surname><given-names>K. M.</given-names></name>; <name><surname>Wojciechowski</surname><given-names>C. L.</given-names></name>; <name><surname>Kantrowitz</surname><given-names>E. R.</given-names></name><article-title>Structure
of the Wild-Type Tem-1 Beta-Lactamase at 1.55 a and the Mutant Enzyme
Ser70Ala at 2.1 a Suggest the Mode of Noncovalent Catalysis for the
Mutant Enzyme</article-title>. <source>Acta Crystallogr., Sect. D: Biol.
Crystallogr.</source><year>2005</year>, <volume>61</volume>, <fpage>1072</fpage>–<lpage>1079</lpage>. <pub-id pub-id-type="doi">10.1107/S0907444905014356</pub-id>.<pub-id pub-id-type="pmid">16041072</pub-id></mixed-citation>
    </ref>
    <ref id="ref22">
      <mixed-citation publication-type="journal" id="cit22"><name><surname>Shkurti</surname><given-names>A.</given-names></name>; <name><surname>Goni</surname><given-names>R.</given-names></name>; <name><surname>Andrio</surname><given-names>P.</given-names></name>; <name><surname>Breitmoser</surname><given-names>E.</given-names></name>; <name><surname>Bethune</surname><given-names>I.</given-names></name>; <name><surname>Orozco</surname><given-names>M.</given-names></name>; <name><surname>Laughton</surname><given-names>C. A.</given-names></name><article-title>Pypcazip: A Pca-Based
Toolkit for Compression and Analysis of Molecular Simulation Data</article-title>. <source>Data. SoftwareX.</source><year>2016</year>, <volume>5</volume>, <fpage>44</fpage><pub-id pub-id-type="doi">10.1016/j.softx.2016.04.002</pub-id>.</mixed-citation>
    </ref>
    <ref id="ref23">
      <mixed-citation publication-type="journal" id="cit23"><name><surname>Tiemann</surname><given-names>J. K. S.</given-names></name>; <name><surname>Guixa-Gonzalez</surname><given-names>R.</given-names></name>; <name><surname>Hildebrand</surname><given-names>P. W.</given-names></name>; <name><surname>Rose</surname><given-names>A. S.</given-names></name><article-title>Mdsrv: Viewing and Sharing Molecular Dynamics Simulations
on the Web</article-title>. <source>Nat. Methods</source><year>2017</year>, <volume>14</volume>, <fpage>1123</fpage>–<lpage>1124</lpage>. <pub-id pub-id-type="doi">10.1038/nmeth.4497</pub-id>.<pub-id pub-id-type="pmid">29190271</pub-id></mixed-citation>
    </ref>
    <ref id="ref24">
      <mixed-citation publication-type="journal" id="cit24"><name><surname>Carrillo-Tripp</surname><given-names>M.</given-names></name>; <name><surname>Alvarez-Rivera</surname><given-names>L.</given-names></name>; <name><surname>Lara-Ramirez</surname><given-names>O. I.</given-names></name>; <name><surname>Becerra-Toledo</surname><given-names>F. J.</given-names></name>; <name><surname>Vega-Ramirez</surname><given-names>A.</given-names></name>; <name><surname>Quijas-Valades</surname><given-names>E.</given-names></name>; <name><surname>Gonzalez-Zavala</surname><given-names>E.</given-names></name>; <name><surname>Gonzalez-Vazquez</surname><given-names>J. C.</given-names></name>; <name><surname>Garcia-Vieyra</surname><given-names>J.</given-names></name>; <name><surname>Santoyo-Rivera</surname><given-names>N. B.</given-names></name>; <name><surname>Chapa-Vergara</surname><given-names>S. V.</given-names></name>; <name><surname>Meneses-Viveros</surname><given-names>A.</given-names></name><article-title>Htmol: Full-Stack Solution for Remote
Access, Visualization, and Analysis of Molecular Dynamics Trajectory
Data</article-title>. <source>J. Comput.-Aided Mol. Des.</source><year>2018</year>, <volume>32</volume>, <fpage>869</fpage>–<lpage>876</lpage>. <pub-id pub-id-type="doi">10.1007/s10822-018-0141-y</pub-id>.<pub-id pub-id-type="pmid">30084079</pub-id></mixed-citation>
    </ref>
    <ref id="ref25">
      <mixed-citation publication-type="journal" id="cit25"><name><surname>Rajendiran</surname><given-names>N.</given-names></name>; <name><surname>Durrant</surname><given-names>J. D.</given-names></name><article-title>Pyrite: A Blender
Plugin for Visualizing Molecular
Dynamics Simulations Using Industry-Standard Rendering Techniques</article-title>. <source>J. Comput. Chem.</source><year>2018</year>, <volume>39</volume>, <fpage>748</fpage>–<lpage>755</lpage>. <pub-id pub-id-type="doi">10.1002/jcc.25155</pub-id>.<pub-id pub-id-type="pmid">29280166</pub-id></mixed-citation>
    </ref>
    <ref id="ref26">
      <mixed-citation publication-type="journal" id="cit26"><person-group person-group-type="allauthors"><name><surname>Munford</surname><given-names>M.</given-names></name></person-group><article-title>How Wordpress
Ate the Internet in 2016...And the World in 2017</article-title>. <source>Forbes</source><year>2016</year>, Dec 22.</mixed-citation>
    </ref>
    <ref id="ref27">
      <mixed-citation publication-type="book" id="cit27"><person-group person-group-type="allauthors"><name><surname>Jolliffe</surname><given-names>I.</given-names></name></person-group><source>Principal Component Analysis</source>, <edition>2</edition>nd ed.; <publisher-name>Springer</publisher-name>: <publisher-loc>New York</publisher-loc>, <year>2011</year>; p <fpage>478</fpage>.</mixed-citation>
    </ref>
    <ref id="ref28">
      <mixed-citation publication-type="journal" id="cit28"><name><surname>Pedregosa</surname><given-names>F.</given-names></name>; <name><surname>Varoquaux</surname><given-names>G.</given-names></name>; <name><surname>Gramfort</surname><given-names>A.</given-names></name>; <name><surname>Michel</surname><given-names>V.</given-names></name>; <name><surname>Thirion</surname><given-names>B.</given-names></name>; <name><surname>Grisel</surname><given-names>O.</given-names></name>; <name><surname>Blondel</surname><given-names>M.</given-names></name>; <name><surname>Prettenhofer</surname><given-names>P.</given-names></name>; <name><surname>Weiss</surname><given-names>R.</given-names></name>; <name><surname>Dubourg</surname><given-names>V.</given-names></name>; <name><surname>Vanderplas</surname><given-names>J.</given-names></name>; <name><surname>Passos</surname><given-names>A.</given-names></name>; <name><surname>Cournapeau</surname><given-names>D.</given-names></name>; <name><surname>Brucher</surname><given-names>M.</given-names></name>; <name><surname>Perrot</surname><given-names>M.</given-names></name>; <name><surname>Duchesnay</surname><given-names>É.</given-names></name><article-title>Scikit-Learn:
Machine Learning in Python</article-title>. <source>J. Mach. Learn.
Res.</source><year>2011</year>, <volume>12</volume>, <fpage>2825</fpage>–<lpage>2830</lpage>.</mixed-citation>
    </ref>
  </ref-list>
</back>

<?open_access?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">Nucleic Acids Research</journal-id>
    <journal-title>Nucleic Acids Research</journal-title>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">1160245</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gki485</article-id>
    <article-id pub-id-type="pmid">15980488</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>MovieMaker: a web server for rapid rendering of protein motions and interactions</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Maiti</surname>
          <given-names>Rajarshi</given-names>
        </name>
        <xref ref-type="aff" rid="au1">1</xref>
        <xref ref-type="aff" rid="au2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Van Domselaar</surname>
          <given-names>Gary H.</given-names>
        </name>
        <xref ref-type="aff" rid="au1">1</xref>
        <xref ref-type="aff" rid="au2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wishart</surname>
          <given-names>David S.</given-names>
        </name>
        <xref ref-type="aff" rid="au1">1</xref>
        <xref ref-type="aff" rid="au2">2</xref>
        <xref ref-type="corresp" rid="cor1">*</xref>
      </contrib>
      <aff id="au1">
        <sup>1</sup>
        <institution>Department of Computing Science, University of Alberta</institution>
        <addr-line>Edmonton, AB, Canada T6G 2E8</addr-line>
      </aff>
      <aff id="au2">
        <sup>2</sup>
        <institution>Department of Biological Sciences, University of Alberta</institution>
        <addr-line>Edmonton, AB, Canada T6G 2E8</addr-line>
      </aff>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><sup>*</sup>To whom correspondence should be addressed. Tel: +1 780 492 0383; Fax: +1 780 492 1071; Email: <email>david.wishart@ualberta.ca</email></corresp>
    </author-notes>
    <!--For NAR: both ppub and collection dates generated for PMC processing 1/27/05 beck-->
    <pub-date pub-type="collection">
      <day>01</day>
      <month>7</month>
      <year>2005</year>
    </pub-date>
    <pub-date pub-type="ppub">
      <day>01</day>
      <month>7</month>
      <year>2005</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>27</day>
      <month>6</month>
      <year>2005</year>
    </pub-date>
    <volume>33</volume>
    <issue>Web Server issue</issue>
    <fpage>W358</fpage>
    <lpage>W362</lpage>
    <history>
      <date date-type="received">
        <day>13</day>
        <month>2</month>
        <year>2005</year>
      </date>
      <date date-type="rev-recd">
        <day>20</day>
        <month>4</month>
        <year>2005</year>
      </date>
      <date date-type="accepted">
        <day>20</day>
        <month>4</month>
        <year>2005</year>
      </date>
    </history>
    <copyright-statement>© The Author 2005. Published by Oxford University Press. All rights reserved</copyright-statement>
    <copyright-year>2005</copyright-year>
    <license license-type="openaccess">
      <p>The online version of this article has been published under an open access model. Users are entitled to use, reproduce, disseminate, or display the open access version of this article for non-commercial purposes provided that: the original authorship is properly and fully attributed; the Journal and Oxford University Press are attributed as the original place of publication with the correct citation details given; if an article is subsequently reproduced or disseminated not in its entirety but only in part or as a derivative work this must be clearly indicated. For commercial re-use, please contact <email>journals.permissions@oupjournals.org</email></p>
    </license>
    <abstract>
      <p>MovieMaker is a web server that allows short (∼10 s), downloadable movies of protein motions to be generated. It accepts PDB files or PDB accession numbers as input and automatically calculates, renders and merges the necessary image files to create colourful animations covering a wide range of protein motions and other dynamic processes. Users have the option of animating (i) simple rotation, (ii) morphing between two end-state conformers, (iii) short-scale, picosecond vibrations, (iv) ligand docking, (v) protein oligomerization, (vi) mid-scale nanosecond (ensemble) motions and (vii) protein folding/unfolding. MovieMaker does not perform molecular dynamics calculations. Instead it is an animation tool that uses a sophisticated superpositioning algorithm in conjunction with Cartesian coordinate interpolation to rapidly and automatically calculate the intermediate structures needed for many of its animations. Users have extensive control over the rendering style, structure colour, animation quality, background and other image features. MovieMaker is intended to be a general-purpose server that allows both experts and non-experts to easily generate useful, informative protein animations for educational and illustrative purposes. MovieMaker is accessible at <ext-link ext-link-type="uri" xlink:href="http://wishart.biology.ualberta.ca/moviemaker"/>.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>INTRODUCTION</title>
    <p>Protein structures are not static. Indeed, proteins vibrate, twist, bend, open, close, assemble and disassemble in a variety of ways over many different time scales. Protein motions and conformational accommodation actually lie at the heart of many important protein–ligand interactions, including protein–DNA binding (<xref ref-type="bibr" rid="b1">1</xref>), enzyme–substrate interactions (<xref ref-type="bibr" rid="b2">2</xref>), muscle contraction (<xref ref-type="bibr" rid="b3">3</xref>) and oligomerization (<xref ref-type="bibr" rid="b4">4</xref>). Owing largely to the continuing developments of X-ray crystallography, NMR spectroscopy and computational molecular dynamics (MD), the temporal and spatial scales involved in protein motions are now becoming better understood (<xref ref-type="bibr" rid="b5">5</xref>). Small-scale (&lt;1.0 Å) motions over short periods of time (picoseconds) can be modelled or measured using either X-ray thermal B factors (<xref ref-type="bibr" rid="b6">6</xref>), NMR order parameters (<xref ref-type="bibr" rid="b7">7</xref>) or shorter (&lt;1 ns) MD simulations. Mid-scale motions (1.0–4.0 Å) tend to take place over longer periods of time (hundreds of picoseconds to nanoseconds) and can be discerned by comparing NMR structure ensembles, looking at the X-ray structures of different crystal isomorphs or running long (10–100 ns) MD simulations. Large-scale motions (5–30 Å), which may take microseconds to complete, are typically evident only by comparing two different states or experimentally determined structures of the same molecule (say, bound and unbound). These motions cannot normally be modelled via MD.</p>
    <p>The fact that molecular motions play such an important role in protein function underlies the growing need to be able to illustrate or visualize these motions in an informative manner. Several commercial MD packages allow molecular ‘movies’ to be screen-captured and displayed via standard computer presentations. However, relatively few biologists are familiar with, nor do they have the expertise to use, these relatively sophisticated and expensive software tools. Likewise, not all motions (especially some of the more interesting or larger-scale ones) can be captured using off-the-shelf MD simulations.</p>
    <p>More recently, Mark Gerstein at Yale University has developed an excellent and easy-to-use web server (the Morph server) which allows non-expert users to animate and visualize certain types of protein motions through the generation of short movies (<xref ref-type="bibr" rid="b8">8</xref>). This tool specifically models larger-scale motions or ‘morphs’ by interpolating the structural changes between two different protein conformers and generating a set of plausible intermediate structures. A hyperlink pointing to the morph results is then emailed to the user. The primary focus of the Morph server has been to facilitate research into, analysis and classification of different kinds of large-scale molecular motions of monomeric proteins. As such it is not intended to be a general molecular animation tool capable of simulating all aspects of macromolecular motion such as folding/unfolding, docking, oligomerization, multimeric protein motions, vibrational motions and structural ensemble motions. For instance, the Morph server offers only limited user control over rendering, animation parameters, colour and point of view. Likewise, the methods used to generate the movies are computationally intensive and can require up to 1 h of CPU time before completion. Furthermore, the Morph server does not allow the modelling of motions from a single input structure or from more than two input structures. This is somewhat limiting if one is interested in modelling motions from NMR structure ensembles or if one has only a single X-ray structure of a given protein. Additionally, the Morph server does not support the visualization of other kinds of protein motions, such as folding/unfolding, or of docking and self-assembly events involving two or more structures.</p>
    <p>Here we wish to describe a general molecular animation server that allows a wide range of motions and dynamic events to be animated and offers a much greater range of user control over rendering and animation parameters. This server, called MovieMaker, allows small-, medium- and large-scale motions to be rendered using as few as 1 and as many as 50 input structures. It allows users full control over the rendering style, molecular colouring scheme, background, point of view, rotation rate and animation quality. It also employs a simplified Cartesian coordinate interpolation approach coupled with an intelligent superposition algorithm that allows most kinds of molecular movies to be rendered automatically in less than 1 min. Unlike any other animation tool that we are aware of, MovieMaker also allows users the option of creating movies of protein folding/unfolding as well as molecular docking or self-assembly (oligomerization) of two or more molecules. Rather than being a specialized analytical tool, the main purpose of MovieMaker is to quickly and conveniently generate realistic, downloadable animations of protein motions that can be used by non-specialists for a variety of educational or instructive purposes.</p>
  </sec>
  <sec>
    <title>PROGRAM DESCRIPTION</title>
    <p>MovieMaker supports seven kinds of animations: (i) simple rotation, (ii) morphing between two end-state conformers, (iii) small-scale vibrations, (iv) small molecule docking, (v) self-assembly or oligomerization, (vi) mid-scale (structure ensemble) motions and (vii) protein folding/unfolding. The type of animation is dependent on both the input data and the type of animation selected by the user from a pull-down menu box. The MovieMaker home page presents the user with the type of movie choices that one can generate (<xref ref-type="fig" rid="fig1">Figure 1</xref>) along with an extensive gallery illustrating the types of motions that can be modelled. Upon selecting the appropriate movie type, the user is presented with input boxes for file uploads and various display options. The input for all MovieMaker animations is one or more PDB-formatted files containing one or more protein structures. These can be directly uploaded to MovieMaker using the file selector boxes or alternatively one or more PDB accession numbers can be provided and the program will automatically retrieve the appropriate PDB files from the RCSB website (<xref ref-type="bibr" rid="b9">9</xref>).</p>
    <p>The simplest motion to render in MovieMaker is a basic rotation. The rotation animation is intended to allow all sides of a given structure to be conveniently and continuously viewed. Once the rotation option is selected, only a single PDB file needs to be provided. If multiple structures are found in a single PDB file, the program either treats the ensemble as a single oligomeric structure or the user can select a single chain from that file. To generate the rotation animation, MovieMaker takes the input file and applies a series of standard <italic>x</italic>, <italic>y</italic> or <italic>z</italic> axis rotations to the structure(s). Users have the option of changing the speed and extent of the rotation by adjusting the number of frames in the animation (the default is a rotation of 360° in 10° increments). Additionally, through the viewing options section located below the data entry section, users may change the orientation of the molecule (by rotating along the <italic>x</italic>, <italic>y</italic> or <italic>z</italic> axes), the molecular rendering style (backbone, CPK, ball-and-stick, ribbon), molecular content (backbone only, all atoms, selected side-chains), image size and molecular colour (by secondary structure, rainbow, by chain, single uniform colour). All renderings are performed using the molecule visualization program MOLSCRIPT (<xref ref-type="bibr" rid="b10">10</xref>). Another freeware program called gifmerge (<ext-link ext-link-type="uri" xlink:href="http://www.lcdf.org/gifsicle/"/>) is then used to string the output images from MOLSCRIPT to create an animated GIF. This animated GIF is looped continuously to provide a smooth visualization of the rotation process. The animations are instantly viewable on the user's web browser and may be saved by right-clicking on the animation image and selecting ‘save file’ or ‘save image’. A typical movie file is ∼500 kB. MovieMaker also generates a downloadable set of PDB text files that users can use to generate specific images or regenerate animations using their own molecular rendering software.</p>
    <p>Small molecule docking requires only a single PDB file containing two or more molecular entities that are already bound. Once the small molecule docking option is selected, the MovieMaker program automatically parses the input file and identifies all molecular entities (small molecules and protein chains). Users must then select one protein entity and one small molecule entity. To generate a pre-docking or two-component state, MovieMaker then calculates the centre of masses for the protein alone, the small molecule alone and the complex together. A vector is then drawn from the complex's centre of mass to the small molecule's centre of mass. This vector defines the direction that the small molecule entity must move in to create a pre-docking state. To generate a pre-docking state, the small molecule is translated 15 Å along this vector and randomly rotated (between 15° and 60°) about its individual <italic>x</italic>, <italic>y</italic> and <italic>z</italic> axes. MovieMaker then calculates a series of intermediate positions by incrementally rotating and translating the small molecule until it reaches its original bound position. The default increment is 1/20 of the original translation/rotation. As with the rotation option, users have full control over colouring, point of view and rendering styles. Note that the small molecule can be rendered (CPK, ball-and-stick) and coloured in a variety of ways.</p>
    <p>Oligomerization and self-assembly are handled in a very similar manner to small molecule docking. As with docking, only a single PDB file containing two or more macromolecules is required. However, when the self-assembly option is selected all macromolecular entities within the PDB file will be separated and reassembled. Users do not have the option to select a subset of molecules that are to be assembled or docked. The same centre of mass calculations, direction vector calculations, rotations and translations are repeated for all subunits in the oligomer to create a preliminary disassembled state. The complex is reassembled using the reverse rotation and translation operations. Note that both the docking and oligomerization animations are inherently ‘rigid’ dockings. No internal motions are currently generated for the interacting proteins or ligands.</p>
    <p>When MovieMaker's small-scale or vibrational motions option is selected only a single PDB file (containing a single chain) is needed. The key trick to most of MovieMaker's motion generation is to use Cartesian coordinate or torsion angle interpolation between a ‘perturbed’ state and a ‘ground’ state conformation. In Cartesian interpolation the intermediate positions between two states or positions are calculated in a linear fashion based on the coordinates between the two end-points and a chosen increment. The resulting images therefore depict a pathway that two conformers can take when morphing from one to the other. To create a perturbed state, MovieMaker generates random displacements of the <italic>x</italic>, <italic>y</italic> and <italic>z</italic> coordinates of between 0.0 and 1.0 Å for all heavy atoms in the original PDB file according to the magnitude of their corresponding <italic>B</italic> factors. Specifically, the <italic>ad hoc</italic> formula <italic>B</italic> = 100(|Δ<italic>x</italic>| + |Δ<italic>y</italic>| + |Δ<italic>z</italic>|) is used to calculate the <italic>x</italic>, <italic>y</italic> and <italic>z</italic> atomic displacements. If no <italic>B</italic> factors are present in the file a default value of 60 is used. These perturbed structures are then rendered and infinitely looped to create the illusion of a long-term MD simulation.</p>
    <p>When the structural ensemble motion option is selected, users must provide a PDB file containing two or more copies of the same protein molecule. This can include an NMR structure ensemble (typically 20–40 structures) or multiple copies (<xref ref-type="bibr" rid="b2">2</xref>–<xref ref-type="bibr" rid="b10">10</xref>) of the same protein in a single unit cell from a standard X-ray structure. If the molecules are not identical, MovieMaker will provide a warning and cancel the rendering operation. MovieMaker uses a recently developed superpositioning tool called SuperPose (<xref ref-type="bibr" rid="b11">11</xref>) to intelligently and automatically compare, rank and superimpose all structures in the ensemble or unit cell. Moving from the most similar pair to the least similar remaining pair of superimposed structures in the ensemble, Cartesian coordinate interpolation is performed to generate a series of intermediate structures. MovieMaker automatically takes into account the number of structures in the ensemble to select an optimal number of intermediate structures for a smooth, fluid transition between states. As with most other animations in MovieMaker, the ensemble motion option always morphs the structure from a starting state to a perturbed state and back so that the movie can be placed into a smoothly running infinite loop.</p>
    <p>To depict large-scale motions MovieMaker requires two PDB files, each containing the same protein but in a different conformation. As with the ensemble motion option, MovieMaker employs the SuperPose program to intelligently superimpose the two structures and identify any large-scale hinge or domain motions. Displacements between the two states are categorized (&lt;2 Å over &gt;90% of the protein length or &gt;2 Å over &gt;10% of the protein length) by calculating a difference distance matrix between the two superimposed coordinates. After the displacement has been categorized, intermediate structures are created by interpolating between the two end conformers. Both small motions and larger hinge motions can be mapped using the Cartesian interpolation method. Minor distortions creep in for very-large-scale hinge motions, but these distortions can be almost removed by increasing the number of intermediate structures generated between the two conformations.</p>
    <p>When the protein folding/unfolding option is selected only a single PDB file (containing a single, folded protein chain) is needed. For this kind of animation, coordinate interpolation must be done in torsion angle space as the intermediate structures simply get too distorted during the unfolding process. In torsion angle interpolation the native structure is regenerated using phi/psi/omega angles derived from the PDB file. This re-rendering in torsion space requires additional structural optimization and can take several minutes, depending on the size of the structure. Once rendered in torsion angle space, the backbone phi/psi angles are iteratively ‘relaxed’ to an unfolded or extended set of phi/psi torsion angles of −160° ± 10°. All intermediate structures are rendered using the same torsion angle structure generator (called PepMake). As always, MovieMaker morphs the structure from the starting state (folded) to the end state (unfolded) and back so that the movie can be placed into a smoothly running infinite loop.</p>
  </sec>
  <sec>
    <title>RESULTS AND DISCUSSION</title>
    <p>To assess the performance of MovieMaker we chose 30 random protein structures from the PDB consisting of single monomers, complex heteromultimers, NMR ensembles and a variety of proteins with bound ligands. The proteins or protein complexes ranged in size from 56 residues to 1450 residues. We assessed the performance of the program using three criteria, (i) realism, (ii) accuracy and (iii) speed, on as many different types of motions as possible. Assessing realism is somewhat qualitative and highly visual. However, we wanted to make sure that the resulting animations were smooth and did not lead to any obvious ‘breaches’ of the laws of physics such as atoms or chains passing through one another or serious distortions in secondary structure. Of nearly 30 animations studied using the default parameters we found only 4 animations that exhibited a mildly unrealistic chain distortion or a physically unrealistic event. These were confined primarily to animations with very large hinge movements. Apart from these ‘breaches’, vibrational and ensemble motions, rotations, docking, folding and hinge motions all appeared to be performed very well with no obvious problems.</p>
    <p>In terms of assessing the accuracy or realism of the small-scale vibrational and structural ensemble motions, we used myoglobin (153 residues, PDB 1MYF) and the pointed domain (110 residues, PDB 1BQV) to visually compare MovieMaker's movies with those generated via the MD simulation program GROMACS (<ext-link ext-link-type="uri" xlink:href="www.gromacs.org"/>). Comparing a short (10 ps) MD simulation for myoglobin calculated by GROMACS with the motion calculated by MovieMaker's small-scale vibrational motion generator, one can see very little difference (the two movies are available on MovieMaker's gallery page). Similarly, a long-term (2.5 ns) MD simulation from GROMACS for the pointed domain appears to be qualitatively similar to the ensemble animation generated by MovieMaker (see the gallery page). Finally hinge motion movements were tested with DNA polymerase beta, cyanovarin N, recoverin and calmodulin proteins. The morphs generated by MovieMaker and the Yale Molecular Motions server appear to be essentially identical for these hinge motion movements.</p>
    <p><xref ref-type="table" rid="tbl1">Table 1</xref> lists the approximate CPU time (2.0 GHz processor with 512 MB RAM) taken for each of the seven types of motion supported by MovieMaker. Obviously these times will vary with the load on the server and the speed of the user's Internet connection. It is clear that the rotation animation is the fastest (10 s), and the motion for the ensemble of structures is the slowest (260 s). Most animations are generated in &lt;30 s. This underlines one of the key strengths of MovieMaker—its speed. Using conventional MD or non-conventional MD simulations (such as adiabiatic dynamics, activated dynamics or Brownian dynamics) would typically take many hours or days of CPU time.</p>
  </sec>
  <sec>
    <title>CONCLUSION</title>
    <p>It is important to emphasize that MovieMaker is a molecular animation server, not a modelling or MD server. In animation or simulation one attempts to mimic reality using a variety of <italic>ad hoc</italic> rules that adhere to the general rules of physics. In modelling or MD, one attempts precisely to regenerate reality by solving Newton's equations of motion using well-calibrated molecular force fields. Simulation or animation is frequently employed by video game developers, cartoonists and special effects artists to generate illusions of motion, speed or impact. Rather than attempting to solve Newton's equations for every motion or event, most simulation specialists employ rapidly calculable interpolations and <italic>ad hoc</italic> rules to generate the necessary visual effect. This allows them to quickly generate the images needed for interactive game play or tight movie release deadlines. By opting for animation over modelling (i.e. mimicry over reality) we have been able to create a very fast and flexible molecular animation tool. Although the images and files generated by MovieMaker should not be used to calculate or predict key molecular parameters, they certainly could be of considerable use for many educational, instructive or illustrative purposes by non-MD specialists. We believe the animations produced by MovieMaker will potentially allow the easy creation of dynamic web pages, informative on line course notes and compelling PowerPoint presentations.</p>
  </sec>
</body>
<back>
  <ack>
    <p>Funding for this project was provided by the Protein Engineering Network of Centres of Excellence (PENCE), NSERC and Genome Prairie (a division of Genome Canada). Funding to pay the Open Access publication charges for this article was provided by Genome Prairie.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="b1">
      <label>1</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gehring</surname>
            <given-names>W.J.</given-names>
          </name>
          <name>
            <surname>Affolter</surname>
            <given-names>M.</given-names>
          </name>
          <name>
            <surname>Burglin</surname>
            <given-names>T.</given-names>
          </name>
        </person-group>
        <article-title>Homeodomain proteins</article-title>
        <source>Annu. Rev. Biochem.</source>
        <year>1994</year>
        <volume>63</volume>
        <fpage>487</fpage>
        <lpage>526</lpage>
        <pub-id pub-id-type="pmid">7979246</pub-id>
      </citation>
    </ref>
    <ref id="b2">
      <label>2</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Versées</surname>
            <given-names>W.</given-names>
          </name>
          <name>
            <surname>Decanniere</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Holsbeke</surname>
            <given-names>V.E.</given-names>
          </name>
          <name>
            <surname>Devroede</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Steyaert</surname>
            <given-names>J.</given-names>
          </name>
        </person-group>
        <article-title>Enzyme–substrate interactions in the purine-specific nucleoside hydrolase from <italic>Trypanosoma vivax</italic></article-title>
        <source>J. Biol. Chem.</source>
        <year>2002</year>
        <volume>277</volume>
        <fpage>15938</fpage>
        <lpage>15946</lpage>
        <pub-id pub-id-type="pmid">11854281</pub-id>
      </citation>
    </ref>
    <ref id="b3">
      <label>3</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cooke</surname>
            <given-names>R.</given-names>
          </name>
        </person-group>
        <article-title>The mechanism of muscle contraction</article-title>
        <source>CRC Crit. Rev. Biochem.</source>
        <year>1986</year>
        <volume>21</volume>
        <fpage>53</fpage>
        <lpage>118</lpage>
        <pub-id pub-id-type="pmid">3524992</pub-id>
      </citation>
    </ref>
    <ref id="b4">
      <label>4</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chong</surname>
            <given-names>L.T.</given-names>
          </name>
          <name>
            <surname>Snow</surname>
            <given-names>C.D.</given-names>
          </name>
          <name>
            <surname>Rhee</surname>
            <given-names>Y.M.</given-names>
          </name>
          <name>
            <surname>Pande</surname>
            <given-names>V.S.</given-names>
          </name>
        </person-group>
        <article-title>Dimerization of the p53 oligomerization domain: identification of a folding nucleus by molecular dynamics simulations</article-title>
        <source>J. Mol. Biol.</source>
        <year>2005</year>
        <volume>345</volume>
        <fpage>869</fpage>
        <lpage>878</lpage>
        <pub-id pub-id-type="pmid">15588832</pub-id>
      </citation>
    </ref>
    <ref id="b5">
      <label>5</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berneche</surname>
            <given-names>S.</given-names>
          </name>
          <name>
            <surname>Roux</surname>
            <given-names>B.</given-names>
          </name>
        </person-group>
        <article-title>Molecular dynamics of the KesA K(+) channel in a bilayer membrane</article-title>
        <source>Biophys. J.</source>
        <year>2000</year>
        <volume>78</volume>
        <fpage>2900</fpage>
        <lpage>2917</lpage>
        <pub-id pub-id-type="pmid">10827971</pub-id>
      </citation>
    </ref>
    <ref id="b6">
      <label>6</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oka</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Yagi</surname>
            <given-names>N.</given-names>
          </name>
          <name>
            <surname>Fuhisawa</surname>
            <given-names>T.</given-names>
          </name>
          <name>
            <surname>Kamikubo</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Tokunaga</surname>
            <given-names>F.</given-names>
          </name>
          <name>
            <surname>Kataoka</surname>
            <given-names>M.</given-names>
          </name>
        </person-group>
        <article-title>Time-resolved x-ray diffraction reveals multiple conformations in the M-N transition of the bacteriorhodopsin photocycle</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>2000</year>
        <volume>97</volume>
        <fpage>14278</fpage>
        <lpage>14282</lpage>
        <pub-id pub-id-type="pmid">11106390</pub-id>
      </citation>
    </ref>
    <ref id="b7">
      <label>7</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Petrache</surname>
            <given-names>H.I.</given-names>
          </name>
          <name>
            <surname>Tu</surname>
            <given-names>K.</given-names>
          </name>
          <name>
            <surname>Nagle</surname>
            <given-names>J.F.</given-names>
          </name>
        </person-group>
        <article-title>Analysis of simulated NMR order parameters for lipid bilayer structure determination</article-title>
        <source>Biophys. J.</source>
        <year>1999</year>
        <volume>76</volume>
        <fpage>2479</fpage>
        <lpage>2487</lpage>
        <pub-id pub-id-type="pmid">10233065</pub-id>
      </citation>
    </ref>
    <ref id="b8">
      <label>8</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krebs</surname>
            <given-names>W.G.</given-names>
          </name>
          <name>
            <surname>Gerstein</surname>
            <given-names>M.</given-names>
          </name>
        </person-group>
        <article-title>The morph server: a standardized system for analyzing and visualizing macromolecular motions in a database framework</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>1665</fpage>
        <lpage>1675</lpage>
        <pub-id pub-id-type="pmid">10734184</pub-id>
      </citation>
    </ref>
    <ref id="b9">
      <label>9</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Westbrook</surname>
            <given-names>J.D.</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z.</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L.</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>H.M.</given-names>
          </name>
        </person-group>
        <article-title>The Protein Data Bank and structural genomics</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>489</fpage>
        <lpage>491</lpage>
        <pub-id pub-id-type="pmid">12520059</pub-id>
      </citation>
    </ref>
    <ref id="b10">
      <label>10</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kraulis</surname>
            <given-names>P.J.</given-names>
          </name>
        </person-group>
        <article-title>MOLSCRIPT: a program to produce both detailed and schematic plots of protein structures</article-title>
        <source>J. Appl. Crystallogr.</source>
        <year>1991</year>
        <volume>24</volume>
        <fpage>946</fpage>
        <lpage>950</lpage>
      </citation>
    </ref>
    <ref id="b11">
      <label>11</label>
      <citation citation-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Maiti</surname>
            <given-names>R.</given-names>
          </name>
          <name>
            <surname>Domselaar</surname>
            <given-names>G.H.V.</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>H.</given-names>
          </name>
          <name>
            <surname>Wishart</surname>
            <given-names>D.S.</given-names>
          </name>
        </person-group>
        <article-title>SuperPose: a simple server for sophisticated structural superposition</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>W590</fpage>
        <lpage>W594</lpage>
        <pub-id pub-id-type="pmid">15215457</pub-id>
      </citation>
    </ref>
  </ref-list>
  <sec sec-type="display-objects">
    <title>Figures and Tables</title>
    <fig id="fig1" position="float">
      <label>Figure 1</label>
      <caption>
        <p>A screenshot of the MovieMaker home page showing the different animation options.</p>
      </caption>
      <graphic xlink:href="gki485f1"/>
    </fig>
    <table-wrap id="tbl1" position="float">
      <label>Table 1</label>
      <caption>
        <p>Summary of different simulation or animation scenarios and the CPU time taken to complete the calculation</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead>
          <tr>
            <th align="left" colspan="1" rowspan="1">Simulation example</th>
            <th align="left" colspan="1" rowspan="1">PDB IDs</th>
            <th align="left" colspan="1" rowspan="1">Time taken (s)<xref ref-type="table-fn" rid="tf1-1">a</xref></th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="left" colspan="1" rowspan="1">Simple rotation about <italic>Z</italic> axis</td>
            <td align="left" colspan="1" rowspan="1">4Q21</td>
            <td align="right" colspan="1" rowspan="1">10</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">Motion between two end-state conformers</td>
            <td align="left" colspan="1" rowspan="1">1A29 &amp; 1CLL</td>
            <td align="right" colspan="1" rowspan="1">15</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">Small-scale vibrational motions</td>
            <td align="left" colspan="1" rowspan="1">1MYF_A</td>
            <td align="right" colspan="1" rowspan="1">16</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">Oligomerization (assembly/disassembly)</td>
            <td align="left" colspan="1" rowspan="1">1C48</td>
            <td align="right" colspan="1" rowspan="1">25</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">Ligand docking</td>
            <td align="left" colspan="1" rowspan="1">1A29 &amp; TFP</td>
            <td align="right" colspan="1" rowspan="1">20</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">NMR ensemble simulation</td>
            <td align="left" colspan="1" rowspan="1">1BQV</td>
            <td align="right" colspan="1" rowspan="1">260</td>
          </tr>
          <tr>
            <td align="left" colspan="1" rowspan="1">Protein folding/unfolding</td>
            <td align="left" colspan="1" rowspan="1">1A29</td>
            <td align="right" colspan="1" rowspan="1">215</td>
          </tr>
        </tbody>
      </table>
      <table-wrap-foot>
        <fn id="tf1-1">
          <p><sup>a</sup>Times will vary according to server load and PDB file size.</p>
        </fn>
      </table-wrap-foot>
    </table-wrap>
  </sec>
</back>

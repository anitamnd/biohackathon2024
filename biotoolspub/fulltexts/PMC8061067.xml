<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8061067</article-id>
    <article-id pub-id-type="publisher-id">4129</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-021-04129-0</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methodology Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GRAPES-DD: exploiting decision diagrams for index-driven search in biological graph databases</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Licheri</surname>
          <given-names>Nicola</given-names>
        </name>
        <address>
          <email>licheri@di.unito.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1637-7545</contrib-id>
        <name>
          <surname>Bonnici</surname>
          <given-names>Vincenzo</given-names>
        </name>
        <address>
          <email>vincenzo.bonnici@univr.it</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Beccuti</surname>
          <given-names>Marco</given-names>
        </name>
        <address>
          <email>beccuti@di.unito.it</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Giugno</surname>
          <given-names>Rosalba</given-names>
        </name>
        <address>
          <email>rosalba.giugno@univr.it</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.7605.4</institution-id><institution-id institution-id-type="ISNI">0000 0001 2336 6580</institution-id><institution>University of Turin, </institution></institution-wrap>Via Pessinetto 12, 10149 Turin, Italy </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.5611.3</institution-id><institution-id institution-id-type="ISNI">0000 0004 1763 1124</institution-id><institution>University of Verona, </institution></institution-wrap>Strada le Grazie 15, 37134 Verona, Italy </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>4</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>4</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>209</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>7</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>13</day>
        <month>4</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Graphs are mathematical structures widely used for expressing relationships among elements when representing biomedical and biological information. On top of these representations, several analyses are performed. A common task is the search of one substructure within one graph, called target. The problem is referred to as one-to-one subgraph search, and it is known to be NP-complete. Heuristics and indexing techniques can be applied to facilitate the search. Indexing techniques are also exploited in the context of searching in a collection of target graphs, referred to as one-to-many subgraph problem. Filter-and-verification methods that use indexing approaches provide a fast pruning of target graphs or parts of them that do not contain the query. The expensive verification phase is then performed only on the subset of promising targets. Indexing strategies extract graph features at a sufficient granularity level for performing a powerful filtering step. Features are memorized in data structures allowing an efficient access. Indexing size, querying time and filtering power are key points for the development of efficient subgraph searching solutions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">An existing approach, GRAPES, has been shown to have good performance in terms of speed-up for both one-to-one and one-to-many cases. However, it suffers in the size of the built index. For this reason, we propose GRAPES-DD, a modified version of GRAPES in which the indexing structure has been replaced with a Decision Diagram. Decision Diagrams are a broad class of data structures widely used to encode and manipulate functions efficiently. Experiments on biomedical structures and synthetic graphs have confirmed our expectation showing that GRAPES-DD has substantially reduced the memory utilization compared to GRAPES without worsening the searching time.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">The use of Decision Diagrams for searching in biochemical and biological graphs is completely new and potentially promising thanks to their ability to encode compactly sets by exploiting their structure and regularity, and to manipulate entire sets of elements at once, instead of exploring each single element explicitly. Search strategies based on Decision Diagram makes the indexing for biochemical graphs, and not only, more affordable allowing us to potentially deal with huge and ever growing collections of biochemical and biological structures.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Query processing</kwd>
      <kwd>Pattern matching</kwd>
      <kwd>Subgraph isomorphism</kwd>
      <kwd>Graph indexing</kwd>
      <kwd>Decision diagrams</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100007364</institution-id>
            <institution>Fondazione CRT</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100007364</institution-id>
            <institution>Fondazione CRT</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100012740</institution-id>
            <institution>Gruppo Nazionale per l’Analisi Matematica, la Probabilitàe le loro Applicazioni</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100012740</institution-id>
            <institution>Gruppo Nazionale per l’Analisi Matematica, la Probabilitàe le loro Applicazioni</institution>
          </institution-wrap>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par11">Graphs are a well-known mathematical structure used to encode relationships among elements of a set. They are employed in the representation of many biochemical systems at various levels from molecular representation [<xref ref-type="bibr" rid="CR1">1</xref>], to protein-protein or RNA-mate interaction networks [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR3">3</xref>] including also disease characterization [<xref ref-type="bibr" rid="CR4">4</xref>]. The search for substructures, also called subgraphs, in biochemical systems is widely involved in many bioinformatic approaches as well as in the field of computational chemistry. Subgraph searching is a preliminary step in finding motifs in biological networks [<xref ref-type="bibr" rid="CR5">5</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. Network motifs are statistically over-represented sub-structures. They are building blocks of complex networks [<xref ref-type="bibr" rid="CR8">8</xref>]. Several types of motifs have been discovered [<xref ref-type="bibr" rid="CR9">9</xref>] such as the feed-forward loops that define patterns in gene regulatory networks [<xref ref-type="bibr" rid="CR10">10</xref>]. Detection of motifs is a computationally challenging problem which requires the exhaustive search of subgraphs within a given network. Subgraph searching is also applied for tuning model parameters in biomolecular simulations [<xref ref-type="bibr" rid="CR11">11</xref>]. In this context, graph-based representation of molecules facilitates the searching of fragments in large collections of molecules. Reliable model parameters are estimated based on the frequency of retrieved fragments. Moreover, collections of metabolic networks are queried in order to identify conserved pathways [<xref ref-type="bibr" rid="CR12">12</xref>]. Because of the complexity of the querying task, many approaches limit the search to simple structures such as paths or small subgraphs [<xref ref-type="bibr" rid="CR13">13</xref>]. Subgraph searching is also applied for biological network alignment, that is a powerful instrument for predicting functionalities of newly discovered elements [<xref ref-type="bibr" rid="CR14">14</xref>]. Alignment can exploit the search of small subgraphs, also called seeds, within the set of networks that have to be aligned, in order to reduce the computational time requirements [<xref ref-type="bibr" rid="CR15">15</xref>]. Other alignment tools, such as RINQ [<xref ref-type="bibr" rid="CR16">16</xref>], use indexing schemes. Index-based strategy drives the alignment process to specific portion of the graphs and avoids expensive computations. Subgraph searching is also a baseline procedure in biomedical database systems<xref ref-type="fn" rid="Fn1">1</xref> consisting of genes, compounds, diseases, symptoms, side effects and annotations, integrated in networks. The networks are queried in order to prioritize gene-disease associations [<xref ref-type="bibr" rid="CR17">17</xref>] or for drug re-purposing studies [<xref ref-type="bibr" rid="CR18">18</xref>]. However, querying biological networks is a challenging task which, in many cases, increases its complexity with the query size [<xref ref-type="bibr" rid="CR19">19</xref>].</p>
    <p id="Par12">The subgraph searching problem consists in finding a query graph within a target graph. It is a well-studied computational problem which is known to be NP-complete [<xref ref-type="bibr" rid="CR20">20</xref>]. A generalization of such formulation considers more than one target graph. This is typically referred to as <italic>one-to-many</italic> in contrast to the original formulation that is referred to as <italic>one-to-one</italic>. Techniques for solving the one-to-one problem are mainly based on heuristics to speed-up the searching of a mapping function. Instead, the main efforts for solving the one-to-many problem are focused on developing a good filtering strategy for discarding target graphs belonging to the collection that do not contain the query graph. In particular, the most effective methodology for filtering strategy is the creation of an index in which features of the target graphs are stored. Then, when searching for a specific query graph, the target graphs are filtered by comparing the features of the query to those of the target graphs via the index. Thus, indexes are aimed at providing a very compact representation of the set of features and their correspondence to the target graphs. Performance in terms of construction time, size, querying time and filtering power are key concepts for their development. Such a performance is strictly related to the type of feature that is taken into account.</p>
    <p id="Par13">In details one-to-one approaches can be divided in two categories: <italic>pure subgraph isomorphism</italic> and <italic>assisted solvers</italic>. The first category is composed by algorithms that are focused on improving the performances of the combinatorial search by exploiting heuristic methods for pruning the search space, such as VF2 [<xref ref-type="bibr" rid="CR21">21</xref>] and VF3 [<xref ref-type="bibr" rid="CR22">22</xref>], or by changing the order in which query vertices are matched, such as RI [<xref ref-type="bibr" rid="CR23">23</xref>]. The second category comprises algorithms able to efficiently reduce the number of target vertices that are candidate to match with query vertices. This reduction is obtained by indexing the target graph and by comparing the features assigned to target vertices with those of the query vertices. Indexing means that a predefined type of features are extracted from the graph and they are stored in a data structure in order to recognize in which parts of the graph, or in which graphs of a collection, a given feature occurs. Once candidates are retrieved, this information is also used for generating a quasi-optimal ordering of the query vertices. In this perspective, GraphQL [<xref ref-type="bibr" rid="CR24">24</xref>] uses a pseudo subgraph isomorphism test, while TurboISO [<xref ref-type="bibr" rid="CR25">25</xref>] exploits a tree-structured auxiliary index, and CSL [<xref ref-type="bibr" rid="CR26">26</xref>] postpones Cartesian products with a matching order that prioritizes the query vertices in the core structure, similar to RI.</p>
    <p id="Par14">One-to-many approaches can be differentiated by the type of features they take into account (e.g. paths, trees, cycles or subgraphs) and how they extract them. GraphGrep [<xref ref-type="bibr" rid="CR27">27</xref>], GraphGrepSX [<xref ref-type="bibr" rid="CR28">28</xref>], GRAPES [<xref ref-type="bibr" rid="CR29">29</xref>] and SING [<xref ref-type="bibr" rid="CR30">30</xref>] extract paths by indexed graphs with simple enumeration procedures, but they differ in the type of data structure and additional information they use. Simple enumeration is also used by CT-Index [<xref ref-type="bibr" rid="CR31">31</xref>] for extracting trees and cycles, and by GDIndex [<xref ref-type="bibr" rid="CR32">32</xref>] and GCode [<xref ref-type="bibr" rid="CR33">33</xref>] for extracting subgraphs. On the contrary, mining-based algorithms recognize <italic>frequent</italic> features with <italic>ad hoc</italic> procedures. SwiftIndex [<xref ref-type="bibr" rid="CR34">34</xref>] and TreePi [<xref ref-type="bibr" rid="CR35">35</xref>] extract frequent trees, as well as Tree+Delta [<xref ref-type="bibr" rid="CR36">36</xref>] which also retrieves frequent substructures. Mining of subgraph is also performed by CP-index [<xref ref-type="bibr" rid="CR37">37</xref>], gIndex [<xref ref-type="bibr" rid="CR38">38</xref>], FG-Index [<xref ref-type="bibr" rid="CR39">39</xref>] and Lindex+ [<xref ref-type="bibr" rid="CR40">40</xref>]. Alternatively, signatures based on the pairs of vertex labels of the graphs can be exploited [<xref ref-type="bibr" rid="CR41">41</xref>]. Mining-based approaches require high amount of time because of the mining step, however they are able to build more compact indexes with respect to the approaches based on the exhaustive enumeration.</p>
    <p id="Par15">In recent years, one-to-one approaches have reached a high performance. In many cases, they outperform the indexing methodologies of one-to-many approaches by simply scanning all the target graphs in a collection. However, when the number of graphs in the collection is relatively high, or when the target graphs have relatively large size, indexing techniques are still predominant, and hybrid approaches are investigated [<xref ref-type="bibr" rid="CR42">42</xref>]. In [<xref ref-type="bibr" rid="CR43">43</xref>], authors proposed an algorithm for the one-to-many problem which exploits a technique that it is usually embedded in one-to-one approaches, such as GraphQL, TurboIso and CFL. The technique consists in a pre-processing step for detecting the set of target vertices that are most probable to be matched with a given query vertices by looking at their connectivity. Authors have equipped the verification phase of GraphGrepSX, GRAPES and CT-Index with such a technique showing that modified one-to-many algorithm, in particular GRAPES, sensibly outperform GraphQL, TurboIso and CFL for the verification step. However, such a modification is added up to the original indexing techniques of the algorithms, thus it only helps in increasing the filtering power but it does not solve problems linked to the size and build time of the original index. Similar considerations can be done for cache-assisted frameworks [<xref ref-type="bibr" rid="CR44">44</xref>, <xref ref-type="bibr" rid="CR45">45</xref>]. In this perspective, compression of the index plays a central role for both one-to-one and one-to-many approaches [<xref ref-type="bibr" rid="CR46">46</xref>, <xref ref-type="bibr" rid="CR47">47</xref>].</p>
    <p id="Par16">A performance study [<xref ref-type="bibr" rid="CR48">48</xref>] finds that index-based approaches have several issues in building indices on large graph databases in terms of number of distinct labels, number of vertices in data graphs, density of target graphs and number of target graphs due to their poor time and space efficiency of index construction. Among the tested algorithms, GRAPES showed the best performance in terms of running time. However, its index requires a relatively high memory amount compared to the other approaches. GRAPES is implemented both as sequential and parallel software using symmetric multiprocessing (SMP) architectures. In addition, GRAPES was developed for achieving good performance in collection of graphs as well as in scanning a query over a single large target graph. For these reasons, we decided to improve the performance of the sequential version of GRAPES by reducing the memory required for its index. We investigated the use of decision diagrams for reaching the goal without degrading the running time of the algorithm. Synthetic graphs were engaged for evaluating the performance of the modified version. In addition, a well established collection of biochemical graphs have been used for testing. Results show that the modified version, called GRAPES-DD, can reduce the size of the index of a factor of five orders of magnitude. The reduced index size helps the algorithm in optimizing accesses to primary memory, and as a result it can speed the building time of GRAPES-DD up with respect to the original algorithm in the same situations. GRAPES-DD is available at the following online repositories <ext-link ext-link-type="uri" xlink:href="https://github.com/qBioTurin/grapes-dd">https://github.com/qBioTurin/grapes-dd</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/InfOmics/grapes-dd">https://github.com/InfOmics/grapes-dd</ext-link>.</p>
  </sec>
  <sec id="Sec2">
    <title>Background</title>
    <sec id="Sec3">
      <title>Path-based graph indexing</title>
      <p id="Par17">Graph indexing strategies based on labelled paths consist in extracting all the paths in the graphs up to a given length (number of nodes which they are composed) and compactly storing them into a data structure [<xref ref-type="bibr" rid="CR27">27</xref>, <xref ref-type="bibr" rid="CR28">28</xref>, <xref ref-type="bibr" rid="CR49">49</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. These techniques show good performance in terms of filtering power and construction/querying time. However, the size of the index is still a major problem with these approaches.</p>
      <p id="Par18">In what follows, we describe one of these techniques, called GRAPES [<xref ref-type="bibr" rid="CR29">29</xref>]. GRAPES is the base methodology used here to apply MTMDDs (Multi-Terminal Multi-way Decision Diagram) to graph indexing.</p>
      <sec id="Sec4">
        <title>GRAPES indexing</title>
        <p id="Par19">GRAPES [<xref ref-type="bibr" rid="CR29">29</xref>] provides one of the most recent implementation of path-based graph indexing. It searches a query graph in one or more target graphs. For each path of the target graphs, GRAPES stores the identification of its starting vertices and the number of its occurrences in each graph. During searching phase, paths are extracted from the query graph and searched in the index. By comparing the ordered sequence of labels and the count of the occurrences, GRAPES effectively filters out target graphs which do not contain the query graph.</p>
        <p id="Par20">Formally, a path in a graph is an ordered sequence of vertices such that each vertex is connected with the next vertex by an edge. Thus, given a graph <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G = (V,E)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>G</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>V</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq1.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$E:V\times V$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi>E</mml:mi><mml:mo>:</mml:mo><mml:mi>V</mml:mi><mml:mo>×</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq2.gif"/></alternatives></inline-formula>, a path <italic>p</italic> of length <italic>l</italic> is a vector <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v^p_1, v^p_2, \dots , v^p_l)$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mn>2</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq3.gif"/></alternatives></inline-formula> such that <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v^p_i \in V$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo>∈</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq4.gif"/></alternatives></inline-formula>, for <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \le i \le l$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq5.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(v^p_i,v^p_{i+1}) \in E$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>i</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>∈</mml:mo><mml:mi>E</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq6.gif"/></alternatives></inline-formula>, for <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1 \le i &lt; l$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq7.gif"/></alternatives></inline-formula>. Given a set of labels <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M16"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq8.gif"/></alternatives></inline-formula>, a graph is labelled via a function <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_{\sigma }:\Sigma \mapsto V$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>σ</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo>↦</mml:mo><mml:mi>V</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq9.gif"/></alternatives></inline-formula> which maps each vertex to a label in <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M20"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq10.gif"/></alternatives></inline-formula>. The same label can be associated with different vertices. A labelled path <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\hat{p}}$$\end{document}</tex-math><mml:math id="M22"><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq11.gif"/></alternatives></inline-formula> is obtained by mapping the vertices of a path to their corresponding labels via the <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_\sigma$$\end{document}</tex-math><mml:math id="M24"><mml:msub><mml:mi>f</mml:mi><mml:mi>σ</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq12.gif"/></alternatives></inline-formula> function, thus <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\hat{p}} = (f_\sigma (v^p_1),f_\sigma (v^p_2),\dots ,f_\sigma (v^p_l) ) = (\sigma ^p_1,\sigma ^p_2,\dots ,\sigma ^p_l)$$\end{document}</tex-math><mml:math id="M26"><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>σ</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>σ</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mn>2</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>σ</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>v</mml:mi><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq13.gif"/></alternatives></inline-formula>. In GRAPES labelled paths are stored in a trie, a tree structure which compacts paths by their longest common prefixes. Given two labelled paths, <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\hat{p}}=(\sigma ^p_1,\sigma ^p_2,\dots ,\sigma ^p_l)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq14.gif"/></alternatives></inline-formula> and <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\hat{q}}=(\sigma ^q_1,\sigma ^q_2,\dots ,\sigma ^q_l)$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mover accent="true"><mml:mi>q</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>1</mml:mn><mml:mi>q</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn><mml:mi>q</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>l</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq15.gif"/></alternatives></inline-formula>, that share the first <italic>i</italic> labels, <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\sigma ^p_1,\sigma ^p_2,\dots ,\sigma ^p_i) = (\sigma ^q_1,\sigma ^q_2,\dots ,\sigma ^q_i)$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>1</mml:mn><mml:mi>q</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mn>2</mml:mn><mml:mi>q</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>i</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq16.gif"/></alternatives></inline-formula>, a branch, starting from the root of the tree, is built in order to represent the shared part of the paths. Then, the branch is split into two different branches that represent the non shared suffixes of the paths, <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\sigma ^p_{i+1},\dots ,\sigma ^p_l)$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>p</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq17.gif"/></alternatives></inline-formula> and <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\sigma ^q_{i+1},\dots ,\sigma ^q_l)$$\end{document}</tex-math><mml:math id="M36"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>q</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>σ</mml:mi><mml:mi>l</mml:mi><mml:mi>q</mml:mi></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq18.gif"/></alternatives></inline-formula>. Information regarding the starting vertices, <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v^p_1$$\end{document}</tex-math><mml:math id="M38"><mml:msubsup><mml:mi>v</mml:mi><mml:mn>1</mml:mn><mml:mi>p</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq19.gif"/></alternatives></inline-formula> and <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v^q_1$$\end{document}</tex-math><mml:math id="M40"><mml:msubsup><mml:mi>v</mml:mi><mml:mn>1</mml:mn><mml:mi>q</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq20.gif"/></alternatives></inline-formula>, is stored on the corresponding leaves of the branches, as well as the number of time each path occurs in each target graph. If only paths of the same length were extracted, the information would reside only on the leaves of the trie. By considering paths of variable length up to a maximum length <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p$$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq21.gif"/></alternatives></inline-formula>, the information also resides on intermediate nodes of the trie.</p>
      </sec>
      <sec id="Sec5">
        <title>GRAPES filtering and verification</title>
        <p id="Par21">During querying phase, labelled paths are extracted from the query. Similarly to the extraction of paths from target graphs, for each path the number of times it occurs in the query graph is retrieved. Initially, all the target graphs are candidates to contain the query graph. Query paths are searched in the index in order to recognize the target graphs that contain the same paths of the query. For each path, the number of occurrences within the target graph must be equal or exceed the number of its occurrences in the query graph. By using the starting nodes of the paths stored in the index, the initial structures of target graphs are skimmed in order to extract only the vertices that are the starting point of paths in the query graph. Thus, the filtering procedure produces two different results, a list of graphs that may contain the query (since each selected graph contains the same labelled path of the query with the same amount), and for each selected graph the list of vertices that are candidate to match with the query vertices. The verification phase is performed with the VF2 algorithm [<xref ref-type="bibr" rid="CR21">21</xref>] which solves the subgraph isomorphism problem. The problem of searching a query graph within a target graph consists in finding a mapping between the vertices of the query and target graphs such that constraints are satisfied. Constraints regard the compatibility of labels assigned to the vertices and the existence of the query edges between the corresponding query-target mapped vertices.</p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Decision diagrams</title>
      <p id="Par22">Decision diagrams (DDs) are a broad class of data structures widely used to encode and manipulate functions efficiently [<xref ref-type="bibr" rid="CR51">51</xref>]. Initially, they were proposed for industrial hardware verification due to their ability of encoding complex Boolean functions on very large domains. Then, they were successfully applied in different research fields ranging from the network reliability analysis [<xref ref-type="bibr" rid="CR52">52</xref>] to the performance evaluation of stochastic systems [<xref ref-type="bibr" rid="CR53">53</xref>]. In these contexts, DDs have proven to be an effective tool (1) to encode compactly structured sets by exploiting their structure and regularity; (2) to manipulate entire sets of elements at once, instead of exploring each single element explicitly.</p>
      <p id="Par23">In this paper we will focus on a specific type of decision diagram, which is called Multi-Terminal Multi-way Decision Diagram (MTMDD). Formally, an MTMDD is a rooted, directed, acyclic graph representing a function <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f: \mathrm{I\!N}_{x_1} \times \dots \times \mathrm{I\!N}_{x_K} \rightarrow {\mathcal {R}}$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi>f</mml:mi><mml:mo>:</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">I</mml:mi><mml:mspace width="-0.166667em"/><mml:mi mathvariant="normal">N</mml:mi></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:mo>×</mml:mo><mml:mo>⋯</mml:mo><mml:mo>×</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">I</mml:mi><mml:mspace width="-0.166667em"/><mml:mi mathvariant="normal">N</mml:mi></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:msub><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="script">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq22.gif"/></alternatives></inline-formula> over a set of variables <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{x_1, \dots , x_K\}$$\end{document}</tex-math><mml:math id="M46"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq23.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathrm{I\!N}_{x_k} \subset {\mathbb {N}}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="normal">I</mml:mi><mml:mspace width="-0.166667em"/><mml:mi mathvariant="normal">N</mml:mi></mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub><mml:mo>⊂</mml:mo><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq24.gif"/></alternatives></inline-formula> is the finite set of values that variable <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_k$$\end{document}</tex-math><mml:math id="M50"><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq25.gif"/></alternatives></inline-formula> can assume, and <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathcal {R}} \subset {\mathbb {N}}$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi mathvariant="script">R</mml:mi><mml:mo>⊂</mml:mo><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq26.gif"/></alternatives></inline-formula> is the finite set of possible function values [<xref ref-type="bibr" rid="CR54">54</xref>]. An MTMDD node can be either <italic>terminal</italic> or <italic>non-terminal</italic>. A terminal node has no outgoing edges and is labeled with a constant <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n \in {\mathcal {R}}$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mi mathvariant="script">R</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq27.gif"/></alternatives></inline-formula>. A non-terminal node <italic>m</italic> is labeled with a variable <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$var(m) \in \{x_1, .. x_K\}$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq28.gif"/></alternatives></inline-formula> and has exactly <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_{var(m)} = |\mathrm{I\!N}_{var(m)}|$$\end{document}</tex-math><mml:math id="M58"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">I</mml:mi><mml:mspace width="-0.166667em"/><mml:mi mathvariant="normal">N</mml:mi></mml:mrow><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq29.gif"/></alternatives></inline-formula> outgoing edges pointing to its children nodes. We refer to the <italic>i</italic>-th child of node <italic>m</italic> as <italic>child</italic>(<italic>m</italic>, <italic>i</italic>), with <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$0 \le i &lt; N_{var(m)}$$\end{document}</tex-math><mml:math id="M60"><mml:mrow><mml:mn>0</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq30.gif"/></alternatives></inline-formula>. The evaluation of the function represented by a given MTMDD, for a given assignment of its variables, can be determined by tracing a path from the root to one of the terminal nodes.<fig id="Fig1"><label>Fig. 1</label><caption><p>Different kind of MTMDD encoding the function counting the occurrences of an element into the multiset <italic>S</italic>: <bold>a</bold> an OMTMDD; <bold>b</bold> a ROMTMDD; <bold>c</bold> a QROMTMDD</p></caption><graphic xlink:href="12859_2021_4129_Fig1_HTML" id="MO1"/></fig><fig id="Fig2"><label>Fig. 2</label><caption><p>A multiplication operation between two QROMTMDD</p></caption><graphic xlink:href="12859_2021_4129_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par24">A simple example of MTMDD is reported in Fig. <xref rid="Fig1" ref-type="fig">1</xref>a. This MTMDD encodes the function counting the occurrences of an element into a multiset <italic>S</italic><xref ref-type="fn" rid="Fn2">2</xref> where each element is described by a tuple <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(x_1, x_2, x_3, x_4)$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq31.gif"/></alternatives></inline-formula> with <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1 \in \{0,1\}$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq32.gif"/></alternatives></inline-formula>, <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_2 \in \{0,1,2\}$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq33.gif"/></alternatives></inline-formula>, <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_3 \in \{0,1,2,3\}$$\end{document}</tex-math><mml:math id="M68"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq34.gif"/></alternatives></inline-formula> and <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_4 \in \{0,1,2,3\}$$\end{document}</tex-math><mml:math id="M70"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>∈</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq35.gif"/></alternatives></inline-formula>. Thus, the MTMDD path from the root assuming <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_4 = 2, x_3 = 3, x_2 = 0, x_1 = 1$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq36.gif"/></alternatives></inline-formula> and leading to terminal node 3 means that the element (1, 0, 3, 2) has three occurrences in the multiset <italic>S</italic>.</p>
      <p id="Par25">An MTMDD is denoted <italic>ordered MTMDD</italic> (OMTMDD) when a total order is defined on its variables (i.e., <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_l \succ x_k \Leftrightarrow l&gt; k$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo>≻</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">⇔</mml:mo><mml:mi>l</mml:mi><mml:mo>&gt;</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq37.gif"/></alternatives></inline-formula>) such that every path through the MTMDD visits nodes according to this ordering. It is important to notice that the choice of the ordering for the variables of an MTMDD can strongly affect the size of the MTMDD, i.e. its number of nodes. Unluckily, finding the optimal variable ordering is known to be a NP-complete problem [<xref ref-type="bibr" rid="CR55">55</xref>]. As a consequence, the efficiency of application based on decision diagram data structures is strongly dependent on the development of domain-specific heuristics to select a good ordering. The MTMDD depicted in Figure <xref rid="Fig1" ref-type="fig">1</xref>(a) is hence an OMTMDD with the following variable ordering: <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_4 \succ x_3 \succ x_2 \succ x_1$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>4</mml:mn></mml:msub><mml:mo>≻</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>3</mml:mn></mml:msub><mml:mo>≻</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>≻</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq38.gif"/></alternatives></inline-formula>.</p>
      <p id="Par26">Different reduction rules have been proposed to reduce significantly the number of nodes of the MTMDD without affecting the represented function. An OMTMDD is called reduced (ROMTMDD) if it contains neither redundant nor duplicated nodes. A redundant node is a non-terminal node <italic>m</italic> having all its children identical; i.e. <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$child(m, i) = child(m, j)$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq39.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i, j \in \mathrm{I\!N}_{var(m)}$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>j</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">I</mml:mi><mml:mspace width="-0.166667em"/><mml:mi mathvariant="normal">N</mml:mi></mml:mrow><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq40.gif"/></alternatives></inline-formula>. As a consequence, the value of the function does not depend on the value of that variable. Duplicate nodes are two non-terminal nodes <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_1$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq41.gif"/></alternatives></inline-formula> and <inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_2$$\end{document}</tex-math><mml:math id="M84"><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq42.gif"/></alternatives></inline-formula> labeled with the same variable and with identical children; i.e. <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$var(m_1) = var(m_2) \wedge child(m_1, i) = child(m_2, i)$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∧</mml:mo><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>c</mml:mi><mml:mi>h</mml:mi><mml:mi>i</mml:mi><mml:mi>l</mml:mi><mml:mi>d</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq43.gif"/></alternatives></inline-formula> for all <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i \in \mathrm{I\!N}_{var(m_1)}$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">I</mml:mi><mml:mspace width="-0.166667em"/><mml:mi mathvariant="normal">N</mml:mi></mml:mrow><mml:mrow><mml:mi>v</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>m</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq44.gif"/></alternatives></inline-formula>.</p>
      <p id="Par27">In Fig. <xref rid="Fig1" ref-type="fig">1</xref>a the nodes <italic>p</italic> and <italic>q</italic>, colored in cyan, are an example of duplicate nodes, while <italic>r</italic> and <italic>s</italic> are an example of redundant ones. The corresponding ROMTDDD (i.e. without redundant and duplicated nodes) is instead reported in Fig. <xref rid="Fig1" ref-type="fig">1</xref>b. For sake of clarity, it is common to explicitly represent only those paths ending to the terminal nodes different from zero.</p>
      <p id="Par28">A common variation of the above reduction rule is to allow redundant nodes but no duplicate nodes. An OMTMDD is called quasi-reduced (QROMTMDD) if it contains no duplicate nodes and if all paths from the root node to a terminal node visit exactly one node for each variable. In Fig. <xref rid="Fig1" ref-type="fig">1</xref>c the quasi-reduced version of the OMTMDD in Fig. <xref rid="Fig1" ref-type="fig">1</xref>a is depicted.</p>
      <p id="Par29">Many DD packages implement the reductions stated above storing all the DDs in a single, multi-rooted graph structure, known as <italic>unique-table</italic> [<xref ref-type="bibr" rid="CR56">56</xref>], where no two nodes are duplicated. In order to simplify, from this point on we shall refer to OMTMDD, ROMTMDD and QROMTMDD, simply as MTMDD.</p>
      <p id="Par30">MTMDDs can be manipulated applying the arithmetic operators (e.g. addition, multiplication, ...). Let <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_1$$\end{document}</tex-math><mml:math id="M90"><mml:msub><mml:mi>d</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_2$$\end{document}</tex-math><mml:math id="M92"><mml:msub><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq46.gif"/></alternatives></inline-formula> be two MTMDDs over the same domain, representing the functions <inline-formula id="IEq47"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_1$$\end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq47.gif"/></alternatives></inline-formula> and <inline-formula id="IEq48"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_2$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>f</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq48.gif"/></alternatives></inline-formula>, respectively, and let <inline-formula id="IEq49"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\diamond$$\end{document}</tex-math><mml:math id="M98"><mml:mo>⋄</mml:mo></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq49.gif"/></alternatives></inline-formula> be a generic binary operator. Then, the result of the <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_1 \diamond d_2$$\end{document}</tex-math><mml:math id="M100"><mml:mrow><mml:msub><mml:mi>d</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>⋄</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq50.gif"/></alternatives></inline-formula> operation is an MTMDD which encodes the function <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_1 \diamond f_2$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>⋄</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq51.gif"/></alternatives></inline-formula>. For instance, the multiplication between <inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_1$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>d</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq52.gif"/></alternatives></inline-formula> and <inline-formula id="IEq53"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_2$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>d</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq53.gif"/></alternatives></inline-formula> results in an MTMDD such that the terminal node corresponding to the variable assignment <inline-formula id="IEq54"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1, x_2, \dots , x_K$$\end{document}</tex-math><mml:math id="M108"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>K</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq54.gif"/></alternatives></inline-formula> is given by <inline-formula id="IEq55"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_1(x_1,\dots ,x_K)\cdot f_2(x_1,\dots ,x_K)$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>K</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq55.gif"/></alternatives></inline-formula>. The implementation of such operators is based on a recursive descent of the data structure and exploits a computed-table [<xref ref-type="bibr" rid="CR56">56</xref>] to cache the result of each intermediate call to the algorithm. Figure <xref rid="Fig2" ref-type="fig">2</xref> depicts the result of a multiplication between two MTMDDs. Only those variable assignments associated with value different from zero in both the factor MTMDD are reported, because the other assignments are linked to zero.</p>
      <p id="Par31">In the literature different software libraries implementing decision diagrams were proposed, such as CUDD [<xref ref-type="bibr" rid="CR57">57</xref>], LibDDD [<xref ref-type="bibr" rid="CR58">58</xref>] and Meddly [<xref ref-type="bibr" rid="CR59">59</xref>]. In this work, we chose to use Meddly because of its efficiency and its ease of use. In fact, it provides a simple interface in which the complex aspects of using DDs (e.g. caching and garbage collection, ...) are automatically handled. Meddly, short for Multi-way and Edge-valued Decision Diagram LibrarY, is an open-source software library supporting natively MTMDDs, as well as a number of other types of DDs such as Binary Decision Diagrams, Matrix Diagrams and Edge-Valued MDDs. All DDs represented in Meddly are ordered and without duplicates. In Meddly, a named collection of decision diagrams associated with the same domain is called a <italic>forest</italic>. Within a forest, Meddly automatically removes duplicate nodes by means of a unique table, imposes reduction rules and handles memory management of the nodes.</p>
      <p id="Par32">Meddly provides two different user interfaces: a <italic>basic interface</italic> which provides the basic operators to easily create and manipulate DDs, and an <italic>expert interface</italic> which allows user to extend the existent operators and/or to integrate new ones. In this work, we implemented our tool by taking advantage of the basic interface of Meddly; in particular the following operators were exploited:<list list-type="bullet"><list-item><p id="Par33">createEdge() creates a new DD in the given forest by explicitly stating the return values for a set of variable assignments. Unspecified assignments are assumed to return a default value, which depends on the forest type (usually it is 0). For example, given the forest <italic>F</italic> and some variable assignments <inline-formula id="IEq56"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Y=(y_1,\dots ,y_k)$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:mi>Y</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq56.gif"/></alternatives></inline-formula>, <inline-formula id="IEq57"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$W=(w_1,\dots ,w_k)$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:mi>W</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq57.gif"/></alternatives></inline-formula> and <inline-formula id="IEq58"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Z=(z_1,\dots ,z_k)$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:mi>Z</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq58.gif"/></alternatives></inline-formula>, a call to F.createEdge(<italic>Y</italic>, <italic>W</italic>, <italic>Z</italic>, <italic>a</italic>, <italic>b</italic>, <italic>c</italic>) creates a new DD within <italic>F</italic> representing the function <disp-formula id="Equ1"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} f(x_1,\dots ,x_k) = {\left\{ \begin{array}{ll} a &amp;{} \text{ if } x_1=y_1 \wedge \dots \wedge x_k=y_k \\ b &amp;{} \text{ if } x_1=w_1 \wedge \dots \wedge x_k=w_k \\ c &amp;{} \text{ if } x_1=z_1 \wedge \dots \wedge x_k=z_k \\ 0 &amp;{} \text{ otherwise } \end{array}\right. } \end{aligned}$$\end{document}</tex-math><mml:math id="M118" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>f</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mi>a</mml:mi></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>∧</mml:mo><mml:mo>⋯</mml:mo><mml:mo>∧</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>y</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>b</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>∧</mml:mo><mml:mo>⋯</mml:mo><mml:mo>∧</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mi>c</mml:mi></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>∧</mml:mo><mml:mo>⋯</mml:mo><mml:mo>∧</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>z</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mn>0</mml:mn></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mspace width="0.333333em"/><mml:mtext>otherwise</mml:mtext><mml:mspace width="0.333333em"/></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="12859_2021_4129_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula></p></list-item><list-item><p id="Par34">evaluate() determines the value of the function represented by the DD for a given assignment of its variables. Then, the call dd.evaluate(<inline-formula id="IEq59"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1,\dots ,x_k$$\end{document}</tex-math><mml:math id="M120"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq59.gif"/></alternatives></inline-formula>) returns the terminal value linked to the path <inline-formula id="IEq60"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_1,\dots ,x_k$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mi>x</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>x</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq60.gif"/></alternatives></inline-formula> of the decision diagram <italic>dd</italic>.</p></list-item><list-item><p id="Par35">apply() is used to manipulate DD applying on it a specific DD operator. Meddly supports both unary and binary operators and imposes that operands of binary operators must have the same domain, but they can live in different forests.</p></list-item></list></p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Methods</title>
    <p id="Par36">GRAPES uses a trie, also known as prefix tree, to store the indexed graphs, since it provides a compact representation of a set of strings by taking advantage of their common prefixes, considerably reducing the data redundancy. In fact, a labeled path <inline-formula id="IEq61"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\sigma _1\sigma _2\dots \sigma _l)$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq61.gif"/></alternatives></inline-formula> may be represented as a string <inline-formula id="IEq62"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_e(\sigma _1)f_e(\sigma _2)\dots f_e(\sigma _l)$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>⋯</mml:mo><mml:msub><mml:mi>f</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:mi>l</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq62.gif"/></alternatives></inline-formula> where <inline-formula id="IEq63"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$f_e:\Sigma \rightarrow {\mathbb {N}}$$\end{document}</tex-math><mml:math id="M128"><mml:mrow><mml:msub><mml:mi>f</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>:</mml:mo><mml:mi mathvariant="normal">Σ</mml:mi><mml:mo stretchy="false">→</mml:mo><mml:mi mathvariant="double-struck">N</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq63.gif"/></alternatives></inline-formula> is the mapping function from labels to the natural numbers.</p>
    <p id="Par37">Nevertheless, the tree structure of a trie (i.e. only a single edge can point to a node) makes it hard to exploit other types of symmetries present in the indexed graphs, as for instance the sharing of the same starting vertices and/or same relative occurrence number, as well as the sharing of common substrings which are not prefixes.</p>
    <p id="Par38">To deal with these aspects, in this work we propose to encode the indexed graphs into a DD, specifically an MTMDD: a trie generalization in which the requirement to have a tree structure is relaxed allowing multiple arcs to point to the same node. The main advantage of this is a potentially more compact representation due to the MTMDD ability to better exploit the regular structure of the data, such as common substrings present in the indexed graph paths. This allows the proposed methodology not only to reduce the memory utilization required to build and store the index, but also to reduce the time required for the pruning phase.<fig id="Fig3"><label>Fig. 3</label><caption><p>GRAPES-DD workflow with path length <inline-formula id="IEq64"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p=3$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq64.gif"/></alternatives></inline-formula></p></caption><graphic xlink:href="12859_2021_4129_Fig3_HTML" id="MO4"/></fig><fig id="Fig4"><label>Fig. 4</label><caption><p>GRAPES-DD indexing of a target graph using a MTMDD built from partial tries</p></caption><graphic xlink:href="12859_2021_4129_Fig4_HTML" id="MO5"/></fig></p>
    <p id="Par39">The GRAPES-DD workflow is reported in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. The workflow is composed by two main phases: (1) the <italic>index building phase</italic> in which an MTMDD indexing the collection of target graphs is created, and (2) the <italic>filtering phase</italic> in which, given a query graph, the set of target graphs is potentially restricted to those sub-graphs probably containing the query. The GRAPES-DD verification phase remains as in the original version of the software (see Sect. 2.1.2 and [<xref ref-type="bibr" rid="CR29">29</xref>] for details).</p>
    <sec id="Sec8">
      <title>Index building phase</title>
      <p id="Par40">The index building phase takes as input a collection of target graphs <inline-formula id="IEq65"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\mathbb {G}}^t = \{ G^t_1, G^t_2, \dots , G^t_n\}}$$\end{document}</tex-math><mml:math id="M132"><mml:mrow><mml:msup><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow><mml:mi>t</mml:mi></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msubsup><mml:mi>G</mml:mi><mml:mn>1</mml:mn><mml:mi>t</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mi>G</mml:mi><mml:mn>2</mml:mn><mml:mi>t</mml:mi></mml:msubsup><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mi>G</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:msubsup><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq65.gif"/></alternatives></inline-formula> and the maximum path length <inline-formula id="IEq66"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p$$\end{document}</tex-math><mml:math id="M134"><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq66.gif"/></alternatives></inline-formula> and returns as output an MTMDD that maps each path to the total number of times it appears in the graph for a specific input vertex. We will refer to this MTMDD as <italic>index MTMDD</italic>.</p>
      <p id="Par41">In details, the first level of the index MTMDD stores the identification of the vertices of the indexed graphs. Then, the labelled paths are stored from the second to the last level of the MTMDD, one label per level starting from the first label of the path. Finally, the total occurrence number of the labelled paths in each indexed graph resides on the terminal nodes of the MTMDD.</p>
      <p id="Par42">An example of such a data structure is reported in Fig. <xref rid="Fig3" ref-type="fig">3</xref>b. This MTMDD is created considering the three target graphs, <inline-formula id="IEq67"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq67.gif"/></alternatives></inline-formula>, <inline-formula id="IEq68"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M138"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq68.gif"/></alternatives></inline-formula> and <inline-formula id="IEq69"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_3$$\end{document}</tex-math><mml:math id="M140"><mml:msub><mml:mi>G</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq69.gif"/></alternatives></inline-formula> in Fig. <xref rid="Fig3" ref-type="fig">3</xref>a and <inline-formula id="IEq70"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p=3$$\end{document}</tex-math><mml:math id="M142"><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq70.gif"/></alternatives></inline-formula>. Since in the first level of the MTMDD all the vertices of the target graphs are enumerated, its domain is [1, 15]. Then, for each vertex in <inline-formula id="IEq71"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^t_i$$\end{document}</tex-math><mml:math id="M144"><mml:msubsup><mml:mi>G</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq71.gif"/></alternatives></inline-formula> all the labelled paths up to length 3 starting from it are added in the MTMDD. Special nodes, namely <italic>unlabelled</italic> nodes and colored gray in Fig. <xref rid="Fig3" ref-type="fig">3</xref>b, are introduced to deal with labelled paths having length smaller than <inline-formula id="IEq72"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p$$\end{document}</tex-math><mml:math id="M146"><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq72.gif"/></alternatives></inline-formula>. This is needed because MTMDDs cannot directly encode paths with different lengths.</p>
      <p id="Par43">Practically, the index MTMDD is created in an incremental manner, processing one graph at the time. Thus, the vertices of each graph are initially grouped based on their labels. For each of these groups, all the labelled paths containing up to <inline-formula id="IEq73"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq73.gif"/></alternatives></inline-formula> vertices are retrieved by depth-limited search on the graph. These paths are stored temporally in a trie to efficiently count the occurrence of each labelled path in <inline-formula id="IEq74"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^t_i$$\end{document}</tex-math><mml:math id="M150"><mml:msubsup><mml:mi>G</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq74.gif"/></alternatives></inline-formula>. Before considering a new group, the trie is explored to create the corresponding MTMDD using the createEdge operator of Meddly and then is discarded. The created MTMDD is merged to the index MTMDD using the apply function with operator addition. Once the building phase is over, the MTMDD index is stored into a textual file.</p>
      <p id="Par44">Figure <xref rid="Fig4" ref-type="fig">4</xref> shows the building steps for the target graph <inline-formula id="IEq75"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M152"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq75.gif"/></alternatives></inline-formula> with <inline-formula id="IEq76"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l_p=3$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>p</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq76.gif"/></alternatives></inline-formula>. The vertices of <inline-formula id="IEq77"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M156"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq77.gif"/></alternatives></inline-formula> are indeed divided into four groups (i.e. <inline-formula id="IEq78"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{1,5\}$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq78.gif"/></alternatives></inline-formula>, <inline-formula id="IEq79"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{2,3\}$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>3</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq79.gif"/></alternatives></inline-formula>, <inline-formula id="IEq80"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{4\}$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>4</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq80.gif"/></alternatives></inline-formula> and <inline-formula id="IEq81"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{6\}$$\end{document}</tex-math><mml:math id="M164"><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq81.gif"/></alternatives></inline-formula>) depending on their label. For each group the corresponding temporary trie and MTMDD are reported. The original GRAPES index is the union of the tries shown in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. Thus, it contains the root node and 25 (<inline-formula id="IEq82"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$9+8+4+4$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mn>9</mml:mn><mml:mo>+</mml:mo><mml:mn>8</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn><mml:mo>+</mml:mo><mml:mn>4</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq82.gif"/></alternatives></inline-formula>) nodes representing labelled paths, plus 13 nodes for storing the occurrences count, 13 nodes for storing the ids of the starting vertices in correspondence of each path, for a total of 51 nodes. On the contrary, the final MTMDD structure contains a single node storing all the six vertices ids, 13 nodes for the labelled paths and one node for the occurrence count, for a total of 15 nodes. In addition, the trie stores 39 links between its nodes, while the MTMDD stores 23 links.</p>
    </sec>
    <sec id="Sec9">
      <title>Filtering phase</title>
      <p id="Par45">The <italic>filtering phase</italic> takes as input the index MTMDD and a query graph <inline-formula id="IEq83"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^q$$\end{document}</tex-math><mml:math id="M168"><mml:msup><mml:mi>G</mml:mi><mml:mi>q</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq83.gif"/></alternatives></inline-formula> that has to be searched within the graph collection. As output, the filtering phase provides for each graph the list of candidate vertices to match the query. Therefore, only these vertices will be subsequently tested using the subgraph isomorphism algorithm.</p>
      <p id="Par46">The algorithm initially builds the <italic>query MTMDD</italic> to represent the query graph through the use of its features (i.e. paths), which is shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>d. The vertices of the query graph are not represented in the corresponding MTMDD. The first level of such MTMDD contains all the vertex ids of <inline-formula id="IEq84"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^t_i$$\end{document}</tex-math><mml:math id="M170"><mml:msubsup><mml:mi>G</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq84.gif"/></alternatives></inline-formula>, meaning that initially each vertex of <inline-formula id="IEq85"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^t_i$$\end{document}</tex-math><mml:math id="M172"><mml:msubsup><mml:mi>G</mml:mi><mml:mi>i</mml:mi><mml:mi>t</mml:mi></mml:msubsup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq85.gif"/></alternatives></inline-formula> is candidate to match any path of <inline-formula id="IEq86"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^q$$\end{document}</tex-math><mml:math id="M174"><mml:msup><mml:mi>G</mml:mi><mml:mi>q</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq86.gif"/></alternatives></inline-formula>.</p>
      <p id="Par47">The multiplication operator (using the apply function) is applied between the index and the query MTMDDs, in order to extract from the index the information about the vertices really involved in the current query. We called <italic>pruned MTMDD</italic> the result of such multiplication, which is depicted in Fig. <xref rid="Fig3" ref-type="fig">3</xref>e. We see that only the subgraph composed by the vertices {1,2,6} is kept from <inline-formula id="IEq87"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M176"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq87.gif"/></alternatives></inline-formula>, <inline-formula id="IEq88"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M178"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq88.gif"/></alternatives></inline-formula> is entirely kept and <inline-formula id="IEq89"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_3$$\end{document}</tex-math><mml:math id="M180"><mml:msub><mml:mi>G</mml:mi><mml:mn>3</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq89.gif"/></alternatives></inline-formula> is totally discarded because it does not contain any feature in <inline-formula id="IEq90"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^q$$\end{document}</tex-math><mml:math id="M182"><mml:msup><mml:mi>G</mml:mi><mml:mi>q</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq90.gif"/></alternatives></inline-formula>.</p>
      <p id="Par48">The set of candidate vertices obtained is then filtered to keep only those graphs whose vertices satisfy the constraints imposed by the query. For each vertex <inline-formula id="IEq91"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_q$$\end{document}</tex-math><mml:math id="M184"><mml:msub><mml:mi>v</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq91.gif"/></alternatives></inline-formula> of the query and a potentially matching vertex <italic>v</italic> of a target graph <inline-formula id="IEq92"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_i$$\end{document}</tex-math><mml:math id="M186"><mml:msub><mml:mi>G</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq92.gif"/></alternatives></inline-formula>, the algorithm verifies that (1) any path starting from <inline-formula id="IEq93"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_q$$\end{document}</tex-math><mml:math id="M188"><mml:msub><mml:mi>v</mml:mi><mml:mi>q</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq93.gif"/></alternatives></inline-formula> also starts from <italic>v</italic> and that (2) the occurrence number of each path in the target graph is not less than the occurrence number of the same path in the query graph. Figure <xref rid="Fig3" ref-type="fig">3</xref> shows that the graph <inline-formula id="IEq94"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1$$\end{document}</tex-math><mml:math id="M190"><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq94.gif"/></alternatives></inline-formula> is filtered out because the occurrence number of its features are not sufficient to satisfy the constraint imposed by <inline-formula id="IEq95"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G^q$$\end{document}</tex-math><mml:math id="M192"><mml:msup><mml:mi>G</mml:mi><mml:mi>q</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq95.gif"/></alternatives></inline-formula>, while all the vertices of <inline-formula id="IEq96"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_2$$\end{document}</tex-math><mml:math id="M194"><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq96.gif"/></alternatives></inline-formula> passed the filtering phase.</p>
      <p id="Par49">Finally, for each vertex of the query, the algorithm reports the list of the matchable vertices of the indexed graphs passing the pruning phase. The overall effect is that the algorithm extracts from the graph collection all the maximally connected components composed only by the vertices involved in the query graph. Over these components, the GRAPES subgraph isomorphism algorithm can be executed to find all the occurrences of the query graph [<xref ref-type="bibr" rid="CR29">29</xref>].</p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Results</title>
    <sec id="Sec11">
      <title>Datasets description</title>
      <p id="Par50">For this study, we considered six different types of graphs. Four of them are real graphs widely used as a benchmarks in the fields of bioinformatics and computational chemistry, the others are synthetically generated by means of the Barabasi–Albert’s and the Forest-Fire models. the choice of such two synthetic models has been taken according to their properties of the topologies to be similar the graphs used in biological databases. Differently from collections of real graphs, synthetic topologies allow us to investigate the performance of compared methods in relation to the parameters of such models, and thus to the properties of the produced topologies.</p>
      <sec id="Sec12">
        <title>Biochemical structures</title>
        <p id="Par51">The collection of biochemical graphs was initially used for evaluating the performance of one-to-one subgraph isomorphism algorithms [<xref ref-type="bibr" rid="CR60">60</xref>], and, nowadays, it is a well-established benchmark for graph theory problems linked to the subgraph isomorphism [<xref ref-type="bibr" rid="CR61">61</xref>]. These four datasets that compose the collection are described in what follows.</p>
        <p id="Par52"><italic>AIDS</italic> is the standard database for Antiviral Screen [<xref ref-type="bibr" rid="CR62">62</xref>], and it consists of 40k chemical structures representing small molecules. Vertices are atoms and edge are the chemical bounds linking them. Vertices are labelled by the atomic element they represent, and there are a total of 62 distinct elements. The average number of vertices per graph is 44.98, and the average degree is 4.17.</p>
        <p id="Par53"><italic>PDBS</italic> is a benchmark composed of 600 target graphs representing the topological structure of proteins [<xref ref-type="bibr" rid="CR63">63</xref>, <xref ref-type="bibr" rid="CR64">64</xref>]. Vertices are the atoms and edges are chemio-physical bounds between them. These graphs have up to 16,431 vertices and 33,562 edges, with an average degree over the whole dataset equal to 4.27. There are a total of 10 unique labels, corresponding to the atomic types.</p>
        <p id="Par54"><italic>PCM</italic> is composed of three-dimensional structures of protein, called protein contact maps [<xref ref-type="bibr" rid="CR65">65</xref>]. Vertices represent the amino acids of a protein and edges informs about the spatial proximity of amino acids. The dataset contains 200 target graphs having up to 883 vertices and 18,832 edges, with an average of 376 vertices per graph and 44.78 edges per vertex. There are a total of 21 labels of which 18 appears on average in each graph.</p>
        <p id="Par55"><italic>PPI</italic> is a dataset of 20 protein-protein interaction target graphs of 5 different species: <italic>Caenorhabditis elegants, Drosophila melanogaster, Mus musculus, Saccaromyces cerevisae</italic> and <italic>Homo sapiens</italic> [<xref ref-type="bibr" rid="CR66">66</xref>]. Vertices are proteins and edges are predicted physical interactions between them. For each species, different thresholds on the accurateness of the prediction were applied, ranging from 0.4, 0.5, 0.6–0.7. Vertices are labelled according to their functional category, for a total of 45 distinct categories. The dataset contains graphs up to 10,186 vertices and 179,348 edges, an average degree of 18.46 and an average number of distinct labels per graph equal to 28.45.</p>
        <p id="Par56">For all of the biochemical datasets, queries were extracted from the target graphs by fixing the desired number of edges, from 4, 8, 18–32, and such that the topological structure of the extracted graph reflects the properties of the graph of origin.</p>
      </sec>
      <sec id="Sec13">
        <title>Synthetic graphs</title>
        <p id="Par57">The Barabasi-Albert’s model is able to reproduce a graph with an observed stationary scale-free distribution, which reflects many of the structures that can be encountered in nature [<xref ref-type="bibr" rid="CR67">67</xref>]. Starting from an initial set of vertices, <inline-formula id="IEq97"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m_0$$\end{document}</tex-math><mml:math id="M196"><mml:msub><mml:mi>m</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq97.gif"/></alternatives></inline-formula>, the model inserts one vertex at time to the graph. At each insertion, new edges are added in order to connect the new vertex with existing ones. The probability of an edge with vertex <italic>i</italic> is <inline-formula id="IEq98"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_i = k_i^{\alpha }$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msubsup><mml:mi>k</mml:mi><mml:mi>i</mml:mi><mml:mi>α</mml:mi></mml:msubsup></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq98.gif"/></alternatives></inline-formula>, where <italic>k</italic> is the vertex degree and <inline-formula id="IEq99"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M200"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq99.gif"/></alternatives></inline-formula> is a user defined parameter. The benchmark contains 384 target graphs which were generated by fixing a desired number of vertices and average degree. Generated graphs have 200, 500, 1k, 5k, 10k and 20k vertices. In addition, three copies of each generated network are made in order to provide a labelled version of the initial structure with three different percentages of distinct labels, 0.1%, 1% and 10%. Labels are assigned randomly to vertices according to a uniform distribution.</p>
        <p id="Par58">The second type of synthetic graphs were generated according to the Forest-Fire model [<xref ref-type="bibr" rid="CR68">68</xref>], that is inspired by forest growing behaviours, and which imposes a geometric distribution with mean <inline-formula id="IEq100"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p/(1-p)$$\end{document}</tex-math><mml:math id="M202"><mml:mrow><mml:mi>p</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq100.gif"/></alternatives></inline-formula> which is used for randomly extract links between two distinct vertices. This benchmark contains 160 target graphs having the same number of vertices of the Barabasi-Albert benchmark, and they were labelled in the same way of the previous model. Moreover, the graphs were generated by varying the value of the model parameter <italic>p</italic> as 0.1, 0.3, 0.5, 0.7 and 0.9.</p>
        <p id="Par59">For both synthetic benchmarks, query graphs were extracted from the generated target graphs. The extraction was performed by fixing the number of desired vertices, ranging from 4, 8, 24, 32–64, and by extracting all edges among the selected vertices.</p>
        <p id="Par60">For more details regarding the two sets of synthetic benchmarks, the reader can refer to [<xref ref-type="bibr" rid="CR69">69</xref>].</p>
      </sec>
    </sec>
    <sec id="Sec14">
      <title>Experimental setup and output</title>
      <p id="Par61">We evaluated the performance of GRAPES-DD, with respect to its predecessor GRAPES, by taking into account both space and time requirements. In particular, we focused on the amount of primary memory that the two approaches require during the execution, reported as <italic>memory peak</italic>, as well as the space needed to store the built index in the hard disk, reported as <italic>index size</italic>. In addition, we compared the running time required by the two approaches for building the index. The analysis was mainly focused on the index construction phase because it is the main difference between the two approaches. They share the same methodology for what concerns the matching phase. In addition, the filtering time can be considered negligible with respect to the total querying time.</p>
      <p id="Par62">Both GRAPES-DD and GRAPES have been containerized in a Docker [<xref ref-type="bibr" rid="CR70">70</xref>] image in order to ensure both functional and computational reproducibility of the experiments. The dockerfile to build the image is provided together with the source code, and it is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/qBioTurin/grapes-dd">https://github.com/qBioTurin/grapes-dd</ext-link> or at <ext-link ext-link-type="uri" xlink:href="https://github.com/InfOmics/grapes-dd">https://github.com/InfOmics/grapes-dd</ext-link>. Both the tools were implemented in C++ and compiled with gcc 6.3.0. Then, the experiments have been carried out on a server equipped with four processors AMD Opteron 6167 2.20 GHz and 502 GB of RAM. Since GRAPES is a natively parallel software while GRAPES-DD is sequential, the experiments were executed using GRAPES with a single-thread.<fig id="Fig5"><label>Fig. 5</label><caption><p>GRAPES/GRAPES-DD ratios of memory peak (as a RAM requirement) and index size (as a storage requirement), obtained by indexing Barabasi-Albert graphs. The chart was made by using the <italic>boxplot</italic> function of the Python3 Pandas module</p></caption><graphic xlink:href="12859_2021_4129_Fig5_HTML" id="MO6"/></fig></p>
      <p id="Par63">Figures <xref rid="Fig5" ref-type="fig">5</xref> and <xref rid="Fig6" ref-type="fig">6</xref> show memory peak and index size on the synthetic datasets obtained by indexing one target graph at time. Values are calculated taking into account three different grouping strategies that reflect the way in which the datasets are generated. Plots were generated via the <italic>Pandas</italic> framework available for Python<xref ref-type="fn" rid="Fn3">3</xref>. In details, datasets were grouped by (1) percentage of distinct labels with respect to the total number of vertices of the graph, (2) number of vertices and (3) value of the Barabasi-Albert model parameter <inline-formula id="IEq101"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M204"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq101.gif"/></alternatives></inline-formula> or Forest-Fire parameter <italic>p</italic>.</p>
      <p id="Par64">Results show that, independently from the label percentage and model parameters, the performance of GRAPES-DD improves as the number of vertices of the indexed graph increases. In fact, for graphs having less than 5k vertices, the memory peak required by GRAPES-DD is higher than the peak of GRAPES, resulting in a ratio between the two values less than 1. The out-performance of GRAPES-DD can reach two/three orders of magnitude with respect to GRAPES, for graphs with 20k vertices, which means that the memory requirement of GRAPES-DD is one hundredth that of GRAPES.</p>
      <p id="Par65">Similar trends are observed for the size of the index when it is stored into the hard disk. In this case, the ratio can achieve five orders of magnitude as it is shown for the Forest-Fire graphs with 20k vertices. In general, best ratios are obtained for the Forest-Fire graphs with a high number of vertices, however, this behaviour is counterbalanced by the fact that on average Forest-Fire graphs with less than 5k vertices are also those with the lowest ratios.</p>
      <p id="Par66">For what concerns the memory peak, we can observe that the label percentage is a more crucial factor for the Barabasi–Albert model rather than for the Forest-fire model. More in general, a low label percentage is to the advantage to the trie structure of GRAPES because the extracted paths share and relatively high number of labels. Opposite trends are observed for what concerns the storing of the index.</p>
      <p id="Par67">As for the label percentage, model parameters produce less variation compared to the number of vertices. The Barabasi-Albert model produces scale-free networks where the distribution of the degrees of the vertices follows a power law. A value greater than 1 increases the skewness of the resultant distribution, while a value less than 1 flattens the distribution. Thus higher values trend to produce a more sparse graph. Results in Fig. <xref rid="Fig5" ref-type="fig">5</xref> show that GRAPES-DD performs better for dense graphs, namely for low values of the <inline-formula id="IEq102"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M206"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq102.gif"/></alternatives></inline-formula> parameter. The trend is confirmed by the results regarding the Forest-fire models (Fig. <xref rid="Fig6" ref-type="fig">6</xref>), where higher values of the <italic>p</italic> parameters produce more dense graphs.</p>
      <p id="Par68">GRAPES-DD reaches an average indexing compression ratio of 11.16 with respect to GRAPES when Barabasi-Albert networks are indexed. Instead, an average ratio of 9.46 is reached over the Forest-Fire collection. The better ratio obtained by GRAPES-DD highlights that the application of MTMDDs is advantageous for any of the two types of random graphs, however, it is more suitable for Barabasi-Albert networks that are considered more similar to biological networks.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Indexing comparison of GRAPES and GRAPES-DD of synthetic graphs in terms of RAM requirement, Storage requirement, and Building time</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left"/><th align="left"/><th align="left" colspan="3">RAM req. (MB)</th><th align="left" colspan="3">Storage req. (MB)</th><th align="left" colspan="2">Build time (s)</th></tr><tr><th align="left"/><th align="left"/><th align="left"/><th align="left">GRAPES-DD</th><th align="left">GRAPES</th><th align="left">ratio</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th><th align="left">ratio</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th></tr></thead><tbody><tr><td align="left" rowspan="6">Barabasi-A.</td><td align="left" rowspan="3"><italic>l</italic></td><td align="left">0.1%</td><td align="left">3649</td><td align="left">7935</td><td align="left">2.2</td><td align="left">305</td><td align="left">3,493</td><td align="left">11.5</td><td char="." align="char">470</td><td char="." align="char">109</td></tr><tr><td align="left">1%</td><td align="left">8229</td><td align="left">66,838</td><td align="left">8.1</td><td align="left">1543</td><td align="left">28,772</td><td align="left">18.6</td><td char="." align="char">646</td><td char="." align="char">214</td></tr><tr><td align="left">10%</td><td align="left">7876</td><td align="left">81,552</td><td align="left">10.4</td><td align="left">10,071</td><td align="left">34,368</td><td align="left">3.4</td><td char="." align="char">668</td><td char="." align="char">265</td></tr><tr><td align="left" rowspan="3"><inline-formula id="IEq103"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M208"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq103.gif"/></alternatives></inline-formula></td><td align="left">0.5</td><td align="left">2103</td><td align="left">94,654</td><td align="left">45.0</td><td align="left">24,915</td><td align="left">40,281</td><td align="left">1.6</td><td char="." align="char">516</td><td char="." align="char">330</td></tr><tr><td align="left">1</td><td align="left">8351</td><td align="left">58,519</td><td align="left">7.0</td><td align="left">16,602</td><td align="left">25,145</td><td align="left">1.5</td><td char="." align="char">766</td><td char="." align="char">213</td></tr><tr><td align="left">1.5</td><td align="left">1447</td><td align="left">3068</td><td align="left">2.1</td><td align="left">1246</td><td align="left">1219</td><td align="left">1.0</td><td char="." align="char">144</td><td char="." align="char">26</td></tr><tr><td align="left" rowspan="8">Forest-Fire</td><td align="left" rowspan="3"><italic>l</italic></td><td align="left">0.1%</td><td align="left">834</td><td align="left">3,929</td><td align="left">4.7</td><td align="left">121</td><td align="left">1,689</td><td align="left">13.9</td><td char="." align="left">63</td><td char="." align="char">29</td></tr><tr><td align="left">1%</td><td align="left">1308</td><td align="left">21,255</td><td align="left">16.2</td><td align="left">738</td><td align="left">9,229</td><td align="left">12.5</td><td char="." align="char">77</td><td char="." align="char">66</td></tr><tr><td align="left">10%</td><td align="left">1167</td><td align="left">24,936</td><td align="left">21.4</td><td align="left">5,351</td><td align="left">10,650</td><td align="left">2.0</td><td char="." align="char">62</td><td char="." align="char">70</td></tr><tr><td align="left" rowspan="5"><italic>p</italic></td><td align="left">0.1</td><td align="left">147</td><td align="left">1426</td><td align="left">9.7</td><td align="left">2,882</td><td align="left">585</td><td align="left">0.2</td><td char="." align="char">10</td><td char="." align="char">7</td></tr><tr><td align="left">0.3</td><td align="left">188</td><td align="left">2451</td><td align="left">13.1</td><td align="left">3,358</td><td align="left">1,024</td><td align="left">0.3</td><td char="." align="char">14</td><td char="." align="char">9</td></tr><tr><td align="left">0.5</td><td align="left">281</td><td align="left">4966</td><td align="left">17.7</td><td align="left">3,922</td><td align="left">2,109</td><td align="left">0.5</td><td char="." align="char">26</td><td char="." align="char">16</td></tr><tr><td align="left">0.7</td><td align="left">487</td><td align="left">11,694</td><td align="left">24.0</td><td align="left">4,535</td><td align="left">5,020</td><td align="left">1.1</td><td char="." align="char">57</td><td char="." align="char">37</td></tr><tr><td align="left">0.9</td><td align="left">988</td><td align="left">29,565</td><td align="left">29.9</td><td align="left">5,386</td><td align="left">12,840</td><td align="left">2.4</td><td char="." align="char">139</td><td char="." align="char">88</td></tr></tbody></table></table-wrap></p>
      <p id="Par69">Subsequently, we evaluated the performance of exploiting the MTMDD structure for indexing 14 collections of synthetic graphs (see Table <xref rid="Tab1" ref-type="table">1</xref>). The first three collections are obtained by grouping Barabasi–Albert graphs by the label percentage, such that graphs having the same percentage are contained in the same collection. Similarly, Forest-Fire graphs were grouped into three further collections. The grouping procedure was also performed by taking into account the <inline-formula id="IEq104"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha$$\end{document}</tex-math><mml:math id="M210"><mml:mi>α</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq104.gif"/></alternatives></inline-formula> and <italic>p</italic> model parameters. As for the previous analysis, the ratio is computed by dividing the values measured for the trie structure of GRAPES with those registered for the MTMDD of GRAPES-DD. As it has been shown for the single-graph analysis, the percentage of distinct labels with respect to the total number of vertices in the graphs) is a discriminant factor for the compression gain obtained by the MTMDD structure. Also the trends relative to the parameters of the models are confirmed. In general, the MTMDD structure is on average more convenient on the Forest-Fire graphs for what concerns the memory peak. Barabasi-Albert graphs with <inline-formula id="IEq105"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha = 0.5$$\end{document}</tex-math><mml:math id="M212"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mn>0.5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq105.gif"/></alternatives></inline-formula> are an exception to this trend, since they reach the maximum registered ratio equal to 45. In contrast to the single-graph analysis, the space required for storing the index into the hard disk does not provide the same advantage to the MTMDD structure. In fact, in the single-graph analysis the ratio reaches a value of <inline-formula id="IEq106"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$10^5$$\end{document}</tex-math><mml:math id="M214"><mml:msup><mml:mn>10</mml:mn><mml:mn>5</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="12859_2021_4129_Article_IEq106.gif"/></alternatives></inline-formula> that is two order of magnitude higher of the ratios obtained for the memory peak. On the contrary, these experiments show an inversion of the ratio such that the MTMDD structure reaches best results for the memory peak. It is notable to report that, while the trie structure requires a maximum of 94Gb of memory, the process for building the MTMDD-based index does not reaches the 9Gb of requirement, making it suitable for common personal computers.</p>
      <p id="Par70">Table <xref rid="Tab1" ref-type="table">1</xref> also shows the running time of the two approaches for building the index and for storing it. The MTMDD structure requires more time for its construction, the compression capability of the MTMDD must come with an unavoidable additional cost. However, the growth time is only a few minutes and the construction of the index is performed in a preprocessing phase, only once and reused for each query search.</p>
      <p id="Par71">Table <xref rid="Tab2" ref-type="table">2</xref> reports the complete set of experiments that were performed on the biochemical graphs. The experiments regard the indexing of the four different collections of real graphs. For this benchmark, ratios are less prominent compared to synthetic graphs, however many of them are higher than 1, confirming a gain in using the MTMDD structure rather than the trie. The trend for which paths extracted from more dense and more uniform graphs are better compacted by the MTMDD structure is confirmed. In fact, the best ratio is obtained for the <italic>PCM</italic> collection that contains the most dense graphs. However, the <italic>PCM</italic> collection is also the one with the lowest number of labels and a relatively small number of vertices. Thus, it seems that the density of the graphs is the key factor for the good performance of GRAPES-DD in biochemical graphs. In addition, in contrast with the results on the synthetic graphs, the running time of GRAPES-DD for the construction of index is generally faster than the time required by GRAPES. In these cases, the compression capability of the MTMDD comes without additional cost.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Indexing comparison of GRAPES and GRAPES-DD of biochemical datasets in terms of RAM requirement, Storage requirement, and Building time</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="3">RAM req. (MB)</th><th align="left" colspan="3">Storage req. (MB)</th><th align="left" colspan="2">Build time (s)</th></tr><tr><th align="left"/><th align="left">GRAPES-DD</th><th align="left">GRAPES</th><th align="left">ratio</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th><th align="left">ratio</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th></tr></thead><tbody><tr><td align="left"><italic>AIDS</italic></td><td align="left">5304</td><td align="left">1064</td><td align="left">0.20</td><td align="left">164</td><td align="left">39</td><td align="left">0.24</td><td align="left">170.12</td><td align="left">16</td></tr><tr><td align="left"><italic>PDBS</italic></td><td align="left">532</td><td align="left">556</td><td align="left">1.04</td><td align="left">22</td><td align="left">17</td><td align="left">0.78</td><td align="left">176.00</td><td align="left">10.07</td></tr><tr><td align="left"><italic>PCM</italic></td><td align="left">512</td><td align="left">7057</td><td align="left">13.77</td><td align="left">253</td><td align="left">1,392</td><td align="left">5.51</td><td align="left">617.24</td><td align="left">754.56</td></tr><tr><td align="left"><italic>PPI</italic></td><td align="left">629</td><td align="left">1698</td><td align="left">2.70</td><td align="left">166</td><td align="left">665</td><td align="left">4.00</td><td align="left">2514.18</td><td align="left">2906.65</td></tr></tbody></table></table-wrap><table-wrap id="Tab3"><label>Table 3</label><caption><p>Indexing comparison of GRAPES and GRAPES-DD of single PPI network in terms of RAM requirement, Storage requirement, and Building time</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left"/><th align="left"/><th align="left" colspan="3">RAM req. (MB)</th><th align="left" colspan="3">Storage req. (MB)</th><th align="left" colspan="2">Build time (s)</th></tr><tr><th align="left">Species</th><th align="left">|<italic>V</italic>|</th><th align="left">|<italic>E</italic>|</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th><th align="left">ratio</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th><th align="left">ratio</th><th align="left">GRAPES-DD</th><th align="left">GRAPES</th></tr></thead><tbody><tr><td align="left" rowspan="4"><italic>S. cerevisiae</italic></td><td align="left">4709</td><td align="left">40,284</td><td align="left">38.1</td><td align="left">91.1</td><td align="left">2.39</td><td align="left">10.5</td><td align="left">26.2</td><td align="left">2.49</td><td align="left">60.93</td><td align="left">63.49</td></tr><tr><td align="left">5,230</td><td align="left">53,699</td><td align="left">56.3</td><td align="left">136.3</td><td align="left">2.42</td><td align="left">11.7</td><td align="left">42.4</td><td align="left">3.63</td><td align="left">604.47</td><td align="left">630.92</td></tr><tr><td align="left">5,762</td><td align="left">76,482</td><td align="left">61.1</td><td align="left">150.9</td><td align="left">2.47</td><td align="left">12.7</td><td align="left">47.5</td><td align="left">3.73</td><td align="left">846.24</td><td align="left">879.90</td></tr><tr><td align="left">5,936</td><td align="left">89,674</td><td align="left">46.5</td><td align="left">121.2</td><td align="left">2.61</td><td align="left">12.9</td><td align="left">36.8</td><td align="left">2.86</td><td align="left">128.52</td><td align="left">135.01</td></tr><tr><td align="left" rowspan="4"><italic>C. elegans</italic></td><td align="left">1557</td><td align="left">2472</td><td align="left">7.1</td><td align="left">5.7</td><td align="left">0.80</td><td align="left">0.2</td><td align="left">0.3</td><td align="left">1.45</td><td align="left">0.24</td><td align="left">0.20</td></tr><tr><td align="left">2421</td><td align="left">3981</td><td align="left">7.8</td><td align="left">7.9</td><td align="left">1.02</td><td align="left">0.5</td><td align="left">1.0</td><td align="left">2.06</td><td align="left">0.52</td><td align="left">0.44</td></tr><tr><td align="left">3664</td><td align="left">7005</td><td align="left">10.4</td><td align="left">14.6</td><td align="left">1.40</td><td align="left">1.0</td><td align="left">2.8</td><td align="left">2.65</td><td align="left">1.33</td><td align="left">1.13</td></tr><tr><td align="left">6173</td><td align="left">26,184</td><td align="left">25.1</td><td align="left">58.5</td><td align="left">2.33</td><td align="left">4.3</td><td align="left">16.0</td><td align="left">3.75</td><td align="left">34.16</td><td align="left">34.19</td></tr><tr><td align="left" rowspan="4"><italic>D. melanogaster</italic></td><td align="left">1185</td><td align="left">2008</td><td align="left">8.0</td><td align="left">12.1</td><td align="left">1.51</td><td align="left">0.6</td><td align="left">1.5</td><td align="left">2.30</td><td align="left">0.31</td><td align="left">0.26</td></tr><tr><td align="left">2488</td><td align="left">6151</td><td align="left">12.1</td><td align="left">32.1</td><td align="left">2.65</td><td align="left">1.9</td><td align="left">6.6</td><td align="left">3.47</td><td align="left">3.28</td><td align="left">3.21</td></tr><tr><td align="left">2729</td><td align="left">7235</td><td align="left">13.3</td><td align="left">36.2</td><td align="left">2.73</td><td align="left">2.3</td><td align="left">7.9</td><td align="left">3.37</td><td align="left">4.30</td><td align="left">4.22</td></tr><tr><td align="left">7928</td><td align="left">37,542</td><td align="left">52.3</td><td align="left">198.7</td><td align="left">3.80</td><td align="left">13.1</td><td align="left">64.3</td><td align="left">4.90</td><td align="left">144.05</td><td align="left">156.07</td></tr><tr><td align="left" rowspan="4">M. musculus</td><td align="left">1810</td><td align="left">2413</td><td align="left">8.0</td><td align="left">13.1</td><td align="left">1.64</td><td align="left">0.7</td><td align="left">2.2</td><td align="left">2.94</td><td align="left">0.42</td><td align="left">0.36</td></tr><tr><td align="left">3255</td><td align="left">5424</td><td align="left">11.0</td><td align="left">31.0</td><td align="left">2.81</td><td align="left">1.9</td><td align="left">7.1</td><td align="left">3.68</td><td align="left">2.52</td><td align="left">2.50</td></tr><tr><td align="left">3758</td><td align="left">6853</td><td align="left">13.1</td><td align="left">43.6</td><td align="left">3.33</td><td align="left">2.6</td><td align="left">11.2</td><td align="left">4.30</td><td align="left">4.47</td><td align="left">4.61</td></tr><tr><td align="left">6875</td><td align="left">23,779</td><td align="left">41.1</td><td align="left">193.6</td><td align="left">4.71</td><td align="left">12.4</td><td align="left">62.1</td><td align="left">5.02</td><td align="left">76.64</td><td align="left">81.56</td></tr><tr><td align="left" rowspan="4"><italic>H. sapiens</italic></td><td align="left">4638</td><td align="left">10,665</td><td align="left">17.3</td><td align="left">55.0</td><td align="left">3.18</td><td align="left">3.6</td><td align="left">14.6</td><td align="left">4.07</td><td align="left">5.60</td><td align="left">5.36</td></tr><tr><td align="left">8728</td><td align="left">31,164</td><td align="left">53.5</td><td align="left">215.4</td><td align="left">4.02</td><td align="left">13.1</td><td align="left">70.8</td><td align="left">5.42</td><td align="left">65.14</td><td align="left">68.26</td></tr><tr><td align="left">9826</td><td align="left">48,835</td><td align="left">87.5</td><td align="left">351.4</td><td align="left">4.02</td><td align="left">21.5</td><td align="left">120.1</td><td align="left">5.59</td><td align="left">213.95</td><td align="left">230.16</td></tr><tr><td align="left">10,186</td><td align="left">51,484</td><td align="left">89.2</td><td align="left">391.8</td><td align="left">4.39</td><td align="left">22.0</td><td align="left">134.1</td><td align="left">6.10</td><td align="left">191.63</td><td align="left">209.63</td></tr></tbody></table></table-wrap></p>
      <p id="Par72">Collections of biochemical graphs were also used for evaluating the performance of GRAPES-DD during the querying phase in comparison with exiting approaches VF2 [<xref ref-type="bibr" rid="CR21">21</xref>] and CT-Index [<xref ref-type="bibr" rid="CR31">31</xref>]. VF2 is a non-indexed approach used by GRAPES and GRAPES-DD in the verification phase. The comparison with it allows us to evaluate the effectiveness of using indexing in graph searching applications. CT-Index is a index-based graph searching solution that uses paths as indexing features. Biochemical graphs have already been used for investigating the performance of GRAPES, VF2 and CT-Index [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR48">48</xref>]. Here, we propose those comparisons by adding GRAPES-DD. GRAPES-DD is compared with GRAPES, two configurations of CT-Index and the pure subgraph isomorphism algorithm VF2. All the compared methods enumerate all the matches. CT-Index was run with default parameters (CT-index def), such that paths, cycles and trees are indexed. Moreover, a configuration (<italic>CT-index 4</italic>) which only includes paths of length 4 was taken into account. We were not able to run CT-Index on the PCM and PPI datasets due to excessive memory usage of the tool.<fig id="Fig6"><label>Fig. 6</label><caption><p>GRAPES/GRAPES-DD ratios of memory peak (as a RAM requirement) and index size (as a storage requirement), obtained by indexing Forest-Fire graphs. The chart was made by using the <italic>boxplot</italic> function of the Python3 Pandas module</p></caption><graphic xlink:href="12859_2021_4129_Fig6_HTML" id="MO7"/></fig><fig id="Fig7"><label>Fig. 7</label><caption><p>Cumulative time for running 100 queries over the four collections of biochemical graphs. The chart was made by using the <italic>plot</italic> function of the Python3 Pandas module</p></caption><graphic xlink:href="12859_2021_4129_Fig7_HTML" id="MO8"/></fig></p>
      <p id="Par73">Figure <xref rid="Fig7" ref-type="fig">7</xref> shows the cumulative time (in seconds) for executing 100 queries. Running times of GRAPES, GRAPES-DD and CT-index include the time to read graphs from the input files, filtering time and verification time. The time required by the methods for reading the pre-built index is considered only once and it is included in the running time of the first executed query. Since no index is built by VF2, its total execution time is taken into account. CT-index takes 461 seconds for building the index of the AIDS datasets with default parameters and 82 seconds for indexing only paths of length 4. Moreover, it requires 4,400 for indexing the PDBS collection with default parameters and 40 seconds when only paths of length 4 are taken into account. In all experiments, CT-index is outperformed by the other three approaches.</p>
      <p id="Par74">On AIDS collection (see Fig. <xref rid="Fig7" ref-type="fig">7</xref>a), GRAPES-DD is not able to outperform GRAPES; its running time is close to the one of VF2. As shown in Table <xref rid="Tab2" ref-type="table">2</xref>, this type of biochemical structures are too small and not suitable for being indexed and queried via MTMDDs. The overhead for reading the index and for extracting candidate graphs according to the query structure is not amortized during the verification phase, indeed, GRAPES-DD requires 15 seconds for reading the index and an average of 12 seconds for the filtering phase. On the contrary, GRAPES requires only 3.5 seconds for loading the index and an average of 3 seconds for the filtering.</p>
      <p id="Par75">The VF2 algorithm is outperformed by GRAPES-DD in the PDBS, PCM and PPI collections (see Fig. <xref rid="Fig7" ref-type="fig">7</xref>b–d). Moreover, VF2 is outperformed by GRAPES also in AIDS dataset. Thus, the index-based methodology used by GRAPES and GRAPES-DD is generally helpful in reducing the time required for the verification phase.</p>
      <p id="Par76">Regarding the PDBS collection (see Fig. <xref rid="Fig7" ref-type="fig">7</xref>b), GRAPES-DD requires 2.3 seconds for loading the index and an average of 6 seconds for filtering the collection. GRAPES requires 0.12 seconds for the index load and 20 seconds for the filtering phase. Since GRAPES-DD and GRAPES produce the same set of candidate graphs, GRAPES-DD outperforms GRAPES thank to its performance in the filtering phase.</p>
      <p id="Par77">Considering the PCM collection (see Fig. <xref rid="Fig7" ref-type="fig">7</xref>c), GRAPES-DD requires 20 seconds for loading the index and an average of 14 seconds for filtering the collection. GRAPES requires 30 seconds for the load and 2 seconds for the filtering. Thus, GRAPES-DD builds a more succinct index that allows a fast loading time, however it is not sufficient for outperforming GRAPES in filtering time.</p>
      <p id="Par78">On the PPI collection (see Fig. <xref rid="Fig7" ref-type="fig">7</xref>d), GRAPES-DD and GRAPES have comparable running times. GRAPES-DD requires 13 seconds to load the index, in contrast to 2 seconds required by GRAPES. However, GRAPES-DD spends on average 0.05 seconds for the filtering phase, while GRAPES requires on average 11 seconds.</p>
      <p id="Par79">Lastly, Table <xref rid="Tab3" ref-type="table">3</xref> reports the results regarding the PPI networks obtained by indexing one PPI at time, since PPI networks are often analysed stand-alone. Similarly to the synthetic networks, the increase of the graph size, i.e. number of vertices |<italic>V</italic>| and number of edges |<italic>E</italic>|, results in a better performance of GRAPES-DD with respect to GRAPES. However, comparing the ratios obtained for <italic>M. musculus</italic> and <italic>H. sapiens</italic> we can deduce that as expected there is not a fixed correlation between the graph size and the performance. Therefore, the intrinsic nature of the graph is also responsible for these results. PPI networks are also the targets for which running times of GRAPES-DD are comparable to those of GRAPES, and some times they are even better. The GRAPES-DD building approach includes the construction of partial tries but without merging them. The cost for traversing a single whole trie may limit GRAPES.</p>
    </sec>
  </sec>
  <sec id="Sec15">
    <title>Discussion</title>
    <p id="Par80">In this study, we deal with the problem of reducing the indexing size of biochemical and biological graph searching systems to make them effective with the increasing size of the structures. We show that the indexing of labelled graphs can take the advantages of newly adapted data structures based on decision diagrams. These techniques allow already existing methodologies to increase their compression power, in terms of memory consumption, without significantly increasing the searching time requirement.</p>
    <p id="Par81">We examined synthetic graphs because they offer a more systematic way of investigating performance of indexing using decision diagrams. Since the type of the generated graphs reflects the structures that are found in nature, their analysis can be exploited for inferring performance behaviour of real biochemical and biological structures. The results showed that relevant indexing compression ratio can be obtained in relation with the size and the topological structure of the graphs and the distribution of labels within them. Moreover, the larger are the indexed graphs, the higher is the advantage of using Decision Diagram data structure.</p>
    <p id="Par82">A well-established benchmark was also used for evaluating the performance on real graphs. The size of the considered graphs are relatively small, compared with the synthetically generated ones, however trends of gain ratio are confirmed. This must be considered in the perspective of future applications of the proposed indexing technique, because the continuous development of new technologies for extraction biological information leads to the construction of biological relational systems that constantly increase in size. In addition to the gain in compression ratio, GRAPES-DD outperforms GRAPES in terms of build times while maintaining comparable query times. Furthermore, our analyse show that graph search approaches based on indexing, in graphs of some complexity, can amortize the overhead of building indexing data structures at query time.</p>
  </sec>
  <sec id="Sec16">
    <title>Conclusions</title>
    <p id="Par83">Nowadays, graphs are fundamental structures for representing and for investigating the current biological and biomedical knowledge. In this work we investigated the possibility to improve the performance of the cutting-edge algorithms for searching substructures in graphs based on indexing, by addressing one of their disadvantages which is the size of the index. To this aim, we developed GRAPES-DD, a new version of GRAPES tool, whose strength is the use of decision diagrams to substantially reduce the size of the index. Experimental results performed on a set of synthetic and real benchmarks reported clearly that the use of this data structure allows us to substantially reduce the memory footprint of the index (i.e up to 5 orders of magnitude smaller) with respect to the original version of GRAPES without impacting the running time of the algorithm.</p>
    <p id="Par84">Further enhancement of GRAPES-DD will be to re-implement the building phase to allow thread-based parallelization as in the original GRAPES implementation. Moreover, since the efficacy of decision diagram techniques is strictly dependent on the variable order, we will investigate how different algorithms for variable orderings behave and we will evaluate the possibility of developing meta-heuristics to identify a-priori the best variable ordering depending on the features of each target graph.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>DD</term>
        <def>
          <p id="Par4">Decision diagram</p>
        </def>
      </def-item>
      <def-item>
        <term>MTMDD</term>
        <def>
          <p id="Par5">Multi-terminal multi-way decision diagram</p>
        </def>
      </def-item>
      <def-item>
        <term>OMTMDD</term>
        <def>
          <p id="Par6">Ordered multi-terminal multi-way decision diagram</p>
        </def>
      </def-item>
      <def-item>
        <term>ROMTMDD</term>
        <def>
          <p id="Par7">Reduced ordered multi-terminal multi-way decision diagram</p>
        </def>
      </def-item>
      <def-item>
        <term>QROMTMDD</term>
        <def>
          <p id="Par8">Quasi-reduced ordered multi-terminal multi-way decision diagram</p>
        </def>
      </def-item>
      <def-item>
        <term>SMP</term>
        <def>
          <p id="Par9">Symmetric MultiProcessing</p>
        </def>
      </def-item>
      <def-item>
        <term>PPI</term>
        <def>
          <p id="Par10">Protein–protein interaction</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par88"><ext-link ext-link-type="uri" xlink:href="https://het.io/">https://het.io/</ext-link>.</p>
    </fn>
    <fn id="Fn2">
      <label>2</label>
      <p id="Par89">The multiset (or bag) extends the concept of a set allowing for multiple instances for each of its elements.</p>
    </fn>
    <fn id="Fn3">
      <label>3</label>
      <p id="Par90">
        <ext-link ext-link-type="uri" xlink:href="https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.boxplot.html">https://pandas.pydata.org/pandas-docs/stable/reference/api/pandas.DataFrame.boxplot.html</ext-link>
      </p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>M. Beccuti and R. Giugno have equally contributed to this work</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>Not applicable.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>All the authors equally contributed to the development of the methodology. NL and VB contribute to the developed of the software. All the authors equally contributed to the writing of the manuscript. MB and RG supervised the work. All the authors have read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>NL and MB were partially supported by “Creation of a computational framework to model and study West Nile Disease” project supported by CRT foundation (PI Marco Beccuti). VB and RG were partially supported by GNCS-INDAM and JPND 2019-466-037. The funding bodies were not involved and played no role in the study design; data collection, analysis or interpretation; or writing of the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Project name: GRAPES-DD Project home page: <ext-link ext-link-type="uri" xlink:href="https://github.com/InfOmics/grapes-dd">https://github.com/InfOmics/grapes-dd</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/qBioTurin/grapes-dd">https://github.com/qBioTurin/grapes-dd</ext-link> Source code repositories: <ext-link ext-link-type="uri" xlink:href="https://github.com/qBioTurin/grapes-dd">https://github.com/qBioTurin/grapes-dd</ext-link> and <ext-link ext-link-type="uri" xlink:href="https://github.com/InfOmics/grapes-dd">https://github.com/InfOmics/grapes-dd</ext-link> Operating system(s): Linux Programming language: C++, Docker License: MIT Any restrictions to use by non-academics: licence needed</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar2">
      <title>Ethics approval and consent to participate</title>
      <p id="Par85">Not applicable.</p>
    </notes>
    <notes id="FPar3">
      <title>Consent to publish</title>
      <p id="Par86">Not applicable.</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par87">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Bonchev</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <source>Chemical graph theory: introduction and fundamentals</source>
        <year>1991</year>
        <publisher-loc>Boca Raton</publisher-loc>
        <publisher-name>CRC Press</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mering</surname>
            <given-names>Cv</given-names>
          </name>
          <name>
            <surname>Huynen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jaeggi</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Schmidt</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bork</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Snel</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>STRING: a database of predicted functional associations between proteins</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <issue>1</issue>
        <fpage>258</fpage>
        <lpage>261</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg034</pub-id>
        <pub-id pub-id-type="pmid">12519996</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bonnici</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>De Caro</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Constantino</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Liuni</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>D’Elia</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bombieri</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Licciulli</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Giugno</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Arena-Idb: a platform to build human non-coding RNA interaction networks</article-title>
        <source>BMC Bioinform</source>
        <year>2018</year>
        <volume>19</volume>
        <issue>10</issue>
        <fpage>350</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-018-2298-8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Goh</surname>
            <given-names>K-I</given-names>
          </name>
          <name>
            <surname>Cusick</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Valle</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Childs</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Vidal</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Barabási</surname>
            <given-names>A-L</given-names>
          </name>
        </person-group>
        <article-title>The human disease network</article-title>
        <source>Proc Nat Acad Sci</source>
        <year>2007</year>
        <volume>104</volume>
        <issue>21</issue>
        <fpage>8685</fpage>
        <lpage>8690</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0701361104</pub-id>
        <pub-id pub-id-type="pmid">17502601</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Grochow JA, Kellis M. Network motif discovery using subgraph enumeration and symmetry-breaking. In: Annual international conference on research in computational molecular biology. Springer; 2007. p. 92–106.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Rinnone F, Micale G, Bonnici V, Bader GD, Shasha D, Ferro A, Pulvirenti A, Giugno R. NetMatchStar: an enhanced Cytoscape network querying app. F1000Research 2015;<bold>4</bold></mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sadeghi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ordway</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Rafiei</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Borad</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Koomen</surname>
            <given-names>JL</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Yoder</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Johnson</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Damaghi</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Integrative analysis of breast cancer cells reveals an epithelial-mesenchymal transition role in adaptation to acidic microenvironment</article-title>
        <source>Front Oncol</source>
        <year>2020</year>
        <volume>10</volume>
        <fpage>304</fpage>
        <pub-id pub-id-type="doi">10.3389/fonc.2020.00304</pub-id>
        <pub-id pub-id-type="pmid">32211331</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tran</surname>
            <given-names>NTL</given-names>
          </name>
          <name>
            <surname>Mohan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Xu</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>C-H</given-names>
          </name>
        </person-group>
        <article-title>Current innovations and future challenges of network motif detection</article-title>
        <source>Brief Bioinform</source>
        <year>2015</year>
        <volume>16</volume>
        <issue>3</issue>
        <fpage>497</fpage>
        <lpage>525</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbu021</pub-id>
        <pub-id pub-id-type="pmid">24966356</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wong</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Baur</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Quader</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>C-H</given-names>
          </name>
        </person-group>
        <article-title>Biological network motif detection: principles and practice</article-title>
        <source>Brief Bioinform</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>2</issue>
        <fpage>202</fpage>
        <lpage>215</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbr033</pub-id>
        <pub-id pub-id-type="pmid">22396487</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen-Orr</surname>
            <given-names>SS</given-names>
          </name>
          <name>
            <surname>Milo</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mangan</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Alon</surname>
            <given-names>U</given-names>
          </name>
        </person-group>
        <article-title>Network motifs in the transcriptional regulation network of <italic>Escherichia coli</italic></article-title>
        <source>Nat Genet</source>
        <year>2002</year>
        <volume>31</volume>
        <issue>1</issue>
        <fpage>64</fpage>
        <lpage>68</lpage>
        <pub-id pub-id-type="doi">10.1038/ng881</pub-id>
        <pub-id pub-id-type="pmid">11967538</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Allison</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Welsh</surname>
            <given-names>ID</given-names>
          </name>
        </person-group>
        <article-title>CherryPicker: an algorithm for the automated parameterisation of large biomolecules for molecular simulation</article-title>
        <source>Front Chem</source>
        <year>2019</year>
        <volume>7</volume>
        <fpage>400</fpage>
        <pub-id pub-id-type="doi">10.3389/fchem.2019.00400</pub-id>
        <pub-id pub-id-type="pmid">31231634</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kelley</surname>
            <given-names>BP</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Lewitter</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Sharan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Stockwell</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Ideker</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>PathBLAST: a tool for alignment of protein interaction networks</article-title>
        <source>Nucl Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <issue>suppl–2</issue>
        <fpage>83</fpage>
        <lpage>88</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh411</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Sze</surname>
            <given-names>S-H</given-names>
          </name>
        </person-group>
        <article-title>Path matching and graph matching in biological networks</article-title>
        <source>J Comput Biol</source>
        <year>2007</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>56</fpage>
        <lpage>67</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2006.0076</pub-id>
        <pub-id pub-id-type="pmid">17381346</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sharan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ulitsky</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Shamir</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Network-based prediction of protein function</article-title>
        <source>Mol Syst Biol</source>
        <year>2007</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>88</fpage>
        <pub-id pub-id-type="doi">10.1038/msb4100129</pub-id>
        <pub-id pub-id-type="pmid">17353930</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Micale</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Pulvirenti</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Giugno</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ferro</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>GASOLINE: a greedy and stochastic algorithm for optimal local multiple alignment of interaction networks</article-title>
        <source>PLoS ONE</source>
        <year>2014</year>
        <volume>9</volume>
        <issue>6</issue>
        <fpage>98750</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0098750</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gülsoy</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Kahveci</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>RINQ: reference-based indexing for network queries</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>13</issue>
        <fpage>149</fpage>
        <lpage>158</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr203</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Himmelstein</surname>
            <given-names>DS</given-names>
          </name>
          <name>
            <surname>Baranzini</surname>
            <given-names>SE</given-names>
          </name>
        </person-group>
        <article-title>Heterogeneous network edge prediction: a data integration approach to prioritize disease-associated genes</article-title>
        <source>PLoS Comput Biol</source>
        <year>2015</year>
        <volume>11</volume>
        <issue>7</issue>
        <fpage>1004259</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1004259</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Himmelstein</surname>
            <given-names>DS</given-names>
          </name>
          <name>
            <surname>Lizee</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hessler</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Brueggeman</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Hadley</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Green</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Khankhanian</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Baranzini</surname>
            <given-names>SE</given-names>
          </name>
        </person-group>
        <article-title>Systematic integration of biomedical knowledge prioritizes drugs for repurposing</article-title>
        <source>Elife</source>
        <year>2017</year>
        <volume>6</volume>
        <fpage>26726</fpage>
        <pub-id pub-id-type="doi">10.7554/eLife.26726</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fionda</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Palopoli</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Biological network querying techniques: analysis and comparison</article-title>
        <source>J Comput Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <issue>4</issue>
        <fpage>595</fpage>
        <lpage>625</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0144</pub-id>
        <pub-id pub-id-type="pmid">21417941</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Cook SA. The complexity of theorem-proving procedures. In: Proceedings of the Third Annual ACM Symposium on Theory of Computing, 1971. p. 151–8.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Cordella LP, Foggia P, Sansone C, Vento M. An improved algorithm for matching large graphs. In: 3rd IAPR-TC15 Workshop on Graph-based Representations in Pattern Recognition, 2001. p. 149–59.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Carletti V, Foggia P, Saggese A, Vento M. Introducing VF3: a new algorithm for subgraph isomorphism. In: International Workshop on Graph-Based Representations in Pattern Recognition. Springer; 2017. p. 128–39. </mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bonnici</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Giugno</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>On the variable ordering in subgraph isomorphism algorithms</article-title>
        <source>IEEE/ACM Trans Comput Biol Bioinf</source>
        <year>2016</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>193</fpage>
        <lpage>203</lpage>
        <pub-id pub-id-type="doi">10.1109/TCBB.2016.2515595</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">He H, Singh AK. Graphs-at-a-time: query language and access methods for graph databases. In: Proceedings of the 2008 ACM SIGMOD International Conference on Management of Data, 2008. p. 405–18.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Han W-S, Lee J, Lee J-H. Turboiso: towards ultrafast and robust subgraph isomorphism search in large graph databases. In: Proceedings of the 2013 ACM SIGMOD International Conference on Management of Data, 2013. p. 337–348.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Bi F, Chang L, Lin X, Qin L, Zhang W. Efficient subgraph matching by postponing cartesian products. In: Proceedings of the 2016 International Conference on Management of Data, 2016. p. 1199–214.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Giugno R, Shasha D. Graphgrep: A fast and universal method for querying graphs. In: Object Recognition Supported by User Interaction for Service Robots, vol. 2. IEEE; 2002. pp. 112–5.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Bonnici V, Ferro A, Giugno R, Pulvirenti A, Shasha D. Enhancing graph database indexing by suffix tree structure. In: IAPR International Conference on Pattern Recognition in Bioinformatics. Springer; 2010. p. 195–203.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Giugno R, Bonnici V, Bombieri N, Pulvirenti A, Ferro A, Shasha D. Grapes: A software for parallel searching on biological graphs targeting multi-core architectures. PloS ONE. 2013;8(10).</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Di Natale</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Ferro</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Giugno</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Mongiovì</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Pulvirenti</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Shasha</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Sing: Subgraph search in non-homogeneous graphs</article-title>
        <source>BMC Bioinform</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>96</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-96</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Klein K, Kriege N, Mutzel P. CT-index: Fingerprint-based graph indexing combining cycles and trees. In: 2011 IEEE 27th International Conference on Data Engineering. IEEE; 2011. p. 1115–26.</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Williams DW, Huan J, Wang W. Graph database indexing using structured graph decomposition. In: 2007 IEEE 23rd International Conference on Data Engineering. IEEE. 2007. p. 976–985.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <mixed-citation publication-type="other">Zou L, Chen L, Yu JX, Lu Y. A novel spectral coding in a large graph database. In: Proceedings of the 11th International Conference on Extending Database Technology: Advances in Database Technology, 2008. p. 181–92.</mixed-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>JX</given-names>
          </name>
        </person-group>
        <article-title>Taming verification hardness: an efficient algorithm for testing subgraph isomorphism</article-title>
        <source>Proc VLDB Endow</source>
        <year>2008</year>
        <volume>1</volume>
        <issue>1</issue>
        <fpage>364</fpage>
        <lpage>375</lpage>
        <pub-id pub-id-type="doi">10.14778/1453856.1453899</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <mixed-citation publication-type="other">Zhang S, Hu M, Yang J. Treepi: A novel graph indexing method. In: 2007 IEEE 23rd International Conference on Data Engineering. IEEE; 2007. p. 966–75.</mixed-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhao</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>JX</given-names>
          </name>
          <name>
            <surname>Philip</surname>
            <given-names>SY</given-names>
          </name>
        </person-group>
        <article-title>Graph indexing: Tree+ Delta&gt;= Graph</article-title>
        <source>VLDB</source>
        <year>2007</year>
        <volume>7</volume>
        <fpage>938</fpage>
        <lpage>949</lpage>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Xie Y, Yu PS. CP-index: on the efficient indexing of large graphs. In: Proceedings of the 20th ACM International Conference on Information and Knowledge Management, 2011. p. 1795–804.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <mixed-citation publication-type="other">Yan X, Yu PS, Han J. Graph indexing: a frequent structure-based approach. In: Proceedings of the 2004 ACM SIGMOD International Conference on Management of Data, 2004. p. 335–46.</mixed-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Cheng J, Ke Y, Ng W, Lu A. Fg-index: towards verification-free query processing on graph databases. In: Proceedings of the 2007 ACM SIGMOD International Conference on Management of Data, 2007. p. 857–72.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yuan</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Mitra</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Lindex: a lattice-based index for graph databases</article-title>
        <source>VLDB J</source>
        <year>2013</year>
        <volume>22</volume>
        <issue>2</issue>
        <fpage>229</fpage>
        <lpage>252</lpage>
        <pub-id pub-id-type="doi">10.1007/s00778-012-0284-8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pal</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Rao</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Slavov</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Katib</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Fast processing of graph queries on a large database of small and medium-sized data graphs</article-title>
        <source>J Comput Syst Sci</source>
        <year>2016</year>
        <volume>82</volume>
        <issue>6</issue>
        <fpage>1112</fpage>
        <lpage>1143</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jcss.2016.04.002</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Katsarou F, Ntarmos N, Triantafillou P. Hybrid algorithms for subgraph pattern queries in graph databases. In: 2017 IEEE International Conference on Big Data (Big Data). IEEE. 2017. p. 656–665.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Sun S, Luo Q. Scaling Up Subgraph Query Processing with Efficient Subgraph Matching. In: 2019 IEEE 35th International Conference on Data Engineering (ICDE). IEEE; 2019. p. 220–31.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Wang J, Ntarmos N, Triantafillou P. Indexing query graphs to speed up graph query processing, 2016.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <mixed-citation publication-type="other">Wang J, Ntarmos N, Triantafillou P. GraphCache: a caching system for graph queries, 2017.</mixed-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <mixed-citation publication-type="other">Gouda K, Hassaan M. Compressed feature-based filtering and verification approach for subgraph search. In: Proceedings of the 16th International Conference on Extending Database Technology, 2013. p. 287–98.</mixed-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <mixed-citation publication-type="other">Luaces D, Viqueira JR, Pena TF, Cotos JM. Leveraging Bitmap Indexing for Subgraph Searching. In: EDBT, 2019. p. 49–60.</mixed-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Katsarou</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Ntarmos</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Triantafillou</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Performance and scalability of indexed subgraph query processing methods</article-title>
        <source>Proc VLDB Endow</source>
        <year>2015</year>
        <volume>8</volume>
        <issue>12</issue>
        <fpage>1566</fpage>
        <lpage>1577</lpage>
        <pub-id pub-id-type="doi">10.14778/2824032.2824054</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>James</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Weininger</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Delany</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <source>Daylight theory manual</source>
        <year>1995</year>
        <publisher-loc>Irvine</publisher-loc>
        <publisher-name>Daylight Chemical Information Systems. Inc.</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Sæther AA. Path-based Graph Indexing for Keyword Search on RDF data-Discovering Concepts Through Community Detection. Master’s thesis, NTNU, 2017.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Burch</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Clarke</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>McMillan</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Dill</surname>
            <given-names>DL</given-names>
          </name>
          <name>
            <surname>Hwang</surname>
            <given-names>L-J</given-names>
          </name>
        </person-group>
        <article-title>Symbolic model checking: 1020 states and beyond</article-title>
        <source>Inf Comput</source>
        <year>1992</year>
        <volume>98</volume>
        <issue>2</issue>
        <fpage>142</fpage>
        <lpage>170</lpage>
        <pub-id pub-id-type="doi">10.1016/0890-5401(92)90017-A</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <mixed-citation publication-type="other">Veeraraghavan M, Trivedi KS. An improved algorithm for the symbolic reliability analysis of networks. In: Proceedings Ninth Symposium on Reliable Distributed Systems. IEEE; 1990. p. 34–43. </mixed-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <mixed-citation publication-type="other">Ciardo G, Zhao Y, Jin X. Ten years of saturation: A Petri net perspective. In: Transactions on Petri Nets and Other Models of Concurrency V. New York: Springer. 2012. p. 51–95</mixed-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <mixed-citation publication-type="other">Miner A, Parker D. Symbolic representations and analysis of large probabilistic systems. In: Validation of Stochastic Systems. Springer; 2004. p. 296–338.</mixed-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bollig</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Wegener</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Improving the variable ordering of OBDDs is NP-complete</article-title>
        <source>IEEE Trans Comput</source>
        <year>1996</year>
        <volume>45</volume>
        <issue>9</issue>
        <fpage>993</fpage>
        <lpage>1002</lpage>
        <pub-id pub-id-type="doi">10.1109/12.537122</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">Brace KS, Rudell RL, Bryant RE: Efficient implementation of a BDD package. In: 27th ACM/IEEE Design Automation Conference, IEEE; 1990. p. 40–5.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <mixed-citation publication-type="other">Somenzi, F.: CUDD: CU decision diagram package release 2.3. 0. University of Colorado at Boulder. 1998.</mixed-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Thierry-Mieg</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Poitrenaud</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hamez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kordon</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Kowalewski</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Philippou</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Hierarchical set decision diagrams and regular models</article-title>
        <source>Tools and algorithms for the construction and analysis of systems</source>
        <year>2009</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>Springer</publisher-name>
        <fpage>1</fpage>
        <lpage>15</lpage>
      </element-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <mixed-citation publication-type="other">Babar J, Miner A. Meddly: Multi-terminal and edge-valued decision diagram library. In: 2010 Seventh International Conference on the Quantitative Evaluation of Systems, IEEE; 2010. p. 195–196.</mixed-citation>
    </ref>
    <ref id="CR60">
      <label>60.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bonnici</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Giugno</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pulvirenti</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Shasha</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Ferro</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>A subgraph isomorphism algorithm and its application to biochemical data</article-title>
        <source>BMC Bioinform</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>S7</issue>
        <fpage>13</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-S7-S13</pub-id>
      </element-citation>
    </ref>
    <ref id="CR61">
      <label>61.</label>
      <mixed-citation publication-type="other">Carletti V, Foggia P, Vento M. Performance comparison of five exact graph matching algorithms on biological databases. In: International Conference on Image Analysis and Processing, 2013;pp. 409–417. Springer</mixed-citation>
    </ref>
    <ref id="CR62">
      <label>62.</label>
      <mixed-citation publication-type="other">cancer institute, N.: National cancer institute. <ext-link ext-link-type="uri" xlink:href="http://www.nci.nih.gov/">http://www.nci.nih.gov/</ext-link>. Accessed 2013 March 10</mixed-citation>
    </ref>
    <ref id="CR63">
      <label>63.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Battistuz</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Bhat</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Bluhm</surname>
            <given-names>WF</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
          <name>
            <surname>Burkhardt</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gilliland</surname>
            <given-names>GL</given-names>
          </name>
          <name>
            <surname>Iype</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The protein data bank</article-title>
        <source>Acta Crystallogr D Biol Crystallogr</source>
        <year>2002</year>
        <volume>58</volume>
        <issue>6</issue>
        <fpage>899</fpage>
        <lpage>907</lpage>
        <pub-id pub-id-type="doi">10.1107/S0907444902003451</pub-id>
        <pub-id pub-id-type="pmid">12037327</pub-id>
      </element-citation>
    </ref>
    <ref id="CR64">
      <label>64.</label>
      <mixed-citation publication-type="other">Huehne R, Suehnel J. The Jena Library of Biological Macromolecules-JenaLib. Nature Precedings. 2009;1.</mixed-citation>
    </ref>
    <ref id="CR65">
      <label>65.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vehlow</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Stehr</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Winkelmann</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Duarte</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Petzold</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Dinse</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Lappe</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>CMView: interactive contact map visualization and analysis</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>11</issue>
        <fpage>1573</fpage>
        <lpage>1574</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr163</pub-id>
        <pub-id pub-id-type="pmid">21471016</pub-id>
      </element-citation>
    </ref>
    <ref id="CR66">
      <label>66.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Szklarczyk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Franceschini</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Kuhn</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Simonovic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Roth</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Minguez</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Doerks</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Stark</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Muller</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Bork</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The STRING database in 2011: functional interaction networks of proteins, globally integrated and scored</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>39</volume>
        <issue>suppl-1</issue>
        <fpage>561</fpage>
        <lpage>568</lpage>
      </element-citation>
    </ref>
    <ref id="CR67">
      <label>67.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barabási</surname>
            <given-names>A.-L.</given-names>
          </name>
          <name>
            <surname>Albert</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Emergence of scaling in random networks</article-title>
        <source>Science</source>
        <year>1999</year>
        <volume>286</volume>
        <issue>5439</issue>
        <fpage>509</fpage>
        <lpage>512</lpage>
        <pub-id pub-id-type="doi">10.1126/science.286.5439.509</pub-id>
        <pub-id pub-id-type="pmid">10521342</pub-id>
      </element-citation>
    </ref>
    <ref id="CR68">
      <label>68.</label>
      <mixed-citation publication-type="other">Leskovec J, Kleinberg J, Faloutsos C. Graphs over time: densification laws, shrinking diameters and possible explanations. In: Proceedings of the Eleventh ACM SIGKDD International Conference on Knowledge Discovery in Data Mining, 2005. p. 177–87.</mixed-citation>
    </ref>
    <ref id="CR69">
      <label>69.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Aparo</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Bonnici</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Micale</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Ferro</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Shasha</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Pulvirenti</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Giugno</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast Subgraph Matching Strategies Based on Pattern-Only Heuristics</article-title>
        <source>Interdisciplinary Sciences: Computational Life Sciences</source>
        <year>2019</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>21</fpage>
        <lpage>32</lpage>
      </element-citation>
    </ref>
    <ref id="CR70">
      <label>70.</label>
      <mixed-citation publication-type="other">Merkel D. Docker: Lightweight Linux Containers for Consistent Development and Deployment. Linux J. 2014;<bold>2014</bold>(239).</mixed-citation>
    </ref>
  </ref-list>
</back>

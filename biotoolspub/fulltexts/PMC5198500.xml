<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">5198500</article-id>
    <article-id pub-id-type="publisher-id">1381</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-016-1381-2</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>UQlust: combining profile hashing with linear-time ranking for efficient clustering and analysis of big macromolecular data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Adamczak</surname>
          <given-names>Rafal</given-names>
        </name>
        <address>
          <email>raad@is.umk.pl</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-1162-8253</contrib-id>
        <name>
          <surname>Meller</surname>
          <given-names>Jarek</given-names>
        </name>
        <address>
          <email>jmeller@cchmc.org</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label>Department of Informatics, Faculty of Physics, Astronomy and Informatics, Nicolaus Copernicus University, Grudziadzka 5, 87-100, Torun, Poland </aff>
      <aff id="Aff2"><label>2</label>Departments of Environmental Health and Electrical Engineering &amp; Computing Systems, University of Cincinnati, Cincinnati, USA </aff>
      <aff id="Aff3"><label>3</label>Division of Biomedical Informatics, Cincinnati Children’s Hospital Medical Center, Cincinnati, USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>28</day>
      <month>12</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>28</day>
      <month>12</month>
      <year>2016</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2016</year>
    </pub-date>
    <volume>17</volume>
    <elocation-id>546</elocation-id>
    <history>
      <date date-type="received">
        <day>2</day>
        <month>8</month>
        <year>2016</year>
      </date>
      <date date-type="accepted">
        <day>23</day>
        <month>11</month>
        <year>2016</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s). 2016</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is distributed under the terms of the Creative Commons Attribution 4.0 International License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Advances in computing have enabled current protein and RNA structure prediction and molecular simulation methods to dramatically increase their sampling of conformational spaces. The quickly growing number of experimentally resolved structures, and databases such as the Protein Data Bank, also implies large scale structural similarity analyses to retrieve and classify macromolecular data. Consequently, the computational cost of structure comparison and clustering for large sets of macromolecular structures has become a bottleneck that necessitates further algorithmic improvements and development of efficient software solutions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>uQlust is a versatile and easy-to-use tool for ultrafast ranking and clustering of macromolecular structures. uQlust makes use of structural profiles of proteins and nucleic acids, while combining a linear-time algorithm for implicit comparison of all pairs of models with profile hashing to enable efficient clustering of large data sets with a low memory footprint. In addition to ranking and clustering of large sets of models of the same protein or RNA molecule, uQlust can also be used in conjunction with fragment-based profiles in order to cluster structures of arbitrary length. For example, hierarchical clustering of the entire PDB using profile hashing can be performed on a typical laptop, thus opening an avenue for structural explorations previously limited to dedicated resources. The uQlust package is freely available under the GNU General Public License at <ext-link ext-link-type="uri" xlink:href="https://github.com/uQlust">https://github.com/uQlust</ext-link>.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p>uQlust represents a drastic reduction in the computational complexity and memory requirements with respect to existing clustering and model quality assessment methods for macromolecular structure analysis, while yielding results on par with traditional approaches for both proteins and RNAs.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s12859-016-1381-2) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Protein structure</kwd>
      <kwd>RNA structure</kwd>
      <kwd>Profile hashing</kwd>
      <kwd>Hierarchical clustering</kwd>
      <kwd>Model quality assessment</kwd>
      <kwd>Macromolecular structure analysis</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R21AI097936</award-id>
        <award-id>R01MH107487</award-id>
        <award-id>R21ES024807</award-id>
        <award-id>U54HL127624</award-id>
        <award-id>P30ES006096</award-id>
        <award-id>UL1TR001425</award-id>
        <principal-award-recipient>
          <name>
            <surname>Meller</surname>
            <given-names>Jarek</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2016</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1" sec-type="introduction">
    <title>Background</title>
    <p>Clustering techniques are widely used in the analysis and interpretation of molecular simulations for biological macromolecules, such as proteins and nucleic acids. For example, Markov state and related approaches for conformational space partitioning [<xref ref-type="bibr" rid="CR1">1</xref>] are being used to analyze trajectories generated by Molecular Dynamics, e.g., to identify important folding intermediates [<xref ref-type="bibr" rid="CR2">2</xref>]. Clustering is also used, either explicitly or implicitly, in order to identify high quality models generated by protein or RNA structure prediction methods [<xref ref-type="bibr" rid="CR3">3</xref>]. In particular, geometric consensus methods for Model Quality Assessment (MQA) rank models by comparing their pairs, e.g., by 3D superposition, to find frequently sampled and hence likely well predicted substructures [<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p>A number of methods have been developed recently to enable fast ranking and clustering of very large sets of protein models that can be generated by using current hardware in conjunction with simulation and structure prediction methods. Assessing structural similarity for pairs of models constitutes the major computational bottleneck in clustering and consensus-based MQA methods. Consequently, many ranking and clustering methods attempt to simplify structure-to-structure comparison to avoid 3D superposition, e.g., by projecting the structure into a structural motif frequency profile using a fragment library [<xref ref-type="bibr" rid="CR5">5</xref>], by using parallelization to speed-up the loop over pairs of models [<xref ref-type="bibr" rid="CR6">6</xref>], or by relying on traditional K-means clustering to limit the computational complexity [<xref ref-type="bibr" rid="CR7">7</xref>], as only the distances to K centroids need to be computed.</p>
    <p>For example, Pleiades [<xref ref-type="bibr" rid="CR7">7</xref>] uses a projection of the backbone into 21-dimensional vectors using Gauss integrals, resulting in a fast K-means-based algorithm that compares structures in terms of their 21-dimensional backbone profiles. The FragBag approach [<xref ref-type="bibr" rid="CR5">5</xref>], on the other hand, projects 3D structures into a frequency profile to enable fast structure-to-structure comparison and similarity search with a representative library of structural fragments. PconsD [<xref ref-type="bibr" rid="CR8">8</xref>], a successful MQA method, computes model ranking by assessing similarity between protein models in terms of their distance matrices while using GPUs to speed-up comparison of all pairs of models. Parallelization is also used in ClusCo [<xref ref-type="bibr" rid="CR6">6</xref>] to enable large scale all-vs-all comparison and enhance both hierarchical and K-means clustering in conjunction with the traditional Root Mean Square Deviation (RMSD) superposition.</p>
    <p>Importantly, since K-means approaches do not imply a loop over pairs of models, the overall computation can be broken into data ‘slices’ and therefore easily implemented on modern distributed computing platforms for ‘big data’, such as Hadoop or Spark implementations of the Map/Reduce framework. In contrast, traditional hierarchical clustering techniques require that all pairs of structures are compared, making it incompatible with these distributed platforms. In addition, the overall distance matrix needs to be stored in memory, greatly limiting the size of data that can be analyzed using traditional hierarchical clustering approaches. Here, we address both of these challenges by combining structural profiles with a linear time geometric consensus-based ranking algorithm and profile hashing.</p>
    <p>As shown in [<xref ref-type="bibr" rid="CR9">9</xref>], by projecting 3D coordinates into a suitable 1D structural profile that assigns each residue to a distinct state, e.g. exposed vs. buried, the 1D-jury method implicitly compares all pairs of models to identify those that share common substructures without the need to perform a loop over pairs of models (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1). Thus, 1D-jury provides geometric consensus-based ranking of all models in a set with a linear time complexity algorithm. In addition, 1D-jury provides natural centroids of clusters consisting of models sharing common substructures. It should be also noted that the 1D-jury approach can be generalized to arbitrary structures (of any length) as long as they can be projected into fixed length structural profiles, such as frequency profiles used by FragBag or Gauss integral projections used by Pleiades.</p>
    <p>Structural profiles in conjunction with linear time consensus ranking can be further combined with profile hashing to enable efficient hierarchical clustering with a low memory footprint. The main idea is to use structural profiles in order to define hashing keys that map similar structures into the same values of a hash function, and thus enable collating profiles/structures with the same keys into initial micro-clusters. These micro-clusters are subsequently either tuned (with some level of profile coarse graining and further projections/filters) to obtain a certain number (K) of clusters and data coverage (the fraction of structures included in these K clusters), or aggregated hierarchically using the Hamming, cosine or other applicable distance measure (see Fig. <xref rid="Fig1" ref-type="fig">1</xref>). Building on these algorithmic engines, we present the uQlust package which combines 1D structural profiles, hashing and linear time ranking to enable ultrafast clustering of very large sets of atomistic or coarse-grained protein or RNA structures.<fig id="Fig1"><label>Fig. 1</label><caption><p>Schematic representation of approximate hierarchical clustering with profile hashing to generate ‘micro-clusters’ (lower level in the figure, with hashing keys in terms of consensus structure) that are subsequently hierarchically clustered, starting from the representative structures (1D-jury centroids shown above) in each micro-cluster, using an applicable distance measure, such as Hamming, cosine or RMSD (if 3D structures are available)</p></caption><graphic xlink:href="12859_2016_1381_Fig1_HTML" id="MO1"/></fig>
</p>
  </sec>
  <sec id="Sec2">
    <title>Implementation</title>
    <sec id="Sec3">
      <title>Structural profiles</title>
      <p>The following versatile residue-level projections of 3D structures (starting from a set of all-atom or reduced PDB or DCD files) are implemented in uQlust:<list list-type="simple"><list-item><label>i)</label><p>SS-SA or secondary structure (SS) – solvent accessibility (SA) profile, which assigns each amino acid residue to one of three secondary structures (N<sub>SS</sub> = 3), and one of up to N<sub>SA</sub> = 10 solvent accessibility states; the DSSP utility [<xref ref-type="bibr" rid="CR10">10</xref>] is integrated with uQlust to assign SS and RSA states;</p></list-item><list-item><label>ii)</label><p>CA(SS)-NC(SA) or approximate distance dependent secondary structure (SS) – solvent accessibility (SA) profile, which can be used for C<sub>α</sub> only models, and assigns pseudo-secondary structure states based on distances between C<sub>α</sub> atoms (CA) – for details see Supplementary Materials and uQlust Manual;</p></list-item><list-item><label>iii)</label><p>CA-CM (contact map), which is also applicable to both atomistic and reduced models, and consists of the top triangle of the binary contact map, where d(C<sub>α,i</sub>,C<sub>α,j</sub>) &lt; 8.5 Ang, |i-j| &gt; 11.</p></list-item></list>
</p>
      <p>Analogously to protein profiles, 1D RNA profiles for ranking and clustering (of equal length RNA models) are built either using a backbone phosphorus atom contact map (denoted as RNA-P-CM) where d(P<sub>i</sub>,P<sub>j</sub>) &lt; 15.5 Ang, |i-j| &gt; 11, or by considering a combination of secondary structure and base pairing states generated by using RNAview [<xref ref-type="bibr" rid="CR11">11</xref>]. Namely, a simplified secondary structure assignment (stem vs. loop, N<sub>SS</sub> = 2) is combined with a coarse-grained Leontis and Westhof (LW) classification of base-pairs into one of 15 different types based on nucleotide pairs (AT vs. GC), glycosidic bond orientation (cis vs. trans), interacting edges (Watson-Crick, Hoogsteen, Sugar Edge, and their frequently observed combinations plus ‘Other’ state), resulting in 30 distinct states (denoted as RNA-SS-LW).</p>
      <p>Another type of profile available in uQlust uses a structural motif/fragment frequency profile to represent arbitrary structures (of any length). For proteins, uQlust uses the FragBag library [<xref ref-type="bibr" rid="CR5">5</xref>] of 400 backbone fragments of length 11 residues, while its custom developed RNA-FragBag counterpart is used for RNAs (see the Results section).</p>
      <p>A user-defined, protein or RNA, residue level or fragment-based profile can also be used in uQlust, in conjunction with an external application, such as DSSR [<xref ref-type="bibr" rid="CR12">12</xref>]. A pre-defined workflow (denoted as RNA-SS-TA) combines simple secondary structure state assignment (N<sub>SS</sub> = 2) with distinct torsional angle states (N<sub>TA</sub> = 5), defined as combinations of DSSR epsilon-zeta BI and BII backbone states with chi syn- and anti- states (plus ‘other’ state). The resulting 10 distinct states can be further split based on base-pair type assignment, similar to that used for RNA-SS-LW.</p>
      <p>Such defined profiles, as listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S1, can be used for either model assessment using 1D-Jury (denoted as uQlust:1D-ProfileName), or explicit clustering with profile hashing, using hash keys generated with a profile of choice to provide an initial ‘slicing’ of data.</p>
    </sec>
    <sec id="Sec4">
      <title>Profile hashing</title>
      <p>Profile hashing is used in conjunction with 1D-Jury to achieve ultrafast clustering heuristics with a low memory footprint. Binary hash keys are generated with a 1D profile of choice by comparing each profile with a reference profile that obtains the maximum 1D-Jury score (which can be computed in linear time). The hash key for a profile is defined at each position as follows: 0 is added to the key if a given profile is in the same state as the reference profile at that position, 1 is added otherwise (note that the number of ones in a key is equal to the Hamming distance from the reference profile). Since the best 1D-jury score reference profile is expected to represent a natural geometric consensus for a substantial subset of models [<xref ref-type="bibr" rid="CR9">9</xref>], one can also expect that many of such largely consistent models will likely obtain the same hash key, resulting in less granular partitioning into micro-clusters (subsets of profiles with the same value of the hashing function) compared with a random reference structure, or a direct use of multi-state profile as opposed to binary ‘geometric consensus’ keys.</p>
    </sec>
    <sec id="Sec5">
      <title>Clustering heuristics for big macromolecular data</title>
      <p>The first heuristic discussed here is a profile hashing-based clustering that directly draws from the above considerations. It is referred to as uQlust:Hash (K,F), where K defines the number of target clusters, and F denotes the fraction of data that should be contained within those K clusters. Hash (K,F) starts by slicing data into micro-clusters with the same hashing function value. Subsequent agglomeration into K clusters (comprising F% of data) is obtained by simply changing the granularity of hash keys, which is achieved by removing a sufficient number of the most variable profile hash key positions characterized by high entropy across all data vectors.</p>
      <p>Another heuristic in uQclust is a form of reference-based partitioning, which is referred to as uQlust:Rpart (K,F). As before, this new heuristic relies on the initial identification of 1D-jury ‘centroid’ for the entire data set, as a suitable reference conformation. For efficiency and granularity, Rpart also represents all profiles in terms of binary hash keys. However, the subsequent partitioning of data proceeds very differently. Rather than aggregating hashing-based micro-clusters, Rpart recursively identifies macro-clusters centered on a reference profile by adjusting the radius of clustering to achieve K clusters comprising F% of data.</p>
      <p>Specifically, Hamming distances to the reference profile hash key are computed to identify a central inner sphere that contains data points closer than the radius of clustering (initially set to ¼ of the maximum distance from the 1D-jury reference) to the reference vector. Such defined sphere constitutes a candidate for a macro-cluster. The profile (structure) with the highest 1D-Jury score in the outer layer is then selected as the next reference structure. Next, the radius of clustering is reset to its distance from the original 1D-jury reference, and the process is repeated on the remainder of the data, considering only points at distances less than twice the current radius of clustering from the original 1D-jury reference. If after K iterations less than F% of data points are covered by such defined K candidate macro-clusters, then the size of the radius of clustering is increased (or decreased if more than F% of data points are covered), and the process is repeated. The process stops when no further improvement towards the targeted F is observed.</p>
      <p>Finally, in the case of approximate hierarchical clustering, which is referred to as uQlust:Tree, the first step is analogous to that used for Rpart (K,F) or Hash (K,F), except that a large K is used to induce a large number of small clusters (micro-clusters, see Fig. <xref rid="Fig1" ref-type="fig">1</xref>) and F is set to 100% to include all data. While K can be modified by the user to set the tradeoff between speed and accuracy, its default value is set to <italic>K</italic> = 1,000 to provide sufficient granularity in both conformational space partitioning and model clustering for quality assessment (note that K and F are effectively fixed and can be dropped in references to uQlust:Tree). In the next step, a 1D-jury centroid is computed for each micro-cluster, and from this level traditional average distance agglomerative (bottom-up) hierarchical clustering with either Hamming or cosine distance (for arbitrary profiles), or RMSD (only for proteins or RNAs) can be applied. As a result, effectively linear complexity in the number of structures, N<sub>struct</sub>, is achieved when N<sub>struct</sub> &gt; &gt; <italic>K</italic> (see running times in Table <xref rid="Tab2" ref-type="table">2</xref>).</p>
    </sec>
    <sec id="Sec6">
      <title>Implementation details</title>
      <p>uQlust is written in C# and should be easily portable between different operating systems (system independent pre-compiled executables that require .NET ver. 4.5 or higher, or Mono ver. 3.8 on 64-bit Windows or Linux operating systems, respectively, are provided with the distribution). Multithreading is implemented to speed-up profile pre-processing, ranking and clustering. Fast methods for RMSD [<xref ref-type="bibr" rid="CR13">13</xref>] and MaxSub [<xref ref-type="bibr" rid="CR14">14</xref>] structure similarity measures are implemented to speed-up structure to structure comparison when profiles are not used. For vector hashing, C# Dictionary Type with a hash function default method GetHashCode() is used. Work is in progress to enable the use of uQlust (in particular, for profile pre-processing) in conjunction with Hadoop Map/Reduce framework, using the Microsoft Azure plugin for C#.</p>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="results">
    <title>Results and discussion</title>
    <sec id="Sec8">
      <title>Linear time ranking of macromolecular models</title>
      <p>As shown in [<xref ref-type="bibr" rid="CR9">9</xref>], by projecting macromolecular 3D coordinates into a suitable 1D profile and profile pre-processing to compute the state frequency vector at each profile position, one can implicitly compare all pairs of models to compute their overall geometric consensus ranking with a linear time complexity algorithm. The resulting 1D-Jury approach enables ultrafast ranking of large sets of models, while yielding results on par with quadratic complexity methods, such as 3D-Jury [<xref ref-type="bibr" rid="CR4">4</xref>] or PconsD [<xref ref-type="bibr" rid="CR8">8</xref>]. This is illustrated in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S1.</p>
      <p>Here, uQlust is evaluated in terms of ranking and model assessment using CASP10 [<xref ref-type="bibr" rid="CR15">15</xref>] and TASSER [<xref ref-type="bibr" rid="CR16">16</xref>] benchmarks for proteins. Only those targets/models that were successfully processed by all methods are used for comparison (73 and 56 targets, and a total of 28,150 and 1,065,345 models, for CASP and TASSER respectively). Several well performing profiles, including a simple 1D-SS-SA and a contact map profile 1D-CA-CM, motivated by the success of PconsD (and to provide its linear complexity counterpart), are assessed.</p>
      <p>As can be seen from Table <xref rid="Tab1" ref-type="table">1</xref>, the running times indeed scale linearly with the number of structures for uQlust-1D-CA-CM, as opposed to quadratic scaling for PconsD. Furthermore, as can be seen from Table <xref rid="Tab2" ref-type="table">2</xref>, the results of uQlust-1D-CA-CM and more compact uQlust-1D-SS-SA profile based ranking are on par with PconsD in terms of selection of top models. Interestingly, using centroids of explicitly identified clusters as top models leads to further improvements, especially for hashing and reference-based uQlust heuristics that outperform K-means approaches on CASP, while hierarchical uQlust:Tree clustering works best on TASSER.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Running times for model ranking on TASSER target 256b_A</p></caption><table frame="hsides" rules="groups"><thead><tr><th>N_struct</th><th>2000</th><th>4000</th><th>8000</th><th>16,000</th></tr></thead><tbody><tr><td><bold>Profile preprocessing</bold></td><td char="." align="char">13.8</td><td char="." align="char">51.6</td><td char="." align="char">132.0</td><td char="." align="char">231.0</td></tr><tr><td><bold>uQlust:1D-CA-CM</bold></td><td char="." align="char">0.6</td><td char="." align="char">1.2</td><td char="." align="char">3.0</td><td char="." align="char">6.6</td></tr><tr><td>PconsD</td><td char="." align="char">23.6</td><td char="." align="char">64.8</td><td char="." align="char">260.7</td><td char="." align="char">901.7</td></tr></tbody></table><table-wrap-foot><p>Time in CPU sec on a server with 8 Intel (R) Core (TM)2 Q6600@2.0GHz CPUs, 4 GB, and Linux version Ubuntu 12.04. PconsD was allowed to use all 8 CPUs and the TESLA C2075 graphical card with 448 GPUs, while times for uQlust are for 1 CPU only to demonstrate its linear scaling</p></table-wrap-foot></table-wrap>
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Evaluation of protein model quality assessment approaches</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Method</th><th>CASP10</th><th>TASSER</th></tr></thead><tbody><tr><td>PconsD</td><td>0.68 / 0.43</td><td>4.3 / 0.46</td></tr><tr><td><bold>uQlust:1D-CA-CM</bold></td><td><bold>0.66 / 0.38</bold></td><td><bold>4.2 / 0.46</bold></td></tr><tr><td><bold>uQlust:1D-SS-SA</bold></td><td><bold>0.67 / 0.40</bold></td><td><bold>4.3 / 0.41</bold></td></tr><tr><td>ClusCo (10)</td><td>0.68 / 0.37</td><td>3.2 / 0.49</td></tr><tr><td>Pleiades (10)</td><td>0.67 / 0.38</td><td>3.1 / 0.45</td></tr><tr><td><bold>uQlust: Hash (10,60)</bold></td><td><bold>0.76 / 0.52</bold></td><td><bold>3.5 / 0.44</bold></td></tr><tr><td><bold>uQlust: Rpart (10,60)</bold></td><td><bold>0.75 / 0.56</bold></td><td><bold>3.3 / 0.42</bold></td></tr><tr><td><bold>uQlust:Tree</bold></td><td><bold>0.71 / 0.46</bold></td><td><bold>2.9 / 0.47</bold></td></tr></tbody></table><table-wrap-foot><p>Average MaxSub similarity score between top ranking and best models (left), and fraction of good models (right) are reported for both CASP and TASSER targets. The fraction of good models is defined as the fraction of targets with the top ranking model less than 0.2 MaxSub score from the best model for CASP, and less than 2 Ang RMSD for TASSER. Centroids of the 5 largest (out of <italic>K</italic> = 10) clusters are considered for clustering methods, and <italic>F</italic> = 60% of data is used for uQlust</p></table-wrap-foot></table-wrap>
</p>
    </sec>
    <sec id="Sec9">
      <title>Ultrafast clustering with profile hashing</title>
      <p>Traditional and profile hashing-based hierarchical clustering techniques are compared in terms of time and memory usage in Table <xref rid="Tab3" ref-type="table">3</xref>. We used coarse-grained models generated using the CABS-flex server [<xref ref-type="bibr" rid="CR17">17</xref>] for three distinct conformers of Troponin C, increasing the number of models for each conformer to obtain a series of data sets of growing size, each consisting of 3 distinct clusters of equal number of structures. Note that, unlike for other hierarchical clustering methods tested, the running time and memory usage grow essentially linearly with the size of the problem for uQlust:Tree (here with the CA-CM profile, Rpart (1000,100) to define initial micro-clusters). Running times and memory allocation can be further reduced by replacing the CA-CM profile used here with a much more compact SS-SA profile.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Time and memory usage for hierarchical clustering methods</p></caption><table frame="hsides" rules="groups"><thead><tr><th>N_struct</th><th>9000</th><th>18000</th><th>36,000</th><th>72,000</th><th>144,000</th></tr></thead><tbody><tr><td><bold>Time (uQlust:Preprocess)</bold></td><td><bold>104</bold></td><td><bold>241</bold></td><td><bold>581</bold></td><td><bold>1604</bold></td><td><bold>3743</bold></td></tr><tr><td><bold>Time (uQlust:Tree)</bold></td><td><bold>70</bold></td><td><bold>92</bold></td><td><bold>168</bold></td><td><bold>310</bold></td><td><bold>488</bold></td></tr><tr><td>Time (ClusCo)</td><td>360</td><td>3080</td><td>24818</td><td>209072</td><td>---</td></tr><tr><td>Time (MaxClust)</td><td>7140</td><td>50540</td><td>---</td><td>---</td><td>---</td></tr><tr><td><bold>Memory (uQlust:Tree)</bold></td><td><bold>0.3</bold></td><td><bold>0.6</bold></td><td><bold>0.8</bold></td><td><bold>2.6</bold></td><td><bold>4.3</bold></td></tr><tr><td>Memory (ClusCo)</td><td>0.4</td><td>1.6</td><td>6.5</td><td>25</td><td>---</td></tr><tr><td>Memory (MaxClust)</td><td>1.9</td><td>5.7</td><td>19.0</td><td>---</td><td>---</td></tr></tbody></table><table-wrap-foot><p>CPU times (sec) and memory usage (GB) for approximate uQlust:Tree vs. full hierarchical clustering, obtained by using ClusCo [<xref ref-type="bibr" rid="CR6">6</xref>] or MaxClust [<xref ref-type="bibr" rid="CR22">22</xref>]. All calculations were performed on a server with 16 Intel (R) Xeon (R) E5-2680-0@2.70GHz CPUs, 132GB, and Linux version 2.6.32-504.1.3.el6.centos.plus.x86_64</p></table-wrap-foot></table-wrap>
</p>
      <p>It should be emphasized that there is a very high degree of concordance between full hierarchical and CA-CM (or SS-SA) profile-based uQlust:Tree, as indicated by the Rand index of 0.99 (at the level of 5 clusters) and illustrated in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S3. Very similar results can also be obtained (data not shown) using the compact pseudo-secondary structure/contact number profile, CA(SS)-NC(SA), illustrating the versatility of uQlust. It should be also noted that RMSD can also be used in uQust:Tree to aggregate micro-clusters, providing in this case virtually identical results to those of full hierarchical clustering, without affecting significantly running times since only representative structures need to be superimposed.</p>
      <p>In addition to applications to large scale structure prediction and molecular simulations of a target protein or RNA (of some fixed length), uQlust can also be used in conjunction with the FragBag structural motif frequency profile [<xref ref-type="bibr" rid="CR5">5</xref>] for analysis and clustering of arbitrary structures (of different length), including an interactive exploration of the entire PDB. This is illustrated by performing hierarchical clustering of about 98,000 protein chains from the PDB that were assigned no more than one CATH fold level annotation to avoid ambiguous class assignment.</p>
      <p>In order to perform the task on a Linux Intel i7-30610QM 2.3 GHz 4 core laptop, uQlust:Tree requires less than 2.5 GB of RAM and about 3.3 and 1.3 CPU hours for profile generation and hierarchical clustering, respectively, using the FragBag profile, Rpart (10000,90) micro-clusters and cosine similarity measure. For comparison, a simple hashing-based clustering with uQlust: Hash (10000,90) takes only about 30 CPU seconds, resulting in small clusters largely consistent at the superfamily level (but it obviously does not provide the overall hierarchical structure). It should be also noted that cosine similarity is more appropriate for frequency profiles that are characterized by large differences in counts and the overall profile vector norm, as opposed to Hamming distance that works well for residue level or contact map profiles (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S3 for instance).</p>
      <p>Note that CATH contains over thousand folds and about 2,700 superfamilies, requiring a large number (10,000) of micro-clusters for these highly granular data [<xref ref-type="bibr" rid="CR18">18</xref>]. The results are illustrated in Fig. <xref rid="Fig2" ref-type="fig">2</xref>: the three main classes of proteins (alpha, alpha-beta and beta) cluster largely together, while within the micro-clusters the majority voting results in over 91%, 88% and 87% classification accuracy (that can be further improved to 96, 94 and 90% by increasing by 2-fold the number of micro-clusters at the expense of computation time) at the level of CATH class, architecture, and fold assignment, respectively.<fig id="Fig2"><label>Fig. 2</label><caption><p>Hierarchical clustering of 98,000 protein chains from the Protein Data Bank, using the fragment-based FragBag profile and the uQlust:Tree algorithm. The initial micro-clusters of structures deemed as closely related (i.e. those with identical hash keys, including large “micro-clusters” of nearly identical structures such as those of globins or lysozymes) constitute the leaves in the tree. CATH assignment at the class level for majority alpha, alpha/beta (or alpha + beta) and beta clusters are shown as red, blue and yellow bars, respectively. It should be noted that the uQlust graphical user interface enables interactive exploration of such generated dendograms and other representations of large data sets</p></caption><graphic xlink:href="12859_2016_1381_Fig2_HTML" id="MO2"/></fig>
</p>
      <p>Thus, despite large differences in length and significant variation in the secondary structure content within CATH fold or superfamily members, a simple FragBag profile can capture important global characteristics of the hierarchy of protein folds. On the other hand, the FragBag library had been primarily designed to enable fast retrieval of similar structures from PDB, rather than the overall structural classification. Importantly, the resolution and accuracy achieved here can be further improved by combining FragBag with other types of profiles, such as the Gauss integral representation of the backbone trace used by Pleiades [<xref ref-type="bibr" rid="CR7">7</xref>]. Such extensions can be implemented by using a user defined profile in uQlust, and will be a subject of a future investigation.</p>
    </sec>
    <sec id="Sec10">
      <title>Clustering and ranking of RNA structures</title>
      <p>We briefly illustrate the use of uQlust to cluster and rank RNA structures, using the FARNA benchmark [<xref ref-type="bibr" rid="CR19">19</xref>], and a set of 23S, 16S and 5S ribosomal RNAs, collected from the SCOR database [<xref ref-type="bibr" rid="CR20">20</xref>] and augmented by additional structures obtained from PDB. The results for six FARNA targets, with a subset of 500 models each, obtained using clustering to identify centroids of 5 largest clusters as top scoring models, are summarized in Table <xref rid="Tab4" ref-type="table">4</xref>. The performance of uQlust: Rpart (10,60) with either RNA-SS-LW or RNA-SS-TA (only results for the former are shown) profile and Hamming distance are on par (or better) compared to enhanced K-means approach (uQust:10-means) with 3D structures and RMSD.<table-wrap id="Tab4"><label>Table 4</label><caption><p>Clustering-based RNA model quality assessment for FARNA</p></caption><table frame="hsides" rules="groups"><thead><tr><th>Target</th><th>Best RMSD</th><th>10-means (3D)</th><th>Rpart (10,60)</th></tr></thead><tbody><tr><td>2a43</td><td char="." align="char">4.5</td><td char="." align="char">5.3</td><td char="." align="char">4.6</td></tr><tr><td>1a4d</td><td char="." align="char">3.8</td><td char="." align="char">11.9</td><td char="." align="char">6.0</td></tr><tr><td>1esy</td><td char="." align="char">2.9</td><td char="." align="char">3.4</td><td char="." align="char">3.3</td></tr><tr><td>1kka</td><td char="." align="char">3.6</td><td char="." align="char">4.5</td><td char="." align="char">4.5</td></tr><tr><td>1l2x</td><td char="." align="char">3.9</td><td char="." align="char">4.8</td><td char="." align="char">4.0</td></tr><tr><td>1q9a</td><td char="." align="char">4.1</td><td char="." align="char">4.4</td><td char="." align="char">4.7</td></tr></tbody></table><table-wrap-foot><p>RMSD (Ang) between the native structure and the closest of top 5 centroids, obtained using uQlust:K-means with RMSD distance (third column) or uQlust:Rpart with Hamming distance and RNA-SS-LW profile (last column), are compared with the best possible prediction, i.e., RMSD for the best model in a subset of 500 decoys for each target from [<xref ref-type="bibr" rid="CR19">19</xref>]</p></table-wrap-foot></table-wrap>
</p>
      <p>Hierarchical clustering of ribosomal RNAs using a fragment-based profile is illustrated in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Figure S4. A library of 92 representative coarse-grained 5-mer backbone (phosphorus atom) RNA fragments, derived from the RNA05 set of RNA structures [<xref ref-type="bibr" rid="CR21">21</xref>] is used to define an RNA fragment-based profile, denoted as RNA-FragBag. Such defined profile is then used in conjunction with uQlust:Tree and cosine distance, demonstrating high concordance with the three classes of ribosomal RNAs included.</p>
      <p>Finally, we would like to emphasize that by enabling large-scale numerical experiments and benchmarking, uQlust can provide a platform for further refinement of profile-based approaches for macromolecular structure analysis and modeling, including the development of comprehensive RNA fragment libraries.</p>
    </sec>
  </sec>
  <sec id="Sec11" sec-type="conclusion">
    <title>Conclusions</title>
    <p>By combining profile hashing in conjunctions with 1D residue level, fragment-based or arbitrary user defined profiles of proteins and RNAs, as well as the 1D-jury linear time complexity ranking algorithm with implicit comparison of all pairs of models [<xref ref-type="bibr" rid="CR9">9</xref>], uQlust enables ultrafast and low memory footprint clustering (and ranking) of very large sets of atomistic or coarse-grained models of fixed length using residue profiles, or arbitrary macromolecular structures when using fragment profiles. At the same time, uQlust yields results on par with methods implying much higher computational cost in both model quality assessment and explicit clustering. A number of widely used methods and utilities for macromolecular structure analysis, including DSSP for protein secondary structure and solvent accessibility assignment [<xref ref-type="bibr" rid="CR10">10</xref>], RNAview for RNA secondary structure and base-pair type assignment [<xref ref-type="bibr" rid="CR11">11</xref>], and FragBag for fragment-based profile assignment [<xref ref-type="bibr" rid="CR5">5</xref>], are implemented in uQlust and integrated into workflows for ranking and clustering without the need to use external programs. The code is freely available to the community and can be used in both batch and interactive modes, providing a versatile, efficient and easy-to-use toolkit for macromolecular structure exploration and analysis.</p>
  </sec>
  <sec id="Sec12">
    <title>Availability and requirements</title>
    <p>The uQlust package is freely available under the GNU General Public License at <ext-link ext-link-type="uri" xlink:href="https://github.com/uQlust">https://github.com/uQlust</ext-link>. uQlust has been written in C# and should be easily portable between different operating systems. System independent pre-compiled executables that require .NET ver. 4.5 or higher, or Mono ver. 3.8 on 64-bit Windows or Linux operating systems, respectively, are provided with the distribution.</p>
  </sec>
</body>
<back>
  <app-group>
    <app id="App1">
      <sec id="Sec13">
        <title>Additional file</title>
        <p>
          <media position="anchor" xlink:href="12859_2016_1381_MOESM1_ESM.pdf" id="MOESM1">
            <label>Additional file 1: Figure S1.</label>
            <caption>
              <p>1D-jury algorithm for geometric consensus-based model ranking with contact map profiles. Three models (rows) of a hypothetical protein consisting of just 4 amino acid residues are considered, with the upper triangle of the inter-residue contact map (i,j) arranged as a linear profile. Black squares indicate contacts, while yellow squares indicate pairs of residues that are not in contact. The calculation of the score for the best scoring M2 model that corresponds to the consensus state at 5 (out of 6) profile positions proceeds red arrows. Note that a vector of state counts in each column of the profile can be precomputed in linear time, allowing one to account for all pairwise similarities without the need for a loop over pairs of models. <bold>Figure S2.</bold> Assessment of protein model selection on TASSER benchmark using uQlust: Hash (K,F) with different choices of the number of clusters K, and fraction of data included F. Low (averaged over all TASSER targets) RMSD of the top ranking model with respect to the best model available indicates better results. <bold>Figure S3.</bold> Comparison between full (RMSD-based average linkage) and uQlust:Tree (approximate) hierarchical clustering of coarse-grained structures obtained using CABS-flex server (Jamroz et al., 2013). Three initial conformations of troponin C are used to generate 3 distinct clusters (each containing 3,000 models, and marked by red, green and blue bars, respectively). <bold>Figure S4.</bold> Hierarchical clustering of ribosomal RNAs (blue – 16S, red – 23S, green - 5S) using the fragment-based RNA-FragBag profile, uQlust:Tree in conjunction with profile hashing (using the default number of microclusters) and cosine distance. <bold>Table S1.</bold> Structural profiles implemented in uQlust. For each profile, its type (as defined by the macromolecule it applies to, i.e., either protein or RNA), the source of state assignment, the number of states and the size (length) of the profile are reported. (PDF 260 kb)</p>
            </caption>
          </media>
        </p>
      </sec>
    </app>
  </app-group>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>CA</term>
        <def>
          <p>Carbon alpha (in a residue)</p>
        </def>
      </def-item>
      <def-item>
        <term>CASP</term>
        <def>
          <p>Critical assessment of structure prediction</p>
        </def>
      </def-item>
      <def-item>
        <term>CATH</term>
        <def>
          <p>Class, architecture, topology, homologous superfamily classification</p>
        </def>
      </def-item>
      <def-item>
        <term>CM</term>
        <def>
          <p>Contact map</p>
        </def>
      </def-item>
      <def-item>
        <term>LW</term>
        <def>
          <p>Leontis and Westhof (base pair classification)</p>
        </def>
      </def-item>
      <def-item>
        <term>MQA</term>
        <def>
          <p>Model quality assessment</p>
        </def>
      </def-item>
      <def-item>
        <term>NC</term>
        <def>
          <p>Number of contacts</p>
        </def>
      </def-item>
      <def-item>
        <term>PDB</term>
        <def>
          <p>Protein Data Bank</p>
        </def>
      </def-item>
      <def-item>
        <term>RMSD</term>
        <def>
          <p>Root mean square deviation</p>
        </def>
      </def-item>
      <def-item>
        <term>SA</term>
        <def>
          <p>Solvent accessibility</p>
        </def>
      </def-item>
      <def-item>
        <term>SS</term>
        <def>
          <p>Secondary structure</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors gratefully acknowledge Mr. Mahendra Thapa’s help with generating structure sets used for benchmarking, and Mr. Prakash Velayutham’s technical help.</p>
    <sec id="FPar1">
      <title>Funding</title>
      <p>This work has been in part supported by NIH grants R21AI097936, R01CA122346, P30ES006096, UL1TR001425, R01MH107487, R21ES024807 and U54HL127624.</p>
    </sec>
    <sec id="FPar2">
      <title>Availability of data and materials</title>
      <p>Additional tables and figures illustrating the performance of uQlust are included in supplementary materials. The source code, pre-compiled executables, user manual and a number of utilities and benchmarks/examples are available from <ext-link ext-link-type="uri" xlink:href="http://github.com/uQlust">http://github.com/uQlust</ext-link>. Predefined workflows and data sets for all examples discussed here are also available as part of the uQlust package.</p>
    </sec>
    <sec id="FPar3">
      <title>Authors’ contributions</title>
      <p>RA &amp; JM developed and tested structural profiles, algorithmic solutions, ranking and clustering heuristics, and examples of workflows; RA developed the code base; RA &amp; JM wrote the manuscript and tutorials. All authors read and approved the final manuscript.</p>
    </sec>
    <sec id="FPar4">
      <title>Competing interests</title>
      <p>The authors declare that they have no competing interests.</p>
    </sec>
    <sec id="FPar5">
      <title>Consent for publication</title>
      <p>Not applicable.</p>
    </sec>
    <sec id="FPar6">
      <title>Ethics approval and consent to participate</title>
      <p>Not applicable.</p>
    </sec>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Elmer SP, Park S, Pande VS. Foldamer dynamics expressed via Markov state models. II. State space decomposition. J Chem Phys. 2005;123(11):114903.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Shukla D, Hernández CX, Weber JK, Pande VS. Markov state models provide insights into dynamic modulation of protein function. Acc. Chem. Res. 2015. p. 414–22.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cheng</surname>
            <given-names>CY</given-names>
          </name>
          <name>
            <surname>Chou</surname>
            <given-names>FC</given-names>
          </name>
          <name>
            <surname>Das</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Modeling complex RNA tertiary folds with Rosetta</article-title>
        <source>Methods Enzymol</source>
        <year>2015</year>
        <volume>553</volume>
        <fpage>35</fpage>
        <lpage>64</lpage>
        <pub-id pub-id-type="doi">10.1016/bs.mie.2014.10.051</pub-id>
        <?supplied-pmid 25726460?>
        <pub-id pub-id-type="pmid">25726460</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ginalski</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Elofsson</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fischer</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Rychlewski</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>3D-jury: a simple approach to improve protein structure predictions</article-title>
        <source>Bioinformatics</source>
        <year>2003</year>
        <volume>19</volume>
        <fpage>1015</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg124</pub-id>
        <?supplied-pmid 12761065?>
        <pub-id pub-id-type="pmid">12761065</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Budowski-Tal</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Nov</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Kolodny</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>FragBag, an accurate representation of protein structure, retrieves structural neighbors from the entire PDB quickly and accurately</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2010</year>
        <volume>107</volume>
        <fpage>3481</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0914097107</pub-id>
        <?supplied-pmid 20133727?>
        <pub-id pub-id-type="pmid">20133727</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jamroz</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kolinski</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>ClusCo: clustering and comparison of protein models</article-title>
        <source>BMC Bioinformatics</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>62</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-62</pub-id>
        <?supplied-pmid 23433004?>
        <pub-id pub-id-type="pmid">23433004</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harder</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Borg</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boomsma</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Roegen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Hamelryck</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Fast large-scale clustering of protein structures using gauss integrals</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>510</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr692</pub-id>
        <?supplied-pmid 22199383?>
        <pub-id pub-id-type="pmid">22199383</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Skwark</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Elofsson</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>PconsD: ultra rapid, accurate model quality assessment for protein structure prediction</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>1817</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt272</pub-id>
        <?supplied-pmid 23677942?>
        <pub-id pub-id-type="pmid">23677942</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Adamczak</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Pillardy</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Vallat</surname>
            <given-names>BK</given-names>
          </name>
          <name>
            <surname>Meller</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Fast geometric consensus approach for protein model quality assessment</article-title>
        <source>J Comput Biol</source>
        <year>2011</year>
        <volume>18</volume>
        <fpage>1807</fpage>
        <lpage>18</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2010.0170</pub-id>
        <?supplied-pmid 21244273?>
        <pub-id pub-id-type="pmid">21244273</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Touw</surname>
            <given-names>WG</given-names>
          </name>
          <name>
            <surname>Baakman</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Black</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Te Beek</surname>
            <given-names>TAH</given-names>
          </name>
          <name>
            <surname>Krieger</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Joosten</surname>
            <given-names>RP</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A series of PDB-related databanks for everyday needs</article-title>
        <source>Nucleic Acids Res</source>
        <year>2015</year>
        <volume>43</volume>
        <fpage>D364</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gku1028</pub-id>
        <?supplied-pmid 25352545?>
        <pub-id pub-id-type="pmid">25352545</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Jossinet</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Leontis</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Berman</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Tools for the automatic identification and classification of RNA base pairs</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>3450</fpage>
        <lpage>60</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg529</pub-id>
        <?supplied-pmid 12824344?>
        <pub-id pub-id-type="pmid">12824344</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lu</surname>
            <given-names>XJ</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>WK</given-names>
          </name>
        </person-group>
        <article-title>3DNA: a software package for the analysis, rebuilding and visualization of three-dimensional nucleic acid structures</article-title>
        <source>Nucleic Acids Res</source>
        <year>2003</year>
        <volume>31</volume>
        <fpage>5108</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkg680</pub-id>
        <?supplied-pmid 12930962?>
        <pub-id pub-id-type="pmid">12930962</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Coutsias</surname>
            <given-names>EA</given-names>
          </name>
          <name>
            <surname>Seok</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Dill</surname>
            <given-names>KA</given-names>
          </name>
        </person-group>
        <article-title>Using quaternions to calculate RMSD</article-title>
        <source>J Comput Chem</source>
        <year>2004</year>
        <volume>25</volume>
        <fpage>1849</fpage>
        <lpage>57</lpage>
        <pub-id pub-id-type="doi">10.1002/jcc.20110</pub-id>
        <?supplied-pmid 15376254?>
        <pub-id pub-id-type="pmid">15376254</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Siew</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Elofsson</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rychlewski</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Fischer</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>MaxSub: an automated measure for the assessment of protein structure prediction quality</article-title>
        <source>Bioinformatics</source>
        <year>2000</year>
        <volume>16</volume>
        <fpage>776</fpage>
        <lpage>85</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/16.9.776</pub-id>
        <?supplied-pmid 11108700?>
        <pub-id pub-id-type="pmid">11108700</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nugent</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Cozzetto</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>DT</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of predictions in the CASP10 model refinement category</article-title>
        <source>Proteins Struct Funct Bioinforma</source>
        <year>2014</year>
        <volume>82</volume>
        <fpage>98</fpage>
        <lpage>111</lpage>
        <pub-id pub-id-type="doi">10.1002/prot.24377</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wu</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Skolnick</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Y</given-names>
          </name>
        </person-group>
        <article-title>Ab initio modeling of small proteins by iterative TASSER simulations</article-title>
        <source>BMC Biol</source>
        <year>2007</year>
        <volume>5</volume>
        <fpage>17</fpage>
        <pub-id pub-id-type="doi">10.1186/1741-7007-5-17</pub-id>
        <?supplied-pmid 17488521?>
        <pub-id pub-id-type="pmid">17488521</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Jamroz M, Kolinski A, Kmiecik S. CABS-flex: Server for fast simulation of protein structure fluctuations. Nucleic Acids Res. 2013;41.</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cuff</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Sillitoe</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Clegg</surname>
            <given-names>AB</given-names>
          </name>
          <name>
            <surname>Rentzsch</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Furnham</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Pellegrini-Calace</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Thornton</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Orengo</surname>
            <given-names>CA</given-names>
          </name>
        </person-group>
        <article-title>Extending CATH: increasing coverage of the protein structure universe and linking structure with function</article-title>
        <source>Nucleic Acids Res</source>
        <year>2011</year>
        <volume>39</volume>
        <issue>Database issue</issue>
        <fpage>D420</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq1001</pub-id>
        <?supplied-pmid 21097779?>
        <pub-id pub-id-type="pmid">21097779</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Das</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Automated de novo prediction of native-like RNA tertiary structures</article-title>
        <source>Proc Natl Acad Sci U S A</source>
        <year>2007</year>
        <volume>104</volume>
        <fpage>14664</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.0703836104</pub-id>
        <?supplied-pmid 17726102?>
        <pub-id pub-id-type="pmid">17726102</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tamura</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hendrix</surname>
            <given-names>DK</given-names>
          </name>
          <name>
            <surname>Klosterman</surname>
            <given-names>PS</given-names>
          </name>
          <name>
            <surname>Schimmelman</surname>
            <given-names>NR</given-names>
          </name>
          <name>
            <surname>Brenner</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Holbrook</surname>
            <given-names>SR</given-names>
          </name>
        </person-group>
        <article-title>SCOR: Structural Classification of RNA, version 2.0</article-title>
        <source>Nucleic Acids Res</source>
        <year>2004</year>
        <volume>32</volume>
        <fpage>D182</fpage>
        <lpage>4</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkh080</pub-id>
        <?supplied-pmid 14681389?>
        <pub-id pub-id-type="pmid">14681389</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Humphris-Narayanan</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Pyle</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Discrete RNA libraries from pseudo-torsional space</article-title>
        <source>J Mol Biol</source>
        <year>2012</year>
        <volume>421</volume>
        <fpage>6</fpage>
        <lpage>26</lpage>
        <pub-id pub-id-type="doi">10.1016/j.jmb.2012.03.002</pub-id>
        <?supplied-pmid 22425640?>
        <pub-id pub-id-type="pmid">22425640</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Herbert A. MaxCluster: a tool for protein structure comparison and clustering. <ext-link ext-link-type="uri" xlink:href="http://www.sbg.bio.ic.ac.uk/~maxcluster/">http://www.sbg.bio.ic.ac.uk/~maxcluster/</ext-link></mixed-citation>
    </ref>
  </ref-list>
</back>

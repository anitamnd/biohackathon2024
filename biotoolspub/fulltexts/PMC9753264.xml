<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9753264</article-id>
    <article-id pub-id-type="publisher-id">2831</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-022-02831-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Strobealign: flexible seed size enables ultra-fast and accurate read alignment</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-7378-2320</contrib-id>
        <name>
          <surname>Sahlin</surname>
          <given-names>Kristoffer</given-names>
        </name>
        <address>
          <email>ksahlin@math.su.se</email>
        </address>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <aff id="Aff1"><institution-wrap><institution-id institution-id-type="GRID">grid.10548.38</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 9377</institution-id><institution>Department of Mathematics, </institution><institution>Science for Life Laboratory, Stockholm University, </institution></institution-wrap>106 91 Stockholm, Sweden </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>15</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>15</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <elocation-id>260</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>2</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Read alignment is often the computational bottleneck in analyses. Recently, several advances have been made on seeding methods for fast sequence comparison. We combine two such methods, syncmers and strobemers, in a novel seeding approach for constructing dynamic-sized fuzzy seeds and implement the method in a short-read aligner, strobealign. The seeding is fast to construct and effectively reduces repetitiveness in the seeding step, as shown using a novel metric E-hits. strobealign is several times faster than traditional aligners at similar and sometimes higher accuracy while being both faster and more accurate than more recently proposed aligners for short reads of lengths 150nt and longer. Availability: <ext-link ext-link-type="uri" xlink:href="https://github.com/ksahlin/strobealign">https://github.com/ksahlin/strobealign</ext-link></p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-022-02831-7.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Read alignment</kwd>
      <kwd>Short-reads</kwd>
      <kwd>Read mapping</kwd>
      <kwd>Strobemers</kwd>
      <kwd>Syncmers</kwd>
      <kwd>Seed-and-extend</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100001725</institution-id>
            <institution>Royal Swedish Academy of Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>2021-04000_VR</award-id>
        <principal-award-recipient>
          <name>
            <surname>Sahlin</surname>
            <given-names>Kristoffer</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Stockholm University</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open access funding provided by Stockholm University.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Aligning Illumina sequencing reads to a reference genome is the first step in many analysis pipelines. Due to the fundamental role of short-read alignment in bioinformatics, there has been considerable work in this area. BWA [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], Bowtie [<xref ref-type="bibr" rid="CR3">3</xref>], and Bowtie2 [<xref ref-type="bibr" rid="CR4">4</xref>], which use the Burrows-Wheeler transform [<xref ref-type="bibr" rid="CR5">5</xref>], have received widespread use through their favorable memory and runtime trade-off. These aligners have, for several years, been the dominating genomic short-read aligners. Several alternative approaches have been proposed, such as random permutations aligner [<xref ref-type="bibr" rid="CR6">6</xref>], rNA [<xref ref-type="bibr" rid="CR7">7</xref>], SNAP [<xref ref-type="bibr" rid="CR8">8</xref>], and subread [<xref ref-type="bibr" rid="CR9">9</xref>] that has alternative strengths showing improved accuracy or decreased runtime in specific use cases. A comprehensive listing of alignment techniques is found in [<xref ref-type="bibr" rid="CR10">10</xref>]. There are also several major contributions in data structures and algorithms in splice alignment of RNA-seq data [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR12">12</xref>] or pseudo-alignment methods [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] that are incredibly fast by not explicitly performing an exact alignment.</p>
    <p id="Par3">A pioneering approach was the use of minimizers [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] as seeds in alignment and overlap detection algorithms [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR18">18</xref>]. Minimap2 was initially described for long-read alignment but has shown similar alignment accuracy of short reads as popularly used BWA and Bowtie2. Minimap2 uses minimizers as seeds and then employs collinear chaining to produce candidate locations for the alignment step. Along the same trajectory, Mashmap [<xref ref-type="bibr" rid="CR19">19</xref>] and Winnowmap [<xref ref-type="bibr" rid="CR20">20</xref>] were designed for long-reads and made algorithmic contributions to minimizer-based alignment by considering and adjusting the densities and probabilities around the sampling of minimizers.</p>
    <p id="Par4">A computational hurdle in sequence alignment is the length of the seeds, which informs the aligner of candidate locations. Alignment algorithms often need to use a shorter seed length than what gives unique matches in a genome to have good alignment accuracy. Therefore, seeds may produce many candidate regions that need to be filtered based on some score before the alignment stage. Therefore, alignment methods are usually described as employing a <italic>seed-filter-extend</italic> approach, where the seeding and filtering are at the heart of an aligner’s performance. In [<xref ref-type="bibr" rid="CR21">21</xref>], the authors propose an alternative approach to the filtering step by computing a much cheaper Hamming distance of an embedded read representation. Interesting candidate sites should have low embedded Hamming distance and are sent for alignment. Their aligner, Accel-Align, outperforms other aligners in terms of speed.</p>
    <p id="Par5">While filtering is an important step for candidate selection, reducing the false matches caused by repetitive seeds is preferable. To do so, one has to increase seed size. In this work, we describe a seeding approach for creating seeds with variable sizes that are <italic>fuzzy</italic>, i.e., they can match over mutations. Our approach allows us to use much longer seed lengths than other approaches without loss in accuracy. Furthermore, longer seed lengths reduce the number of candidate sites to evaluate, allowing much faster alignment. Our contribution is based on two recent advancements in the area of sequence comparison: syncmers [<xref ref-type="bibr" rid="CR22">22</xref>] and strobemers [<xref ref-type="bibr" rid="CR23">23</xref>]. Both syncmers and strobemers have been demonstrated to improve sequence similarity detection [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR24">24</xref>]. Syncmers were proposed as an alternative to the minimizer subsampling technique. In contrast, strobemers were proposed to produce gapped seeds as an alternative to <italic>k</italic>-mers and spaced <italic>k</italic>-mers.</p>
    <p id="Par6">Here, we show that syncmers and strobemers can be combined in what becomes a high-speed indexing method, roughly corresponding to the speed of computing minimizers. Our technique is based on first subsampling <italic>k</italic>-mers from the reference sequences by computing canonical open syncmers [<xref ref-type="bibr" rid="CR22">22</xref>], then producing strobemers [<xref ref-type="bibr" rid="CR23">23</xref>] formed from linking together syncmers occurring close-by on the reference using the randstrobe method. A consequence is that instead of using a single seed (e.g., <italic>k </italic>= 21 as default in minimap2 for short-read alignment), we show that we can link together two syncmers as a strobemer seed and achieve similar accuracy to using individual minimizers.</p>
    <p id="Par7">Our first contribution in this work is the novel seeding approach by computing strobemers over syncmers. We demonstrate that this seeding is fast to compute (less than 5 min to index hg38) and is therefore competitive to, e.g., minimizers in high-performance sequence mapping scenarios. Our seeding method constitutes a novel algorithm class according to the comprehensive aligner classification table in [<xref ref-type="bibr" rid="CR10">10</xref>], with our method being hashing of variable-length fuzzy seeds. We further evaluate the seed-repetitiveness of our seeding compared to some of the current approaches in read aligners (<italic>k</italic>-mers, minimizers, syncmers) using a novel metric, E-hits, and show that our seeds are effective at reducing seed-repetitiveness. We believe that E-hits will be a useful metric for further development and comparisons of seeding approaches.</p>
    <p id="Par8">Our second contribution is implementing our seeding technique in a short-read alignment tool, strobealign. We use simulated and biological data to show that strobealign is several times faster than traditional aligners such as BWA and Bowtie2 while being faster and more accurate than more recently proposed aligners for short reads of lengths 150 nt and longer. Interestingly, we observe that subsampling methods such as strobealign and minimap2 can also be more accurate than BWA-MEM on high-diversity datasets. Strobealign reaches peak performance on paired-end reads of lengths 150–300 nucleotides (nt), which is well suited for advances in short-read sequencing length and throughput. An example of such an advance is Illumina’s Chemistry X reads that are claimed to be two times longer [<xref ref-type="bibr" rid="CR25">25</xref>]. Strobealign’s speed can remove the alignment bottleneck and free up substantial computing resources in many pipelines.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Method overview</title>
      <p id="Par9">We present a seeding method for sequence similarity search that is based on a combination of two previously published techniques syncmers [<xref ref-type="bibr" rid="CR22">22</xref>] and strobemers [<xref ref-type="bibr" rid="CR23">23</xref>]. The main idea of the seeding approach is to create fuzzy seeds by first computing open syncmers from the reference sequences, then linking the syncmers together using the randstrobe method [<xref ref-type="bibr" rid="CR23">23</xref>] with two syncmers (Fig. <xref rid="Fig1" ref-type="fig">1</xref>A). Our fuzzy seeds enable us to use larger seed lengths that are more likely to be unique (concept illustrated in Fig. <xref rid="Fig1" ref-type="fig">1</xref>B) while still allowing mutations or read errors between the syncmers. Figure <xref rid="Fig1" ref-type="fig">1</xref>C illustrates the seeds extracted from a DNA sequence.<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of seeding construction. <bold>A</bold> Open syncmers are constructed from the sequence, and randstrobes are constructed by linking together syncmers. The second strobe is sampled with a minimum and maximum spread between <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$[w_{min}, w_{max}]$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq1.gif"/></alternatives></inline-formula> strobes downstream from the first strobe. While syncmers may occur several times due to repeats on the genome (red and green boxes), randstrobes are less repetitive. <bold>B</bold> Two reads, <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r_1$$\end{document}</tex-math><mml:math id="M4"><mml:msub><mml:mi>r</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq2.gif"/></alternatives></inline-formula> and <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r_2$$\end{document}</tex-math><mml:math id="M6"><mml:msub><mml:mi>r</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq3.gif"/></alternatives></inline-formula>, are mapped to the reference. Finding matches using only syncmers creates several candidate locations, while the randstrobes are unique in this scenario. In the illustration, the syncmers are spread out for visual purposes. Panel <bold>C</bold> shows a real sampling of randstrobes on a DNA sequence and their spread using (2, 20, 4, 11) with sampling skew</p></caption><graphic xlink:href="13059_2022_2831_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par10">Compared to the study introducing strobemers [<xref ref-type="bibr" rid="CR23">23</xref>], we present two novel ideas. Firstly, [<xref ref-type="bibr" rid="CR23">23</xref>] described strobemers as linking together strobes in “sequence-space,” i.e., over the set of all <italic>k</italic>-mers. Since syncmers represent a subset of <italic>k</italic>-mers from the original sequence, computing randstrobes over this subset of strings is very fast while still having a similar linking range over the original sequence. Secondly, we also introduce a skewed linking approach of the second strobe that links nearby strobes more often (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1) which is more effective for shorter read lengths than the original approach [<xref ref-type="bibr" rid="CR23">23</xref>] (details in the <xref rid="Sec20" ref-type="sec">Methods</xref> section). We implement our seeding approach as the fundamental technique in a new short-read aligner strobealign.</p>
    </sec>
    <sec id="Sec4">
      <title>Overview of read-alignment evaluation</title>
      <sec id="Sec5">
        <title>Tools</title>
        <p id="Par11">We evaluated strobealign (v0.7.1) to six state-of-the-art and recently published short-read aligners, BWA-MEM (v0.7.17), BWA-MEM2 (v2.0pre2), Bowtie2 (v2.3.5), minimap2 (v2.22), Accel-Align (v1.1), and SNAP [<xref ref-type="bibr" rid="CR26">26</xref>] (v2.0.0) on simulated and biological Illumina sequencing data sets. We also attempted to evaluate URMAP [<xref ref-type="bibr" rid="CR27">27</xref>] (v1.0.1480_i86linux64) and PuffAligner [<xref ref-type="bibr" rid="CR28">28</xref>] but were unable to run them for our experiment designs (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note C). We ran all the tools using 16 threads as multithreading is the standard use case. We also investigated how the tools scaled with the number of threads by running them with 4, 8, and 16 threads in one analysis. Since BWA-MEM and BWA-MEM2 have identical accuracy, we will only refer to BWA-MEM when discussing accuracy (to imply BWA-MEM and BWA-MEM2) but evaluate them separately in terms of alignment time and memory.</p>
      </sec>
      <sec id="Sec6">
        <title>Simulated data</title>
        <p id="Par12">We simulated single-end and paired-end reads with read lengths of 50, 75, 100, 150, 200, 250, 300, and 500 nucleotides. We chose these lengths as 50 and 75 are used in applications such as for chromatin profiling or RNA-seq quantification analyses, while 100 to 250 are within the range of standard Illumina protocol read lengths. To investigate performance on future Illumina chemistry X reads, which are claimed to be two times longer than current protocols, we simulated read lengths of 300 and 500 to emulate read lengths of two times the 150 and 250 protocols, respectively. While we include read lengths of 50 and 75nt, we emphasize that strobealign is designed for Illumina read lengths 100nt and above typically used, e.g., for genomic alignment and downstream SNP and indel calling and similar scenarios.</p>
        <p id="Par13">In our first simulated experiment, we simulated ten million single-end and paired-end reads from human genomes at four different divergence levels from hg38 denoted SIM1, SIM2, SIM3, and SIM4, where SIM4 has the highest divergence from hg38 (details on simulations in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note A).</p>
        <p id="Par14">In our second simulated experiment, we simulated ten million paired-end reads from the genomes of the fruit fly (180Mb), maize (2.4Gb), human cell line CHM13  [<xref ref-type="bibr" rid="CR29">29</xref>] (3.2Gb), and rye [<xref ref-type="bibr" rid="CR30">30</xref>] (7.3GB), denoted drosophila, maize, CHM13, and rye, respectively, where reads were simulated at the same diversity level as for the SIM3 dataset. For details on this experiment, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note A. These genomes are of variable sizes, with the latter three more repetitive than hg38.</p>
        <p id="Par15">In our third simulated experiment, we evaluated the aligners by simulating ten million paired-end reads with high SNP and indel rate from a simulated repetitive genome (denoted REPEATS). The REPEATS genome consisting of five hundred 100kbp copies at roughly 90% similarity (details on simulations in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note A).</p>
        <p id="Par16">In our fourth and final simulated experiment, we simulated two larger paired-end read datasets with read lengths 150nt and 250nt denoted SIM150 and SIM250, respectively. The SIM150 and SIM250 datasets contain 300M and 180M reads, respectively, each constituting roughly 30x coverage of hg38. The reads were simulated from a genome with a SIM3 variation rate to hg38. We used these two datasets to evaluate downstream SNP and indel calling from the alignments, and they were chosen to match the lengths of our biological data (described in the next section).</p>
      </sec>
      <sec id="Sec7">
        <title>Biological data</title>
        <p id="Par17">We evaluated downstream SNP and indel calling results on two biological paired-end Illumina read datasets of lengths 150 nt and 250 nt from HG004 in the Genome-In-a-Bottle consortium [<xref ref-type="bibr" rid="CR31">31</xref>]. We denote these datasets BIO150 and BIO250. The BIO150 and BIO250 datasets have a coverage of roughly 32 and 26, respectively. Finally, we also used a subset of 4M reads from BIO150 and BIO250 to evaluate the concordance between the aligners. Details of the datasets are found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note D and details of the SNP and indel calling pipeline in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note E.</p>
      </sec>
      <sec id="Sec8">
        <title>Evaluation metrics</title>
        <p id="Par18">We evaluated the aligner accuracy by looking at the overlap of read alignments with the correct genomic location. For nucleotide level accuracy (such as aligning in and around indels), we evaluate the downstream SNP and indel calling results that the alignments produce. We also evaluate the runtime and memory usage of each aligner. For details on how the evaluation metrics are computed, see Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note B. For the aligners that also support an extension-free mapping mode (Accel-Align, minimap2, and strobealign), we evaluated both the extension-free mapping mode and alignment modes (details on running aligners in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note C).</p>
      </sec>
    </sec>
    <sec id="Sec9">
      <title>Seeding results</title>
      <p id="Par19">An important factor for fast and accurate read alignment is that the seeds are relatively unique on the reference genome. We compared two metrics (E-hits and fraction hard masked seeds) related to seed uniqueness. E-hits indicates how many hits to the reference are found on average, given that reads are drawn uniformly at random from the reference genome. A formal definition of E-hits is given in the “<xref rid="Sec33" ref-type="sec">The E-hits metric”</xref> in “<xref rid="Sec20" ref-type="sec">Methods</xref>.” The fraction of hard-masked seeds is the fraction of seeds with occurrence over 1000 times in the reference and are excluded from seed finding (see “<xref rid="Sec32" ref-type="sec">Implementation details”</xref> section).</p>
      <p id="Par20">We compared E-hits and fraction hard masked seeds for different lengths of <italic>k</italic>-mers, minimizers with density 1/5 (w = 9), open syncmers with density 1/5 (s = k-4, t = 20), and strobealign seeds for the various read lengths (labeled sa<italic>X</italic>, <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X\in \{50, 75, 100, 150,200,250,300,500\}$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:mi>X</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mn>50</mml:mn><mml:mo>,</mml:mo><mml:mn>75</mml:mn><mml:mo>,</mml:mo><mml:mn>100</mml:mn><mml:mo>,</mml:mo><mml:mn>150</mml:mn><mml:mo>,</mml:mo><mml:mn>200</mml:mn><mml:mo>,</mml:mo><mml:mn>250</mml:mn><mml:mo>,</mml:mo><mml:mn>300</mml:mn><mml:mo>,</mml:mo><mml:mn>500</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq4.gif"/></alternatives></inline-formula> (all with 1/5 in density except sa500 that has a density of 1/7). Since strobealign seeds are flexible in seed size, we use the median seed size in our analysis. We used jellyfish [<xref ref-type="bibr" rid="CR32">32</xref>] to obtain the <italic>k</italic>-mer counts and a custom script (provided in Data Availability) to obtain the minimizers and syncmers. All seeds are canonically represented (smallest seed hash value out of forward and reverse complement is stored) as is standard in read alignment (details in “<xref rid="Sec24" ref-type="sec">Modifications to strobemers”</xref> section).</p>
      <p id="Par21">We first observe that subsampling minimizers and syncmers will create a more repetitive index than using all k-mers for seeds of length 20–30, but evens out as seeds become longer (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A–B). This is relevant to read alignment since most aligners use seeds of around 20–30 nt. Secondly, we see that syncmers produce more repetitive index than minimizers, as has been proven in [<xref ref-type="bibr" rid="CR24">24</xref>].<fig id="Fig2"><label>Fig. 2</label><caption><p>Seed uniqueness and time allocation in strobealign. <bold>A</bold> The expected number of hits from a seed randomly drawn from reference (E-hits) for some popular seeding approaches (<italic>k</italic>-mers, minimizers, syncmers) compared to strobealign’s seeds. Minimizers and syncmers are both sampled at a sub-sample fraction of 1/5, and minimizers use a random hash function. For strobealign’s seeds which have variable lengths, the median seed length is plotted. Strobealign’s seeds for read lengths 100–500 nt (typically two linked syncmers of length 20) reduce the repetitiveness an order of magnitude on hg38 compared to using a single syncmer or minimizer of length 20. <bold>B</bold> The fraction of seeds that would be hard masked in strobealign (occurring over 1000 times). On hg38, strobealign’s seeds for read lengths 100–500 nt hard masks 2.6–6 times fewer seeds over syncmers of length 20. <bold>C</bold> The real time spent at various steps in strobealign using 16 threads for the SIM3 datasets of 10 million paired-end reads of different read lengths and the subsampled BIO150 and BIO250 datasets of 4 million paired-end reads of length 250. Reading refer to reading the fastq files. The label “strobemers” refers to the time to generate strobemer seeds from the reads, “find_matches” refers to retrieving and creating merged matches from all strobemer seeds below the repetitive abundance threshold, “rescue” refers to finding merge matches in the rescue mode, “sort_matches” sorts the matches with respect to the candidate map score, and “aln” refers to the base level alignment, in which the large majority of runtime constitutes of calling ssw and a small fraction is computing the hamming distance. Writing the output to SAM was not logged in the experiments but typically takes less time than reading input</p></caption><graphic xlink:href="13059_2022_2831_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par22">When studying how strobealign’s seeds fare to exact seed approaches, we observe that strobealign’s seeds, which use two syncmers of length about 20 (see “<xref rid="Sec32" ref-type="sec">Implementation details”</xref> section), reduce the repetitiveness over using only one syncmer of length 20. For example, when aligning reads of length 150nt (sa150), which pairs two syncmers of length 20 nt, strobealign’s seeds achieve over 15 times lower E-hits than using only one syncmer of 20. The sa150 seeds are also more than three times less frequent to be hard masked on hg38 (Fig. <xref rid="Fig2" ref-type="fig">2</xref>B). The sa150 seeds are comparable to syncmers of size 40 in E-hits and between 40–50 in the fraction of hard-masked seeds.</p>
      <p id="Par23">When comparing sa150 seeds to <italic>k</italic>-mers, the sa150 seeds are as unique as using <italic>k</italic>-mers of about 45 (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A–B). Such long solid <italic>k</italic>-mers are not suited for short-read alignment, and previous studies have typically decided on sizes between 20 and 32 [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR21">21</xref>, <xref ref-type="bibr" rid="CR27">27</xref>]. For the 300 and 500nt reads, strobealign’s seeds have roughly the same statistics as <italic>k</italic>-mers of length 55. On CHM13, the seeding results show a similar trend, although not as strong. Here, sa150 only archives the same E-hits score as using k-mers slightly larger than 20. However, sa150 has much lower hard masking, comparable to k-mers of about size 45.</p>
      <p id="Par24">In summary, our study of E-hits and the fraction of hard masked seeds highlights two points. Firstly, our seeds can achieve the same uniqueness (E-hits and fraction hard masked) as k-mers with lengths traditionally unsuitable for short-read alignment. Secondly, when constructing strobealign seeds, the linking process (strobemers) is responsible for the major reduction in repetitive seeds, as can be seen by comparing strobealign’s seed uniqueness to only using a single minimizer or syncmer of length of about 20 (similarly to what is done in minimap2).</p>
    </sec>
    <sec id="Sec10">
      <title>Indexing results</title>
      <p id="Par25">We measured the time and memory to produce our dynamic-sized seeds on five genomes; drosophila, maize, human (hg38 and CHM13), and rye (Table <xref rid="Tab1" ref-type="table">1</xref>). Our seeding is relatively fast. For example, on hg38, while the total indexing time is 259 and 167 for strobealign and minimap2, respectively, it takes only 133 seconds to construct strobealign’s seeds, compared to 100 seconds to produce minimizers in minimap2. The remaining indexing time is spent on sorting the seeds (standard library sort in C++) and creating a hash table. These are steps that can be further optimized in strobealign by changing algorithms, e.g., using radix sort as in minimap2. Our indexing is also faster than most of the other aligners (Table <xref rid="Tab1" ref-type="table">1</xref>). Furthermore, the seeding step only takes up a small fraction of the total alignment runtime across datasets (yellow segment in Fig. <xref rid="Fig2" ref-type="fig">2</xref>C). As for the peak memory, strobealign has a peak indexing memory footprint of about 31Gb in hg38 and 50Gb on rye, placing it in fourth place behind BWA-MEM, Bowtie2, and minimap2.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Indexing time and peak memory of indexing for aligners using one thread. Strobealign’s indexing time and memory depends on the syncmer density used. <sup>1</sup> When using syncmer density 1/5 (50-300nt datasets). <sup>2</sup>When using syncmer density 1/7 (500nt datasets). <sup>3</sup>SNAP could not index the rye genome (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note. C).<inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^4$$\end{document}</tex-math><mml:math id="M10"><mml:msup><mml:mrow/><mml:mn>4</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq5.gif"/></alternatives></inline-formula>AccelAlign does not have a singe thread mode for indexing. Multithreaded results are displayed on a node with 20 cores. We observed it used 300–700% CPU during indexing. Boldfaced values indicate the most desirable time and memory usage for each dataset</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="2">Drosophila</th><th align="left" colspan="2">Maize</th><th align="left" colspan="2">hg38</th><th align="left" colspan="2">CHM13</th><th align="left" colspan="2">Rye</th></tr><tr><th align="left"/><th align="left">Time (s)</th><th align="left">Mem (Gb)</th><th align="left">Time (s)</th><th align="left">Mem (Gb)</th><th align="left">Time (s)</th><th align="left">Mem (Gb)</th><th align="left">Time (s)</th><th align="left">Mem (Gb)</th><th align="left">Time (s)</th><th align="left">Mem (Gb)</th></tr></thead><tbody><tr><td align="left">minimap2</td><td align="left"><bold>9</bold></td><td align="left">1.3</td><td align="left"><bold>125</bold></td><td align="left">9.8</td><td align="left"><bold>167</bold></td><td align="left">13.0</td><td align="left"><bold>191</bold></td><td align="left">13.2</td><td align="left"><bold>421</bold></td><td align="left">24.8</td></tr><tr><td align="left">Strobealign<inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^1$$\end{document}</tex-math><mml:math id="M12"><mml:msup><mml:mrow/><mml:mn>1</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq6.gif"/></alternatives></inline-formula></td><td align="left">12</td><td align="left">3.4</td><td align="left">176</td><td align="left">15.3</td><td align="left">259</td><td align="left">31</td><td align="left">268</td><td align="left">31.5</td><td align="left">598</td><td align="left">50</td></tr><tr><td align="left">Strobealign<inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^2$$\end{document}</tex-math><mml:math id="M14"><mml:msup><mml:mrow/><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq7.gif"/></alternatives></inline-formula></td><td align="left"><bold>9</bold></td><td align="left">2.3</td><td align="left">144</td><td align="left">15.0</td><td align="left">210</td><td align="left">22.2</td><td align="left">222</td><td align="left">22.6</td><td align="left">545</td><td align="left">44.4</td></tr><tr><td align="left">SNAP</td><td align="left">63</td><td align="left">1.9</td><td align="left">1210</td><td align="left">38.6</td><td align="left">1744</td><td align="left">45.9</td><td align="left">1826</td><td align="left">48.0</td><td align="left">NA<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^3$$\end{document}</tex-math><mml:math id="M16"><mml:msup><mml:mrow/><mml:mn>3</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq8.gif"/></alternatives></inline-formula></td><td align="left">NA<inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^3$$\end{document}</tex-math><mml:math id="M18"><mml:msup><mml:mrow/><mml:mn>3</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq9.gif"/></alternatives></inline-formula></td></tr><tr><td align="left">BWA-MEM</td><td align="left">120</td><td align="left"><bold>0.2</bold></td><td align="left">2397</td><td align="left"><bold>3.2</bold></td><td align="left">3684</td><td align="left"><bold>4.5</bold></td><td align="left">3629</td><td align="left"><bold>4.6</bold></td><td align="left">10,245</td><td align="left"><bold>10.7</bold></td></tr><tr><td align="left">BWA-MEM2</td><td align="left">99</td><td align="left">4.2</td><td align="left">1365</td><td align="left">63.9</td><td align="left">3146</td><td align="left">90.8</td><td align="left">3000</td><td align="left">91.3</td><td align="left">7092</td><td align="left">212.2</td></tr><tr><td align="left">Bowtie2</td><td align="left">228</td><td align="left">0.3</td><td align="left">5629</td><td align="left">4.1</td><td align="left">6008</td><td align="left">5.5</td><td align="left">7002</td><td align="left">5.8</td><td align="left">24,756</td><td align="left">20.0</td></tr><tr><td align="left">AccelAlign<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^4$$\end{document}</tex-math><mml:math id="M20"><mml:msup><mml:mrow/><mml:mn>4</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq10.gif"/></alternatives></inline-formula></td><td align="left">10</td><td align="left">3.4</td><td align="left">101</td><td align="left">28</td><td align="left">134</td><td align="left">38.8</td><td align="left">132</td><td align="left">40</td><td align="left">320</td><td align="left">92.5</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec11">
      <title>Results on hg38 simulated data</title>
      <p id="Par26">For the paired-end read experiments, we present the accuracy, runtime, and percent aligned reads for the SIM3 dataset (Fig. <xref rid="Fig3" ref-type="fig">3</xref>), which has a SNP and small indel rate roughly observed in a human population. The remaining three datasets with both lower (SIM1 and SIM2) and higher (SIM4) variation rates are found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2-4. When looking at alignment accuracy for the shortest read lengths of 50–75 nt that are useful in experiments such as RNA-seq gene expression profiling or chromatin profiling, the traditional aligners BWA-MEM, BWA-MEM2 and Bowtie2 have the highest accuracy. For these types of analyses and read lengths, BWA-MEM, Bowtie2, or specialized aligners such as Chromap [<xref ref-type="bibr" rid="CR33">33</xref>] for chromatin data or pseudo-alignment methods such as Kallisto [<xref ref-type="bibr" rid="CR13">13</xref>] or Salmon [<xref ref-type="bibr" rid="CR14">14</xref>] for RNA-seq reads should be used. Since strobealign is currently not designed for this type of data, we, from now on, focus our evaluation on the common genomic analysis read lengths of 100–250nt, and future chemistry X read lengths of 300 and 500.<fig id="Fig3"><label>Fig. 3</label><caption><p>Accuracy (<bold>A</bold>), percent aligned reads (<bold>B</bold>), and runtime (<bold>C</bold>) of aligning paired-end reads to the SIM3 dataset</p></caption><graphic xlink:href="13059_2022_2831_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par28">For SIM1-SIM3 with read lengths 150nt and above, strobealign has at most 0.1% lower accuracy than BWA-MEM (read lengths 300 and 500 on SIM2; Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2), but the accuracy gap is only 0.05% to non-existent on SIM3 (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A). For SIM4, strobealign has higher accuracy than BWA-MEM with about 0.1%. Overall, strobealign and BWA-MEM typically have the highest and second-highest accuracy on most of the 150–500 nt datasets, although other aligners achieve good accuracy on individual datasets. Specifically, minimap2 has the highest accuracy on SIM4 for read lengths 150 and 200 (about 0.05% higher than strobealign), and SNAP and Bowtie2 have high accuracy on the low diversity datasets SIM1 and SIM2. While SNAP’s accuracy is high for the low diversity datasets, it quickly becomes non-competitive for higher diversity (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2). For read lengths of 100 nt, BWA-MEM has 0.15% higher accuracy than strobealign across the SIM1-SIM4 datasets. Strobealign and BWA-MEM are typically also able to align the most reads (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4).</p>
      <p id="Par29">As for alignment time for read lengths of 100–250nt, strobealign is about 7 times faster than BWA-MEM and 4.5–6 times faster than BWA-MEM2 (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3). SNAP also shows competitive runtime on the low-diversity datasets SIM1 and SIM2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3). For the simulated chemistry X read lengths of 300nt and 500nt, strobealign is 6.4–9 times faster than BWA-MEM and 4.5–7 times faster than BWA-MEM2 (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3).</p>
      <p id="Par30">In addition to being several times faster than BWA-MEM2, strobealign also uses 1.5–2.1x lower peak memory than BWA-MEM2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5). BWT-based aligners such as BWA-MEM and Bowtie2 use much lower peak memory than all other aligners (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5), where Bowtie2 has the lowest peak memory across all experiments in this analysis.</p>
      <p id="Par31">We also ran the alignment tools with 4, 8, and 16 threads on the different datasets from the SIM3 dataset. Alignment time nearly halves for the tools when doubling the number of threads suggesting that the tools utilized the resources well (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S7). Relative alignment times between the tools for 4 and 8 threads stay similar to our benchmarks using 16 threads.</p>
      <p id="Par32">For our single-end data experiments (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S8-11), we largely observe the same results reported for the paired-end evaluation. Strobealign is the fastest tool for all read lengths of 150 nt and above. Although strobealign has slightly worse performance on high-diversity datasets in single-end mode (panels SIM3 and SIM4 in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S8), it has substantially higher accuracy and percentage of aligned reads to the tools with similar speed (Accel-Align and SNAP). Minimap2 performs well for the single-end reads of the highest diversity (SIM4). The analysis is reported in detail in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note F.</p>
      <p id="Par33">Finally, as expected, only finding the right location (extension-free mapping mode) of minimap2 and strobealign have lower accuracy than their respective read alignment modes. However, strobealign’s extension-free mapping mode mode has a more substantial accuracy reduction to its alignment mode than minimap2. This indicates that there might be room to develop a better strobemer-based scoring function that more frequently assigns the true location with the highest score. However, the primary purpose of short-read aligners is to perform extension alignment at the mapping location. Extension-free mapping mode is not implemented in many aligners.</p>
      <p id="Par34">In summary, for the hg38 paired-end read analysis, strobealign has the best tradeoff between accuracy, runtime, and percent aligned reads to any of the other benchmarked aligners on most of the datasets. Strobealign and BWA-MEM have the highest accuracies across diversity levels for reads of lengths 150nt and above and are usually within a difference of 0.1% to each other. On the high-diversity dataset SIM4 for read lengths of 150nt and longer, there is no tradeoff between accuracy and runtime between the two tools, as strobealign is several times faster and more accurate than BWA-MEM and BWA-MEM2, as well as uses lower memory than BWA-MEM2. A notable aligner is SNAP, which has high accuracy and is very fast on SIM1. However, its performance across accuracy, speed, and percentage of aligned reads deteriorates substantially with increased diversity (Fig. <xref rid="Fig3" ref-type="fig">3</xref>, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2).</p>
    </sec>
    <sec id="Sec12">
      <title>Results on other genomes</title>
      <p id="Par35">Our benchmarks on the four additional genomes drosophila, maize, CHM13, and rye broadly show similar results to our experiments on hg38. That is, on most datasets with read lengths 150nt or longer, strobealign and BWA-MEM have substantially higher accuracy than the other aligners (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S12). For example, strobealign is slightly more accurate than BWA-MEM (about 0.05%) on drosophila and slightly less accurate (at most 0.11%) than BWA-MEM on the new human genome CHM13 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S12C). In addition, Strobealign is consistently 7-9 times faster than BWA-MEM on the maize, CHM13, and rye genomes (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S13) and 4–5 times faster than BWA-MEM2 and uses 2–3 times less peak memory than BWA-MEM2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S14).</p>
      <p id="Par36">On maize and rye, strobealign does not reach comparable accuracy with BWA-MEM for read lengths of 150 and 200 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S12). All aligners, including strobealign, have been run using default parameters which may not be optimal for particular read lengths or genomes. To study if we could reduce this gap, we specified the parameter -M 40 to strobealign to consider more alignment locations (default is 20). With this setting, we observed that the gap in accuracy nearly disappeared on maize and was reduced on rye (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S16), while alignment time was still about 5–7.5 times faster than BWA-MEM and about 3–3.5 times faster than BWA-MEM2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: S17). With -M 40, strobealign’s accuracy also remains close to identical to BWA-MEM on drosophila and CHM13 while being, e.g., around 7 times faster than BWA-MEM and 4-4.5 times faster than BWA-MEM2 on CHM13 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S16-17).</p>
      <p id="Par37">As for general memory usage (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S14), strobealign’s indexing scales with the number of unique seeds. For example, Strobealign uses only 1.5 times more memory for a genome that is 2.3 times as large (rye). This scaling is not observed in BWA-MEM2. As for the number of aligned reads, BWA-MEM and strobealign align the most reads in general (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S15).</p>
      <p id="Par38">Finally, we observe that many tools face complications when aligning reads to rye. Minimap2’s percentage of aligned reads and accuracy drop to less than 50% accuracy on most instances and does not show in the figures. Also, SNAP and Accel-Align could not run on this dataset (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note C).</p>
    </sec>
    <sec id="Sec13">
      <title>Results on the REPEATS dataset</title>
      <p id="Par39">We ran the aligners in paired-end mode on the REPEATS dataset, which constitutes a particularly challenging repetitive dataset with high diversity (described in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note A). On this dataset, strobealign and minimap2 have the highest accuracy (Fig. <xref rid="Fig4" ref-type="fig">4</xref>A). However, minimap2’s accuracy comes at the cost of runtime on this dataset, where it is as slow as BWA-MEM or slower. Strobealign has the highest accuracy, most aligned reads, and the fastest runtime for all the read lengths of 150nt and longer ((Fig. <xref rid="Fig4" ref-type="fig">4</xref>A–C), being 5–10 times faster than minimap2, 4–6 times faster than BWA-MEM, and about 3.5 times faster than BWA-MEM2. Accel-Align also has a relatively competitive accuracy-runtime tradeoff on the 150nt and 200nt read lengths in this experiment.<fig id="Fig4"><label>Fig. 4</label><caption><p>Accuracy (<bold>A</bold>), percent aligned reads (<bold>B</bold>), and runtime (<bold>C</bold>) of aligning paired-end reads to the REPEATS dataset</p></caption><graphic xlink:href="13059_2022_2831_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec14">
      <title>Concordance on biological data</title>
      <p id="Par40">As we do not have the ground truth genomic location of the biological reads, we used a subset of the BIO150 and BIO250 datasets (details in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note D) to investigate read alignment concordance. We used the slower but tried-and-tested tools BWA-MEM (BWA-MEM2) and Bowtie2 as gold standard as we observed that they aligned the most reads (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A). We then scored the rest of the aligners based on alignment concordance with the two tried-and-tested aligners. Specifically, we measured the concordance in alignment coordinates between three tools: BWA-MEM, Bowtie2, and each of the remaining aligners (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B). We assume in this analysis that a high concordance with BWA-MEM and Bowtie2 is a proxy of high accuracy. We also measured runtime and the percentage of aligned reads.<fig id="Fig5"><label>Fig. 5</label><caption><p>Alignment concordance results for a subset of of 4 million paired-end reads of the BIO150 and BIO250 datasets. <bold>A</bold> The percentage of aligned reads. <bold>B</bold> For strobealign, minimap2, Accel-Align, SNAP, the number of reads that were aligned to the same location (overlapping alignment coordinates) out of the reads that Bowtie2 and BWA-MEM/BWA-MEM2 aligned to the same location (i.e., three-way concordance). <bold>C</bold> The runtime</p></caption><graphic xlink:href="13059_2022_2831_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par41">We observe that strobealign is the fastest tool, has the most aligned reads, and is most consistent with BWA-MEM and Bowtie2 (Fig. <xref rid="Fig5" ref-type="fig">5</xref>) for both datasets. The second best performing aligner in this analysis is minimap2. We further looked at the detailed concordance Venn diagrams between BWA-MEM, Bowtie2, strobealign, and minimap2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S18). Minimap2 shares a substantial fraction of alignments with BWA-MEM and relatively few with Bowtie2, while strobealign has a more evenly distributed concordance diagram between Bowtie2 and BWA-MEM. Some of the overlaps we see uniquely shared by two aligners may be on the implementation level by choosing the same random alignment location in case of ties, as aligners have different methodologies to select locations in ambiguous scenarios.</p>
    </sec>
    <sec id="Sec15">
      <title>SNP and indel calling analysis</title>
      <p id="Par42">A common application downstream of read alignment is SNP and indel prediction. While correct read location is desired (high mapping accuracy), an aligner also needs accurate base-level alignments when calling SNPs and, in particular, indels. While such an analysis supplements a mapping accuracy analysis, a caveat is that variant callers use MAPQ scores for SNV and indel prediction [<xref ref-type="bibr" rid="CR34">34</xref>]; therefore, some callers may be developed or tuned based on popular aligners’ MAPQ scores. Specifically, it has been shown that <italic>bcftools call</italic> was the SNP caller that produced the best result with BWA-MEM alignments out of seven variant calling tools [<xref ref-type="bibr" rid="CR35">35</xref>]. Nevertheless, we used <italic>bcftools call</italic> to benchmark recall, precision, and <italic>F</italic>-score of SNP and indel calling from the aligners’ output on SIM150, SIM250, BIO150, and BIO250 datasets. Details on the data and analysis pipeline are found in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note D and E, respectively.</p>
      <p id="Par43">As for SNP calling, strobealign has 1% and 1.9% lower recall than BWA-MEM on the BIO150 and BIO250 datasets (Fig. <xref rid="Fig6" ref-type="fig">6</xref>A; left panel) but has the highest precision out of all aligners, with a 5.4% and 5.3% higher precision than BWA-MEM (Fig. <xref rid="Fig6" ref-type="fig">6</xref>A; center panel). When combined, strobealign has the highest SNP calling <italic>F</italic>-score on both the biological datasets among all aligners, with a 2.7% and 2.5% higher <italic>F</italic>-score than BWA-MEM on the BIO150 an BIO250 datasets, respectively (Fig. <xref rid="Fig6" ref-type="fig">6</xref>A; right panel). On the simulated datasets, the recall and precision are similar for all aligners except Accel-Align. Strobealign has the second-highest <italic>F</italic>-scores after BWA-MEM with an average of 0.45% lower recall at the same precision, resulting in a 0.25% lower <italic>F</italic>-score than BWA-MEM.<fig id="Fig6"><label>Fig. 6</label><caption><p>SNP and indel calling with bcftools on SIM150, SIM250, BIO150, and BIO250 . <bold>A</bold>, <bold>B</bold> Recall, precision, and <italic>F</italic>-score for SNP and indel calling, respectively. <bold>C</bold> Alignment runtime. In <bold>A</bold>, the <italic>y</italic>-axis was cut at 75% for visibility. Accel-Align has 66.0% and 65.5% for BIO150 and BIO250, respectively</p></caption><graphic xlink:href="13059_2022_2831_Fig6_HTML" id="MO6"/></fig></p>
      <p id="Par44">As for indel calling, which for the biological datasets was computed against all gold-standard variants found by the GIAB consortium, all the aligners have a low (and similar) recall and precision. BWA-MEM has a 0.1% higher recall but a 0.1% lower precision over strobealign on BIO150 and BIO150. However, for the indel calling on simulated data, strobealign has both the highest recall and precision across aligners, with a substantial increase in recall on the SIM150 dataset (3.3%, Fig. <xref rid="Fig6" ref-type="fig">6</xref>B), giving the highest <italic>F</italic>-scores on both the datasets.</p>
      <p id="Par45">As for runtime, strobealign is the fastest aligner across the four datasets, with a 5–8.5 times speedup over BWA-MEM and 3.3–5.3 times speedup over BWA-MEM2.</p>
    </sec>
  </sec>
  <sec id="Sec16">
    <title>Discussion</title>
    <p id="Par46">We have presented a novel approach to compute seeds that can be used for sequence mapping. We showed that our seeding method is fast to construct (Table <xref rid="Tab1" ref-type="table">1</xref>) and that our seeds can achieve the same uniqueness as k-mers with lengths traditionally unsuitable for short-read alignment (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A-B).</p>
    <p id="Par47">We implemented our seeding method in a short read aligner, strobealign. We demonstrate that strobealign has comparable accuracy and percentage of aligned reads to BWA-MEM when aligning paired-end reads of several different lengths from several genomes (Figs. <xref rid="Fig3" ref-type="fig">3</xref>A and <xref rid="Fig4" ref-type="fig">4</xref>A, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2, S12, and S16) while being 6–9 times faster on most benchmarked genomes for read lengths 150nt and longer (Figs. <xref rid="Fig3" ref-type="fig">3</xref>C and <xref rid="Fig4" ref-type="fig">4</xref>C, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3 and S13). Strobealign is also typically 3.5–7 times faster and has 2–2.5 times lower memory usage than BWA-MEM2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S14). Notably, we also observe that strobealign is both more accurate and several times faster than BWA-MEM and BWA-MEM2 on some genomes (SIM4, drosophila, REPEATS) for read lengths of 150 nt and longer. While other aligners fare well on individual experiments, they do not generally achieve state-of-the-art accuracy on several datasets caused by, e.g<italic>.</italic>, sequence diversity, repetitive genomes, or longer read lengths.</p>
    <p id="Par48">Our conclusions from our simulated experiments also translate to the biological datasets. Strobealign has the most aligned reads (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A), the largest concordance with state-of-the-art BWA-MEM and Bowtie2 (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B), and the fastest runtime (Figs. <xref rid="Fig5" ref-type="fig">5</xref>C and <xref rid="Fig6" ref-type="fig">6</xref>C). In addition, strobealign’s alignments achieve the highest <italic>F</italic>-scores among all aligners when calling SNPs on the biological data sets and indels on the simulated datasets. Our experiments suggest that for Illumina reads of 150nt and longer, strobealign can remove the alignment bottleneck in many analysis pipelines without compromising alignment accuracy and downstream SNP and indel calling. A caveat with assessing an aligners accuracy based on downstream variant calls is that a caller may take the MAPQ score into account when calling variants, resulting in some variant callers being optimized for the scores of specific aligners. Therefore, it is important to take both mapping accuracy and variant calling results into account when evaluating an aligner.</p>
    <p id="Par49">The memory usage of strobealign and other recent aligners (Accel-Align and SNAP) is relatively high compared to memory-efficient tools such as BWA-MEM and Bowie2 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3). However, most large sequencing datasets are aligned in multi-thread mode on computing resources with several cores and more than 32Gb of RAM. Therefore, the memory constraint should not be of practical concern in many common bioinformatic pipelines.We have summarized our findings in Table <xref rid="Tab2" ref-type="table">2</xref>.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Overview of aligner characteristics based on results from our experiments. Boldfaced values indicate the most desirable result across the different metrics. Brief comments on the characteristics of the aligners are included</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Category</th><th align="left">Tool</th><th align="left">%-correct<inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\uparrow$$\end{document}</tex-math><mml:math id="M22"><mml:mo stretchy="false">↑</mml:mo></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq11.gif"/></alternatives></inline-formula></th><th align="left">%-aligned<inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\uparrow$$\end{document}</tex-math><mml:math id="M24"><mml:mo stretchy="false">↑</mml:mo></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq12.gif"/></alternatives></inline-formula></th><th align="left">Speed<inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\uparrow$$\end{document}</tex-math><mml:math id="M26"><mml:mo stretchy="false">↑</mml:mo></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq13.gif"/></alternatives></inline-formula></th><th align="left">Mem<inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\downarrow$$\end{document}</tex-math><mml:math id="M28"><mml:mo stretchy="false">↓</mml:mo></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq14.gif"/></alternatives></inline-formula></th><th align="left">Comment on overall results</th></tr></thead><tbody><tr><td align="left" rowspan="2">Traditional</td><td align="left">BWA-MEM</td><td align="left"><bold>High</bold></td><td align="left"><bold>High</bold></td><td align="left">Low</td><td align="left"><bold>Low</bold></td><td align="left">Works well in all benchmarked scenarios. High accuracy, but slow</td></tr><tr><td align="left">Bowtie2</td><td align="left"><bold>High</bold></td><td align="left">Medium</td><td align="left">Low</td><td align="left"><bold>Low</bold></td><td align="left">Works well in most benchmarked scenarios but is slow. Skips to align many reads for high diversity datasets</td></tr><tr><td align="left" rowspan="5">Recent</td><td align="left">Strobealign</td><td align="left"><bold>High</bold></td><td align="left"><bold>High</bold></td><td align="left"><bold>High</bold></td><td align="left">High</td><td align="left">A very fast aligner with high accuracy. Peak performance for 150–500nt reads. Not recommended for 50–75nt reads</td></tr><tr><td align="left">BWA-MEM2</td><td align="left"><bold>High</bold></td><td align="left"><bold>High</bold></td><td align="left">Low to medium</td><td align="left">High</td><td align="left">Identical output to BWA-MEM at 1.2–2x speedup for paired-end alignment (our experiments), but very high memory usage</td></tr><tr><td align="left">minimap2</td><td align="left">Medium</td><td align="left">Medium</td><td align="left">Medium</td><td align="left">Medium</td><td align="left">Relatively high accuracy on human genome, but not on repetitive genomes (rye and maize). Lower accuracy and slower than strobealign on most datasets but uses less memory</td></tr><tr><td align="left">SNAP v2.0</td><td align="left">Medium</td><td align="left">Low</td><td align="left">Medium to high</td><td align="left">High</td><td align="left">Good accuracy and speed for low diversity datasets. Poor accuracy, speed, and percent aligned reads for high diversity and on the biological datasets</td></tr><tr><td align="left">Accel-Align</td><td align="left">Low</td><td align="left">Medium</td><td align="left"><bold>High</bold></td><td align="left">High</td><td align="left">A very fast aligner but with lowest accuracy overall out of the benchmarked aligners</td></tr></tbody></table></table-wrap></p>
    <sec id="Sec17">
      <title>Future work</title>
      <p id="Par50">A large part of the runtime for the BIO150 and BIO250 datasets is spent in the alignment extension step with ssw (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). It may therefore be possible to further optimize runtime by considering a faster Smith-Waterman alignment such as the Wavefront Alignment Algorithm [<xref ref-type="bibr" rid="CR36">36</xref>] as discussed in [<xref ref-type="bibr" rid="CR21">21</xref>]. Or find a better strategy based on the seeds to select fewer candidate sites to align to. Memory optimizations could also be investigated, such as changing hash values from 64-bit to 32-bit representation (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Note G). However, these optimizations may come at the cost of accuracy or limitations to the maximum index size.</p>
      <p id="Par51">As for the seeding method, we created randstrobes from syncmers. Other subsampling techniques may further improve the accuracy. While developing strobealign, we tested only minimizers [<xref ref-type="bibr" rid="CR16">16</xref>] and syncmers [<xref ref-type="bibr" rid="CR22">22</xref>] and found syncmers to perform better. Word-based methods such as minimally overlapping words [<xref ref-type="bibr" rid="CR37">37</xref>] have been shown to have better conservation than syncmers. However, they are less flexible as syncmers do not need to be pre-computed for different parametrizations. A second direction to explore is the skewed sampling. During the development of strobealign, we observed that our implemented skewed sampling towards shorter seeds increased accuracy for the shortest reads (<inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\le 150$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:mo>≤</mml:mo><mml:mn>150</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq15.gif"/></alternatives></inline-formula>nt) but had little to no effect compared to uniform sampling for longer reads. We believe it is beneficial for the short reads because more syncmer-pairs will be selected consistently between the read and references near the ends of the read, where there are few syncmers left to sample. It is possible that, e.g., a sampling skew towards longer seeds may be beneficial for longer reads that are not as dependent on single matches and can instead leverage increased uniqueness from longer seeds. Further work on seed length sampling distributions and subsampling densities could be explored.</p>
    </sec>
    <sec id="Sec18">
      <title>Our seeding method in other applications</title>
      <p id="Par52">A natural future research direction is to adapt our seeding method to other mapping scenarios. For example, applications such as long-read alignment [<xref ref-type="bibr" rid="CR17">17</xref>, <xref ref-type="bibr" rid="CR20">20</xref>] or transcriptomic long-read clustering  [<xref ref-type="bibr" rid="CR38">38</xref>] may be substantially sped up when using longer, more unique seeds. Our sampling technique may also improve the computation speed of seeds for transcriptomic spliced alignment [<xref ref-type="bibr" rid="CR39">39</xref>] as MEM finding is the current bottleneck. Another interesting direction is to explore using our seeding approach for overlap detection for genome assembly. Our seeding method can be thought of as being constructed in syncmer-space instead of over the entire sequence (sequence space). In genome assembly and error correction, ideas to work in minimizer-space instead of in sequence-space have been proposed through the use of paired minimizers [<xref ref-type="bibr" rid="CR40">40</xref>, <xref ref-type="bibr" rid="CR41">41</xref>] and <italic>k</italic> consecutive minimizers (<italic>k</italic>-min-mers) [<xref ref-type="bibr" rid="CR42">42</xref>] to represent overlaps and assembly graphs.</p>
    </sec>
  </sec>
  <sec id="Sec19">
    <title>Conclusion</title>
    <p id="Par53">We presented a novel strategy to compute seeds based on syncmers and strobemers that can be used for candidate location detection in sequence mapping applications. We showed that our seeding is fast and used a novel metric E-hits to demonstrate our seeding method’s effectiveness at removing the repetitiveness of seeds. We implemented our seeding strategy in a short-read aligner strobealign. For read lengths of 150nt and longer, strobealign is several times faster than traditional aligners with comparable accuracy. Strobealign can remove the alignment bottleneck in many bioinformatic analysis pipelines and free up substantial computing resources. Furthermore, our seeding approach can potentially be used in many other applications that require sequence mapping.</p>
  </sec>
  <sec id="Sec20">
    <title>Methods</title>
    <sec id="Sec21">
      <title>Definitions</title>
      <p id="Par54">We use <italic>i</italic> to index the position in a string <italic>S</italic> and let <italic>S</italic>[<italic>i</italic>, <italic>k</italic>] denote a <italic>k</italic>-<italic>mer</italic> substring at position <italic>i</italic> in <italic>S</italic> covering the <italic>k</italic> positions <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i,\ldots ,i+k-1$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mo>…</mml:mo><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq16.gif"/></alternatives></inline-formula> in <italic>s</italic>. We will consider 0-indexed strings. We let <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|\cdot |$$\end{document}</tex-math><mml:math id="M34"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq17.gif"/></alternatives></inline-formula> denote both the length operator applied to strings and the cardinality operator applied to sets. We refer to a <italic>subsequence</italic> of a string as a set of ordered letters that can be derived from a string by deleting some or no letters without changing the order of the remaining letters. A substring is a subsequence where all the letters are consecutive. Our fuzzy seeds produced from <italic>S</italic> are subsequences of <italic>S</italic> since they consist of two syncmers <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq18.gif"/></alternatives></inline-formula> and <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M38"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq19.gif"/></alternatives></inline-formula> that do not necessarily overlap on <italic>S</italic>. The syncmers are concatenated after their extraction to a string <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12} \doteq k_1k_2$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo>≐</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq20.gif"/></alternatives></inline-formula> that constitutes the strobemer seed.</p>
      <p id="Par55">We use 2-bit encoding to store nucleotides with 00, 01, 10, and 11 representing A, C, G, and T. With this bit encoding, each string is associated with a sequence of bits that can be interpreted as an integer. For example, <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$TCA = 110100 = 52$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>T</mml:mi><mml:mi>C</mml:mi><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mn>110100</mml:mn><mml:mo>=</mml:mo><mml:mn>52</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq21.gif"/></alternatives></inline-formula>. From now on, we will assume that all strings are manipulated by manipulating their sequence of bits. We use <italic>h</italic> to denote a hash function <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h:\{0,1\}^{*}\xrightarrow []{} \{0,1\}^{*}$$\end{document}</tex-math><mml:math id="M44"><mml:mrow><mml:mi>h</mml:mi><mml:mo>:</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mover><mml:mo stretchy="false">→</mml:mo><mml:mrow/></mml:mover><mml:msup><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq22.gif"/></alternatives></inline-formula> mapping a sequence of bits to another sequence of bits. Finally, we say that two seeds <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq23.gif"/></alternatives></inline-formula> and <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k'_{12}$$\end{document}</tex-math><mml:math id="M48"><mml:msubsup><mml:mi>k</mml:mi><mml:mn>12</mml:mn><mml:mo>′</mml:mo></mml:msubsup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq24.gif"/></alternatives></inline-formula> match if <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h(k_{12}) = h(k'_{12})$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mi>k</mml:mi><mml:mn>12</mml:mn><mml:mo>′</mml:mo></mml:msubsup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq25.gif"/></alternatives></inline-formula>. We will denote a match as <italic>m</italic> and use <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m.q_s, m.q_e, m.r_s, m.r_e, m.o$$\end{document}</tex-math><mml:math id="M52"><mml:mrow><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:mi>o</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq26.gif"/></alternatives></inline-formula> to denote the read (query) start and end positions, the reference start and end positions, and the orientation of the match, respectively.</p>
    </sec>
    <sec id="Sec22">
      <title>Open syncmers</title>
      <p id="Par56">Open syncmers is a <italic>k</italic>-mer subsampling method described in [<xref ref-type="bibr" rid="CR22">22</xref>]. They are sampled based on three parameters (<italic>k</italic>, <italic>s</italic>, <italic>t</italic>) where k, s, and t are positive integers and s≤k. The open-syncmer method compares the <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k - s+1$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq27.gif"/></alternatives></inline-formula> consecutive <italic>s</italic>-mers within a <italic>k</italic>-mer and selects the <italic>k</italic>-mer as a syncmer if the smallest <italic>s</italic>-mer occurs at position <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t \in [0, k - s+1]$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:mi>t</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq28.gif"/></alternatives></inline-formula> within the <italic>k</italic>-mer. The smallest <italic>s</italic>-mer is inferred from the hash value that the <italic>s</italic>-mer produces. Similar to what is commonly performed in <italic>k</italic>-mer applications, we use a canonical representation of syncmers. A canonical representation means that the lexicographically smallest syncmer out of its forward and reverse-complement sequence is stored.</p>
    </sec>
    <sec id="Sec23">
      <title>Strobemers</title>
      <p id="Par57">Strobemers are described in [<xref ref-type="bibr" rid="CR23">23</xref>] and consists of several shorter <italic>k</italic>-mers, referred to as <italic>strobes</italic>. We use the randstrobe method [<xref ref-type="bibr" rid="CR23">23</xref>] described below. Four parameters <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(n, k, w_{min}, w_{max})$$\end{document}</tex-math><mml:math id="M58"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq29.gif"/></alternatives></inline-formula> are used to define a randstrobe where <italic>n</italic> is the number of strobes, <italic>k</italic> is the length of the strobes, and <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{min}$$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq30.gif"/></alternatives></inline-formula> and <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{max}$$\end{document}</tex-math><mml:math id="M62"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq31.gif"/></alternatives></inline-formula> is the lower and upper coordinate offset to the first strobe <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M64"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq32.gif"/></alternatives></inline-formula> for sampling the second strobe <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M66"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq33.gif"/></alternatives></inline-formula> on a string <italic>S</italic>. We will here consider randstrobes with <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n=2$$\end{document}</tex-math><mml:math id="M68"><mml:mrow><mml:mi>n</mml:mi><mml:mo>=</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq34.gif"/></alternatives></inline-formula>, <italic>i.e.</italic>, consists of two strobes. Let <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq35.gif"/></alternatives></inline-formula> have coordinate <italic>i</italic> on <italic>S</italic> and <inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {W}$$\end{document}</tex-math><mml:math id="M72"><mml:mi mathvariant="script">W</mml:mi></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq36.gif"/></alternatives></inline-formula> be the set of <italic>k</italic>-mers from the substring (window) <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S[i +w_{min}:i+w_{max}+k-1]$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq37.gif"/></alternatives></inline-formula>. Then, the randstrobe samples strobe <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M76"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq38.gif"/></alternatives></inline-formula> according to the following sampling function [<xref ref-type="bibr" rid="CR23">23</xref>]:<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k_2 = \underset{k' \in \mathcal {W}}{\text {argmin}} \; (h(k_1) + h(k')) \; \&amp; \; p . \end{aligned}$$\end{document}</tex-math><mml:math id="M78" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmin</mml:mtext><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:mi mathvariant="script">W</mml:mi></mml:mrow></mml:munder><mml:mspace width="0.277778em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.277778em"/><mml:mo>&amp;</mml:mo><mml:mspace width="0.277778em"/><mml:mi>p</mml:mi><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where &amp; is the bitwise AND operator and <italic>p</italic> is a 64-bit bitmask consisting of 1s at the <italic>p</italic> leftmost bits and remaining 0s.</p>
    </sec>
    <sec id="Sec24">
      <title>Modifications to strobemers</title>
      <p id="Par58">Strobemers was first described as being produced over the set of all <italic>k</italic>-mers in a sequence [<xref ref-type="bibr" rid="CR23">23</xref>]. The first modification we make to strobemers as originally described is that we will compute the strobemers over syncmers. Therefore, from now on <inline-formula id="IEq39"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1, k_2$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq39.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq40"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k'$$\end{document}</tex-math><mml:math id="M82"><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq40.gif"/></alternatives></inline-formula> are used to denote the subsampled set of <italic>k</italic>-mers that are open syncmers. We will let <inline-formula id="IEq41"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$[w_{min},w_{max}]$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq41.gif"/></alternatives></inline-formula> refer to the lower and upper number of syncmers downstream from <inline-formula id="IEq42"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M86"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq42.gif"/></alternatives></inline-formula> where we sample <inline-formula id="IEq43"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M88"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq43.gif"/></alternatives></inline-formula> from. Assume that <inline-formula id="IEq44"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M90"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq44.gif"/></alternatives></inline-formula> has coordinate <italic>i</italic>, then we let <inline-formula id="IEq45"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {W}_s$$\end{document}</tex-math><mml:math id="M92"><mml:msub><mml:mi mathvariant="script">W</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq45.gif"/></alternatives></inline-formula> denote the set of syncmers in the substring <inline-formula id="IEq46"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S[i +w_{min}:i+w_{max}+k-1]$$\end{document}</tex-math><mml:math id="M94"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">[</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>:</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq46.gif"/></alternatives></inline-formula>.</p>
      <p id="Par59">A second modification to the strobemers [<xref ref-type="bibr" rid="CR23">23</xref>] is that we use a skewed sampling function that selects nearby syncmers more frequently. The sampling skew for sampling the second syncmer <inline-formula id="IEq47"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq47.gif"/></alternatives></inline-formula> is produced from<disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} k_2 = \underset{k' \in \mathcal {W}_s }{\text {argmin}} \; B( \; (h(k_1) ^\wedge h(k')) \; \&amp; \; p ). \end{aligned}$$\end{document}</tex-math><mml:math id="M98" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:munder><mml:mtext>argmin</mml:mtext><mml:mrow><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>∈</mml:mo><mml:msub><mml:mi mathvariant="script">W</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:munder><mml:mspace width="0.277778em"/><mml:mi>B</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mspace width="0.277778em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>h</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∧</mml:mo></mml:msup><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>k</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.277778em"/><mml:mo>&amp;</mml:mo><mml:mspace width="0.277778em"/><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>Here, <inline-formula id="IEq48"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$^\wedge$$\end{document}</tex-math><mml:math id="M100"><mml:msup><mml:mrow/><mml:mo>∧</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq48.gif"/></alternatives></inline-formula> is the bitwise XOR operator, and <italic>B</italic> counts the number of set bits. In other words, <italic>B</italic> returns the number of set bits among the <inline-formula id="IEq49"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p \in [1,64]$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>64</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq49.gif"/></alternatives></inline-formula> leftmost bits in the 64-bit integer produced after the XOR operation of the hash values of the two strings. Function (<xref rid="Equ2" ref-type="">2</xref>) maps the value space down to [0,p-1] and collisions are resolved by picking the first leftmost strobe. Therefore, a lower value on <italic>p</italic> results in more often picking nearby strobes. An example distribution is shown in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1. We found that function (<xref rid="Equ2" ref-type="">2</xref>) gave significantly improved performance on shorter reads (100–150nt) compared to function (<xref rid="Equ1" ref-type="">1</xref>).</p>
      <p id="Par60">The third modification to strobemers is our stored hash value for the strobemer. We store for <inline-formula id="IEq50"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M104"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq50.gif"/></alternatives></inline-formula> the value <inline-formula id="IEq51"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h'(k_{12}) \doteq h(k_1)/2 +h(k_2)/2$$\end{document}</tex-math><mml:math id="M106"><mml:mrow><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>≐</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq51.gif"/></alternatives></inline-formula>. The hash function <inline-formula id="IEq52"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h'$$\end{document}</tex-math><mml:math id="M108"><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq52.gif"/></alternatives></inline-formula> is symmetric (<inline-formula id="IEq53"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h'(k_{12}) = h'(k_{21})$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq53.gif"/></alternatives></inline-formula>) and together with canonical syncmers, it produces the same hash value if the strobemer is created from forward and reverse complement direction. It is stated in [<xref ref-type="bibr" rid="CR23">23</xref>] that symmetrical hash functions are undesirable for mapping due to unnecessary hash collisions. However, when masking highly repetitive seeds as commonly performed in aligners [<xref ref-type="bibr" rid="CR18">18</xref>], it turns out that a symmetrical hash function helps to avoid sub-optimal alignments when using strobemers. The reason is the same as for using canonical <italic>k</italic>-mers in mapping and overlap detection algorithms. Namely, it allows for consistent masking and treatment of forward and reverse complement mapping locations. We will now describe why.</p>
      <p id="Par61">Assume we would use an asymmetric hash function, such as <inline-formula id="IEq54"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h''(k_{12}) = h(k_1)/2 + h(k_2)/3$$\end{document}</tex-math><mml:math id="M112"><mml:mrow><mml:msup><mml:mi>h</mml:mi><mml:mrow><mml:mo>′</mml:mo><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn><mml:mo>+</mml:mo><mml:mi>h</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">/</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq54.gif"/></alternatives></inline-formula> proposed in [<xref ref-type="bibr" rid="CR23">23</xref>]. Also assume that strobemer seeds <inline-formula id="IEq55"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M114"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq55.gif"/></alternatives></inline-formula> and <inline-formula id="IEq56"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{21}$$\end{document}</tex-math><mml:math id="M116"><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq56.gif"/></alternatives></inline-formula> are both found in forward orientation the reference due to, e.g., inversions. In this case, only <inline-formula id="IEq57"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq57.gif"/></alternatives></inline-formula> may be masked because of its distinct hash value to <inline-formula id="IEq58"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{21}$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq58.gif"/></alternatives></inline-formula>. Now, consider a read in which we extract <inline-formula id="IEq59"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M122"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq59.gif"/></alternatives></inline-formula> in forward direction and <inline-formula id="IEq60"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{21}$$\end{document}</tex-math><mml:math id="M124"><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq60.gif"/></alternatives></inline-formula> in reverse complement direction. If the read has an optimal match to forward direction with seed <inline-formula id="IEq61"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M126"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq61.gif"/></alternatives></inline-formula> (masked on reference), we would still find the suboptimal match of <inline-formula id="IEq62"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{21}$$\end{document}</tex-math><mml:math id="M128"><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq62.gif"/></alternatives></inline-formula> of the read in reverse complement orientation to the reference. By using a symmetric hash function, we guarantee to mask the same strobemers in both directions. We observed that such cases are common on, e.g., chromosome X in the human genome.</p>
      <p id="Par62">Another benefit of this symmetrical value which does not hold for exact seeds, is that we can use <italic>false symmetrical matches</italic> to our benefit. A false symmetrical match is when the forward seed starting with syncmer <inline-formula id="IEq63"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq63.gif"/></alternatives></inline-formula> and reverse complement starting with syncmer <inline-formula id="IEq64"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq64.gif"/></alternatives></inline-formula> become linked as seeds <inline-formula id="IEq65"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{12}$$\end{document}</tex-math><mml:math id="M134"><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq65.gif"/></alternatives></inline-formula> and <inline-formula id="IEq66"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_{21}$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq66.gif"/></alternatives></inline-formula>, respectively, hence <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h'(k_{12}) = h'(k_{21})$$\end{document}</tex-math><mml:math id="M138"><mml:mrow><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>21</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq67.gif"/></alternatives></inline-formula>. This happens relatively frequently but is not guaranteed. That is, even if the minimizing syncmer for <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M140"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq68.gif"/></alternatives></inline-formula> is <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq69.gif"/></alternatives></inline-formula>, <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_1$$\end{document}</tex-math><mml:math id="M144"><mml:msub><mml:mi>k</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq70.gif"/></alternatives></inline-formula> does not need to be minimizing syncmer <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k_2$$\end{document}</tex-math><mml:math id="M146"><mml:msub><mml:mi>k</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq71.gif"/></alternatives></inline-formula>. However, the beneficial scenario happens when we have a false symmetric match and, for example, the forward orientation seed is destroyed because of mutations. In this case, it is not guaranteed that the match in the other orientation is destroyed. Thus, we get a false symmetrical match that helps us locate the read location on the genome, which is useful for reads with very few matches. The event of false symmetrical matches was realized and implemented in 0.6.1 in strobealign, leading to slightly improved accuracy.</p>
    </sec>
    <sec id="Sec25">
      <title>Indexing</title>
      <p id="Par63">We first construct open syncmers from the reference sequences and then link two open syncmers together using the randstrobe method with Eq. (<xref rid="Equ2" ref-type="">2</xref>) as sampling function. A beneficial characteristic with open syncmers is that the the same syncmers will be created from the forward and reverse complement strand if <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k-s+1$$\end{document}</tex-math><mml:math id="M148"><mml:mrow><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq72.gif"/></alternatives></inline-formula> is odd and <inline-formula id="IEq73"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t= \lceil (k-s+1)/2\rceil$$\end{document}</tex-math><mml:math id="M150"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq73.gif"/></alternatives></inline-formula>. Conveniently, it was shown that choosing <inline-formula id="IEq74"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t = \lceil (k-s+1)/2\rceil$$\end{document}</tex-math><mml:math id="M152"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mn>2</mml:mn><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq74.gif"/></alternatives></inline-formula> is the optimal parameter for sequence mapping [<xref ref-type="bibr" rid="CR24">24</xref>]. We compute such canonical open syncmers (using <inline-formula id="IEq75"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=20$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>20</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq75.gif"/></alternatives></inline-formula>, <inline-formula id="IEq76"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$s=16$$\end{document}</tex-math><mml:math id="M156"><mml:mrow><mml:mi>s</mml:mi><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq76.gif"/></alternatives></inline-formula>, <inline-formula id="IEq77"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$t=3$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:mi>t</mml:mi><mml:mo>=</mml:mo><mml:mn>3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq77.gif"/></alternatives></inline-formula> as default values) to produce a subsampling of roughly 20% of the <italic>k</italic>-mers sampled, which is similar to <inline-formula id="IEq78"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w=10$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:mi>w</mml:mi><mml:mo>=</mml:mo><mml:mn>10</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq78.gif"/></alternatives></inline-formula> in the minimizer sampling method. As for forming the strobemers, we compute the second strobe from a window of <inline-formula id="IEq79"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$[w_{min},w_{max}]$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq79.gif"/></alternatives></inline-formula> downstream syncmers to the first strobe, where we set <inline-formula id="IEq80"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{min}$$\end{document}</tex-math><mml:math id="M164"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq80.gif"/></alternatives></inline-formula> and <inline-formula id="IEq81"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{max}$$\end{document}</tex-math><mml:math id="M166"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq81.gif"/></alternatives></inline-formula> dependant on the read length based on an experimental evaluation. See details in “<xref rid="Sec32" ref-type="sec">Implementation details”</xref> section.</p>
      <p id="Par64">We store tuples <inline-formula id="IEq82"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(h'(k_{12}), r_s, v)$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq82.gif"/></alternatives></inline-formula> in a flat vector <italic>V</italic> where <inline-formula id="IEq83"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h'(k_{12})$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq83.gif"/></alternatives></inline-formula> is the 64-bit integer hash value of the strobemer, <inline-formula id="IEq84"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r_s$$\end{document}</tex-math><mml:math id="M172"><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq84.gif"/></alternatives></inline-formula> is the coordinate start of the first strobe (32-bit integer), and <italic>v</italic> is a 32-bit integer containing reference id (rightmost 24 bits) and the offset of the second strobe (leftmost 8 bits). We sort <italic>V</italic> by hash values and construct a hash table with hash values as keys pointing to offset and the number of occurrences of the hash value in <italic>V</italic>. By lookup of <inline-formula id="IEq85"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$h'(k_{12})$$\end{document}</tex-math><mml:math id="M174"><mml:mrow><mml:msup><mml:mi>h</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>k</mml:mi><mml:mn>12</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq85.gif"/></alternatives></inline-formula>, we know which segment in <italic>V</italic> to iterate over to find query matches. This type of index representation has been used previously [<xref ref-type="bibr" rid="CR18">18</xref>, <xref ref-type="bibr" rid="CR21">21</xref>] and was suggested to us by Heng Li [<xref ref-type="bibr" rid="CR43">43</xref>]. Finally, similarly to minimap2, we mask (ignore) a top fraction of repetitive strobemers in the reference. This value is a parameter to strobealign and is by default set to 0.0002, similarly to minimap2.</p>
    </sec>
    <sec id="Sec26">
      <title>Finding candidate mapping sites</title>
      <p id="Par65">Strobealign computes canonical open syncmers from the read similarly to what is described above to index the reference. Since the created syncmers are canonical, we can compute forward and reverse complemented strobemers by iterating over the syncmers in forward and reverse order, respectively. Computing strobemers in forward and reverse orientation gives us a vector of tuples <inline-formula id="IEq86"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(q_s,q_e,o)$$\end{document}</tex-math><mml:math id="M176"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq86.gif"/></alternatives></inline-formula> representing start coordinate <inline-formula id="IEq87"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_s$$\end{document}</tex-math><mml:math id="M178"><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq87.gif"/></alternatives></inline-formula>, end coordinate <inline-formula id="IEq88"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$q_e$$\end{document}</tex-math><mml:math id="M180"><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq88.gif"/></alternatives></inline-formula>, and orientation <italic>o</italic> (Boolean value with 0 representing forward and 1 representing reverse complement), of the strobemer on the read.</p>
      <p id="Par66">If a strobemer is found in the reference, it will have one or more coordinate-tuples <inline-formula id="IEq89"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(r_{id},r_s, r_e)$$\end{document}</tex-math><mml:math id="M182"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi mathvariant="italic">id</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq89.gif"/></alternatives></inline-formula> in the reference. We call <inline-formula id="IEq90"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=(r_{id},r_s, r_e,q_s,q_e,o)$$\end{document}</tex-math><mml:math id="M184"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi mathvariant="italic">id</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq90.gif"/></alternatives></inline-formula> a <italic>match</italic> between the query and the reference. Let <italic>d</italic> be the difference in length between the strobemer on the reference and query. If several matches are found, Strobealign iterates over the matches, stores the lowest observed <italic>d</italic> during iteration, and saves only the matches with the current lowest <italic>d</italic>. This approach is not the same as first computing the lowest <italic>d</italic> and iterating a second pass to store only matches with the lowest <italic>d</italic>. We chose the former as we tried both and observed close to no difference in accuracy while slightly increasing runtime in the latter case due to the extra iteration.</p>
      <p id="Par67">From the stored matches, strobealign constructs <italic>merged matches</italic>
<inline-formula id="IEq91"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {M}$$\end{document}</tex-math><mml:math id="M186"><mml:mi mathvariant="script">M</mml:mi></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq91.gif"/></alternatives></inline-formula> which are similar but slightly more stringent to Non-overlapping Approximate Matches (NAMs) that are defined in [<xref ref-type="bibr" rid="CR23">23</xref>]. Merged matches are produced as follows. We iterate over all matches in ascending order in the read and join two matches <italic>m</italic> and <inline-formula id="IEq92"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m'$$\end{document}</tex-math><mml:math id="M188"><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq92.gif"/></alternatives></inline-formula> into a merged match if it holds that <list list-type="simple"><list-item><label>(i)</label><p id="Par68"><inline-formula id="IEq93"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(m.r_{id} == m'.r_{id}) \; \&amp; \&amp; \; (m.o == m'.o)$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi mathvariant="italic">id</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mrow><mml:mi mathvariant="italic">id</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mspace width="0.277778em"/><mml:mo>&amp;</mml:mo><mml:mo>&amp;</mml:mo><mml:mspace width="0.277778em"/><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:mi>o</mml:mi><mml:mo>=</mml:mo><mml:mo>=</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:mi>o</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq93.gif"/></alternatives></inline-formula>  </p></list-item><list-item><label>(ii)</label><p id="Par69"><inline-formula id="IEq94"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m.q_s &lt; m'.q_s \le m.q_e$$\end{document}</tex-math><mml:math id="M192"><mml:mrow><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq94.gif"/></alternatives></inline-formula>  </p></list-item><list-item><label>(iii)</label><p id="Par70"><inline-formula id="IEq95"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m.r_s &lt; m'.r_s \le m.r_e$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq95.gif"/></alternatives></inline-formula>  </p></list-item><list-item><label>(iv)</label><p id="Par71">and if one of the following holds; <inline-formula id="IEq96"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(m.q_s&lt; m'.q_s&lt; m.q_e&lt; m'.q_e) \wedge (m.r_s&lt; m'.r_s&lt; m.r_e &lt; m'.r_e)$$\end{document}</tex-math><mml:math id="M196"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∧</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq96.gif"/></alternatives></inline-formula> or <inline-formula id="IEq97"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(m.q_s&lt; m'.q_s&lt; m'.q_e&lt; m.q_e) \wedge (m.r_s&lt; m'.r_s&lt; m'.r_e &lt; m.r_e)$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>∧</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq97.gif"/></alternatives></inline-formula>.</p></list-item></list>In other words, the matches need to (i) come from the same reference and have the same direction, (ii-iii) overlap on both query and reference, and (iv) two strobemer matches need to have a consistent ordering of the four strobes on the reference and the query. Specifically, a NAM requires only (i-iii). There are scenarios due to local repeats where, for example, <inline-formula id="IEq98"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(m.q_s&lt; m'.q_s&lt; m.q_e &lt; m'.q_e)$$\end{document}</tex-math><mml:math id="M200"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq98.gif"/></alternatives></inline-formula> is the order on the query but <inline-formula id="IEq99"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(m.r_s&lt; m'.r_s&lt; m'.r_e &lt; m.r_e )$$\end{document}</tex-math><mml:math id="M202"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq99.gif"/></alternatives></inline-formula> is the order on the reference invalidating (iv). We consider such cases as separate matches.</p>
      <p id="Par72">If <italic>m</italic> is the current considered match in the iteration over the matches in a query, we refer to all matches <inline-formula id="IEq100"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m''$$\end{document}</tex-math><mml:math id="M204"><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mo>′</mml:mo><mml:mo>′</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq100.gif"/></alternatives></inline-formula> with <inline-formula id="IEq101"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m''.q_s &lt; m.q_s \le m''.q_e$$\end{document}</tex-math><mml:math id="M206"><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mo>′</mml:mo><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>≤</mml:mo><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mo>′</mml:mo><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq101.gif"/></alternatives></inline-formula> as <italic>open matches</italic> and <inline-formula id="IEq102"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m''.q_e &lt; m.q_s$$\end{document}</tex-math><mml:math id="M208"><mml:mrow><mml:msup><mml:mi>m</mml:mi><mml:mrow><mml:mo>′</mml:mo><mml:mo>′</mml:mo></mml:mrow></mml:msup><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>&lt;</mml:mo><mml:mi>m</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq102.gif"/></alternatives></inline-formula> as <italic>closed matches</italic>. While iterating over the matches in a read, we keep a vector of currently open <italic>merged matches</italic>, and filter out the closed matches in this vector. In a merged match <inline-formula id="IEq103"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {M}$$\end{document}</tex-math><mml:math id="M210"><mml:mi mathvariant="script">M</mml:mi></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq103.gif"/></alternatives></inline-formula> we keep information of how many matches were added, the position of the first and last strobe on query and reference, and the orientation on the reference genome. After the final match on the query, we close all merged matches. The closed matches are the final merged matches that constitute the candidate mapping locations.</p>
    </sec>
    <sec id="Sec27">
      <title>Computing MAPQ score</title>
      <p id="Par73">After merging matches, each merged match <inline-formula id="IEq104"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {M}$$\end{document}</tex-math><mml:math id="M212"><mml:mi mathvariant="script">M</mml:mi></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq104.gif"/></alternatives></inline-formula> consists of a number of matches <inline-formula id="IEq105"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|\mathcal {M}|$$\end{document}</tex-math><mml:math id="M214"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq105.gif"/></alternatives></inline-formula> and a total span-range of the merged match on both the query <inline-formula id="IEq106"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a = \mathcal {M}.q_e - \mathcal {M}.q_s$$\end{document}</tex-math><mml:math id="M216"><mml:mrow><mml:mi>a</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq106.gif"/></alternatives></inline-formula> and the reference <inline-formula id="IEq107"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b =\mathcal {M}.r_e - \mathcal {M}.r_s$$\end{document}</tex-math><mml:math id="M218"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq107.gif"/></alternatives></inline-formula>. We define the score of <inline-formula id="IEq108"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathcal {M}$$\end{document}</tex-math><mml:math id="M220"><mml:mi mathvariant="script">M</mml:mi></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq108.gif"/></alternatives></inline-formula> as <inline-formula id="IEq109"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{\mathcal {M}}=( \min \{a,b\} - |a-b|) \cdot |\mathcal {M}|$$\end{document}</tex-math><mml:math id="M222"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="script">M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mi>a</mml:mi><mml:mo>,</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>a</mml:mi><mml:mo>-</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>·</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq109.gif"/></alternatives></inline-formula>, which acknowledges only the minimum span over the query and reference and penalizes if there is a difference in the span lengths. We compute the MAPQ score similarly to minimap2 but substitute minimap2’s chain score [<xref ref-type="bibr" rid="CR18">18</xref>] to our merged match score <inline-formula id="IEq110"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{\mathcal {M}}$$\end{document}</tex-math><mml:math id="M224"><mml:msub><mml:mi>S</mml:mi><mml:mi mathvariant="script">M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq110.gif"/></alternatives></inline-formula>. That is, if <inline-formula id="IEq111"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_1$$\end{document}</tex-math><mml:math id="M226"><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq111.gif"/></alternatives></inline-formula> and <inline-formula id="IEq112"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_2$$\end{document}</tex-math><mml:math id="M228"><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq112.gif"/></alternatives></inline-formula> are the top two scoring merged matches for a read, the MAPQ is computed by<disp-formula id="Equ3"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} MAPQ =40(1-S_2/S_1) \cdot \min \{1, |\mathcal {M}|/10\} \cdot \log S_1. \end{aligned}$$\end{document}</tex-math><mml:math id="M230" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>M</mml:mi><mml:mi>A</mml:mi><mml:mi>P</mml:mi><mml:mi>Q</mml:mi><mml:mo>=</mml:mo><mml:mn>40</mml:mn><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mo movablelimits="true">min</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mn>10</mml:mn><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>·</mml:mo><mml:mo>log</mml:mo><mml:msub><mml:mi>S</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
    </sec>
    <sec id="Sec28">
      <title>Single-end alignment</title>
      <p id="Par74">Merged matches are produced and scored as described above and constitute the candidate mapping regions. For each candidate region sorted order with respect to the score, we extract segments on the reference defined by coordinates <inline-formula id="IEq113"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(\mathcal {M}.r_s - \mathcal {M}.q_e, \mathcal {M}.r_e + (|q| - \mathcal {M}.q_e))$$\end{document}</tex-math><mml:math id="M232"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo></mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>q</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq113.gif"/></alternatives></inline-formula>, where |<italic>q</italic>| is the length of the read. If <inline-formula id="IEq114"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$| \mathcal {M}.q_e - \mathcal {M}.q_s | = | \mathcal {M}.r_e - \mathcal {M}.r_s|$$\end{document}</tex-math><mml:math id="M234"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo></mml:mrow><mml:msub><mml:mi>q</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>q</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo></mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>e</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mi mathvariant="script">M</mml:mi><mml:mo>.</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>s</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq114.gif"/></alternatives></inline-formula>, we compute the Hamming distance between the read and the extracted reference segment. Otherwise, if the distance between merged match is different on the reference and query due to, e.g., indels, we send the sequences to alignment with ssw [<xref ref-type="bibr" rid="CR44">44</xref>]. We use a match score of 1 and alignment penalties of 4, 6, and 1 for mismatch, gap open, and gap extension, respectively. Additionally, if the computed Hamming distance is larger than 0.05|<italic>r</italic>| where |<italic>r</italic>| denotes the read length, we perform an additional alignment with ssw as, theoretically, there may be more than one indel within the mapped location that would lead to the same match lengths on the read and the reference.</p>
      <sec id="Sec29">
        <title>Rescue mode</title>
        <p id="Par75">A read could have few or zero matches if all the strobemers extracted from the read were masked due to being too abundant. The abundance cutoff, which we denote as <italic>A</italic>, is controlled with a parameter -f (default value 0.0002), as in minimap2. For example, <italic>A</italic> is between 30 and 50 for hg38 depending on the values we use for parameters <italic>k</italic>, <inline-formula id="IEq115"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{min}$$\end{document}</tex-math><mml:math id="M236"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq115.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq116"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{max}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq116.gif"/></alternatives></inline-formula>, described in “<xref rid="Sec32" ref-type="sec">Implementation details”</xref> section. If more than 30% of strobemers were masked when finding matches, strobealign enters a rescue mode where it considers a higher threshold. In the rescue mode, strobealign sorts the seeds according to the abundance on the reference. Then it selects all the seeds below an abundance of <italic>R</italic> (<italic>R</italic> is a positive integer parameter with default value 2) and, if this still produces fewer than 5 seeds, it uses 1000 as a hard abundance threshold. If there are still 0 matches, the read is treated as unmapped.</p>
      </sec>
    </sec>
    <sec id="Sec30">
      <title>Paired-end alignment</title>
      <p id="Par76">Similar to the single-end alignment mode, strobealign computes merged matches for both mates within the read pair and employs an identical rescue mode if there are too many masked strobemer seeds, as described for the single-end alignment. There are, however, two additional components in the paired-end alignment mode. Firstly, strobealign employs a joint scoring of candidate location based on expected insert size (similar to BWA-MEM). Secondly, strobealign can enter a rescue mode even for a read with zero matches based on the mate’s location. We describe the two components below.</p>
      <p id="Par77">For the joint scoring, strobealign first sorts the candidate map locations based on the total seed count for the two mates in a read pair. Then, strobealign finds the best candidate locations from a combined MAPQ score described below. Let <inline-formula id="IEq117"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|\mathcal {M}_i^1|$$\end{document}</tex-math><mml:math id="M240"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="script">M</mml:mi><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq117.gif"/></alternatives></inline-formula> and <inline-formula id="IEq118"><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|\mathcal {M}_j^2|$$\end{document}</tex-math><mml:math id="M242"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="script">M</mml:mi><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq118.gif"/></alternatives></inline-formula> be the number of matches in i-th and j-th merged match for the first and the second mate in the read-pair, respectively. If it holds for some <italic>i</italic> and <italic>j</italic> that the two merged matches are on the same chromosome in the correct relative orientation with a mapped distance <inline-formula id="IEq119"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&lt; \mu + 10\sigma$$\end{document}</tex-math><mml:math id="M244"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mi>μ</mml:mi><mml:mo>+</mml:mo><mml:mn>10</mml:mn><mml:mi>σ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq119.gif"/></alternatives></inline-formula>, the joint map-location count <inline-formula id="IEq120"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{ij}$$\end{document}</tex-math><mml:math id="M246"><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq120.gif"/></alternatives></inline-formula> is simply <inline-formula id="IEq121"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{ij} = |\mathcal {M}_i^1|$$\end{document}</tex-math><mml:math id="M248"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi mathvariant="script">M</mml:mi><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msubsup><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq121.gif"/></alternatives></inline-formula> + <inline-formula id="IEq122"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|\mathcal {M}_j^2|$$\end{document}</tex-math><mml:math id="M250"><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msubsup><mml:mi mathvariant="script">M</mml:mi><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq122.gif"/></alternatives></inline-formula>. We also add the individual candidate map location counts obtained as <inline-formula id="IEq123"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{i-} = |\mathcal {M}_i^1|$$\end{document}</tex-math><mml:math id="M252"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mi>i</mml:mi><mml:mo>-</mml:mo></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi mathvariant="script">M</mml:mi><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msubsup><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq123.gif"/></alternatives></inline-formula> and <inline-formula id="IEq124"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$C_{-j} = |\mathcal {M}_j^2|$$\end{document}</tex-math><mml:math id="M254"><mml:mrow><mml:msub><mml:mi>C</mml:mi><mml:mrow><mml:mo>-</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:msubsup><mml:mi mathvariant="script">M</mml:mi><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msubsup><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq124.gif"/></alternatives></inline-formula> for the two mates individually.</p>
      <p id="Par78">For the scores in order of highest total seed count first, strobealign performs base-level alignment of each mate (as described in the “<xref rid="Sec28" ref-type="sec">Single-end alignment”</xref> section). The alignment score <inline-formula id="IEq125"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_{ij}$$\end{document}</tex-math><mml:math id="M256"><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq125.gif"/></alternatives></inline-formula> of such aligned pair is then computed as<disp-formula id="Equ4"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} S_{ij} = SW_{i} + SW_{j} + \log N(d_{ij},\mu ,\sigma ) \end{aligned}$$\end{document}</tex-math><mml:math id="M258" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mi>W</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mi>W</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mo>log</mml:mo><mml:mi>N</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>,</mml:mo><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>where <italic>SW</italic> denotes the Smith-Waterman alignment score, and <inline-formula id="IEq126"><alternatives><tex-math id="M259">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$d_{ij}$$\end{document}</tex-math><mml:math id="M260"><mml:msub><mml:mi>d</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq126.gif"/></alternatives></inline-formula> denotes the distance between the mates on the genome. The individually mapped reads (e.g., if on different chromosomes) are given a score<disp-formula id="Equ5"><alternatives><tex-math id="M261">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} S_{ij} = SW_{i} + SW_{j} -10. \end{aligned}$$\end{document}</tex-math><mml:math id="M262" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi>S</mml:mi><mml:mrow><mml:mi mathvariant="italic">ij</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mi>W</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mi>S</mml:mi><mml:msub><mml:mi>W</mml:mi><mml:mi>j</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>10</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>Since -10 corresponds to more than 4 standard deviations away, this is the score cutoff which prefers the reads to be mapped individually at their respective locations with the highest SW score.</p>
      <sec id="Sec31">
        <title>Mate rescue mode</title>
        <p id="Par79">If one of the mates does not have any merged match, we perform base level alignment of the mate without merged match within a genomic segment of <inline-formula id="IEq127"><alternatives><tex-math id="M263">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$[0,\mu +5\sigma ]$$\end{document}</tex-math><mml:math id="M264"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mi>μ</mml:mi><mml:mo>+</mml:mo><mml:mn>5</mml:mn><mml:mi>σ</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq127.gif"/></alternatives></inline-formula> nucleotides away in the expected direction from the location of the mate with a merged match.</p>
      </sec>
    </sec>
    <sec id="Sec32">
      <title>Implementation details</title>
      <p id="Par80">Similar to the default parameters in minimap2, we consider the top 20 MAPQ (or joint MAPQ) scoring candidates for alignment, and we implement a drop-off score threshold of 0.5 (score to the highest score). In addition to these parameters, we employ two additional optimizations. First, if we encounter a perfect match (no mismatches), we stop and report the alignment even if there are remaining candidates above the drop-off parameter. Second, suppose we have encountered an alignment with an edit distance of 1. In that case, we do not call base-level alignment for remaining candidates since a call to base level alignment implies that the edit distance is at least 1, as we described in the “<xref rid="Sec28" ref-type="sec">Single-end alignment”</xref> section. Strobealign also supports multithreading using openMP. If more than one thread is specified, strobealign will parallelize the alignment step by splitting the reads into batches of 1 million reads to be processed in parallel.</p>
      <p id="Par81">The median read length (<inline-formula id="IEq128"><alternatives><tex-math id="M265">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{x}$$\end{document}</tex-math><mml:math id="M266"><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq128.gif"/></alternatives></inline-formula>) is estimated from the first 500 reads in the read input. As for selecting values of <italic>k</italic>, <italic>s</italic>, <italic>p</italic>, <inline-formula id="IEq129"><alternatives><tex-math id="M267">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{min}$$\end{document}</tex-math><mml:math id="M268"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq129.gif"/></alternatives></inline-formula> and <inline-formula id="IEq130"><alternatives><tex-math id="M269">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{max}$$\end{document}</tex-math><mml:math id="M270"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq130.gif"/></alternatives></inline-formula>, we set suitable parameters given <inline-formula id="IEq131"><alternatives><tex-math id="M271">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{x}$$\end{document}</tex-math><mml:math id="M272"><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq131.gif"/></alternatives></inline-formula> based on experimental evaluation of accuracy and runtime. We let <inline-formula id="IEq132"><alternatives><tex-math id="M273">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{min} = k/(k-s+1)+ l$$\end{document}</tex-math><mml:math id="M274"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq132.gif"/></alternatives></inline-formula> and <inline-formula id="IEq133"><alternatives><tex-math id="M275">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{min} = k/(k-s+1)+ u$$\end{document}</tex-math><mml:math id="M276"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">min</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>u</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq133.gif"/></alternatives></inline-formula> where <italic>l</italic> and <italic>u</italic> are integers that specify lower and upper offset. Then, we choose the following parameter tuples for (<italic>k</italic>, <italic>s</italic>, <italic>p</italic>, <italic>l</italic>, <italic>u</italic>) given <inline-formula id="IEq134"><alternatives><tex-math id="M277">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{x}$$\end{document}</tex-math><mml:math id="M278"><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq134.gif"/></alternatives></inline-formula>.<disp-formula id="Equ6"><alternatives><tex-math id="M279">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} (k,s,p,l,u)= \left\{ \begin{array}{ll} (20,4,8,-4,2),&amp;{} \text {if } \tilde{x} \le 75\\ (20,4,8,-2,2), &amp;{} \text {if } 75&lt; \tilde{x} \le 125 \\ (20,4,8,1,7), &amp;{} \text {if } 125&lt; \tilde{x} \le 175 \\ (20,4,8,4,13), &amp;{} \text {if } 175&lt; \tilde{x} \le 275 \\ (22,4,8,2,12), &amp;{} \text {if } 275&lt; \tilde{x} \le 375 \\ (23,6,8,2,12), &amp;{} \text {if } 375 &lt; \tilde{x} \end{array}\right. \end{aligned}$$\end{document}</tex-math><mml:math id="M280" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:mi>s</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>,</mml:mo><mml:mi>l</mml:mi><mml:mo>,</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfenced open="{"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>20</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mo>-</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mn>75</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">(</mml:mo><mml:mn>20</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mo>-</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mn>75</mml:mn><mml:mo>&lt;</mml:mo><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mn>125</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">(</mml:mo><mml:mn>20</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mn>125</mml:mn><mml:mo>&lt;</mml:mo><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mn>175</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">(</mml:mo><mml:mn>20</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>13</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mn>175</mml:mn><mml:mo>&lt;</mml:mo><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mn>275</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">(</mml:mo><mml:mn>22</mml:mn><mml:mo>,</mml:mo><mml:mn>4</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>12</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mn>275</mml:mn><mml:mo>&lt;</mml:mo><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>≤</mml:mo><mml:mn>375</mml:mn></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mo stretchy="false">(</mml:mo><mml:mn>23</mml:mn><mml:mo>,</mml:mo><mml:mn>6</mml:mn><mml:mo>,</mml:mo><mml:mn>8</mml:mn><mml:mo>,</mml:mo><mml:mn>2</mml:mn><mml:mo>,</mml:mo><mml:mn>12</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mrow/><mml:mtext>if</mml:mtext><mml:mspace width="0.333333em"/><mml:mn>375</mml:mn><mml:mo>&lt;</mml:mo><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:mfenced></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>With a read length of 200nt and the parameters in this study, roughly <inline-formula id="IEq135"><alternatives><tex-math id="M281">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(1/5)*200 = 40$$\end{document}</tex-math><mml:math id="M282"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">/</mml:mo><mml:mn>5</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mrow/><mml:mo>∗</mml:mo><mml:mn>200</mml:mn><mml:mo>=</mml:mo><mml:mn>40</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq135.gif"/></alternatives></inline-formula> syncmers are produced for each read, and roughly 30 strobemers are created in each direction. Naturally, these values are reduced for shorter reads which impacts sensitivity. A read of 100 nt will have on average 20 syncmers and only 10 strobemers. We could consider lower <inline-formula id="IEq136"><alternatives><tex-math id="M283">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{max}$$\end{document}</tex-math><mml:math id="M284"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq136.gif"/></alternatives></inline-formula> to produce more strobemers for shorter reads at the cost of memory.</p>
      <p id="Par82">Although it is exponentially less likely to have open syncmers sampled further away from the mean sampling density [<xref ref-type="bibr" rid="CR22">22</xref>], they do not have a window guarantee and may be sparser sampled in some regions. Therefore, we have a hard limit on the maximum seed size as a parameter to strobealign (<italic>m</italic>), where it defaults to <inline-formula id="IEq137"><alternatives><tex-math id="M285">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{x} - 50$$\end{document}</tex-math><mml:math id="M286"><mml:mrow><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>-</mml:mo><mml:mn>50</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq137.gif"/></alternatives></inline-formula>. This means that, in some cases, the maximum seed size may be lower than the distance to the downstream syncmer corresponding to <inline-formula id="IEq138"><alternatives><tex-math id="M287">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$w_{max}$$\end{document}</tex-math><mml:math id="M288"><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi mathvariant="italic">max</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq138.gif"/></alternatives></inline-formula>. With the parameters we use above, this happens in less than 0.1% of the seeds. Finally, on rare occasions there is no open syncmer within the downstream window, <italic>e.g.</italic>, due to regions of N’s in centromeres on hg38. In these cases we use only the first syncmer as the strobemer seed. This happens on hg38 for 0.0007% of the <inline-formula id="IEq139"><alternatives><tex-math id="M289">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{x} = 150$$\end{document}</tex-math><mml:math id="M290"><mml:mrow><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mn>150</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq139.gif"/></alternatives></inline-formula> seeds (3,963 out of 544M seeds).</p>
    </sec>
    <sec id="Sec33">
      <title>The E-hits metric</title>
      <p id="Par83">Let <italic>N</italic> be the total number of seeds and <inline-formula id="IEq140"><alternatives><tex-math id="M291">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M \le N$$\end{document}</tex-math><mml:math id="M292"><mml:mrow><mml:mi>M</mml:mi><mml:mo>≤</mml:mo><mml:mi>N</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq140.gif"/></alternatives></inline-formula> the number of distinct seeds produced over a set of reference sequences by any seeding method. Let <inline-formula id="IEq141"><alternatives><tex-math id="M293">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i \in [1,M]$$\end{document}</tex-math><mml:math id="M294"><mml:mrow><mml:mi>i</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq141.gif"/></alternatives></inline-formula> be an index variable over the set of distinct seeds, and <inline-formula id="IEq142"><alternatives><tex-math id="M295">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$x_i$$\end{document}</tex-math><mml:math id="M296"><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq142.gif"/></alternatives></inline-formula> denote the number of times seed <italic>i</italic> is produced. Then, <inline-formula id="IEq143"><alternatives><tex-math id="M297">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_i = \frac{x_i}{N}$$\end{document}</tex-math><mml:math id="M298"><mml:mrow><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mfrac><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>N</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq143.gif"/></alternatives></inline-formula> corresponds to the probability that seed <italic>i</italic> is picked uniformly at random over the multiset of seeds produced by the seeding method. The expected number of occurrences of a randomly sampled seed <italic>i</italic> is<disp-formula id="Equ7"><alternatives><tex-math id="M299">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} E[X] = \sum\limits_{i = 1}^{M} x_i p_i = \sum\limits_{i = 1}^{M} x_i \frac{x_i}{N} = \frac{1}{ N } \sum\limits_{i = 1}^{M} x_i^2 \end{aligned}$$\end{document}</tex-math><mml:math id="M300" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>E</mml:mi><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>X</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:msub><mml:mi>p</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mfrac><mml:msub><mml:mi>x</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mi>N</mml:mi></mml:mfrac><mml:mo>=</mml:mo><mml:mfrac><mml:mn>1</mml:mn><mml:mi>N</mml:mi></mml:mfrac><mml:munderover><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi>i</mml:mi><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mi>M</mml:mi></mml:munderover><mml:msubsup><mml:mi>x</mml:mi><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msubsup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2022_2831_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>We refer to <italic>E</italic>[<italic>X</italic>] as E-hits. The connection to read alignment is immediate. A seed of length <italic>s</italic> is captured in a read of length <italic>r</italic> if the read starts at any of the <inline-formula id="IEq144"><alternatives><tex-math id="M301">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r-s+1$$\end{document}</tex-math><mml:math id="M302"><mml:mrow><mml:mi>r</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq144.gif"/></alternatives></inline-formula> locations upstream to the start of the seed. Assuming uniformly sampled reads, the probability of the seed being captured is <inline-formula id="IEq145"><alternatives><tex-math id="M303">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(r-s+1)/|G|$$\end{document}</tex-math><mml:math id="M304"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq145.gif"/></alternatives></inline-formula> where |<italic>G</italic>| if the length of the genome. Since every seed is captured with the same probability <inline-formula id="IEq146"><alternatives><tex-math id="M305">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(r-s+1)/|G|$$\end{document}</tex-math><mml:math id="M306"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq146.gif"/></alternatives></inline-formula>, this is a constant. Therefore, picking a read at a random location and extracting a seed preserves the relative frequency to directly picking a seed at random from the index. Note however that the probability <inline-formula id="IEq147"><alternatives><tex-math id="M307">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$(r-s+1)/|G|$$\end{document}</tex-math><mml:math id="M308"><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>r</mml:mi><mml:mo>-</mml:mo><mml:mi>s</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">/</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>G</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq147.gif"/></alternatives></inline-formula> does not hold near the end of the reference. Assuming the reference is large enough, this has negligible effect. Therefore, if reads are sampled uniformly at random over the reference sequences, E-hits measure the expected number of matches we obtain for error-free seeds extracted from the reads. The uniform distribution is a common assumption for, e.g., Illumina genome sequencing reads, albeit not fully accurate.</p>
      <p id="Par84">The E-hits metric is conceptually similar to the expected contig size covering a random position in the genome (E-size) as defined in [<xref ref-type="bibr" rid="CR45">45</xref>], hence E-hits’ similar denotation. E-hits is also conceptually similar to Eq. 3 in [<xref ref-type="bibr" rid="CR46">46</xref>] for calculating what the authors define as <italic>expected hit rate</italic>. The difference between E-hits and the expected hit rate is that the denominator is <inline-formula id="IEq148"><alternatives><tex-math id="M309">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N^2$$\end{document}</tex-math><mml:math id="M310"><mml:msup><mml:mi>N</mml:mi><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2022_2831_Article_IEq148.gif"/></alternatives></inline-formula> in the latter metric. This denominator results in a difference both in the intuition and in the outcome when ranking seed constructs. First, E-hits has a direct interpretation, namely the expected number of hits for a randomly selected seed, while expected hit rate results in a typically very small fractional number (dividing E-hits with the total number of seeds). Second, there is a difference in ranking the outcome when comparing seeding methods of different densities. For example, for seeds of size 60, E-hits is about 30 for <italic>k</italic>-mers and 20 for minimizers with density 1/5 (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A). To get the expected hit rate for <italic>k</italic>-mers we divide with <italic>N</italic> and for minimizers we divide with <italic>N</italic>/5. This results in a smaller expected hit rate for <italic>k</italic>-mers. Note also that E-hits is different from the popular E-value used in BLAST [<xref ref-type="bibr" rid="CR47">47</xref>]. The E-value is a theoretical computation that measures the expected number hits that could be found by chance under random nucleotide distribution given a database size and an exact <italic>k</italic>-mer seed. E-hits is computed from the actual reference sequences and any seeding protocol.</p>
    </sec>
    <sec id="Sec34">
      <title>Memory usage</title>
      <p id="Par85">Strobealign has a peak memory usage of about 25–33 Gb for hg38 (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5). With the parameter settings we investigated in this evaluation for read lengths 50–300 nt on hg38 (syncmer subsampling rate of 1/5), strobealign stores roughly 544 million seeds in memory. Furthermore, the size of the index scales with the number of unique seeds. For example, strobealign uses only about 1.5 times  more memory (50Gb) when aligning to rye (2.3 times larger than hg38) as rye is a repetitive genome with a lower fraction of unique seeds. Similarly, the maize index is only 15Gb (0.5 times the index of human). A detailed discussion on the memory and implementation is found in Suppl Note G.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec35">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2022_2831_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1:</bold> Supplementary notes and figures.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The computations were performed on resources provided by the Swedish National Infrastructure for Computing (SNIC) at Uppsala Multidisciplinary Center for Advanced Computational Science (UPPMAX) partially funded by the Swedish Research Council through grant agreement no. 2018-05973. We thank Jim Shaw and Paul Medvedev for discussions around improving the presentation of the E-hits metric.</p>
    <sec id="FPar1">
      <title>Review history</title>
      <p id="Par86">This manuscript was previously reviewed at another journal and the review history is not available.</p>
    </sec>
    <sec id="FPar2">
      <title>Peer review information</title>
      <p id="Par87">Andrew Cosgrove was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author’s contributions</title>
    <p>KS concepted the project, implemented the algorithm, designed and implemented all the benchmarks, wrote the paper, and read and approved the manuscript.</p>
    <sec id="FPar4">
      <title>Author’s Twitter handles</title>
      <p id="Par88">Twitter handles: <ext-link ext-link-type="uri" xlink:href="https://twitter.com/krsahlin">@krsahlin</ext-link> (Kristoffer Sahlin).</p>
    </sec>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open access funding provided by Stockholm University. Kristoffer Sahlin was supported by the Swedish Research Council (SRC, Vetenskapsrådet) under Grant No. 2021-04000.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>Strobealign v0.7.1 was used in the benchmark and is available on GitHub [<xref ref-type="bibr" rid="CR48">48</xref>] and is released under the MIT license. The source code of this version is also available on zenodo [<xref ref-type="bibr" rid="CR49">49</xref>]. Script to evaluate seeding methods, generate simulated data, and to evaluate the aligners on all the datasets are available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ksahlin/alignment_evaluation">https://github.com/ksahlin/alignment_evaluation</ext-link>. Biological datasets BIO150 [<xref ref-type="bibr" rid="CR50">50</xref>] (Illumina WGS 2x150bp, HG004) and BIO250 [<xref ref-type="bibr" rid="CR51">51</xref>] (Illumina WGS 2x250bp, HG004) analyzed in this study are found at <ext-link ext-link-type="uri" xlink:href="https://github.com/genome-in-a-bottle/giab_data_indexes">https://github.com/genome-in-a-bottle/giab_data_indexes</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par89">Not applicable.</p>
    </notes>
    <notes id="FPar5" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par90">The author declares no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Fast and accurate long-read alignment with Burrows–Wheeler transform</article-title>
        <source>Bioinformatics.</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>5</issue>
        <fpage>589</fpage>
        <lpage>595</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp698</pub-id>
        <pub-id pub-id-type="pmid">20080505</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Li H. Aligning sequence reads, clone sequences and assembly contigs with BWA-MEM. 2013. <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1303.3997">arXiv:1303.3997</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol.</source>
        <year>2009</year>
        <volume>10</volume>
        <issue>3</issue>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Fast gapped-read alignment with Bowtie 2</article-title>
        <source>Nat Methods.</source>
        <year>2012</year>
        <volume>9</volume>
        <issue>4</issue>
        <fpage>357</fpage>
        <lpage>359</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.1923</pub-id>
        <pub-id pub-id-type="pmid">22388286</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Burrows M, Wheeler D. A block sorting lossless data compression algorithm. Technical Report 124, Digital Equipment Corporation, 1994. <ext-link ext-link-type="uri" xlink:href="https://people.unipmn.it/manzini/papers/focs00draft.pdf">https://people.unipmn.it/manzini/papers/focs00draft.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lederman</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A random-permutations-based approach to fast read alignment</article-title>
        <source>BMC Bioinforma.</source>
        <year>2013</year>
        <volume>14</volume>
        <issue>5</issue>
        <fpage>S8</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-14-S5-S8</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vezzi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Del Fabbro</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Tomescu</surname>
            <given-names>AI</given-names>
          </name>
          <name>
            <surname>Policriti</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>rNA: a fast and accurate short reads numerical aligner</article-title>
        <source>Bioinformatics.</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>1</issue>
        <fpage>123</fpage>
        <lpage>124</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr617</pub-id>
        <pub-id pub-id-type="pmid">22084252</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Zaharia M, Bolosky WJ, Curtis K, Fox A, Patterson D, Shenker S, et al. Faster and more accurate sequence alignment with SNAP. 2011. <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1111.5572">arXiv:1111.5572</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>The Subread aligner: fast, accurate and scalable read mapping by seed-and-vote</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>10</issue>
        <fpage>e108</fpage>
        <lpage>e108</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt214</pub-id>
        <pub-id pub-id-type="pmid">23558742</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alser</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rotman</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Deshpande</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Taraszka</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Baykal</surname>
            <given-names>PI</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Technology dictates algorithms: recent developments in read alignment</article-title>
        <source>Genome Biol.</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>249</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-021-02443-7</pub-id>
        <pub-id pub-id-type="pmid">34446078</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>TopHat: discovering splice junctions with RNA-Seq</article-title>
        <source>Bioinformatics.</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>9</issue>
        <fpage>1105</fpage>
        <lpage>1111</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp120</pub-id>
        <pub-id pub-id-type="pmid">19289445</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dobin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Schlesinger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Drenkow</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zaleski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Jha</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>STAR: ultrafast universal RNA-seq aligner</article-title>
        <source>Bioinformatics.</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>1</issue>
        <fpage>15</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts635</pub-id>
        <pub-id pub-id-type="pmid">23104886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bray</surname>
            <given-names>NL</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Near-optimal probabilistic RNA-seq quantification</article-title>
        <source>Nat Biotechnol.</source>
        <year>2016</year>
        <volume>34</volume>
        <issue>5</issue>
        <fpage>525</fpage>
        <lpage>527</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3519</pub-id>
        <pub-id pub-id-type="pmid">27043002</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Duggal</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Love</surname>
            <given-names>MI</given-names>
          </name>
          <name>
            <surname>Irizarry</surname>
            <given-names>RA</given-names>
          </name>
          <name>
            <surname>Kingsford</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Salmon provides fast and bias-aware quantification of transcript expression</article-title>
        <source>Nat Methods.</source>
        <year>2017</year>
        <volume>14</volume>
        <issue>4</issue>
        <fpage>417</fpage>
        <lpage>419</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.4197</pub-id>
        <pub-id pub-id-type="pmid">28263959</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Schleimer S, Wilkerson DS, Aiken A. Winnowing: local algorithms for document fingerprinting. In: Proceedings of the 2003 ACM SIGMOD International Conference on Management of Data. SIGMOD ’03. New York: Association for Computing Machinery; 2003. p. 76–85. 10.1145/872757.872770.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hayes</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Mount</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Reducing storage requirements for biological sequence comparison</article-title>
        <source>Bioinformatics.</source>
        <year>2004</year>
        <volume>20</volume>
        <issue>18</issue>
        <fpage>3363</fpage>
        <lpage>3369</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth408</pub-id>
        <pub-id pub-id-type="pmid">15256412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap and miniasm: fast mapping and de novo assembly for noisy long sequences</article-title>
        <source>Bioinformatics.</source>
        <year>2016</year>
        <volume>32</volume>
        <issue>14</issue>
        <fpage>2103</fpage>
        <lpage>2110</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw152</pub-id>
        <pub-id pub-id-type="pmid">27153593</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Minimap2: pairwise alignment for nucleotide sequences</article-title>
        <source>Bioinformatics.</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>18</issue>
        <fpage>3094</fpage>
        <lpage>3100</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty191</pub-id>
        <pub-id pub-id-type="pmid">29750242</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Dilthey</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Aluru</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>A fast adaptive algorithm for computing whole-genome homology maps</article-title>
        <source>Bioinformatics.</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>17</issue>
        <fpage>i748</fpage>
        <lpage>i756</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty597</pub-id>
        <pub-id pub-id-type="pmid">30423094</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Rhie</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Chu</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Walenz</surname>
            <given-names>BP</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Weighted minimizer sampling improves long read mapping</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <issue>Supplement_1</issue>
        <fpage>i111</fpage>
        <lpage>i118</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa435</pub-id>
        <pub-id pub-id-type="pmid">32657365</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yan</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Chaturvedi</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Appuswamy</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Accel-Align: a fast sequence mapper and aligner based on the seed-embed-extend method</article-title>
        <source>BMC Bioinformatics.</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>257</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-021-04162-z</pub-id>
        <pub-id pub-id-type="pmid">34016035</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Syncmers are more sensitive than minimizers for selecting conserved k-mers in biological sequences</article-title>
        <source>PeerJ.</source>
        <year>2021</year>
        <volume>9</volume>
        <fpage>e10805</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.10805</pub-id>
        <pub-id pub-id-type="pmid">33604186</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
        </person-group>
        <article-title>Effective sequence similarity detection with strobemers</article-title>
        <source>Genome Res.</source>
        <year>2021</year>
        <volume>31</volume>
        <issue>11</issue>
        <fpage>2080</fpage>
        <lpage>2094</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.275648.121</pub-id>
        <pub-id pub-id-type="pmid">34667119</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Shaw J, Yu YW. Theory of local k-mer selection with applications to long-read alignment. Bioinformatics. 2021;Btab790. 10.1093/bioinformatics/btab790.</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Illumina, Inc. 2022. <ext-link ext-link-type="uri" xlink:href="https://www.illumina.com/company/news-center/press-releases/press-release-details.html?newsid=e3ad6d4e-fcbe-4a0d-ac1d-5a3996d1bfd8">https://www.illumina.com/company/news-center/press-releases/press-release-details.html?newsid=e3ad6d4e-fcbe-4a0d-ac1d-5a3996d1bfd8</ext-link>. Accessed 13 Dec 2022.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Bolosky WJ, Subramaniyan A, Zaharia M, Pandya R, Sittler T, Patterson D. Fuzzy set intersection based paired-end short-read alignment. bioRxiv. 2021. 10.1101/2021.11.23.469039</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Edgar</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>URMAP, an ultra-fast read mapper</article-title>
        <source>PeerJ.</source>
        <year>2020</year>
        <volume>8</volume>
        <fpage>e9338</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.9338</pub-id>
        <pub-id pub-id-type="pmid">32612885</pub-id>
      </element-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Almodaresi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zakeri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>PuffAligner: a fast, efficient and accurate aligner based on the Pufferfish index</article-title>
        <source>Bioinformatics.</source>
        <year>2021</year>
        <volume>37</volume>
        <issue>22</issue>
        <fpage>4048</fpage>
        <lpage>4055</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btab408</pub-id>
        <pub-id pub-id-type="pmid">34117875</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nurk</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Rhie</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rautiainen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Bzikadze</surname>
            <given-names>AV</given-names>
          </name>
          <name>
            <surname>Mikheenko</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The complete sequence of a human genome</article-title>
        <source>Science.</source>
        <year>2022</year>
        <volume>376</volume>
        <issue>6588</issue>
        <fpage>44</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1126/science.abj6987</pub-id>
        <pub-id pub-id-type="pmid">35357919</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Yang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>He</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Jin</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>X</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A high-quality genome assembly highlights rye genomic characteristics and agronomically important genes</article-title>
        <source>Nat Genet.</source>
        <year>2021</year>
        <volume>53</volume>
        <issue>4</issue>
        <fpage>574</fpage>
        <lpage>584</lpage>
        <pub-id pub-id-type="doi">10.1038/s41588-021-00808-z</pub-id>
        <pub-id pub-id-type="pmid">33737755</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zook</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Catoe</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McDaniel</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Vang</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Spies</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Sidow</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Extensive sequencing of seven human genomes to characterize benchmark reference materials</article-title>
        <source>Sci Data.</source>
        <year>2016</year>
        <volume>3</volume>
        <issue>1</issue>
        <fpage>160025</fpage>
        <pub-id pub-id-type="doi">10.1038/sdata.2016.25</pub-id>
        <pub-id pub-id-type="pmid">27271295</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marçais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Kingsford</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>A fast, lock-free approach for efficient parallel counting of occurrences of k-mers</article-title>
        <source>Bioinformatics.</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>6</issue>
        <fpage>764</fpage>
        <lpage>770</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr011</pub-id>
        <pub-id pub-id-type="pmid">21217122</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Meyer</surname>
            <given-names>CA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fast alignment and preprocessing of chromatin profiles with Chromap</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>6566</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-26865-w</pub-id>
        <pub-id pub-id-type="pmid">34772935</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cline</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Wisittipanit</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Boongoen</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Chukeatirote</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Struss</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Eungwanichayapant</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Recalibration of mapping quality scores in Illumina short-read alignments improves SNP detection results in low-coverage sequencing data</article-title>
        <source>PeerJ.</source>
        <year>2020</year>
        <volume>8</volume>
        <fpage>e10501</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj.10501</pub-id>
        <pub-id pub-id-type="pmid">33354434</pub-id>
      </element-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yao</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>You</surname>
            <given-names>FM</given-names>
          </name>
          <name>
            <surname>N’Diaye</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Knox</surname>
            <given-names>RE</given-names>
          </name>
          <name>
            <surname>McCartney</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hiebert</surname>
            <given-names>CW</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Evaluation of variant calling tools for large plant genome re-sequencing</article-title>
        <source>BMC Bioinformatics.</source>
        <year>2020</year>
        <volume>21</volume>
        <issue>1</issue>
        <fpage>360</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-020-03704-1</pub-id>
        <pub-id pub-id-type="pmid">32807073</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Marco-Sola</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Moure</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Moreto</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Espinosa</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Fast gap-affine pairwise alignment using the wavefront algorithm</article-title>
        <source>Bioinformatics.</source>
        <year>2021</year>
        <volume>37</volume>
        <issue>4</issue>
        <fpage>456</fpage>
        <lpage>463</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa777</pub-id>
        <pub-id pub-id-type="pmid">32915952</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frith</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Noé</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Kucherov</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Minimally overlapping words for sequence similarity search</article-title>
        <source>Bioinformatics.</source>
        <year>2020</year>
        <volume>36</volume>
        <issue>22–23</issue>
        <fpage>5344</fpage>
        <lpage>5350</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa1054</pub-id>
        <pub-id pub-id-type="pmid">33346833</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Medvedev</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>De Novo Clustering of Long-Read Transcriptome Data Using a Greedy</article-title>
        <source>Quality Value-Based Algorithm. J Comput Biol.</source>
        <year>2020</year>
        <volume>27</volume>
        <issue>4</issue>
        <fpage>472</fpage>
        <lpage>484</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2019.0299</pub-id>
        <pub-id pub-id-type="pmid">32181688</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Sahlin K, Mäkinen V. Accurate spliced alignment of long RNA sequencing reads. Bioinformatics. 2021;Btab540. 10.1093/bioinformatics/btab540.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">Chin CS, Khalak A. Human Genome Assembly in 100 Minutes. bioRxiv. 2019. 10.1101/705616.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Sahlin</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Medvedev</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Error correction enables use of Oxford Nanopore technology for reference-free transcriptome analysis</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>2</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-020-20340-8</pub-id>
        <pub-id pub-id-type="pmid">33397972</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ekim</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Berger</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Chikhi</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Minimizer-space de Bruijn graphs: Whole-genome assembly of long reads in minutes on a personal computer</article-title>
        <source>Cell Syst.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>10</issue>
        <fpage>958</fpage>
        <lpage>968.e6</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cels.2021.08.009</pub-id>
        <pub-id pub-id-type="pmid">34525345</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Li H. Code examples of fast and simple k-mer counters for tutorial purposes. GitHub. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/lh3/kmer-cnt/issues/4">https://github.com/lh3/kmer-cnt/issues/4</ext-link>. Accessed 13 Dec 2022.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Zhao M, Lee WP, Garrison EP, Marth GT. SSW Library: an SIMD Smith-Waterman C/C++ library for use in genomic applications. PLoS ONE. 2013;8(12). 10.1371/journal.pone.0082138.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Zimin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Puiu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Magoc</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>GAGE: A critical evaluation of genome assemblies and assembly algorithms</article-title>
        <source>Genome Res.</source>
        <year>2012</year>
        <volume>22</volume>
        <issue>3</issue>
        <fpage>557</fpage>
        <lpage>567</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.131383.111</pub-id>
        <pub-id pub-id-type="pmid">22147368</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>de Sena Brandine</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Smith</surname>
            <given-names>AD</given-names>
          </name>
        </person-group>
        <article-title>Fast and memory-efficient mapping of short bisulfite sequencing reads using a two-letter alphabet</article-title>
        <source>NAR Genom Bioinforma</source>
        <year>2021</year>
        <volume>3</volume>
        <issue>4</issue>
        <fpage>Lqab115</fpage>
        <pub-id pub-id-type="doi">10.1093/nargab/lqab115</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Gish</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Basic local alignment search tool</article-title>
        <source>J Mol Biol.</source>
        <year>1990</year>
        <volume>215</volume>
        <issue>3</issue>
        <fpage>403</fpage>
        <lpage>410</lpage>
        <pub-id pub-id-type="doi">10.1016/S0022-2836(05)80360-2</pub-id>
        <pub-id pub-id-type="pmid">2231712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <mixed-citation publication-type="other">Sahlin K. strobealign: flexible seed size enables ultra-fast and accurate read alignment. GitHub. 2022. <ext-link ext-link-type="uri" xlink:href="https://github.com/ksahlin/StrobeAlign">https://github.com/ksahlin/StrobeAlign</ext-link>. Accessed 13 Dec 2022.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <mixed-citation publication-type="other">Sahlin K. strobealign: flexible seed size enables ultra-fast and accurate read alignment. Zenodo. 2022. 10.5281/zenodo.7157828. Accessed 13 Dec 2022.</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Zook J. Illumina 150PE read datasets, GitHub. Datasets. Genome Bottle. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/AshkenazimTrio/sequence.index.AJtrio_Illumina300X_wgs_07292015.HG004">https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/AshkenazimTrio/sequence.index.AJtrio_Illumina300X_wgs_07292015.HG004</ext-link>. Accessed 24 Feb 2022.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <mixed-citation publication-type="other">Zook J. Illumina 250PE read datasets, GitHub. Datasets. Genome Bottle. 2020. <ext-link ext-link-type="uri" xlink:href="https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/AshkenazimTrio/sequence.index.AJtrio_Illumina_2x250bps_06012016.HG004">https://github.com/genome-in-a-bottle/giab_data_indexes/blob/master/AshkenazimTrio/sequence.index.AJtrio_Illumina_2x250bps_06012016.HG004</ext-link>. Accessed 24 Feb 2022.</mixed-citation>
    </ref>
  </ref-list>
</back>

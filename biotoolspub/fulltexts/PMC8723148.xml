<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinformatics</journal-id>
    <journal-id journal-id-type="publisher-id">bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1367-4803</issn>
    <issn pub-type="epub">1367-4811</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8723148</article-id>
    <article-id pub-id-type="pmid">34534268</article-id>
    <article-id pub-id-type="doi">10.1093/bioinformatics/btab662</article-id>
    <article-id pub-id-type="publisher-id">btab662</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Applications Notes</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Genome Analysis</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Viola: a structural variant signature extractor with user-defined classifications</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Sugita</surname>
          <given-names>Itsuki</given-names>
        </name>
        <aff><institution>Department of Preventive Medicine, Graduate School of Medicine, The University of Tokyo</institution>, Bunkyo-ku, Tokyo 1130033, <country country="JP">Japan</country></aff>
        <aff><institution>Faculty of Medicine, Tokyo Medical and Dental University</institution>, Bunkyo-ku, Tokyo 1138510, <country country="JP">Japan</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Matsuyama</surname>
          <given-names>Shohei</given-names>
        </name>
        <aff><institution>Faculty of Medicine, Tokyo Medical and Dental University</institution>, Bunkyo-ku, Tokyo 1138510, <country country="JP">Japan</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Dobashi</surname>
          <given-names>Hiroki</given-names>
        </name>
        <aff><institution>Faculty of Medicine, Tokyo Medical and Dental University</institution>, Bunkyo-ku, Tokyo 1138510, <country country="JP">Japan</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-0038-728X</contrib-id>
        <name>
          <surname>Komura</surname>
          <given-names>Daisuke</given-names>
        </name>
        <xref rid="btab662-cor1" ref-type="corresp"/>
        <aff><institution>Department of Preventive Medicine, Graduate School of Medicine, The University of Tokyo</institution>, Bunkyo-ku, Tokyo 1130033, <country country="JP">Japan</country></aff>
        <!--kdais-prm@m.u-tokyo.ac.jp-->
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Ishikawa</surname>
          <given-names>Shumpei</given-names>
        </name>
        <xref rid="btab662-cor1" ref-type="corresp"/>
        <aff><institution>Department of Preventive Medicine, Graduate School of Medicine, The University of Tokyo</institution>, Bunkyo-ku, Tokyo 1130033, <country country="JP">Japan</country></aff>
        <!--ishum-prm@m.u-tokyo.ac.jp-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Robinson</surname>
          <given-names>Peter</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="btab662-cor1">To whom correspondence should be addressed. <email>kdais-prm@m.u-tokyo.ac.jp</email> or <email>ishum-prm@m.u-tokyo.ac.jp</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <day>15</day>
      <month>1</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2021-09-17">
      <day>17</day>
      <month>9</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>9</month>
      <year>2021</year>
    </pub-date>
    <volume>38</volume>
    <issue>2</issue>
    <fpage>540</fpage>
    <lpage>542</lpage>
    <history>
      <date date-type="received">
        <day>03</day>
        <month>4</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>22</day>
        <month>8</month>
        <year>2021</year>
      </date>
      <date date-type="editorial-decision">
        <day>11</day>
        <month>9</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>14</day>
        <month>9</month>
        <year>2021</year>
      </date>
      <date date-type="corrected-typeset">
        <day>29</day>
        <month>9</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="btab662.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Summary</title>
        <p>Here, we present Viola, a Python package that provides structural variant (SV; large scale genome DNA variations that can result in disease, e.g. cancer) signature analytical functions and utilities for custom SV classification, merging multi-SV-caller output files and SV annotation. We demonstrate that Viola can extract biologically meaningful SV signatures from publicly available SV data for cancer and we evaluate the computational time necessary for annotation of the data.</p>
      </sec>
      <sec id="s2">
        <title>Availability and implementation</title>
        <p>Viola is available on pip (<ext-link xlink:href="https://pypi.org/project/Viola-SV/" ext-link-type="uri">https://pypi.org/project/Viola-SV/</ext-link>) and the source code is on GitHub (<ext-link xlink:href="https://github.com/dermasugita/Viola-SV" ext-link-type="uri">https://github.com/dermasugita/Viola-SV</ext-link>).</p>
      </sec>
      <sec id="s4">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>AMED P-CREATE</institution>
          </institution-wrap>
        </funding-source>
        <award-id>JP20cm0106551</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="3"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Somatic mutations in cancer are the cumulative result of DNA aberrations caused by diverse mutational processes. Recently, large scale studies of human cancer have revealed characteristic patterns of mutation types, i.e. mutational signatures, arising from specific processes of single nucleotide variant formation. These studies often provide theoretical explanations for known mutational processes and their consequences, e.g. C&gt;A substitutions and CC&gt;TT alterations caused by smoking and ultraviolet light exposure, respectively.</p>
    <p>Structural variants (SVs) are another type of DNA mutation, defined as events larger than 50 bp in size or involving multiple chromosomes, occupying non-negligible proportions of mutations in cancer cells (<xref rid="btab662-B9" ref-type="bibr">Mills <italic toggle="yes">et al.</italic>, 2011</xref>; <xref rid="btab662-B00069546" ref-type="bibr">Yi and Ju, 2018</xref> ). Signature analysis of SVs may potentially provide novel insights into carcinogenesis. The development of high-throughput sequencing technologies and powerful SV callers has improved the accuracy of SV event identification. Several mechanisms of SV formation have also been identified (Yi and Ju, 2018). Therefore, research on SV signatures is gradually becoming realistic.</p>
    <p>To date, several attempts have been made to decompose SV patterns into SV signatures, but an established method has yet to be realized. Previous studies have mainly classified SVs according to segment size and revealed an association between small tandem duplications and BRCA1 mutations (<xref rid="btab662-B7" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab662-B10" ref-type="bibr">Nik-Zainal <italic toggle="yes">et al.</italic>, 2016</xref>). However, a consensus has not been achieved on a precise SV classification method.</p>
    <p>SVs can be classified by metrics other than length. <xref rid="btab662-B7" ref-type="bibr">Li <italic toggle="yes">et al.</italic> (2020)</xref> also used replication timing and common fragile sites (CFSs). Interestingly, the biological meaningfulness of replication timing and CFSs has been reported, e.g. the signatures of medium-sized (50–500 kb) tandem duplications occurring at the site of late replication timing have been associated with CDK12 driver mutations, whereas CFS signatures have been associated with gastrointestinal cancer. Other SV classification methods, such as microhomology and association of transposons, have yet to be considered in detail; therefore, further analysis is required to identify a suitable SV classification method for signature analysis.</p>
    <p>At present, very few tools are available for SV signature analysis. To the best of our knowledge, pyCancerSig (<xref rid="btab662-B14" ref-type="bibr">Thutkawkorapin et al., 2020</xref>), which is the first tool that can handle SVs for cancer mutation signature analysis, is the only SV signature analysis tool currently available. However, pyCancerSig has limitations in SV classifications as it only supports traditional SV classes, i.e. deletion, duplication, inversion and translocation, and length-based classification.</p>
    <p>The time-consuming nature of parsing variant call format (VCF) files is also an obstacle to SV analysis. VCF is the <italic toggle="yes">de facto</italic> standard format by which genetic variant data are recorded with high human readability. However, from a data management perspective, VCF can be a bottleneck for analysis owing to its complex structure. For SVs in particular, accurate interpretation of VCF records at the single nucleotide level requires considerable learning costs. Difficulties with VCF interpretation cannot be ignored because even 1 bp error in positioning SVs can have critical consequences, e.g. in microhomology analysis.</p>
    <p>Merging SV calls from different callers is also an issue in SV analysis. Precision of SV detection can be improved by merging the results of multiple SV callers (<xref rid="btab662-B3" ref-type="bibr">Cameron <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="btab662-B5" ref-type="bibr">Kuzniar <italic toggle="yes">et al.</italic>, 2020</xref>); however, different SV callers use different ways to represent VCF files, which makes integration challenging.</p>
    <p>Here, we present Viola, a highly customizable and flexible Python package that supports SV signature analysis with user-defined SV classification, matrix-generation functions, and a file exportation system that is compatible with external statistical utilities and facilitates interpretation of results. Viola accepts VCF files from four popular SV callers, namely Manta, Delly, Lumpy and Gridss, and can also read BEDPE format (<xref rid="btab662-B2" ref-type="bibr">Cameron et al., 2017</xref>; <xref rid="btab662-B4" ref-type="bibr">Chen <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab662-B6" ref-type="bibr">Layer <italic toggle="yes">et al.</italic>, 2014</xref>; <xref rid="btab662-B12" ref-type="bibr">Rausch <italic toggle="yes">et al.</italic>, 2012</xref>). Viola also provides an intuitive VCF file manager for filtering, annotating, converting VCF to BEDPE and multicaller merging.</p>
  </sec>
  <sec>
    <title>2 Implementation</title>
    <sec>
      <title>2.1 Data structure</title>
      <p>Viola converts input SV data files, such as VCF and BEDPE files, into our original Python classes. Instances of these classes store SV data as a set of tidy rectangular tables linked via identifiers such as SV ID output by the SV callers (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). These tables follow the principles of tidy data, i.e. each SV record is a row, each variable is a column and each type of observational unit is a table (<xref rid="btab662-B15" ref-type="bibr">Wickham, 2014</xref>). Consequently, storage of multiple values in one element is avoided, in contrast to the INFO and FORMAT columns of a VCF file. Hence, a specific single value can be accessed by simply specifying the row and column of the table of interest; this provides freedom in data handling without the need for cumbersome codes.</p>
    </sec>
    <sec>
      <title>2.2 User interface</title>
      <p>Viola is written in the Python programming language. Although it is intended for use within Python scripts, some features are available from the command line.</p>
      <p>Viola supports SV signature analysis with user-defined SV classes (<xref rid="btab662-F1" ref-type="fig">Fig. 1A</xref> and <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1A and B</xref>). A simple feature matrix based on traditional SV types and SV length, output by the SV caller can be generated from the command line. Advanced uses such as annotation, filtering and multicaller intersection, which are required to generate a complex feature matrix, are supported within Python scripts. In combination with these functions, it is possible to define a wide variety of SV classes, such as ‘duplications located on CFS sites’ and ‘deletions &lt;50 kb in size, located on the early replication timing zones’. These operations can be implemented with simple syntax and are designed to refine the SV classification by trial and error (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2B</xref>).</p>
      <fig position="float" id="btab662-F1">
        <label>Fig. 1.</label>
        <caption>
          <p>Visualization of the data flow in the main analysis scenarios. (<bold>A</bold>) Process of feature matrix generation from multiple samples. (<bold>B</bold>) Overview of VCF merging system</p>
        </caption>
        <graphic xlink:href="btab662f1" position="float"/>
      </fig>
      <p>From an internal data structure perspective, user-defined SV classes are interpreted as new INFO entries of the VCF file. Hence, users can output new VCF or BEDPE files with annotation of novel SV classes as well as generating a signature-analysis-ready feature matrix according to these additional SV classes.</p>
      <p>Alongside signature analysis, Viola has the following features:
</p>
      <list list-type="bullet">
        <list-item>
          <p>Support of well-known SV callers including Manta, Delly, Lumpy and Gridss. The notation has been unified as much as possible to facilitate subsequent processing including merging (<xref rid="btab662-F1" ref-type="fig">Fig. 1B</xref>).</p>
        </list-item>
        <list-item>
          <p>Fast annotation methods that utilize the interval tree algorithm. Source files in BED format are acceptable; thus, information such as gene names, CFSs, replication timing and copy number can be annotated if they can be expressed in BED format.</p>
        </list-item>
        <list-item>
          <p>An intuitive method for filtering SV records. In addition to filtering for genomic coordinates and INFO fields, filtering for FORMAT fields is possible.</p>
        </list-item>
        <list-item>
          <p>Estimations of the length and sequence of microhomology from SV breakpoint positions. Where SV callers do not return microhomology information or publicly available SV data does not contain such information, Viola can estimate microhomology using the reference sequence.</p>
        </list-item>
      </list>
      <p>The use of these characteristics is described in detail in the official Viola documentation, which is available online (<ext-link xlink:href="https://dermasugita.github.io/ViolaDocs/docs/html/index.html" ext-link-type="uri">https://dermasugita.github.io/ViolaDocs/docs/html/index.html</ext-link>).</p>
    </sec>
    <sec>
      <title>2.3 Custom SV classification overview</title>
      <p>With Viola, any information in the INFO field of the VCF can be used for SV classification. Many SV callers write the SV type and length in the INFO field by default making it easy to classify by these variables. For BEDPE files that do not define a field corresponding to the INFO field in a VCF file, Viola will automatically generate INFO fields such as SV length and type. Additionally, new INFO fields can be added using BED file annotation and microhomology prediction. BED files can be used to annotate genes, CFSs, replication timing, copy numbers, etc., which individually or in combination can be used to classify SVs.</p>
      <p>For usability, two SV classifications are available as default settings of the Viola function. One is a simple length-based classification, and the other is the same classification as the analysis in Section 2.5 (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1A and B</xref>).</p>
    </sec>
    <sec>
      <title>2.4 VCF merging strategy</title>
      <p>Viola provides multicaller merging systems. SVs from the different callers will be merged into a single SV when the following conditions are satisfied: (i) the genomic coordinates of multiple SV break-ends are close to each other based on the user-specified criteria (proximity-based or confidence interval-based criteria as described below). (ii) The strands of the SV break-ends are concordant. (iii) The SVs overlap each other at least 1 bp. The latter two conditions are included to avoid merging discordant SV types and small non-overlapping SVs.</p>
      <p>Currently, two criteria for genomic coordinates evaluation have been implemented: proximity-based and confidence interval-based criteria. The former uses the representative genomic coordinates, e.g. POS field and END entry of INFO field. Multiple SV records within a user-defined threshold will be merged. The latter employs confidence intervals reported by SV callers on the CIPOS and CIEND entries of the INFO field. The multiple SV records will be considered a single event when their confidence intervals share at least 1 bp of genomic coordinates.</p>
    </sec>
    <sec>
      <title>2.5 Application </title>
      <sec>
        <title>2.5.1 Matrix generation with simple code</title>
        <p>We ran Viola to generate an SV feature matrix using public BEDPE files reported in a PCAWG study (<xref rid="btab662-B7" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>). First, we downloaded 2748 BEDPE files from the ICGC data portal (<ext-link xlink:href="https://dcc.icgc.org/releases/PCAWG/consensus_sv" ext-link-type="uri">https://dcc.icgc.org/releases/PCAWG/consensus_sv</ext-link>) and used Viola to read 2605 of these files that were not empty as a MultiBedpe instance. Second, the instance was successfully annotated by CFSs and replication timing BED files that we built according to the PCAWG study. We defined 25 SV classes according to CFSs, replication timing and SV length and then generated a 2605 × 25 feature matrix. These operations were written in only 11 lines of the Python code, excluding code for custom SV definitions (<xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S2A</xref>). The matrix generated here can be easily reproduced by following the tutorial in the Viola official document.</p>
      </sec>
      <sec>
        <title>2.5.2 Signature extraction analysis</title>
        <p>We extracted nine SV signatures from the generated matrix using a function of Viola that simultaneously performs non-negative matrix factorization and cluster stability evaluation (<xref rid="sup1" ref-type="supplementary-material">Supplementary Figs S3 and S4</xref>). Several signatures, including the signatures of CFSs, small deletions (&lt;50 kb) and small duplications (&lt;50 kb), were comparable to those in the PCAWG study (<xref rid="btab662-B7" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>). We further explored the association between each of the nine signatures and driver mutations of three well-known DNA repair genes: <italic toggle="yes">BRCA1</italic>, <italic toggle="yes">BRCA2</italic> and <italic toggle="yes">CDK12</italic> (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S2</xref>). These genes were significantly associated with the small duplication signature, small deletion signature and medium–large duplication signature, as expected from previous studies (<xref rid="btab662-B7" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab662-B8" ref-type="bibr">Menghi <italic toggle="yes">et al.</italic>, 2018</xref>; <xref rid="btab662-B10" ref-type="bibr">Nik-Zainal <italic toggle="yes">et al.</italic>, 2016</xref>; <xref rid="btab662-B11" ref-type="bibr">Popova <italic toggle="yes">et al.</italic>, 2016</xref>) (<xref rid="sup1" ref-type="supplementary-material">Supplementary Table S1</xref>).</p>
      </sec>
      <sec>
        <title>2.5.3 Multicaller VCF merging</title>
        <p>We synthesized VCF files mimicking outputs from Manta, Delly, Lumpy and Gridss. These files shared several SVs recorded with errors within 100 bp. In addition, they were designed as the confidence intervals of shared SV break-ends overlapped each other. Four VCF files were merged by Viola with two methods, proximity-based and confidence interval-based criteria, which the user can select.</p>
        <p>First, we tested proximity-based merging with 100 bp specified as the option for proximity. SV events located within 100 bp were given the same ID. We removed SV records called by only a single SV caller. All shared SVs were merged as expected and successfully exported as a VCF file (<xref rid="sup1" ref-type="supplementary-material">Supplementary Data S1</xref>).</p>
        <p>Second, we examined confidence interval-based merging. When SV events that their confidence intervals shared the genomic coordinates at least 1 bp, they were merged and given the same ID. SV records supported by a single SV caller were filtered out. The obtained VCF file was the same as expected.</p>
      </sec>
      <sec>
        <title>2.5.4 Annotation performance</title>
        <p>We tested the performance of the annotations on 2605 BEDPE files using 18 lines of CFS BED files. In total, 618 492 break-ends were annotated according to whether each was present or absent on the CFS. On average, this took 7.5 min to complete using a single thread on an Ubuntu x86_64 server (Intel Core i7-8700K CPU at 3.70 GHz).</p>
      </sec>
    </sec>
  </sec>
  <sec>
    <title>3 Future works</title>
    <p>Although Viola provides useful functions for SV data manipulation, especially SV signature analysis, further enhancements would make the software more meaningful, covering a wider range of research questions. First, functions for handling more complex SV events, such as chromothripsis and chromoplexy that result from multiple DNA damage occurring in a single event, could be desirable (<xref rid="btab662-B7" ref-type="bibr">Li <italic toggle="yes">et al.</italic>, 2020</xref>; <xref rid="btab662-B13" ref-type="bibr">Stephens <italic toggle="yes">et al.</italic>, 2011</xref>). Such features may lead to the discovery of new SV signatures and the elucidation of the mechanistic basis of SV formation. Second, a more detailed annotation system would facilitate a more specific characterization of each SV event, because the current version of Viola does not support annotation with nucleotide sequence-level analysis, e.g. the frameshift status of affected genes or the impact of putative fusion genes, with the exception of microhomology inference. Such a detailed annotation system would facilitate a more specific characterization of each SV event. Finally, more types of SV callers need to be supported including those for long-read sequencing technology.</p>
  </sec>
  <sec>
    <title>4 Conclusion</title>
    <p>We developed Viola, a tool for SV signature analysis that allows highly customizable SV classification. This tool also overcomes the difficulty of parsing current VCF files as well as the problem of different notations derived from different callers. Viola will help stimulate cancer genome research to better understand the biological significance of SVs.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>btab662_Supplementary_Data</label>
      <media xlink:href="btab662_supplementary_data.zip">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>Acknowledgements</title>
    <p>We thank Enago (<ext-link xlink:href="http://www.enago.jp" ext-link-type="uri">www.enago.jp</ext-link>) for the English language review.</p>
    <sec>
      <title>Funding</title>
      <p>This work was supported by AMED P-CREATE [JP20cm0106551 to S.I.].</p>
      <p><italic toggle="yes">Conflict of interest</italic>: none declared.</p>
    </sec>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="btab662-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cameron</surname><given-names>D.L.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2017</year>) <article-title>GRIDSS: sensitive and specific genomic rearrangement detection using positional de Bruijn graph assembly</article-title>. <source>Genome Res</source>., <volume>27</volume>, <fpage>2050</fpage>–<lpage>2060</lpage>.<pub-id pub-id-type="pmid">29097403</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cameron</surname><given-names>D.L.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2019</year>) <article-title>Comprehensive evaluation and characterisation of short read general-purpose structural variant calling software</article-title>. <source>Nat. Commun</source>., <volume>10</volume>, <fpage>3240</fpage>.<pub-id pub-id-type="pmid">31324872</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B4">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>X.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>1220</fpage>–<lpage>1222</lpage>.<pub-id pub-id-type="pmid">26647377</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kuzniar</surname><given-names>A.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>sv-callers: a highly portable parallel workflow for structural variant detection in whole-genome sequence data</article-title>. <source>PeerJ</source>, <volume>8</volume>, <fpage>e8214</fpage>.<pub-id pub-id-type="pmid">31934500</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Layer</surname><given-names>R.M.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2014</year>) <article-title>LUMPY: a probabilistic framework for structural variant discovery</article-title>. <source>Genome Biol</source>., <volume>15</volume>, <fpage>R84</fpage>.<pub-id pub-id-type="pmid">24970577</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Li</surname><given-names>Y.</given-names></string-name></person-group>  <etal>et al</etal>; PCAWG Consortium (<year>2020</year>) <article-title>Patterns of somatic structural variation in human cancer genomes</article-title>. <source>Nature</source>, <volume>578</volume>, <fpage>112</fpage>–<lpage>121</lpage>.<pub-id pub-id-type="pmid">32025012</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Menghi</surname><given-names>F.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2018</year>) <article-title>The tandem duplicator phenotype is a prevalent genome-wide cancer configuration driven by distinct gene mutations</article-title>. <source>Cancer Cell</source>, <volume>34</volume>, <fpage>197</fpage>–<lpage>210.e5</lpage>.<pub-id pub-id-type="pmid">30017478</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Mills</surname><given-names>R.E.</given-names></string-name></person-group>  <etal>et al</etal>; 1000 Genomes Project (<year>2011</year>) <article-title>Mapping copy number variation by population-scale genome sequencing</article-title>. <source>Nature</source>, <volume>470</volume>, <fpage>59</fpage>–<lpage>65</lpage>.<pub-id pub-id-type="pmid">21293372</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Nik-Zainal</surname><given-names>S.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Landscape of somatic mutations in 560 breast cancer whole-genome sequences</article-title>. <source>Nature</source>, <volume>534</volume>, <fpage>47</fpage>–<lpage>54</lpage>.<pub-id pub-id-type="pmid">27135926</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Popova</surname><given-names>T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2016</year>) <article-title>Ovarian cancers harboring inactivating mutations in CDK12 display a distinct genomic instability pattern characterized by large tandem duplications</article-title>. <source>Cancer Res</source>., <volume>76</volume>, <fpage>1882</fpage>–<lpage>1891</lpage>.<pub-id pub-id-type="pmid">26787835</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rausch</surname><given-names>T.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2012</year>) <article-title>DELLY: structural variant discovery by integrated paired-end and split-read analysis</article-title>. <source>Bioinformatics</source>, <volume>28</volume>, <fpage>i333</fpage>–<lpage>i339</lpage>.<pub-id pub-id-type="pmid">22962449</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Stephens</surname><given-names>P.J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2011</year>) <article-title>Massive genomic rearrangement acquired in a single catastrophic event during cancer development</article-title>. <source>Cell</source>, <volume>144</volume>, <fpage>27</fpage>–<lpage>40</lpage>.<pub-id pub-id-type="pmid">21215367</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Thutkawkorapin</surname><given-names>J.</given-names></string-name></person-group>  <etal>et al</etal> (<year>2020</year>) <article-title>pyCancerSig: subclassifying human cancer with comprehensive single nucleotide, structural and microsatellite mutational signature deconstruction from whole genome sequencing</article-title>. <source>BMC Bioinformatics</source>, <volume>21</volume>, <fpage>128</fpage>.<pub-id pub-id-type="pmid">32245405</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B15">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wickham</surname><given-names>H.</given-names></string-name></person-group> (<year>2014</year>) <article-title>Tidy data</article-title>. <source>J. Stat. Softw</source>., <volume>59</volume>, <fpage>1</fpage>–<lpage>23</lpage>.<pub-id pub-id-type="pmid">26917999</pub-id></mixed-citation>
    </ref>
    <ref id="btab662-B00069546">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yi</surname>,<given-names>K.</given-names>, and </string-name>, <string-name><surname>Ju</surname>,<given-names>Y.S.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Patterns and mechanisms of structural variations in human cancer</article-title>. <source><italic toggle="yes">Exp. Mol. Med.</italic></source>, <volume>50</volume>, <fpage>1</fpage>–<lpage>11</lpage>. <pub-id pub-id-type="doi">10.1038/s12276-018-0112-3</pub-id> 30089796.</mixed-citation>
    </ref>
  </ref-list>
</back>

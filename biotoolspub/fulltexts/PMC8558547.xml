<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8558547</article-id>
    <article-id pub-id-type="publisher-id">4455</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-021-04455-3</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>FASTAFS: file system virtualisation of random access compressed FASTA files</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-2166-0676</contrib-id>
        <name>
          <surname>Hoogstrate</surname>
          <given-names>Youri</given-names>
        </name>
        <address>
          <email>yhoogstrate@erasmusmc.nl</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Jenster</surname>
          <given-names>Guido W.</given-names>
        </name>
        <address>
          <email>g.jenster@erasmusmc.nl</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Werken</surname>
          <given-names>Harmen J. G. van de</given-names>
        </name>
        <address>
          <email>h.vandewerker@erasmusmc.nl</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.5645.2</institution-id><institution-id institution-id-type="ISNI">000000040459992X</institution-id><institution>Department of Neurology, </institution><institution>Erasmus University Medical Center, </institution></institution-wrap>Dr. Molewaterplein 40, 3015 GD Rotterdam, The Netherlands </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.5645.2</institution-id><institution-id institution-id-type="ISNI">000000040459992X</institution-id><institution>Department of Urology, Erasmus MC Cancer Institute, </institution><institution>University Medical Center, </institution></institution-wrap>Rotterdam, The Netherlands </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.5645.2</institution-id><institution-id institution-id-type="ISNI">000000040459992X</institution-id><institution>Cancer Computational Biology Center, Erasmus MC Cancer Institute, </institution><institution>University Medical Center, </institution></institution-wrap>Rotterdam, The Netherlands </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.5645.2</institution-id><institution-id institution-id-type="ISNI">000000040459992X</institution-id><institution>Department of Immunology, Erasmus MC Cancer Institute, </institution><institution>University Medical Center, </institution></institution-wrap>Rotterdam, The Netherlands </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>1</day>
      <month>11</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>1</day>
      <month>11</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2021</year>
    </pub-date>
    <volume>22</volume>
    <elocation-id>535</elocation-id>
    <history>
      <date date-type="received">
        <day>9</day>
        <month>8</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>20</day>
        <month>10</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">The FASTA file format, used to store polymeric sequence data, has become a bioinformatics file standard used for decades. The relatively large files require additional files, beyond the scope of the original format, to identify sequences and to provide random access. Multiple compressors have been developed to archive FASTA files back and forth, but these lack direct access to targeted content or metadata of the archive. Moreover, these solutions are not directly backwards compatible to FASTA files, resulting in limited software integration.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We designed a linux based toolkit that virtualises the content of DNA, RNA and protein FASTA archives into the filesystem by using filesystem in userspace. This guarantees in-sync virtualised metadata files and offers fast random-access decompression using bit encodings plus Zstandard (zstd). The toolkit, FASTAFS, can track all its system-wide running instances, allows file integrity verification and can provide, instantly, scriptable access to sequence files and is easy to use and deploy. The file compression ratios were comparable but not superior to other state of the art archival tools, despite the innovative random access feature implemented in FASTAFS.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">FASTAFS is a user-friendly and easy to deploy backwards compatible generic purpose solution to store and access compressed FASTA files, since it offers file system access to FASTA files as well as in-sync metadata files through file virtualisation. Using virtual filesystems as in-between layer offers format conversion without the need to rewrite code into different programming languages while preserving compatibility.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s12859-021-04455-3.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>FASTA</kwd>
      <kwd>FASTAFS</kwd>
      <kwd>Integrity</kwd>
      <kwd>FUSE</kwd>
      <kwd>Zstd</kwd>
      <kwd>Metadata</kwd>
      <kwd>Random access</kwd>
      <kwd>Virtualisation</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2021</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par12">FASTA is a file format used for storing nucleotide and amino acid polymeric sequences and is compatible with a high variety of bioinformatics software. It is used as database for ribosomal RNA sequences but also for eukaryotic reference genomes and protein databases, that can be several gigabytes in size. In contrast to for example the GenBank format, it offers limited support for metadata. Corresponding supplementary (<italic>fai</italic>-)index files are used to achieve random access by providing the sequence length, padding corrected file positions and padding and line length. This is static information that is embedded in the FASTA file, which is extracted after generating the FASTA file.</p>
    <p id="Par13">Scientific demand for reproducibility and interoperability of both software applications and data is growing strongly and as a result unique identification and data integrity play a critical role. For instance, in the CRAM data format Next Generation Sequencing (NGS) alignments are compressed relative to a reference sequence. In this format, these reference sequences are addressed using their unique identifier for interoperability. With this identifier, the corresponding sequence can be obtained directly using the online European Nucleotide Archive (ENA) service<xref ref-type="fn" rid="Fn1">1</xref>, preserving the intrinsic link between the data file and the reference sequences. Because real-time computation of identifiers can be computationally expensive, they are stored in supplementary dictionary files (*.dict). <italic>Dict-</italic>files are, like <italic>fai-</italic>index files, beyond the scope of the original file format and have to be generated and maintained after obtaining the FASTA file.</p>
    <p id="Par14">Software applications make use of FASTA files as input in two different manners:<list list-type="bullet"><list-item><p id="Par15">First, a tool reads a FASTA file in a <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textit{streaming}}$$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="italic">streaming</mml:mi></mml:math><inline-graphic xlink:href="12859_2021_4455_Article_IEq1.gif"/></alternatives></inline-formula>
<italic>manner</italic>: sequentially and in one-direction, starting with the first character in the file. For example, short-read alignment algorithms but also motif-scanners that iteratively search for a given motif [<xref ref-type="bibr" rid="CR1">1</xref>] across a sequence, read a FASTA file sequentially into the memory before building an index [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR3">3</xref>]. Similarly, Single-Nucleotide Polymorphism (SNP) detectors may iterate sequentially over a FASTA file [<xref ref-type="bibr" rid="CR4">4</xref>].</p></list-item><list-item><p id="Par16">Second, a tool reads a FASTA file in a <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textit{random-access}}$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi mathvariant="italic">random</mml:mi><mml:mo>-</mml:mo><mml:mi mathvariant="italic">access</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4455_Article_IEq2.gif"/></alternatives></inline-formula>
<italic>manner</italic> by starting at an arbitrary location in the file and having the possibility to make jumps through the file, forwards but also backwards. The precise file coordinates are typically calculated using the <italic>fai-</italic>index file. For example, a request to a genomic region within a genome browser is such a random-access request, since a next query can be expected at any genomic location. If underlying FASTA file access does not support jumping through a file, it is necessary to copy a file entirely into memory. This procedure is resource intensive and can slow a process significantly. Bioinformatics tools that rely on random-access in FASTA files are for i.e. JBrowse [<xref ref-type="bibr" rid="CR5">5</xref>], samtools mpileup for VarScan2 [<xref ref-type="bibr" rid="CR6">6</xref>]. But also tools for quick file operations such as SeqKit [<xref ref-type="bibr" rid="CR7">7</xref>], GATK [<xref ref-type="bibr" rid="CR8">8</xref>] and Picard [<xref ref-type="bibr" rid="CR9">9</xref>] rely on random-access, of which the latter two require <italic>dict-</italic>files as well.</p></list-item></list></p>
    <sec id="Sec2">
      <title>Compression</title>
      <p id="Par17">The simplicity of the FASTA format makes it highly convenient to work with. The trade-off is the requirement of the additional <italic>fai-</italic>index and <italic>dict-</italic>files, as well as having a relatively large file size. The large file size issue has been tackled by various compression methods [<xref ref-type="bibr" rid="CR10">10</xref>–<xref ref-type="bibr" rid="CR12">12</xref>]. Although modern compressors achieve high compression ratios, most bioinformatics applications that require FASTA files are only rarely compatible with compressed equivalents. The only exception is occasional compatibility with gzipped FASTA, a generic purpose compressor which is limited to streaming use-cases.</p>
      <p id="Par18">Sequence compression algorithms create a compressed file (archive) yielding the compressed content. To use the original data, the archive needs to be fully decompressed into a temporary FASTA file again, unless the decompression algorithm also provides an Application Programming Interface (API) in the desired programming language. For instance, short read compressor DNA Sequence Reads Compressor 2 (DSRC2) [<xref ref-type="bibr" rid="CR13">13</xref>] provides an API in C, C++ and Python.</p>
      <p id="Par19">The index algorithm of RNA read aligner STAR [<xref ref-type="bibr" rid="CR3">3</xref>] can be provided with the path to any decompression binary as argument and thus offers a generic solution to provide on-demand de-compression. However, implementing a similar solution in other applications would only work for applications with streaming instead of random access to FASTA files. An analogues workaround to avoid file duplication is to make use of (named) pipes [<xref ref-type="bibr" rid="CR10">10</xref>]. A pipe is a virtual, one-directional, data stream, that stays in idle as long as no further data requests come in. This could be the output of a decompressor. This is resource efficient as data access is chunked, but is not a generic solution as it does not offer random access. Access to FASTA archives in a random-access use case requires an available compression API that supports random access explicitly. If these conditions are not met, the primary goal of compression is then in practice lost.</p>
      <p id="Par20">Currently available bioinformatics applications that make use of FASTA files in a random-access setting mostly support only FASTA files and no compressed equivalents. Therefore, it is in practice necessary to keep a flat copy of a FASTA file with the corresponding the <italic>fai-</italic>index file. For systems limited to applications with streaming access to FASTA files, a decompression binary in combination with (named) pipes is an ideal way to use FASTA archives, although it requires management of metadata files. Instead of (de)compressing through the classical back and forths file compression binaries, we can also make use of file virtualisation. In this context, file virtualization functions as layer between a compressed archive and the virtually mounted FASTA plus metadata files, which offers multiple advantages over classical (de-)compression binaries<list list-type="bullet"><list-item><p id="Par21">Virtual files and their system calls are identical to flat file system calls. For command line tools that are only compatible with FASTA files, such as samtools view -T, this preserves backwards compatibility, also for random access use-cases.</p></list-item><list-item><p id="Par22">There is no need to use additional disk space for temporary decompression and no need to read entire FASTA files into memory.</p></list-item><list-item><p id="Par23">For random access requests, computational resources are only spent on decompressing the region of interest.</p></list-item><list-item><p id="Par24">Implementations of compression and decompression in other programming languages or within other software applications are not needed, as it is backwards compatible with flat FASTA files.</p></list-item><list-item><p id="Par25">The archive is guaranteed to provide <italic>dict-</italic> and <italic>fai-</italic>index files that are in sync with their FASTA file of origin. This makes additional management of these metadata files unnecessary.</p></list-item></list>Making use of virtualization as layer between archive and decompressed content is a generic purpose solution since it provides file access to both streaming and random access. Here, we propose FASTAFS, a file archival format and toolkit that allows file integrity verification and provides unique sequence identifiers by using file virtualization. In addition, it virtualises FASTA and guaranteed in-sync <italic>dict-</italic> and <italic>fai-</italic>index files, from Zstd compressed 2-, 4- or 5-bit encodings.</p>
    </sec>
  </sec>
  <sec id="Sec3">
    <title>Implementation</title>
    <p id="Par26">FASTA File System (FASTAFS) file format consists of four blocks: (1) File Header (2) Per-Sequence-Data (3) Per-Sequence-Header and (4) File Metadata, to efficiently store sequence and metadata (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). During conversion, the metadata flag sets the archives status to incomplete. Each block of compressed sequence data is followed by the CRAM format and BAM specification compatible MD5 checksum [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>]. In the last phase of file conversion, file pointers are put in place and the metadata flag is updated to mark the archives conversion status to complete. The file ends with the CRC32 checksum used for whole file integrity verification.<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of the FASTAFS file format specification. (top) A flowchart of the fastafs cache procedure. (bottom) The layout of the FASTAFS format consists of four blocks, starting with the file header, followed by the per-sequence data, the per-sequence header data and a metadata block. The file header has a file pointer to the per-sequence header block, where each sequence has a file pointer to its data. The file ends with a metadata block, currently supporting a CRC32 checksum. The raw FASTAFS file is subsequently compressed with zstd-seekable. The full specification is available on the website: <ext-link ext-link-type="uri" xlink:href="https://github.com/yhoogstrate/fastafs/blob/master/doc/FASTAFS-FORMAT-SPECIFICATION.md">https://github.com/yhoogstrate/fastafs/blob/master/doc/FASTAFS-FORMAT-SPECIFICATION.md</ext-link></p></caption><graphic xlink:href="12859_2021_4455_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par27">Sequence compressor Nucleotide Archival Format (NAF) [<xref ref-type="bibr" rid="CR10">10</xref>] compresses sequence data first with a 4-bit encoding followed by generic compressor Zstandard (zstd), but lacks random access. Given that NAF achieves high compression ratios [<xref ref-type="bibr" rid="CR10">10</xref>], FASTAFS was designed in a similar fashion. It first compresses sequence data to a lower bit encoding, followed by the random-access implementation of zstd (zstd-seekable). When a sequence consists of AC[T|U]GN, it is stored in a 2-bit encoding, when it follows the IUPAC DNA/RNA dictionary, it is stored in a 4-bit encoding and when it is a protein sequence it is stored in a 5-bit encoding (Fig. <xref rid="Fig1" ref-type="fig">1</xref>).</p>
    <sec id="Sec4">
      <title>Toolkit</title>
      <p id="Par28">The Linux based FATSTAFS toolkit is a single executable (fastafs) with different subcommands. The package comes also with an executable ‘mount.fastafs’ to mount through the /etc/fstab table.</p>
      <p id="Par29"><bold>Cache: </bold> FASTA files can be converted to a FASTFS archive using the ‘fastafs cache’ subcommand (Fig. <xref rid="Fig1" ref-type="fig">1</xref>), which adds a reference to the FASTAFS file into a config-file (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1A).</p>
      <p id="Par30"><bold>Mount: </bold> The ‘fastafs mount’ subcommand is used to mount a FASTAFS archive to a directory (mount point) to virtualise the FASTA, <italic>fai-</italic>index, <italic>dict-</italic> and UCSC TwoBit files (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1A). All files are mounted read-only which guarantees persistency with the identifiers. Mount points can be configured in /etc/fstab which requires using the binary ‘mount.fastafs’ instead of the binary ‘fastafs’. These entries can be configured to automatically mount during boot. Upon a file request, the kernel requests, through the Filesystem in Userspace (FUSE), the FASTAFS toolkit to provide either file attributes such a timestamps, size or permissions, or to copy real-time decompressed file content into a buffer.</p>
      <p id="Par31">In addition, FASTAFS provides filesystem access to query partial sequences using a subsequence identifier as filename in the ‘seq’ subdirectory. For example, the file &lt;mountpoint&gt;/seq/chr1:10-20 contains only the 10th up to the 20th nucleotide of chr1, without additional characters such as newlines or spaces. Subsequently, requesting the file size of &lt;mount point&gt;/seq/chr1 will provide its size in nucleotides. Indeed, these additional features do not solve backwards compatibility issues, but do provide virtualised random access by functioning as programming language independent API implemented at filesystem level.</p>
      <p id="Par32"><bold>List: </bold> The ‘fastafs list’ command gives an overview of the FASTAFS archives, their alias, number of sequences, format, compression ratio and all active mount points (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1A).</p>
      <p id="Par33"><bold>View: </bold> Besides mounting, the FASTA contents can be decompressed to <italic>stdout</italic> using ‘fastafs view’, of which the padding can be set to a desired value and masking can be virtually disabled. If the archive contains only DNA sequences, the contents can also be exported to the UCSC TwoBit format (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1B).</p>
      <p id="Par34"><bold>Info: </bold> The ‘fastafs info’ subcommand gives information about the file layout, sequence size, the per-sequence MD5 checksum and used compression type. This subcommand can also be used to query European Nucleotide Archive (ENA) [<xref ref-type="bibr" rid="CR16">16</xref>] whether the existence of a sequence MD5 checksum can be verified (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1C).</p>
      <p id="Par35"><bold>Check: </bold> The ‘fastafs check’ command checks the file integrity using a CRC32 checksum. Integrity of compressed sequence data blocks can be checked separately using their MD5 checksums with the ‘--﻿md5’ argument (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1D).</p>
      <p id="Par36"><bold>ps: </bold> A list of active FASTAFS mount points and their processes is provided by the ‘fastafs ps’ subcommand. The mount point has an extended file attribute (<italic>xattr</italic>) named ‘<italic>FASTAFS-file</italic>’ that returns the path to the mounted FASTAFS archive. When a FASTAFS file is mounted to multiple mount points, they are each listed as separate entry with the corresponding system process id (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1E).</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Results</title>
    <p id="Par37">FASTAFS format specification, toolkit and GPL-2.0 licensed C<inline-formula id="IEq5"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$++$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo>+</mml:mo><mml:mo>+</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2021_4455_Article_IEq5.gif"/></alternatives></inline-formula> code are available at: <ext-link ext-link-type="uri" xlink:href="https://github.com/yhoogstrate/fastafs">https://github.com/yhoogstrate/fastafs</ext-link></p>
    <p id="Par38">We compared the compression ratios of NAF, bgzip and MFCompress with FASTAFS (Fig. <xref rid="Fig2" ref-type="fig">2</xref>). We then assessed the consumption of the relative number of CPU instructions needed to access the end, thus the suffix, of a virtualised FASTA file. This showed that the number of CPU instructions scaled linearly and proportionally to the suffix size (Fig. <xref rid="Fig3" ref-type="fig">3</xref>).<fig id="Fig2"><label>Fig. 2</label><caption><p>Overview of different archive files sizes. Comparison of compression ratios of a diverse set of FASTA files compressed with bgzip, MFCompress, NAF and FASTAFS. The bar height represents the percentage of the archives file size compared with the original FASTA files size. The translucent bars on top of the coloured bars represent the corrected file size needed to store 16 additional bytes per-sequence reserved for storing MD5 checksums. We used genome references from fungi (CM002240), human with and without alternate loci (GRCh38.p13 and GRCh38.primary_asm), DNA (Coliphage phi-X174: NC_001422) and RNA viruses (SARS-CoV-2: NC_045512.2), databases with small RNAs (miRbase and tRNAs), Silva rRNA databases [<xref ref-type="bibr" rid="CR17">17</xref>] and uniprot [<xref ref-type="bibr" rid="CR18">18</xref>] for protein sequences</p></caption><graphic xlink:href="12859_2021_4455_Fig2_HTML" id="MO2"/></fig><fig id="Fig3"><label>Fig. 3</label><caption><p>CPU consumption reading suffixes of the FASTA file. The x-axis shows the size of a requested suffix (tail-c) of GRCh38.p12.fasta virtualised with FASTAFS, piped through to /dev/null. The y-axis shows the number of CPU instructions by fastafs mount to virtualise the suffix of GRCh38.p12.fasta, as termined with perf stat. The number of CPU instructions needed to read the FASTA suffix through FASTAFS scales linearly and proportionally with the suffix size</p></caption><graphic xlink:href="12859_2021_4455_Fig3_HTML" id="MO3"/></fig></p>
  </sec>
  <sec id="Sec6">
    <title>Discussion</title>
    <p id="Par39">FASTAFS compression ratios for FASTA files with relatively few sequences (human reference genome: GRCh38, SARS-CoV-2 genome primary assembly (RNA): NC_045512.2, Coliphage phi-X174, complete genome NC_001422, fungus Neurospora crassa genome reference: CM002240) were comparable to the compression ratios of NAF and MFCompress but were overall not superior. For sequences with relatively high numbers of sequences (miRNA, tRNA or protein databases), compression ratios of FASTAFS files were typically smaller than the other compressors, in particular for miRbase [<xref ref-type="bibr" rid="CR19">19</xref>]. These files are composed of small sequences which result in a substantial contribution of the sequence names and MD5 checksums to the total archive file size. When the size of the archives is corrected with the space needed to store the MD5 checksums (16 bytes per entry), the FASTAFS compression ratios are again comparable to those of MFCompress and NAF. Except for protein sequence compression, the most commonly used FASTA compression method, gzip, has consistently lower compression ratios than all other compressors.</p>
    <p id="Par40">Obtaining both the FASTA followed by the <italic>fai-</italic>index starting from a NAF archive took more CPU instructions than virtual access through FASTAFS (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2). Moreover, classical decompression through a single conversion binary is not linearly scalable and requires the whole decompressed file to be written to disk. Although this is not the use-case for which these tools were developed and therefore maybe not represent the best comparison, these are features that provide high usability.</p>
    <p id="Par41">Ideally, new bioinformatics analysis projects are started with a new folder that is under version control. This will allow the researcher to integrate FASTAFS with workflow management systems such as Snakemake [<xref ref-type="bibr" rid="CR20">20</xref>] or Nextflow [<xref ref-type="bibr" rid="CR21">21</xref>] as well as software dependencies by including dependency management configurations. Ultimately, this makes a project portable as it allows users to distribute projects over multiple locations, share it with other researchers and roll back to previous versions. Currently, version control for plain FASTA files is inconvenient and redundancy across multiple projects will occur quickly. However, by integrating FASTAFS mount points and scripts into a workflow management system FASTA files can be integrated intuitively into a projects’ version control.</p>
    <p id="Par42">FASTAFS archives are currently compressed with a 2-bit, 4-bit or 5-bit encoding, followed by zstd-seekable, resulting in comparable compression ratios to other known compressors. Indeed, as may be expected from compression supporting random access which also need to store their index indexes, FASTAFS compression ratios were not superior in all cases examined. However, differences in compression ratios were consistently close to other dedicated compressors and always outperformed commonly used gzip, while offering all the FASTAFS advantages has.</p>
    <p id="Par43">FASTFS currently works with per-file aliases and CRAM compatible per-sequence identifiers. It would be more convenient to integrate FASTA files into workflow managers by using persistent per-file identifiers combined with a mechanism for decentralised synchronization of archives. As such additional features would be helpful, defining a system for per-file identifiers and development of decentralised file synchronization prompts future work. Overall, FASTFS is a modern and highly elegant software solution for a user-friendly and easy to deploy generic purpose solution to store and access to compressed FASTA files.</p>
    <p id="Par44">Multiple system processes can, in parallel, request data from the same FASTSAFS mount point. The current implementation is single-threaded per filehandle, but thread-safe. Thread safety is required because the Linux kernel is not guaranteed to request data sequentially during sequential reads. These non-sequential data requests will make optimization of FASTAFS for multi-threading more complicated, but will be a logical and important next step.</p>
  </sec>
  <sec id="Sec7">
    <title>Conclusions</title>
    <p id="Par45">The FASTA file format is used to store biological polymeric sequence data in an easy-to-use format that has become a file standard in bioinformatics. Static information is embedded within each file, but needs to be extracted and stored in additional files to complement the FASTA file. Previous methods have specifically focused on the most efficient compression possible, but not on backwards compatibility, interoperability, random access and inclusion of (static) metadata. This is the most probable explanation why gzip, a generic purpose compression method that is suboptimal for this data type, is the most common integrated archive type in bioinformatics applications that use FASTA as input.</p>
    <p id="Par46">To address this, we developed FASTAFS, a toolkit to virtualise FASTA archives along with their metadata files into the file system. The implementation makes use of the zstd-seekable compression library, which makes random access to the virtual FASTA files possible. FASTAFS comes with a feature rich toolkit that can manage the archives, their locations, their file integrity and provides file access in a backwards compatible manner to regular FASTA file access. This allows the archives to be used with existing software, such as samtools (Fig. <xref rid="Fig4" ref-type="fig">4</xref>), without the need for adaptation for compatibility or without requiring the presence of APIs or without requiring to fully decompress data to disk before accessing it. FASTAFS is a modern, versatile and elegant solution for storage of sequence data that is therefore easy to use, and can optionally be extended with other related file formats.<fig id="Fig4"><label>Fig. 4</label><caption><p>Screenshot showing compatibility with ’samtools view’ for CRAM files. The right panel shows an active fastafs mount process with debug messages enabled, mounting the hg19 FASTAFS archive to ./mnt_hg19. The left panel shows three samtools operations: Command 1 shows the original SAM-file. Command 2 runs the samtools conversion from SAM to CRAM, requiring the mounted FASTA file by the mount process (right panel). Command 3 shows the contents of the CRAM file. The CRAM file lacks actual sequence data, which samtools needs to extract from the FASTA file mounted in the right panel. The FASTAFS mount process (right) shows that samtools has requested access to both ./mnt_hg19/hg19.fa and ./mnt_hg19/hg19.fa.fai</p></caption><graphic xlink:href="12859_2021_4455_Fig4_HTML" id="MO4"/></fig></p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec8">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2021_4455_MOESM1_ESM.docx">
            <caption>
              <p><bold>Additional file 1</bold>. Supplementary Figures.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>API</term>
        <def>
          <p id="Par4">Application programming interface</p>
        </def>
      </def-item>
      <def-item>
        <term>DSRC2</term>
        <def>
          <p id="Par5">DNA sequence reads compressor 2</p>
        </def>
      </def-item>
      <def-item>
        <term>ENA</term>
        <def>
          <p id="Par6">European nucleotide archive</p>
        </def>
      </def-item>
      <def-item>
        <term>FUSE</term>
        <def>
          <p id="Par7">Filesystem in userspace</p>
        </def>
      </def-item>
      <def-item>
        <term>NAF</term>
        <def>
          <p id="Par8">Nucleotide archival format</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par9">Next generation sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>SNP</term>
        <def>
          <p id="Par10">Single-nucleotide polymorphism</p>
        </def>
      </def-item>
      <def-item>
        <term>Zstd</term>
        <def>
          <p id="Par11">Zstandard</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn id="Fn1">
      <label>1</label>
      <p id="Par52"><ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ena/cram/swagger-ui.html">https://www.ebi.ac.uk/ena/cram/swagger-ui.html</ext-link>.</p>
    </fn>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We would like to thank Job van Riet for valuable scientific discussions regarding this work.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>YH designed and implemented the project, HW and GJ provided feedback and assisted in writing. All authors (YH, GJ and HW) have fully read and approved all submitted revisions of the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>None to declare.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p><bold>FASTAFS:</bold><bold>Project name:</bold> fastafs;</p>
    <p><bold>Project home page:</bold><ext-link ext-link-type="uri" xlink:href="https://github.com/yhoogstrate/fastafs">https://github.com/yhoogstrate/fastafs</ext-link>;</p>
    <p><bold>Operating system(s):</bold> POSIX compliant;</p>
    <p><bold>Programming language:</bold> C++-14;</p>
    <p><bold>Other requirements:</bold> cmake, C++-14 compatible compiler, libzstd, libopenssl, libcrypto, zlib and libboost (for unit testing);</p>
    <p><bold>License:</bold> GNU GPL-2.0;</p>
    <p><bold>Any restrictions to use by non-academics:</bold> terms stated in GNU GPL-2.0</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar2">
      <title>Ethics approval and consent to participate</title>
      <p id="Par47">Not Applicable</p>
    </notes>
    <notes id="FPar3">
      <title>Consent for publication</title>
      <p id="Par48">Not Applicable</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par49">The authors declare that they have no competing interests.</p>
    </notes>
    <notes id="FPar6">
      <title>Sequences</title>
      <p id="Par50">All sequences used were obtained from free public resources: <bold>CM002240:</bold>
<ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ena/browser/view/CM002240">https://www.ebi.ac.uk/ena/browser/view/CM002240</ext-link>; <bold>hg19.fa:</bold>
<ext-link ext-link-type="uri" xlink:href="http://hgdownload.cse.ucsc.edu/goldenpath/hg19/bigZips/hg19.fa.gz">http://hgdownload.cse.ucsc.edu/goldenpath/hg19/bigZips/hg19.fa.gz</ext-link>; <bold>GRCh38.p12:</bold>
<ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/GRCh38.p12.genome.fa.gz">http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_28/GRCh38.p12.genome.fa.gz</ext-link>; <bold>GRCh38.p13:</bold>
<ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.p13.genome.fa.gz">http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.p13.genome.fa.gz</ext-link>; <bold>GRCh38.primary</bold>_<bold>asm:</bold>
<ext-link ext-link-type="uri" xlink:href="http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.primary_assembly.genome.fa.gz">http://ftp.ebi.ac.uk/pub/databases/gencode/Gencode_human/release_38/GRCh38.primary_assembly.genome.fa.gz</ext-link>; <bold>NC</bold>_<bold>001422:</bold>
<ext-link ext-link-type="uri" xlink:href="ftp://ftp.ncbi.nlm.nih.gov/genomes/Viruses/enterobacteria_phage_phix174_sensu_lato_uid14015/NC_001422.fna">ftp://ftp.ncbi.nlm.nih.gov/genomes/Viruses/enterobacteria_phage_phix174_sensu_lato_uid14015/NC_001422.fna</ext-link>; <bold>NC</bold>_<bold>045512.2:</bold>
<ext-link ext-link-type="uri" xlink:href="https://github.com/PoonLab/covizu/blob/master/covizu/data/NC_045512.fa">https://github.com/PoonLab/covizu/blob/master/covizu/data/NC_045512.fa</ext-link>; <bold>miRBase 22.1 hairpin:</bold>
<ext-link ext-link-type="uri" xlink:href="ftp://mirbase.org/pub/mirbase/CURRENT/hairpin.fa.gz">ftp://mirbase.org/pub/mirbase/CURRENT/hairpin.fa.gz</ext-link>; <bold>sacCer3-mature-tRNAs:</bold>
<ext-link ext-link-type="uri" xlink:href="http://gtrnadb.ucsc.edu/genomes/eukaryota/Scere3/sacCer3-mature-tRNAs.fa">http://gtrnadb.ucsc.edu/genomes/eukaryota/Scere3/sacCer3-mature-tRNAs.fa</ext-link>; <bold>SILVA</bold>_<bold>138</bold>_<bold>SSURef:</bold>
<ext-link ext-link-type="uri" xlink:href="https://www.arb-silva.de/no_cache/download/archive/release_138/Exports/">https://www.arb-silva.de/no_cache/download/archive/release_138/Exports/</ext-link>; <bold>silva-bac-16s-1d90:</bold>
<ext-link ext-link-type="uri" xlink:href="https://raw.githubusercontent.com/biocore/sortmerna/v4.2.0/data/rRNA_databases/silva-bac-16s-id90.fasta">https://raw.githubusercontent.com/biocore/sortmerna/v4.2.0/data/rRNA_databases/silva-bac-16s-id90.fasta</ext-link>; <bold>silva-euk-28s-id98:</bold>
<ext-link ext-link-type="uri" xlink:href="https://raw.githubusercontent.com/biocore/sortmerna/v4.2.0/data/rRNA_databases/silva-euk-28s-id98.fasta">https://raw.githubusercontent.com/biocore/sortmerna/v4.2.0/data/rRNA_databases/silva-euk-28s-id98.fasta</ext-link>; <bold>uniprot</bold>_<bold>sprot:</bold>
<ext-link ext-link-type="uri" xlink:href="https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz">https://ftp.uniprot.org/pub/databases/uniprot/current_release/knowledgebase/complete/uniprot_sprot.fasta.gz</ext-link>;</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heinz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Benner</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Spann</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Bertolino</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>YC</given-names>
          </name>
          <name>
            <surname>Laslo</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cheng</surname>
            <given-names>JX</given-names>
          </name>
          <name>
            <surname>Murre</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Singh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Glass</surname>
            <given-names>CK</given-names>
          </name>
        </person-group>
        <article-title>Simple combinations of lineage-determining transcription factors prime cis-regulatory elements required for macrophage and b cell identities</article-title>
        <source>Mol. Cell</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>4</issue>
        <fpage>576</fpage>
        <lpage>89</lpage>
        <pub-id pub-id-type="doi">10.1016/j.molcel.2010.05.004</pub-id>
        <?supplied-pmid 20513432?>
        <pub-id pub-id-type="pmid">20513432</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kopylova</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Noé</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Touzet</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>SortMeRNA: fast and accurate filtering of ribosomal RNAs in metatranscriptomic data</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <issue>24</issue>
        <fpage>3211</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts611</pub-id>
        <?supplied-pmid 23071270?>
        <pub-id pub-id-type="pmid">23071270</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dobin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Schlesinger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Drenkow</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Zaleski</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Jha</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Batut</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Chaisson</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Gingeras</surname>
            <given-names>TR</given-names>
          </name>
        </person-group>
        <article-title>STAR: ultrafast universal RNA-seq aligner</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>29</volume>
        <issue>1</issue>
        <fpage>15</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts635</pub-id>
        <?supplied-pmid 23104886?>
        <pub-id pub-id-type="pmid">23104886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liao</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Smyth</surname>
            <given-names>GK</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>The Subread aligner: fast, accurate and scalable read mapping by seed-and-vote</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>10</issue>
        <fpage>108</fpage>
        <lpage>108</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkt214</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Buels</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yao</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Diesh</surname>
            <given-names>CM</given-names>
          </name>
          <name>
            <surname>Hayes</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Munoz-Torres</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Helt</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Goodstein</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Elsik</surname>
            <given-names>CG</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>SE</given-names>
          </name>
          <name>
            <surname>Stein</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Holmes</surname>
            <given-names>IH</given-names>
          </name>
        </person-group>
        <article-title>Jbrowse: a dynamic web platform for genome visualization and analysis</article-title>
        <source>Genome Biol</source>
        <year>2016</year>
        <volume>17</volume>
        <issue>1</issue>
        <fpage>66</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-016-0924-1</pub-id>
        <?supplied-pmid 27072794?>
        <pub-id pub-id-type="pmid">27072794</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koboldt</surname>
            <given-names>DC</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Q</given-names>
          </name>
          <name>
            <surname>Larson</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Shen</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>McLellan</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Lin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Mardis</surname>
            <given-names>ER</given-names>
          </name>
          <name>
            <surname>Ding</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>RK</given-names>
          </name>
        </person-group>
        <article-title>Varscan 2: somatic mutation and copy number alteration discovery in cancer by exome sequencing</article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>22</volume>
        <issue>3</issue>
        <fpage>568</fpage>
        <lpage>76</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.129684.111</pub-id>
        <?supplied-pmid 22300766?>
        <pub-id pub-id-type="pmid">22300766</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Le</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Hu</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>Seqkit: a cross-platform and ultrafast toolkit for fasta/q file manipulation</article-title>
        <source>PloS One</source>
        <year>2016</year>
        <volume>11</volume>
        <issue>10</issue>
        <fpage>0163962</fpage>
        <lpage>0163962</lpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0163962</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McKenna</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hanna</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Banks</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Sivachenko</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Cibulskis</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kernytsky</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Garimella</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Altshuler</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gabriel</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Daly</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
        </person-group>
        <article-title>The genome analysis toolkit: a mapreduce framework for analyzing next-generation dna sequencing data</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <issue>9</issue>
        <fpage>1297</fpage>
        <lpage>1303</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.107524.110</pub-id>
        <?supplied-pmid 20644199?>
        <pub-id pub-id-type="pmid">20644199</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Picard toolkit. Broad Institute (2019). <ext-link ext-link-type="uri" xlink:href="https://broadinstitute.github.io/picard">https://broadinstitute.github.io/picard</ext-link></mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kryukov</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Ueda</surname>
            <given-names>MT</given-names>
          </name>
          <name>
            <surname>Nakagawa</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Imanishi</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Nucleotide archival format (NAF) enables efficient lossless reference-free compression of DNA sequences</article-title>
        <source>Bioinformatics</source>
        <year>2019</year>
        <volume>35</volume>
        <issue>19</issue>
        <fpage>3826</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btz144</pub-id>
        <?supplied-pmid 30799504?>
        <pub-id pub-id-type="pmid">30799504</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pinho</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Pratas</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>MFCompress: a compression tool for FASTA and multi-FASTA data</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>30</volume>
        <issue>1</issue>
        <fpage>117</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt594</pub-id>
        <?supplied-pmid 24132931?>
        <pub-id pub-id-type="pmid">24132931</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rajarajeswari</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Apparao</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Dnabit compress-genome compression algorithm</article-title>
        <source>Bioinformation</source>
        <year>2011</year>
        <volume>5</volume>
        <issue>8</issue>
        <fpage>350</fpage>
        <lpage>360</lpage>
        <pub-id pub-id-type="doi">10.6026/97320630005350</pub-id>
        <?supplied-pmid 21383923?>
        <pub-id pub-id-type="pmid">21383923</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roguski</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Deorowicz</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>DSRC 2-industry-oriented compression of FASTQ files</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <issue>15</issue>
        <fpage>2213</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu208</pub-id>
        <?supplied-pmid 24747219?>
        <pub-id pub-id-type="pmid">24747219</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Samtools Organisation: CRAM format specification (version 3.0: 2fcaab6). <ext-link ext-link-type="uri" xlink:href="https://samtools.github.io/hts-specs/CRAMv3.pdf">https://samtools.github.io/hts-specs/CRAMv3.pdf</ext-link> (2019)</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">The SAM/BAM format specification working group: sequence alignment/map format specification (version 1.6: f2a6b99). 2019. <ext-link ext-link-type="uri" xlink:href="https://samtools.github.io/hts-specs/SAMv1.pdf">https://samtools.github.io/hts-specs/SAMv1.pdf</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">European Bioinformatics Institute: CRAM reference registry. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/ena/cram">https://www.ebi.ac.uk/ena/cram</ext-link> (2019)</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Quast</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pruesse</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Yilmaz</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Gerken</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schweer</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Yarza</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Peplies</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Glöckner</surname>
            <given-names>FO</given-names>
          </name>
        </person-group>
        <article-title>The SILVA ribosomal RNA gene database project: improved data processing and web-based tools</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <issue>D1</issue>
        <fpage>590</fpage>
        <lpage>596</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1219</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Apweiler</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Bairoch</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Wu</surname>
            <given-names>CH</given-names>
          </name>
          <name>
            <surname>Barker</surname>
            <given-names>WC</given-names>
          </name>
          <name>
            <surname>Boeckmann</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Ferro</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Gasteiger</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Lopez</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Magrane</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Martin</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>Natale</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>ODonovan</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Redaschi</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Yeh</surname>
            <given-names>LSL</given-names>
          </name>
        </person-group>
        <article-title>UniProt: the universal protein knowledgebase</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2004</year>
        <volume>8</volume>
        <fpage>9</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky092</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kozomara</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Birgaoanu</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Griffiths-Jones</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>mirbase: from microrna sequences to function</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2018</year>
        <volume>47</volume>
        <issue>D1</issue>
        <fpage>155</fpage>
        <lpage>62</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gky1141</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Köster</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Rahmann</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Snakemake—a scalable bioinformatics workflow engine</article-title>
        <source>Bioinformatics</source>
        <year>2018</year>
        <volume>34</volume>
        <issue>20</issue>
        <fpage>3600</fpage>
        <lpage>3600</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bty350</pub-id>
        <?supplied-pmid 29788404?>
        <pub-id pub-id-type="pmid">29788404</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Di Tommaso</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Chatzou</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Floden</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Barja</surname>
            <given-names>PP</given-names>
          </name>
          <name>
            <surname>Palumbo</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Notredame</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Nextflow enables reproducible computational workflows</article-title>
        <source>Nat Biotechnol</source>
        <year>2017</year>
        <volume>35</volume>
        <issue>4</issue>
        <fpage>316</fpage>
        <lpage>319</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.3820</pub-id>
        <?supplied-pmid 28398311?>
        <pub-id pub-id-type="pmid">28398311</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

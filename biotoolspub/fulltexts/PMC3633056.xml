<?DTDIdentifier.IdentifierValue article.dtd?>
<?DTDIdentifier.IdentifierType system?>
<?SourceDTD.DTDName article.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName bmc2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">3633056</article-id>
    <article-id pub-id-type="publisher-id">1471-2105-14-S7-S6</article-id>
    <article-id pub-id-type="doi">10.1186/1471-2105-14-S7-S6</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GAM-NGS: genomic assemblies merger for next generation sequencing</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" id="A1">
        <name>
          <surname>Vicedomini</surname>
          <given-names>Riccardo</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>rvicedomini@appliedgenomics.org</email>
      </contrib>
      <contrib contrib-type="author" id="A2">
        <name>
          <surname>Vezzi</surname>
          <given-names>Francesco</given-names>
        </name>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>francesco.vezzi@scilifelab.se</email>
      </contrib>
      <contrib contrib-type="author" id="A3">
        <name>
          <surname>Scalabrin</surname>
          <given-names>Simone</given-names>
        </name>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>scalabrin@appliedgenomics.org</email>
      </contrib>
      <contrib contrib-type="author" id="A4">
        <name>
          <surname>Arvestad</surname>
          <given-names>Lars</given-names>
        </name>
        <xref ref-type="aff" rid="I4">4</xref>
        <xref ref-type="aff" rid="I3">3</xref>
        <email>lars.arvestad@scilifelab.se</email>
      </contrib>
      <contrib contrib-type="author" id="A5">
        <name>
          <surname>Policriti</surname>
          <given-names>Alberto</given-names>
        </name>
        <xref ref-type="aff" rid="I1">1</xref>
        <xref ref-type="aff" rid="I2">2</xref>
        <email>policriti@appliedgenomics.org</email>
      </contrib>
    </contrib-group>
    <aff id="I1"><label>1</label>Department of Mathematics and Computer Science, University of Udine, 33100 Udine, Italy</aff>
    <aff id="I2"><label>2</label>IGA, Institute of Applied Genomics, 33100 Udine, Italy</aff>
    <aff id="I3"><label>3</label>KTH Royal Institute of Technology, Science for Life Laboratory, School of Computer Science and Communication, 17121 Solna, Sweden</aff>
    <aff id="I4"><label>4</label>Swedish e-Science Research Centre, Dept. of Computer Science and Numerical Analysis, Stockholm University, 17121 Solna, Sweden</aff>
    <pub-date pub-type="collection">
      <year>2013</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>22</day>
      <month>4</month>
      <year>2013</year>
    </pub-date>
    <volume>14</volume>
    <issue>Suppl 7</issue>
    <supplement>
      <named-content content-type="supplement-title">Italian Society of Bioinformatics (BITS): Annual Meeting 2012 </named-content>
      <named-content content-type="supplement-editor">Carmela Gissi and Manuela Helmer-Citterich</named-content>
      <named-content content-type="supplement-sponsor">Publication of this supplement was funded by the authors</named-content>
    </supplement>
    <fpage>S6</fpage>
    <lpage>S6</lpage>
    <permissions>
      <copyright-statement>Copyright Â© 2013 Vicedomini et al.; licensee BioMed Central Ltd.</copyright-statement>
      <copyright-year>2013</copyright-year>
      <copyright-holder>Vicedomini et al.; licensee BioMed Central Ltd.</copyright-holder>
      <license license-type="open-access" xlink:href="http://creativecommons.org/licenses/by/2.0">
        <license-p>This is an open access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/2.0">http://creativecommons.org/licenses/by/2.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="http://www.biomedcentral.com/1471-2105/14/S7/S6"/>
    <abstract>
      <sec>
        <title>Background</title>
        <p>In recent years more than 20 assemblers have been proposed to tackle the hard task of assembling NGS data. A common heuristic when assembling a genome is to use several assemblers and then select the best assembly according to some criteria. However, recent results clearly show that some assemblers lead to better statistics than others on specific regions but are outperformed on other regions or on different evaluation measures. To limit these problems we developed GAM-NGS (Genomic Assemblies Merger for Next Generation Sequencing), whose primary goal is to merge two or more assemblies in order to enhance contiguity and correctness of both. GAM-NGS does not rely on global alignment: regions of the two assemblies representing the same genomic <italic>locus </italic>(called <italic>blocks</italic>) are identified through reads' alignments and stored in a <italic>weighted </italic>graph. The merging phase is carried out with the help of this weighted graph that allows an <italic>optimal </italic>resolution of <italic>local </italic>problematic regions.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>GAM-NGS has been tested on six different datasets and compared to other assembly reconciliation tools. The availability of a reference sequence for three of them allowed us to show how GAM-NGS is a tool able to output an improved reliable set of sequences. GAM-NGS is also a very efficient tool able to merge assemblies using substantially less computational resources than comparable tools. In order to achieve such goals, GAM-NGS avoids global alignment between contigs, making its strategy unique among other <italic>assembly reconciliation </italic>tools.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>The difficulty to obtain correct and reliable assemblies using a single assembler is forcing the introduction of new algorithms able to enhance <italic>de novo </italic>assemblies. GAM-NGS is a tool able to merge two or more assemblies in order to improve contiguity and correctness. It can be used on all NGS-based assembly projects and it shows its full potential with multi-library Illumina-based projects. With more than 20 available assemblers it is hard to select the best tool. In this context we propose a tool that improves assemblies (and, as a by-product, perhaps even assemblers) by merging them and selecting the generating that is most likely to be correct.</p>
      </sec>
    </abstract>
    <conference>
      <conf-date>2-4 May 2012</conf-date>
      <conf-name>Ninth Annual Meeting of the Italian Society of Bioinformatics (BITS)</conf-name>
      <conf-loc>Catania, Sicily</conf-loc>
    </conference>
  </article-meta>
</front>
<body>
  <sec>
    <title>Background</title>
    <p>The advent of Next Generation Sequencing (NGS) technologies made possible to sequence virtually all the organisms of the biosphere [<xref ref-type="bibr" rid="B1">1</xref>]. NGS technologies are characterized by extremely high data production which makes it affordable to obtain high coverage of any organism.</p>
    <p>The ability to produce high sequence coverage for lots of genomes paved the way to a large number of <italic>de novo </italic>assembly projects [<xref ref-type="bibr" rid="B2">2</xref>,<xref ref-type="bibr" rid="B3">3</xref>]. Despite this, it is now commonly accepted that <italic>de novo </italic>assembly with short reads is more difficult than <italic>de novo </italic>assembly with long Sanger reads [<xref ref-type="bibr" rid="B4">4</xref>]. Short read length and reduced insert size made correct assembling and positioning of repeats a very crucial and delicate issue. Even though some papers presented high quality assemblies based on NGS data (see [<xref ref-type="bibr" rid="B5">5</xref>,<xref ref-type="bibr" rid="B6">6</xref>]), <italic>de novo </italic>assembly, especially for large eukaryote genomes, is still a holy grail [<xref ref-type="bibr" rid="B7">7</xref>,<xref ref-type="bibr" rid="B8">8</xref>].</p>
    <p>Recently, several evaluations have been presented, trying to rank assemblers' performances on different datasets: Assemblathon [<xref ref-type="bibr" rid="B9">9</xref>] and GAGE [<xref ref-type="bibr" rid="B10">10</xref>] are among the most important ones. As a byproduct, these "competitions" showed that it is extremely difficult to establish the best assembler. Each dataset is characterized by different peculiarities and the heuristics implemented by a single assembler are usually only partially able to solve the raised issues.</p>
    <p>An interesting strategy to improve <italic>de novo </italic>assemblies has been proposed and goes under the name of <italic>assembly reconciliation </italic>[<xref ref-type="bibr" rid="B11">11</xref>,<xref ref-type="bibr" rid="B12">12</xref>]. The goal of assembly reconciliation is to merge the assemblies produced by different tools while detecting possible mis-assemblies and isolating problematic regions. Such a strategy has already been proposed for Sanger-based assemblies and one of the goals of this paper is to study its adaptation to NGS data.</p>
    <p>Zimin <italic>et al. </italic>in [<xref ref-type="bibr" rid="B11">11</xref>] presented Reconciliator, which is based on an iteration of errors identification and correction, and merging phases. Using the so called CE statistics [<xref ref-type="bibr" rid="B11">11</xref>] they identify regions likely to contain errors in the assemblies. After this, a global alignment between the two assemblies is performed. In order to avoid problems with repeats, alignment is performed using seeds unique in both the reference and the query sequences. At this point areas marked as problematic are solved using the assembler with better CE statistics and possible gaps in the assemblies are filled. The last step consists in the validation of the merged assembly.</p>
    <p>Casagrande and colleagues in [<xref ref-type="bibr" rid="B12">12</xref>] proposed GAM (GAM-NGS's ancestor), a tool similar to Reconciliator, but able to avoid the global alignment step. In order to identify similar sequences they searched for areas assembled by the same reads. Subsequently the notion of "block" is introduced to evaluate sensible local alignments and a graph is built to describe global relationships between the two assemblies. When confronted with problematic regions (<italic>e.g</italic>., loops and bifurcations in the graph), GAM uses one of the assemblies as guide.</p>
    <p>Both Reconciliator and GAM have advantages/disadvantages on one another (<italic>e.g</italic>., GAM does not need a global alignment while Reconciliator does, however GAM was not able to detect and correct mis-assemblies). Nevertheless, both tools share the limitation that they are tailored for Sanger-based assemblers. As an example, they both need a layout file (usually an afg file) describing for each read the (unique) position where it has been used. In NGS assemblers, such a layout file is provided by a small minority of tools (<italic>e.g</italic>., Velvet, Ray and SUTTA). Moreover, another limit of both tools is the fact that the two input assemblies must have been produced using the <italic>same </italic>set of reads.</p>
    <p>Recently, two new tools appeared, tackling the problem of assembly reconciliation using NGS-like datasets: GAA [<xref ref-type="bibr" rid="B13">13</xref>] and ZORRO [<xref ref-type="bibr" rid="B14">14</xref>]. The former one performs a global alignment between two assemblies (using BLAT). The alignment is used to build the so called Accordance Graph in order to merge the assemblies. In the merging phase reads are used to solve possible inconsistent links in order to output a correct assembly. The latter one, ZORRO [<xref ref-type="bibr" rid="B14">14</xref>], performs a first error correction phase directly on the original contigs and then a global alignment using <italic>nucmer</italic>. The alignment is used to order contigs and deriving a consensus sequence. The main drawback of both GAA and ZORRO is the mandatory global alignment phase between the assemblies, which is not only a computational expensive step, but, in presence of ortholog and paralog sequences, it may produce a large number of false links affecting merging performances. Morover, GAA focuses more on avoiding mis-assemblies' introduction than correcting them, while ZORRO is explicitly designed for short genomes (as size increases, merging is not feasible).</p>
    <p>Other tools that belong to the assembly reconciliation family are MAIA [<xref ref-type="bibr" rid="B15">15</xref>], e-RGA [<xref ref-type="bibr" rid="B16">16</xref>], and the Velvet's Columbus module. However, they focus more on enhancing <italic>de novo </italic>assembly results guided by a reference sequence belonging to closely related species, than on pure reconciling <italic>de novo </italic>assemblies.</p>
    <p>With this picture in mind we developed GAM-NGS (Genomic Assemblies Merger for Next Generation Sequencing) whose primary goal is to merge two assemblies in order to enhance contiguity and possibly correctness. GAM-NGS does not need global alignment between contigs, making it unique among assembly reconciliation tools. In this way not only a computationally expensive and error prone alignment phase is avoided, but also much more information is used (total read length is usually one or two order of magnitude higher than the mere assembly's length). Read alignments allow the identification of regions reconstructed with the same reads, thus isolating natural candidates to represent the same genomic <italic>locus</italic>. GAM-NGS merge-phase is guided by an Assemblies Graph (AG). AG is a weighted graph and this is another specific feature of our tool. Weights indicate the likelihood that a link is part of a correct path. AG allows GAM-NGS to identify genomic regions in which assemblies contradict each other (loops, bifurcations, <italic>etc</italic>.). In all these situations weights are <italic>locally </italic>used to output the most reliable sequence, given the information in AG.</p>
    <p>GAM-NGS requires as input two assemblies and a SAM-compatible alignment (<italic>e.g</italic>., obtained with BWA [<xref ref-type="bibr" rid="B17">17</xref>], ERNE [<xref ref-type="bibr" rid="B18">18</xref>]) for each input read library and each assembly. GAM-NGS can also work with assemblies obtained using different datasets, as long as the set of reads aligned on the assemblies is the same. It is important to note that, mapping reads back to the assembly is practically a mandatory phase for a large number of downstream analyses (<italic>e.g</italic>., SNP calling, repeat analyses, <italic>etc</italic>.) and therefore represents no extra cost.</p>
    <p>We tested GAM-NGS on six datasets. We used three GAGE datasets [<xref ref-type="bibr" rid="B10">10</xref>] in order to evaluate GAM-NGS and to compare it with other assembly reconciliators (<italic>i.e</italic>., GAA and ZORRO). Moreover, in order to show GAM-NGS data and "biological" scalability, we tested it on three large plant datasets: a <italic>Prunus persica </italic>genome (227 Mbp, double haploid), a <italic>Populus nigra </italic>genome (423 Mbp, heterozygous) and a <italic>Picea abies </italic>genome (20 Gbp, diploid and highly repetitive). GAM-NGS turned out to be able to correctly merge these assemblies, significantly improving the results achievable using only one assembler. Statistics computed on GAM-NGS outputs show comparable results with respect to other assembly reconciliation tools. Nevertheless, GAM-NGS is always the fastest and the least computationally demanding tool, which makes GAM-NGS the best candidate for large datasets.</p>
  </sec>
  <sec sec-type="methods">
    <title>Methods</title>
    <p>GAM-NGS's main idea is to identify highly similar fragments between two assemblies, searching for regions sharing a large amount of mapped reads. The assumption is that areas built using the same reads most likely represent the same genomic <italic>locus</italic>.</p>
    <p>The vast majority of NGS assemblers does not return a layout file as output (<italic>i.e</italic>., a file, usually in afg format, listing along the assembly the reads used and their positions). In order to overcome this limit, GAM-NGS approximates the layout file using reads aligned back to the assembly: an analysis step almost mandatory in all <italic>de novo </italic>assembly projects. Such an approximation may turn out errors prone: as an example, consider a genome containing (almost) perfectly duplicated regions. In such a case genomic read belonging to any two repeated sequences will be randomly assigned to one of the two copies. In order to keep problems related with repeats, at least partially, under control, GAM-NGS uses only reads aligning to a single position (a.k.a. <italic>uniquely aligned</italic>), discarding all reads that have two or more high scoring alignments (a.k.a. <italic>ambiguously aligned</italic>).</p>
    <p>As a matter of fact, since assemblers implement different heuristics (if this was not the case, merging would be trivial), they may contradict each other by inverting sequences' order or erroneously merging (<italic>e.g</italic>., scaffolding) sequences belonging to different genomic regions. Thus, it is compulsory to identify these situations and, possibly, solve them. To address this problem we used a graph structure (dubbed Assemblies Graph or AG) recording and weighting the most probable order relation among regions, <italic>blocks</italic>, where the same reads are mapped.</p>
    <p>Once AG is built, GAM-NGS identifies "problematic" regions, signalled by specific sub-graph structures. Such local problems are solved by selecting the path in the graph that maximizes a set of measurable and local features, suggesting the assembly's correctness. Some of these features are borrowed from [<xref ref-type="bibr" rid="B19">19</xref>] and are computed using pairing information coming from aligned paired-end and possibly mate-pair reads libraries. If there is not enough evidence to decide on assembly correctness (<italic>e.g</italic>., weights are too close to each other), we chose to be as conservative as possible, electing one of the sequences as <italic>master</italic>, the other one, therefore, becoming the <italic>slave</italic>. In the following sections we will denote the <italic>master </italic>assembly as <italic>M </italic>and the <italic>slave </italic>one as <italic>S</italic>.</p>
    <p>After this last phase, GAM-NGS visits the simplified graph, merges contigs finding a consensus sequence and finally outputs the improved assembly.</p>
    <sec>
      <title>Definitions</title>
      <p>Let Î£ be an alphabet and Î£* be the set of finite-length strings from Î£. For every <italic>s </italic>â Î£<sup>* </sup>we will denote by |<italic>s</italic>| the number of characters in <italic>s</italic>. In our context reads and contigs are elements of Î£*, where Î£ = {<italic>A</italic>, <italic>C</italic>, <italic>T</italic>, <italic>G</italic>, <italic>N</italic>}. With <inline-formula><mml:math id="M1" name="1471-2105-14-S7-S6-i1" overflow="scroll"><mml:mi mathvariant="script">R</mml:mi><mml:mo class="MathClass-rel">=</mml:mo><mml:mfenced close="}" open="{"><mml:mrow><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo class="MathClass-punc">,</mml:mo><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mi>.</mml:mi><mml:mo class="MathClass-punc">,</mml:mo><mml:msub><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mrow><mml:mi>n</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:mfenced></mml:math></inline-formula> we denote the set of reads aligned against both <italic>M </italic>and <italic>S</italic>, which are the master and slave assemblies, respectively. Usually <inline-formula><mml:math id="M2" name="1471-2105-14-S7-S6-i2" overflow="scroll"><mml:mi mathvariant="script">R</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> is the set, or a subset, of reads used to assemble both <italic>M </italic>and <italic>S </italic>and its elements may belong to different paired read and mate pair libraries. However, alignments of reads belonging to different libraries should be provided into separate alignment files, in order to exploit the information of different inserts' sizes.</p>
      <p>Let <italic>r</italic><sub>1</sub>, <italic>r</italic><sub>2 </sub>be two reads aligned against the same contig <italic>C </italic>(with <italic>C </italic>belonging to either <italic>M </italic>or <italic>S</italic>). For <italic>i </italic>â {1, 2}, let <italic>begin</italic>(<italic>r<sub>i</sub></italic>) and <italic>end</italic>(<italic>r<sub>i</sub></italic>) be the positions in <italic>C </italic>where the first and last base of <italic>r<sub>i </sub></italic>are aligned, respectively. Therefore, we can assume <italic>begin</italic>(<italic>r<sub>i</sub></italic>) &lt;<italic>end</italic>(<italic>r<sub>i</sub></italic>), for <italic>i </italic>â {1, 2}. We say that <italic>r</italic><sub>1 </sub>and <italic>r</italic><sub>2 </sub>are <italic>adjacent </italic>if and only if <italic>begin</italic>(<italic>r</italic><sub>2</sub>) â¤ <italic>end</italic>(<italic>r</italic><sub>1</sub>)+1 and <italic>begin</italic>(<italic>r</italic><sub>1</sub>) â¤ <italic>end</italic>(<italic>r</italic><sub>2</sub>) + 1.</p>
      <p>Given a contig <italic>C </italic>belonging to assembly <italic>A</italic>, a <italic>frame </italic>over <italic>A </italic>is defined as a sequence of reads <italic>r</italic><sub>1</sub>, ..., <italic>r<sub>n </sub></italic>mapped against <italic>A </italic>where <italic>r<sub>i</sub></italic>, <italic>r</italic><sub><italic>i</italic>+1 </sub>are adjacent for <italic>i </italic>= 1, ..., <italic>n </italic>- 1. Thus, a frame <italic>F </italic>can be identified by the contig where its reads are aligned and the interval [<italic>begin</italic>(<italic>F</italic>), <italic>end</italic>(<italic>F</italic>)], where <italic>begin</italic>(<italic>F</italic>) = min{<italic>begin</italic>(<italic>r<sub>i</sub></italic>)|<italic>i </italic>= 1, ..., <italic>n</italic>} and <italic>end</italic>(<italic>F</italic>) = max{<italic>end</italic>(<italic>r<sub>i</sub></italic>)|<italic>i </italic>= 1, ..., <italic>n</italic>}. Moreover, we define the length of a frame <italic>F </italic>as |<italic>F</italic>| = <italic>end</italic>(<italic>F</italic>) - <italic>begin</italic>(<italic>F</italic>) + 1.</p>
      <p>Given two different assemblies <italic>M </italic>and <italic>S</italic>, we define a <italic>block B </italic>as a pair of frames (one over <italic>M </italic>and one over <italic>S</italic>) consisting of the same sequence of reads <italic>r</italic><sub>1</sub>, ..., <italic>r<sub>n</sub></italic>, and the size of the block as the number of reads it is composed of. If the majority of the reads <italic>r<sub>i </sub></italic>are aligned with opposite orientations on the two frames, we say that <italic>B </italic>is <italic>discordant</italic>. Otherwise, we say that <italic>B </italic>is <italic>concordant</italic>. We are interested in finding blocks where the reads' sequence (the frame) is as long as possible. Ideally, blocks should represent those fragments of the considered genome which have been built in accordance by both the assemblies.</p>
      <p>In the following we will first explain how blocks are built from alignments and then we will show how blocks are filtered in order to avoid spurious blocks produced as consequence of the existence of similar genomic regions. After this we will illustrate the Assembly Graph construction, the handling of the problematic regions identified on the graph and, lastly, how the merging phase is carried out.</p>
    </sec>
    <sec>
      <title>Blocks construction</title>
      <p>The first, and most computational demanding, step of GAM-NGS's outer algorithm is the identification and construction of blocks between assemblies <italic>M </italic>and <italic>S</italic>. The basic input format are BAM files (<italic>i.e</italic>. file in the, by now, standard alignment format). Alignments are assumed to be ordered by their contig identifier and by the alignment position.</p>
      <p>The procedure starts by loading into a hash table <inline-formula><mml:math id="M3" name="1471-2105-14-S7-S6-i3" overflow="scroll"><mml:mi mathvariant="script">H</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> all the reads uniquely mapped on <italic>M </italic>(memorizing only the strictly necessary data). Once <inline-formula><mml:math id="M4" name="1471-2105-14-S7-S6-i3" overflow="scroll"><mml:mi mathvariant="script">H</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> has been populated, uniquely mapped reads on <italic>S </italic>are processed. In particular, for each read <italic>r</italic>, we perform the following steps:</p>
      <p>â¢ if <italic>r </italic>is not present in <inline-formula><mml:math id="M5" name="1471-2105-14-S7-S6-i3" overflow="scroll"><mml:mi mathvariant="script">H</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula>, we will not use it for blocks construction;</p>
      <p>â¢ if <italic>r </italic>is adjacent to a previously created block <italic>B </italic>(<italic>i.e</italic>., adjacent to a read contained in both its frames), then <italic>B </italic>is extended using <italic>r</italic>;</p>
      <p>â¢ otherwise, a new block, started by the single read <italic>r</italic>, is built.</p>
      <p>Storing in main memory all the alignments of <italic>M </italic>and going through all the alignments of <italic>S </italic>may easily become a major computational stumbling block. For this reason we carefully designed the data structures and the relative manipulation algorithm. Each uniquely aligned read requires only 21 bytes: 8 bytes for its identifier, 4 bytes for contig's identifier, starting and ending position, and 1 byte for mapping orientation (reverse complemented or original strand). Moreover, we decided to store them in a memory efficient hash table such as Google's <italic>SparseHash </italic>[<xref ref-type="bibr" rid="B20">20</xref>], which is characterized by a 2 bits overhead per entry.</p>
      <p>For each processed read <italic>r </italic>mapped on a contig <italic>C </italic>of an assembly <italic>A</italic>, we define the <italic>scope </italic>of <italic>r </italic>as the set of blocks whose frame on <italic>C </italic>is adjacent to <italic>r</italic>. We exploit the fact that input alignments are ordered, during the blocks construction phase: if a block <italic>B </italic>is "out of scope" for the current processed read <italic>r </italic>then <italic>B </italic>will not be successively altered. If the size of <italic>B </italic>is higher than a user predefined threshold <italic>B<sub>min </sub></italic>then <italic>B </italic>is saved into secondary memory and main memory space is released. Otherwise, <italic>B </italic>is discarded. The rationale behind the <italic>B<sub>min </sub></italic>threshold is that blocks consisting of only few reads are likely to be a consequence of alignment errors or chimeric sequences.</p>
    </sec>
    <sec>
      <title>Blocks filtering</title>
      <p>A typical problem common to all assembly reconciliation tools, is that, especially with highly repetitive genomes, it may happen to merge similar regions belonging to different genomic areas (such a problem is also common among <italic>de novo </italic>assemblers<italic>)</italic>. In particular, GAM-NGS may build blocks between regions that attract the same reads only because they are similar (note that perfect genomic repeats are not a problem because in this case reads will be ambiguously aligned). This situation not only complicates Assemblies Graph's structure, but it also suggests the presence of problematic regions (<italic>i.e</italic>., errors) in sequences that are, in fact, correct. To limit this problem, GAM-NGS runs two additional filtering steps before the graph construction: one based on <italic>depth-of-coverage </italic>analysis, and the other one on <italic>block-length </italic>considerations.</p>
      <p>More specifically, considering a block <italic>B </italic>with frames <italic>F<sub>M</sub></italic>, <italic>F<sub>S</sub></italic>, on <italic>M </italic>and <italic>S</italic>, respectively, GAM-NGS computes for each frame two different types of coverages: a <italic>block coverage BC </italic>and a <italic>global coverage GC</italic>. For instance, considering the frame on the master assembly <italic>F<sub>M</sub></italic>, let <inline-formula><mml:math id="M6" name="1471-2105-14-S7-S6-i4" overflow="scroll"><mml:msub><mml:mrow><mml:mi mathvariant="script">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> be the set of <italic>all </italic>reads uniquely aligned on <italic>F<sub>M</sub></italic>, while let be <inline-formula><mml:math id="M7" name="1471-2105-14-S7-S6-i5" overflow="scroll"><mml:msub><mml:mrow><mml:mi mathvariant="script">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>the set of reads uniquely aligned on <italic>F<sub>M </sub></italic>and used as part of block <italic>B</italic>. Clearly, <inline-formula><mml:math id="M8" name="1471-2105-14-S7-S6-i6" overflow="scroll"><mml:msub><mml:mrow><mml:mi mathvariant="script">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub><mml:mo class="MathClass-rel">â</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="script">R</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>. Moreover, we define the block coverage of <italic>F<sub>M </sub></italic>as</p>
      <p>
        <disp-formula>
          <mml:math id="M9" name="1471-2105-14-S7-S6-i7" overflow="scroll">
            <mml:mrow>
              <mml:mi>B</mml:mi>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>C</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>F</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>M</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                </mml:mrow>
              </mml:msub>
              <mml:mo class="MathClass-rel">=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:munder class="msub">
                    <mml:mrow>
                      <mml:mo mathsize="small">â</mml:mo>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>r</mml:mi>
                      <mml:mo class="MathClass-rel">â</mml:mo>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi mathvariant="script">R</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>B</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>M</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                  </mml:munder>
                  <mml:mfenced close="|" open="|">
                    <mml:mi>r</mml:mi>
                  </mml:mfenced>
                </mml:mrow>
                <mml:mrow>
                  <mml:mfenced close="|" open="|">
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>F</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>M</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mfenced>
                </mml:mrow>
              </mml:mfrac>
              <mml:mi>.</mml:mi>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </p>
      <p>and the global coverage of <italic>F<sub>M </sub></italic>as</p>
      <p>
        <disp-formula>
          <mml:math id="M10" name="1471-2105-14-S7-S6-i8" overflow="scroll">
            <mml:mrow>
              <mml:mi>G</mml:mi>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>C</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>F</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>M</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                </mml:mrow>
              </mml:msub>
              <mml:mo class="MathClass-rel">=</mml:mo>
              <mml:mfrac>
                <mml:mrow>
                  <mml:munder class="msub">
                    <mml:mrow>
                      <mml:mo mathsize="small">â</mml:mo>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>r</mml:mi>
                      <mml:mo class="MathClass-rel">â</mml:mo>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi mathvariant="script">R</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>F</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>M</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                  </mml:munder>
                  <mml:mfenced close="|" open="|">
                    <mml:mi>r</mml:mi>
                  </mml:mfenced>
                </mml:mrow>
                <mml:mrow>
                  <mml:mfenced close="|" open="|">
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>F</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>M</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mfenced>
                </mml:mrow>
              </mml:mfrac>
              <mml:mi>.</mml:mi>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </p>
      <p>At this point, GAM-NGS keeps only blocks satisfying the following condition:</p>
      <p>
        <disp-formula>
          <mml:math id="M11" name="1471-2105-14-S7-S6-i9" overflow="scroll">
            <mml:mrow>
              <mml:mtext>max</mml:mtext>
              <mml:mfenced close="}" open="{">
                <mml:mrow>
                  <mml:mfrac>
                    <mml:mrow>
                      <mml:mi>B</mml:mi>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>C</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>F</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>M</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>G</mml:mi>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>C</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>F</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>M</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                  </mml:mfrac>
                  <mml:mo class="MathClass-punc">,</mml:mo>
                  <mml:mfrac>
                    <mml:mrow>
                      <mml:mi>B</mml:mi>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>C</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>F</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>S</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>G</mml:mi>
                      <mml:msub>
                        <mml:mrow>
                          <mml:mi>C</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:msub>
                            <mml:mrow>
                              <mml:mi>F</mml:mi>
                            </mml:mrow>
                            <mml:mrow>
                              <mml:mi>S</mml:mi>
                            </mml:mrow>
                          </mml:msub>
                        </mml:mrow>
                      </mml:msub>
                    </mml:mrow>
                  </mml:mfrac>
                </mml:mrow>
              </mml:mfenced>
              <mml:mo class="MathClass-rel">â¥</mml:mo>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>T</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>c</mml:mi>
                </mml:mrow>
              </mml:msub>
              <mml:mo class="MathClass-punc">,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </p>
      <p>where <italic>T<sub>c </sub></italic>is a user defined real number in the interval [0, 1]. The idea is to get rid of blocks built using a low amount of reads compared to the number of mapped reads on both frame intervals (see Figure <xref ref-type="fig" rid="F1">1</xref>).</p>
      <fig id="F1" position="float">
        <label>Figure 1</label>
        <caption>
          <p><bold>Blocks construction and coverage filtering</bold>. Blocks are identified by regions belonging to <italic>M </italic>and <italic>S </italic>that share a relatively high amount of mapped reads. In this figure, blue reads identify clusters of adjacent reads that are uniquely mapped in the same contig of both the assemblies. Moreover, GAM-NGS discards blocks like <italic>B</italic><sub>3 </sub>that contains a small amount of shared reads compared to the number of reads aligned in the same regions (<italic>e.g</italic>., in <italic>B</italic><sub>3 </sub>these are less than 35% and this block may create a wrong link between contigs).</p>
        </caption>
        <graphic xlink:href="1471-2105-14-S7-S6-1"/>
      </fig>
      <p>We decided to use the maximum between the two ratios in order to avoid the removal of blocks corresponding to heterozygous regions: it may happen that one assembler returns both alleles while the other returns only one of them. In this case, the proportion of reads used in the block should be close to 1 and 0.5, respectively.</p>
      <p>The second filtering step is based on the length of block's frames. In particular, given a block <italic>B </italic>composed of frames <inline-formula><mml:math id="M12" name="1471-2105-14-S7-S6-i10" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>, <inline-formula><mml:math id="M13" name="1471-2105-14-S7-S6-i11" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula>on contigs <italic>M<sub>i </sub></italic>â <italic>M </italic>and <italic>S<sub>j </sub></italic>â <italic>S </italic>respectively, <italic>B </italic>is retained if</p>
      <p>
        <disp-formula>
          <mml:math id="M14" name="1471-2105-14-S7-S6-i12" overflow="scroll">
            <mml:mrow>
              <mml:mo class="MathClass-rel">|</mml:mo>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>F</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>M</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                </mml:mrow>
              </mml:msub>
              <mml:mo class="MathClass-rel">|</mml:mo>
              <mml:mspace class="thinspace" width="0.3em"/>
              <mml:mspace class="thinspace" width="0.3em"/>
              <mml:mo class="MathClass-rel">â¥</mml:mo>
              <mml:mtext>min</mml:mtext>
              <mml:mrow>
                <mml:mo class="MathClass-open">{</mml:mo>
                <mml:mrow>
                  <mml:mn>0</mml:mn>
                  <mml:mi>.</mml:mi>
                  <mml:mn>3</mml:mn>
                  <mml:mo class="MathClass-bin">â</mml:mo>
                  <mml:mspace class="thinspace" width="0.3em"/>
                  <mml:mo class="MathClass-rel">|</mml:mo>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>M</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>i</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                  <mml:mo class="MathClass-rel">|</mml:mo>
                  <mml:mo class="MathClass-punc">,</mml:mo>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>T</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>l</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                </mml:mrow>
                <mml:mo class="MathClass-close">}</mml:mo>
              </mml:mrow>
              <mml:mspace class="thinspace" width="0.3em"/>
              <mml:mspace class="thinspace" width="0.3em"/>
              <mml:mo class="MathClass-bin">â¨</mml:mo>
              <mml:mo class="MathClass-rel">|</mml:mo>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>F</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>S</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>j</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                </mml:mrow>
              </mml:msub>
              <mml:mo class="MathClass-rel">|</mml:mo>
              <mml:mspace class="thinspace" width="0.3em"/>
              <mml:mspace class="thinspace" width="0.3em"/>
              <mml:mo class="MathClass-rel">â¥</mml:mo>
              <mml:mtext>min</mml:mtext>
              <mml:mrow>
                <mml:mo class="MathClass-open">{</mml:mo>
                <mml:mrow>
                  <mml:mn>0</mml:mn>
                  <mml:mi>.</mml:mi>
                  <mml:mn>3</mml:mn>
                  <mml:mo class="MathClass-bin">â</mml:mo>
                  <mml:mspace class="thinspace" width="0.3em"/>
                  <mml:mo class="MathClass-rel">|</mml:mo>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>S</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>j</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                  <mml:mo class="MathClass-rel">|</mml:mo>
                  <mml:mo class="MathClass-punc">,</mml:mo>
                  <mml:msub>
                    <mml:mrow>
                      <mml:mi>T</mml:mi>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:mi>l</mml:mi>
                    </mml:mrow>
                  </mml:msub>
                </mml:mrow>
                <mml:mo class="MathClass-close">}</mml:mo>
              </mml:mrow>
              <mml:mo class="MathClass-punc">,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </p>
      <p>where <italic>T<sub>l </sub></italic>is a user-defined threshold. Nevertheless, when this condition is not satisfied we still retain the block if any of the following conditions is satisfied: there are other blocks between <italic>M<sub>i </sub></italic>and <italic>S<sub>j </sub></italic>satisfying the condition or this is the only block between the two contigs. The rationale is, again, to discard blocks that are likely to be consequences of wrong alignments or chimeric regions, while keeping small blocks that can still witness insertions or deletions by one of the two assemblies.</p>
    </sec>
    <sec>
      <title>Assemblies graph construction</title>
      <p>For each assembly, we can define a block order relative to an assembly exploiting frames' order along its contigs. In particular, consider an assembly <italic>A </italic>and two blocks <italic>B</italic><sub>1 </sub>and <italic>B</italic><sub>2 </sub>with frames <inline-formula><mml:math id="M15" name="1471-2105-14-S7-S6-i13" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="M16" name="1471-2105-14-S7-S6-i14" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>, respectively, both on <italic>A</italic>. We say that <italic>B</italic><sub>1 </sub><italic>comes before B</italic><sub>2 </sub>with respect to <italic>A </italic>if and only if both <inline-formula><mml:math id="M17" name="1471-2105-14-S7-S6-i13" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="M18" name="1471-2105-14-S7-S6-i14" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> lie on the same contig <italic>C<sub>A </sub></italic>and <inline-formula><mml:math id="M19" name="1471-2105-14-S7-S6-i13" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> comes before <inline-formula><mml:math id="M20" name="1471-2105-14-S7-S6-i14" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> (<italic>i.e</italic>., <italic>begin</italic>(<inline-formula><mml:math id="M21" name="1471-2105-14-S7-S6-i13" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>) &lt;<italic>begin</italic>(<inline-formula><mml:math id="M22" name="1471-2105-14-S7-S6-i14" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>)) and there is no frame <inline-formula><mml:math id="M23" name="1471-2105-14-S7-S6-i15" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> lying over <italic>C<sub>A </sub></italic>for which <inline-formula><mml:math id="M24" name="1471-2105-14-S7-S6-i13" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> comes before <inline-formula><mml:math id="M25" name="1471-2105-14-S7-S6-i15" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> and <inline-formula><mml:math id="M26" name="1471-2105-14-S7-S6-i15" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula> comes before <inline-formula><mml:math id="M27" name="1471-2105-14-S7-S6-i14" overflow="scroll"><mml:msubsup><mml:mrow><mml:mi>F</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mi>A</mml:mi></mml:mrow></mml:msubsup></mml:math></inline-formula>.</p>
      <p>It is important to point out that this block order strictly depends on the considered assembly, since the same genomic region may have been reconstructed on opposite strands in the input assemblies. Thus, there may be cases where <italic>B</italic><sub>1 </sub>comes before <italic>B</italic><sub>2 </sub>with respect to <italic>M</italic>, but <italic>B</italic><sub>2 </sub>comes before <italic>B</italic><sub>1 </sub>with respect to <italic>S</italic>. In this scenario, block orders of the two assemblies may contradict each other (leading to cycles in AG) even when there is no contradiction at all.</p>
      <p>Our goal is to determine a consistent order of blocks among each contig of both the assemblies. To facilitate that, we build a <italic>Contigs Graph </italic>(CG) which consists of a vertex <inline-formula><mml:math id="M28" name="1471-2105-14-S7-S6-i16" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> for each contig <italic>M<sub>i </sub></italic>â <italic>M </italic>and a vertex <inline-formula><mml:math id="M29" name="1471-2105-14-S7-S6-i17" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> for each contig <italic>S<sub>j </sub></italic>â <italic>S</italic>. Two vertices <italic>V<sub>U </sub></italic>and <italic>V<sub>W </sub></italic>are connected by an undirected edge if and only if <italic>U </italic>and <italic>W </italic>belong to different assemblies and have at least one block over them.</p>
      <p>For each edge <italic>e </italic>connecting two vertices <inline-formula><mml:math id="M30" name="1471-2105-14-S7-S6-i16" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>M</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="M31" name="1471-2105-14-S7-S6-i17" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>S</mml:mi></mml:mrow><mml:mrow><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>, we assign the weight</p>
      <p>
        <disp-formula>
          <mml:math id="M32" name="1471-2105-14-S7-S6-i18" overflow="scroll">
            <mml:mrow>
              <mml:msub>
                <mml:mrow>
                  <mml:mi>w</mml:mi>
                </mml:mrow>
                <mml:mrow>
                  <mml:mi>e</mml:mi>
                </mml:mrow>
              </mml:msub>
              <mml:mo class="MathClass-rel">=</mml:mo>
              <mml:mtext>max</mml:mtext>
              <mml:mfenced close=")" open="(">
                <mml:mrow>
                  <mml:mfrac>
                    <mml:mrow>
                      <mml:msup>
                        <mml:mrow>
                          <mml:mi>r</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo class="MathClass-bin">+</mml:mo>
                        </mml:mrow>
                      </mml:msup>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:msup>
                        <mml:mrow>
                          <mml:mi>r</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo class="MathClass-bin">+</mml:mo>
                        </mml:mrow>
                      </mml:msup>
                      <mml:mo class="MathClass-bin">+</mml:mo>
                      <mml:msup>
                        <mml:mrow>
                          <mml:mi>r</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo class="MathClass-bin">-</mml:mo>
                        </mml:mrow>
                      </mml:msup>
                    </mml:mrow>
                  </mml:mfrac>
                  <mml:mo class="MathClass-punc">,</mml:mo>
                  <mml:mfrac>
                    <mml:mrow>
                      <mml:msup>
                        <mml:mrow>
                          <mml:mi>r</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo class="MathClass-bin">-</mml:mo>
                        </mml:mrow>
                      </mml:msup>
                    </mml:mrow>
                    <mml:mrow>
                      <mml:msup>
                        <mml:mrow>
                          <mml:mi>r</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo class="MathClass-bin">+</mml:mo>
                        </mml:mrow>
                      </mml:msup>
                      <mml:mo class="MathClass-bin">+</mml:mo>
                      <mml:msup>
                        <mml:mrow>
                          <mml:mi>r</mml:mi>
                        </mml:mrow>
                        <mml:mrow>
                          <mml:mo class="MathClass-bin">-</mml:mo>
                        </mml:mrow>
                      </mml:msup>
                    </mml:mrow>
                  </mml:mfrac>
                </mml:mrow>
              </mml:mfenced>
              <mml:mo class="MathClass-punc">,</mml:mo>
            </mml:mrow>
          </mml:math>
        </disp-formula>
      </p>
      <p>where <italic>r</italic><sup>+ </sup>and <italic>r</italic><sup>- </sup>are the number of reads belonging to concordant and discordant blocks between <italic>M<sub>i </sub></italic>and <italic>S<sub>j</sub></italic>, respectively. For each vertex <italic>V </italic>the weight <italic>w<sub>V </sub></italic>is then computed, corresponding to the mean of its incident edges' weights (this mean is weighted on the overall size of all blocks connecting two contigs). The main idea is that edges' weights will have a value close to one when the majority of the reads composing the blocks are mapped either with the same orientation or with the opposite orientation. In the former case contigs will most likely have the same orientation, while in the latter case one of the two contigs must be complemented and reversed.</p>
      <p>In more detail, let <inline-formula><mml:math id="M33" name="1471-2105-14-S7-S6-i19" overflow="scroll"><mml:mi mathvariant="script">Q</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> be the set of processed vertices. At first, for each connected component of CG, we insert into <inline-formula><mml:math id="M34" name="1471-2105-14-S7-S6-i19" overflow="scroll"><mml:mi mathvariant="script">Q</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> a vertex <italic>V </italic>which maximizes <italic>w<sub>V </sub></italic>and we set the original blocks' order for <italic>V</italic>'s contig. Then, we repeat the following steps until all vertices of the graph belong to <inline-formula><mml:math id="M35" name="1471-2105-14-S7-S6-i19" overflow="scroll"><mml:mi mathvariant="script">Q</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula>:</p>
      <p>â¢ Pick <inline-formula><mml:math id="M36" name="1471-2105-14-S7-S6-i20" overflow="scroll"><mml:mi>V</mml:mi><mml:mo class="MathClass-rel">â</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:math></inline-formula> with largest <italic>w<sub>V</sub></italic>;</p>
      <p>â¢ Let <italic>adj</italic>(<italic>V</italic>) be the set of the vertexes adjacent to <italic>V</italic>. For each vertex <italic>V<sub>U </sub></italic>â <italic>adj</italic>(<italic>V</italic>), we set the order of blocks on <italic>U </italic>depending on whether the majority of reads belongs to concordant or discordant blocks and according to blocks' order of <italic>V</italic>'s contig;</p>
      <p>â¢ <italic>adj</italic>(<italic>V</italic>)'s elements are added to <inline-formula><mml:math id="M37" name="1471-2105-14-S7-S6-i19" overflow="scroll"><mml:mi mathvariant="script">Q</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> and we remove <italic>V</italic>'s incident edges from the graph, updating vertices' weights.</p>
      <p>The rationale behind this heuristic is that, at each iteration, we set the order of the blocks over one of the contigs for which we have the clearest evidence. However, this is a simple (yet effective) procedure to compute a consistent blocks' order among the assemblies and we plan to improve it in order to have a higher guarantee of avoiding the introduction of "false contradictions" (<italic>i.e</italic>., cycles) in AG.</p>
      <p>With the updated blocks order we are now able to build the <italic>Assemblies Graph </italic>(AG): a node <italic>V<sub>B </sub></italic>is added for each block <italic>B</italic>, while edges connect blocks that share at least one frame on the same contig. In particular, if a block <italic>B</italic><sub>1 </sub>comes before a block <italic>B</italic><sub>2 </sub>with respect to <italic>M </italic>or <italic>S </italic>we put a directed edge from <inline-formula><mml:math id="M38" name="1471-2105-14-S7-S6-i21" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> to <inline-formula><mml:math id="M39" name="1471-2105-14-S7-S6-i22" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> (see Figure <xref ref-type="fig" rid="F2">2</xref>). Notice that, since we are considering the merging of two assemblies, each node cannot have an input or output degree strictly greater than two.</p>
      <fig id="F2" position="float">
        <label>Figure 2</label>
        <caption>
          <p><bold>Assemblies Graph construction</bold>. A simple example of AG construction: <italic>B</italic><sub>1 </sub>comes before <italic>B</italic><sub>2 </sub>in both <italic>S</italic><sub>1 </sub>and <italic>M</italic><sub>1 </sub>so a directed edge connects <inline-formula><mml:math id="M40" name="1471-2105-14-S7-S6-i34" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="M41" name="1471-2105-14-S7-S6-i35" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>. The same also applies for <inline-formula><mml:math id="M42" name="1471-2105-14-S7-S6-i36" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="M43" name="1471-2105-14-S7-S6-i37" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>, since <italic>B</italic><sub>2 </sub>comes before <italic>B</italic><sub>3 </sub>in <italic>S</italic><sub>1</sub>. Moreover, an edge is added between <inline-formula><mml:math id="M44" name="1471-2105-14-S7-S6-i38" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="M45" name="1471-2105-14-S7-S6-i39" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>4</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> as <italic>B</italic><sub>3 </sub>comes before <italic>B</italic><sub>4 </sub>in <italic>M</italic><sub>2</sub>.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-S7-S6-2"/>
      </fig>
      <p>Moreover, during AG construction, we add to each edge a weight characterized by a series of features that are evaluated within the region relative to the blocks related to the vertices connected by the edge.</p>
      <p>Let <inline-formula><mml:math id="M46" name="1471-2105-14-S7-S6-i23" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>, <inline-formula><mml:math id="M47" name="1471-2105-14-S7-S6-i24" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> be two nodes linked by an edge (<italic>i.e</italic>., <italic>B</italic><sub>1 </sub>comes before <italic>B</italic><sub>2 </sub>on a contig <italic>C </italic>of either one of <italic>M </italic>and <italic>S</italic>). Let <italic>F</italic><sub>1 </sub>and <italic>F</italic><sub>2 </sub>be, respectively, their frames on <italic>C</italic>. Then, we compute the number of reads that have a correctly placed pair (or mate) that spans the gap between <italic>F</italic><sub>1 </sub>and <italic>F</italic><sub>2 </sub>and the number of reads that are expected to have their pair (or mate) correctly placed and crossing over <italic>F</italic><sub>1 </sub>and <italic>F</italic><sub>2 </sub>which is unmapped or mapped to a different sequence. In particular, a read <italic>r</italic>', mapped on a contig <italic>C</italic>, has a correctly placed pair (or mate) <italic>r</italic>" if <italic>begin</italic>(<italic>r</italic>") is inside the region [<italic>begin</italic>(<italic>r</italic>') + (<italic>m </italic>- 3 Â· <italic>sd</italic>), <italic>begin</italic>(<italic>r</italic>') + (<italic>m </italic>+ 3 Â· <italic>sd</italic>)] and |<italic>C</italic>| â¥ <italic>begin</italic>(<italic>r</italic>') + (<italic>m </italic>+ 3 Â· <italic>sd</italic>), where <italic>m </italic>and <italic>sd </italic>are the mean and the standard deviation of the insert size of the library, respectively. Furthermore, we also compute values such as coverage and number of wrongly oriented pairs (or mates). These weights are used to determine the likelihood that a link represents a correct path allowing us to take motivated decisions in case of problematic regions witnessed by non-linear graphs (<italic>i.e</italic>., bubbles, bifurcations, <italic>etc</italic>.).</p>
      <p>Every path in AG corresponds to a sequence of blocks such that every pair of consecutive blocks lies on the same assembled sequence for at least one assembly. Thus, we can exploit AG to integrate or extend contigs.</p>
      <p>Also, it is important to notice that if we consider AG disregarding edges' orientation, more than a single connected component can be present. We exploited this fact implementing GAM-NGS in a way that it can correct and merge contigs handling single connected components in parallel.</p>
    </sec>
    <sec>
      <title>Handling problematic regions</title>
      <p>Even if we build AG using the previously described method, block orders suggested by assemblies may contradict each other. For instance, suppose two blocks lie on a single contig in both the assemblies with opposite order with respect to <italic>M </italic>and <italic>S</italic>. This scenario will lead to a cycle in AG. Moreover, strongly connected components (SCC) containing at least two nodes denote a situation where <italic>M </italic>and <italic>S </italic>disagree on the order of some blocks. To find these kind of contradictions we used Tarjan's algorithm [<xref ref-type="bibr" rid="B21">21</xref>] to determine SCC in linear time while visiting AG.</p>
      <p>Another possible problem is represented by divergent paths that may indicate situations where assemblies locally behaved differently: one assembler extended a sequence in a different way with respect to the other. In particular, we can exploit edges' weights to perform choices that are locally optimal (<italic>e.g</italic>., in the presence of a bifurcation the path minimizing the evidence of mis-assemblies will be chosen) in order to output a correct sequence. In situations where weights/features do not allow us to take a position (<italic>e.g</italic>. similar weights), we decided to be as conservative as possible, trusting only contigs belonging to the master assembly.</p>
      <p>Among the various graph structures generated by discordant assemblies, <italic>bubbles </italic>and <italic>forks </italic>are the most common ones (see Figures <xref ref-type="fig" rid="F3">3</xref> and Figure <xref ref-type="fig" rid="F4">4</xref>). Bubbles consist of a path that first diverges and then converges back. Forks, instead, contain only divergent or convergent paths. We can spot and distinguish these two structures with a simple depth-first traversal of AG. Such structures can nest in highly complex scenarios and, at this stage, we decided to deal only with graphs for which we have a good guarantee that they will be handled correctly. In particular, we took care only of cycles involving exactly two nodes and bifurcations not involving any bubble.</p>
      <fig id="F3" position="float">
        <label>Figure 3</label>
        <caption>
          <p><bold>Handling 2-node cycles in Assemblies Graph</bold>. A 2-node cycle in AG witness a putative inversion along a single contig in <italic>M </italic>and <italic>S</italic>. If there actually is an inversion, then mate-pair reads are aligned with the wrong orientation in one of the two contigs. We can use this information to provide in output a correct sequence (the blue one in the picture).</p>
        </caption>
        <graphic xlink:href="1471-2105-14-S7-S6-3"/>
      </fig>
      <fig id="F4" position="float">
        <label>Figure 4</label>
        <caption>
          <p><bold>Handling bifurcations in Assemblies Graph</bold>. Bifurcations in AG, may spot biological repeats or mis-assemblies. In panel (a), paired reads do not solve the bifurcation and we might face a biological repeat. In panel (b), paired reads on <italic>M</italic><sub>1 </sub>might help us to spot a mis-join in the assembly.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-S7-S6-4"/>
      </fig>
      <sec>
        <title>Handling cycles involving exactly two nodes</title>
        <p>Cycles involving only two nodes may indicate inversions along the same contig in both <italic>M </italic>and <italic>S</italic>. To solve this particular kind of loop we can exploit mate-pair and pair-end reads' orientation. In [<xref ref-type="bibr" rid="B19">19</xref>] it has been shown how the use of mate-pair-happiness [<xref ref-type="bibr" rid="B22">22</xref>] is one of the best methodologies to detect mis-assemblies.</p>
        <p>If the graph is indeed the result of two inverted blocks in one of the two assemblies, contigs pairs will be mapped with the correct orientation in only one of the two (see Figure <xref ref-type="fig" rid="F3">3</xref>). Hence, if we are able to find a minimum number of reads that are aligned properly in one contig and with the wrong orientation in the other one, we can include the correct sequence in the improved assembly. Otherwise, we chose to directly output the sequence of the master assembly.</p>
      </sec>
      <sec>
        <title>Handling bifurcations</title>
        <p>Graphs containing bifurcations may signify biological repeats or mis-assemblies. We will only show how we handle nodes with output degree equal to two, since nodes with input degree equal to two can be treated symmetrically. Let <italic>B </italic>be a block such that <italic>V<sub>B </sub></italic>has two outgoing edges to <inline-formula><mml:math id="M48" name="1471-2105-14-S7-S6-i25" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>M</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula> and <inline-formula><mml:math id="M49" name="1471-2105-14-S7-S6-i26" overflow="scroll"><mml:msub><mml:mrow><mml:mi>V</mml:mi></mml:mrow><mml:mrow><mml:msub><mml:mrow><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:msub></mml:math></inline-formula>. Let <italic>M<sub>i </sub></italic>â <italic>M </italic>be the contig shared between <italic>B </italic>and <italic>B<sub>M</sub></italic>, and <italic>S<sub>j </sub></italic>â <italic>S </italic>be the contig between <italic>B </italic>and <italic>B<sub>S</sub></italic>. In order to solve this scenario we focus on where reads placed on frames defined by B have their respective paired read (or mate): do they end up in <italic>B<sub>M </sub></italic>or <italic>B<sub>S</sub></italic>? See Figure <xref ref-type="fig" rid="F4">4</xref> for an illustration of this case. Let <italic>n<sub>M </sub></italic>and <italic>n<sub>S </sub></italic>count the number of mates mapped to <italic>B<sub>M</sub></italic>'s and <italic>B<sub>S</sub></italic>'s frame, respectively. Given a read library with mean insert size <italic>m </italic>and standard deviation <italic>s</italic>, we define <italic>u<sub>M </sub></italic>(respectively <italic>u<sub>S</sub></italic>) as the number of reads mapped on the frame defined by <italic>B </italic>such that their pair/mate, accordingly to library orientation, is <italic>not </italic>aligned within a region of length <italic>m </italic>+ 3 Â· <italic>s </italic>(<italic>i.e</italic>., insert size spanning) in <italic>B<sub>M</sub></italic>'s frame on <italic>M<sub>i </sub></italic>(respectively, in <italic>B<sub>S</sub></italic>'s frame on <italic>S<sub>j</sub></italic>). If <italic>M<sub>i </sub></italic>(or <italic>S<sub>j</sub></italic>) is so short that it is included within the insert size spanning of a read placement, then that read is not used to compute <italic>u<sub>M </sub></italic>(or <italic>u<sub>S</sub></italic>).</p>
        <p>For instance, if we find that</p>
        <p>
          <disp-formula>
            <mml:math id="M50" name="1471-2105-14-S7-S6-i27" overflow="scroll">
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>M</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>u</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>M</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo class="MathClass-rel">â¥</mml:mo>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>T</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>U</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mo class="MathClass-bin">â§</mml:mo>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>S</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>u</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>S</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo class="MathClass-rel">â¤</mml:mo>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>T</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>L</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo class="MathClass-punc">,</mml:mo>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>where <italic>T<sub>U </sub></italic>&gt;<italic>T<sub>L </sub></italic>are two threshold values in [0, 1], we may be able to spot a mis-assembly in <italic>S<sub>j</sub></italic>. Conversely, if we find that</p>
        <p>
          <disp-formula>
            <mml:math id="M51" name="1471-2105-14-S7-S6-i28" overflow="scroll">
              <mml:mrow>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>S</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>u</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>S</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo class="MathClass-rel">â¥</mml:mo>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>T</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>U</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mo class="MathClass-bin">â§</mml:mo>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mspace class="thinspace" width="0.3em"/>
                <mml:mfrac>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>n</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>M</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:msub>
                      <mml:mrow>
                        <mml:mi>u</mml:mi>
                      </mml:mrow>
                      <mml:mrow>
                        <mml:mi>M</mml:mi>
                      </mml:mrow>
                    </mml:msub>
                  </mml:mrow>
                </mml:mfrac>
                <mml:mo class="MathClass-rel">â¤</mml:mo>
                <mml:msub>
                  <mml:mrow>
                    <mml:mi>T</mml:mi>
                  </mml:mrow>
                  <mml:mrow>
                    <mml:mi>L</mml:mi>
                  </mml:mrow>
                </mml:msub>
                <mml:mo class="MathClass-punc">,</mml:mo>
              </mml:mrow>
            </mml:math>
          </disp-formula>
        </p>
        <p>we may be able to spot a mis-assembly in <italic>M<sub>i</sub></italic>, as in Figure <xref ref-type="fig" rid="F4">4(b)</xref>. If we are not in any of the two previous situations, it might mean that either blocks are too distant to let us discover the mis-assembly or <italic>B </italic>has been built due to a repetitive sequence. In this case, to avoid the introduction of errors in the improved assembly, we do not risk resolving the bifurcation and instead simply output the master's contigs.</p>
      </sec>
    </sec>
    <sec>
      <title>Merging</title>
      <p>After solving problematic regions in AG, we can visit maximal disjoint paths in order to produce a draft alignment of contigs belonging to different assemblies. Such alignment is based on reads mapping and might be inaccurate (<italic>e.g</italic>., regions having low identity). Therefore, we perform a semi-global alignment algorithm [<xref ref-type="bibr" rid="B23">23</xref>] (a banded variant to save memory) to make sure that contigs have a high similarity (<italic>i.e</italic>., at least an identity of 95%) and should be merged.</p>
      <p>We decided <italic>not </italic>to return a consensus, since there is no guarantee that it would be better than the two original sequences. Therefore, we decided to output the sequence belonging to the assembly that locally shows the best CE statistics [<xref ref-type="bibr" rid="B11">11</xref>] for insert sizes.</p>
      <p>We also tried to avoid the introduction of duplicated regions, closing a gap between two contigs of <italic>M </italic>linked by a contig of <italic>S </italic>if and only if semi-global alignments on both ends of the region do not drop below 95% identity (see Figure <xref ref-type="fig" rid="F5">5</xref>).</p>
      <fig id="F5" position="float">
        <label>Figure 5</label>
        <caption>
          <p><bold>GAM-NGS's merging phase</bold>. During the merging phase, we fill the gaps between contigs in <italic>M </italic>and we extend a contig of <italic>M </italic>only if the corresponding sequence in <italic>S </italic>is longer and semi-global alignments at any end do not drop below 95% identity. Moreover, for regions defined by a block, we output the frame with better CE statistics.</p>
        </caption>
        <graphic xlink:href="1471-2105-14-S7-S6-5"/>
      </fig>
      <p>After this phase, we obtain a set of <italic>merged </italic>contigs that we called <italic>paired contigs</italic>. To obtain the final improved assembly we simply output this set along with contigs of <italic>M </italic>that were not involved in any merge.</p>
    </sec>
  </sec>
  <sec>
    <title>Results and discussion</title>
    <p>Validation of GAM-NGS's output has been performed on public data, for which results obtained by various assemblers are public as well. In particular, we chose three real datasets (<italic>i.e</italic>., <italic>Staphylococcus aureus, Rhodobacter sphaeroides </italic>and human chromosome 14) downloaded from GAGE [<xref ref-type="bibr" rid="B10">10</xref>] website [<xref ref-type="bibr" rid="B24">24</xref>] (see Table <xref ref-type="table" rid="T1">1</xref>) for which a reference genome is available. Moreover, we chose to test GAM-NGS on larger datasets such as <italic>Prunus persica</italic>, <italic>Populus nigra </italic>and <italic>Picea abies</italic>, in order to show our tool's scalability.</p>
    <table-wrap id="T1" position="float">
      <label>Table 1</label>
      <caption>
        <p>Reference genomes and libraries for public datasets (Allpaths-LG corrected)</p>
      </caption>
      <table frame="hsides" rules="groups">
        <thead>
          <tr>
            <th align="center">Organism</th>
            <th align="center">Genome length (bp)</th>
            <th align="center">Library</th>
            <th align="center">Avg Read length (bp)</th>
            <th align="center">Insert size (bp)</th>
            <th align="center">Coverage</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td align="center">
              <italic>S. aureus</italic>
            </td>
            <td align="center">2,903,081</td>
            <td align="center">Fragment</td>
            <td align="center">101</td>
            <td align="center">180</td>
            <td align="center">29X</td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td colspan="4">
              <hr/>
            </td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td align="center">Short jump</td>
            <td align="center">96</td>
            <td align="center">3500</td>
            <td align="center">32X</td>
          </tr>
          <tr>
            <td colspan="6">
              <hr/>
            </td>
          </tr>
          <tr>
            <td align="center">
              <italic>R. sphaeroides</italic>
            </td>
            <td align="center">4,603,060</td>
            <td align="center">Fragment</td>
            <td align="center">101</td>
            <td align="center">180</td>
            <td align="center">31X</td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td colspan="4">
              <hr/>
            </td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td align="center">Short jump</td>
            <td align="center">101</td>
            <td align="center">3500</td>
            <td align="center">29X</td>
          </tr>
          <tr>
            <td colspan="6">
              <hr/>
            </td>
          </tr>
          <tr>
            <td align="center">Human chr14</td>
            <td align="center">88,289,540</td>
            <td align="center">Fragment</td>
            <td align="center">101</td>
            <td align="center">180</td>
            <td align="center">39X</td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td colspan="4">
              <hr/>
            </td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td align="center">Short jump</td>
            <td align="center">96</td>
            <td align="center">3000</td>
            <td align="center">12X</td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td colspan="4">
              <hr/>
            </td>
          </tr>
          <tr>
            <td/>
            <td/>
            <td align="center">Long jump</td>
            <td align="center">96</td>
            <td align="center">35000</td>
            <td align="center">0.2X</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>It is also important to point out that datasets provided by GAGE represent a useful instrument to evaluate GAM-NGS for a number of different reasons. First, GAGE provides state of the art datasets formed by several paired end and mate pairs libraries. Second, it provides highly reliable reference assemblies suitable for benchmarking. Third, a suite of reusable scripts is available for computing assembly metrics.</p>
    <p>Reads available for each public dataset were error-corrected using both Quake and the Allpaths-LG error corrector. We chose to use the Allpaths-LG error-corrected reads.</p>
    <p>Since GAM-NGS (as well as GAA) follows a master/slave approach and many assemblies are available for each GAGE datasets, we had to decide which assemblies should be merged and which should be elected as master.</p>
    <p>Evaluating <italic>de novo </italic>assemblies in absence of a reference sequence is as difficult as <italic>de novo </italic>assembly itself. As an example, consider that Assemblathon 2 [<xref ref-type="bibr" rid="B25">25</xref>] required more than a year to evaluate submitted assemblies. GAGE datasets gave us the possibility to choose the two best assemblies accordingly to GAGE evaluation, however we decided to be as realistic as possible and to avoid the use of the available reference sequence. To the best of our knowledge, the only methodology available to evaluate assemblies in absence either of a reference sequence or of external-validation-data (<italic>e.g</italic>., fosmid ends, physical maps, <italic>etc</italic>.) is based on Feature Response Curve-analysis (FRCurve-analysis) [<xref ref-type="bibr" rid="B19">19</xref>]. Recently, a novel tool dubbed <italic>FRC<sup>bam </sup></italic>[<xref ref-type="bibr" rid="B26">26</xref>], designed for computing a FRCurve from NGS-datasets, has been presented. Results summarized in [<xref ref-type="bibr" rid="B26">26</xref>] show that <italic>FRC<sup>bam </sup></italic>is able to effectively detect mis-assemblies. <italic>FRC<sup>bam </sup></italic>enabled us to evaluate a <italic>de novo </italic>assembly using only an alignment file (given in SAM/BAM format) of a set of reads (usually the same reads used in the assembly), which is also the same input required by GAM-NGS.</p>
    <p>For each GAGE dataset we plotted the FRCurve [<xref ref-type="bibr" rid="B19">19</xref>] using <italic>FRC<sup>bam </sup></italic>. Then we chose to merge the two assemblies having the steepest curves (<italic>i.e</italic>., few negative features in the longest contigs) and whole length close to the genome size. As expected by the results shown in [<xref ref-type="bibr" rid="B26">26</xref>], we were always able to choose assemblies that, using GAGE's evaluation scripts, were characterized by good statistics such as number of errors and corrected NG50 (<italic>i.e</italic>., NG50 of the assemblies broken in correspondence of each mis-assembly). All experiments were performed using both combinations of master/slave assemblies. We also decided to follow a common "bad practice" electing as best assemblies those characterized by the longest NG50 (without any consideration on the number of errors) and run GAM, GAA and ZORRO to merge them.</p>
    <p>As far as the three larger datasets were concerned, we merged assemblies obtained with CLC [<xref ref-type="bibr" rid="B27">27</xref>] and ABySS [<xref ref-type="bibr" rid="B28">28</xref>] for <italic>Prunus persica </italic>and <italic>Populus nigra</italic>, while we used GAM-NGS with a whole genome shotgun assembly and a series of fosmid-pools assemblies (all assembled with CLC assembler) for <italic>Picea abies </italic>that, to the best of our knowledge, represents the largest ever sequenced genome.</p>
    <p>GAM-NGS's performance rely on the choice of several parameters: the minimum number of reads per block <italic>B<sub>min</sub></italic>, the threshold <italic>T<sub>c </sub></italic>related to blocks' coverage filtering, the minimum block's length threshold <italic>T<sub>l</sub></italic>.</p>
    <p>Low values of <italic>B<sub>min </sub></italic>increase the number of blocks which leads to a larger memory requirement and to a potentially more complex Assemblies Graph. Moreover, high values of <italic>T<sub>c </sub></italic>or <italic>T<sub>l </sub></italic>allow us to filter more blocks, running the risk of discarding significant blocks, while with low values we might keep blocks due to repeats that will complicate AG's structure. We decided to set <italic>B<sub>min </sub></italic>= 10, <italic>T<sub>c </sub></italic>= 0.75 and <italic>T<sub>l </sub></italic>= 200 bp for all experiments on bacteria. Instead, for human chr14, we set <italic>B<sub>min </sub></italic>= 50, <italic>T<sub>c </sub></italic>= 0.75 and <italic>T<sub>l </sub></italic>= 500 bp.</p>
    <p>To evaluate correctness, we computed statistics using the same analysis script used in [<xref ref-type="bibr" rid="B10">10</xref>] and available for downloading at [<xref ref-type="bibr" rid="B24">24</xref>]. In particular, N50 sizes were computed based on the known size of the genome (NG50) and only contigs longer than 200 bp were used for the computations. As a consequence of the absence of a reference sequence in the case of the three new plants genomes we simply returned statistics showing the improvements in contiguity.</p>
    <p>All experiments were performed on a 16 CPU machine with 128 GB of RAM, with the only exception of <italic>Picea abies </italic>where we used a machine equipped with 32 CPUs and 2 TB of RAM. A brief description of the commands we used to carry out the merging on all the datasets can be found as supplementary material (see Additional file <xref ref-type="supplementary-material" rid="S1">1</xref>). GAM-NGS was always executed taking advantage of all available CPUs. GAA and ZORRO are designed as single-core programs. For this reason, we reported both CPU and wall clock times for each experiment. Moreover, GAA's internal call to BLAT is specified with the parameter -fastMap which requires input sequences to have contigs shorter than 5 Kbp. Thus, in each experiment, we had to manually run BLAT, providing its output to GAA's call. As we will show later, GAM-NGS was the fastest tool on the largest GAGE dataset (human chromosome 14).</p>
    <p>Time of alignment was added to GAM-NGS' time but we would like to emphasize that read alignment is often required in downstream analyses and is also needed when <italic>FRC<sup>bam </sup></italic>[<xref ref-type="bibr" rid="B26">26</xref>] is used to evaluate assemblies' correctness.</p>
    <sec>
      <title>Evaluation and validation on GAGE datasets</title>
      <p>Given the availability of a reference sequence, GAGE datasets allowed us to compute the actual number of errors within an assembly. We compared GAM-NGS with GAA [<xref ref-type="bibr" rid="B13">13</xref>] and ZORRO [<xref ref-type="bibr" rid="B14">14</xref>] in order to obtain a comparison of assembly reconciliation tools as fair as possible and we used the same scripts used by Salzberg and colleagues in [<xref ref-type="bibr" rid="B10">10</xref>], downloadable from [<xref ref-type="bibr" rid="B24">24</xref>].</p>
      <sec>
        <title>Staphylococcus aureus</title>
        <p>For <italic>Staphylococcus aureus</italic>' dataset we chose to merge the assemblies of Allpaths-LG and MSR-CA. Looking at their FRCurves in Figure <xref ref-type="fig" rid="F6">6</xref>, they seem to be the best two assemblies for this dataset (SGA looks steeper, however its short contigs contains many issues according to our analysis). This situation is also confirmed by GAGE analysis, as both Allpaths-LG and MSR-CA assemblies have a low number of errors and a large corrected NG50.</p>
        <fig id="F6" position="float">
          <label>Figure 6</label>
          <caption>
            <p><bold>FRCurve of Staphylococcus aureus' assemblies</bold>. Allpaths-LG and MSR-CA assemblies reach earlier a coverage close to 100% with the smallest number of features and, thus, they where chosen to be merged.</p>
          </caption>
          <graphic xlink:href="1471-2105-14-S7-S6-6"/>
        </fig>
        <p>As shown in Table <xref ref-type="table" rid="T2">2</xref>, using Allpaths-LG as master assembly, GAM-NGS was able to increase Allpaths-LG's NG50 by ~40 Kbp and to decrease the number of compressed regions. Table <xref ref-type="table" rid="T2">2</xref> shows us that GAA behaved better as far as compressed reference bases and corrected NG50 are concerned (GAA's corrected NG50 is ~5Kbp longer than GAM-NGS one). However, GAA is affected by duplication events and, more importantly, Table <xref ref-type="table" rid="T3">3</xref> shows that it contains one misjoin more than GAM-NGS. ZORRO, instead, returned a lower NG50 (about half, compared to GAM-NGS and GAA) and a lower corrected NG50. Moreover, ZORRO's output contains more misjoins than GAM-NGS.</p>
        <table-wrap id="T2" position="float">
          <label>Table 2</label>
          <caption>
            <p>GAGE statistics (contiguity, duplication and compression) on Staphylococcus aureus.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">Assembler</th>
                <th align="left">Ctg num</th>
                <th align="left">NG50 (kb)</th>
                <th align="left">NG50 corr. (kb)</th>
                <th align="left">Assembly size (%)</th>
                <th align="left">Chaff size (%)</th>
                <th align="left">Unaligned ref (%)</th>
                <th align="left">Unaligned asm (%)</th>
                <th align="left">Dupl (%)</th>
                <th align="left">Comp (%)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="left">60</td>
                <td align="left">96.74</td>
                <td align="left">66.23</td>
                <td align="left">98.88</td>
                <td align="left">0.03</td>
                <td align="left">0.61</td>
                <td align="left">0.01</td>
                <td align="left">0.04</td>
                <td align="left">1.26</td>
              </tr>
              <tr>
                <td align="left">MSR-CA</td>
                <td align="left">94</td>
                <td align="left">59.15</td>
                <td align="left">48.23</td>
                <td align="left">98.60</td>
                <td align="left">0.01</td>
                <td align="left">1.28</td>
                <td align="left">0.00</td>
                <td align="left">0.71</td>
                <td align="left">0.88</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>Allpaths-LG + MSR-CA</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">44</td>
                <td align="left">141.54</td>
                <td align="left">75.82</td>
                <td align="left">100.49</td>
                <td align="left">0.00</td>
                <td align="left">0.44</td>
                <td align="left">0.01</td>
                <td align="left">0.26</td>
                <td align="left">0.99</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">40</td>
                <td align="left">139.48</td>
                <td align="left">80.68</td>
                <td align="left">99.52</td>
                <td align="left">0.03</td>
                <td align="left">0.37</td>
                <td align="left">0.01</td>
                <td align="left">0.32</td>
                <td align="left">0.88</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">81</td>
                <td align="left">74.68</td>
                <td align="left">62.85</td>
                <td align="left">99.70</td>
                <td align="left">0.16</td>
                <td align="left">0.32</td>
                <td align="left">0.04</td>
                <td align="left">0.59</td>
                <td align="left">0.88</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>MSR-CA + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">66</td>
                <td align="left">90.47</td>
                <td align="left">66.44</td>
                <td align="left">100.21</td>
                <td align="left">0.01</td>
                <td align="left">1.01</td>
                <td align="left">0.00</td>
                <td align="left">2.03</td>
                <td align="left">0.89</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">53</td>
                <td align="left">131.65</td>
                <td align="left">64.43</td>
                <td align="left">100.66</td>
                <td align="left">0.01</td>
                <td align="left">0.95</td>
                <td align="left">0.00</td>
                <td align="left">1.90</td>
                <td align="left">0.79</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">80</td>
                <td align="left">74.64</td>
                <td align="left">62.85</td>
                <td align="left">99.63</td>
                <td align="left">0.14</td>
                <td align="left">0.32</td>
                <td align="left">0.05</td>
                <td align="left">0.53</td>
                <td align="left">1.11</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="left">60</td>
                <td align="left">96.74</td>
                <td align="left">66.23</td>
                <td align="left">98.88</td>
                <td align="left">0.03</td>
                <td align="left">0.61</td>
                <td align="left">0.01</td>
                <td align="left">0.04</td>
                <td align="left">1.26</td>
              </tr>
              <tr>
                <td align="left">SOAPdenovo</td>
                <td align="left">107</td>
                <td align="left">288.18</td>
                <td align="left">62.68</td>
                <td align="left">100.55</td>
                <td align="left">0.34</td>
                <td align="left">0.22</td>
                <td align="left">0.02</td>
                <td align="left">1.66</td>
                <td align="left">1.45</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>Allpaths-LG + SOAPdenovo</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">56</td>
                <td align="left">107.12</td>
                <td align="left">69.39</td>
                <td align="left">99.52</td>
                <td align="left">0.03</td>
                <td align="left">0.56</td>
                <td align="left">0.01</td>
                <td align="left">0.34</td>
                <td align="left">1.26</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">40</td>
                <td align="left">255.66</td>
                <td align="left">83.67</td>
                <td align="left">108.10</td>
                <td align="left">0.06</td>
                <td align="left">0.25</td>
                <td align="left">0.01</td>
                <td align="left">2.78</td>
                <td align="left">1.31</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">104</td>
                <td align="left">76.94</td>
                <td align="left">65.83</td>
                <td align="left">105.59</td>
                <td align="left">0.31</td>
                <td align="left">0.15</td>
                <td align="left">0.10</td>
                <td align="left">5.19</td>
                <td align="left">1.36</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>SOAPdenovo + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">93</td>
                <td align="left">288.18</td>
                <td align="left">62.68</td>
                <td align="left">100.92</td>
                <td align="left">0.32</td>
                <td align="left">0.20</td>
                <td align="left">0.02</td>
                <td align="left">1.88</td>
                <td align="left">1.40</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">74</td>
                <td align="left">294.96</td>
                <td align="left">62.87</td>
                <td align="left">101.92</td>
                <td align="left">0.34</td>
                <td align="left">0.16</td>
                <td align="left">0.02</td>
                <td align="left">2.62</td>
                <td align="left">1.37</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">107</td>
                <td align="left">76.94</td>
                <td align="left">62.68</td>
                <td align="left">105.63</td>
                <td align="left">0.29</td>
                <td align="left">0.16</td>
                <td align="left">0.09</td>
                <td align="left">5.17</td>
                <td align="left">1.50</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>For each assembler we report the number of contigs greater than 200 bp (Ctg), the NG50, the corrected NG50 (NG50 computed breaking the assembly at each error), assembly's total length, the percentage of short (Chaff) contigs, the length of reference's regions which cannot be found in the assembly (Unaligned ref), the length of assembly's regions that cannot be found in the reference (Unaligned asm), the percentage of duplicated (Dupl) and compressed (Comp) regions in the assembly. All the percentages in the table are computed with respect to the true genome size.</p>
          </table-wrap-foot>
        </table-wrap>
        <table-wrap id="T3" position="float">
          <label>Table 3</label>
          <caption>
            <p>GAGE statistics (SNPs, indels and misjoins) on Staphylococcus aureus.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">Assembler</th>
                <th align="center">SNPs</th>
                <th align="center">Indels &lt; 5 bp</th>
                <th align="center">Indels â¥ 5 bp</th>
                <th align="left">Misjoins</th>
                <th align="left">Inv</th>
                <th align="center">Reloc</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="center">79</td>
                <td align="center">4</td>
                <td align="center">12</td>
                <td align="left">4</td>
                <td align="left">0</td>
                <td align="center">4</td>
              </tr>
              <tr>
                <td align="left">MSR-CA</td>
                <td align="center">191</td>
                <td align="center">23</td>
                <td align="center">10</td>
                <td align="left">13</td>
                <td align="left">6</td>
                <td align="center">7</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>Allpaths-LG + MSR-CA</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">137</td>
                <td align="center">9</td>
                <td align="center">15</td>
                <td align="left">5</td>
                <td align="left">0</td>
                <td align="center">5</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="center">145</td>
                <td align="center">8</td>
                <td align="center">16</td>
                <td align="left">6</td>
                <td align="left">0</td>
                <td align="center">6</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="center">133</td>
                <td align="center">12</td>
                <td align="center">8</td>
                <td align="left">6</td>
                <td align="left">2</td>
                <td align="center">4</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>MSR-CA + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">214</td>
                <td align="center">19</td>
                <td align="center">10</td>
                <td align="left">9</td>
                <td align="left">2</td>
                <td align="center">7</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="center">206</td>
                <td align="center">22</td>
                <td align="center">15</td>
                <td align="left">11</td>
                <td align="left">2</td>
                <td align="center">9</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="center">262</td>
                <td align="center">24</td>
                <td align="center">9</td>
                <td align="left">7</td>
                <td align="left">4</td>
                <td align="center">3</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="center">79</td>
                <td align="center">4</td>
                <td align="center">12</td>
                <td align="center">4</td>
                <td align="left">0</td>
                <td align="left">4</td>
              </tr>
              <tr>
                <td align="left">SOAPdenovo</td>
                <td align="center">247</td>
                <td align="center">25</td>
                <td align="center">31</td>
                <td align="center">15</td>
                <td align="left">1</td>
                <td align="left">14</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>Allpaths-LG + SOAPdenovo</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">88</td>
                <td align="center">5</td>
                <td align="center">14</td>
                <td align="center">4</td>
                <td align="left">0</td>
                <td align="left">4</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="center">100</td>
                <td align="center">9</td>
                <td align="center">19</td>
                <td align="center">10</td>
                <td align="left">1</td>
                <td align="left">9</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="center">227</td>
                <td align="center">19</td>
                <td align="center">12</td>
                <td align="center">6</td>
                <td align="left">1</td>
                <td align="left">5</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>SOAPdenovo+ Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">304</td>
                <td align="center">27</td>
                <td align="center">29</td>
                <td align="center">15</td>
                <td align="left">1</td>
                <td align="left">14</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="center">314</td>
                <td align="center">32</td>
                <td align="center">30</td>
                <td align="center">12</td>
                <td align="left">1</td>
                <td align="left">11</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="center">299</td>
                <td align="center">28</td>
                <td align="center">11</td>
                <td align="center">13</td>
                <td align="left">2</td>
                <td align="left">11</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>For each assembly we show the number of SNPs, the number of indels shorter than 5 bp and greater (or equal) than 5 bp. The number of misjoins is computed as the sum of inversions (parts of contigs reversed with respect to the reference genome) and relocations (rearrangements moving a contig within/between chromosomes).</p>
          </table-wrap-foot>
        </table-wrap>
        <p>Using MSR-CA in place of Allpaths-LG as master assembly, GAM-NGS was able to increase NG50 by ~30 Kbp and provide a better corrected NG50 with respect to the other tools. Moreover, GAM-NGS was able to correct the master assembly problematic regions, as GAM-NGS output has a lower number of misjoins than MSR-CA. GAA, instead, using MSR-CA as master assembly, performed better as far as compressed reference bases are concerned but returned a higher number of misjoins and indels compared to GAM-NGS. In this case ZORRO returned the minimum number of misjoins among the three tools but it is also the one with the assembly characterized by the lowest NG50 and the lowest corrected NG50.</p>
        <p>In Table <xref ref-type="table" rid="T2">2</xref> we summarize the results of merging the assemblies characterized by the largest NG50 (<italic>i.e</italic>., Allpaths-LG and SOAPdenovo), without considering assemblies' correctness. The purpose of this test is to demonstrate how important the input assembly choice is. In particular, when using SOAPdenovo as master (<italic>i.e</italic>., assembly with largest NG50) and Allpaths-LG as slave, all the three assemblies reconciliation tools return an assembly characterized by a corrected NG50 lower than master's one. Using Allpaths-LG as master, GAA and ZORRO returned a large number of duplicated regions (providing an assembly much longer than the reference) and they both introduced more misjoins than GAM-NGS.</p>
        <p>Table <xref ref-type="table" rid="T4">4</xref> shows running times of the three assembly reconciliation tools. If we consider the CPU time, then GAM-NGS is definitely affected by the required reads alignment phase. Instead, if we consider wall time, GAM-NGS's performance is in line with the other tools.</p>
        <table-wrap id="T4" position="float">
          <label>Table 4</label>
          <caption>
            <p>Assembly reconciliation tools performances on Staphylococcus aureus.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="center">Tool</th>
                <th align="center">User (CPU) time</th>
                <th align="center">Wall clock time</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="3">
                  <italic>Allpaths-LG + MSR-CA</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 10' 19" + 51"</td>
                <td align="center">4' 10" + 17"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">1' 20"</td>
                <td align="center">1' 20"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">3' 04"</td>
                <td align="center">3' 04"</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>MSR-CA + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 10' 19" + 49"</td>
                <td align="center">4' 10" + 17"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">1' 11"</td>
                <td align="center">1' 11"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">14' 18"</td>
                <td align="center">14' 18"</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>Allpaths-LG + SOAPdenovo</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 10' 53" + 33"</td>
                <td align="center">5' 12" + 24"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">5' 04"</td>
                <td align="center">5' 04"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">7' 08"</td>
                <td align="center">7' 08"</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>SOAPdenovo + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 10' 53" + 34"</td>
                <td align="center">5' 12" + 25"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">4' 49"</td>
                <td align="center">4' 49"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">9' 52"</td>
                <td align="center">9' 52"</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>In GAM-NGS's entries the first value indicates the time spent in alignment phase, while the second one is GAM-NGS's run time.</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <title>Rhodobacter sphaeroides</title>
        <p>For <italic>Rhodobacter sphaeroides</italic>' dataset we chose to merge Allpaths-LG and MSR-CA assemblies. Looking at their FRCurves in Figure <xref ref-type="fig" rid="F7">7</xref>, they seem the best two assemblies to be merged. CABOG and Bambus2 also provide sharp FRCurves on this dataset, however both assemblies are characterized by a large number of short contigs with many features (<italic>i.e</italic>., long tail), and they both fail to fully assemble the genome, as the total assembly's length is approximately 90% of the expected one. For these reasons we discarded CABOG and Bambus2.</p>
        <fig id="F7" position="float">
          <label>Figure 7</label>
          <caption>
            <p><bold>FRCurve of Rhodobacter sphaeroides' assemblies</bold>. Allpaths-LG and MSR-CA assemblies reach earlier a coverage close to 100% with the smallest number of features and, thus, they where chosen to be merged. CABOG's assembly seems better but provides a low coverage of the genome and, for this reason, it was not taken into account.</p>
          </caption>
          <graphic xlink:href="1471-2105-14-S7-S6-7"/>
        </fig>
        <p>As shown in Table <xref ref-type="table" rid="T5">5</xref>, using Allpaths-LG as master assembly, we were able to increase its NG50 by ~10 Kbp. While GAA behaved better than GAM-NGS in terms of corrected NG50 as its value is ~3Kbp longer, our tool behaved slightly better with consideration of duplication and compression events. Also in this case, ZORRO has worse performance among tested tools in terms of contiguity (both NG50 and corrected NG50). More importantly, Table <xref ref-type="table" rid="T6">6</xref> shows that both GAM-NGS and GAA were able to lower the number of misjoins, while ZORRO introduced a relocation.</p>
        <table-wrap id="T5" position="float">
          <label>Table 5</label>
          <caption>
            <p>GAGE statistics (contiguity, duplication and compression) on Rhodobacter sphaeroides.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">Assembler</th>
                <th align="left">Ctg num</th>
                <th align="left">NG50 (kb)</th>
                <th align="left">NG50 corr. (kb)</th>
                <th align="left">Assembly size (%)</th>
                <th align="left">Chaff size (%)</th>
                <th align="left">Unaligned ref (%)</th>
                <th align="left">Unaligned asm (%)</th>
                <th align="left">Dupl (%)</th>
                <th align="left">Comp (%)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="left">204</td>
                <td align="left">42.45</td>
                <td align="left">34.42</td>
                <td align="left">99.68</td>
                <td align="left">0.01</td>
                <td align="left">0.45</td>
                <td align="left">0.01</td>
                <td align="left">0.38</td>
                <td align="left">0.31</td>
              </tr>
              <tr>
                <td align="left">MSR-CA</td>
                <td align="left">395</td>
                <td align="left">22.12</td>
                <td align="left">19.08</td>
                <td align="left">97.02</td>
                <td align="left">0.01</td>
                <td align="left">3.47</td>
                <td align="left">0.04</td>
                <td align="left">1.05</td>
                <td align="left">0.53</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>Allpaths-LG + MSR-CA</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">168</td>
                <td align="left">51.12</td>
                <td align="left">37.88</td>
                <td align="left">99.97</td>
                <td align="left">0.00</td>
                <td align="left">0.28</td>
                <td align="left">0.01</td>
                <td align="left">0.61</td>
                <td align="left">0.31</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">164</td>
                <td align="left">53.82</td>
                <td align="left">40.55</td>
                <td align="left">100.07</td>
                <td align="left">0.01</td>
                <td align="left">0.20</td>
                <td align="left">0.01</td>
                <td align="left">0.63</td>
                <td align="left">0.32</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">216</td>
                <td align="left">38.87</td>
                <td align="left">30.64</td>
                <td align="left">100.41</td>
                <td align="left">0.03</td>
                <td align="left">0.36</td>
                <td align="left">0.02</td>
                <td align="left">0.43</td>
                <td align="left">0.48</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>MSR-CA + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">199</td>
                <td align="left">49.61</td>
                <td align="left">37.88</td>
                <td align="left">97.95</td>
                <td align="left">0.01</td>
                <td align="left">3.10</td>
                <td align="left">0.04</td>
                <td align="left">1.58</td>
                <td align="left">0.61</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">177</td>
                <td align="left">54.71</td>
                <td align="left">40.55</td>
                <td align="left">99.74</td>
                <td align="left">0.01</td>
                <td align="left">1.61</td>
                <td align="left">0.04</td>
                <td align="left">1.08</td>
                <td align="left">0.35</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">206</td>
                <td align="left">44.61</td>
                <td align="left">38.79</td>
                <td align="left">101.14</td>
                <td align="left">0.09</td>
                <td align="left">0.21</td>
                <td align="left">0.06</td>
                <td align="left">1.64</td>
                <td align="left">0.25</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left">Bambus2</td>
                <td align="left">177</td>
                <td align="left">93.19</td>
                <td align="left">12.78</td>
                <td align="left">94.97</td>
                <td align="left">0.00</td>
                <td align="left">4.92</td>
                <td align="left">0.01</td>
                <td align="left">0.00</td>
                <td align="left">0.24</td>
              </tr>
              <tr>
                <td align="left">SOAPdenovo</td>
                <td align="left">202</td>
                <td align="left">131.68</td>
                <td align="left">14.34</td>
                <td align="left">100.29</td>
                <td align="left">0.44</td>
                <td align="left">0.76</td>
                <td align="left">0.01</td>
                <td align="left">1.30</td>
                <td align="left">0.46</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>Bambus2 + SOAPdenovo</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">83</td>
                <td align="left">149.75</td>
                <td align="left">14.16</td>
                <td align="left">98.32</td>
                <td align="left">0.00</td>
                <td align="left">3.02</td>
                <td align="left">0.00</td>
                <td align="left">1.59</td>
                <td align="left">0.63</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">100</td>
                <td align="left">194.16</td>
                <td align="left">14.74</td>
                <td align="left">98.35</td>
                <td align="left">0.13</td>
                <td align="left">2.28</td>
                <td align="left">0.01</td>
                <td align="left">0.63</td>
                <td align="left">0.58</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">711</td>
                <td align="left">16.56</td>
                <td align="left">13.18</td>
                <td align="left">100.48</td>
                <td align="left">0.89</td>
                <td align="left">0.66</td>
                <td align="left">0.25</td>
                <td align="left">1.05</td>
                <td align="left">0.59</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>SOAPdenovo + Bambus2</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">177</td>
                <td align="left">154.47</td>
                <td align="left">15.17</td>
                <td align="left">100.41</td>
                <td align="left">0.42</td>
                <td align="left">0.82</td>
                <td align="left">0.01</td>
                <td align="left">1.67</td>
                <td align="left">0.48</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">174</td>
                <td align="left">188.18</td>
                <td align="left">14.54</td>
                <td align="left">100.35</td>
                <td align="left">0.44</td>
                <td align="left">0.76</td>
                <td align="left">0.01</td>
                <td align="left">1.38</td>
                <td align="left">0.48</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">720</td>
                <td align="left">16.56</td>
                <td align="left">12.78</td>
                <td align="left">100.48</td>
                <td align="left">0.84</td>
                <td align="left">0.69</td>
                <td align="left">0.24</td>
                <td align="left">1.14</td>
                <td align="left">0.56</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>For each assembler we report the number of contigs greater than 200 bp (Ctg), the NG50, the corrected NG50 (NG50 computed breaking the assembly at each error), assembly's total length, the percentage of short (Chaff) contigs, the length of reference's regions which cannot be found in the assembly (Unaligned ref), the length of assembly's regions that cannot be found in the reference (Unaligned asm), the percentage of duplicated (Dupl) and compressed (Comp) regions in the assembly. All the percentages in the table are computed with respect to the true genome size.</p>
          </table-wrap-foot>
        </table-wrap>
        <table-wrap id="T6" position="float">
          <label>Table 6</label>
          <caption>
            <p>GAGE statistics (SNPs, indels and misjoins) on Rhodobacter sphaeroides.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">Assembler</th>
                <th align="left">SNPs</th>
                <th align="left">Indels &lt; 5 bp</th>
                <th align="left">Indels â¥ 5 bp</th>
                <th align="left">Misjoins</th>
                <th align="left">Inv</th>
                <th align="left">Reloc</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="left">218</td>
                <td align="left">150</td>
                <td align="left">37</td>
                <td align="left">6</td>
                <td align="left">0</td>
                <td align="left">6</td>
              </tr>
              <tr>
                <td align="left">MSR-CA</td>
                <td align="left">807</td>
                <td align="left">179</td>
                <td align="left">32</td>
                <td align="left">9</td>
                <td align="left">1</td>
                <td align="left">8</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>Allpaths-LG + MSR-CA</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">250</td>
                <td align="left">157</td>
                <td align="left">44</td>
                <td align="left">5</td>
                <td align="left">0</td>
                <td align="left">5</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">345</td>
                <td align="left">162</td>
                <td align="left">48</td>
                <td align="left">5</td>
                <td align="left">0</td>
                <td align="left">5</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">263</td>
                <td align="left">153</td>
                <td align="left">35</td>
                <td align="left">7</td>
                <td align="left">0</td>
                <td align="left">7</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>MSR-CA + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">842</td>
                <td align="left">198</td>
                <td align="left">46</td>
                <td align="left">10</td>
                <td align="left">1</td>
                <td align="left">9</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">802</td>
                <td align="left">187</td>
                <td align="left">49</td>
                <td align="left">10</td>
                <td align="left">1</td>
                <td align="left">9</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">928</td>
                <td align="left">215</td>
                <td align="left">29</td>
                <td align="left">7</td>
                <td align="left">0</td>
                <td align="left">7</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
                <td/>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left">Bambus2</td>
                <td align="left">189</td>
                <td align="left">149</td>
                <td align="left">363</td>
                <td align="left">5</td>
                <td align="left">0</td>
                <td align="left">5</td>
              </tr>
              <tr>
                <td align="left">SOAPdenovo</td>
                <td align="left">534</td>
                <td align="left">155</td>
                <td align="left">404</td>
                <td align="left">8</td>
                <td align="left">0</td>
                <td align="left">8</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>Bambus2 + SOAPdenovo</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">431</td>
                <td align="left">173</td>
                <td align="left">406</td>
                <td align="left">10</td>
                <td align="left">0</td>
                <td align="left">10</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">581</td>
                <td align="left">177</td>
                <td align="left">404</td>
                <td align="left">10</td>
                <td align="left">0</td>
                <td align="left">10</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">546</td>
                <td align="left">196</td>
                <td align="left">84</td>
                <td align="left">8</td>
                <td align="left">0</td>
                <td align="left">8</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>SOAPdenovo+ Bambus2</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">534</td>
                <td align="left">153</td>
                <td align="left">393</td>
                <td align="left">8</td>
                <td align="left">0</td>
                <td align="left">8</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">532</td>
                <td align="left">155</td>
                <td align="left">407</td>
                <td align="left">8</td>
                <td align="left">0</td>
                <td align="left">8</td>
              </tr>
              <tr>
                <td align="left">ZORRO</td>
                <td align="left">513</td>
                <td align="left">175</td>
                <td align="left">111</td>
                <td align="left">9</td>
                <td align="left">0</td>
                <td align="left">9</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>For each assembly we show the number of SNPs, the number of indels shorter than 5 bp and greater (or equal) than 5 bp. The number of misjoins is computed as the sum of inversions (parts of contigs reversed with respect to the reference genome) and relocations (rearrangements moving a contig within/between chromosomes).</p>
          </table-wrap-foot>
        </table-wrap>
        <p>When using MSR-CA as master assembly, GAM-NGS was able to increase MSR-CA's NG50 by ~27 Kbp, providing a longer corrected NG50 with respect to the two merged assemblies. Also with this master/slave combination, GAA's assembly is characterized by a corrected NG50 slightly better than GAM-NGS's one. Both GAM-NGS and GAA introduced one additional misjoin with respect to MSR-CA, while ZORRO was able to correct the master assembly.</p>
        <p>Table <xref ref-type="table" rid="T5">5</xref> and Table <xref ref-type="table" rid="T6">6</xref> also show the results of merging the assemblies with the highest NG50 (<italic>i.e</italic>., Bambus2 and SOAPdenovo). GAM-NGS and GAA have very similar statistics and for both of them the difference between the NG50 and its corrected value is substantial. ZORRO, instead, tends to output a highly fragmented assembly lowering the number of indels but without correcting any misjoin.</p>
        <p>Table <xref ref-type="table" rid="T7">7</xref> shows running times of the three assembly reconciliation tools. Also in this dataset, if we consider the CPU time, then GAM-NGS is definitely affected by the required reads alignment phase and requires much more time than GAA and ZORRO. If we consider wall time, instead, GAM-NGS runs in less than 8 minutes, comparable, if not better, than the other tools.</p>
        <table-wrap id="T7" position="float">
          <label>Table 7</label>
          <caption>
            <p>Assembly reconciliation tools performances on Rhodobacter sphaeroides.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="center">Tool</th>
                <th align="center">User (CPU) time</th>
                <th align="center">Wall clock time</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="3">
                  <italic>Allpaths-LG + MSR-CA</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 21' 09" + 2' 20"</td>
                <td align="center">5' 03" + 43"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">17"</td>
                <td align="center">17"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">14' 46"</td>
                <td align="center">14' 46"</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>MSR-CA + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 21' 09" + 2' 19"</td>
                <td align="center">5' 03" + 48"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">19"</td>
                <td align="center">19"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">16' 15"</td>
                <td align="center">16' 15"</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>Bambus2 + SOAPdenovo</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 26' 47" + 2' 35"</td>
                <td align="center">5' 53" + 1' 13"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">3' 59"</td>
                <td align="center">3' 59"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">8' 22"</td>
                <td align="center">8' 22'</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>SOAPdenovo + Bambus2</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">1h 26' 47" + 2' 23"</td>
                <td align="center">5' 53" + 1' 09"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">3' 47"</td>
                <td align="center">3' 47"</td>
              </tr>
              <tr>
                <td align="center">ZORRO</td>
                <td align="center">7' 44"</td>
                <td align="center">7' 44"</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>In GAM-NGS's entries the first value indicates the time spent in alignment phase, while the second one is GAM-NGS's run time.</p>
          </table-wrap-foot>
        </table-wrap>
      </sec>
      <sec>
        <title>Human chromosome 14</title>
        <p>These first two bacteria datasets are small and time might not be considered an issue (each assembly reconciliation tool was able to run in reasonable time). The third GAGE dataset on which we tested our tool was the human chromosome 14 (characterized by an ungapped 88 Mbp size). This dataset is not only ~20 times larger than the other two, but it is also more complex (<italic>e.g</italic>., containing repeats, afflicted by heterozygosity). Moreover, in this scenario GAM-NGS starts to show its real potential: assembling large datasets using a relatively low amount of resources, while preserving correctness.</p>
        <p>ZORRO output is not shown in Table <xref ref-type="table" rid="T8">8</xref> as, after two weeks of computation, it was not able to provide an output. Thus, we limit our evaluation to only GAM-NGS and GAA.</p>
        <table-wrap id="T8" position="float">
          <label>Table 8</label>
          <caption>
            <p>GAGE statistics (contiguity, duplication and compression) on human chromosome 14.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">Assembler</th>
                <th align="left">Ctg num</th>
                <th align="left">NG50 (kb)</th>
                <th align="left">NG50 corr. (kb)</th>
                <th align="left">Assembly size (%)</th>
                <th align="left">Chaff size (%)</th>
                <th align="left">Unaligned ref (%)</th>
                <th align="left">Unaligned asm (%)</th>
                <th align="left">Dupl (%)</th>
                <th align="left">Comp (%)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="left">4529</td>
                <td align="left">27.96</td>
                <td align="left">15.69</td>
                <td align="left">78.67</td>
                <td align="left">0.02</td>
                <td align="left">20.03</td>
                <td align="left">0.04</td>
                <td align="left">0.23</td>
                <td align="left">2.11</td>
              </tr>
              <tr>
                <td align="left">CABOG</td>
                <td align="left">3361</td>
                <td align="left">35.86</td>
                <td align="left">18.63</td>
                <td align="left">80.34</td>
                <td align="left">0.02</td>
                <td align="left">19.13</td>
                <td align="left">0.07</td>
                <td align="left">0.13</td>
                <td align="left">1.39</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>Allpaths-LG + CABOG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">2235</td>
                <td align="left">61.64</td>
                <td align="left">21.91</td>
                <td align="left">80.94</td>
                <td align="left">0.02</td>
                <td align="left">19.08</td>
                <td align="left">0.10</td>
                <td align="left">0.88</td>
                <td align="left">1.43</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">1989</td>
                <td align="left">69.40</td>
                <td align="left">23.04</td>
                <td align="left">82.08</td>
                <td align="left">0.02</td>
                <td align="left">18.92</td>
                <td align="left">0.09</td>
                <td align="left">1.52</td>
                <td align="left">1.39</td>
              </tr>
              <tr>
                <td colspan="10">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="10">
                  <italic>CABOG + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">1979</td>
                <td align="left">66.29</td>
                <td align="left">23.63</td>
                <td align="left">81.00</td>
                <td align="left">0.02</td>
                <td align="left">19.00</td>
                <td align="left">0.06</td>
                <td align="left">0.74</td>
                <td align="left">1.37</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">1903</td>
                <td align="left">70.39</td>
                <td align="left">23.89</td>
                <td align="left">81.89</td>
                <td align="left">0.02</td>
                <td align="left">18.98</td>
                <td align="left">0.07</td>
                <td align="left">1.21</td>
                <td align="left">1.36</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>For each assembler we report the number of contigs greater than 200 bp (Ctg), the NG50, the corrected NG50 (NG50 computed breaking the assembly at each error), assembly's total length, the percentage of short (Chaff) contigs, the length of reference's regions which cannot be found in the assembly (Unaligned ref), the length of assembly's regions that cannot be found in the reference (Unaligned asm), the percentage of duplicated (Dupl) and compressed (Comp) regions in the assembly. All the statistics were computed using the same script with the gapped reference genome (107,349,540 bp).</p>
          </table-wrap-foot>
        </table-wrap>
        <p>For this dataset we chose to merge Allpaths-LG and CABOG assemblies. Looking at their FRCurves in Figure <xref ref-type="fig" rid="F8">8</xref>, they are clearly the best two assemblies to be merged. GAGE's statistics also show that Allpaths-LG and CABOG assemblers produce the best two assemblies for this dataset (<italic>i.e</italic>., highest NG50 and low number of misjoins).</p>
        <fig id="F8" position="float">
          <label>Figure 8</label>
          <caption>
            <p><bold>FRCurve of Human chromosome 14 assemblies</bold>. FRCurve of human chromosome 14. Allpaths-LG and CABOG contain definitely the lowest numbers of features with respect to the other assemblers.</p>
          </caption>
          <graphic xlink:href="1471-2105-14-S7-S6-8"/>
        </fig>
        <p>Table <xref ref-type="table" rid="T9">9</xref> shows how, using Allpaths-LG as master assembly, GAM-NGS was able to increase NG50 by ~ 32 Kbp and the corrected NG50 by ~ 6 Kbp. GAA returned better NG50 values but it produced more duplicated regions and it was afflicted by a larger amount of misjoins and indels compared to GAM-NGS.</p>
        <table-wrap id="T9" position="float">
          <label>Table 9</label>
          <caption>
            <p>GAGE statistics (SNPs, indels and misjoins) on human chromosome 14.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="left">Assembler</th>
                <th align="left">SNPs</th>
                <th align="left">Indels &lt; 5 bp</th>
                <th align="left">Indels â¥ 5 bp</th>
                <th align="left">Misjoins</th>
                <th align="left">Inv</th>
                <th align="left">Reloc</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left">Allpaths-LG</td>
                <td align="left">55319</td>
                <td align="left">27563</td>
                <td align="left">2558</td>
                <td align="left">101</td>
                <td align="left">44</td>
                <td align="left">57</td>
              </tr>
              <tr>
                <td align="left">CABOG</td>
                <td align="left">81151</td>
                <td align="left">28438</td>
                <td align="left">2884</td>
                <td align="left">149</td>
                <td align="left">46</td>
                <td align="left">103</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>Allpaths-LG + CABOG</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">61725</td>
                <td align="left">29936</td>
                <td align="left">2950</td>
                <td align="left">119</td>
                <td align="left">32</td>
                <td align="left">87</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">63835</td>
                <td align="left">30151</td>
                <td align="left">2990</td>
                <td align="left">123</td>
                <td align="left">29</td>
                <td align="left">94</td>
              </tr>
              <tr>
                <td colspan="7">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="7">
                  <italic>CABOG + Allpaths</italic>
                </td>
              </tr>
              <tr>
                <td align="left">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="left">79478</td>
                <td align="left">29653</td>
                <td align="left">3021</td>
                <td align="left">154</td>
                <td align="left">43</td>
                <td align="left">111</td>
              </tr>
              <tr>
                <td align="left">GAA</td>
                <td align="left">81763</td>
                <td align="left">29812</td>
                <td align="left">3008</td>
                <td align="left">134</td>
                <td align="left">31</td>
                <td align="left">103</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>For each assembly we show the number of SNPs, the number of indels shorter than 5 bp and greater (or equal) than 5 bp. The number of misjoins is computed as the sum of inversions (parts of contigs reversed with respect to the reference genome) and relocations (rearrangements moving a contig within/between chromosomes). All the statistics were computed using the same script with the gapped reference genome (107,349,540 bp).</p>
          </table-wrap-foot>
        </table-wrap>
        <p>We also want to point out that the corrected NG50 is certainly an important statistic to evaluate the improvement of a merge with respect to the master assembly but it only indicates whether the longest contigs are affected by errors and does not tell how the assembler behaves on short contigs (which are also important to assess assemblies' quality, as FRCurve demonstrates). We finally plot the FRCurve to globally estimate the quality of the merged assemblies. Figure <xref ref-type="fig" rid="F9">9</xref> shows that GAM-NGS globally behaved better and, in particular, seems to introduce less features (especially in the shortest contigs of the assembly).</p>
        <fig id="F9" position="float">
          <label>Figure 9</label>
          <caption>
            <p><bold>FRCurve of assembly reconciliation tools</bold>. FRCurve of assembly reconciliation tools on human chromosome 14, using (a) Allpaths-LG and (b) CABOG as master assembly. Despite the lower corrected NG50 (which means errors in the longest contigs), considering the whole assembly, GAM-NGS seems to behave globally better than GAA and the input assemblies.</p>
          </caption>
          <graphic xlink:href="1471-2105-14-S7-S6-9"/>
        </fig>
        <p>Table <xref ref-type="table" rid="T10">10</xref> shows running times of the two assembly reconciliation tools used with this dataset. GAM-NGS required about 1 hour to accomplish its task (reads' alignments included), while GAA required about 13 hours (manually running multiple BLAT alignments in parallel).</p>
        <table-wrap id="T10" position="float">
          <label>Table 10</label>
          <caption>
            <p>Assembly reconciliation tools performances on human chromosome 14.</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th align="center">Tool</th>
                <th align="center">User (CPU) time</th>
                <th align="center">Wall clock time</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td align="left" colspan="3">
                  <italic>Allpaths-LG + CABOG</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">4h 24' 59" + 1h 14' 41"</td>
                <td align="center">45' 56" + 18' 16"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">452h 18'</td>
                <td align="center">14h 16' 4"</td>
              </tr>
              <tr>
                <td colspan="3">
                  <hr/>
                </td>
              </tr>
              <tr>
                <td align="left" colspan="3">
                  <italic>CABOG + Allpaths-LG</italic>
                </td>
              </tr>
              <tr>
                <td align="center">
                  <bold>GAM-NGS</bold>
                </td>
                <td align="center">4h 24' 59" + 1h 12' 35"</td>
                <td align="center">45' 56" + 19' 21"</td>
              </tr>
              <tr>
                <td align="center">GAA</td>
                <td align="center">467h 40'</td>
                <td align="center">13h 44' 58'</td>
              </tr>
            </tbody>
          </table>
          <table-wrap-foot>
            <p>In GAM-NGS's entries the first value indicates the time spent in alignment phase, while the second one is GAM-NGS's run time. Due to the size of the assemblies, we parallelized BLAT's execution to get GAA's output in a reasonable time. ZORRO results are not shown due to the fact that the tool cannot run in parallel and, after more than a week of computation, was still not able to provide an output.</p>
          </table-wrap-foot>
        </table-wrap>
        <p>This characteristic may not be very important for short genomes but, as the size increases, it becomes of crucial importance. As we will show in the tests on some large plant genomes, GAM-NGS is able to merge even 20 Gbp assemblies using a relatively low amount of memory and time.</p>
      </sec>
    </sec>
    <sec>
      <title>GAM-NGS's performances on large datasets</title>
      <p>On small datasets, all the assembly reconciliation tools provide an output in reasonable time. However, when we consider the human chromosome 14 we observe how GAA runs at least 10 times slower than GAM-NGS (if we consider also the mandatory reads' alignment step) while ZORRO, after two weeks, is not even able to provide us a partial output. This proves that the major bottleneck consists in the global alignment phase of these tools.</p>
      <p>On the contrary, GAM-NGS's approximation (using read's alignment back to the assemblies) coupled with the implementation of a weighted graph, achieves similar results in a reasonable amount of time. In order to show GAM-NGS's scalability, we tested it on three large plants genomes whose sizes vary from 227 Mbp to 20 Gbp.</p>
      <p>The first of these datasets is <italic>Prunus persica</italic>, characterized by a genome size of 227 Mbp. The best assemblies we were able to compute were produced with CLC and ABySS assemblers, which were similar in length and number of contigs. We chose to use ABySS as master, since it was more contiguous. As shown in Table <xref ref-type="table" rid="T11">11</xref>, we were able to increase NG50 (of ~3 Kbp with respect to the master) and provide a more contiguous assembly compared to both CLC and ABySS. After mapping a 65Ã coverage of Illumina paired-end reads (which required 4 hours and 37 minutes), GAM-NGS took less than 2 hours using at most 19.6 GB of RAM.</p>
      <table-wrap id="T11" position="float">
        <label>Table 11</label>
        <caption>
          <p>GAM-NGS's contiguity statistics on large plants datasets</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="center">Assembler</th>
              <th align="center">Total Length (Kbp)</th>
              <th align="center">Contigs</th>
              <th align="center">N50 (bp)</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left" colspan="4">
                <italic>Prunus persica</italic>
              </td>
            </tr>
            <tr>
              <td align="center">ABySS (M)</td>
              <td align="center">177,460</td>
              <td align="center">33,949</td>
              <td align="center">10,895</td>
            </tr>
            <tr>
              <td align="center">CLC (S)</td>
              <td align="center">179,151</td>
              <td align="center">41,684</td>
              <td align="center">8,654</td>
            </tr>
            <tr>
              <td align="center">
                <bold>GAM-NGS</bold>
              </td>
              <td align="center">
                <bold>184,735</bold>
              </td>
              <td align="center">
                <bold>27,445</bold>
              </td>
              <td align="center">
                <bold>13,410</bold>
              </td>
            </tr>
            <tr>
              <td align="left" colspan="4">
                <italic>Populus nigra</italic>
              </td>
            </tr>
            <tr>
              <td align="center">CLC (M)</td>
              <td align="center">339,551</td>
              <td align="center">104,432</td>
              <td align="center">6,130</td>
            </tr>
            <tr>
              <td align="center">ABySS (S)</td>
              <td align="center">296,245</td>
              <td align="center">83,564</td>
              <td align="center">5,357</td>
            </tr>
            <tr>
              <td align="center">
                <bold>GAM-NGS</bold>
              </td>
              <td align="center">
                <bold>359,795</bold>
              </td>
              <td align="center">
                <bold>78,366</bold>
              </td>
              <td align="center">
                <bold>10,018</bold>
              </td>
            </tr>
          </tbody>
        </table>
      </table-wrap>
      <p>The second large dataset we used is <italic>Populus nigra</italic>, characterized by a genome size of ~423 Mbp. Also in this case, as for <italic>Prunus persica</italic>, the assemblies we had at our disposal were made with CLC and ABySS. This time, CLC's assembler looked better for its total length and NG50 and, thus, we decided to use it as master. As shown in Table <xref ref-type="table" rid="T11">11</xref>, even with this dataset, we were able to increase NG50 (by ~4 Kbp with respect to the master) and to provide a more contiguous assembly. To perform the mandatory alignment step we used a 80Ã coverage of Illumina paired-end reads, which required about 8 hours. Then, GAM-NGS took less than 4 hours using at most 34.5 GB of RAM to perform the merge. In order to save memory we could have decreased the reads coverage (at least 30Ã is suggested at the cost of a lower assembly improvement).</p>
      <p>As a demonstration of GAM-NGS's flexibility, consider that GAM-NGS has also been used to obtain an assembly of the 20 Gbp genome of <italic>Picea abies</italic>, where performing a global alignment is impracticable.</p>
      <p>In this scenario, the idea was to improve a Whole Genome Shotgun (WGS) assembly <inline-formula><mml:math id="M52" name="1471-2105-14-S7-S6-i29" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>W</mml:mi><mml:mi>G</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> with a set of fosmid pools <inline-formula><mml:math id="M53" name="1471-2105-14-S7-S6-i30" overflow="scroll"><mml:mi mathvariant="script">F</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> sampled from the same genome. Each fosmid pool was sequenced and assembled separately using a 80Ã coverage. Then, the 50Ã coverage of Illumina reads used to assemble <inline-formula><mml:math id="M54" name="1471-2105-14-S7-S6-i31" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>W</mml:mi><mml:mi>G</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> has been mapped on both <inline-formula><mml:math id="M55" name="1471-2105-14-S7-S6-i32" overflow="scroll"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mrow><mml:mi>W</mml:mi><mml:mi>G</mml:mi><mml:mi>S</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> and <inline-formula><mml:math id="M56" name="1471-2105-14-S7-S6-i33" overflow="scroll"><mml:mi mathvariant="script">F</mml:mi><mml:mi mathvariant="script">P</mml:mi><mml:mtext>Â </mml:mtext></mml:math></inline-formula> for the blocks construction phase. GAM-NGS was able to run in less than 3 days (6 days, taking into account also the mandatory alignment phase) using at most 612 GB of RAM. These is certainly a low amount of resources, considering the dataset's size (almost a Terabyte) and that building the WGS assembly took one week and required more than 1 TB of RAM. Furthermore, GAM-NGS was able to increase the assembly length by 1.4 Gbp of the estimated genome size with a NG50 that was 1.42 times greater than the one of the WGS assembly (data not yet published and not yet publicly available, we were allowed to show only the increment of the statistics with respect to the assembly we wanted to improve).</p>
    </sec>
  </sec>
  <sec>
    <title>Conclusions and future work</title>
    <p>GAM-NGS is a <italic>de novo </italic>graph-based assembler which is able to merge assemblies using a (relatively) low amount of computational resources. Its strength relies on the fact that it does not need a global alignment to be performed and that makes our strategy unique among the other assembly reconciliation tools. In fact, GAM-NGS finds regions belonging to the same DNA <italic>locus </italic>using reads aligned back to the assembly, which is an almost mandatory analysis step in all <italic>de novo </italic>assembly projects. The order in which these regions have been assembled is exploited to build a locally weighted graph that GAM-NGS uses to fill gaps between sequences and to correct putative mis-assemblies. Moreover, mapping reads to the assemblies (thus, without knowing how they have been placed by the assemblers) may lead to complex graph sub-structures (<italic>e.g</italic>., bubbles, bifurcations, cycles) due to alignment errors or chimeric assembly sequences. Resolving these types of sub-graphs is not a trivial task, as in certain regions there may be lack of any possible evidence. In these kind of situations (which, for instance, represented 40% of the problematic cases for the human GAGE's dataset) we decided to be as conservative as possible, returning the sequences of one of the assemblies (elected as master by the user).</p>
    <p>In this paper we validated our tool using GAGE [<xref ref-type="bibr" rid="B10">10</xref>] datasets, proving its effectiveness and reliability. Results showed that, for each GAGE dataset, GAM-NGS was always able to improve master assembly's NG50 and corrected NG50 (<italic>i.e</italic>., NG50 of the assembly broken in correspondence of the errors), thus providing a globally more correct output (even if some errors were carried by the slave assembly). Although GAA provided better statistics in some cases, GAM-NGS gives comparable results and offers excellent scalability. GAM-NGS yields an improved assembly in reasonable time on large datasets (especially if used on a multicore computer) for which competing tools are impractical. In particular, we showed GAM-NGS's scalability on large (plant) datasets (genome size up to 20 Gbp), where our tool required a low amount of computational resources compared to the dataset sizes and assembly requirements.</p>
    <p>The presented algorithm performs a merge of two assemblies, returning the sequences of one of them in those problematic regions where we are not able to determine the most correct sequence between the two assemblies. We plan to investigate the use of further weights in AG that will allow us to solve more "difficult" regions, allowing us to completely replace the master-slave approach with a strategy that provides a more correct output.</p>
    <p>We also plan to exploit GAM-NGS in a strategy thought to improve and correct a Whole Genome Shotgun assembly along with multiple sets of well assembled fosmid (or BAC) pools which constitute a hierarchically simplified version of the same genome.</p>
  </sec>
  <sec>
    <title>Availability and requirements</title>
    <p>GAM-NGS's source can be freely downloaded from <ext-link ext-link-type="uri" xlink:href="http://github.com/vice87/gam-ngs">http://github.com/vice87/gam-ngs</ext-link>. It has been written in C++ and has been tested on Linux operating systems.</p>
  </sec>
  <sec>
    <title>Abbreviations</title>
    <p>NGS: Next Generation Sequencing; AG: Assemblies Graph; CG: Contigs Graph; WGS: Whole Genome Shotgun.</p>
  </sec>
  <sec>
    <title>Competing interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec>
    <title>Authors' contributions</title>
    <p>RV, FV, SS, LA and AP equally contributed to the idea and to the design of the algorithm and the experiments. RV developed the tool. RV and SS performed the experiments. RV, FV, SS, LA and AP wrote the paper.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material content-type="local-data" id="S1">
      <caption>
        <title>Additional file 1</title>
        <p><bold>Commands run in the experiments</bold>. A brief description of the commands we used to carry out the merging on all the datasets.</p>
      </caption>
      <media xlink:href="1471-2105-14-S7-S6-S1.pdf">
        <caption>
          <p>Click here for file</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Acknowledgements</title>
    <p>We acknowledge support from Epigenomics Flagship Project EPIGEN. We would also like to thank all the Spruce Assembly Project, in particular BjÃ¶rn Nystedt, Anna Wetterbom, Nathaniel Street, and Prof. Joakim Lundeberg for their constant feedback and advice. The work was partially supported by Knut and Alice Wallenberg Foundation.</p>
  </sec>
  <sec>
    <title>Declarations</title>
    <p>The publication costs for this article were supported by Epigenomics Flagship Project (Progetto Bandiera Epigenomica) EPIGEN.</p>
    <p>This article has been published as part of <italic>BMC Bioinformatics </italic>Volume 14 Supplement 7, 2013: <bold>Italian Society of Bioinformatics (BITS): Annual Meeting 2012</bold>. The full contents of the supplement are available online at <ext-link ext-link-type="uri" xlink:href="http://www.biomedcentral.com/bmcbioinformatics/supplements/14/S7">http://www.biomedcentral.com/bmcbioinformatics/supplements/14/S7</ext-link></p>
  </sec>
  <ref-list>
    <ref id="B1">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Mardis</surname>
          <given-names>ER</given-names>
        </name>
        <article-title>The impact of next-generation sequencing technology on genetics</article-title>
        <source>Trends in genetics: TIG</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>3</issue>
        <fpage>133</fpage>
        <lpage>41</lpage>
        <ext-link ext-link-type="uri" xlink:href="http://www.ncbi.nlm.nih.gov/pubmed/18262675">http://www.ncbi.nlm.nih.gov/pubmed/18262675</ext-link>
        <pub-id pub-id-type="doi">10.1016/j.tig.2007.12.007</pub-id>
        <?supplied-pmid 18262675?>
        <pub-id pub-id-type="pmid">18262675</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B2">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Fan</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Tian</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Zhu</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>He</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Cai</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Huang</surname>
          <given-names>Q</given-names>
        </name>
        <collab>Q</collab>
        <article-title>The sequence and de novo assembly of the giant panda genome</article-title>
        <source>Nature</source>
        <year>2009</year>
        <volume>463</volume>
        <fpage>311</fpage>
        <lpage>317</lpage>
        <comment>January</comment>
        <?supplied-pmid 20010809?>
        <pub-id pub-id-type="pmid">20010809</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B3">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Dalloul</surname>
          <given-names>Ra</given-names>
        </name>
        <name>
          <surname>Long</surname>
          <given-names>Ja</given-names>
        </name>
        <name>
          <surname>Zimin</surname>
          <given-names>AV</given-names>
        </name>
        <name>
          <surname>Aslam</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Beal</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Ann Blomberg</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Bouffard</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Burt</surname>
          <given-names>DW</given-names>
        </name>
        <name>
          <surname>Crasta</surname>
          <given-names>O</given-names>
        </name>
        <name>
          <surname>Crooijmans</surname>
          <given-names>RPMa</given-names>
        </name>
        <name>
          <surname>Cooper</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Coulombe</surname>
          <given-names>Ra</given-names>
        </name>
        <name>
          <surname>De</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Delany</surname>
          <given-names>ME</given-names>
        </name>
        <name>
          <surname>Dodgson</surname>
          <given-names>JB</given-names>
        </name>
        <name>
          <surname>Dong</surname>
          <given-names>JJ</given-names>
        </name>
        <name>
          <surname>Evans</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Frederickson</surname>
          <given-names>KM</given-names>
        </name>
        <name>
          <surname>Flicek</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Florea</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Folkerts</surname>
          <given-names>O</given-names>
        </name>
        <name>
          <surname>Groenen</surname>
          <given-names>MaM</given-names>
        </name>
        <name>
          <surname>Harkins</surname>
          <given-names>TT</given-names>
        </name>
        <name>
          <surname>Herrero</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Hoffmann</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Megens</surname>
          <given-names>HJ</given-names>
        </name>
        <name>
          <surname>Jiang</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>de Jong</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Kaiser</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Kim</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Kim</surname>
          <given-names>KW</given-names>
        </name>
        <name>
          <surname>Kim</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Langenberger</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Lee</surname>
          <given-names>MK</given-names>
        </name>
        <name>
          <surname>Lee</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Mane</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Marcais</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Marz</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>McElroy</surname>
          <given-names>AP</given-names>
        </name>
        <name>
          <surname>Modise</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Nefedov</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Notredame</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Paton</surname>
          <given-names>IR</given-names>
        </name>
        <name>
          <surname>Payne</surname>
          <given-names>WS</given-names>
        </name>
        <name>
          <surname>Pertea</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Prickett</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Puiu</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Qioa</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Raineri</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Ruffier</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Scheuring</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Schmidt</surname>
          <given-names>CJ</given-names>
        </name>
        <name>
          <surname>Schroeder</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Searle</surname>
          <given-names>SMJ</given-names>
        </name>
        <name>
          <surname>Smith</surname>
          <given-names>EJ</given-names>
        </name>
        <name>
          <surname>Smith</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Sonstegard</surname>
          <given-names>TS</given-names>
        </name>
        <name>
          <surname>Stadler</surname>
          <given-names>PF</given-names>
        </name>
        <name>
          <surname>Tafer</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Tu</surname>
          <given-names>ZJ</given-names>
        </name>
        <name>
          <surname>Van Tassell</surname>
          <given-names>CP</given-names>
        </name>
        <name>
          <surname>Vilella</surname>
          <given-names>AJ</given-names>
        </name>
        <name>
          <surname>Williams</surname>
          <given-names>KP</given-names>
        </name>
        <name>
          <surname>Yorke</surname>
          <given-names>Ja</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>HB</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Zhang</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Reed</surname>
          <given-names>KM</given-names>
        </name>
        <article-title>Multi-Platform Next-Generation Sequencing of the Domestic Turkey (Meleagris gallopavo): Genome Assembly and Analysis</article-title>
        <source>PLoS Biology</source>
        <year>2010</year>
        <volume>8</volume>
        <issue>9</issue>
        <fpage>e1000475</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pbio.1000475</pub-id>
        <?supplied-pmid 20838655?>
        <pub-id pub-id-type="pmid">20838655</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B4">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Nagarajan</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Parametric complexity of sequence assembly: Theory and applications to next generation sequencing</article-title>
        <source>Journal of Computational Biology</source>
        <year>2009</year>
        <volume>16</volume>
        <fpage>897</fpage>
        <lpage>908</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0005</pub-id>
        <?supplied-pmid 19580519?>
        <pub-id pub-id-type="pmid">19580519</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B5">
      <mixed-citation publication-type="other">
        <name>
          <surname>Nowrousian</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Stajich</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Chu</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Engh</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Espagne</surname>
          <given-names>E</given-names>
        </name>
        <name>
          <surname>Halliday</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Kamerewerd</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Kempken</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Knab</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Kuo</surname>
          <given-names>HC</given-names>
        </name>
        <name>
          <surname>Osiewacz</surname>
          <given-names>HD</given-names>
        </name>
        <name>
          <surname>Poggeler</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Read</surname>
          <given-names>ND</given-names>
        </name>
        <name>
          <surname>Seiler</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Smith</surname>
          <given-names>KM</given-names>
        </name>
        <name>
          <surname>Zickler</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Kuck</surname>
          <given-names>U</given-names>
        </name>
        <name>
          <surname>Freitag</surname>
          <given-names>M</given-names>
        </name>
        <article-title>De novo Assembly of a 40 Mb eukaryotic genome from short sequence reads: Sordaria macrospora, a model organism for fungal morphogenesis</article-title>
        <source>PLoS Genet</source>
        <year>2010</year>
        <ext-link ext-link-type="uri" xlink:href="http://dx.plos.org/10.1371/journal.pgen.1000891">http://dx.plos.org/10.1371/journal.pgen.1000891</ext-link>
        <?supplied-pmid 20386741?>
        <pub-id pub-id-type="pmid">20386741</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B6">
      <mixed-citation publication-type="other">
        <name>
          <surname>Li</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Zhu</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Ruan</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Qian</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Fang</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>Shi</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Shan</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Kristiansen</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Yang</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Wang</surname>
          <given-names>J</given-names>
        </name>
        <article-title>De novo assembly of human genomes with massively parallel short read sequencing</article-title>
        <source>Genome</source>
        <year>2010</year>
        <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/content/20/2/265.full">http://genome.cshlp.org/content/20/2/265.full</ext-link>
        <?supplied-pmid 20019144?>
        <pub-id pub-id-type="pmid">20019144</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B7">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Alkan</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Sajjadian</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Eichler</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Limitations of next-generation genome sequence assembly</article-title>
        <source>Nature methods</source>
        <year>2010</year>
        <volume>8</volume>
        <fpage>61</fpage>
        <lpage>65</lpage>
        <?supplied-pmid 21102452?>
        <pub-id pub-id-type="pmid">21102452</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B8">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Birney</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Assemblies: the good, the bad, the ugly</article-title>
        <source>Nature methods</source>
        <year>2011</year>
        <volume>8</volume>
        <fpage>59</fpage>
        <lpage>60</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth0111-59</pub-id>
        <?supplied-pmid 21191376?>
        <pub-id pub-id-type="pmid">21191376</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B9">
      <mixed-citation publication-type="other">
        <name>
          <surname>Earl</surname>
          <given-names>Da</given-names>
        </name>
        <name>
          <surname>Bradnam</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>St John</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Darling</surname>
          <given-names>a</given-names>
        </name>
        <name>
          <surname>Lin</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Faas</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Yu</surname>
          <given-names>HOK</given-names>
        </name>
        <name>
          <surname>Vince</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Zerbino</surname>
          <given-names>DR</given-names>
        </name>
        <name>
          <surname>Diekhans</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Nguyen</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Nuwantha</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Sung</surname>
          <given-names>aWK</given-names>
        </name>
        <name>
          <surname>Ning</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Haimel</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Simpson</surname>
          <given-names>JT</given-names>
        </name>
        <name>
          <surname>Fronseca</surname>
          <given-names>Na</given-names>
        </name>
        <name>
          <surname>Birol</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Docking</surname>
          <given-names>TR</given-names>
        </name>
        <name>
          <surname>Ho</surname>
          <given-names>IY</given-names>
        </name>
        <name>
          <surname>Rokhsar</surname>
          <given-names>DS</given-names>
        </name>
        <name>
          <surname>Chikhi</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Lavenier</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Chapuis</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Naquin</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Maillet</surname>
          <given-names>N</given-names>
        </name>
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Kelly</surname>
          <given-names>DR</given-names>
        </name>
        <name>
          <surname>Phillippy</surname>
          <given-names>aM</given-names>
        </name>
        <name>
          <surname>Koren</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Yang</surname>
          <given-names>SP</given-names>
        </name>
        <name>
          <surname>Wu</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>Chou</surname>
          <given-names>WC</given-names>
        </name>
        <name>
          <surname>Srivastava</surname>
          <given-names>a</given-names>
        </name>
        <name>
          <surname>Shaw</surname>
          <given-names>TI</given-names>
        </name>
        <name>
          <surname>Ruby</surname>
          <given-names>JG</given-names>
        </name>
        <name>
          <surname>Skewes-Cox</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Betegon</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Dimon</surname>
          <given-names>MT</given-names>
        </name>
        <name>
          <surname>Solovyev</surname>
          <given-names>V</given-names>
        </name>
        <name>
          <surname>Kosarev</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Vorobyev</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Ramirez-Gonzalez</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Leggett</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>MacLean</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Xia</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Luo</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>L</surname>
          <given-names>Z</given-names>
        </name>
        <name>
          <surname>Xie</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Liu</surname>
          <given-names>B</given-names>
        </name>
        <name>
          <surname>Gnerre</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>MacCallum</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Przybylski</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Ribeiro</surname>
          <given-names>FJ</given-names>
        </name>
        <name>
          <surname>Yin</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Sharpe</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Hall</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Kersey</surname>
          <given-names>PJ</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Jackman</surname>
          <given-names>SD</given-names>
        </name>
        <name>
          <surname>Chapman</surname>
          <given-names>Ja</given-names>
        </name>
        <name>
          <surname>Huang</surname>
          <given-names>X</given-names>
        </name>
        <name>
          <surname>DeRisi</surname>
          <given-names>JL</given-names>
        </name>
        <name>
          <surname>Caccamo</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Li</surname>
          <given-names>Y</given-names>
        </name>
        <name>
          <surname>Jaffe</surname>
          <given-names>DB</given-names>
        </name>
        <name>
          <surname>Green</surname>
          <given-names>R</given-names>
        </name>
        <name>
          <surname>Haussler</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Korf</surname>
          <given-names>I</given-names>
        </name>
        <name>
          <surname>Paten</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Assemblathon 1: A competitive assessment of de novo short read assembly methods</article-title>
        <source>Genome Research</source>
        <year>2011</year>
        <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/cgi/doi/10.1101/gr.126599.111">http://genome.cshlp.org/cgi/doi/10.1101/gr.126599.111</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B10">
      <mixed-citation publication-type="other">
        <name>
          <surname>Salzberg</surname>
          <given-names>SL</given-names>
        </name>
        <name>
          <surname>Phillippy</surname>
          <given-names>aM</given-names>
        </name>
        <name>
          <surname>Zimin</surname>
          <given-names>aV</given-names>
        </name>
        <name>
          <surname>Puiu</surname>
          <given-names>D</given-names>
        </name>
        <name>
          <surname>Magoc</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Koren</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Treangen</surname>
          <given-names>T</given-names>
        </name>
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Delcher</surname>
          <given-names>aL</given-names>
        </name>
        <name>
          <surname>Roberts</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Marcais</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Yorke</surname>
          <given-names>Ja</given-names>
        </name>
        <article-title>GAGE: A critical evaluation of genome assemblies and assembly algorithms</article-title>
        <source>Genome Research</source>
        <year>2012</year>
        <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/cgi/doi/10.1101/gr.131383.111">http://genome.cshlp.org/cgi/doi/10.1101/gr.131383.111</ext-link>
        <?supplied-pmid 22147368?>
        <pub-id pub-id-type="pmid">22147368</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B11">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Zimin</surname>
          <given-names>AV</given-names>
        </name>
        <name>
          <surname>Smith</surname>
          <given-names>DR</given-names>
        </name>
        <name>
          <surname>Sutton</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Yorke</surname>
          <given-names>Ja</given-names>
        </name>
        <article-title>Assembly reconciliation</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2008</year>
        <volume>24</volume>
        <fpage>42</fpage>
        <lpage>5</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm542</pub-id>
        <?supplied-pmid 18057021?>
        <pub-id pub-id-type="pmid">18057021</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B12">
      <mixed-citation publication-type="other">
        <name>
          <surname>Casagrande</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Del Fabbro</surname>
          <given-names>C</given-names>
        </name>
        <name>
          <surname>Scalabrin</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Policriti</surname>
          <given-names>A</given-names>
        </name>
        <article-title>GAM: Genomic Assemblies Merger: A Graph Based Method to Integrate Different Assemblies</article-title>
        <source>2009 IEEE International Conference on Bioinformatics and Biomedicine</source>
        <year>2009</year>
        <fpage>321</fpage>
        <lpage>326</lpage>
        <ext-link ext-link-type="uri" xlink:href="http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5341771">http://ieeexplore.ieee.org/lpdocs/epic03/wrapper.htm?arnumber=5341771</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B13">
      <mixed-citation publication-type="other">
        <name>
          <surname>Yao</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Ye</surname>
          <given-names>L</given-names>
        </name>
        <name>
          <surname>Gao</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Minx</surname>
          <given-names>P</given-names>
        </name>
        <name>
          <surname>Warren</surname>
          <given-names>WC</given-names>
        </name>
        <name>
          <surname>Weinstock</surname>
          <given-names>GM</given-names>
        </name>
        <article-title>Graph accordance of next-generation sequence assemblies</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <ext-link ext-link-type="uri" xlink:href="http://bioinformatics.oxfordjournals.org/content/early/2011/10/23/bioinformatics.btr588.abstract">http://bioinformatics.oxfordjournals.org/content/early/2011/10/23/bioinformatics.btr588.abstract</ext-link>
        <?supplied-pmid 22025481?>
        <pub-id pub-id-type="pmid">22025481</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B14">
      <mixed-citation publication-type="other">
        <article-title>ZORRO</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://lge.ibi.unicamp.br/zorro/">http://lge.ibi.unicamp.br/zorro/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B15">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Nijkamp</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Winterbach</surname>
          <given-names>W</given-names>
        </name>
        <name>
          <surname>van den Broek</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>Daran</surname>
          <given-names>JM</given-names>
        </name>
        <name>
          <surname>Reinders</surname>
          <given-names>M</given-names>
        </name>
        <name>
          <surname>de Ridder</surname>
          <given-names>D</given-names>
        </name>
        <article-title>Integrating genome assemblies with MAIA</article-title>
        <source>Bioinformatics (Oxford, England)</source>
        <year>2010</year>
        <volume>26</volume>
        <issue>18</issue>
        <fpage>i433</fpage>
        <lpage>i439</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btq366</pub-id>
        <?supplied-pmid 20823304?>
        <pub-id pub-id-type="pmid">20823304</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B16">
      <mixed-citation publication-type="book">
        <name>
          <surname>Cattonaro</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Policriti</surname>
          <given-names>A</given-names>
        </name>
        <name>
          <surname>Vezzi</surname>
          <given-names>F</given-names>
        </name>
        <source>Enhanced reference guided assembly</source>
        <year>2010</year>
        <publisher-name>IEEE</publisher-name>
        <ext-link ext-link-type="uri" xlink:href="http://ieeexplore.ieee.org/xpl/freeabs\_all.jsp?arnumber=5706540">http://ieeexplore.ieee.org/xpl/freeabs\_all.jsp?arnumber=5706540</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B17">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Li</surname>
          <given-names>H</given-names>
        </name>
        <name>
          <surname>Durbin</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Fast and accurate short read alignment with Burrows-Wheeler transform</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <issue>14</issue>
        <fpage>1754</fpage>
        <lpage>1760</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp324</pub-id>
        <?supplied-pmid 19451168?>
        <pub-id pub-id-type="pmid">19451168</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B18">
      <mixed-citation publication-type="other">
        <article-title>ERNE (Extended Randomized Numerical alignEr)</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://erne.sourceforge.net/">http://erne.sourceforge.net/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B19">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Vezzi</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Narzisi</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Mishra</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Feature-by-Feature -- Evaluating De Novo Sequence Assembly</article-title>
        <source>PLoS ONE</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>2</issue>
        <fpage>e31002</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0031002</pub-id>
        <?supplied-pmid 22319599?>
        <pub-id pub-id-type="pmid">22319599</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B20">
      <mixed-citation publication-type="other">
        <article-title>Google's SparseHash library</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://code.google.com/p/sparsehash/">http://code.google.com/p/sparsehash/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B21">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Tarjan</surname>
          <given-names>R</given-names>
        </name>
        <article-title>Depth-First Search and Linear Graph Algorithms</article-title>
        <source>SIAM Journal on Computing</source>
        <year>1972</year>
        <volume>1</volume>
        <issue>2</issue>
        <fpage>146</fpage>
        <lpage>160</lpage>
        <ext-link ext-link-type="uri" xlink:href="http://epubs.siam.org/doi/abs/10.1137/0201010">http://epubs.siam.org/doi/abs/10.1137/0201010</ext-link>
        <pub-id pub-id-type="doi">10.1137/0201010</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B22">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Phillippy</surname>
          <given-names>AM</given-names>
        </name>
        <name>
          <surname>Schatz</surname>
          <given-names>MC</given-names>
        </name>
        <name>
          <surname>Pop</surname>
          <given-names>M</given-names>
        </name>
        <article-title>Genome assembly forensics: finding the elusive mis-assembly</article-title>
        <source>Genome biology</source>
        <year>2008</year>
        <volume>9</volume>
        <issue>3</issue>
        <fpage>R55</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2008-9-3-r55</pub-id>
        <?supplied-pmid 18341692?>
        <pub-id pub-id-type="pmid">18341692</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B23">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Ukkonen</surname>
          <given-names>E</given-names>
        </name>
        <article-title>Algorithms for approximate string matching</article-title>
        <source>Information and Control</source>
        <year>1985</year>
        <volume>64</volume>
        <issue>1-3</issue>
        <fpage>100</fpage>
        <lpage>118</lpage>
        <comment>[International Conference on Foundations of Computation Theory]</comment>
        <pub-id pub-id-type="doi">10.1016/S0019-9958(85)80046-2</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B24">
      <mixed-citation publication-type="other">
        <article-title>GAGE</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://gage.cbcb.umd.edu">http://gage.cbcb.umd.edu</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B25">
      <mixed-citation publication-type="other">
        <article-title>Assemblathon 2</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://assemblathon.org/">http://assemblathon.org/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B26">
      <mixed-citation publication-type="journal">
        <name>
          <surname>Vezzi</surname>
          <given-names>F</given-names>
        </name>
        <name>
          <surname>Narzisi</surname>
          <given-names>G</given-names>
        </name>
        <name>
          <surname>Mishra</surname>
          <given-names>B</given-names>
        </name>
        <article-title>Reevaluating Assembly Evaluations with Feature Response Curves: GAGE and Assemblathons</article-title>
        <source>PLoS ONE</source>
        <year>2012</year>
        <volume>7</volume>
        <issue>12</issue>
        <fpage>e52210</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0052210</pub-id>
        <?supplied-pmid 23284938?>
        <pub-id pub-id-type="pmid">23284938</pub-id>
      </mixed-citation>
    </ref>
    <ref id="B27">
      <mixed-citation publication-type="other">
        <article-title>CLC <italic>de novo </italic>assembler</article-title>
        <ext-link ext-link-type="uri" xlink:href="http://www.clcdenovo.com/">http://www.clcdenovo.com/</ext-link>
      </mixed-citation>
    </ref>
    <ref id="B28">
      <mixed-citation publication-type="other">
        <name>
          <surname>Simpson</surname>
          <given-names>J</given-names>
        </name>
        <name>
          <surname>Wong</surname>
          <given-names>K</given-names>
        </name>
        <name>
          <surname>Jackman</surname>
          <given-names>S</given-names>
        </name>
        <name>
          <surname>Schein</surname>
          <given-names>J</given-names>
        </name>
        <article-title>ABySS: A parallel assembler for short read sequence data</article-title>
        <source>Genome</source>
        <year>2009</year>
        <fpage>1117</fpage>
        <lpage>1123</lpage>
        <ext-link ext-link-type="uri" xlink:href="http://genome.cshlp.org/content/19/6/1117.short">http://genome.cshlp.org/content/19/6/1117.short</ext-link>
        <?supplied-pmid 19251739?>
        <pub-id pub-id-type="pmid">19251739</pub-id>
      </mixed-citation>
    </ref>
  </ref-list>
</back>

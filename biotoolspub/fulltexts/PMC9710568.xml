<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.2 20190208//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.2?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Bioinform Adv</journal-id>
    <journal-id journal-id-type="iso-abbrev">Bioinform Adv</journal-id>
    <journal-id journal-id-type="publisher-id">bioadv</journal-id>
    <journal-title-group>
      <journal-title>Bioinformatics Advances</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2635-0041</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9710568</article-id>
    <article-id pub-id-type="doi">10.1093/bioadv/vbac046</article-id>
    <article-id pub-id-type="publisher-id">vbac046</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Original Paper</subject>
        <subj-group subj-group-type="category-toc-heading">
          <subject>Immunoinformatics</subject>
        </subj-group>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI01060</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>AbLang: an antibody language model for completing antibody sequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-6348-4650</contrib-id>
        <name>
          <surname>Olsen</surname>
          <given-names>Tobias H</given-names>
        </name>
        <aff><institution>Department of Statistics, University of Oxford</institution>, Oxford OX1 3LB, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Moal</surname>
          <given-names>Iain H</given-names>
        </name>
        <aff><institution>GSK Medicines Research Centre</institution>, GlaxoSmithKline, Stevenage SG1 2NY, <country country="GB">UK</country></aff>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0003-1388-2252</contrib-id>
        <name>
          <surname>Deane</surname>
          <given-names>Charlotte M</given-names>
        </name>
        <aff><institution>Department of Statistics, University of Oxford</institution>, Oxford OX1 3LB, <country country="GB">UK</country></aff>
        <xref rid="vbac046-cor1" ref-type="corresp"/>
        <!--deane@stats.ox.ac.uk-->
      </contrib>
    </contrib-group>
    <contrib-group>
      <contrib contrib-type="editor">
        <name>
          <surname>Lengauer</surname>
          <given-names>Thomas</given-names>
        </name>
        <role>Associate Editor</role>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="vbac046-cor1">To whom correspondence should be addressed. <email>deane@stats.ox.ac.uk</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="epub" iso-8601-date="2022-06-17">
      <day>17</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>6</month>
      <year>2022</year>
    </pub-date>
    <volume>2</volume>
    <issue>1</issue>
    <elocation-id>vbac046</elocation-id>
    <history>
      <date date-type="received">
        <day>15</day>
        <month>4</month>
        <year>2022</year>
      </date>
      <date date-type="editorial-decision">
        <day>19</day>
        <month>5</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>14</day>
        <month>6</month>
        <year>2022</year>
      </date>
      <date date-type="corrected-typeset">
        <day>04</day>
        <month>7</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2022</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xlink:href="vbac046.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="s1">
        <title>Motivation</title>
        <p>General protein language models have been shown to summarize the semantics of protein sequences into representations that are useful for state-of-the-art predictive methods. However, for antibody specific problems, such as restoring residues lost due to sequencing errors, a model trained solely on antibodies may be more powerful. Antibodies are one of the few protein types where the volume of sequence data needed for such language models is available, e.g. in the Observed Antibody Space (OAS) database.</p>
      </sec>
      <sec id="s2">
        <title>Results</title>
        <p>Here, we introduce AbLang, a language model trained on the antibody sequences in the OAS database. We demonstrate the power of AbLang by using it to restore missing residues in antibody sequence data, a key issue with B-cell receptor repertoire sequencing, e.g. over 40% of OAS sequences are missing the first 15 amino acids. AbLang restores the missing residues of antibody sequences better than using IMGT germlines or the general protein language model ESM-1b. Further, AbLang does not require knowledge of the germline of the antibody and is seven times faster than ESM-1b.</p>
      </sec>
      <sec id="s3">
        <title>Availability and implementation</title>
        <p>AbLang is a python package available at <ext-link xlink:href="https://github.com/oxpig/AbLang" ext-link-type="uri">https://github.com/oxpig/AbLang</ext-link>.</p>
      </sec>
      <sec id="s5">
        <title>Supplementary information</title>
        <p><xref rid="sup1" ref-type="supplementary-material">Supplementary data</xref> are available at <italic toggle="yes">Bioinformatics Advances</italic> online.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group award-type="grant">
        <funding-source>
          <institution-wrap>
            <institution>Engineering and Physical Sciences Research Council</institution>
            <institution-id institution-id-type="DOI">10.13039/501100000266</institution-id>
          </institution-wrap>
        </funding-source>
        <award-id>EP/S024093/1</award-id>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="6"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec>
    <title>1 Introduction</title>
    <p>Recent progress within protein informatics has led to the development of pre-trained protein representations, derived from protein language models such as ESM-1b (<xref rid="vbac046-B12" ref-type="bibr">Rives <italic toggle="yes">et al.</italic>, 2021</xref>), which have been used to perform state-of-the-art predictive tasks. Such protein language models require vast amounts of training data and so far have tended to use all protein sequences and therefore be general protein representations (<xref rid="vbac046-B1" ref-type="bibr">Alley <italic toggle="yes">et al.</italic>, 2019</xref>; <xref rid="vbac046-B4" ref-type="bibr">Elnaggar <italic toggle="yes">et al.</italic>, 2021</xref>; <xref rid="vbac046-B12" ref-type="bibr">Rives <italic toggle="yes">et al.</italic>, 2021</xref>). With the creation of the Observed Antibody Space (OAS) database (<xref rid="vbac046-B9" ref-type="bibr">Kovaltsuk <italic toggle="yes">et al.</italic>, 2018</xref>) and subsequent update (<xref rid="vbac046-B11" ref-type="bibr">Olsen <italic toggle="yes">et al.</italic>, 2022</xref>), enough curated antibody sequences are now available to train a language model specifically for antibodies. An antibody specific model that has learnt the semantics of their sequences would allow for more precise predictions of antibody properties and new use cases.</p>
    <p>Over the last decade, billions of antibodies have been sequenced (<xref rid="vbac046-B2" ref-type="bibr">Chaudhary and Wesemann, 2018</xref>). However, in some cases, the sequenced antibodies are missing residues due either to sequencing errors, such as ambiguous bases (<xref rid="vbac046-B7" ref-type="bibr">Huse <italic toggle="yes">et al.</italic>, 2007</xref>), or the limitations of the sequencing techniques used (<xref rid="vbac046-B8" ref-type="bibr">Kim and Park, 2019</xref>). We find in OAS that ∼80% of the sequences are missing more than one residue at the N-terminus and ∼43% are missing the first 15 positions, and ∼1% contain at least one ambiguous residue somewhere in the sequence. The ability to accurately restore these missing residues would increase data availability and be of benefit to antibody drug discovery. Currently, sequence imputation can only be done by identifying the correct ImMunoGeneTics (IMGT) germlines from the IMGT/GENE-DB (<xref rid="vbac046-B6" ref-type="bibr">Giudicelli <italic toggle="yes">et al.</italic>, 2005</xref>) and using the germline sequence to add the missing residues. This approach requires correctly determining the allele of the sequence, a process that can be time consuming and/or produce ambiguous results.</p>
    <p>Here, we present AbLang, an antibody specific language model trained on either the heavy or light chain antibody sequences from OAS. While AbLang can be used to create representations for residue or sequence specific predictions and residue engineering, in this paper, we focus on showing how AbLang can be used to restore missing residues in antibody sequences, more accurately than using IMGT germlines or a general protein model like ESM-1b.</p>
  </sec>
  <sec>
    <title>2 Materials and methods</title>
    <p>Two AbLang models were trained, one for heavy and one for light chains. Each AbLang model consists of two parts: AbRep, which creates representations from antibody sequences, and AbHead, which uses the representations to predict the likelihood of each amino acid at each position (<xref rid="vbac046-F1" ref-type="fig">Fig. 1</xref>).</p>
    <fig position="float" id="vbac046-F1">
      <label>Fig. 1.</label>
      <caption>
        <p>Overview of the architecture of AbLang, AbRep and AbHead, and examples of possible use cases. For pre-training, residues are randomly masked in each sequence and the masked residues are predicted and compared to the original residue. After pre-training, the model can, through different use cases, be used to improve therapeutic antibody design. AbHead can be removed and the res-codings from AbRep used for either residue or sequence specific predictions, or AbHead can be kept and used for restoring missing residues or exploring possible mutations</p>
      </caption>
      <graphic xlink:href="vbac046f1" position="float"/>
    </fig>
    <p>AbLang was implemented using PyTorch 1.8.1 and was inspired by HuggingFace's (<xref rid="vbac046-B15" ref-type="bibr">Wolf, 2020</xref>) Transformer 3.0.2 library. AbRep follows the architecture of RoBERTa (<xref rid="vbac046-B10" ref-type="bibr">Liu <italic toggle="yes">et al.</italic>, 2019</xref>), except it uses a learned positional embedding layer with a max length of 160. Each of its 12 transformer blocks has 12 attenuated heads, an inner hidden size of 3072 and a hidden size of 768. From AbRep, the res-codings (768 values for each residue) are obtained. AbHead follows the design of RoBERTa's head model, with a hidden size of 768.</p>
    <p>During training, between 1% and 25% of residues from each sequence were selected, and of these, 80% were masked, 10% randomly changed to another residue and 10% left unchanged. One AbLang model was trained on heavy chain sequences for 20 epochs with a batch size of 8192, and another on light chain sequences for 40 epochs with a batch size of 4096. Both models were optimized using an Adam optimizer with a linear warm-up period for 5% of the steps, a peak learning rate of 0.0002, a learning rate decrease following a cosine function, and a weight decay of 0.01. For every dropout and layer normalization, a 0.1 rate and 1e<sup>−</sup><sup>12</sup> epsilon was used. The hyperparameters were selected to be similar to those used in the RoBERTa paper (<xref rid="vbac046-B10" ref-type="bibr">Liu <italic toggle="yes">et al.</italic>, 2019</xref>).</p>
  </sec>
  <sec>
    <title>3 Results</title>
    <sec>
      <title>3.1 Data preparation</title>
      <p>All antibody sequences seen three or more times in the OAS database as of October 2021 were downloaded. The heavy and light chain sequences were then clustered separately based on identical CDR3s and thereafter clustered further by 70% identity over the whole sequence using Linclust (<xref rid="vbac046-B13" ref-type="bibr">Steinegger and Söding, 2018</xref>), with the longest sequence selected from each cluster. The selected sequences were then randomly divided into training sets of 14 126 724 heavy and 187 068 light sequences, and two evaluation sets of 100 000 heavy and 50 000 light sequences. The training sets were then used to train AbLang as described in Section 2.</p>
    </sec>
    <sec>
      <title>3.2 Ablang's antibody sequence representations</title>
      <p>AbLang can be used to generate three different sets of antibody sequence representations. The first representation, the res-codings, consists of 768 values for each residue, useful for residue specific predictions. The second representation, the seq-codings, represents the whole sequence and is derived from the mean of all res-codings in a sequence. The seq-codings are 768 values for each sequence and are useful for sequence specific predictions. Additionally, they have the benefit of having the same length for each sequence, removing the need to align antibody sequences. Lastly, AbLang can be used to generate the likelihoods of each amino acid at each position in a given antibody sequence, useful for antibody engineering.</p>
      <p>To investigate the sequence information extracted by AbLang and compare it to that of ESM-1b, we visualized the AbLang and ESM-1b sequence representations of 10 000 naïve and 10 000 memory B-cell sequences from <xref rid="vbac046-B5" ref-type="bibr">Ghraichy <italic toggle="yes">et al.</italic> (2021)</xref> with a t-SNE (<xref rid="vbac046-B14" ref-type="bibr">van der Maaten and Hinton, 2008</xref>) plot (<xref rid="vbac046-F2" ref-type="fig">Fig. 2</xref>).</p>
      <fig position="float" id="vbac046-F2">
        <label>Fig. 2.</label>
        <caption>
          <p>Comparison of AbLang and ESM-1b representations at clustering sequences based on their V-genes, originating cell type and number of mutations</p>
        </caption>
        <graphic xlink:href="vbac046f2" position="float"/>
      </fig>
      <p>As <xref rid="vbac046-F2" ref-type="fig">Figure 2</xref> shows, AbLang and ESM-1b both separate the sequences based on their V-gene families; however, AbLang separates the V-genes into smaller clusters. These smaller clusters can partly be attributed to AbLang's finer separation of V-genes (see <xref rid="sup1" ref-type="supplementary-material">Supplementary Fig. S1</xref>). Within the AbLang clusters, a clearer separation can be seen between naive B-cells and memory B-cells than with ESM-1b's clusters. Further, the memory B-cells, in AbLang's clusters, appear to be ordered based on a gradual increase in mutations. This potentially indicates that AbLang representations contain information about the order of antibody mutations.</p>
    </sec>
    <sec>
      <title>3.3 Ablang for restoring missing residues</title>
      <p>AbLang's representations can be used for a plethora of antibody design applications. As an example, we use AbLang to restore missing residues in antibody sequences. <xref rid="vbac046-F3" ref-type="fig">Figure 3</xref> demonstrates the need for such a tool, showing how over 40% of the sequences in OAS are missing the first 15 residues and ∼80% of the sequences are missing more than one residue at the N-terminus.</p>
      <fig position="float" id="vbac046-F3">
        <label>Fig. 3.</label>
        <caption>
          <p>Overview of the antibody sequences in OAS, showing the percentage of sequences and number of residues they are missing from the N-terminus. Over 40% of the sequences in OAS are missing the first 15 residues</p>
        </caption>
        <graphic xlink:href="vbac046f3" position="float"/>
      </fig>
      <p>The input to AbLang for sequence restoration is an antibody sequence with asterisks for unknown residues (<xref rid="vbac046-F4" ref-type="fig">Fig. 4</xref>). AbLang restores the missing residues by predicting the likelihood of each amino acid at the marked positions, with the amino acid with the highest likelihood then selected as the prediction.</p>
      <fig position="float" id="vbac046-F4">
        <label>Fig. 4.</label>
        <caption>
          <p>Illustration of how the IMGT germline and AbLang method restores missing residues. (<bold>A</bold>) From an input sequence, the germline is determined and then used to restore missing residues. (<bold>B</bold>) An input sequence has asterisks at the positions to predict. AbLang predicts the amino acid with the highest likelihood</p>
        </caption>
        <graphic xlink:href="vbac046f4" position="float"/>
      </fig>
      <p>We tested the ability of AbLang to restore both the N-terminus of antibody sequences and missing residues randomly scattered throughout the sequence. From the evaluation sets, 100 complete sequences for each of the 20 heavy and 42 light human V alleles seen in the evaluation set were randomly selected. These 2000 heavy and 4200 light sequences were used as the test set.</p>
      <p><xref rid="vbac046-F5" ref-type="fig">Figure 5</xref> shows a comparison of AbLang, to the general protein model ESM-1b and to the use of germline residues for the prediction of missing residues in an antibody sequence. Sequences were numbered in the IMGT scheme using ANARCI (<xref rid="vbac046-B3" ref-type="bibr">Dunbar and Deane, 2016</xref>) and positions from 1 up to 30 were masked and then restored using the three different methods. The accuracy of this restoration was measured as the percentage of correctly predicted amino acids. IMGT germlines and AbLang achieve comparable accuracy, both restore missing N-terminus residues with accuracies of around 96% and 98% for the first 15 positions of the light and heavy chain, respectively. ESM-1b has far poorer performance achieving accuracies of 54% and 64%. The performance of IMGT germlines and AbLang is very similar, but the IMGT germline method requires knowledge of or accurate prediction of the germline, while AbLang can be rapidly deployed without any additional information.</p>
      <fig position="float" id="vbac046-F5">
        <label>Fig. 5.</label>
        <caption>
          <p>Antibody sequence restoration using IMGT germline sequences, a general protein language model ESM-1b and the antibody specific language model AbLang. (<bold>A</bold> and <bold>B</bold>) The restoration of sequences missing up to 30 residues of the N-terminus, and (<bold>C</bold> and <bold>D</bold>) the restoration of sequences with a random set (1, 5 or 10) of missing residues</p>
        </caption>
        <graphic xlink:href="vbac046f5" position="float"/>
      </fig>
      <p>In some cases, sequencing errors can result in residues being unknown at random sites throughout the antibody sequence. The ability of AbLang, IMGT germlines and ESM-1b to predict residues at randomly selected positions was also compared. Using the same test set as above, 1, 5 or 10 residues were randomly masked in each sequence's V-region. AbLang is more accurate at this task than both IMGT germlines and ESM-1b for both heavy and light chains. AbLang is also the fastest of the three methods, able to process 100 sequences in 6.5 s to ESM-1b's 44.9 s, using 4 cores on an Intel Core i7-10700.</p>
      <p>Often the number of missing residues at the N-terminus is unknown. To overcome this problem, we tested the use of ANARCI numberings and AbLang's predicted likelihood of the first residue together to determine the correct number of missing residues.</p>
      <p>The ANARCI numbering of antibody sequences gives an initial reasonable approximation of the number of residues missing from the N-terminus. However, because of possible indels and the variable length of CDR1, the ANARCI numbering alone is unable to determine the correct number of residues missing from the N-terminus. We observed that AbLang's predicted likelihood of the first residue in a sequence, was a good approximation of whether a sequence is the whole variable region. We therefore used the likelihood of the first residue to identify if a sequence has been restored with the correct number of residues at its N-terminus.</p>
      <p>We tested N-terminus lengths between eight residues shorter and up to two residues longer than the standard length given by ANARCI. This takes into account possible indels and a CDR1 region containing 5–12 residues. This process can be repeated and we found that this often improves the results, especially for heavy chains.</p>
      <p><xref rid="vbac046-F6" ref-type="fig">Figure 6</xref> compares the standard length given by ANARCI (green) with the ability of AbLang to restore the correct number of missing N-terminus residues, by either restoring once (blue) or twice (red). If the first 15 positions are missing, the ANARCI given length is correct for only one heavy chain sequence and 21.3% of the light chains, while restoring once with AbLang leads to the correct number of missing residues for 98.7% and 97.6% of the light and heavy chains, respectively. For improved performance, the restored sequences can go through the process again. This increases the restoration of the correct number of missing residues to 99.1% and 99.9% for light and heavy chains, respectively. ANARCI's inability to account for indels, such as the common deletion at position 10, can be seen in <xref rid="vbac046-F6" ref-type="fig">Figure 6</xref>, where the ANARCI given length is highly inaccurate when nine or more residues are missing.</p>
      <fig position="float" id="vbac046-F6">
        <label>Fig. 6.</label>
        <caption>
          <p>Comparison of the restoration of antibody sequences missing unknown numbers of residues at the N-terminus, using the standard length given by ANARCI or the AbLang predicted likelihood of the first residue to determine the correct length. With AbLang, sequences were restored once or twice. The accuracy of selecting the correct number of residues at the N-terminus to restore for light (<bold>A</bold>) and heavy (<bold>B</bold>) sequences missing up to 30 residues of the N-terminus is shown</p>
        </caption>
        <graphic xlink:href="vbac046f6" position="float"/>
      </fig>
    </sec>
  </sec>
  <sec>
    <title>4 Discussion</title>
    <p>A language model specific for antibodies, should learn a deeper understanding of the semantics of antibodies than current general protein language models. In this work, we present AbLang, a language model trained on a large dataset of antibody sequences from OAS.</p>
    <p>AbLang can be used to derive three different sets of antibody representations, each with different possible use cases, as illustrated in <xref rid="vbac046-F1" ref-type="fig">Figure 1</xref>. Res-codings could be used for residue specific representations or predictions and seq-codings for sequence specific representations or predictions, and the likelihoods from AbHead could be used to predict amino acids at each position in a given antibody sequence. All three sets of representations are easily obtainable using the freely available AbLang python package at <ext-link xlink:href="https://github.com/oxpig/AbLang" ext-link-type="uri">https://github.com/oxpig/AbLang</ext-link>.</p>
    <p>To demonstrate that AbLang has learnt a useful sequence representation of antibodies, we show how AbLang's seq-codings contain knowledge of the germlines, originating cell type and number of mutations (see <xref rid="vbac046-F2" ref-type="fig">Fig. 2</xref>). However, these t-SNE visualizations are only indicative, and future work could explore these observations further.</p>
    <p>To showcase AbLang's usefulness for antibody design, we explored its ability to restore missing residues in an antibody sequence. As shown in <xref rid="vbac046-F3" ref-type="fig">Figure 3</xref>, for 80% of available antibody sequence data at least one residue is missing from the N-terminus. Sequences with missing residues are usually discarded, significantly diminishing available data. Accurate restoration of the N-terminus therefore allows the available data for further analysis to be more than doubled.</p>
    <p>We demonstrate the use of AbLang to restore missing residues in antibody sequences, and show how AbLang performs on par or better than using IMGT germlines, but without the need to have knowledge of the germline. Further, we describe a method for using AbLang to restore N-terminus regions with unknown arbitrary lengths.</p>
    <p>The baseline IMGT germline method represents predicting the unmutated sequence. A better accuracy than this method therefore implies predictions which are not just the most often seen amino acid at a position and instead are specific to the input sequence. Further, we show how AbLang restores residues more accurately and faster than a current state-of-the-art protein language model ESM-1b, emphasizing the benefits and potential of an antibody specific language model.</p>
    <p>Overall the work shows the possibility of using protein language models for restoring residues in protein sequences, a crucial problem not only for antibody sequences but also for protein sequences in general. Though ESM-1b struggles with restoring longer end regions, it outperforms the IMGT germline baseline when restoring randomly placed residues in antibody sequences. ESM-1b might therefore be a useful tool for restoring a few missing residues in proteins, but less useful at restoring the ends of sequences and longer regions. The fact that ESM-1b struggles to restore residues at the N-terminus compared to single randomly distributed residues, could be because longer regions give rise to higher combinations of possible residues, and as ESM-1b does not have antibody specific context, it is unable to make accurate predictions.</p>
    <p>In this work, we give an example of how our antibody specific language model AbLang, can be used to create state-of-the-art solutions for antibody design. However, AbLang could be used for a wide range of other antibody discovery and design problems, which we hope by making it available, we and others can explore in future work.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>vbac046_Supplementary_Data</label>
      <media xlink:href="vbac046_supplementary_data.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <sec>
    <title>Funding</title>
    <p>This work was supported by the Engineering and Physical Sciences Research Council [EP/S024093/1]; GlaxoSmithKline plc.</p>
    <p><italic toggle="yes">Conflict of Interest</italic>: none declared.</p>
  </sec>
  <sec sec-type="data-availability">
    <title>Data availability</title>
    <p>The data underlying this article are available in the Oberserved Antibody Space (OAS) at <ext-link xlink:href="http://opig.stats.ox.ac.uk/webapps/oas/" ext-link-type="uri">http://opig.stats.ox.ac.uk/webapps/oas/</ext-link>.</p>
  </sec>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="vbac046-B1">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Alley</surname><given-names>E.C.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>Unified rational protein engineering with sequence-based deep representation learning</article-title>. <source>Nat. Methods</source>, <volume>16</volume>, <fpage>1315</fpage>–<lpage>1322</lpage>.<pub-id pub-id-type="pmid">31636460</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B2">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chaudhary</surname><given-names>N.</given-names></string-name>, <string-name><surname>Wesemann</surname><given-names>D.R.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Analyzing immunoglobulin repertoires</article-title>. <source>Front. Immunol</source>., <volume>9</volume>, <fpage>462</fpage>.<pub-id pub-id-type="pmid">29593723</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B3">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Dunbar</surname><given-names>J.</given-names></string-name>, <string-name><surname>Deane</surname><given-names>C.M.</given-names></string-name></person-group> (<year>2016</year>) <article-title>ANARCI: antigen receptor numbering and receptor classification</article-title>. <source>Bioinformatics</source>, <volume>32</volume>, <fpage>298</fpage>–<lpage>300</lpage>.<pub-id pub-id-type="pmid">26424857</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B4">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Elnaggar</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) ProtTrans: towards cracking the language of lifes code through self-supervised deep learning and high performance computing. <italic toggle="yes">IEEE PAMI</italic>, <bold>14</bold>.</mixed-citation>
    </ref>
    <ref id="vbac046-B5">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Ghraichy</surname><given-names>M.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Different B cell subpopulations show distinct patterns in their IgH repertoire metrics</article-title>. <source>eLife</source>, <volume>10</volume>, <fpage>e73111</fpage>.<pub-id pub-id-type="pmid">34661527</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B6">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Giudicelli</surname><given-names>V.</given-names></string-name></person-group><etal>et al</etal> (<year>2005</year>) <article-title>IMGT/GENE-DB: a comprehensive database for human and mouse immunoglobulin and T cell receptor genes</article-title>. <source>Nucleic Acids Res</source>., <volume>33</volume>, <fpage>256</fpage>–<lpage>261</lpage>.</mixed-citation>
    </ref>
    <ref id="vbac046-B7">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huse</surname><given-names>S.M.</given-names></string-name></person-group><etal>et al</etal> (<year>2007</year>) <article-title>Accuracy and quality of massively parallel DNA pyrosequencing</article-title>. <source>Genome Biol</source>., <volume>8</volume>, <fpage>R143</fpage>.<pub-id pub-id-type="pmid">17659080</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B8">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kim</surname><given-names>D.</given-names></string-name>, <string-name><surname>Park</surname><given-names>D.</given-names></string-name></person-group> (<year>2019</year>) <article-title>Deep sequencing of B cell receptor repertoire</article-title>. <source>BMB Rep</source>., <volume>52</volume>, <fpage>540</fpage>–<lpage>547</lpage>.<pub-id pub-id-type="pmid">31383253</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B9">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kovaltsuk</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2018</year>) <article-title>Observed antibody space: a resource for data mining next-generation sequencing of antibody repertoires</article-title>. <source>J. Immunol</source>., <volume>201</volume>, <fpage>2502</fpage>–<lpage>2509</lpage>.<pub-id pub-id-type="pmid">30217829</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B10">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Liu</surname><given-names>Y.</given-names></string-name></person-group><etal>et al</etal> (<year>2019</year>) <article-title>RoBERTa: a Robustly Optimized BERT pretraining approach</article-title>. <source>CoRR</source>.</mixed-citation>
    </ref>
    <ref id="vbac046-B11">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Olsen</surname><given-names>T.H.</given-names></string-name></person-group><etal>et al</etal> (<year>2022</year>) <article-title>OAS: a diverse database of cleaned, annotated and translated unpaired and paired antibody sequences</article-title>. <source>Protein Sci</source>., <volume>31</volume>, <fpage>141</fpage>–<lpage>146</lpage>.<pub-id pub-id-type="pmid">34655133</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B12">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rives</surname><given-names>A.</given-names></string-name></person-group><etal>et al</etal> (<year>2021</year>) <article-title>Biological structure and function emerge from scaling unsupervised learning to 250 million protein sequences</article-title>. <source>Proc. Natl. Acad. Sci. USA</source>, <volume>118</volume>, <fpage>e2016239118</fpage>.<pub-id pub-id-type="pmid">33876751</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B13">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Steinegger</surname><given-names>M.</given-names></string-name>, <string-name><surname>Söding</surname><given-names>J.</given-names></string-name></person-group> (<year>2018</year>) <article-title>Clustering huge protein sequence sets in linear time</article-title>. <source>Nat. Commun</source>., <volume>9</volume>, <fpage>2542</fpage>.<pub-id pub-id-type="pmid">29959318</pub-id></mixed-citation>
    </ref>
    <ref id="vbac046-B14">
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>van der Maaten</surname><given-names>L.</given-names></string-name>, <string-name><surname>Hinton</surname><given-names>G.</given-names></string-name></person-group> (<year>2008</year>) <article-title>Visualizing data using t-SNE</article-title>. <source>J. Mach. Learn. Res</source>., <volume>86</volume>, <fpage>2579</fpage>–<lpage>2605</lpage>.</mixed-citation>
    </ref>
    <ref id="vbac046-B15">
      <mixed-citation publication-type="other"><person-group person-group-type="author"><string-name><surname>Wolf</surname><given-names>T.</given-names></string-name></person-group> (<year>2020</year>) <article-title>HuggingFace’s transformers: state-of-the-art natural language processing</article-title>. <source>ACL</source>, 38–45.</mixed-citation>
    </ref>
  </ref-list>
</back>

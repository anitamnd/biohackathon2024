<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Res</journal-id>
    <journal-id journal-id-type="hwp">genome</journal-id>
    <journal-id journal-id-type="publisher-id">GENOME</journal-id>
    <journal-title-group>
      <journal-title>Genome Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1088-9051</issn>
    <issn pub-type="epub">1549-5469</issn>
    <publisher>
      <publisher-name>Cold Spring Harbor Laboratory Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10538498</article-id>
    <article-id pub-id-type="pmid">37197990</article-id>
    <article-id pub-id-type="medline">9509184</article-id>
    <article-id pub-id-type="doi">10.1101/gr.277629.122</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methods</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Improving quartet graph construction for scalable and accurate species tree estimation from gene trees</article-title>
      <alt-title alt-title-type="left-running">Han and Molloy</alt-title>
      <alt-title alt-title-type="right-running">TREE-QMC</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0200-5924</contrib-id>
        <name>
          <surname>Han</surname>
          <given-names>Yunheng</given-names>
        </name>
        <xref rid="af1" ref-type="aff">1</xref>
        <xref rid="af2" ref-type="aff">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5553-3312</contrib-id>
        <name>
          <surname>Molloy</surname>
          <given-names>Erin K.</given-names>
        </name>
        <xref rid="af1" ref-type="aff">1</xref>
        <xref rid="af2" ref-type="aff">2</xref>
      </contrib>
    </contrib-group>
    <aff id="af1"><label>1</label>Department of Computer Science, University of Maryland, College Park, Maryland 20742, USA;</aff>
    <aff id="af2"><label>2</label>University of Maryland Institute for Advanced Computer Studies, College Park, Maryland 20742, USA</aff>
    <author-notes>
      <corresp>Corresponding author: <email>ekmolloy@umd.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <volume>33</volume>
    <issue>7</issue>
    <fpage>1042</fpage>
    <lpage>1052</lpage>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>12</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>4</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>
        <ext-link xlink:href="http://genome.cshlp.org/site/misc/terms.xhtml" ext-link-type="uri">© 2023 Han and Molloy; Published by Cold Spring Harbor Laboratory Press</ext-link>
      </copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This article is distributed exclusively by Cold Spring Harbor Laboratory Press for the first six months after the full-issue publication date (see <ext-link ext-link-type="uri" xlink:href="https://genome.cshlp.org/site/misc/terms.xhtml">https://genome.cshlp.org/site/misc/terms.xhtml</ext-link>). After six months, it is available under a Creative Commons License (Attribution-NonCommercial 4.0 International), as described at <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="1042.pdf"/>
    <abstract>
      <p>Summary methods are widely used to estimate species trees from genome-scale data. However, they can fail to produce accurate species trees when the input gene trees are highly discordant because of estimation error and biological processes, such as incomplete lineage sorting. Here, we introduce TREE-QMC, a new summary method that offers accuracy and scalability under these challenging scenarios. TREE-QMC builds upon weighted Quartet Max Cut, which takes weighted quartets as input and then constructs a species tree in a divide-and-conquer fashion, at each step forming a graph and seeking its max cut. The wQMC method has been successfully leveraged in the context of species tree estimation by weighting quartets by their frequencies in the gene trees; we improve upon this approach in two ways. First, we address accuracy by normalizing the quartet weights to account for “artificial taxa” introduced during the divide phase so subproblem solutions can be combined during the conquer phase. Second, we address scalability by introducing an algorithm to construct the graph directly from the gene trees; this gives TREE-QMC a time complexity of <inline-formula id="il1"><mml:math id="IL1" display="inline" overflow="scroll"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msup></mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>n</italic> is the number of species and <italic>k</italic> is the number of gene trees, assuming the subproblem decomposition is perfectly balanced. These contributions enable TREE-QMC to be highly competitive in terms of species tree accuracy and empirical runtime with the leading quartet-based methods, even outperforming them on some model conditions explored in our simulation study. We also present the application of these methods to an avian phylogenomics data set.</p>
    </abstract>
    <funding-group>
      <award-group id="funding-1">
        <funding-source>State of Maryland</funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <p>Estimating the evolutionary history for a collection of species is a fundamental problem in evolutionary biology. Increasingly, species trees are estimated from multilocus data sets, with molecular sequences partitioned into (recombination-free) regions of the genome (referred to as loci or genes). A popular approach to species tree estimation involves concatenating the alignments for individual loci together and then estimating a phylogeny under standard models of molecular sequence evolution, like the generalized time reversible (GTR) model (<xref rid="GR277629HANC35" ref-type="bibr">Tavaré 1986</xref>).</p>
  <p>Such models assume the genes have a shared evolutionary history; however, this is not necessarily the case. The evolutionary histories of individual genes (referred to as gene trees) can differ from each other because of biological processes (<xref rid="GR277629HANC14" ref-type="bibr">Maddison 1997</xref>). Incomplete lineage sorting (ILS), one of the most well-studied sources of gene tree discordance, is an outcome of genes evolving within populations of individuals, as modeled by the multispecies coalescent (MSC) (<xref rid="GR277629HANC23" ref-type="bibr">Pamilo and Nei 1988</xref>; <xref rid="GR277629HANC27" ref-type="bibr">Rosenberg 2002</xref>; <xref rid="GR277629HANC4" ref-type="bibr">Degnan and Salter 2005</xref>). Concatenation-based approaches to species tree estimation can be statistically inconsistent under the MSC (<xref rid="GR277629HANC25" ref-type="bibr">Roch and Steel 2015</xref>). Moreover, simulation studies have shown concatenation can perform poorly when the amount of ILS is high (e.g., <xref rid="GR277629HANC11" ref-type="bibr">Kubatko and Degnan 2007</xref>). ILS is expected to impact many major groups, including birds (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>), placental mammals (<xref rid="GR277629HANC16" ref-type="bibr">McCormack et al. 2012</xref>), and land plants (<xref rid="GR277629HANC36" ref-type="bibr">Wickett et al. 2014</xref>). Thus, species tree estimation methods that account for ILS, either explicitly or implicitly, are of interest.</p>
  <p>An alternative to concatenation involves estimating gene trees (typically one per locus) and then applying a summary method. The most popular summary method to date, ASTRAL (<xref rid="GR277629HANC20" ref-type="bibr">Mirarab et al. 2014b</xref>), is a heuristic for the NP-hard maximum quartet support species tree (MQSST) problem (<xref rid="GR277629HANC12" ref-type="bibr">Lafond and Scornavacca 2019</xref>), which can be framed as weighting quartets (four-leaf trees) by their frequencies in the input gene trees and then seeking a species tree <italic>T</italic> that maximizes the total weight of the quartets displayed by <italic>T</italic>. The optimal solution to MQSST is a statistically consistent estimator of the (unrooted) species tree under the MSC model (<xref rid="GR277629HANC20" ref-type="bibr">Mirarab et al. 2014b</xref>), which is why heuristics for this problem are widely used in the context of multilocus species tree estimation. Proofs of consistency typically assume the input gene trees are error-free (<xref rid="GR277629HANC26" ref-type="bibr">Roch et al. 2018</xref>); however, this is unlikely in practice. An analysis of gene trees published for several recent systematic studies found low bootstrap support values on average (Table 1 in <xref rid="GR277629HANC21" ref-type="bibr">Molloy and Warnow 2018</xref>), suggesting that gene tree estimation error (GTEE) may be pervasive across modern phylogenomics data sets. GTEE can negatively impact the accuracy of summary methods, as shown by simulation (e.g., <xref rid="GR277629HANC37" ref-type="bibr">Xi et al. 2015</xref>) and systematic studies (e.g., <xref rid="GR277629HANC17" ref-type="bibr">Meiklejohn et al. 2016</xref>). Overall, GTEE and ILS present significant challenges to species tree estimation.</p>
  <p>A third challenge is scalability. ASTRAL executes an exact (dynamic programming) algorithm for MQSST within a constrained version of the solution space constructed from the input gene trees. There have been many improvements to ASTRAL, with the latest version ASTRAL-III (<xref rid="GR277629HANC40" ref-type="bibr">Zhang et al. 2018</xref>) having a time complexity of <italic>O</italic>((<italic>nk</italic>)<sup>1.726</sup><italic>x</italic>), where <italic>n</italic> is the number of species (also called taxa), <italic>k</italic> is the number of gene trees, and <italic>x</italic> = <italic>O</italic>(<italic>nk</italic>) is the size of the constrained solution space. Because <italic>x</italic> depends on the amount of gene tree heterogeneity, a recent method FASTRAL (<xref rid="GR277629HANC5" ref-type="bibr">Dibaeinia et al. 2021</xref>) runs ASTRAL-III in an aggressively constrained solution space to speed up species tree estimation.</p>
  <p>The other popular quartet methods, wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>) and wQFM (<xref rid="GR277629HANC15" ref-type="bibr">Mahbub et al. 2021</xref>), take weighted quartets as input and then execute a divide-and-conquer approach to phylogeny reconstruction. A recent study found wQFM to be more accurate than ASTRAL-III on challenging model conditions characterized by high ILS and high GTEE (<xref rid="GR277629HANC15" ref-type="bibr">Mahbub et al. 2021</xref>). In these analyses, wQFM was given Θ(<italic>n</italic><sup>4</sup>) quartets as input, with each quartet weighted by the number of gene trees that displayed it. The related input processing step limits the scalability of this approach. Here, we enable improved accuracy and scalability by introducing TREE-QMC.</p>
  <sec sec-type="results" id="s1">
    <title>Results</title>
    <sec id="s1a">
      <title>Overview of TREE-QMC method</title>
      <p>TREE-QMC builds upon the first widely used quartet method, wQMC, which reconstructs the species tree in a divide-and-conquer fashion. At each step in the divide phase, an internal branch in the output species tree is identified; this branch splits the taxa into two disjoint subsets (<xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>). The algorithm continues by recursion on the subproblems implied by the two subsets of taxa. “Artificial taxa” are introduced to represent the species on the opposite of the branch so that solutions to subproblems can be combined during the conquer phase. The recursion terminates when the subproblem has three or fewer taxa, as there is only one possible tree that can be returned. At each step in the conquer phase, trees for complementary subproblems are connected at the related artificial taxa, until there is a single tree on the original set of species (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S1</xref>).</p>
      <fig position="float" id="GR277629HANF1">
        <label>Figure 1.</label>
        <caption>
          <p>At each step in the divide phase, taxa are split into two disjoint subsets and then artificial taxa are introduced to represent the species on the other side of the split. To compute the quartet weights for a given subproblem, the leaves of each gene tree are relabeled by the artificial taxa. Without normalization (column n0), quartet 1, 2|<italic>Y</italic>, <italic>Z</italic> gets zero votes and the alternative quartets get six votes each (note: quartet 1, <italic>Y</italic>|2, <italic>Z</italic> gets six votes by taking either species 5, 3, or 4 for label <italic>Y</italic> and either species 0 or 9 for label <italic>Z</italic>). With normalization, each gene tree gets one vote for each subset of four labels, although this vote can be split across the three possible quartets. In the uniform normalization scheme (column n1), we simply divide column n0 by the total number of votes cast in the unnormalized case. In the nonuniform normalization scheme (column n2), we leverage that structure implied by the divide phase of the algorithm; the idea is that species should have lesser importance each time they are relabeled by artificial taxa.</p>
        </caption>
        <graphic xlink:href="1042f01" position="float"/>
      </fig>
      <p>Central to wQMC's approach is a graph built from weighted quartets. This graph is constructed in such a way that its max cut should correspond to a branch in the output species tree (<xref rid="GR277629HANC31" ref-type="bibr">Snir and Rao 2010</xref>, <xref rid="GR277629HANC32" ref-type="bibr">2012</xref>; <xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). Our observation is that quartets on artificial taxa can have higher weights than quartets on only nonartificial taxa (called singletons) when looking at a single gene tree (<xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>). As we will show, normalizing the quartet weights so that each gene tree gets one vote for every subset of four species improves accuracy. The best performing normalization scheme (n2) weights quartets based on the subproblem decomposition; essentially, quartets are upweighted if their taxa are more closely related to the current subproblem (note: n1 denotes uniform normalization and n0 denotes no normalization). Moreover, we provide an algorithm to build the (normalized) quartet graph directly from the input gene trees, enabling TREE-QMC to have a time complexity of <italic>O</italic>(<italic>n</italic><sup>3</sup><italic>k</italic>) if the subproblem decomposition is perfectly balanced (Theorem 3 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). This analysis is for a highly idealized setting and ignores large constant factors (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>).</p>
      <p>Beyond time complexity, methods can differ from each other in terms of data locality, code optimizations, and other theoretical guarantees (e.g., ASTRAL is guaranteed to find an optimal solution within its constrained solution space, whereas TREE-QMC has no such guarantee). Thus, in the remainder of this paper, we focus on evaluating the empirical performance of TREE-QMC (and its different normalization schemes) against the leading quartet-based summary methods on simulated and biological data.</p>
    </sec>
    <sec id="s1b">
      <title>Experimental evaluation</title>
      <p>We now give an overview of our simulation study; details are provided in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      <sec sec-type="methods" id="s1b1">
        <title>Methods benchmarking</title>
        <p>TREE-QMC is compared against four leading quartet methods: wQMC v1.3, wQFM v3.0, ASTRAL v5.5.7 (denoted ASTRAL-III or ASTRAL3), and FASTRAL. Two of these methods, wQMC and wQFM, take weighted quartets instead of gene trees as input (the input processing step is performed using the script distributed with wQFM). All methods are run in default mode. The current version of TREE-QMC requires binary gene trees as input so polytomies in the estimated gene trees are refined arbitrarily before running TREE-QMC (the same refinements are used in all runs of TREE-QMC to ensure a fair comparison across the normalization schemes).</p>
      </sec>
      <sec id="s1b2">
        <title>Evaluation criteria</title>
        <p>All methods are compared in terms of species tree error, quartet score, and runtime. Species tree error is the percent Robinson-Foulds (RF) error (i.e., normalized RF distance between the true and estimated species trees multiplied by 100). Because the true and estimated species trees are both binary, the RF error rate is equivalent to false negative error rate (i.e., the fraction of the internal branches in the true species tree that are missing from the estimated species tree). Two-sided Wilcoxon signed-rank tests are used to evaluate differences between TREE-QMC-n2 versus FASTRAL as well as TREE-QMC-n2 versus ASTRAL3 (TREE-QMC-n2 is also compared against wQFM when possible).</p>
        <p>We report the difference in the quartet scores between the estimated and true species trees (scores are computed using the same set of gene trees). The quartet score is the number of quartets in the input gene trees that are displayed by the output species tree (divided by the total number of quartets in the gene trees). This quantity is simply the (normalized) MQSST objective function, so higher quartet scores imply a better solution to MQSST.</p>
        <p>The runtime is the wall clock time, which for wQFM and wQMC includes the time to weight quartets based on the input gene trees (the fraction of time spent on input processing phase is reported in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). All methods are run on the same data set on the same compute node on our cluster; the maximum wall clock time is 18 h.</p>
      </sec>
      <sec id="s1b3">
        <title>Simulated data sets</title>
        <p>Our benchmarking study uses data simulated in prior studies, specifically the ASTRAL-II simulated data sets (<xref rid="GR277629HANC18" ref-type="bibr">Mirarab and Warnow 2015</xref>) as well as the avian and mammalian simulated data sets (<xref rid="GR277629HANC19" ref-type="bibr">Mirarab et al. 2014a</xref>). These data are generated by (1) taking a model species tree, (2) simulating gene trees within the species tree under the MSC, (3) simulating sequences down each gene tree under the GTR model, and (4) estimating a tree from set of gene sequences. Either the true gene trees from step 2 or the estimated gene trees from step 4 can be given as input to methods. This process is repeated for various parameter settings.</p>
        <p>The ASTRAL-II data sets are generated from model species trees simulated under the Yule model given three parameters: species tree height, speciation rate, and number of taxa. The speciation rate is set so that speciation events are clustered near the root (deep) or near the tips (shallow) of the species tree. There are 50 replicates for each model condition (note that a new model species tree is simulated for each replicate data set). The avian and mammalian simulated data sets are generated from published species trees estimated for 48 birds (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>) and 37 mammals (<xref rid="GR277629HANC33" ref-type="bibr">Song et al. 2012</xref>), respectively. The species tree branches are scaled to vary the amount of ILS, and the sequence length is changed to vary the amount of GTEE. There are 20 replicates for each model condition.</p>
        <p>The data properties (ILS and GTEE levels) are summarized in <xref rid="SD2" ref-type="supplementary-material">Supplemental Tables S1 and S2</xref>. The ILS level is the percent RF error (between the true species tree and the true gene tree) averaged across all gene trees, and GTEE level is the percent RF error (between the true and estimated gene trees) averaged across all gene trees. Overall, these data sets cover a range of model conditions. The results are presented in four experiments looking at the impact of varying the number of taxa, the species tree scale/height (proxy for ILS), the sequence length (proxy for GTEE), and the number of genes.</p>
      </sec>
    </sec>
    <sec id="s01">
      <title>Experimental results</title>
      <sec id="s1b4">
        <title>Number of taxa</title>
        <p><xref rid="GR277629HANF2" ref-type="fig">Figure 2</xref>, A and B, shows the impact of varying the number of taxa. The pipelines that need weighted quartets to be given as input (wQFM and wQMC) run on the order of seconds for 10 taxa, minutes for 50 taxa, and hours for 100 taxa. The runtime of these pipelines is dominated by the time to weight Θ(<italic>n</italic><sup>4</sup>) quartets by their frequency in the input gene trees (<xref rid="SD2" ref-type="supplementary-material">Supplemental Table S3</xref>). This input processing step does not complete on our compute nodes within our maximum wall clock time of 18 h for most data sets with 200 taxa. Therefore, we could not run wQMC and wQFM on data sets with 200, 500, or 1000 taxa. In contrast, TREE-QMC implements a similar approach to wQMC but bypasses the input processing step, scaling to 1000 taxa and 1000 genes. For these data sets, FASTRAL, TREE-QMC-n2, and ASTRAL-III complete on average in 32 min, 64 min, and 5.3 h, respectively (note: ASTRAL-III fails to complete on 3/50 replicates within our maximum wall clock time of 18 h). Thus, TREE-QMC-n2 is much faster than ASTRAL-III and is not much slower than FASTRAL. TREE-QMC-n2 is significantly more accurate than either FASTRAL or ASTRAL-III when the number of taxa is 200 or greater. For these same conditions, quartet weight normalization, and especially the nonuniform (n2) scheme, improves TREE-QMC's accuracy. Results for methods given true gene trees as input or only 250 (out of 1000) gene trees as input are shown in <xref rid="SD2" ref-type="supplementary-material">Supplemental Figs. S7–S9</xref>).</p>
        <fig position="float" id="GR277629HANF2">
          <label>Figure 2.</label>
          <caption>
            <p>Impact of number of taxa. (<italic>A</italic>) Percent species tree error across replicates (bars represent medians; triangles represent means; outliers are not shown). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (all but one test survives Bonferroni multiple comparison correction; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S4</xref> for details). (<italic>B</italic>) Mean runtime across replicates (shaded region indicates standard error). All data sets have species tree height 1×, shallow speciation, and 1000 estimated gene trees. The ILS level is 17%–35%, and GTEE level is 19%–30%. Note: The input processing for wQMC and wQFM does not run within our maximum wall clock time of 18 h for data sets with 200 or more taxa.</p>
          </caption>
          <graphic xlink:href="1042f02" position="float"/>
        </fig>
      </sec>
      <sec id="s1b5">
        <title>Incomplete lineage sorting (ILS)</title>
        <sec id="s1b5a">
          <title>ASTRAL-II data (200 taxa, 1000 estimated gene trees)</title>
          <p>Figure 3, A and B, shows the impact of varying the species tree height and thus the amount of ILS for the ASTRAL-II data sets. TREE-QMC-n2, FASTRAL, and ASTRAL-III produce highly accurate species trees, with median species tree error at or below 6% for all model conditions (note: the input processing for wQMC and wQFM does not run within our maximum wall clock time of 18 h for these 200-taxon data sets). For some conditions, TREE-QMC-n2 is significantly more accurate than FASTRAL or ASTRAL-III; otherwise, there are no significant differences between these pairs of methods. Quartet weight normalization improves the accuracy of TREE-QMC; this effect is most pronounced when the amount of ILS was very high (species tree height: 0.5×). On these same conditions, ASTRAL-III is much slower than the other methods, taking 73 min on average for the highest amount of ILS (species tree height: 0.5×) compared to 5 min on average for the lowest amount of ILS (species tree height: 5×). In contrast, both TREE-QMC-n2 and FASTRAL are quite fast, taking on average &lt;3 min for model conditions with 200 or fewer taxa. Results for methods given true gene trees as input or only 250 (out of 1000) gene trees as input are shown in <xref rid="SD2" ref-type="supplementary-material">Supplemental Figs. S10–S12</xref>.</p>
          <fig position="float" id="GR277629HANF3">
            <label>Figure 3.</label>
            <caption>
              <p>Impact of the amount of ILS. (<italic>A</italic>) Percent species tree error across replicates (bars represent medians; triangles represent means; outliers are not shown). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (three tests survive multiple comparison corrections; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S5</xref> for details). (<italic>B</italic>) Mean runtime across replicates (shaded region indicates standard error). All data sets have 200 taxa and 1000 estimated gene trees. One model condition with species tree height 1× and shallow speciation is repeated from <xref rid="GR277629HANF2" ref-type="fig">Fig. 2</xref>. For species tree heights 0.5×, 1×, and 5×, the ILS level is 68%–69%, 34%, and 9%–21%, respectively, and the GTEE level is 44%, 27%–34%, and 21%–28%, respectively.</p>
            </caption>
            <graphic xlink:href="1042f03" position="float"/>
          </fig>
        </sec>
        <sec id="s1b5b">
          <title>Avian simulated data (48 taxa, 1000 estimated gene trees)</title>
          <p>Figure 4, A–C, shows the impact of varying the species tree scale and thus the amount of ILS on the avian simulated data sets. wQMC is the least accurate method and is even less accurate than TREE-QMC-n0 (no normalization). Normalization improves the performance of TREE-QMC for these data, enabling TREE-QMC-n2 to be among the most accurate methods when the amount of ILS is high (species tree scales: 0.5× and 1×). Testing for differences between TREE-QMC-n2 versus the other three leading methods (wQFM, FASTRAL, and ASTRAL-III) reveals that either TREE-QMC-n2 is significantly better or else there are no significant differences between these pairs of methods. All methods finish quickly: wQMC and wQFM complete in &lt;13 min on average, ASTRAL-III completes in &lt;4 min on average, and the other methods finish in &lt;1 min on average.</p>
          <fig position="float" id="GR277629HANF4">
            <label>Figure 4.</label>
            <caption>
              <p>Impact of ILS and GTEE. (<italic>A</italic>), (<italic>B</italic>), and (<italic>C</italic>) Percent species tree error for the avian data set with 1000 estimated or true gene trees and species tree scales 0.5×, 1×, and 2×, respectively. Two-sided Wilcoxon signed-ranked tests were used to evaluate differences between TREE-QMC-n2 versus wQFM, FASTRAL, and ASTRAL3 (nine tests per subfigure). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (for 0.5× species tree scale with estimated gene trees, the difference between TREE-QMC-n2 and ASTRAL-II survives Bonferroni multiple comparison correction; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S6</xref> for details). (<italic>D</italic>), (<italic>E</italic>), and (<italic>F</italic>) show the difference in quartet score between the estimated and true species tree times 1000 for species tree scales 0.5×, 1×, and 2×, respectively (positive values indicate the estimated tree is a better solution to MQSST than the true tree). For species tree heights 0.5×, 1×, and 2×, the ILS level is 60%, 47%, and 35%, respectively, and the GTEE level is 60%, 60%, and 62%, respectively. Results for wQMC are cut off because otherwise the trends cannot be observed (see <xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S2</xref> for full <italic>y</italic>-axes).</p>
            </caption>
            <graphic xlink:href="1042f04" position="float"/>
          </fig>
          <p>Figure 4, D–F, shows the difference in quartet score between estimated and true species trees. We find that most methods typically recover species trees with higher quartet scores than the true species tree, indicating that the true species tree is not the optimal solution to MQSST. Moreover, the relative performance of methods for quartet score is different than the relative performance of methods for species tree error for many model conditions. These two trends are especially pronounced when gene trees are estimated (mean error: 60%–62%).</p>
        </sec>
        <sec id="s1b5c">
          <title>Mammalian simulated data (37 taxa, 200 estimated gene trees)</title>
          <p>All methods have similar performance for the mammalian data, although these data sets represent easier model conditions in terms of ILS and GTEE levels (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S3</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S7</xref>).</p>
        </sec>
      </sec>
      <sec id="s1b6">
        <title>Gene tree estimation error (GTEE)</title>
        <sec id="s1b6a">
          <title>Avian simulated data (48 taxa, 1000 gene trees)</title>
          <p>Figure 4, A–C, also shows the impact of GTEE for each species tree scale (ILS level). For each ILS level, methods are given true gene trees or estimated gene trees (mean error: 60%–62%). The trends for estimated gene trees are discussed above. For true gene trees, there are no significant differences between TREE-QMC-n2 versus the other leading methods (wQFM, FASTRAL, and ASTRAL-III), and all versions of TREE-QMC perform similarly so the utility of normalization is diminished. Moreover, these methods find species trees with similar quartet scores to the true species tree, unlike the case of estimated gene trees. Lastly, the performance of wQMC is in line with the other methods when there is very little gene tree heterogeneity because of ILS or GTEE (<xref rid="GR277629HANF4" ref-type="fig">Fig. 4</xref>C).</p>
        </sec>
        <sec id="s1b6b">
          <title>Mammalian simulated data (37 taxa, 200 gene trees)</title>
          <p> Similar trends between methods are observed for mammalian simulated data sets when varying the sequence lengths (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S4</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S8</xref>). TREE-QMC is significantly more accurate than FASTRAL and ASTRAL-III for the shortest sequence length (250 bp; GTEE level 43%); there are no differences in accuracy between these pairs of methods otherwise.</p>
        </sec>
      </sec>
      <sec id="s1b7">
        <title>Number of genes</title>
        <p>Similar trends between methods are observed when varying the number of genes (e.g., <xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S5</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Tables S9, S10</xref>).</p>
      </sec>
    </sec>
    <sec id="s1c">
      <title>Reanalysis of avian phylogenomics data set</title>
      <p>We also reanalyze the avian data set from <xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. (2014)</xref> with 3679 ultraconserved elements (UCEs). This data set includes the best maximum likelihood tree and the set of 100 bootstrapped trees for each UCE. Although the true species tree is unknown, we discuss the presence and absence of strongly corroborated clades, such as Passerea and six of the magnificent seven clades excluding clade IV (<xref rid="GR277629HANC2" ref-type="bibr">Braun and Kimball 2021</xref>). We also compare methods to the published concatenation tree estimated by running RAxML (<xref rid="GR277629HANC34" ref-type="bibr">Stamatakis 2014</xref>) on UCEs only (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>); thus the comparison between concatenation and the quartet-based summary methods is on the same data set. Branch support is computed for the estimated species trees using ASTRAL-III's local posterior probability (<xref rid="GR277629HANC28" ref-type="bibr">Sayyari and Mirarab 2016</xref>) as well as using multilocus bootstrapping (MLBS) (<xref rid="GR277629HANC29" ref-type="bibr">Seo 2008</xref>). We repeat this analysis (except MLBS) on the TENT data (14,446 gene trees), which includes gene trees estimated on UCEs as well as exons and introns. In this case, methods are compared to the published TENT concatenation tree estimated by running ExaML (<xref rid="GR277629HANC10" ref-type="bibr">Kozlov et al. 2015</xref>).</p>
      <sec id="s1c1">
        <title>UCE data</title>
        <p>For the UCE data (48 taxa, 3679 gene trees), ASTRAL-III completes in 65 min, making it the most time consuming method. All other methods run in less than a minute; however, the preprocessing step to weight quartets for wQFM takes 41 min.</p>
        <p>Both FASTRAL and ASTRAL-III produce the same species tree (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>C), and both TREE-QMC-n2 and wQFM produce the same species tree (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>A). We compare these two trees to the published concatenation tree for UCEs (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>B). There are many similarities between these three trees, as all contain the magnificent seven clades. The TREE-QMC-n2 and FASTRAL trees differ from the concatenation tree by seven and nine branches, respectively, putting the TREE-QMC-n2 tree slightly closer to the concatenation tree than the FASTRAL tree. The TREE-QMC-n2 tree recovers Passerea and Afroaves and fails to recover Columbea, like the concatenation tree and unlike the ASTRAL-III tree (note that Passerea was considered to be strongly corroborated, after accounting for data type effects, by <xref rid="GR277629HANC2" ref-type="bibr">Braun and Kimball 2021</xref>). Overall, there are only five branches that differ between the TREE-QMC-n2 tree and the FASTRAL tree; all of these branches have nearly equal quartet support for their alternative resolutions so that both trees represent reasonable hypotheses.</p>
        <fig position="float" id="GR277629HANF5">
          <label>Figure 5.</label>
          <caption>
            <p>Avian UCE data. (<italic>A</italic>) Tree estimated from UCE gene trees using TREE-QMC-n2/wQFM. (<italic>B</italic>) Tree estimated from concatenated UCE alignment using RAxML. (<italic>C</italic>) Tree estimated from UCE gene trees using ASTRAL-III/FASTRAL. <italic>Above</italic> the branch, we show support values <italic>X</italic>, <italic>Y</italic>, where <italic>X</italic> is estimated using ASTRAL's local posterior probability (multiplied by 100) and <italic>Y</italic> is computed using RAxML's bootstrap support for <italic>B</italic> and using MLBS for <italic>A</italic> and <italic>C</italic>. Support values are only shown when <italic>X</italic> is &lt;100. <italic>Below</italic> the branch, we show the quartet support (the two values <italic>below</italic> it correspond to quartet support for the two alternative resolutions of the branch). Taxa outside of Neoaves are not shown as all methods recovered the same topology outside of Neoaves.</p>
          </caption>
          <graphic xlink:href="1042f05" position="float"/>
        </fig>
      </sec>
      <sec id="s1c2">
        <title>TENT data</title>
        <p>For the TENT data (48 taxa, 14,446 gene trees), TREE-QMC-n2 and FASTRAL complete in &lt;3 min, whereas it takes 2.35 h to weight quartets. wQFM completes in less than a minute after this preprocessing phase. We do not run ASTRAL-III as this analysis was reported to take over 30 h (<xref rid="GR277629HANC5" ref-type="bibr">Dibaeinia et al. 2021</xref>).</p>
        <p>All three methods produce a different tree, which is compared to the published concatenation tree for TENT data (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S6</xref>). None of the trees recover Passera, and only the concatenation and wQFM trees recover Afroaves, although this branch has very low local support (local posterior probability of 0.0) in the wQFM tree. Once again, the TREE-QMC-n2 and wQFM trees are closest to the concatenation tree, with the TREE-QMC-n2, wQFM, and FASTRAL trees differing from it by 8, 8, and 10 branches, respectively. There are five branches that differ between the wQFM tree and the TREE-QMC-n2 tree (two of these branches in the wQFM have very low support: local posterior probability of 0.03 and 0.0). There are only three branches that differ between the TREE-QMC-n2 tree and the FASTRAL tree; as with the UCE data, these branches are reasonable based on quartet support for their alternative resolutions.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s2">
    <title>Discussion</title>
    <p>Our method TREE-QMC builds upon the algorithmic framework of wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>) by introducing the <italic>normalized</italic> quartet graph and showing that it can be computed directly from gene trees. These contributions together enable our new method TREE-QMC to be highly competitive with the leading quartet-based summary methods in terms of species tree accuracy and empirical runtime, even outperforming them on some simulated data sets. Specifically, TREE-QMC (with nonuniform normalization) is competitive with wQFM in terms of species tree accuracy but scales to much larger data sets. Moreover, TREE-QMC is at least as accurate, and often more accurate, than the dominant method ASTRAL-III (and its improvement FASTRAL), while being highly competitive in terms of empirical runtime.</p>
    <p>The model conditions where TREE-QMC outperforms ASTRAL-III are characterized by large numbers of species or high amounts of gene tree heterogeneity because of ILS and GTEE. For the latter scenario, the true species tree was typically not the optimal solution to MQSST (note: this observation is not out of line with the statistical theory because the proof of consistency assumes infinite error-free gene trees). Therefore, better heuristics to MQSST may not translate to more accurate species trees when GTEE is high.</p>
    <p>A major goal is to develop summary methods that are robust to GTEE. One approach is weighting quartets not just by their frequency in the input gene trees. A new version of ASTRAL, dubbed weighted ASTRAL (<xref rid="GR277629HANC39" ref-type="bibr">Zhang and Mirarab 2022</xref>), which was published during our study, adjusts quartet weights based on the branch support and branch lengths in the estimated gene trees. TREE-QMC's nonuniform normalization scheme adjusts the quartet weights based on the subproblem division (i.e., quartets are upweighted if they are on species in more closely related subproblems, which ideally reflects closeness in the true species tree). In the future, it would be interesting to compare TREE-QMC to weighted ASTRAL as well as to implement other quartet weighting schemes within TREE-QMC.</p>
    <p>There are several other opportunities for future work worth mentioning. First, the version of TREE-QMC presented here requires binary gene trees as input. Thus, TREE-QMC was given gene trees that are randomly refined in our experimental study, whereas all other methods were given gene trees with polytomies. This did not have a negative impact on TREE-QMC's performance relative to the other methods; however, it would be worth exploring this issue further. Ultimately, this inherent limitation of TREE-QMC could be addressed by devising an efficient algorithm for computing the “edges” in the quartet graph (see Methods section), although this would come at the cost of increased runtime. Second, the experimental study presented here only evaluates TREE-QMC in the context of multilocus species tree estimation where gene tree can be discordant with the species tree because of ILS and/or GTEE. Our study does not address the use of TREE-QMC as a more general quartet-based supertree method, and future work should explore whether quartet weight normalization is beneficial in this context. Lastly, TREE-QMC's algorithm operates on gene trees that are multilabeled because of artificial taxa, so the algorithms presented here can be applied to gene trees that are multilabeled because of other causes, such as multiple individuals being sampled per species (<xref rid="GR277629HANC24" ref-type="bibr">Rabiee et al. 2019</xref>) or genes evolving via duplications (<xref rid="GR277629HANC41" ref-type="bibr">Zhang et al. 2020</xref>; <xref rid="GR277629HANC13" ref-type="bibr">Legried et al. 2021</xref>; <xref rid="GR277629HANC38" ref-type="bibr">Yan et al. 2021</xref>; <xref rid="GR277629HANC30" ref-type="bibr">Smith et al. 2022</xref>). Future work should explore the effectiveness of TREE-QMC under these conditions as well as those characterized by missing data because of gene loss or other causes (<xref rid="GR277629HANC22" ref-type="bibr">Nute et al. 2018</xref>).</p>
  </sec>
  <sec sec-type="methods" id="s3">
    <title>Methods</title>
    <p>We now present the TREE-QMC method. To begin, we define some terminology for phylogenetic trees and the notation used through this section and the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
    <sec id="s3a">
      <title>Terminology and notation</title>
      <p>A <italic>phylogenetic tree T</italic> is a triplet <inline-formula id="il2"><mml:math id="IL2" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>g</italic> is a connected acyclic graph, <inline-formula id="il3"><mml:math id="IL3" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> is a set of labels (species), and <inline-formula id="il02"><mml:math id="IL4" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϕ</mml:mi></mml:mrow></mml:math></inline-formula> maps leaves in <italic>g</italic> to labels in <inline-formula id="il4"><mml:math id="IL5" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula>. If <inline-formula id="il002"><mml:math id="IL6" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϕ</mml:mi></mml:mrow></mml:math></inline-formula> is a bijection, we say that <italic>T</italic> is <italic>singly labeled</italic>; otherwise, we say <italic>T</italic> is <italic>multilabeled</italic>. Trees may be either <italic>unrooted</italic> or <italic>rooted</italic>. Edges in an unrooted tree are undirected, whereas edges in a rooted tree are directed away from the root, a special vertex with in-degree 0 (all other vertices have in-degree 1). To transform an unrooted tree <italic>T</italic> into a rooted tree <italic>T</italic><sub><italic>r</italic></sub>, we select an edge in <italic>T</italic>, subdivide it with a new vertex <italic>r</italic> (the root), and then orient the edges of <italic>T</italic> away from the root. Conversely, we transform a rooted tree <italic>T</italic><sub><italic>r</italic></sub> into an unrooted tree <italic>T</italic> by undirecting its edges and then suppressing any vertex with degree 2.</p>
      <p>For a tree <italic>T</italic>, we denote its edge set as <italic>E</italic>(<italic>T</italic>), its internal vertex set as <italic>V</italic>(<italic>T</italic>), and its leaf set as <italic>L</italic>(<italic>T</italic>). Sometimes we consider a phylogenetic tree <italic>T restricted</italic> to a subset of its leaves <italic>R</italic> ⊆ <italic>L</italic>(<italic>T</italic>). Such a tree, denoted <italic>T</italic>|<sub><italic>R</italic></sub>, is created by deleting leaves in <inline-formula id="il5"><mml:math id="IL7" display="inline" overflow="scroll"><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo><mml:mi mathvariant="normal">∖</mml:mi><mml:mi>R</mml:mi></mml:math></inline-formula> and suppressing any vertex with degree 2 (while updating branch lengths in the natural way). Henceforth, all trees are <italic>binary</italic>, meaning that nonleaf, nonroot vertices (referred to as <italic>internal</italic> vertices) have degree 3.</p>
      <p>To present TREE-QMC, we need two additional concepts: <italic>bipartitions</italic> and <italic>quartets</italic>. A bipartition splits a set <inline-formula id="il6"><mml:math id="IL8" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> of labels into two disjoint sets: <inline-formula id="il7"><mml:math id="IL9" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="il8"><mml:math id="IL10" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow><mml:mi mathvariant="normal">∖</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow></mml:math></inline-formula>. Each edge in a (singly labeled, unrooted) tree <italic>T</italic> induces a bipartition because deleting an edge creates two rooted subtrees whose leaf labels form the bipartition <inline-formula id="il9"><mml:math id="IL11" display="inline" overflow="scroll"><mml:mi>π</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow></mml:math></inline-formula>. A given bipartition is displayed by <italic>T</italic> if it is in the set {π(<italic>e</italic>):<italic>e</italic> ∈ <italic>E</italic>(<italic>T</italic>)}. The bipartition is trivial if <inline-formula id="il10"><mml:math id="IL12" display="inline" overflow="scroll"><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo></mml:math></inline-formula> or <inline-formula id="il11"><mml:math id="IL13" display="inline" overflow="scroll"><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo></mml:math></inline-formula> is 1; otherwise, it is nontrivial.</p>
      <p>A quartet <italic>q</italic> is an unrooted, binary tree with four leaves <italic>a</italic>, <italic>b</italic>, <italic>c</italic>, <italic>d</italic> labeled by <italic>A</italic>, <italic>B</italic>, <italic>C</italic>, <italic>D</italic>, respectively. It is easy to see that there are three possible quartet trees given by their one nontrivial bipartition: (1) <italic>a,b</italic>|<italic>c,d</italic>; (2) <italic>a,c</italic>|<italic>b,d</italic>; and (3) <italic>a,d</italic>|<italic>b,c</italic> (note that we typically use lower case letters to denote leaf vertices and capital letters to denote leaf labels, although this distinction is only necessary when trees are multilabeled). A set of quartets can be defined by an unrooted tree <italic>T</italic> by restricting <italic>T</italic> to every possible subset of four leaves in <italic>L</italic>(<italic>T</italic>); the resulting set <italic>Q</italic>(<italic>T</italic>) is referred to as the quartet encoding of <italic>T</italic>. If <italic>T</italic> is multilabeled, then some of the quartets in <italic>Q</italic>(<italic>T</italic>) will have multiple leaves labeled by the same label. Lastly, we say that <italic>T</italic> displays a quartet <italic>q</italic> if <italic>q</italic> ∈ <italic>Q</italic>(<italic>T</italic>).</p>
    </sec>
    <sec id="s3b">
      <title>Review of wQMC</title>
      <p>As previously mentioned, our new method TREE-QMC builds upon the divide-and-conquer method wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). To produce a bipartition on <inline-formula id="il12"><mml:math id="IL14" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:math></inline-formula>, wQMC constructs a graph from <inline-formula id="il13"><mml:math id="IL15" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">Q</mml:mi></mml:mrow></mml:math></inline-formula>, referred to as the <bold>quartet graph</bold>, and then seeks its maximum cut (<xref rid="GR277629HANC31" ref-type="bibr">Snir and Rao 2010</xref>, <xref rid="GR277629HANC32" ref-type="bibr">2012</xref>; <xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). The quartet graph is formed from two complete graphs, <inline-formula id="il501"><mml:math id="IL16" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il601"><mml:math id="IL17" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, both on vertex set <italic>V</italic> (i.e., there exists a bijection between <italic>V</italic> and <inline-formula id="il14"><mml:math id="IL18" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:math></inline-formula>). All edges in <inline-formula id="il502"><mml:math id="IL19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il602"><mml:math id="IL20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> are initialized to weight zero. Then, each quartet <inline-formula id="il15"><mml:math id="IL21" display="inline" overflow="scroll"><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> contributes its weight <inline-formula id="il16"><mml:math id="IL22" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> to two “bad” edges in <inline-formula id="il503"><mml:math id="IL23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and four “good” edges in <inline-formula id="il603"><mml:math id="IL24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula id="il17"><mml:math id="IL25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> corresponds to the number of gene trees in the input set <inline-formula id="il18"><mml:math id="IL26" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:math></inline-formula> that display <italic>q</italic>. The bad edges are based on sibling pairs: (<italic>A</italic>, <italic>B</italic>) and (<italic>C</italic>, <italic>D</italic>). The good edges are based on nonsibling pairs: (<italic>A</italic>, <italic>C</italic>), (<italic>A</italic>, <italic>D</italic>), (<italic>B</italic>, <italic>C</italic>), and (<italic>B</italic>, <italic>D</italic>). We do not want to cut bad edges because siblings should be on the same side of the bipartition; conversely, we want to cut good edges because nonsiblings should be on different sides of the bipartition. Ultimately, we seek a cut <inline-formula id="il19"><mml:math id="IL27" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> to maximize <inline-formula id="il20"><mml:math id="IL28" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">C</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></inline-formula>), where α &gt; 0 is a hyperparameter that can be optimized using binary search. Although MaxCut is NP-complete (<xref rid="GR277629HANC9" ref-type="bibr">Karp 1972</xref>), fast and accurate heuristics have been developed (<xref rid="GR277629HANC6" ref-type="bibr">Dunning et al. 2018</xref>). The cut gives a bipartition in the output species tree and the wQMC method proceeds by recursion on the two subsets of species on each side of the bipartition. Artificial taxa are introduced to represent the species on the other side of the bipartition.</p>
    </sec>
    <sec id="s3c">
      <title>TREE-QMC: quartet weight normalization</title>
      <p>Our key observation in developing TREE-QMC is that artificial taxa change the quartet weights so that a single gene tree will vote multiple times for quartets on artificial taxa and only once for quartets on only nonartificial taxa (called singletons). As shown in <xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>, the weight of quartet <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> is
<disp-formula id="GR277629HANM1"><label>(1)</label><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <inline-formula id="il21"><mml:math id="IL29" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> denotes the set of leaves (i.e., species) in <italic>T</italic> associated with label <italic>M</italic> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). When labels <italic>M</italic>, <italic>N</italic>, <italic>O</italic>, <italic>P</italic> are all singletons, each gene tree casts exactly one vote for one of the three possible quartets: <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> or <italic>M</italic>, <italic>O</italic>|<italic>N</italic>, <italic>P</italic> or <italic>M</italic>, <italic>P</italic>|<italic>N</italic>, <italic>O</italic> (assuming no missing data). Otherwise, each gene tree casts |<bold>M</bold>| · |<bold>N</bold>| · |<bold>O</bold>| · |<bold>P</bold>| votes (again assuming no missing data) and thus can vote for more than one topology.</p>
      <p>We propose to normalize the quartet weights so that each gene tree casts one vote for each subset of four labels, although it may split its vote across the possible quartet topologies in the case of artificial taxa. To get this outcome, we can simply divide by the number of votes cast so that the weight of <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> becomes
<disp-formula id="GR277629HANM2"><label>(2)</label><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow><mml:mo fence="false">|</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:math></disp-formula>
This can be implemented efficiently by assigning an importance value <italic>I</italic>(<italic>x</italic>) to each species <inline-formula id="il22"><mml:math id="IL30" display="inline" overflow="scroll"><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">S</mml:mi></mml:mrow></mml:math></inline-formula> and then computing the weight as</p>
      <p><disp-formula id="GR277629HANM3"><label>(3)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>I</italic>(<italic>m</italic>, <italic>n</italic>, <italic>o</italic>, <italic>p</italic>) = <italic>I</italic>(<italic>m</italic>) · <italic>I</italic>(<italic>n</italic>) · <italic>I</italic>(<italic>o</italic>) · <italic>I</italic>(<italic>p</italic>). Specifically, Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> reduces to Equation <xref rid="GR277629HANM2" ref-type="disp-formula">2</xref> when <italic>I</italic>(<italic>m</italic>) = |<bold>M</bold>|<sup>−1</sup> for all <italic>m</italic> ∈ <bold>M</bold> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). Because all species with the same label are assigned the same importance value, we refer to this approach as <italic>uniform normalization (n1)</italic>. More broadly, the quartet weights will be normalized whenever Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> corresponds to a weighted average, meaning that
<disp-formula id="GR277629HANM4"><label>(4)</label><mml:math id="M4" display="block" overflow="scroll"><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1.</mml:mn></mml:math></disp-formula>
It is easy to see that this will be the case whenever <inline-formula id="il23"><mml:math id="IL31" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). In <italic>unnormalized (n0)</italic> case, we assign all species an importance value of 1 so that Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> reduces to Equation <xref rid="GR277629HANM1" ref-type="disp-formula">1</xref>.</p>
      <p>We now describe how to normalize quartet weights while leveraging the hierarchical structure implied by artificial taxa by assigning importance values to species with the same label. The idea is that species should have lesser importance each time they are <italic>relabeled</italic> by an artificial taxon. In <xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>, artificial taxon <italic>Z</italic> represents species <bold>Z</bold> = {0, 6, 7, 9} but species 0 and 9 were previously labeled by artificial taxon <italic>X</italic>. This relationship can be represented as the rooted “phylogenetic” tree <italic>T</italic><sub><italic>Z</italic></sub> given by Newick string: (6, 7, (0, 9)<italic>X</italic>)<italic>Z</italic>. We use <italic>T</italic><sub><italic>Z</italic></sub> to assign importance values to all species <italic>z</italic> ∈ <bold>Z</bold>, specifically
<disp-formula id="GR277629HANM5"><label>(5)</label><mml:math id="M5" display="block" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>Z</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></disp-formula>
where <italic>outdegree</italic>(<italic>v</italic>) is the out-degree of vertex <italic>v</italic> and <italic>path</italic>(<italic>T</italic><sub><italic>Z</italic></sub>, <italic>z</italic>) contains the vertices on the path in <italic>T</italic><sub><italic>Z</italic></sub> from the root to the leaf labeled <italic>z</italic>, excluding the leaf. Continuing the example, <inline-formula id="il24"><mml:math id="IL32" display="inline" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula id="il25"><mml:math id="IL33" display="inline" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>9</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>⋅</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>6</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mstyle></mml:mstyle></mml:math></inline-formula>. By construction, <inline-formula id="il26"><mml:math id="IL34" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">Z</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>z</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> so this approach normalizes the quartet weights. Because different species with the same label can have different weights, we refer to this approach as <italic>nonuniform normalization (n2)</italic>. In our simulation study, normalizing the quartet weights in this fashion improved species tree accuracy for challenging model conditions.</p>
    </sec>
    <sec id="s3d">
      <title>TREE-QMC: efficient quartet graph construction</title>
      <p>Another key development in TREE-QMC is an efficient algorithm for constructing the quartet graph directly from <italic>k</italic> gene trees, each on <italic>n</italic> species. Our approach breaks down computing the weights for good and bad edges into three cases:
<list list-type="bullet"><list-item><p>Case 1: taxa <italic>X</italic>, <italic>Y</italic> are both nonartificial taxa (called singletons).</p></list-item><list-item><p>Case 2: taxa <italic>X</italic> is a singleton and <italic>Y</italic> is an artificial taxon (or vice versa).</p></list-item><list-item><p>Case 3: taxa <italic>X</italic>, <italic>Y</italic> are both artificial taxa.</p></list-item></list>For one gene tree, <inline-formula id="il604"><mml:math id="IL35" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] and <inline-formula id="il504"><mml:math id="IL36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] can be computed for all pairs <italic>X</italic>, <italic>Y</italic> in case 1, case 2, and case 3 in <italic>O</italic>(<italic>a</italic><sup>2</sup>) time, <italic>O</italic>(<italic>abn</italic>) and <italic>O</italic>(<italic>b</italic><sup>2</sup><italic>n</italic>) time, respectively, where <italic>a</italic> is the number of singletons and <italic>b</italic> is the number of artificial taxa. Thus, for a subproblem with <italic>s</italic> = <italic>a</italic> + <italic>b</italic> taxa, the quartet graph can be constructed in <italic>O</italic>(<italic>s</italic><sup>2</sup><italic>nk</italic>) time by applying this algorithm to all gene trees (Theorem 1 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>).</p>
      <p>After quartet graph construction, we seek a max cut. Our high-level approach is the same as wQMC. However, we differ in our binary search for α (interval and precision) and our max-cut heuristic, instead using the one proposed by <xref rid="GR277629HANC3" ref-type="bibr">Burer et al. (2002)</xref> and implemented in the open-source package MQLib by <xref rid="GR277629HANC6" ref-type="bibr">Dunning et al. (2018)</xref>. Our approach for cutting the quartet graph runs in <italic>O</italic>(<italic>s</italic><sup>2</sup>) time (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>), so the time complexity for each subproblem is dominated by quartet graph construction. Overall, the divide-and-conquer algorithm runs in <italic>O</italic>(<italic>n</italic><sup>3</sup><italic>k</italic>) time (Theorem 3 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>) if the division into subproblems is perfectly balanced. We do not expect subproblem division to be perfectly balanced in practice, and moreover the time complexity analysis hides large constant factors (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). That being said, we find TREE-QMC is sufficiently fast, at least on the specific inputs in our study.</p>
    </sec>
    <sec id="s3e">
      <title>Idea behind efficient quartet graph construction</title>
      <p>We now provide the idea behind our approach by considering the simplest case where there are no artificial taxa in gene tree <italic>T</italic> with <italic>n</italic> leaves (i.e., <italic>T</italic> is singly labeled). For TREE-QMC, the weight of bad edges between taxa <italic>X</italic> and <italic>Y</italic>, denoted <inline-formula id="il505"><mml:math id="IL37" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>], is the number of quartets displayed by <italic>T</italic> with <italic>X</italic>, <italic>Y</italic> as siblings and similarly for <inline-formula id="il605"><mml:math id="IL38" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] but nonsiblings. This means that we can easily compute the weight of the good edges if given the weight of the bad edges by applying <inline-formula id="il27"><mml:math id="IL39" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></inline-formula>.</p>
      <p>To compute <inline-formula id="il506"><mml:math id="IL40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> efficiently, we observe that there is exactly one leaf associated with label <italic>X</italic> (denoted <italic>x</italic>) and one leaf associated with label <italic>Y</italic> (denoted <italic>y</italic>), so there is a unique path connecting leaves <italic>x</italic> and <italic>y</italic> in <italic>T</italic> (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>A). Deleting the edges on this path (and their end points) produces a forest of <italic>K</italic> rooted subtrees, denoted {<italic>t</italic><sub>1</sub>, <italic>t</italic><sub>2</sub>, …, <italic>t</italic><sub><italic>K</italic></sub>}. Let <italic>w</italic> and <italic>z</italic> be two leaves of subtrees <italic>t</italic><sub><italic>i</italic></sub> and <italic>t</italic><sub><italic>j</italic></sub>, respectively. Then, <italic>T</italic> displays quartet <italic>x</italic>, <italic>w</italic>|<italic>z</italic>, <italic>y</italic> for <italic>i</italic> &lt; <italic>j</italic>, quartet <italic>x</italic>, <italic>y</italic>|<italic>w</italic>, <italic>z</italic> for <italic>i</italic> = <italic>j</italic>, and quartet <italic>x</italic>, <italic>z</italic>|<italic>w</italic>, <italic>y</italic> for <italic>i</italic> &gt; <italic>j</italic>. To summarize, <italic>x</italic>, <italic>y</italic> are siblings if and only if leaves <italic>w</italic>, <italic>z</italic> are in the same subtree off the path from <italic>x</italic> to <italic>y</italic>. It follows that <inline-formula id="il507"><mml:math id="IL41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] can be computed by considering all ways of selecting two other leaves from the same subtree for all subtrees on the path from <italic>x</italic> to <italic>y</italic>.</p>
      <fig position="float" id="GR277629HANF6">
        <label>Figure 6.</label>
        <caption>
          <p>To count the quartets induced by <italic>T</italic> with 0 and 17 as siblings, we consider the path between them (shown in blue in panel <italic>A</italic>). The deletion of the path produces six rooted subtrees (highlighted in gray). Because 0 and 17 are siblings in a quartet if and only if the other two taxa are drawn from the same subtree, the number of bad edges can be computed as <inline-formula id="il28"><mml:math id="IL42" display="inline" overflow="scroll"><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>4</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:math></inline-formula>. Here we show how to compute the number of quartets induced by <italic>T</italic> with 0 and 17 as siblings after rooting <italic>T</italic> arbitrarily. Panel <italic>B</italic> shows that we need to consider the number of ways of selecting two taxa from the same subtree for three cases: (1) the subtree above the <italic>lca</italic>(0, 17) (highlighted in green), (2) all subtrees off the path from the <italic>lca</italic>(0, 17) to the left taxon 0 (highlighted in red), and (3) all subtrees off the path from the <italic>lca</italic>(0, 17) to the right taxon 17 (highlighted in pink). Case 1 can be computed in constant time if we know the number of leaves below the LCA, that is, <inline-formula id="il801"><mml:math id="IL43" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = 6 (Eq. 8). Cases 2 and 3 can also be computed in constant time as follows. Panel <italic>C</italic> shows the prefix of the left child of the <italic>lca</italic>(0, 17), denoted <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>left</italic>]. This quantity is the number of ways of selecting two taxa from the same subtree for all subtrees off the path from the root to this vertex (circled in red). Similarly, the prefix of taxon 0, denoted <italic>p</italic>[0], is the number of ways of selecting two taxa from the same subtree for all subtrees off the path from the root to 0 (circled in purple). Therefore, the number of ways of selecting two taxa from all subtrees in case 2 (i.e., subtrees highlighted in red in <italic>B</italic>) is <inline-formula id="il701"><mml:math id="IL44" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = <italic>p</italic>[0] − <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>left</italic>] = 7 (Eq. 9). Case 3 can be computed in a similar fashion as <inline-formula id="il901"><mml:math id="IL45" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = <italic>p</italic>[17] − <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>right</italic>] = 3 (Eq. 10). Putting this all together gives <inline-formula id="il508"><mml:math id="IL46" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = 16 (Eq. 6).</p>
        </caption>
        <graphic xlink:href="1042f06" position="float"/>
      </fig>
      <p>This observation can be used to count the quartets efficiently when gene trees are singly labeled. However, we need to be more careful when <italic>T</italic> is multilabeled, which is typically the case because of artificial taxa. Following our example, suppose that we want to count the number of bad edges between 0 and 17 contributed by the subtree with leaves 4, 5, and 6. However, if leaves 4 and 5 are both relabeled by artificial taxon <italic>M</italic>, the quartet on 0, 17|4, 5 corresponds to quartet 0, 17|<italic>M</italic>, <italic>M</italic> has no topological information and should not be counted. The other quartets 0, 17|4, 6 and 0, 17|5, 6 correspond to 0, 17|<italic>M</italic>, 6 and thus should be counted.</p>
    </sec>
    <sec id="s3f">
      <title>Computing the bad edges given a singly labeled gene tree</title>
      <p>We now present an algorithm for computing the number of bad edges given a singly labeled gene tree <italic>T</italic> (later we will extend it to the more general case of a multilabeled gene tree). After rooting <italic>T</italic> arbitrarily, we again consider the path between <italic>x</italic> and <italic>y</italic>, which now goes through their lowest common ancestor, denoted <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>B). This allows us to break the computation into three parts
<disp-formula id="GR277629HANM6"><label>(6)</label><mml:math id="M6" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <inline-formula id="il802"><mml:math id="IL47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] is the number of ways of selecting two leaves from the subtree above <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>), <inline-formula id="il702"><mml:math id="IL48" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] the number of ways of selecting two leaves from the same subtree for all subtrees off the path from <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) to leaf in its <italic>left</italic> subtree (say <italic>x</italic>), and <inline-formula id="il902"><mml:math id="IL49" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] the number of ways of selecting two leaves from the same subtree for all subtrees off the path from <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) to the leaf in its <italic>right</italic> (say <italic>y</italic>). As we will show, each of these quantities can be computed in constant time, after an <italic>O</italic>(<italic>n</italic>) preprocessing phase, in which we compute two values for each vertex <italic>v</italic> in <italic>T</italic>. The first value <italic>c</italic>[<italic>v</italic>] is the number taxa below vertex <italic>v</italic>. The second value <italic>p</italic>[<italic>v</italic>], which we refer to as the “prefix” of <italic>v</italic>, is the number of ways to select two taxa from the same subtree for all subtrees off the path from the root to vertex <italic>v</italic> (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>C). It is easy to see that <italic>c</italic> can be computed in <italic>O</italic>(<italic>n</italic>) time via a postorder traversal. After which, <italic>p</italic> can be computed in <italic>O</italic>(<italic>n</italic>) via a preorder traversal, setting
<disp-formula id="GR277629HANM7"><label>(7)</label><mml:math id="M7" display="block" overflow="scroll"><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>c</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>
after initializing <italic>p</italic>[<italic>root</italic>] = 0. Now we can compute the quantities:
<disp-formula id="GR277629HANM8"><label>(8)</label><mml:math id="M8" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>
<disp-formula id="GR277629HANM9"><label>(9)</label><mml:math id="M9" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>x</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
<disp-formula id="GR277629HANM10"><label>(10)</label><mml:math id="M10" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>y</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi><mml:mi>h</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>v</italic>.<italic>left</italic> denotes the left child of <italic>v</italic> and <italic>v</italic>.<italic>right</italic> denotes the right child of <italic>v</italic> (see <xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>C). It is possible to access <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) in constant time after <italic>O</italic>(<italic>n</italic>) preprocessing step (<xref rid="GR277629HANC7" ref-type="bibr">Gusfield 1997</xref>), although we implemented this implicitly by computing the entries of <inline-formula id="il509"><mml:math id="IL50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> during a postorder traversal of <italic>T</italic>. Thus, we can compute <inline-formula id="il510"><mml:math id="IL51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> in <italic>O</italic>(<italic>n</italic><sup>2</sup>) time, provided that <italic>T</italic> is singly labeled.</p>
    </sec>
    <sec id="s3g">
      <title>Computing the bad edges given a multilabeled gene tree</title>
      <p>We now present an algorithm for computing the number of bad edges <inline-formula id="il511"><mml:math id="IL52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] given a multilabeled gene tree <italic>T</italic>. As previously mentioned, this breaks down into three cases. Case 1 (where taxa <italic>X</italic>, <italic>Y</italic> are both singletons) is presented below and cases 2 and 3 are presented in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      <p>As before, we focus on the number of ways to select two leaves <italic>w</italic>, <italic>z</italic> from a collection of subtrees; however, now that <italic>T</italic> is multilabeled, it is possible for two leaves <italic>w</italic>, <italic>z</italic> to have the same label. Therefore, we now need to count the number of ways to select two leaves <italic>z</italic>, <italic>w</italic> below vertex <italic>u</italic> so that they are <bold>uniquely labeled</bold>
<italic>Z</italic> ≠ <italic>W</italic> (note that we use capital letters <italic>W</italic> and <italic>Z</italic> to denote the current labels of leaves <italic>w</italic> and <italic>z</italic>, respectively). This modified binomial is computed by revising the preprocessing phase. We now let <italic>c</italic><sub>0</sub>[<italic>v</italic>] denote the number of leaves labeled by singletons below vertex <italic>v</italic> and let <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>] denote the number of leaves labeled by artificial taxon <italic>D</italic> below vertex <italic>v</italic>. Thus, for each vertex <italic>v</italic>, we store a vector <italic>c</italic>[<italic>v</italic>] of length <italic>b</italic> + 1, where <italic>b</italic> is the number of artificial taxa in <italic>T</italic>. As before, we can compute <italic>c</italic> in <italic>O</italic>(<italic>bn</italic>) time via a postorder traversal. However, the number of ways to select two leaves with different labels is now broken into three cases:
<list list-type="bullet"><list-item><p>the number of ways to select two singletons, which equals <inline-formula id="il29"><mml:math id="IL53" display="inline" overflow="scroll"><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>,</p></list-item><list-item><p>the number of ways to select one singleton and one artificial taxa, which equals <inline-formula id="il30"><mml:math id="IL54" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula>, where <inline-formula id="il31"><mml:math id="IL55" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the set of artificial taxa below vertex <italic>v</italic>, and</p></list-item><list-item><p>the number of ways to select two artificial taxa, which equals <inline-formula id="il32"><mml:math id="IL56" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>≠</mml:mo><mml:mi>E</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>E</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula>.</p></list-item></list>Putting this all together gives the <bold>modified binomial coefficient</bold>:
<disp-formula id="GR277629HANM11"><label>(11)</label><mml:math id="M11" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></disp-formula>
where <inline-formula id="il33"><mml:math id="IL57" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula> and <inline-formula id="il34"><mml:math id="IL58" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. At each vertex, the calculation of <italic>G</italic><sub>1</sub>[<italic>v</italic>] and <italic>G</italic><sub>2</sub>[<italic>v</italic>] takes <italic>O</italic>(<italic>b</italic>) time, after which we can compute <italic>g</italic><sub>0</sub>[<italic>v</italic>] in constant time. Thus, <italic>g</italic><sub>0</sub> can be computed in <italic>O</italic>(<italic>bn</italic>) time. Note that we also need to compute modified binomial coefficient for the subtree “above” vertex <italic>v</italic>, denoted <italic>g</italic><sub>0</sub>[<italic>v</italic>.<italic>above</italic>]. This can be computed in a similar fashion by noting that number of singletons above <italic>v</italic> is <italic>a</italic> − <italic>c</italic><sub>0</sub>[<italic>v</italic>] and that the number of leaves above <italic>v</italic> labeled by each artificial taxon <italic>D</italic> is |<bold>D</bold>| − <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>].</p>
      <p>Using the modified binomial, we can apply our algorithm for singly labeled trees by redefining prefix sum:
<disp-formula id="GR277629HANM12"><label>(12)</label><mml:math id="M12" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></disp-formula>
and then redefining the quantities from which we can compute <italic>B</italic>[<italic>x</italic>, <italic>y</italic>] in constant time, that is, <inline-formula id="il803"><mml:math id="IL59" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>g</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>above</italic>], and <inline-formula id="il703"><mml:math id="IL60" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>p</italic><sub>0</sub>[<italic>x</italic>] − <italic>p</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>left</italic>], and <inline-formula id="il903"><mml:math id="IL61" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>p</italic><sub>0</sub>[<italic>y</italic>] − <italic>p</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>right</italic>]. As there are <italic>a</italic><sup>2</sup> pairs of singletons in the subproblem, the total runtime is <italic>O</italic>(<italic>a</italic><sup>2</sup> + <italic>bn</italic>).</p>
    </sec>
    <sec id="s3h">
      <title>Normalizing quartet weights while computing the bad edges</title>
      <p>To normalize the quartet weights, <inline-formula id="il512"><mml:math id="IL62" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] becomes the <italic>weighted</italic> sum of quartets with <italic>X</italic>, <italic>Y</italic> are siblings, where each quartet <italic>x</italic>, <italic>y</italic>|<italic>z</italic>, <italic>w</italic> is weighted by <italic>I</italic>(<italic>x</italic>, <italic>y</italic>, <italic>z</italic>, <italic>w</italic>) = <italic>I</italic>(<italic>x</italic>)<italic>I</italic>(<italic>y</italic>)<italic>I</italic>(<italic>z</italic>)<italic>I</italic>(<italic>w</italic>), where <italic>I</italic>(<italic>x</italic>) is the importance value assigned to leaf <italic>x</italic> (which corresponds to a species in the singly labeled gene tree). When <italic>X</italic>, <italic>Y</italic> are singletons,
<disp-formula id="GR277629HANM13"><label>(13)</label><mml:math id="M13" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo><mml:mi>Z</mml:mi><mml:mo>≠</mml:mo><mml:mi>W</mml:mi><mml:mo>≠</mml:mo><mml:mi>X</mml:mi><mml:mo>≠</mml:mo><mml:mi>Y</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>q</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where the importance values of singletons are set to 1 so we know that <italic>I</italic>(<italic>x</italic>) = <italic>I</italic>(<italic>y</italic>) = 1. Note that all of the importance values are set to 1 in the unnormalized case.</p>
      <p>To compute the normalized version of <inline-formula id="il513"><mml:math id="IL63" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] using the previous algorithm, we set <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>] to be the sum of the importance values of the leaves below <italic>v</italic> that are labeled by <italic>D</italic> (i.e., <inline-formula id="il35"><mml:math id="IL64" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>L</italic>(<italic>v</italic>) denotes the set of leaves below <italic>v</italic>). The proof of correctness follows from <xref rid="st1" ref-type="statement">Lemma 1</xref>, in which we show that the total weight of selecting two uniquely labeled leaves below vertex <italic>u</italic> equals <italic>g</italic><sub>0</sub>[<italic>u</italic>]. This is because all other quantities (<italic>p</italic>, <inline-formula id="il804"><mml:math id="IL65" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="il704"><mml:math id="IL66" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="il904"><mml:math id="IL67" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>) are computed from <italic>g</italic><sub>0</sub>[<italic>u</italic>].</p>
      <statement id="st1" content-type="lemma">
        <label>Lemma 1.</label>
        <p><italic>The total weight of all taxon pairs in the subtree rooted at internal vertex u</italic><disp-formula id="GR277629HANM14"><label>(14)</label><mml:math id="M14" display="block" overflow="scroll"><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>Z</mml:mi><mml:mo>≠</mml:mo><mml:mi>W</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula><italic>where L</italic>(<italic>u</italic>) <italic>is the set of leaves below vertex u</italic>.</p>
        <p>See <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref> for proof.</p>
        <p>Lastly, we need to compute the good edges <inline-formula id="il606"><mml:math id="IL68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>], which is the total weight of quartets in which <italic>X</italic>, <italic>Y</italic> are not siblings. This can be performed in constant time, following <xref rid="st2" ref-type="statement">Lemma 2</xref>.</p>
      </statement>
      <statement id="st2" content-type="lemma">
        <label>Lemma 2.</label>
        <p><italic>Let T be a multilabeled gene tree, and let X</italic>, <italic>Y be singletons. Then,</italic><disp-formula id="GR277629HANM15"><label>(15)</label><mml:math id="M15" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula><italic>where r is the root vertex of T</italic>.</p>
        <p>See <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref> for proof.</p>
        <p>This concludes our treatment of case 1, in which <italic>X</italic>, <italic>Y</italic> are both singletons. To compute all entries of <inline-formula id="il514"><mml:math id="IL69" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il607"><mml:math id="IL70" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, we also need to consider the other two cases. In case 2, <italic>X</italic> is a singleton and <italic>Y</italic> is an artificial taxon or vice versa (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S13</xref>), and in case 3, both <italic>X</italic> and <italic>Y</italic> are artificial taxa (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S14</xref>). These cases are more complicated because the naive approach would consider all paths in the tree between a leaf labeled <italic>X</italic> and a leaf labeled <italic>Y</italic>, which is not efficient. The algorithms and proofs for these cases are provided in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      </statement>
    </sec>
    <sec id="s3i">
      <title>Software availability</title>
      <p>TREE-QMC is available at GitHub (<uri xlink:href="https://github.com/molloy-lab/TREE-QMC">https://github.com/molloy-lab/TREE-QMC</uri>) and as <xref rid="SD1" ref-type="supplementary-material">Supplemental Code</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="SM1">
    <title>Supplementary Material</title>
    <supplementary-material id="SD1" position="float" content-type="local-data">
      <label>Supplement 1</label>
      <media xlink:href="Supplemental_Code.zip" id="d64e4532" position="anchor"/>
    </supplementary-material>
    <supplementary-material id="SD2" position="float" content-type="local-data">
      <label>Supplement 2</label>
      <media xlink:href="Supplemental_Materials.pdf" id="d64e4535" position="anchor"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>This research was funded by the State of Maryland. We thank the reviewers for feedback that greatly improved the quality of our work.</p>
  </ack>
  <fn-group>
    <fn fn-type="supplementary-material">
      <p>[Supplemental material is available for this article.]</p>
    </fn>
    <fn>
      <p>Article published online before print. Article, supplemental material, and publication date are at <ext-link xlink:href="https://www.genome.org/cgi/doi/10.1101/gr.277629.122" ext-link-type="uri">https://www.genome.org/cgi/doi/10.1101/gr.277629.122</ext-link>.</p>
    </fn>
  </fn-group>
  <sec id="s5">
    <title>Competing interest statement</title>
    <p>The authors have no competing interests.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="GR277629HANC1">
      <mixed-citation publication-type="journal"><string-name><surname>Avni</surname><given-names>E</given-names></string-name>, <string-name><surname>Cohen</surname><given-names>R</given-names></string-name>, <string-name><surname>Snir</surname><given-names>S</given-names></string-name>. <year>2014</year>. <article-title>Weighted quartets phylogenetics</article-title>. <source>Syst Biol</source><volume>64</volume>: <fpage>233</fpage>–<lpage>242</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syu087</pub-id><pub-id pub-id-type="pmid">25414175</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC2">
      <mixed-citation publication-type="journal"><string-name><surname>Braun</surname><given-names>E</given-names></string-name>, <string-name><surname>Kimball</surname><given-names>R</given-names></string-name>. <year>2021</year>. <article-title>Data types and the phylogeny of neoaves</article-title>. <source>Birds</source><volume>2</volume>: <fpage>1</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.3390/birds2010001</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC3">
      <mixed-citation publication-type="journal"><string-name><surname>Burer</surname><given-names>S</given-names></string-name>, <string-name><surname>Monteiro</surname><given-names>RD</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>Y</given-names></string-name>. <year>2002</year>. <article-title>Rank-two relaxation heuristics for max-cut and other binary quadratic programs</article-title>. <source>SIAM J Optimization</source><volume>12</volume>: <fpage>503</fpage>–<lpage>521</lpage>. <pub-id pub-id-type="doi">10.1137/S1052623400382467</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC4">
      <mixed-citation publication-type="journal"><string-name><surname>Degnan</surname><given-names>JH</given-names></string-name>, <string-name><surname>Salter</surname><given-names>LA</given-names></string-name>. <year>2005</year>. <article-title>Gene tree distributions under the coalescent process</article-title>. <source>Evolution (N Y)</source><volume>59</volume>: <fpage>24</fpage>–<lpage>37</lpage>. <pub-id pub-id-type="doi">10.1111/j.0014-3820.2005.tb00891.x</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC5">
      <mixed-citation publication-type="journal"><string-name><surname>Dibaeinia</surname><given-names>P</given-names></string-name>, <string-name><surname>Tabe-Bordbar</surname><given-names>S</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2021</year>. <article-title>FASTRAL: improving scalability of phylogenomic analysis</article-title>. <source>Bioinformatics</source><volume>37</volume>: <fpage>2317</fpage>–<lpage>2324</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btab093</pub-id><pub-id pub-id-type="pmid">33576396</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC6">
      <mixed-citation publication-type="journal"><string-name><surname>Dunning</surname><given-names>I</given-names></string-name>, <string-name><surname>Gupta</surname><given-names>S</given-names></string-name>, <string-name><surname>Silberholz</surname><given-names>J</given-names></string-name>. <year>2018</year>. <article-title>What works best when? A systematic evaluation of heuristics for Max-Cut and QUBO</article-title>. <source>INFORMS J Comput</source><volume>30</volume>: <fpage>421</fpage>–<lpage>624</lpage>. <pub-id pub-id-type="doi">10.1287/ijoc.2017.0798</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC7">
      <mixed-citation publication-type="book"><string-name><surname>Gusfield</surname><given-names>D</given-names></string-name>. <year>1997</year>. <source>Algorithms on strings, trees, and sequences: computer science and computational biology</source>. <publisher-name>Cambridge University Press</publisher-name>, <publisher-loc>Cambridge, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC8">
      <mixed-citation publication-type="journal"><string-name><surname>Jarvis</surname><given-names>ED</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Aberer</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Li</surname><given-names>B</given-names></string-name>, <string-name><surname>Houde</surname><given-names>P</given-names></string-name>, <string-name><surname>Li</surname><given-names>C</given-names></string-name>, <string-name><surname>Ho</surname><given-names>SYW</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Nabholz</surname><given-names>B</given-names></string-name>, <string-name><surname>Howard</surname><given-names>JT</given-names></string-name>, <etal/><year>2014</year>. <article-title>Whole-genome analyses resolve early branches in the tree of life of modern birds</article-title>. <source>Science</source><volume>346</volume>: <fpage>1320</fpage>–<lpage>1331</lpage>. <pub-id pub-id-type="doi">10.1126/science.1253451</pub-id><pub-id pub-id-type="pmid">25504713</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC9">
      <mixed-citation publication-type="book"><string-name><surname>Karp</surname><given-names>RM</given-names></string-name>. <year>1972</year>. <article-title>Reducibility among combinatorial problems</article-title>. In <source>Complexity of computer computations: the IBM research symposia series</source>. (ed. <string-name><surname>Miller</surname><given-names>RE</given-names></string-name>, <etal/>), pp. <fpage>85</fpage>–<lpage>103</lpage>. <publisher-name>Springer</publisher-name>, <publisher-loc>Boston</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC10">
      <mixed-citation publication-type="journal"><string-name><surname>Kozlov</surname><given-names>AM</given-names></string-name>, <string-name><surname>Aberer</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Stamatakis</surname><given-names>A</given-names></string-name>. <year>2015</year>. <article-title>ExaML version 3: a tool for phylogenomic analyses on supercomputers</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>2577</fpage>–<lpage>2579</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv184</pub-id><pub-id pub-id-type="pmid">25819675</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC11">
      <mixed-citation publication-type="journal"><string-name><surname>Kubatko</surname><given-names>LS</given-names></string-name>, <string-name><surname>Degnan</surname><given-names>JH</given-names></string-name>. <year>2007</year>. <article-title>Inconsistency of phylogenetic estimates from concatenated data under coalescence</article-title>. <source>Syst Biol</source><volume>56</volume>: <fpage>17</fpage>–<lpage>24</lpage>. <pub-id pub-id-type="doi">10.1080/10635150601146041</pub-id><pub-id pub-id-type="pmid">17366134</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC12">
      <mixed-citation publication-type="journal"><string-name><surname>Lafond</surname><given-names>M</given-names></string-name>, <string-name><surname>Scornavacca</surname><given-names>C</given-names></string-name>. <year>2019</year>. <article-title>On the weighted quartet consensus problem</article-title>. <source>Theor Comput Sci</source><volume>769</volume>: <fpage>1</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1016/j.tcs.2018.10.005</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC13">
      <mixed-citation publication-type="journal"><string-name><surname>Legried</surname><given-names>B</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>, <string-name><surname>Roch</surname><given-names>S</given-names></string-name>. <year>2021</year>. <article-title>Polynomial-time statistical estimation of species trees under gene duplication and loss</article-title>. <source>J Comput Biol</source><volume>28</volume>: <fpage>452</fpage>–<lpage>468</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2020.0424</pub-id><pub-id pub-id-type="pmid">33325781</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC14">
      <mixed-citation publication-type="journal"><string-name><surname>Maddison</surname><given-names>W</given-names></string-name>. <year>1997</year>. <article-title>Gene trees in species trees</article-title>. <source>Syst Biol</source><volume>46</volume>: <fpage>523</fpage>–<lpage>536</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.3.523</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC15">
      <mixed-citation publication-type="journal"><string-name><surname>Mahbub</surname><given-names>M</given-names></string-name>, <string-name><surname>Wahab</surname><given-names>Z</given-names></string-name>, <string-name><surname>Reaz</surname><given-names>R</given-names></string-name>, <string-name><surname>Rahman</surname><given-names>MS</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>. <year>2021</year>. <article-title>wQFM: highly accurate genome-scale species tree estimation from weighted quartets</article-title>. <source>Bioinformatics</source><volume>37</volume>: <fpage>3734</fpage>–<lpage>3743</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btab428</pub-id><pub-id pub-id-type="pmid">34086858</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC16">
      <mixed-citation publication-type="journal"><string-name><surname>McCormack</surname><given-names>JE</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Crawford</surname><given-names>NG</given-names></string-name>, <string-name><surname>Gowaty</surname><given-names>PA</given-names></string-name>, <string-name><surname>Brumfield</surname><given-names>RT</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>TC</given-names></string-name>. <year>2012</year>. <article-title>Ultraconserved elements are novel phylogenomic markers that resolve placental mammal phylogeny when combined with species-tree analysis</article-title>. <source>Genome Res</source><volume>22</volume>: <fpage>746</fpage>–<lpage>754</lpage>. <pub-id pub-id-type="doi">10.1101/gr.125864.111</pub-id><pub-id pub-id-type="pmid">22207614</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC17">
      <mixed-citation publication-type="journal"><string-name><surname>Meiklejohn</surname><given-names>KA</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>TC</given-names></string-name>, <string-name><surname>Kimball</surname><given-names>RT</given-names></string-name>, <string-name><surname>Braun</surname><given-names>EL</given-names></string-name>. <year>2016</year>. <article-title>Analysis of a rapid evolutionary radiation using ultraconserved elements: evidence for a bias in some multispecies coalescent methods</article-title>. <source>Syst Biol</source><volume>65</volume>: <fpage>612</fpage>–<lpage>627</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syw014</pub-id><pub-id pub-id-type="pmid">26865273</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC18">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2015</year>. <article-title>ASTRAL-II: coalescent-based species tree estimation with many hundreds of taxa and thousands of genes</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>i44</fpage>–<lpage>i52</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv234</pub-id><pub-id pub-id-type="pmid">26072508</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC19">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>, <string-name><surname>Boussau</surname><given-names>B</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2014a</year>. <article-title>Statistical binning enables an accurate coalescent-based estimation of the avian tree</article-title>. <source>Science</source><volume>346</volume>: <fpage>1250463</fpage>. <pub-id pub-id-type="doi">10.1126/science.1250463</pub-id><pub-id pub-id-type="pmid">25504728</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC20">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Reaz</surname><given-names>R</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>, <string-name><surname>Zimmermann</surname><given-names>T</given-names></string-name>, <string-name><surname>Swenson</surname><given-names>MS</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2014b</year>. <article-title>ASTRAL: genome-scale coalescent-based species tree estimation</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>i541</fpage>–<lpage>i548</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu462</pub-id><pub-id pub-id-type="pmid">25161245</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC21">
      <mixed-citation publication-type="journal"><string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>To include or not to include: the impact of gene filtering on species tree estimation methods</article-title>. <source>Syst Biol</source><volume>67</volume>: <fpage>285</fpage>–<lpage>303</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syx077</pub-id><pub-id pub-id-type="pmid">29029338</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC22">
      <mixed-citation publication-type="journal"><string-name><surname>Nute</surname><given-names>M</given-names></string-name>, <string-name><surname>Chou</surname><given-names>J</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>The performance of coalescent-based species tree estimation methods under models of missing data</article-title>. <source>BMC Genom</source><volume>19</volume>(<issue>Suppl 5</issue>): <fpage>286</fpage>. <pub-id pub-id-type="doi">10.1186/s12864-018-4619-8</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC23">
      <mixed-citation publication-type="journal"><string-name><surname>Pamilo</surname><given-names>P</given-names></string-name>, <string-name><surname>Nei</surname><given-names>M</given-names></string-name>. <year>1988</year>. <article-title>Relationships between gene trees and species trees</article-title>. <source>Mol Biol Evol</source><volume>5</volume>: <fpage>568</fpage>–<lpage>583</lpage>. <pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a040517</pub-id><pub-id pub-id-type="pmid">3193878</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC24">
      <mixed-citation publication-type="journal"><string-name><surname>Rabiee</surname><given-names>M</given-names></string-name>, <string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2019</year>. <article-title>Multi-allele species reconstruction using ASTRAL</article-title>. <source>Mol Phylogenet Evol</source><volume>130</volume>: <fpage>286</fpage>–<lpage>296</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2018.10.033</pub-id><pub-id pub-id-type="pmid">30393186</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC25">
      <mixed-citation publication-type="journal"><string-name><surname>Roch</surname><given-names>S</given-names></string-name>, <string-name><surname>Steel</surname><given-names>M</given-names></string-name>. <year>2015</year>. <article-title>Likelihood-based tree reconstruction on a concatenation of aligned sequence data sets can be statistically inconsistent</article-title>. <source>Theor Popul Biol</source><volume>100</volume>: <fpage>56</fpage>–<lpage>62</lpage>. <pub-id pub-id-type="doi">10.1016/j.tpb.2014.12.005</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC26">
      <mixed-citation publication-type="journal"><string-name><surname>Roch</surname><given-names>S</given-names></string-name>, <string-name><surname>Nute</surname><given-names>M</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>Long-branch attraction in species tree estimation: inconsistency of partitioned likelihood and topology-based summary methods</article-title>. <source>Syst Biol</source><volume>68</volume>: <fpage>281</fpage>–<lpage>297</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syy061</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC27">
      <mixed-citation publication-type="journal"><string-name><surname>Rosenberg</surname><given-names>NA</given-names></string-name>. <year>2002</year>. <article-title>The probability of topological concordance of gene trees and species trees</article-title>. <source>Theor Popul Biol</source><volume>61</volume>: <fpage>225</fpage>–<lpage>247</lpage>. <pub-id pub-id-type="doi">10.1006/tpbi.2001.1568</pub-id><pub-id pub-id-type="pmid">11969392</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC28">
      <mixed-citation publication-type="journal"><string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2016</year>. <article-title>Fast coalescent-based computation of local branch support from quartet frequencies</article-title>. <source>Mol Biol Evol</source><volume>33</volume>: <fpage>1654</fpage>–<lpage>1668</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msw079</pub-id><pub-id pub-id-type="pmid">27189547</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC29">
      <mixed-citation publication-type="journal"><string-name><surname>Seo</surname><given-names>TK</given-names></string-name>. <year>2008</year>. <article-title>Calculating bootstrap probabilities of phylogeny using multilocus sequence data</article-title>. <source>Mol Biol Evol</source><volume>25</volume>: <fpage>960</fpage>–<lpage>971</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msn043</pub-id><pub-id pub-id-type="pmid">18281270</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC30">
      <mixed-citation publication-type="journal"><string-name><surname>Smith</surname><given-names>ML</given-names></string-name>, <string-name><surname>Vanderpool</surname><given-names>D</given-names></string-name>, <string-name><surname>Hahn</surname><given-names>MW</given-names></string-name>. <year>2022</year>. <article-title>Using all gene families vastly expands data available for phylogenomic inference</article-title>. <source>Mol Biol Evol</source><volume>39</volume>: <fpage>msac112</fpage>. <pub-id pub-id-type="doi">10.1093/molbev/msac112</pub-id><pub-id pub-id-type="pmid">35642314</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC31">
      <mixed-citation publication-type="journal"><string-name><surname>Snir</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>S</given-names></string-name>. <year>2010</year>. <article-title>Quartets MaxCut: a divide and conquer quartets algorithm</article-title>. <source>IEEE/ACM Trans Comput Biol Bioinform</source><volume>7</volume>: <fpage>704</fpage>–<lpage>718</lpage>. <pub-id pub-id-type="doi">10.1109/TCBB.2008.133</pub-id><pub-id pub-id-type="pmid">21030737</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC32">
      <mixed-citation publication-type="journal"><string-name><surname>Snir</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>S</given-names></string-name>. <year>2012</year>. <article-title>Quartet MaxCut: a fast algorithm for amalgamating quartet trees</article-title>. <source>Mol Phylogenet Evol</source><volume>62</volume>: <fpage>1</fpage>–<lpage>8</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2011.06.021</pub-id><pub-id pub-id-type="pmid">21762785</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC33">
      <mixed-citation publication-type="journal"><string-name><surname>Song</surname><given-names>S</given-names></string-name>, <string-name><surname>Liu</surname><given-names>L</given-names></string-name>, <string-name><surname>Edwards</surname><given-names>SV</given-names></string-name>, <string-name><surname>Wu</surname><given-names>S</given-names></string-name>. <year>2012</year>. <article-title>Resolving conflict in eutherian mammal phylogeny using phylogenomics and the multispecies coalescent model</article-title>. <source>Proc Natl Acad Sci</source><volume>109</volume>: <fpage>14942</fpage>–<lpage>14947</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1211733109</pub-id><pub-id pub-id-type="pmid">22930817</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC34">
      <mixed-citation publication-type="journal"><string-name><surname>Stamatakis</surname><given-names>A</given-names></string-name>. <year>2014</year>. <article-title>RAxML version 8: a tool for phylogenetic analysis and post-analysis of large phylogenies</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>1312</fpage>–<lpage>1313</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu033</pub-id><pub-id pub-id-type="pmid">24451623</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC35">
      <mixed-citation publication-type="journal"><string-name><surname>Tavaré</surname><given-names>S</given-names></string-name>. <year>1986</year>. <article-title>Some probabilistic and statistical problems in the analysis of DNA sequences</article-title>. <source>Lect Math Life Sci</source><volume>17</volume>: <fpage>57</fpage>–<lpage>86</lpage>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC36">
      <mixed-citation publication-type="journal"><string-name><surname>Wickett</surname><given-names>NJ</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Nguyen</surname><given-names>N</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>, <string-name><surname>Carpenter</surname><given-names>E</given-names></string-name>, <string-name><surname>Matasci</surname><given-names>N</given-names></string-name>, <string-name><surname>Ayyampalayam</surname><given-names>S</given-names></string-name>, <string-name><surname>Barker</surname><given-names>MS</given-names></string-name>, <string-name><surname>Burleigh</surname><given-names>JG</given-names></string-name>, <string-name><surname>Gitzendanner</surname><given-names>MA</given-names></string-name>, <etal/><year>2014</year>. <article-title>Phylotranscriptomic analysis of the origin and early diversification of land plants</article-title>. <source>Proc Natl Acad Sci</source><volume>111</volume>: <fpage>E4859</fpage>–<lpage>E4868</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1323926111</pub-id><pub-id pub-id-type="pmid">25355905</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC37">
      <mixed-citation publication-type="journal"><string-name><surname>Xi</surname><given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname><given-names>L</given-names></string-name>, <string-name><surname>Davis</surname><given-names>CC</given-names></string-name>. <year>2015</year>. <article-title>Genes with minimal phylogenetic information are problematic for coalescent analyses when gene tree estimation is biased</article-title>. <source>Mol Phylogenet Evol</source><volume>92</volume>: <fpage>63</fpage>–<lpage>71</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2015.06.009</pub-id><pub-id pub-id-type="pmid">26115844</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC38">
      <mixed-citation publication-type="journal"><string-name><surname>Yan</surname><given-names>Z</given-names></string-name>, <string-name><surname>Smith</surname><given-names>ML</given-names></string-name>, <string-name><surname>Du</surname><given-names>P</given-names></string-name>, <string-name><surname>Hahn</surname><given-names>MW</given-names></string-name>, <string-name><surname>Nakhleh</surname><given-names>L</given-names></string-name>. <year>2021</year>. <article-title>Species tree inference methods intended to deal with incomplete lineage sorting are robust to the presence of paralogs</article-title>. <source>Syst Biol</source><volume>71</volume>: <fpage>367</fpage>–<lpage>381</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syab056</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC39">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2022</year>. <article-title>Weighting by gene tree uncertainty improves accuracy of quartet-based species trees</article-title>. <source>Mol Biol Evol</source><volume>39</volume>: <fpage>msac215</fpage>. <pub-id pub-id-type="doi">10.1093/molbev/msac215</pub-id><pub-id pub-id-type="pmid">36201617</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC40">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Rabiee</surname><given-names>M</given-names></string-name>, <string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2018</year>. <article-title>ASTRAL-III: polynomial time species tree reconstruction from partially resolved gene trees</article-title>. <source>BMC Bioinform</source><volume>19</volume>: <fpage>153</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-018-2129-y</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC41">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Scornavacca</surname><given-names>C</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2020</year>. <article-title>ASTRAL-Pro: quartet-based species-tree inference despite paralogy</article-title>. <source>Mol Biol Evol</source><volume>37</volume>: <fpage>3292</fpage>–<lpage>3307</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msaa139</pub-id><pub-id pub-id-type="pmid">32886770</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Res</journal-id>
    <journal-id journal-id-type="hwp">genome</journal-id>
    <journal-id journal-id-type="publisher-id">GENOME</journal-id>
    <journal-title-group>
      <journal-title>Genome Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1088-9051</issn>
    <issn pub-type="epub">1549-5469</issn>
    <publisher>
      <publisher-name>Cold Spring Harbor Laboratory Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10538498</article-id>
    <article-id pub-id-type="pmid">37197990</article-id>
    <article-id pub-id-type="medline">9509184</article-id>
    <article-id pub-id-type="doi">10.1101/gr.277629.122</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methods</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Improving quartet graph construction for scalable and accurate species tree estimation from gene trees</article-title>
      <alt-title alt-title-type="left-running">Han and Molloy</alt-title>
      <alt-title alt-title-type="right-running">TREE-QMC</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0200-5924</contrib-id>
        <name>
          <surname>Han</surname>
          <given-names>Yunheng</given-names>
        </name>
        <xref rid="af1" ref-type="aff">1</xref>
        <xref rid="af2" ref-type="aff">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5553-3312</contrib-id>
        <name>
          <surname>Molloy</surname>
          <given-names>Erin K.</given-names>
        </name>
        <xref rid="af1" ref-type="aff">1</xref>
        <xref rid="af2" ref-type="aff">2</xref>
      </contrib>
    </contrib-group>
    <aff id="af1"><label>1</label>Department of Computer Science, University of Maryland, College Park, Maryland 20742, USA;</aff>
    <aff id="af2"><label>2</label>University of Maryland Institute for Advanced Computer Studies, College Park, Maryland 20742, USA</aff>
    <author-notes>
      <corresp>Corresponding author: <email>ekmolloy@umd.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <volume>33</volume>
    <issue>7</issue>
    <fpage>1042</fpage>
    <lpage>1052</lpage>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>12</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>4</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>
        <ext-link xlink:href="http://genome.cshlp.org/site/misc/terms.xhtml" ext-link-type="uri">© 2023 Han and Molloy; Published by Cold Spring Harbor Laboratory Press</ext-link>
      </copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This article is distributed exclusively by Cold Spring Harbor Laboratory Press for the first six months after the full-issue publication date (see <ext-link ext-link-type="uri" xlink:href="https://genome.cshlp.org/site/misc/terms.xhtml">https://genome.cshlp.org/site/misc/terms.xhtml</ext-link>). After six months, it is available under a Creative Commons License (Attribution-NonCommercial 4.0 International), as described at <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="1042.pdf"/>
    <abstract>
      <p>Summary methods are widely used to estimate species trees from genome-scale data. However, they can fail to produce accurate species trees when the input gene trees are highly discordant because of estimation error and biological processes, such as incomplete lineage sorting. Here, we introduce TREE-QMC, a new summary method that offers accuracy and scalability under these challenging scenarios. TREE-QMC builds upon weighted Quartet Max Cut, which takes weighted quartets as input and then constructs a species tree in a divide-and-conquer fashion, at each step forming a graph and seeking its max cut. The wQMC method has been successfully leveraged in the context of species tree estimation by weighting quartets by their frequencies in the gene trees; we improve upon this approach in two ways. First, we address accuracy by normalizing the quartet weights to account for “artificial taxa” introduced during the divide phase so subproblem solutions can be combined during the conquer phase. Second, we address scalability by introducing an algorithm to construct the graph directly from the gene trees; this gives TREE-QMC a time complexity of <inline-formula id="il1"><mml:math id="IL1" display="inline" overflow="scroll"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msup></mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>n</italic> is the number of species and <italic>k</italic> is the number of gene trees, assuming the subproblem decomposition is perfectly balanced. These contributions enable TREE-QMC to be highly competitive in terms of species tree accuracy and empirical runtime with the leading quartet-based methods, even outperforming them on some model conditions explored in our simulation study. We also present the application of these methods to an avian phylogenomics data set.</p>
    </abstract>
    <funding-group>
      <award-group id="funding-1">
        <funding-source>State of Maryland</funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <p>Estimating the evolutionary history for a collection of species is a fundamental problem in evolutionary biology. Increasingly, species trees are estimated from multilocus data sets, with molecular sequences partitioned into (recombination-free) regions of the genome (referred to as loci or genes). A popular approach to species tree estimation involves concatenating the alignments for individual loci together and then estimating a phylogeny under standard models of molecular sequence evolution, like the generalized time reversible (GTR) model (<xref rid="GR277629HANC35" ref-type="bibr">Tavaré 1986</xref>).</p>
  <p>Such models assume the genes have a shared evolutionary history; however, this is not necessarily the case. The evolutionary histories of individual genes (referred to as gene trees) can differ from each other because of biological processes (<xref rid="GR277629HANC14" ref-type="bibr">Maddison 1997</xref>). Incomplete lineage sorting (ILS), one of the most well-studied sources of gene tree discordance, is an outcome of genes evolving within populations of individuals, as modeled by the multispecies coalescent (MSC) (<xref rid="GR277629HANC23" ref-type="bibr">Pamilo and Nei 1988</xref>; <xref rid="GR277629HANC27" ref-type="bibr">Rosenberg 2002</xref>; <xref rid="GR277629HANC4" ref-type="bibr">Degnan and Salter 2005</xref>). Concatenation-based approaches to species tree estimation can be statistically inconsistent under the MSC (<xref rid="GR277629HANC25" ref-type="bibr">Roch and Steel 2015</xref>). Moreover, simulation studies have shown concatenation can perform poorly when the amount of ILS is high (e.g., <xref rid="GR277629HANC11" ref-type="bibr">Kubatko and Degnan 2007</xref>). ILS is expected to impact many major groups, including birds (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>), placental mammals (<xref rid="GR277629HANC16" ref-type="bibr">McCormack et al. 2012</xref>), and land plants (<xref rid="GR277629HANC36" ref-type="bibr">Wickett et al. 2014</xref>). Thus, species tree estimation methods that account for ILS, either explicitly or implicitly, are of interest.</p>
  <p>An alternative to concatenation involves estimating gene trees (typically one per locus) and then applying a summary method. The most popular summary method to date, ASTRAL (<xref rid="GR277629HANC20" ref-type="bibr">Mirarab et al. 2014b</xref>), is a heuristic for the NP-hard maximum quartet support species tree (MQSST) problem (<xref rid="GR277629HANC12" ref-type="bibr">Lafond and Scornavacca 2019</xref>), which can be framed as weighting quartets (four-leaf trees) by their frequencies in the input gene trees and then seeking a species tree <italic>T</italic> that maximizes the total weight of the quartets displayed by <italic>T</italic>. The optimal solution to MQSST is a statistically consistent estimator of the (unrooted) species tree under the MSC model (<xref rid="GR277629HANC20" ref-type="bibr">Mirarab et al. 2014b</xref>), which is why heuristics for this problem are widely used in the context of multilocus species tree estimation. Proofs of consistency typically assume the input gene trees are error-free (<xref rid="GR277629HANC26" ref-type="bibr">Roch et al. 2018</xref>); however, this is unlikely in practice. An analysis of gene trees published for several recent systematic studies found low bootstrap support values on average (Table 1 in <xref rid="GR277629HANC21" ref-type="bibr">Molloy and Warnow 2018</xref>), suggesting that gene tree estimation error (GTEE) may be pervasive across modern phylogenomics data sets. GTEE can negatively impact the accuracy of summary methods, as shown by simulation (e.g., <xref rid="GR277629HANC37" ref-type="bibr">Xi et al. 2015</xref>) and systematic studies (e.g., <xref rid="GR277629HANC17" ref-type="bibr">Meiklejohn et al. 2016</xref>). Overall, GTEE and ILS present significant challenges to species tree estimation.</p>
  <p>A third challenge is scalability. ASTRAL executes an exact (dynamic programming) algorithm for MQSST within a constrained version of the solution space constructed from the input gene trees. There have been many improvements to ASTRAL, with the latest version ASTRAL-III (<xref rid="GR277629HANC40" ref-type="bibr">Zhang et al. 2018</xref>) having a time complexity of <italic>O</italic>((<italic>nk</italic>)<sup>1.726</sup><italic>x</italic>), where <italic>n</italic> is the number of species (also called taxa), <italic>k</italic> is the number of gene trees, and <italic>x</italic> = <italic>O</italic>(<italic>nk</italic>) is the size of the constrained solution space. Because <italic>x</italic> depends on the amount of gene tree heterogeneity, a recent method FASTRAL (<xref rid="GR277629HANC5" ref-type="bibr">Dibaeinia et al. 2021</xref>) runs ASTRAL-III in an aggressively constrained solution space to speed up species tree estimation.</p>
  <p>The other popular quartet methods, wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>) and wQFM (<xref rid="GR277629HANC15" ref-type="bibr">Mahbub et al. 2021</xref>), take weighted quartets as input and then execute a divide-and-conquer approach to phylogeny reconstruction. A recent study found wQFM to be more accurate than ASTRAL-III on challenging model conditions characterized by high ILS and high GTEE (<xref rid="GR277629HANC15" ref-type="bibr">Mahbub et al. 2021</xref>). In these analyses, wQFM was given Θ(<italic>n</italic><sup>4</sup>) quartets as input, with each quartet weighted by the number of gene trees that displayed it. The related input processing step limits the scalability of this approach. Here, we enable improved accuracy and scalability by introducing TREE-QMC.</p>
  <sec sec-type="results" id="s1">
    <title>Results</title>
    <sec id="s1a">
      <title>Overview of TREE-QMC method</title>
      <p>TREE-QMC builds upon the first widely used quartet method, wQMC, which reconstructs the species tree in a divide-and-conquer fashion. At each step in the divide phase, an internal branch in the output species tree is identified; this branch splits the taxa into two disjoint subsets (<xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>). The algorithm continues by recursion on the subproblems implied by the two subsets of taxa. “Artificial taxa” are introduced to represent the species on the opposite of the branch so that solutions to subproblems can be combined during the conquer phase. The recursion terminates when the subproblem has three or fewer taxa, as there is only one possible tree that can be returned. At each step in the conquer phase, trees for complementary subproblems are connected at the related artificial taxa, until there is a single tree on the original set of species (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S1</xref>).</p>
      <fig position="float" id="GR277629HANF1">
        <label>Figure 1.</label>
        <caption>
          <p>At each step in the divide phase, taxa are split into two disjoint subsets and then artificial taxa are introduced to represent the species on the other side of the split. To compute the quartet weights for a given subproblem, the leaves of each gene tree are relabeled by the artificial taxa. Without normalization (column n0), quartet 1, 2|<italic>Y</italic>, <italic>Z</italic> gets zero votes and the alternative quartets get six votes each (note: quartet 1, <italic>Y</italic>|2, <italic>Z</italic> gets six votes by taking either species 5, 3, or 4 for label <italic>Y</italic> and either species 0 or 9 for label <italic>Z</italic>). With normalization, each gene tree gets one vote for each subset of four labels, although this vote can be split across the three possible quartets. In the uniform normalization scheme (column n1), we simply divide column n0 by the total number of votes cast in the unnormalized case. In the nonuniform normalization scheme (column n2), we leverage that structure implied by the divide phase of the algorithm; the idea is that species should have lesser importance each time they are relabeled by artificial taxa.</p>
        </caption>
        <graphic xlink:href="1042f01" position="float"/>
      </fig>
      <p>Central to wQMC's approach is a graph built from weighted quartets. This graph is constructed in such a way that its max cut should correspond to a branch in the output species tree (<xref rid="GR277629HANC31" ref-type="bibr">Snir and Rao 2010</xref>, <xref rid="GR277629HANC32" ref-type="bibr">2012</xref>; <xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). Our observation is that quartets on artificial taxa can have higher weights than quartets on only nonartificial taxa (called singletons) when looking at a single gene tree (<xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>). As we will show, normalizing the quartet weights so that each gene tree gets one vote for every subset of four species improves accuracy. The best performing normalization scheme (n2) weights quartets based on the subproblem decomposition; essentially, quartets are upweighted if their taxa are more closely related to the current subproblem (note: n1 denotes uniform normalization and n0 denotes no normalization). Moreover, we provide an algorithm to build the (normalized) quartet graph directly from the input gene trees, enabling TREE-QMC to have a time complexity of <italic>O</italic>(<italic>n</italic><sup>3</sup><italic>k</italic>) if the subproblem decomposition is perfectly balanced (Theorem 3 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). This analysis is for a highly idealized setting and ignores large constant factors (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>).</p>
      <p>Beyond time complexity, methods can differ from each other in terms of data locality, code optimizations, and other theoretical guarantees (e.g., ASTRAL is guaranteed to find an optimal solution within its constrained solution space, whereas TREE-QMC has no such guarantee). Thus, in the remainder of this paper, we focus on evaluating the empirical performance of TREE-QMC (and its different normalization schemes) against the leading quartet-based summary methods on simulated and biological data.</p>
    </sec>
    <sec id="s1b">
      <title>Experimental evaluation</title>
      <p>We now give an overview of our simulation study; details are provided in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      <sec sec-type="methods" id="s1b1">
        <title>Methods benchmarking</title>
        <p>TREE-QMC is compared against four leading quartet methods: wQMC v1.3, wQFM v3.0, ASTRAL v5.5.7 (denoted ASTRAL-III or ASTRAL3), and FASTRAL. Two of these methods, wQMC and wQFM, take weighted quartets instead of gene trees as input (the input processing step is performed using the script distributed with wQFM). All methods are run in default mode. The current version of TREE-QMC requires binary gene trees as input so polytomies in the estimated gene trees are refined arbitrarily before running TREE-QMC (the same refinements are used in all runs of TREE-QMC to ensure a fair comparison across the normalization schemes).</p>
      </sec>
      <sec id="s1b2">
        <title>Evaluation criteria</title>
        <p>All methods are compared in terms of species tree error, quartet score, and runtime. Species tree error is the percent Robinson-Foulds (RF) error (i.e., normalized RF distance between the true and estimated species trees multiplied by 100). Because the true and estimated species trees are both binary, the RF error rate is equivalent to false negative error rate (i.e., the fraction of the internal branches in the true species tree that are missing from the estimated species tree). Two-sided Wilcoxon signed-rank tests are used to evaluate differences between TREE-QMC-n2 versus FASTRAL as well as TREE-QMC-n2 versus ASTRAL3 (TREE-QMC-n2 is also compared against wQFM when possible).</p>
        <p>We report the difference in the quartet scores between the estimated and true species trees (scores are computed using the same set of gene trees). The quartet score is the number of quartets in the input gene trees that are displayed by the output species tree (divided by the total number of quartets in the gene trees). This quantity is simply the (normalized) MQSST objective function, so higher quartet scores imply a better solution to MQSST.</p>
        <p>The runtime is the wall clock time, which for wQFM and wQMC includes the time to weight quartets based on the input gene trees (the fraction of time spent on input processing phase is reported in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). All methods are run on the same data set on the same compute node on our cluster; the maximum wall clock time is 18 h.</p>
      </sec>
      <sec id="s1b3">
        <title>Simulated data sets</title>
        <p>Our benchmarking study uses data simulated in prior studies, specifically the ASTRAL-II simulated data sets (<xref rid="GR277629HANC18" ref-type="bibr">Mirarab and Warnow 2015</xref>) as well as the avian and mammalian simulated data sets (<xref rid="GR277629HANC19" ref-type="bibr">Mirarab et al. 2014a</xref>). These data are generated by (1) taking a model species tree, (2) simulating gene trees within the species tree under the MSC, (3) simulating sequences down each gene tree under the GTR model, and (4) estimating a tree from set of gene sequences. Either the true gene trees from step 2 or the estimated gene trees from step 4 can be given as input to methods. This process is repeated for various parameter settings.</p>
        <p>The ASTRAL-II data sets are generated from model species trees simulated under the Yule model given three parameters: species tree height, speciation rate, and number of taxa. The speciation rate is set so that speciation events are clustered near the root (deep) or near the tips (shallow) of the species tree. There are 50 replicates for each model condition (note that a new model species tree is simulated for each replicate data set). The avian and mammalian simulated data sets are generated from published species trees estimated for 48 birds (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>) and 37 mammals (<xref rid="GR277629HANC33" ref-type="bibr">Song et al. 2012</xref>), respectively. The species tree branches are scaled to vary the amount of ILS, and the sequence length is changed to vary the amount of GTEE. There are 20 replicates for each model condition.</p>
        <p>The data properties (ILS and GTEE levels) are summarized in <xref rid="SD2" ref-type="supplementary-material">Supplemental Tables S1 and S2</xref>. The ILS level is the percent RF error (between the true species tree and the true gene tree) averaged across all gene trees, and GTEE level is the percent RF error (between the true and estimated gene trees) averaged across all gene trees. Overall, these data sets cover a range of model conditions. The results are presented in four experiments looking at the impact of varying the number of taxa, the species tree scale/height (proxy for ILS), the sequence length (proxy for GTEE), and the number of genes.</p>
      </sec>
    </sec>
    <sec id="s01">
      <title>Experimental results</title>
      <sec id="s1b4">
        <title>Number of taxa</title>
        <p><xref rid="GR277629HANF2" ref-type="fig">Figure 2</xref>, A and B, shows the impact of varying the number of taxa. The pipelines that need weighted quartets to be given as input (wQFM and wQMC) run on the order of seconds for 10 taxa, minutes for 50 taxa, and hours for 100 taxa. The runtime of these pipelines is dominated by the time to weight Θ(<italic>n</italic><sup>4</sup>) quartets by their frequency in the input gene trees (<xref rid="SD2" ref-type="supplementary-material">Supplemental Table S3</xref>). This input processing step does not complete on our compute nodes within our maximum wall clock time of 18 h for most data sets with 200 taxa. Therefore, we could not run wQMC and wQFM on data sets with 200, 500, or 1000 taxa. In contrast, TREE-QMC implements a similar approach to wQMC but bypasses the input processing step, scaling to 1000 taxa and 1000 genes. For these data sets, FASTRAL, TREE-QMC-n2, and ASTRAL-III complete on average in 32 min, 64 min, and 5.3 h, respectively (note: ASTRAL-III fails to complete on 3/50 replicates within our maximum wall clock time of 18 h). Thus, TREE-QMC-n2 is much faster than ASTRAL-III and is not much slower than FASTRAL. TREE-QMC-n2 is significantly more accurate than either FASTRAL or ASTRAL-III when the number of taxa is 200 or greater. For these same conditions, quartet weight normalization, and especially the nonuniform (n2) scheme, improves TREE-QMC's accuracy. Results for methods given true gene trees as input or only 250 (out of 1000) gene trees as input are shown in <xref rid="SD2" ref-type="supplementary-material">Supplemental Figs. S7–S9</xref>).</p>
        <fig position="float" id="GR277629HANF2">
          <label>Figure 2.</label>
          <caption>
            <p>Impact of number of taxa. (<italic>A</italic>) Percent species tree error across replicates (bars represent medians; triangles represent means; outliers are not shown). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (all but one test survives Bonferroni multiple comparison correction; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S4</xref> for details). (<italic>B</italic>) Mean runtime across replicates (shaded region indicates standard error). All data sets have species tree height 1×, shallow speciation, and 1000 estimated gene trees. The ILS level is 17%–35%, and GTEE level is 19%–30%. Note: The input processing for wQMC and wQFM does not run within our maximum wall clock time of 18 h for data sets with 200 or more taxa.</p>
          </caption>
          <graphic xlink:href="1042f02" position="float"/>
        </fig>
      </sec>
      <sec id="s1b5">
        <title>Incomplete lineage sorting (ILS)</title>
        <sec id="s1b5a">
          <title>ASTRAL-II data (200 taxa, 1000 estimated gene trees)</title>
          <p>Figure 3, A and B, shows the impact of varying the species tree height and thus the amount of ILS for the ASTRAL-II data sets. TREE-QMC-n2, FASTRAL, and ASTRAL-III produce highly accurate species trees, with median species tree error at or below 6% for all model conditions (note: the input processing for wQMC and wQFM does not run within our maximum wall clock time of 18 h for these 200-taxon data sets). For some conditions, TREE-QMC-n2 is significantly more accurate than FASTRAL or ASTRAL-III; otherwise, there are no significant differences between these pairs of methods. Quartet weight normalization improves the accuracy of TREE-QMC; this effect is most pronounced when the amount of ILS was very high (species tree height: 0.5×). On these same conditions, ASTRAL-III is much slower than the other methods, taking 73 min on average for the highest amount of ILS (species tree height: 0.5×) compared to 5 min on average for the lowest amount of ILS (species tree height: 5×). In contrast, both TREE-QMC-n2 and FASTRAL are quite fast, taking on average &lt;3 min for model conditions with 200 or fewer taxa. Results for methods given true gene trees as input or only 250 (out of 1000) gene trees as input are shown in <xref rid="SD2" ref-type="supplementary-material">Supplemental Figs. S10–S12</xref>.</p>
          <fig position="float" id="GR277629HANF3">
            <label>Figure 3.</label>
            <caption>
              <p>Impact of the amount of ILS. (<italic>A</italic>) Percent species tree error across replicates (bars represent medians; triangles represent means; outliers are not shown). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (three tests survive multiple comparison corrections; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S5</xref> for details). (<italic>B</italic>) Mean runtime across replicates (shaded region indicates standard error). All data sets have 200 taxa and 1000 estimated gene trees. One model condition with species tree height 1× and shallow speciation is repeated from <xref rid="GR277629HANF2" ref-type="fig">Fig. 2</xref>. For species tree heights 0.5×, 1×, and 5×, the ILS level is 68%–69%, 34%, and 9%–21%, respectively, and the GTEE level is 44%, 27%–34%, and 21%–28%, respectively.</p>
            </caption>
            <graphic xlink:href="1042f03" position="float"/>
          </fig>
        </sec>
        <sec id="s1b5b">
          <title>Avian simulated data (48 taxa, 1000 estimated gene trees)</title>
          <p>Figure 4, A–C, shows the impact of varying the species tree scale and thus the amount of ILS on the avian simulated data sets. wQMC is the least accurate method and is even less accurate than TREE-QMC-n0 (no normalization). Normalization improves the performance of TREE-QMC for these data, enabling TREE-QMC-n2 to be among the most accurate methods when the amount of ILS is high (species tree scales: 0.5× and 1×). Testing for differences between TREE-QMC-n2 versus the other three leading methods (wQFM, FASTRAL, and ASTRAL-III) reveals that either TREE-QMC-n2 is significantly better or else there are no significant differences between these pairs of methods. All methods finish quickly: wQMC and wQFM complete in &lt;13 min on average, ASTRAL-III completes in &lt;4 min on average, and the other methods finish in &lt;1 min on average.</p>
          <fig position="float" id="GR277629HANF4">
            <label>Figure 4.</label>
            <caption>
              <p>Impact of ILS and GTEE. (<italic>A</italic>), (<italic>B</italic>), and (<italic>C</italic>) Percent species tree error for the avian data set with 1000 estimated or true gene trees and species tree scales 0.5×, 1×, and 2×, respectively. Two-sided Wilcoxon signed-ranked tests were used to evaluate differences between TREE-QMC-n2 versus wQFM, FASTRAL, and ASTRAL3 (nine tests per subfigure). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (for 0.5× species tree scale with estimated gene trees, the difference between TREE-QMC-n2 and ASTRAL-II survives Bonferroni multiple comparison correction; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S6</xref> for details). (<italic>D</italic>), (<italic>E</italic>), and (<italic>F</italic>) show the difference in quartet score between the estimated and true species tree times 1000 for species tree scales 0.5×, 1×, and 2×, respectively (positive values indicate the estimated tree is a better solution to MQSST than the true tree). For species tree heights 0.5×, 1×, and 2×, the ILS level is 60%, 47%, and 35%, respectively, and the GTEE level is 60%, 60%, and 62%, respectively. Results for wQMC are cut off because otherwise the trends cannot be observed (see <xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S2</xref> for full <italic>y</italic>-axes).</p>
            </caption>
            <graphic xlink:href="1042f04" position="float"/>
          </fig>
          <p>Figure 4, D–F, shows the difference in quartet score between estimated and true species trees. We find that most methods typically recover species trees with higher quartet scores than the true species tree, indicating that the true species tree is not the optimal solution to MQSST. Moreover, the relative performance of methods for quartet score is different than the relative performance of methods for species tree error for many model conditions. These two trends are especially pronounced when gene trees are estimated (mean error: 60%–62%).</p>
        </sec>
        <sec id="s1b5c">
          <title>Mammalian simulated data (37 taxa, 200 estimated gene trees)</title>
          <p>All methods have similar performance for the mammalian data, although these data sets represent easier model conditions in terms of ILS and GTEE levels (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S3</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S7</xref>).</p>
        </sec>
      </sec>
      <sec id="s1b6">
        <title>Gene tree estimation error (GTEE)</title>
        <sec id="s1b6a">
          <title>Avian simulated data (48 taxa, 1000 gene trees)</title>
          <p>Figure 4, A–C, also shows the impact of GTEE for each species tree scale (ILS level). For each ILS level, methods are given true gene trees or estimated gene trees (mean error: 60%–62%). The trends for estimated gene trees are discussed above. For true gene trees, there are no significant differences between TREE-QMC-n2 versus the other leading methods (wQFM, FASTRAL, and ASTRAL-III), and all versions of TREE-QMC perform similarly so the utility of normalization is diminished. Moreover, these methods find species trees with similar quartet scores to the true species tree, unlike the case of estimated gene trees. Lastly, the performance of wQMC is in line with the other methods when there is very little gene tree heterogeneity because of ILS or GTEE (<xref rid="GR277629HANF4" ref-type="fig">Fig. 4</xref>C).</p>
        </sec>
        <sec id="s1b6b">
          <title>Mammalian simulated data (37 taxa, 200 gene trees)</title>
          <p> Similar trends between methods are observed for mammalian simulated data sets when varying the sequence lengths (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S4</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S8</xref>). TREE-QMC is significantly more accurate than FASTRAL and ASTRAL-III for the shortest sequence length (250 bp; GTEE level 43%); there are no differences in accuracy between these pairs of methods otherwise.</p>
        </sec>
      </sec>
      <sec id="s1b7">
        <title>Number of genes</title>
        <p>Similar trends between methods are observed when varying the number of genes (e.g., <xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S5</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Tables S9, S10</xref>).</p>
      </sec>
    </sec>
    <sec id="s1c">
      <title>Reanalysis of avian phylogenomics data set</title>
      <p>We also reanalyze the avian data set from <xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. (2014)</xref> with 3679 ultraconserved elements (UCEs). This data set includes the best maximum likelihood tree and the set of 100 bootstrapped trees for each UCE. Although the true species tree is unknown, we discuss the presence and absence of strongly corroborated clades, such as Passerea and six of the magnificent seven clades excluding clade IV (<xref rid="GR277629HANC2" ref-type="bibr">Braun and Kimball 2021</xref>). We also compare methods to the published concatenation tree estimated by running RAxML (<xref rid="GR277629HANC34" ref-type="bibr">Stamatakis 2014</xref>) on UCEs only (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>); thus the comparison between concatenation and the quartet-based summary methods is on the same data set. Branch support is computed for the estimated species trees using ASTRAL-III's local posterior probability (<xref rid="GR277629HANC28" ref-type="bibr">Sayyari and Mirarab 2016</xref>) as well as using multilocus bootstrapping (MLBS) (<xref rid="GR277629HANC29" ref-type="bibr">Seo 2008</xref>). We repeat this analysis (except MLBS) on the TENT data (14,446 gene trees), which includes gene trees estimated on UCEs as well as exons and introns. In this case, methods are compared to the published TENT concatenation tree estimated by running ExaML (<xref rid="GR277629HANC10" ref-type="bibr">Kozlov et al. 2015</xref>).</p>
      <sec id="s1c1">
        <title>UCE data</title>
        <p>For the UCE data (48 taxa, 3679 gene trees), ASTRAL-III completes in 65 min, making it the most time consuming method. All other methods run in less than a minute; however, the preprocessing step to weight quartets for wQFM takes 41 min.</p>
        <p>Both FASTRAL and ASTRAL-III produce the same species tree (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>C), and both TREE-QMC-n2 and wQFM produce the same species tree (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>A). We compare these two trees to the published concatenation tree for UCEs (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>B). There are many similarities between these three trees, as all contain the magnificent seven clades. The TREE-QMC-n2 and FASTRAL trees differ from the concatenation tree by seven and nine branches, respectively, putting the TREE-QMC-n2 tree slightly closer to the concatenation tree than the FASTRAL tree. The TREE-QMC-n2 tree recovers Passerea and Afroaves and fails to recover Columbea, like the concatenation tree and unlike the ASTRAL-III tree (note that Passerea was considered to be strongly corroborated, after accounting for data type effects, by <xref rid="GR277629HANC2" ref-type="bibr">Braun and Kimball 2021</xref>). Overall, there are only five branches that differ between the TREE-QMC-n2 tree and the FASTRAL tree; all of these branches have nearly equal quartet support for their alternative resolutions so that both trees represent reasonable hypotheses.</p>
        <fig position="float" id="GR277629HANF5">
          <label>Figure 5.</label>
          <caption>
            <p>Avian UCE data. (<italic>A</italic>) Tree estimated from UCE gene trees using TREE-QMC-n2/wQFM. (<italic>B</italic>) Tree estimated from concatenated UCE alignment using RAxML. (<italic>C</italic>) Tree estimated from UCE gene trees using ASTRAL-III/FASTRAL. <italic>Above</italic> the branch, we show support values <italic>X</italic>, <italic>Y</italic>, where <italic>X</italic> is estimated using ASTRAL's local posterior probability (multiplied by 100) and <italic>Y</italic> is computed using RAxML's bootstrap support for <italic>B</italic> and using MLBS for <italic>A</italic> and <italic>C</italic>. Support values are only shown when <italic>X</italic> is &lt;100. <italic>Below</italic> the branch, we show the quartet support (the two values <italic>below</italic> it correspond to quartet support for the two alternative resolutions of the branch). Taxa outside of Neoaves are not shown as all methods recovered the same topology outside of Neoaves.</p>
          </caption>
          <graphic xlink:href="1042f05" position="float"/>
        </fig>
      </sec>
      <sec id="s1c2">
        <title>TENT data</title>
        <p>For the TENT data (48 taxa, 14,446 gene trees), TREE-QMC-n2 and FASTRAL complete in &lt;3 min, whereas it takes 2.35 h to weight quartets. wQFM completes in less than a minute after this preprocessing phase. We do not run ASTRAL-III as this analysis was reported to take over 30 h (<xref rid="GR277629HANC5" ref-type="bibr">Dibaeinia et al. 2021</xref>).</p>
        <p>All three methods produce a different tree, which is compared to the published concatenation tree for TENT data (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S6</xref>). None of the trees recover Passera, and only the concatenation and wQFM trees recover Afroaves, although this branch has very low local support (local posterior probability of 0.0) in the wQFM tree. Once again, the TREE-QMC-n2 and wQFM trees are closest to the concatenation tree, with the TREE-QMC-n2, wQFM, and FASTRAL trees differing from it by 8, 8, and 10 branches, respectively. There are five branches that differ between the wQFM tree and the TREE-QMC-n2 tree (two of these branches in the wQFM have very low support: local posterior probability of 0.03 and 0.0). There are only three branches that differ between the TREE-QMC-n2 tree and the FASTRAL tree; as with the UCE data, these branches are reasonable based on quartet support for their alternative resolutions.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s2">
    <title>Discussion</title>
    <p>Our method TREE-QMC builds upon the algorithmic framework of wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>) by introducing the <italic>normalized</italic> quartet graph and showing that it can be computed directly from gene trees. These contributions together enable our new method TREE-QMC to be highly competitive with the leading quartet-based summary methods in terms of species tree accuracy and empirical runtime, even outperforming them on some simulated data sets. Specifically, TREE-QMC (with nonuniform normalization) is competitive with wQFM in terms of species tree accuracy but scales to much larger data sets. Moreover, TREE-QMC is at least as accurate, and often more accurate, than the dominant method ASTRAL-III (and its improvement FASTRAL), while being highly competitive in terms of empirical runtime.</p>
    <p>The model conditions where TREE-QMC outperforms ASTRAL-III are characterized by large numbers of species or high amounts of gene tree heterogeneity because of ILS and GTEE. For the latter scenario, the true species tree was typically not the optimal solution to MQSST (note: this observation is not out of line with the statistical theory because the proof of consistency assumes infinite error-free gene trees). Therefore, better heuristics to MQSST may not translate to more accurate species trees when GTEE is high.</p>
    <p>A major goal is to develop summary methods that are robust to GTEE. One approach is weighting quartets not just by their frequency in the input gene trees. A new version of ASTRAL, dubbed weighted ASTRAL (<xref rid="GR277629HANC39" ref-type="bibr">Zhang and Mirarab 2022</xref>), which was published during our study, adjusts quartet weights based on the branch support and branch lengths in the estimated gene trees. TREE-QMC's nonuniform normalization scheme adjusts the quartet weights based on the subproblem division (i.e., quartets are upweighted if they are on species in more closely related subproblems, which ideally reflects closeness in the true species tree). In the future, it would be interesting to compare TREE-QMC to weighted ASTRAL as well as to implement other quartet weighting schemes within TREE-QMC.</p>
    <p>There are several other opportunities for future work worth mentioning. First, the version of TREE-QMC presented here requires binary gene trees as input. Thus, TREE-QMC was given gene trees that are randomly refined in our experimental study, whereas all other methods were given gene trees with polytomies. This did not have a negative impact on TREE-QMC's performance relative to the other methods; however, it would be worth exploring this issue further. Ultimately, this inherent limitation of TREE-QMC could be addressed by devising an efficient algorithm for computing the “edges” in the quartet graph (see Methods section), although this would come at the cost of increased runtime. Second, the experimental study presented here only evaluates TREE-QMC in the context of multilocus species tree estimation where gene tree can be discordant with the species tree because of ILS and/or GTEE. Our study does not address the use of TREE-QMC as a more general quartet-based supertree method, and future work should explore whether quartet weight normalization is beneficial in this context. Lastly, TREE-QMC's algorithm operates on gene trees that are multilabeled because of artificial taxa, so the algorithms presented here can be applied to gene trees that are multilabeled because of other causes, such as multiple individuals being sampled per species (<xref rid="GR277629HANC24" ref-type="bibr">Rabiee et al. 2019</xref>) or genes evolving via duplications (<xref rid="GR277629HANC41" ref-type="bibr">Zhang et al. 2020</xref>; <xref rid="GR277629HANC13" ref-type="bibr">Legried et al. 2021</xref>; <xref rid="GR277629HANC38" ref-type="bibr">Yan et al. 2021</xref>; <xref rid="GR277629HANC30" ref-type="bibr">Smith et al. 2022</xref>). Future work should explore the effectiveness of TREE-QMC under these conditions as well as those characterized by missing data because of gene loss or other causes (<xref rid="GR277629HANC22" ref-type="bibr">Nute et al. 2018</xref>).</p>
  </sec>
  <sec sec-type="methods" id="s3">
    <title>Methods</title>
    <p>We now present the TREE-QMC method. To begin, we define some terminology for phylogenetic trees and the notation used through this section and the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
    <sec id="s3a">
      <title>Terminology and notation</title>
      <p>A <italic>phylogenetic tree T</italic> is a triplet <inline-formula id="il2"><mml:math id="IL2" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>g</italic> is a connected acyclic graph, <inline-formula id="il3"><mml:math id="IL3" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> is a set of labels (species), and <inline-formula id="il02"><mml:math id="IL4" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϕ</mml:mi></mml:mrow></mml:math></inline-formula> maps leaves in <italic>g</italic> to labels in <inline-formula id="il4"><mml:math id="IL5" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula>. If <inline-formula id="il002"><mml:math id="IL6" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϕ</mml:mi></mml:mrow></mml:math></inline-formula> is a bijection, we say that <italic>T</italic> is <italic>singly labeled</italic>; otherwise, we say <italic>T</italic> is <italic>multilabeled</italic>. Trees may be either <italic>unrooted</italic> or <italic>rooted</italic>. Edges in an unrooted tree are undirected, whereas edges in a rooted tree are directed away from the root, a special vertex with in-degree 0 (all other vertices have in-degree 1). To transform an unrooted tree <italic>T</italic> into a rooted tree <italic>T</italic><sub><italic>r</italic></sub>, we select an edge in <italic>T</italic>, subdivide it with a new vertex <italic>r</italic> (the root), and then orient the edges of <italic>T</italic> away from the root. Conversely, we transform a rooted tree <italic>T</italic><sub><italic>r</italic></sub> into an unrooted tree <italic>T</italic> by undirecting its edges and then suppressing any vertex with degree 2.</p>
      <p>For a tree <italic>T</italic>, we denote its edge set as <italic>E</italic>(<italic>T</italic>), its internal vertex set as <italic>V</italic>(<italic>T</italic>), and its leaf set as <italic>L</italic>(<italic>T</italic>). Sometimes we consider a phylogenetic tree <italic>T restricted</italic> to a subset of its leaves <italic>R</italic> ⊆ <italic>L</italic>(<italic>T</italic>). Such a tree, denoted <italic>T</italic>|<sub><italic>R</italic></sub>, is created by deleting leaves in <inline-formula id="il5"><mml:math id="IL7" display="inline" overflow="scroll"><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo><mml:mi mathvariant="normal">∖</mml:mi><mml:mi>R</mml:mi></mml:math></inline-formula> and suppressing any vertex with degree 2 (while updating branch lengths in the natural way). Henceforth, all trees are <italic>binary</italic>, meaning that nonleaf, nonroot vertices (referred to as <italic>internal</italic> vertices) have degree 3.</p>
      <p>To present TREE-QMC, we need two additional concepts: <italic>bipartitions</italic> and <italic>quartets</italic>. A bipartition splits a set <inline-formula id="il6"><mml:math id="IL8" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> of labels into two disjoint sets: <inline-formula id="il7"><mml:math id="IL9" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="il8"><mml:math id="IL10" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow><mml:mi mathvariant="normal">∖</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow></mml:math></inline-formula>. Each edge in a (singly labeled, unrooted) tree <italic>T</italic> induces a bipartition because deleting an edge creates two rooted subtrees whose leaf labels form the bipartition <inline-formula id="il9"><mml:math id="IL11" display="inline" overflow="scroll"><mml:mi>π</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow></mml:math></inline-formula>. A given bipartition is displayed by <italic>T</italic> if it is in the set {π(<italic>e</italic>):<italic>e</italic> ∈ <italic>E</italic>(<italic>T</italic>)}. The bipartition is trivial if <inline-formula id="il10"><mml:math id="IL12" display="inline" overflow="scroll"><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo></mml:math></inline-formula> or <inline-formula id="il11"><mml:math id="IL13" display="inline" overflow="scroll"><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo></mml:math></inline-formula> is 1; otherwise, it is nontrivial.</p>
      <p>A quartet <italic>q</italic> is an unrooted, binary tree with four leaves <italic>a</italic>, <italic>b</italic>, <italic>c</italic>, <italic>d</italic> labeled by <italic>A</italic>, <italic>B</italic>, <italic>C</italic>, <italic>D</italic>, respectively. It is easy to see that there are three possible quartet trees given by their one nontrivial bipartition: (1) <italic>a,b</italic>|<italic>c,d</italic>; (2) <italic>a,c</italic>|<italic>b,d</italic>; and (3) <italic>a,d</italic>|<italic>b,c</italic> (note that we typically use lower case letters to denote leaf vertices and capital letters to denote leaf labels, although this distinction is only necessary when trees are multilabeled). A set of quartets can be defined by an unrooted tree <italic>T</italic> by restricting <italic>T</italic> to every possible subset of four leaves in <italic>L</italic>(<italic>T</italic>); the resulting set <italic>Q</italic>(<italic>T</italic>) is referred to as the quartet encoding of <italic>T</italic>. If <italic>T</italic> is multilabeled, then some of the quartets in <italic>Q</italic>(<italic>T</italic>) will have multiple leaves labeled by the same label. Lastly, we say that <italic>T</italic> displays a quartet <italic>q</italic> if <italic>q</italic> ∈ <italic>Q</italic>(<italic>T</italic>).</p>
    </sec>
    <sec id="s3b">
      <title>Review of wQMC</title>
      <p>As previously mentioned, our new method TREE-QMC builds upon the divide-and-conquer method wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). To produce a bipartition on <inline-formula id="il12"><mml:math id="IL14" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:math></inline-formula>, wQMC constructs a graph from <inline-formula id="il13"><mml:math id="IL15" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">Q</mml:mi></mml:mrow></mml:math></inline-formula>, referred to as the <bold>quartet graph</bold>, and then seeks its maximum cut (<xref rid="GR277629HANC31" ref-type="bibr">Snir and Rao 2010</xref>, <xref rid="GR277629HANC32" ref-type="bibr">2012</xref>; <xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). The quartet graph is formed from two complete graphs, <inline-formula id="il501"><mml:math id="IL16" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il601"><mml:math id="IL17" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, both on vertex set <italic>V</italic> (i.e., there exists a bijection between <italic>V</italic> and <inline-formula id="il14"><mml:math id="IL18" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:math></inline-formula>). All edges in <inline-formula id="il502"><mml:math id="IL19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il602"><mml:math id="IL20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> are initialized to weight zero. Then, each quartet <inline-formula id="il15"><mml:math id="IL21" display="inline" overflow="scroll"><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> contributes its weight <inline-formula id="il16"><mml:math id="IL22" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> to two “bad” edges in <inline-formula id="il503"><mml:math id="IL23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and four “good” edges in <inline-formula id="il603"><mml:math id="IL24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula id="il17"><mml:math id="IL25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> corresponds to the number of gene trees in the input set <inline-formula id="il18"><mml:math id="IL26" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:math></inline-formula> that display <italic>q</italic>. The bad edges are based on sibling pairs: (<italic>A</italic>, <italic>B</italic>) and (<italic>C</italic>, <italic>D</italic>). The good edges are based on nonsibling pairs: (<italic>A</italic>, <italic>C</italic>), (<italic>A</italic>, <italic>D</italic>), (<italic>B</italic>, <italic>C</italic>), and (<italic>B</italic>, <italic>D</italic>). We do not want to cut bad edges because siblings should be on the same side of the bipartition; conversely, we want to cut good edges because nonsiblings should be on different sides of the bipartition. Ultimately, we seek a cut <inline-formula id="il19"><mml:math id="IL27" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> to maximize <inline-formula id="il20"><mml:math id="IL28" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">C</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></inline-formula>), where α &gt; 0 is a hyperparameter that can be optimized using binary search. Although MaxCut is NP-complete (<xref rid="GR277629HANC9" ref-type="bibr">Karp 1972</xref>), fast and accurate heuristics have been developed (<xref rid="GR277629HANC6" ref-type="bibr">Dunning et al. 2018</xref>). The cut gives a bipartition in the output species tree and the wQMC method proceeds by recursion on the two subsets of species on each side of the bipartition. Artificial taxa are introduced to represent the species on the other side of the bipartition.</p>
    </sec>
    <sec id="s3c">
      <title>TREE-QMC: quartet weight normalization</title>
      <p>Our key observation in developing TREE-QMC is that artificial taxa change the quartet weights so that a single gene tree will vote multiple times for quartets on artificial taxa and only once for quartets on only nonartificial taxa (called singletons). As shown in <xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>, the weight of quartet <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> is
<disp-formula id="GR277629HANM1"><label>(1)</label><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <inline-formula id="il21"><mml:math id="IL29" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> denotes the set of leaves (i.e., species) in <italic>T</italic> associated with label <italic>M</italic> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). When labels <italic>M</italic>, <italic>N</italic>, <italic>O</italic>, <italic>P</italic> are all singletons, each gene tree casts exactly one vote for one of the three possible quartets: <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> or <italic>M</italic>, <italic>O</italic>|<italic>N</italic>, <italic>P</italic> or <italic>M</italic>, <italic>P</italic>|<italic>N</italic>, <italic>O</italic> (assuming no missing data). Otherwise, each gene tree casts |<bold>M</bold>| · |<bold>N</bold>| · |<bold>O</bold>| · |<bold>P</bold>| votes (again assuming no missing data) and thus can vote for more than one topology.</p>
      <p>We propose to normalize the quartet weights so that each gene tree casts one vote for each subset of four labels, although it may split its vote across the possible quartet topologies in the case of artificial taxa. To get this outcome, we can simply divide by the number of votes cast so that the weight of <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> becomes
<disp-formula id="GR277629HANM2"><label>(2)</label><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow><mml:mo fence="false">|</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:math></disp-formula>
This can be implemented efficiently by assigning an importance value <italic>I</italic>(<italic>x</italic>) to each species <inline-formula id="il22"><mml:math id="IL30" display="inline" overflow="scroll"><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">S</mml:mi></mml:mrow></mml:math></inline-formula> and then computing the weight as</p>
      <p><disp-formula id="GR277629HANM3"><label>(3)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>I</italic>(<italic>m</italic>, <italic>n</italic>, <italic>o</italic>, <italic>p</italic>) = <italic>I</italic>(<italic>m</italic>) · <italic>I</italic>(<italic>n</italic>) · <italic>I</italic>(<italic>o</italic>) · <italic>I</italic>(<italic>p</italic>). Specifically, Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> reduces to Equation <xref rid="GR277629HANM2" ref-type="disp-formula">2</xref> when <italic>I</italic>(<italic>m</italic>) = |<bold>M</bold>|<sup>−1</sup> for all <italic>m</italic> ∈ <bold>M</bold> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). Because all species with the same label are assigned the same importance value, we refer to this approach as <italic>uniform normalization (n1)</italic>. More broadly, the quartet weights will be normalized whenever Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> corresponds to a weighted average, meaning that
<disp-formula id="GR277629HANM4"><label>(4)</label><mml:math id="M4" display="block" overflow="scroll"><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1.</mml:mn></mml:math></disp-formula>
It is easy to see that this will be the case whenever <inline-formula id="il23"><mml:math id="IL31" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). In <italic>unnormalized (n0)</italic> case, we assign all species an importance value of 1 so that Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> reduces to Equation <xref rid="GR277629HANM1" ref-type="disp-formula">1</xref>.</p>
      <p>We now describe how to normalize quartet weights while leveraging the hierarchical structure implied by artificial taxa by assigning importance values to species with the same label. The idea is that species should have lesser importance each time they are <italic>relabeled</italic> by an artificial taxon. In <xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>, artificial taxon <italic>Z</italic> represents species <bold>Z</bold> = {0, 6, 7, 9} but species 0 and 9 were previously labeled by artificial taxon <italic>X</italic>. This relationship can be represented as the rooted “phylogenetic” tree <italic>T</italic><sub><italic>Z</italic></sub> given by Newick string: (6, 7, (0, 9)<italic>X</italic>)<italic>Z</italic>. We use <italic>T</italic><sub><italic>Z</italic></sub> to assign importance values to all species <italic>z</italic> ∈ <bold>Z</bold>, specifically
<disp-formula id="GR277629HANM5"><label>(5)</label><mml:math id="M5" display="block" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>Z</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></disp-formula>
where <italic>outdegree</italic>(<italic>v</italic>) is the out-degree of vertex <italic>v</italic> and <italic>path</italic>(<italic>T</italic><sub><italic>Z</italic></sub>, <italic>z</italic>) contains the vertices on the path in <italic>T</italic><sub><italic>Z</italic></sub> from the root to the leaf labeled <italic>z</italic>, excluding the leaf. Continuing the example, <inline-formula id="il24"><mml:math id="IL32" display="inline" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula id="il25"><mml:math id="IL33" display="inline" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>9</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>⋅</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>6</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mstyle></mml:mstyle></mml:math></inline-formula>. By construction, <inline-formula id="il26"><mml:math id="IL34" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">Z</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>z</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> so this approach normalizes the quartet weights. Because different species with the same label can have different weights, we refer to this approach as <italic>nonuniform normalization (n2)</italic>. In our simulation study, normalizing the quartet weights in this fashion improved species tree accuracy for challenging model conditions.</p>
    </sec>
    <sec id="s3d">
      <title>TREE-QMC: efficient quartet graph construction</title>
      <p>Another key development in TREE-QMC is an efficient algorithm for constructing the quartet graph directly from <italic>k</italic> gene trees, each on <italic>n</italic> species. Our approach breaks down computing the weights for good and bad edges into three cases:
<list list-type="bullet"><list-item><p>Case 1: taxa <italic>X</italic>, <italic>Y</italic> are both nonartificial taxa (called singletons).</p></list-item><list-item><p>Case 2: taxa <italic>X</italic> is a singleton and <italic>Y</italic> is an artificial taxon (or vice versa).</p></list-item><list-item><p>Case 3: taxa <italic>X</italic>, <italic>Y</italic> are both artificial taxa.</p></list-item></list>For one gene tree, <inline-formula id="il604"><mml:math id="IL35" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] and <inline-formula id="il504"><mml:math id="IL36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] can be computed for all pairs <italic>X</italic>, <italic>Y</italic> in case 1, case 2, and case 3 in <italic>O</italic>(<italic>a</italic><sup>2</sup>) time, <italic>O</italic>(<italic>abn</italic>) and <italic>O</italic>(<italic>b</italic><sup>2</sup><italic>n</italic>) time, respectively, where <italic>a</italic> is the number of singletons and <italic>b</italic> is the number of artificial taxa. Thus, for a subproblem with <italic>s</italic> = <italic>a</italic> + <italic>b</italic> taxa, the quartet graph can be constructed in <italic>O</italic>(<italic>s</italic><sup>2</sup><italic>nk</italic>) time by applying this algorithm to all gene trees (Theorem 1 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>).</p>
      <p>After quartet graph construction, we seek a max cut. Our high-level approach is the same as wQMC. However, we differ in our binary search for α (interval and precision) and our max-cut heuristic, instead using the one proposed by <xref rid="GR277629HANC3" ref-type="bibr">Burer et al. (2002)</xref> and implemented in the open-source package MQLib by <xref rid="GR277629HANC6" ref-type="bibr">Dunning et al. (2018)</xref>. Our approach for cutting the quartet graph runs in <italic>O</italic>(<italic>s</italic><sup>2</sup>) time (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>), so the time complexity for each subproblem is dominated by quartet graph construction. Overall, the divide-and-conquer algorithm runs in <italic>O</italic>(<italic>n</italic><sup>3</sup><italic>k</italic>) time (Theorem 3 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>) if the division into subproblems is perfectly balanced. We do not expect subproblem division to be perfectly balanced in practice, and moreover the time complexity analysis hides large constant factors (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). That being said, we find TREE-QMC is sufficiently fast, at least on the specific inputs in our study.</p>
    </sec>
    <sec id="s3e">
      <title>Idea behind efficient quartet graph construction</title>
      <p>We now provide the idea behind our approach by considering the simplest case where there are no artificial taxa in gene tree <italic>T</italic> with <italic>n</italic> leaves (i.e., <italic>T</italic> is singly labeled). For TREE-QMC, the weight of bad edges between taxa <italic>X</italic> and <italic>Y</italic>, denoted <inline-formula id="il505"><mml:math id="IL37" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>], is the number of quartets displayed by <italic>T</italic> with <italic>X</italic>, <italic>Y</italic> as siblings and similarly for <inline-formula id="il605"><mml:math id="IL38" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] but nonsiblings. This means that we can easily compute the weight of the good edges if given the weight of the bad edges by applying <inline-formula id="il27"><mml:math id="IL39" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></inline-formula>.</p>
      <p>To compute <inline-formula id="il506"><mml:math id="IL40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> efficiently, we observe that there is exactly one leaf associated with label <italic>X</italic> (denoted <italic>x</italic>) and one leaf associated with label <italic>Y</italic> (denoted <italic>y</italic>), so there is a unique path connecting leaves <italic>x</italic> and <italic>y</italic> in <italic>T</italic> (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>A). Deleting the edges on this path (and their end points) produces a forest of <italic>K</italic> rooted subtrees, denoted {<italic>t</italic><sub>1</sub>, <italic>t</italic><sub>2</sub>, …, <italic>t</italic><sub><italic>K</italic></sub>}. Let <italic>w</italic> and <italic>z</italic> be two leaves of subtrees <italic>t</italic><sub><italic>i</italic></sub> and <italic>t</italic><sub><italic>j</italic></sub>, respectively. Then, <italic>T</italic> displays quartet <italic>x</italic>, <italic>w</italic>|<italic>z</italic>, <italic>y</italic> for <italic>i</italic> &lt; <italic>j</italic>, quartet <italic>x</italic>, <italic>y</italic>|<italic>w</italic>, <italic>z</italic> for <italic>i</italic> = <italic>j</italic>, and quartet <italic>x</italic>, <italic>z</italic>|<italic>w</italic>, <italic>y</italic> for <italic>i</italic> &gt; <italic>j</italic>. To summarize, <italic>x</italic>, <italic>y</italic> are siblings if and only if leaves <italic>w</italic>, <italic>z</italic> are in the same subtree off the path from <italic>x</italic> to <italic>y</italic>. It follows that <inline-formula id="il507"><mml:math id="IL41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] can be computed by considering all ways of selecting two other leaves from the same subtree for all subtrees on the path from <italic>x</italic> to <italic>y</italic>.</p>
      <fig position="float" id="GR277629HANF6">
        <label>Figure 6.</label>
        <caption>
          <p>To count the quartets induced by <italic>T</italic> with 0 and 17 as siblings, we consider the path between them (shown in blue in panel <italic>A</italic>). The deletion of the path produces six rooted subtrees (highlighted in gray). Because 0 and 17 are siblings in a quartet if and only if the other two taxa are drawn from the same subtree, the number of bad edges can be computed as <inline-formula id="il28"><mml:math id="IL42" display="inline" overflow="scroll"><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>4</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:math></inline-formula>. Here we show how to compute the number of quartets induced by <italic>T</italic> with 0 and 17 as siblings after rooting <italic>T</italic> arbitrarily. Panel <italic>B</italic> shows that we need to consider the number of ways of selecting two taxa from the same subtree for three cases: (1) the subtree above the <italic>lca</italic>(0, 17) (highlighted in green), (2) all subtrees off the path from the <italic>lca</italic>(0, 17) to the left taxon 0 (highlighted in red), and (3) all subtrees off the path from the <italic>lca</italic>(0, 17) to the right taxon 17 (highlighted in pink). Case 1 can be computed in constant time if we know the number of leaves below the LCA, that is, <inline-formula id="il801"><mml:math id="IL43" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = 6 (Eq. 8). Cases 2 and 3 can also be computed in constant time as follows. Panel <italic>C</italic> shows the prefix of the left child of the <italic>lca</italic>(0, 17), denoted <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>left</italic>]. This quantity is the number of ways of selecting two taxa from the same subtree for all subtrees off the path from the root to this vertex (circled in red). Similarly, the prefix of taxon 0, denoted <italic>p</italic>[0], is the number of ways of selecting two taxa from the same subtree for all subtrees off the path from the root to 0 (circled in purple). Therefore, the number of ways of selecting two taxa from all subtrees in case 2 (i.e., subtrees highlighted in red in <italic>B</italic>) is <inline-formula id="il701"><mml:math id="IL44" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = <italic>p</italic>[0] − <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>left</italic>] = 7 (Eq. 9). Case 3 can be computed in a similar fashion as <inline-formula id="il901"><mml:math id="IL45" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = <italic>p</italic>[17] − <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>right</italic>] = 3 (Eq. 10). Putting this all together gives <inline-formula id="il508"><mml:math id="IL46" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = 16 (Eq. 6).</p>
        </caption>
        <graphic xlink:href="1042f06" position="float"/>
      </fig>
      <p>This observation can be used to count the quartets efficiently when gene trees are singly labeled. However, we need to be more careful when <italic>T</italic> is multilabeled, which is typically the case because of artificial taxa. Following our example, suppose that we want to count the number of bad edges between 0 and 17 contributed by the subtree with leaves 4, 5, and 6. However, if leaves 4 and 5 are both relabeled by artificial taxon <italic>M</italic>, the quartet on 0, 17|4, 5 corresponds to quartet 0, 17|<italic>M</italic>, <italic>M</italic> has no topological information and should not be counted. The other quartets 0, 17|4, 6 and 0, 17|5, 6 correspond to 0, 17|<italic>M</italic>, 6 and thus should be counted.</p>
    </sec>
    <sec id="s3f">
      <title>Computing the bad edges given a singly labeled gene tree</title>
      <p>We now present an algorithm for computing the number of bad edges given a singly labeled gene tree <italic>T</italic> (later we will extend it to the more general case of a multilabeled gene tree). After rooting <italic>T</italic> arbitrarily, we again consider the path between <italic>x</italic> and <italic>y</italic>, which now goes through their lowest common ancestor, denoted <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>B). This allows us to break the computation into three parts
<disp-formula id="GR277629HANM6"><label>(6)</label><mml:math id="M6" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <inline-formula id="il802"><mml:math id="IL47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] is the number of ways of selecting two leaves from the subtree above <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>), <inline-formula id="il702"><mml:math id="IL48" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] the number of ways of selecting two leaves from the same subtree for all subtrees off the path from <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) to leaf in its <italic>left</italic> subtree (say <italic>x</italic>), and <inline-formula id="il902"><mml:math id="IL49" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] the number of ways of selecting two leaves from the same subtree for all subtrees off the path from <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) to the leaf in its <italic>right</italic> (say <italic>y</italic>). As we will show, each of these quantities can be computed in constant time, after an <italic>O</italic>(<italic>n</italic>) preprocessing phase, in which we compute two values for each vertex <italic>v</italic> in <italic>T</italic>. The first value <italic>c</italic>[<italic>v</italic>] is the number taxa below vertex <italic>v</italic>. The second value <italic>p</italic>[<italic>v</italic>], which we refer to as the “prefix” of <italic>v</italic>, is the number of ways to select two taxa from the same subtree for all subtrees off the path from the root to vertex <italic>v</italic> (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>C). It is easy to see that <italic>c</italic> can be computed in <italic>O</italic>(<italic>n</italic>) time via a postorder traversal. After which, <italic>p</italic> can be computed in <italic>O</italic>(<italic>n</italic>) via a preorder traversal, setting
<disp-formula id="GR277629HANM7"><label>(7)</label><mml:math id="M7" display="block" overflow="scroll"><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>c</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>
after initializing <italic>p</italic>[<italic>root</italic>] = 0. Now we can compute the quantities:
<disp-formula id="GR277629HANM8"><label>(8)</label><mml:math id="M8" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>
<disp-formula id="GR277629HANM9"><label>(9)</label><mml:math id="M9" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>x</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
<disp-formula id="GR277629HANM10"><label>(10)</label><mml:math id="M10" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>y</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi><mml:mi>h</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>v</italic>.<italic>left</italic> denotes the left child of <italic>v</italic> and <italic>v</italic>.<italic>right</italic> denotes the right child of <italic>v</italic> (see <xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>C). It is possible to access <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) in constant time after <italic>O</italic>(<italic>n</italic>) preprocessing step (<xref rid="GR277629HANC7" ref-type="bibr">Gusfield 1997</xref>), although we implemented this implicitly by computing the entries of <inline-formula id="il509"><mml:math id="IL50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> during a postorder traversal of <italic>T</italic>. Thus, we can compute <inline-formula id="il510"><mml:math id="IL51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> in <italic>O</italic>(<italic>n</italic><sup>2</sup>) time, provided that <italic>T</italic> is singly labeled.</p>
    </sec>
    <sec id="s3g">
      <title>Computing the bad edges given a multilabeled gene tree</title>
      <p>We now present an algorithm for computing the number of bad edges <inline-formula id="il511"><mml:math id="IL52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] given a multilabeled gene tree <italic>T</italic>. As previously mentioned, this breaks down into three cases. Case 1 (where taxa <italic>X</italic>, <italic>Y</italic> are both singletons) is presented below and cases 2 and 3 are presented in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      <p>As before, we focus on the number of ways to select two leaves <italic>w</italic>, <italic>z</italic> from a collection of subtrees; however, now that <italic>T</italic> is multilabeled, it is possible for two leaves <italic>w</italic>, <italic>z</italic> to have the same label. Therefore, we now need to count the number of ways to select two leaves <italic>z</italic>, <italic>w</italic> below vertex <italic>u</italic> so that they are <bold>uniquely labeled</bold>
<italic>Z</italic> ≠ <italic>W</italic> (note that we use capital letters <italic>W</italic> and <italic>Z</italic> to denote the current labels of leaves <italic>w</italic> and <italic>z</italic>, respectively). This modified binomial is computed by revising the preprocessing phase. We now let <italic>c</italic><sub>0</sub>[<italic>v</italic>] denote the number of leaves labeled by singletons below vertex <italic>v</italic> and let <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>] denote the number of leaves labeled by artificial taxon <italic>D</italic> below vertex <italic>v</italic>. Thus, for each vertex <italic>v</italic>, we store a vector <italic>c</italic>[<italic>v</italic>] of length <italic>b</italic> + 1, where <italic>b</italic> is the number of artificial taxa in <italic>T</italic>. As before, we can compute <italic>c</italic> in <italic>O</italic>(<italic>bn</italic>) time via a postorder traversal. However, the number of ways to select two leaves with different labels is now broken into three cases:
<list list-type="bullet"><list-item><p>the number of ways to select two singletons, which equals <inline-formula id="il29"><mml:math id="IL53" display="inline" overflow="scroll"><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>,</p></list-item><list-item><p>the number of ways to select one singleton and one artificial taxa, which equals <inline-formula id="il30"><mml:math id="IL54" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula>, where <inline-formula id="il31"><mml:math id="IL55" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the set of artificial taxa below vertex <italic>v</italic>, and</p></list-item><list-item><p>the number of ways to select two artificial taxa, which equals <inline-formula id="il32"><mml:math id="IL56" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>≠</mml:mo><mml:mi>E</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>E</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula>.</p></list-item></list>Putting this all together gives the <bold>modified binomial coefficient</bold>:
<disp-formula id="GR277629HANM11"><label>(11)</label><mml:math id="M11" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></disp-formula>
where <inline-formula id="il33"><mml:math id="IL57" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula> and <inline-formula id="il34"><mml:math id="IL58" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. At each vertex, the calculation of <italic>G</italic><sub>1</sub>[<italic>v</italic>] and <italic>G</italic><sub>2</sub>[<italic>v</italic>] takes <italic>O</italic>(<italic>b</italic>) time, after which we can compute <italic>g</italic><sub>0</sub>[<italic>v</italic>] in constant time. Thus, <italic>g</italic><sub>0</sub> can be computed in <italic>O</italic>(<italic>bn</italic>) time. Note that we also need to compute modified binomial coefficient for the subtree “above” vertex <italic>v</italic>, denoted <italic>g</italic><sub>0</sub>[<italic>v</italic>.<italic>above</italic>]. This can be computed in a similar fashion by noting that number of singletons above <italic>v</italic> is <italic>a</italic> − <italic>c</italic><sub>0</sub>[<italic>v</italic>] and that the number of leaves above <italic>v</italic> labeled by each artificial taxon <italic>D</italic> is |<bold>D</bold>| − <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>].</p>
      <p>Using the modified binomial, we can apply our algorithm for singly labeled trees by redefining prefix sum:
<disp-formula id="GR277629HANM12"><label>(12)</label><mml:math id="M12" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></disp-formula>
and then redefining the quantities from which we can compute <italic>B</italic>[<italic>x</italic>, <italic>y</italic>] in constant time, that is, <inline-formula id="il803"><mml:math id="IL59" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>g</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>above</italic>], and <inline-formula id="il703"><mml:math id="IL60" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>p</italic><sub>0</sub>[<italic>x</italic>] − <italic>p</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>left</italic>], and <inline-formula id="il903"><mml:math id="IL61" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>p</italic><sub>0</sub>[<italic>y</italic>] − <italic>p</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>right</italic>]. As there are <italic>a</italic><sup>2</sup> pairs of singletons in the subproblem, the total runtime is <italic>O</italic>(<italic>a</italic><sup>2</sup> + <italic>bn</italic>).</p>
    </sec>
    <sec id="s3h">
      <title>Normalizing quartet weights while computing the bad edges</title>
      <p>To normalize the quartet weights, <inline-formula id="il512"><mml:math id="IL62" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] becomes the <italic>weighted</italic> sum of quartets with <italic>X</italic>, <italic>Y</italic> are siblings, where each quartet <italic>x</italic>, <italic>y</italic>|<italic>z</italic>, <italic>w</italic> is weighted by <italic>I</italic>(<italic>x</italic>, <italic>y</italic>, <italic>z</italic>, <italic>w</italic>) = <italic>I</italic>(<italic>x</italic>)<italic>I</italic>(<italic>y</italic>)<italic>I</italic>(<italic>z</italic>)<italic>I</italic>(<italic>w</italic>), where <italic>I</italic>(<italic>x</italic>) is the importance value assigned to leaf <italic>x</italic> (which corresponds to a species in the singly labeled gene tree). When <italic>X</italic>, <italic>Y</italic> are singletons,
<disp-formula id="GR277629HANM13"><label>(13)</label><mml:math id="M13" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo><mml:mi>Z</mml:mi><mml:mo>≠</mml:mo><mml:mi>W</mml:mi><mml:mo>≠</mml:mo><mml:mi>X</mml:mi><mml:mo>≠</mml:mo><mml:mi>Y</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>q</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where the importance values of singletons are set to 1 so we know that <italic>I</italic>(<italic>x</italic>) = <italic>I</italic>(<italic>y</italic>) = 1. Note that all of the importance values are set to 1 in the unnormalized case.</p>
      <p>To compute the normalized version of <inline-formula id="il513"><mml:math id="IL63" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] using the previous algorithm, we set <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>] to be the sum of the importance values of the leaves below <italic>v</italic> that are labeled by <italic>D</italic> (i.e., <inline-formula id="il35"><mml:math id="IL64" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>L</italic>(<italic>v</italic>) denotes the set of leaves below <italic>v</italic>). The proof of correctness follows from <xref rid="st1" ref-type="statement">Lemma 1</xref>, in which we show that the total weight of selecting two uniquely labeled leaves below vertex <italic>u</italic> equals <italic>g</italic><sub>0</sub>[<italic>u</italic>]. This is because all other quantities (<italic>p</italic>, <inline-formula id="il804"><mml:math id="IL65" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="il704"><mml:math id="IL66" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="il904"><mml:math id="IL67" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>) are computed from <italic>g</italic><sub>0</sub>[<italic>u</italic>].</p>
      <statement id="st1" content-type="lemma">
        <label>Lemma 1.</label>
        <p><italic>The total weight of all taxon pairs in the subtree rooted at internal vertex u</italic><disp-formula id="GR277629HANM14"><label>(14)</label><mml:math id="M14" display="block" overflow="scroll"><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>Z</mml:mi><mml:mo>≠</mml:mo><mml:mi>W</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula><italic>where L</italic>(<italic>u</italic>) <italic>is the set of leaves below vertex u</italic>.</p>
        <p>See <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref> for proof.</p>
        <p>Lastly, we need to compute the good edges <inline-formula id="il606"><mml:math id="IL68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>], which is the total weight of quartets in which <italic>X</italic>, <italic>Y</italic> are not siblings. This can be performed in constant time, following <xref rid="st2" ref-type="statement">Lemma 2</xref>.</p>
      </statement>
      <statement id="st2" content-type="lemma">
        <label>Lemma 2.</label>
        <p><italic>Let T be a multilabeled gene tree, and let X</italic>, <italic>Y be singletons. Then,</italic><disp-formula id="GR277629HANM15"><label>(15)</label><mml:math id="M15" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula><italic>where r is the root vertex of T</italic>.</p>
        <p>See <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref> for proof.</p>
        <p>This concludes our treatment of case 1, in which <italic>X</italic>, <italic>Y</italic> are both singletons. To compute all entries of <inline-formula id="il514"><mml:math id="IL69" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il607"><mml:math id="IL70" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, we also need to consider the other two cases. In case 2, <italic>X</italic> is a singleton and <italic>Y</italic> is an artificial taxon or vice versa (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S13</xref>), and in case 3, both <italic>X</italic> and <italic>Y</italic> are artificial taxa (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S14</xref>). These cases are more complicated because the naive approach would consider all paths in the tree between a leaf labeled <italic>X</italic> and a leaf labeled <italic>Y</italic>, which is not efficient. The algorithms and proofs for these cases are provided in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      </statement>
    </sec>
    <sec id="s3i">
      <title>Software availability</title>
      <p>TREE-QMC is available at GitHub (<uri xlink:href="https://github.com/molloy-lab/TREE-QMC">https://github.com/molloy-lab/TREE-QMC</uri>) and as <xref rid="SD1" ref-type="supplementary-material">Supplemental Code</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="SM1">
    <title>Supplementary Material</title>
    <supplementary-material id="SD1" position="float" content-type="local-data">
      <label>Supplement 1</label>
      <media xlink:href="Supplemental_Code.zip" id="d64e4532" position="anchor"/>
    </supplementary-material>
    <supplementary-material id="SD2" position="float" content-type="local-data">
      <label>Supplement 2</label>
      <media xlink:href="Supplemental_Materials.pdf" id="d64e4535" position="anchor"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>This research was funded by the State of Maryland. We thank the reviewers for feedback that greatly improved the quality of our work.</p>
  </ack>
  <fn-group>
    <fn fn-type="supplementary-material">
      <p>[Supplemental material is available for this article.]</p>
    </fn>
    <fn>
      <p>Article published online before print. Article, supplemental material, and publication date are at <ext-link xlink:href="https://www.genome.org/cgi/doi/10.1101/gr.277629.122" ext-link-type="uri">https://www.genome.org/cgi/doi/10.1101/gr.277629.122</ext-link>.</p>
    </fn>
  </fn-group>
  <sec id="s5">
    <title>Competing interest statement</title>
    <p>The authors have no competing interests.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="GR277629HANC1">
      <mixed-citation publication-type="journal"><string-name><surname>Avni</surname><given-names>E</given-names></string-name>, <string-name><surname>Cohen</surname><given-names>R</given-names></string-name>, <string-name><surname>Snir</surname><given-names>S</given-names></string-name>. <year>2014</year>. <article-title>Weighted quartets phylogenetics</article-title>. <source>Syst Biol</source><volume>64</volume>: <fpage>233</fpage>–<lpage>242</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syu087</pub-id><pub-id pub-id-type="pmid">25414175</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC2">
      <mixed-citation publication-type="journal"><string-name><surname>Braun</surname><given-names>E</given-names></string-name>, <string-name><surname>Kimball</surname><given-names>R</given-names></string-name>. <year>2021</year>. <article-title>Data types and the phylogeny of neoaves</article-title>. <source>Birds</source><volume>2</volume>: <fpage>1</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.3390/birds2010001</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC3">
      <mixed-citation publication-type="journal"><string-name><surname>Burer</surname><given-names>S</given-names></string-name>, <string-name><surname>Monteiro</surname><given-names>RD</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>Y</given-names></string-name>. <year>2002</year>. <article-title>Rank-two relaxation heuristics for max-cut and other binary quadratic programs</article-title>. <source>SIAM J Optimization</source><volume>12</volume>: <fpage>503</fpage>–<lpage>521</lpage>. <pub-id pub-id-type="doi">10.1137/S1052623400382467</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC4">
      <mixed-citation publication-type="journal"><string-name><surname>Degnan</surname><given-names>JH</given-names></string-name>, <string-name><surname>Salter</surname><given-names>LA</given-names></string-name>. <year>2005</year>. <article-title>Gene tree distributions under the coalescent process</article-title>. <source>Evolution (N Y)</source><volume>59</volume>: <fpage>24</fpage>–<lpage>37</lpage>. <pub-id pub-id-type="doi">10.1111/j.0014-3820.2005.tb00891.x</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC5">
      <mixed-citation publication-type="journal"><string-name><surname>Dibaeinia</surname><given-names>P</given-names></string-name>, <string-name><surname>Tabe-Bordbar</surname><given-names>S</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2021</year>. <article-title>FASTRAL: improving scalability of phylogenomic analysis</article-title>. <source>Bioinformatics</source><volume>37</volume>: <fpage>2317</fpage>–<lpage>2324</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btab093</pub-id><pub-id pub-id-type="pmid">33576396</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC6">
      <mixed-citation publication-type="journal"><string-name><surname>Dunning</surname><given-names>I</given-names></string-name>, <string-name><surname>Gupta</surname><given-names>S</given-names></string-name>, <string-name><surname>Silberholz</surname><given-names>J</given-names></string-name>. <year>2018</year>. <article-title>What works best when? A systematic evaluation of heuristics for Max-Cut and QUBO</article-title>. <source>INFORMS J Comput</source><volume>30</volume>: <fpage>421</fpage>–<lpage>624</lpage>. <pub-id pub-id-type="doi">10.1287/ijoc.2017.0798</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC7">
      <mixed-citation publication-type="book"><string-name><surname>Gusfield</surname><given-names>D</given-names></string-name>. <year>1997</year>. <source>Algorithms on strings, trees, and sequences: computer science and computational biology</source>. <publisher-name>Cambridge University Press</publisher-name>, <publisher-loc>Cambridge, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC8">
      <mixed-citation publication-type="journal"><string-name><surname>Jarvis</surname><given-names>ED</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Aberer</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Li</surname><given-names>B</given-names></string-name>, <string-name><surname>Houde</surname><given-names>P</given-names></string-name>, <string-name><surname>Li</surname><given-names>C</given-names></string-name>, <string-name><surname>Ho</surname><given-names>SYW</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Nabholz</surname><given-names>B</given-names></string-name>, <string-name><surname>Howard</surname><given-names>JT</given-names></string-name>, <etal/><year>2014</year>. <article-title>Whole-genome analyses resolve early branches in the tree of life of modern birds</article-title>. <source>Science</source><volume>346</volume>: <fpage>1320</fpage>–<lpage>1331</lpage>. <pub-id pub-id-type="doi">10.1126/science.1253451</pub-id><pub-id pub-id-type="pmid">25504713</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC9">
      <mixed-citation publication-type="book"><string-name><surname>Karp</surname><given-names>RM</given-names></string-name>. <year>1972</year>. <article-title>Reducibility among combinatorial problems</article-title>. In <source>Complexity of computer computations: the IBM research symposia series</source>. (ed. <string-name><surname>Miller</surname><given-names>RE</given-names></string-name>, <etal/>), pp. <fpage>85</fpage>–<lpage>103</lpage>. <publisher-name>Springer</publisher-name>, <publisher-loc>Boston</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC10">
      <mixed-citation publication-type="journal"><string-name><surname>Kozlov</surname><given-names>AM</given-names></string-name>, <string-name><surname>Aberer</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Stamatakis</surname><given-names>A</given-names></string-name>. <year>2015</year>. <article-title>ExaML version 3: a tool for phylogenomic analyses on supercomputers</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>2577</fpage>–<lpage>2579</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv184</pub-id><pub-id pub-id-type="pmid">25819675</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC11">
      <mixed-citation publication-type="journal"><string-name><surname>Kubatko</surname><given-names>LS</given-names></string-name>, <string-name><surname>Degnan</surname><given-names>JH</given-names></string-name>. <year>2007</year>. <article-title>Inconsistency of phylogenetic estimates from concatenated data under coalescence</article-title>. <source>Syst Biol</source><volume>56</volume>: <fpage>17</fpage>–<lpage>24</lpage>. <pub-id pub-id-type="doi">10.1080/10635150601146041</pub-id><pub-id pub-id-type="pmid">17366134</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC12">
      <mixed-citation publication-type="journal"><string-name><surname>Lafond</surname><given-names>M</given-names></string-name>, <string-name><surname>Scornavacca</surname><given-names>C</given-names></string-name>. <year>2019</year>. <article-title>On the weighted quartet consensus problem</article-title>. <source>Theor Comput Sci</source><volume>769</volume>: <fpage>1</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1016/j.tcs.2018.10.005</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC13">
      <mixed-citation publication-type="journal"><string-name><surname>Legried</surname><given-names>B</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>, <string-name><surname>Roch</surname><given-names>S</given-names></string-name>. <year>2021</year>. <article-title>Polynomial-time statistical estimation of species trees under gene duplication and loss</article-title>. <source>J Comput Biol</source><volume>28</volume>: <fpage>452</fpage>–<lpage>468</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2020.0424</pub-id><pub-id pub-id-type="pmid">33325781</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC14">
      <mixed-citation publication-type="journal"><string-name><surname>Maddison</surname><given-names>W</given-names></string-name>. <year>1997</year>. <article-title>Gene trees in species trees</article-title>. <source>Syst Biol</source><volume>46</volume>: <fpage>523</fpage>–<lpage>536</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.3.523</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC15">
      <mixed-citation publication-type="journal"><string-name><surname>Mahbub</surname><given-names>M</given-names></string-name>, <string-name><surname>Wahab</surname><given-names>Z</given-names></string-name>, <string-name><surname>Reaz</surname><given-names>R</given-names></string-name>, <string-name><surname>Rahman</surname><given-names>MS</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>. <year>2021</year>. <article-title>wQFM: highly accurate genome-scale species tree estimation from weighted quartets</article-title>. <source>Bioinformatics</source><volume>37</volume>: <fpage>3734</fpage>–<lpage>3743</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btab428</pub-id><pub-id pub-id-type="pmid">34086858</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC16">
      <mixed-citation publication-type="journal"><string-name><surname>McCormack</surname><given-names>JE</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Crawford</surname><given-names>NG</given-names></string-name>, <string-name><surname>Gowaty</surname><given-names>PA</given-names></string-name>, <string-name><surname>Brumfield</surname><given-names>RT</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>TC</given-names></string-name>. <year>2012</year>. <article-title>Ultraconserved elements are novel phylogenomic markers that resolve placental mammal phylogeny when combined with species-tree analysis</article-title>. <source>Genome Res</source><volume>22</volume>: <fpage>746</fpage>–<lpage>754</lpage>. <pub-id pub-id-type="doi">10.1101/gr.125864.111</pub-id><pub-id pub-id-type="pmid">22207614</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC17">
      <mixed-citation publication-type="journal"><string-name><surname>Meiklejohn</surname><given-names>KA</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>TC</given-names></string-name>, <string-name><surname>Kimball</surname><given-names>RT</given-names></string-name>, <string-name><surname>Braun</surname><given-names>EL</given-names></string-name>. <year>2016</year>. <article-title>Analysis of a rapid evolutionary radiation using ultraconserved elements: evidence for a bias in some multispecies coalescent methods</article-title>. <source>Syst Biol</source><volume>65</volume>: <fpage>612</fpage>–<lpage>627</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syw014</pub-id><pub-id pub-id-type="pmid">26865273</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC18">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2015</year>. <article-title>ASTRAL-II: coalescent-based species tree estimation with many hundreds of taxa and thousands of genes</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>i44</fpage>–<lpage>i52</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv234</pub-id><pub-id pub-id-type="pmid">26072508</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC19">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>, <string-name><surname>Boussau</surname><given-names>B</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2014a</year>. <article-title>Statistical binning enables an accurate coalescent-based estimation of the avian tree</article-title>. <source>Science</source><volume>346</volume>: <fpage>1250463</fpage>. <pub-id pub-id-type="doi">10.1126/science.1250463</pub-id><pub-id pub-id-type="pmid">25504728</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC20">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Reaz</surname><given-names>R</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>, <string-name><surname>Zimmermann</surname><given-names>T</given-names></string-name>, <string-name><surname>Swenson</surname><given-names>MS</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2014b</year>. <article-title>ASTRAL: genome-scale coalescent-based species tree estimation</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>i541</fpage>–<lpage>i548</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu462</pub-id><pub-id pub-id-type="pmid">25161245</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC21">
      <mixed-citation publication-type="journal"><string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>To include or not to include: the impact of gene filtering on species tree estimation methods</article-title>. <source>Syst Biol</source><volume>67</volume>: <fpage>285</fpage>–<lpage>303</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syx077</pub-id><pub-id pub-id-type="pmid">29029338</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC22">
      <mixed-citation publication-type="journal"><string-name><surname>Nute</surname><given-names>M</given-names></string-name>, <string-name><surname>Chou</surname><given-names>J</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>The performance of coalescent-based species tree estimation methods under models of missing data</article-title>. <source>BMC Genom</source><volume>19</volume>(<issue>Suppl 5</issue>): <fpage>286</fpage>. <pub-id pub-id-type="doi">10.1186/s12864-018-4619-8</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC23">
      <mixed-citation publication-type="journal"><string-name><surname>Pamilo</surname><given-names>P</given-names></string-name>, <string-name><surname>Nei</surname><given-names>M</given-names></string-name>. <year>1988</year>. <article-title>Relationships between gene trees and species trees</article-title>. <source>Mol Biol Evol</source><volume>5</volume>: <fpage>568</fpage>–<lpage>583</lpage>. <pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a040517</pub-id><pub-id pub-id-type="pmid">3193878</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC24">
      <mixed-citation publication-type="journal"><string-name><surname>Rabiee</surname><given-names>M</given-names></string-name>, <string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2019</year>. <article-title>Multi-allele species reconstruction using ASTRAL</article-title>. <source>Mol Phylogenet Evol</source><volume>130</volume>: <fpage>286</fpage>–<lpage>296</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2018.10.033</pub-id><pub-id pub-id-type="pmid">30393186</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC25">
      <mixed-citation publication-type="journal"><string-name><surname>Roch</surname><given-names>S</given-names></string-name>, <string-name><surname>Steel</surname><given-names>M</given-names></string-name>. <year>2015</year>. <article-title>Likelihood-based tree reconstruction on a concatenation of aligned sequence data sets can be statistically inconsistent</article-title>. <source>Theor Popul Biol</source><volume>100</volume>: <fpage>56</fpage>–<lpage>62</lpage>. <pub-id pub-id-type="doi">10.1016/j.tpb.2014.12.005</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC26">
      <mixed-citation publication-type="journal"><string-name><surname>Roch</surname><given-names>S</given-names></string-name>, <string-name><surname>Nute</surname><given-names>M</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>Long-branch attraction in species tree estimation: inconsistency of partitioned likelihood and topology-based summary methods</article-title>. <source>Syst Biol</source><volume>68</volume>: <fpage>281</fpage>–<lpage>297</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syy061</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC27">
      <mixed-citation publication-type="journal"><string-name><surname>Rosenberg</surname><given-names>NA</given-names></string-name>. <year>2002</year>. <article-title>The probability of topological concordance of gene trees and species trees</article-title>. <source>Theor Popul Biol</source><volume>61</volume>: <fpage>225</fpage>–<lpage>247</lpage>. <pub-id pub-id-type="doi">10.1006/tpbi.2001.1568</pub-id><pub-id pub-id-type="pmid">11969392</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC28">
      <mixed-citation publication-type="journal"><string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2016</year>. <article-title>Fast coalescent-based computation of local branch support from quartet frequencies</article-title>. <source>Mol Biol Evol</source><volume>33</volume>: <fpage>1654</fpage>–<lpage>1668</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msw079</pub-id><pub-id pub-id-type="pmid">27189547</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC29">
      <mixed-citation publication-type="journal"><string-name><surname>Seo</surname><given-names>TK</given-names></string-name>. <year>2008</year>. <article-title>Calculating bootstrap probabilities of phylogeny using multilocus sequence data</article-title>. <source>Mol Biol Evol</source><volume>25</volume>: <fpage>960</fpage>–<lpage>971</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msn043</pub-id><pub-id pub-id-type="pmid">18281270</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC30">
      <mixed-citation publication-type="journal"><string-name><surname>Smith</surname><given-names>ML</given-names></string-name>, <string-name><surname>Vanderpool</surname><given-names>D</given-names></string-name>, <string-name><surname>Hahn</surname><given-names>MW</given-names></string-name>. <year>2022</year>. <article-title>Using all gene families vastly expands data available for phylogenomic inference</article-title>. <source>Mol Biol Evol</source><volume>39</volume>: <fpage>msac112</fpage>. <pub-id pub-id-type="doi">10.1093/molbev/msac112</pub-id><pub-id pub-id-type="pmid">35642314</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC31">
      <mixed-citation publication-type="journal"><string-name><surname>Snir</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>S</given-names></string-name>. <year>2010</year>. <article-title>Quartets MaxCut: a divide and conquer quartets algorithm</article-title>. <source>IEEE/ACM Trans Comput Biol Bioinform</source><volume>7</volume>: <fpage>704</fpage>–<lpage>718</lpage>. <pub-id pub-id-type="doi">10.1109/TCBB.2008.133</pub-id><pub-id pub-id-type="pmid">21030737</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC32">
      <mixed-citation publication-type="journal"><string-name><surname>Snir</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>S</given-names></string-name>. <year>2012</year>. <article-title>Quartet MaxCut: a fast algorithm for amalgamating quartet trees</article-title>. <source>Mol Phylogenet Evol</source><volume>62</volume>: <fpage>1</fpage>–<lpage>8</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2011.06.021</pub-id><pub-id pub-id-type="pmid">21762785</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC33">
      <mixed-citation publication-type="journal"><string-name><surname>Song</surname><given-names>S</given-names></string-name>, <string-name><surname>Liu</surname><given-names>L</given-names></string-name>, <string-name><surname>Edwards</surname><given-names>SV</given-names></string-name>, <string-name><surname>Wu</surname><given-names>S</given-names></string-name>. <year>2012</year>. <article-title>Resolving conflict in eutherian mammal phylogeny using phylogenomics and the multispecies coalescent model</article-title>. <source>Proc Natl Acad Sci</source><volume>109</volume>: <fpage>14942</fpage>–<lpage>14947</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1211733109</pub-id><pub-id pub-id-type="pmid">22930817</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC34">
      <mixed-citation publication-type="journal"><string-name><surname>Stamatakis</surname><given-names>A</given-names></string-name>. <year>2014</year>. <article-title>RAxML version 8: a tool for phylogenetic analysis and post-analysis of large phylogenies</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>1312</fpage>–<lpage>1313</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu033</pub-id><pub-id pub-id-type="pmid">24451623</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC35">
      <mixed-citation publication-type="journal"><string-name><surname>Tavaré</surname><given-names>S</given-names></string-name>. <year>1986</year>. <article-title>Some probabilistic and statistical problems in the analysis of DNA sequences</article-title>. <source>Lect Math Life Sci</source><volume>17</volume>: <fpage>57</fpage>–<lpage>86</lpage>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC36">
      <mixed-citation publication-type="journal"><string-name><surname>Wickett</surname><given-names>NJ</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Nguyen</surname><given-names>N</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>, <string-name><surname>Carpenter</surname><given-names>E</given-names></string-name>, <string-name><surname>Matasci</surname><given-names>N</given-names></string-name>, <string-name><surname>Ayyampalayam</surname><given-names>S</given-names></string-name>, <string-name><surname>Barker</surname><given-names>MS</given-names></string-name>, <string-name><surname>Burleigh</surname><given-names>JG</given-names></string-name>, <string-name><surname>Gitzendanner</surname><given-names>MA</given-names></string-name>, <etal/><year>2014</year>. <article-title>Phylotranscriptomic analysis of the origin and early diversification of land plants</article-title>. <source>Proc Natl Acad Sci</source><volume>111</volume>: <fpage>E4859</fpage>–<lpage>E4868</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1323926111</pub-id><pub-id pub-id-type="pmid">25355905</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC37">
      <mixed-citation publication-type="journal"><string-name><surname>Xi</surname><given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname><given-names>L</given-names></string-name>, <string-name><surname>Davis</surname><given-names>CC</given-names></string-name>. <year>2015</year>. <article-title>Genes with minimal phylogenetic information are problematic for coalescent analyses when gene tree estimation is biased</article-title>. <source>Mol Phylogenet Evol</source><volume>92</volume>: <fpage>63</fpage>–<lpage>71</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2015.06.009</pub-id><pub-id pub-id-type="pmid">26115844</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC38">
      <mixed-citation publication-type="journal"><string-name><surname>Yan</surname><given-names>Z</given-names></string-name>, <string-name><surname>Smith</surname><given-names>ML</given-names></string-name>, <string-name><surname>Du</surname><given-names>P</given-names></string-name>, <string-name><surname>Hahn</surname><given-names>MW</given-names></string-name>, <string-name><surname>Nakhleh</surname><given-names>L</given-names></string-name>. <year>2021</year>. <article-title>Species tree inference methods intended to deal with incomplete lineage sorting are robust to the presence of paralogs</article-title>. <source>Syst Biol</source><volume>71</volume>: <fpage>367</fpage>–<lpage>381</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syab056</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC39">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2022</year>. <article-title>Weighting by gene tree uncertainty improves accuracy of quartet-based species trees</article-title>. <source>Mol Biol Evol</source><volume>39</volume>: <fpage>msac215</fpage>. <pub-id pub-id-type="doi">10.1093/molbev/msac215</pub-id><pub-id pub-id-type="pmid">36201617</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC40">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Rabiee</surname><given-names>M</given-names></string-name>, <string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2018</year>. <article-title>ASTRAL-III: polynomial time species tree reconstruction from partially resolved gene trees</article-title>. <source>BMC Bioinform</source><volume>19</volume>: <fpage>153</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-018-2129-y</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC41">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Scornavacca</surname><given-names>C</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2020</year>. <article-title>ASTRAL-Pro: quartet-based species-tree inference despite paralogy</article-title>. <source>Mol Biol Evol</source><volume>37</volume>: <fpage>3292</fpage>–<lpage>3307</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msaa139</pub-id><pub-id pub-id-type="pmid">32886770</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Res</journal-id>
    <journal-id journal-id-type="hwp">genome</journal-id>
    <journal-id journal-id-type="publisher-id">GENOME</journal-id>
    <journal-title-group>
      <journal-title>Genome Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1088-9051</issn>
    <issn pub-type="epub">1549-5469</issn>
    <publisher>
      <publisher-name>Cold Spring Harbor Laboratory Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10538498</article-id>
    <article-id pub-id-type="pmid">37197990</article-id>
    <article-id pub-id-type="medline">9509184</article-id>
    <article-id pub-id-type="doi">10.1101/gr.277629.122</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Methods</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Improving quartet graph construction for scalable and accurate species tree estimation from gene trees</article-title>
      <alt-title alt-title-type="left-running">Han and Molloy</alt-title>
      <alt-title alt-title-type="right-running">TREE-QMC</alt-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0003-0200-5924</contrib-id>
        <name>
          <surname>Han</surname>
          <given-names>Yunheng</given-names>
        </name>
        <xref rid="af1" ref-type="aff">1</xref>
        <xref rid="af2" ref-type="aff">2</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-5553-3312</contrib-id>
        <name>
          <surname>Molloy</surname>
          <given-names>Erin K.</given-names>
        </name>
        <xref rid="af1" ref-type="aff">1</xref>
        <xref rid="af2" ref-type="aff">2</xref>
      </contrib>
    </contrib-group>
    <aff id="af1"><label>1</label>Department of Computer Science, University of Maryland, College Park, Maryland 20742, USA;</aff>
    <aff id="af2"><label>2</label>University of Maryland Institute for Advanced Computer Studies, College Park, Maryland 20742, USA</aff>
    <author-notes>
      <corresp>Corresponding author: <email>ekmolloy@umd.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <month>7</month>
      <year>2023</year>
    </pub-date>
    <volume>33</volume>
    <issue>7</issue>
    <fpage>1042</fpage>
    <lpage>1052</lpage>
    <history>
      <date date-type="received">
        <day>23</day>
        <month>12</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>4</day>
        <month>5</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>
        <ext-link xlink:href="http://genome.cshlp.org/site/misc/terms.xhtml" ext-link-type="uri">© 2023 Han and Molloy; Published by Cold Spring Harbor Laboratory Press</ext-link>
      </copyright-statement>
      <copyright-year>2023</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbynclicense">https://creativecommons.org/licenses/by-nc/4.0/</ali:license_ref>
        <license-p>This article is distributed exclusively by Cold Spring Harbor Laboratory Press for the first six months after the full-issue publication date (see <ext-link ext-link-type="uri" xlink:href="https://genome.cshlp.org/site/misc/terms.xhtml">https://genome.cshlp.org/site/misc/terms.xhtml</ext-link>). After six months, it is available under a Creative Commons License (Attribution-NonCommercial 4.0 International), as described at <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by-nc/4.0/">http://creativecommons.org/licenses/by-nc/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <self-uri content-type="pdf" xlink:href="1042.pdf"/>
    <abstract>
      <p>Summary methods are widely used to estimate species trees from genome-scale data. However, they can fail to produce accurate species trees when the input gene trees are highly discordant because of estimation error and biological processes, such as incomplete lineage sorting. Here, we introduce TREE-QMC, a new summary method that offers accuracy and scalability under these challenging scenarios. TREE-QMC builds upon weighted Quartet Max Cut, which takes weighted quartets as input and then constructs a species tree in a divide-and-conquer fashion, at each step forming a graph and seeking its max cut. The wQMC method has been successfully leveraged in the context of species tree estimation by weighting quartets by their frequencies in the gene trees; we improve upon this approach in two ways. First, we address accuracy by normalizing the quartet weights to account for “artificial taxa” introduced during the divide phase so subproblem solutions can be combined during the conquer phase. Second, we address scalability by introducing an algorithm to construct the graph directly from the gene trees; this gives TREE-QMC a time complexity of <inline-formula id="il1"><mml:math id="IL1" display="inline" overflow="scroll"><mml:mi>O</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msup><mml:mi>n</mml:mi><mml:mn>3</mml:mn></mml:msup></mml:mrow><mml:mi>k</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>n</italic> is the number of species and <italic>k</italic> is the number of gene trees, assuming the subproblem decomposition is perfectly balanced. These contributions enable TREE-QMC to be highly competitive in terms of species tree accuracy and empirical runtime with the leading quartet-based methods, even outperforming them on some model conditions explored in our simulation study. We also present the application of these methods to an avian phylogenomics data set.</p>
    </abstract>
    <funding-group>
      <award-group id="funding-1">
        <funding-source>State of Maryland</funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="11"/>
    </counts>
  </article-meta>
</front>
<body>
  <p>Estimating the evolutionary history for a collection of species is a fundamental problem in evolutionary biology. Increasingly, species trees are estimated from multilocus data sets, with molecular sequences partitioned into (recombination-free) regions of the genome (referred to as loci or genes). A popular approach to species tree estimation involves concatenating the alignments for individual loci together and then estimating a phylogeny under standard models of molecular sequence evolution, like the generalized time reversible (GTR) model (<xref rid="GR277629HANC35" ref-type="bibr">Tavaré 1986</xref>).</p>
  <p>Such models assume the genes have a shared evolutionary history; however, this is not necessarily the case. The evolutionary histories of individual genes (referred to as gene trees) can differ from each other because of biological processes (<xref rid="GR277629HANC14" ref-type="bibr">Maddison 1997</xref>). Incomplete lineage sorting (ILS), one of the most well-studied sources of gene tree discordance, is an outcome of genes evolving within populations of individuals, as modeled by the multispecies coalescent (MSC) (<xref rid="GR277629HANC23" ref-type="bibr">Pamilo and Nei 1988</xref>; <xref rid="GR277629HANC27" ref-type="bibr">Rosenberg 2002</xref>; <xref rid="GR277629HANC4" ref-type="bibr">Degnan and Salter 2005</xref>). Concatenation-based approaches to species tree estimation can be statistically inconsistent under the MSC (<xref rid="GR277629HANC25" ref-type="bibr">Roch and Steel 2015</xref>). Moreover, simulation studies have shown concatenation can perform poorly when the amount of ILS is high (e.g., <xref rid="GR277629HANC11" ref-type="bibr">Kubatko and Degnan 2007</xref>). ILS is expected to impact many major groups, including birds (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>), placental mammals (<xref rid="GR277629HANC16" ref-type="bibr">McCormack et al. 2012</xref>), and land plants (<xref rid="GR277629HANC36" ref-type="bibr">Wickett et al. 2014</xref>). Thus, species tree estimation methods that account for ILS, either explicitly or implicitly, are of interest.</p>
  <p>An alternative to concatenation involves estimating gene trees (typically one per locus) and then applying a summary method. The most popular summary method to date, ASTRAL (<xref rid="GR277629HANC20" ref-type="bibr">Mirarab et al. 2014b</xref>), is a heuristic for the NP-hard maximum quartet support species tree (MQSST) problem (<xref rid="GR277629HANC12" ref-type="bibr">Lafond and Scornavacca 2019</xref>), which can be framed as weighting quartets (four-leaf trees) by their frequencies in the input gene trees and then seeking a species tree <italic>T</italic> that maximizes the total weight of the quartets displayed by <italic>T</italic>. The optimal solution to MQSST is a statistically consistent estimator of the (unrooted) species tree under the MSC model (<xref rid="GR277629HANC20" ref-type="bibr">Mirarab et al. 2014b</xref>), which is why heuristics for this problem are widely used in the context of multilocus species tree estimation. Proofs of consistency typically assume the input gene trees are error-free (<xref rid="GR277629HANC26" ref-type="bibr">Roch et al. 2018</xref>); however, this is unlikely in practice. An analysis of gene trees published for several recent systematic studies found low bootstrap support values on average (Table 1 in <xref rid="GR277629HANC21" ref-type="bibr">Molloy and Warnow 2018</xref>), suggesting that gene tree estimation error (GTEE) may be pervasive across modern phylogenomics data sets. GTEE can negatively impact the accuracy of summary methods, as shown by simulation (e.g., <xref rid="GR277629HANC37" ref-type="bibr">Xi et al. 2015</xref>) and systematic studies (e.g., <xref rid="GR277629HANC17" ref-type="bibr">Meiklejohn et al. 2016</xref>). Overall, GTEE and ILS present significant challenges to species tree estimation.</p>
  <p>A third challenge is scalability. ASTRAL executes an exact (dynamic programming) algorithm for MQSST within a constrained version of the solution space constructed from the input gene trees. There have been many improvements to ASTRAL, with the latest version ASTRAL-III (<xref rid="GR277629HANC40" ref-type="bibr">Zhang et al. 2018</xref>) having a time complexity of <italic>O</italic>((<italic>nk</italic>)<sup>1.726</sup><italic>x</italic>), where <italic>n</italic> is the number of species (also called taxa), <italic>k</italic> is the number of gene trees, and <italic>x</italic> = <italic>O</italic>(<italic>nk</italic>) is the size of the constrained solution space. Because <italic>x</italic> depends on the amount of gene tree heterogeneity, a recent method FASTRAL (<xref rid="GR277629HANC5" ref-type="bibr">Dibaeinia et al. 2021</xref>) runs ASTRAL-III in an aggressively constrained solution space to speed up species tree estimation.</p>
  <p>The other popular quartet methods, wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>) and wQFM (<xref rid="GR277629HANC15" ref-type="bibr">Mahbub et al. 2021</xref>), take weighted quartets as input and then execute a divide-and-conquer approach to phylogeny reconstruction. A recent study found wQFM to be more accurate than ASTRAL-III on challenging model conditions characterized by high ILS and high GTEE (<xref rid="GR277629HANC15" ref-type="bibr">Mahbub et al. 2021</xref>). In these analyses, wQFM was given Θ(<italic>n</italic><sup>4</sup>) quartets as input, with each quartet weighted by the number of gene trees that displayed it. The related input processing step limits the scalability of this approach. Here, we enable improved accuracy and scalability by introducing TREE-QMC.</p>
  <sec sec-type="results" id="s1">
    <title>Results</title>
    <sec id="s1a">
      <title>Overview of TREE-QMC method</title>
      <p>TREE-QMC builds upon the first widely used quartet method, wQMC, which reconstructs the species tree in a divide-and-conquer fashion. At each step in the divide phase, an internal branch in the output species tree is identified; this branch splits the taxa into two disjoint subsets (<xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>). The algorithm continues by recursion on the subproblems implied by the two subsets of taxa. “Artificial taxa” are introduced to represent the species on the opposite of the branch so that solutions to subproblems can be combined during the conquer phase. The recursion terminates when the subproblem has three or fewer taxa, as there is only one possible tree that can be returned. At each step in the conquer phase, trees for complementary subproblems are connected at the related artificial taxa, until there is a single tree on the original set of species (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S1</xref>).</p>
      <fig position="float" id="GR277629HANF1">
        <label>Figure 1.</label>
        <caption>
          <p>At each step in the divide phase, taxa are split into two disjoint subsets and then artificial taxa are introduced to represent the species on the other side of the split. To compute the quartet weights for a given subproblem, the leaves of each gene tree are relabeled by the artificial taxa. Without normalization (column n0), quartet 1, 2|<italic>Y</italic>, <italic>Z</italic> gets zero votes and the alternative quartets get six votes each (note: quartet 1, <italic>Y</italic>|2, <italic>Z</italic> gets six votes by taking either species 5, 3, or 4 for label <italic>Y</italic> and either species 0 or 9 for label <italic>Z</italic>). With normalization, each gene tree gets one vote for each subset of four labels, although this vote can be split across the three possible quartets. In the uniform normalization scheme (column n1), we simply divide column n0 by the total number of votes cast in the unnormalized case. In the nonuniform normalization scheme (column n2), we leverage that structure implied by the divide phase of the algorithm; the idea is that species should have lesser importance each time they are relabeled by artificial taxa.</p>
        </caption>
        <graphic xlink:href="1042f01" position="float"/>
      </fig>
      <p>Central to wQMC's approach is a graph built from weighted quartets. This graph is constructed in such a way that its max cut should correspond to a branch in the output species tree (<xref rid="GR277629HANC31" ref-type="bibr">Snir and Rao 2010</xref>, <xref rid="GR277629HANC32" ref-type="bibr">2012</xref>; <xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). Our observation is that quartets on artificial taxa can have higher weights than quartets on only nonartificial taxa (called singletons) when looking at a single gene tree (<xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>). As we will show, normalizing the quartet weights so that each gene tree gets one vote for every subset of four species improves accuracy. The best performing normalization scheme (n2) weights quartets based on the subproblem decomposition; essentially, quartets are upweighted if their taxa are more closely related to the current subproblem (note: n1 denotes uniform normalization and n0 denotes no normalization). Moreover, we provide an algorithm to build the (normalized) quartet graph directly from the input gene trees, enabling TREE-QMC to have a time complexity of <italic>O</italic>(<italic>n</italic><sup>3</sup><italic>k</italic>) if the subproblem decomposition is perfectly balanced (Theorem 3 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). This analysis is for a highly idealized setting and ignores large constant factors (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>).</p>
      <p>Beyond time complexity, methods can differ from each other in terms of data locality, code optimizations, and other theoretical guarantees (e.g., ASTRAL is guaranteed to find an optimal solution within its constrained solution space, whereas TREE-QMC has no such guarantee). Thus, in the remainder of this paper, we focus on evaluating the empirical performance of TREE-QMC (and its different normalization schemes) against the leading quartet-based summary methods on simulated and biological data.</p>
    </sec>
    <sec id="s1b">
      <title>Experimental evaluation</title>
      <p>We now give an overview of our simulation study; details are provided in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      <sec sec-type="methods" id="s1b1">
        <title>Methods benchmarking</title>
        <p>TREE-QMC is compared against four leading quartet methods: wQMC v1.3, wQFM v3.0, ASTRAL v5.5.7 (denoted ASTRAL-III or ASTRAL3), and FASTRAL. Two of these methods, wQMC and wQFM, take weighted quartets instead of gene trees as input (the input processing step is performed using the script distributed with wQFM). All methods are run in default mode. The current version of TREE-QMC requires binary gene trees as input so polytomies in the estimated gene trees are refined arbitrarily before running TREE-QMC (the same refinements are used in all runs of TREE-QMC to ensure a fair comparison across the normalization schemes).</p>
      </sec>
      <sec id="s1b2">
        <title>Evaluation criteria</title>
        <p>All methods are compared in terms of species tree error, quartet score, and runtime. Species tree error is the percent Robinson-Foulds (RF) error (i.e., normalized RF distance between the true and estimated species trees multiplied by 100). Because the true and estimated species trees are both binary, the RF error rate is equivalent to false negative error rate (i.e., the fraction of the internal branches in the true species tree that are missing from the estimated species tree). Two-sided Wilcoxon signed-rank tests are used to evaluate differences between TREE-QMC-n2 versus FASTRAL as well as TREE-QMC-n2 versus ASTRAL3 (TREE-QMC-n2 is also compared against wQFM when possible).</p>
        <p>We report the difference in the quartet scores between the estimated and true species trees (scores are computed using the same set of gene trees). The quartet score is the number of quartets in the input gene trees that are displayed by the output species tree (divided by the total number of quartets in the gene trees). This quantity is simply the (normalized) MQSST objective function, so higher quartet scores imply a better solution to MQSST.</p>
        <p>The runtime is the wall clock time, which for wQFM and wQMC includes the time to weight quartets based on the input gene trees (the fraction of time spent on input processing phase is reported in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). All methods are run on the same data set on the same compute node on our cluster; the maximum wall clock time is 18 h.</p>
      </sec>
      <sec id="s1b3">
        <title>Simulated data sets</title>
        <p>Our benchmarking study uses data simulated in prior studies, specifically the ASTRAL-II simulated data sets (<xref rid="GR277629HANC18" ref-type="bibr">Mirarab and Warnow 2015</xref>) as well as the avian and mammalian simulated data sets (<xref rid="GR277629HANC19" ref-type="bibr">Mirarab et al. 2014a</xref>). These data are generated by (1) taking a model species tree, (2) simulating gene trees within the species tree under the MSC, (3) simulating sequences down each gene tree under the GTR model, and (4) estimating a tree from set of gene sequences. Either the true gene trees from step 2 or the estimated gene trees from step 4 can be given as input to methods. This process is repeated for various parameter settings.</p>
        <p>The ASTRAL-II data sets are generated from model species trees simulated under the Yule model given three parameters: species tree height, speciation rate, and number of taxa. The speciation rate is set so that speciation events are clustered near the root (deep) or near the tips (shallow) of the species tree. There are 50 replicates for each model condition (note that a new model species tree is simulated for each replicate data set). The avian and mammalian simulated data sets are generated from published species trees estimated for 48 birds (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>) and 37 mammals (<xref rid="GR277629HANC33" ref-type="bibr">Song et al. 2012</xref>), respectively. The species tree branches are scaled to vary the amount of ILS, and the sequence length is changed to vary the amount of GTEE. There are 20 replicates for each model condition.</p>
        <p>The data properties (ILS and GTEE levels) are summarized in <xref rid="SD2" ref-type="supplementary-material">Supplemental Tables S1 and S2</xref>. The ILS level is the percent RF error (between the true species tree and the true gene tree) averaged across all gene trees, and GTEE level is the percent RF error (between the true and estimated gene trees) averaged across all gene trees. Overall, these data sets cover a range of model conditions. The results are presented in four experiments looking at the impact of varying the number of taxa, the species tree scale/height (proxy for ILS), the sequence length (proxy for GTEE), and the number of genes.</p>
      </sec>
    </sec>
    <sec id="s01">
      <title>Experimental results</title>
      <sec id="s1b4">
        <title>Number of taxa</title>
        <p><xref rid="GR277629HANF2" ref-type="fig">Figure 2</xref>, A and B, shows the impact of varying the number of taxa. The pipelines that need weighted quartets to be given as input (wQFM and wQMC) run on the order of seconds for 10 taxa, minutes for 50 taxa, and hours for 100 taxa. The runtime of these pipelines is dominated by the time to weight Θ(<italic>n</italic><sup>4</sup>) quartets by their frequency in the input gene trees (<xref rid="SD2" ref-type="supplementary-material">Supplemental Table S3</xref>). This input processing step does not complete on our compute nodes within our maximum wall clock time of 18 h for most data sets with 200 taxa. Therefore, we could not run wQMC and wQFM on data sets with 200, 500, or 1000 taxa. In contrast, TREE-QMC implements a similar approach to wQMC but bypasses the input processing step, scaling to 1000 taxa and 1000 genes. For these data sets, FASTRAL, TREE-QMC-n2, and ASTRAL-III complete on average in 32 min, 64 min, and 5.3 h, respectively (note: ASTRAL-III fails to complete on 3/50 replicates within our maximum wall clock time of 18 h). Thus, TREE-QMC-n2 is much faster than ASTRAL-III and is not much slower than FASTRAL. TREE-QMC-n2 is significantly more accurate than either FASTRAL or ASTRAL-III when the number of taxa is 200 or greater. For these same conditions, quartet weight normalization, and especially the nonuniform (n2) scheme, improves TREE-QMC's accuracy. Results for methods given true gene trees as input or only 250 (out of 1000) gene trees as input are shown in <xref rid="SD2" ref-type="supplementary-material">Supplemental Figs. S7–S9</xref>).</p>
        <fig position="float" id="GR277629HANF2">
          <label>Figure 2.</label>
          <caption>
            <p>Impact of number of taxa. (<italic>A</italic>) Percent species tree error across replicates (bars represent medians; triangles represent means; outliers are not shown). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (all but one test survives Bonferroni multiple comparison correction; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S4</xref> for details). (<italic>B</italic>) Mean runtime across replicates (shaded region indicates standard error). All data sets have species tree height 1×, shallow speciation, and 1000 estimated gene trees. The ILS level is 17%–35%, and GTEE level is 19%–30%. Note: The input processing for wQMC and wQFM does not run within our maximum wall clock time of 18 h for data sets with 200 or more taxa.</p>
          </caption>
          <graphic xlink:href="1042f02" position="float"/>
        </fig>
      </sec>
      <sec id="s1b5">
        <title>Incomplete lineage sorting (ILS)</title>
        <sec id="s1b5a">
          <title>ASTRAL-II data (200 taxa, 1000 estimated gene trees)</title>
          <p>Figure 3, A and B, shows the impact of varying the species tree height and thus the amount of ILS for the ASTRAL-II data sets. TREE-QMC-n2, FASTRAL, and ASTRAL-III produce highly accurate species trees, with median species tree error at or below 6% for all model conditions (note: the input processing for wQMC and wQFM does not run within our maximum wall clock time of 18 h for these 200-taxon data sets). For some conditions, TREE-QMC-n2 is significantly more accurate than FASTRAL or ASTRAL-III; otherwise, there are no significant differences between these pairs of methods. Quartet weight normalization improves the accuracy of TREE-QMC; this effect is most pronounced when the amount of ILS was very high (species tree height: 0.5×). On these same conditions, ASTRAL-III is much slower than the other methods, taking 73 min on average for the highest amount of ILS (species tree height: 0.5×) compared to 5 min on average for the lowest amount of ILS (species tree height: 5×). In contrast, both TREE-QMC-n2 and FASTRAL are quite fast, taking on average &lt;3 min for model conditions with 200 or fewer taxa. Results for methods given true gene trees as input or only 250 (out of 1000) gene trees as input are shown in <xref rid="SD2" ref-type="supplementary-material">Supplemental Figs. S10–S12</xref>.</p>
          <fig position="float" id="GR277629HANF3">
            <label>Figure 3.</label>
            <caption>
              <p>Impact of the amount of ILS. (<italic>A</italic>) Percent species tree error across replicates (bars represent medians; triangles represent means; outliers are not shown). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (three tests survive multiple comparison corrections; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S5</xref> for details). (<italic>B</italic>) Mean runtime across replicates (shaded region indicates standard error). All data sets have 200 taxa and 1000 estimated gene trees. One model condition with species tree height 1× and shallow speciation is repeated from <xref rid="GR277629HANF2" ref-type="fig">Fig. 2</xref>. For species tree heights 0.5×, 1×, and 5×, the ILS level is 68%–69%, 34%, and 9%–21%, respectively, and the GTEE level is 44%, 27%–34%, and 21%–28%, respectively.</p>
            </caption>
            <graphic xlink:href="1042f03" position="float"/>
          </fig>
        </sec>
        <sec id="s1b5b">
          <title>Avian simulated data (48 taxa, 1000 estimated gene trees)</title>
          <p>Figure 4, A–C, shows the impact of varying the species tree scale and thus the amount of ILS on the avian simulated data sets. wQMC is the least accurate method and is even less accurate than TREE-QMC-n0 (no normalization). Normalization improves the performance of TREE-QMC for these data, enabling TREE-QMC-n2 to be among the most accurate methods when the amount of ILS is high (species tree scales: 0.5× and 1×). Testing for differences between TREE-QMC-n2 versus the other three leading methods (wQFM, FASTRAL, and ASTRAL-III) reveals that either TREE-QMC-n2 is significantly better or else there are no significant differences between these pairs of methods. All methods finish quickly: wQMC and wQFM complete in &lt;13 min on average, ASTRAL-III completes in &lt;4 min on average, and the other methods finish in &lt;1 min on average.</p>
          <fig position="float" id="GR277629HANF4">
            <label>Figure 4.</label>
            <caption>
              <p>Impact of ILS and GTEE. (<italic>A</italic>), (<italic>B</italic>), and (<italic>C</italic>) Percent species tree error for the avian data set with 1000 estimated or true gene trees and species tree scales 0.5×, 1×, and 2×, respectively. Two-sided Wilcoxon signed-ranked tests were used to evaluate differences between TREE-QMC-n2 versus wQFM, FASTRAL, and ASTRAL3 (nine tests per subfigure). The symbols *, **, and *** indicate significance at <italic>P</italic> &lt; 0.05, 0.005, and 0.0005, respectively (for 0.5× species tree scale with estimated gene trees, the difference between TREE-QMC-n2 and ASTRAL-II survives Bonferroni multiple comparison correction; see <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S6</xref> for details). (<italic>D</italic>), (<italic>E</italic>), and (<italic>F</italic>) show the difference in quartet score between the estimated and true species tree times 1000 for species tree scales 0.5×, 1×, and 2×, respectively (positive values indicate the estimated tree is a better solution to MQSST than the true tree). For species tree heights 0.5×, 1×, and 2×, the ILS level is 60%, 47%, and 35%, respectively, and the GTEE level is 60%, 60%, and 62%, respectively. Results for wQMC are cut off because otherwise the trends cannot be observed (see <xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S2</xref> for full <italic>y</italic>-axes).</p>
            </caption>
            <graphic xlink:href="1042f04" position="float"/>
          </fig>
          <p>Figure 4, D–F, shows the difference in quartet score between estimated and true species trees. We find that most methods typically recover species trees with higher quartet scores than the true species tree, indicating that the true species tree is not the optimal solution to MQSST. Moreover, the relative performance of methods for quartet score is different than the relative performance of methods for species tree error for many model conditions. These two trends are especially pronounced when gene trees are estimated (mean error: 60%–62%).</p>
        </sec>
        <sec id="s1b5c">
          <title>Mammalian simulated data (37 taxa, 200 estimated gene trees)</title>
          <p>All methods have similar performance for the mammalian data, although these data sets represent easier model conditions in terms of ILS and GTEE levels (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S3</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S7</xref>).</p>
        </sec>
      </sec>
      <sec id="s1b6">
        <title>Gene tree estimation error (GTEE)</title>
        <sec id="s1b6a">
          <title>Avian simulated data (48 taxa, 1000 gene trees)</title>
          <p>Figure 4, A–C, also shows the impact of GTEE for each species tree scale (ILS level). For each ILS level, methods are given true gene trees or estimated gene trees (mean error: 60%–62%). The trends for estimated gene trees are discussed above. For true gene trees, there are no significant differences between TREE-QMC-n2 versus the other leading methods (wQFM, FASTRAL, and ASTRAL-III), and all versions of TREE-QMC perform similarly so the utility of normalization is diminished. Moreover, these methods find species trees with similar quartet scores to the true species tree, unlike the case of estimated gene trees. Lastly, the performance of wQMC is in line with the other methods when there is very little gene tree heterogeneity because of ILS or GTEE (<xref rid="GR277629HANF4" ref-type="fig">Fig. 4</xref>C).</p>
        </sec>
        <sec id="s1b6b">
          <title>Mammalian simulated data (37 taxa, 200 gene trees)</title>
          <p> Similar trends between methods are observed for mammalian simulated data sets when varying the sequence lengths (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S4</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Table S8</xref>). TREE-QMC is significantly more accurate than FASTRAL and ASTRAL-III for the shortest sequence length (250 bp; GTEE level 43%); there are no differences in accuracy between these pairs of methods otherwise.</p>
        </sec>
      </sec>
      <sec id="s1b7">
        <title>Number of genes</title>
        <p>Similar trends between methods are observed when varying the number of genes (e.g., <xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S5</xref>; <xref rid="SD2" ref-type="supplementary-material">Supplemental Tables S9, S10</xref>).</p>
      </sec>
    </sec>
    <sec id="s1c">
      <title>Reanalysis of avian phylogenomics data set</title>
      <p>We also reanalyze the avian data set from <xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. (2014)</xref> with 3679 ultraconserved elements (UCEs). This data set includes the best maximum likelihood tree and the set of 100 bootstrapped trees for each UCE. Although the true species tree is unknown, we discuss the presence and absence of strongly corroborated clades, such as Passerea and six of the magnificent seven clades excluding clade IV (<xref rid="GR277629HANC2" ref-type="bibr">Braun and Kimball 2021</xref>). We also compare methods to the published concatenation tree estimated by running RAxML (<xref rid="GR277629HANC34" ref-type="bibr">Stamatakis 2014</xref>) on UCEs only (<xref rid="GR277629HANC8" ref-type="bibr">Jarvis et al. 2014</xref>); thus the comparison between concatenation and the quartet-based summary methods is on the same data set. Branch support is computed for the estimated species trees using ASTRAL-III's local posterior probability (<xref rid="GR277629HANC28" ref-type="bibr">Sayyari and Mirarab 2016</xref>) as well as using multilocus bootstrapping (MLBS) (<xref rid="GR277629HANC29" ref-type="bibr">Seo 2008</xref>). We repeat this analysis (except MLBS) on the TENT data (14,446 gene trees), which includes gene trees estimated on UCEs as well as exons and introns. In this case, methods are compared to the published TENT concatenation tree estimated by running ExaML (<xref rid="GR277629HANC10" ref-type="bibr">Kozlov et al. 2015</xref>).</p>
      <sec id="s1c1">
        <title>UCE data</title>
        <p>For the UCE data (48 taxa, 3679 gene trees), ASTRAL-III completes in 65 min, making it the most time consuming method. All other methods run in less than a minute; however, the preprocessing step to weight quartets for wQFM takes 41 min.</p>
        <p>Both FASTRAL and ASTRAL-III produce the same species tree (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>C), and both TREE-QMC-n2 and wQFM produce the same species tree (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>A). We compare these two trees to the published concatenation tree for UCEs (<xref rid="GR277629HANF5" ref-type="fig">Fig. 5</xref>B). There are many similarities between these three trees, as all contain the magnificent seven clades. The TREE-QMC-n2 and FASTRAL trees differ from the concatenation tree by seven and nine branches, respectively, putting the TREE-QMC-n2 tree slightly closer to the concatenation tree than the FASTRAL tree. The TREE-QMC-n2 tree recovers Passerea and Afroaves and fails to recover Columbea, like the concatenation tree and unlike the ASTRAL-III tree (note that Passerea was considered to be strongly corroborated, after accounting for data type effects, by <xref rid="GR277629HANC2" ref-type="bibr">Braun and Kimball 2021</xref>). Overall, there are only five branches that differ between the TREE-QMC-n2 tree and the FASTRAL tree; all of these branches have nearly equal quartet support for their alternative resolutions so that both trees represent reasonable hypotheses.</p>
        <fig position="float" id="GR277629HANF5">
          <label>Figure 5.</label>
          <caption>
            <p>Avian UCE data. (<italic>A</italic>) Tree estimated from UCE gene trees using TREE-QMC-n2/wQFM. (<italic>B</italic>) Tree estimated from concatenated UCE alignment using RAxML. (<italic>C</italic>) Tree estimated from UCE gene trees using ASTRAL-III/FASTRAL. <italic>Above</italic> the branch, we show support values <italic>X</italic>, <italic>Y</italic>, where <italic>X</italic> is estimated using ASTRAL's local posterior probability (multiplied by 100) and <italic>Y</italic> is computed using RAxML's bootstrap support for <italic>B</italic> and using MLBS for <italic>A</italic> and <italic>C</italic>. Support values are only shown when <italic>X</italic> is &lt;100. <italic>Below</italic> the branch, we show the quartet support (the two values <italic>below</italic> it correspond to quartet support for the two alternative resolutions of the branch). Taxa outside of Neoaves are not shown as all methods recovered the same topology outside of Neoaves.</p>
          </caption>
          <graphic xlink:href="1042f05" position="float"/>
        </fig>
      </sec>
      <sec id="s1c2">
        <title>TENT data</title>
        <p>For the TENT data (48 taxa, 14,446 gene trees), TREE-QMC-n2 and FASTRAL complete in &lt;3 min, whereas it takes 2.35 h to weight quartets. wQFM completes in less than a minute after this preprocessing phase. We do not run ASTRAL-III as this analysis was reported to take over 30 h (<xref rid="GR277629HANC5" ref-type="bibr">Dibaeinia et al. 2021</xref>).</p>
        <p>All three methods produce a different tree, which is compared to the published concatenation tree for TENT data (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S6</xref>). None of the trees recover Passera, and only the concatenation and wQFM trees recover Afroaves, although this branch has very low local support (local posterior probability of 0.0) in the wQFM tree. Once again, the TREE-QMC-n2 and wQFM trees are closest to the concatenation tree, with the TREE-QMC-n2, wQFM, and FASTRAL trees differing from it by 8, 8, and 10 branches, respectively. There are five branches that differ between the wQFM tree and the TREE-QMC-n2 tree (two of these branches in the wQFM have very low support: local posterior probability of 0.03 and 0.0). There are only three branches that differ between the TREE-QMC-n2 tree and the FASTRAL tree; as with the UCE data, these branches are reasonable based on quartet support for their alternative resolutions.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="discussion" id="s2">
    <title>Discussion</title>
    <p>Our method TREE-QMC builds upon the algorithmic framework of wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>) by introducing the <italic>normalized</italic> quartet graph and showing that it can be computed directly from gene trees. These contributions together enable our new method TREE-QMC to be highly competitive with the leading quartet-based summary methods in terms of species tree accuracy and empirical runtime, even outperforming them on some simulated data sets. Specifically, TREE-QMC (with nonuniform normalization) is competitive with wQFM in terms of species tree accuracy but scales to much larger data sets. Moreover, TREE-QMC is at least as accurate, and often more accurate, than the dominant method ASTRAL-III (and its improvement FASTRAL), while being highly competitive in terms of empirical runtime.</p>
    <p>The model conditions where TREE-QMC outperforms ASTRAL-III are characterized by large numbers of species or high amounts of gene tree heterogeneity because of ILS and GTEE. For the latter scenario, the true species tree was typically not the optimal solution to MQSST (note: this observation is not out of line with the statistical theory because the proof of consistency assumes infinite error-free gene trees). Therefore, better heuristics to MQSST may not translate to more accurate species trees when GTEE is high.</p>
    <p>A major goal is to develop summary methods that are robust to GTEE. One approach is weighting quartets not just by their frequency in the input gene trees. A new version of ASTRAL, dubbed weighted ASTRAL (<xref rid="GR277629HANC39" ref-type="bibr">Zhang and Mirarab 2022</xref>), which was published during our study, adjusts quartet weights based on the branch support and branch lengths in the estimated gene trees. TREE-QMC's nonuniform normalization scheme adjusts the quartet weights based on the subproblem division (i.e., quartets are upweighted if they are on species in more closely related subproblems, which ideally reflects closeness in the true species tree). In the future, it would be interesting to compare TREE-QMC to weighted ASTRAL as well as to implement other quartet weighting schemes within TREE-QMC.</p>
    <p>There are several other opportunities for future work worth mentioning. First, the version of TREE-QMC presented here requires binary gene trees as input. Thus, TREE-QMC was given gene trees that are randomly refined in our experimental study, whereas all other methods were given gene trees with polytomies. This did not have a negative impact on TREE-QMC's performance relative to the other methods; however, it would be worth exploring this issue further. Ultimately, this inherent limitation of TREE-QMC could be addressed by devising an efficient algorithm for computing the “edges” in the quartet graph (see Methods section), although this would come at the cost of increased runtime. Second, the experimental study presented here only evaluates TREE-QMC in the context of multilocus species tree estimation where gene tree can be discordant with the species tree because of ILS and/or GTEE. Our study does not address the use of TREE-QMC as a more general quartet-based supertree method, and future work should explore whether quartet weight normalization is beneficial in this context. Lastly, TREE-QMC's algorithm operates on gene trees that are multilabeled because of artificial taxa, so the algorithms presented here can be applied to gene trees that are multilabeled because of other causes, such as multiple individuals being sampled per species (<xref rid="GR277629HANC24" ref-type="bibr">Rabiee et al. 2019</xref>) or genes evolving via duplications (<xref rid="GR277629HANC41" ref-type="bibr">Zhang et al. 2020</xref>; <xref rid="GR277629HANC13" ref-type="bibr">Legried et al. 2021</xref>; <xref rid="GR277629HANC38" ref-type="bibr">Yan et al. 2021</xref>; <xref rid="GR277629HANC30" ref-type="bibr">Smith et al. 2022</xref>). Future work should explore the effectiveness of TREE-QMC under these conditions as well as those characterized by missing data because of gene loss or other causes (<xref rid="GR277629HANC22" ref-type="bibr">Nute et al. 2018</xref>).</p>
  </sec>
  <sec sec-type="methods" id="s3">
    <title>Methods</title>
    <p>We now present the TREE-QMC method. To begin, we define some terminology for phylogenetic trees and the notation used through this section and the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
    <sec id="s3a">
      <title>Terminology and notation</title>
      <p>A <italic>phylogenetic tree T</italic> is a triplet <inline-formula id="il2"><mml:math id="IL2" display="inline" overflow="scroll"><mml:mo>(</mml:mo><mml:mrow><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>ϕ</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>g</italic> is a connected acyclic graph, <inline-formula id="il3"><mml:math id="IL3" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> is a set of labels (species), and <inline-formula id="il02"><mml:math id="IL4" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϕ</mml:mi></mml:mrow></mml:math></inline-formula> maps leaves in <italic>g</italic> to labels in <inline-formula id="il4"><mml:math id="IL5" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula>. If <inline-formula id="il002"><mml:math id="IL6" display="inline" overflow="scroll"><mml:mrow><mml:mi>ϕ</mml:mi></mml:mrow></mml:math></inline-formula> is a bijection, we say that <italic>T</italic> is <italic>singly labeled</italic>; otherwise, we say <italic>T</italic> is <italic>multilabeled</italic>. Trees may be either <italic>unrooted</italic> or <italic>rooted</italic>. Edges in an unrooted tree are undirected, whereas edges in a rooted tree are directed away from the root, a special vertex with in-degree 0 (all other vertices have in-degree 1). To transform an unrooted tree <italic>T</italic> into a rooted tree <italic>T</italic><sub><italic>r</italic></sub>, we select an edge in <italic>T</italic>, subdivide it with a new vertex <italic>r</italic> (the root), and then orient the edges of <italic>T</italic> away from the root. Conversely, we transform a rooted tree <italic>T</italic><sub><italic>r</italic></sub> into an unrooted tree <italic>T</italic> by undirecting its edges and then suppressing any vertex with degree 2.</p>
      <p>For a tree <italic>T</italic>, we denote its edge set as <italic>E</italic>(<italic>T</italic>), its internal vertex set as <italic>V</italic>(<italic>T</italic>), and its leaf set as <italic>L</italic>(<italic>T</italic>). Sometimes we consider a phylogenetic tree <italic>T restricted</italic> to a subset of its leaves <italic>R</italic> ⊆ <italic>L</italic>(<italic>T</italic>). Such a tree, denoted <italic>T</italic>|<sub><italic>R</italic></sub>, is created by deleting leaves in <inline-formula id="il5"><mml:math id="IL7" display="inline" overflow="scroll"><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo><mml:mi mathvariant="normal">∖</mml:mi><mml:mi>R</mml:mi></mml:math></inline-formula> and suppressing any vertex with degree 2 (while updating branch lengths in the natural way). Henceforth, all trees are <italic>binary</italic>, meaning that nonleaf, nonroot vertices (referred to as <italic>internal</italic> vertices) have degree 3.</p>
      <p>To present TREE-QMC, we need two additional concepts: <italic>bipartitions</italic> and <italic>quartets</italic>. A bipartition splits a set <inline-formula id="il6"><mml:math id="IL8" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> of labels into two disjoint sets: <inline-formula id="il7"><mml:math id="IL9" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow></mml:math></inline-formula> and <inline-formula id="il8"><mml:math id="IL10" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow><mml:mi mathvariant="normal">∖</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow></mml:math></inline-formula>. Each edge in a (singly labeled, unrooted) tree <italic>T</italic> induces a bipartition because deleting an edge creates two rooted subtrees whose leaf labels form the bipartition <inline-formula id="il9"><mml:math id="IL11" display="inline" overflow="scroll"><mml:mi>π</mml:mi><mml:mo>(</mml:mo><mml:mi>e</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow></mml:math></inline-formula>. A given bipartition is displayed by <italic>T</italic> if it is in the set {π(<italic>e</italic>):<italic>e</italic> ∈ <italic>E</italic>(<italic>T</italic>)}. The bipartition is trivial if <inline-formula id="il10"><mml:math id="IL12" display="inline" overflow="scroll"><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">E</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo></mml:math></inline-formula> or <inline-formula id="il11"><mml:math id="IL13" display="inline" overflow="scroll"><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">F</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo></mml:math></inline-formula> is 1; otherwise, it is nontrivial.</p>
      <p>A quartet <italic>q</italic> is an unrooted, binary tree with four leaves <italic>a</italic>, <italic>b</italic>, <italic>c</italic>, <italic>d</italic> labeled by <italic>A</italic>, <italic>B</italic>, <italic>C</italic>, <italic>D</italic>, respectively. It is easy to see that there are three possible quartet trees given by their one nontrivial bipartition: (1) <italic>a,b</italic>|<italic>c,d</italic>; (2) <italic>a,c</italic>|<italic>b,d</italic>; and (3) <italic>a,d</italic>|<italic>b,c</italic> (note that we typically use lower case letters to denote leaf vertices and capital letters to denote leaf labels, although this distinction is only necessary when trees are multilabeled). A set of quartets can be defined by an unrooted tree <italic>T</italic> by restricting <italic>T</italic> to every possible subset of four leaves in <italic>L</italic>(<italic>T</italic>); the resulting set <italic>Q</italic>(<italic>T</italic>) is referred to as the quartet encoding of <italic>T</italic>. If <italic>T</italic> is multilabeled, then some of the quartets in <italic>Q</italic>(<italic>T</italic>) will have multiple leaves labeled by the same label. Lastly, we say that <italic>T</italic> displays a quartet <italic>q</italic> if <italic>q</italic> ∈ <italic>Q</italic>(<italic>T</italic>).</p>
    </sec>
    <sec id="s3b">
      <title>Review of wQMC</title>
      <p>As previously mentioned, our new method TREE-QMC builds upon the divide-and-conquer method wQMC (<xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). To produce a bipartition on <inline-formula id="il12"><mml:math id="IL14" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:math></inline-formula>, wQMC constructs a graph from <inline-formula id="il13"><mml:math id="IL15" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">Q</mml:mi></mml:mrow></mml:math></inline-formula>, referred to as the <bold>quartet graph</bold>, and then seeks its maximum cut (<xref rid="GR277629HANC31" ref-type="bibr">Snir and Rao 2010</xref>, <xref rid="GR277629HANC32" ref-type="bibr">2012</xref>; <xref rid="GR277629HANC1" ref-type="bibr">Avni et al. 2014</xref>). The quartet graph is formed from two complete graphs, <inline-formula id="il501"><mml:math id="IL16" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il601"><mml:math id="IL17" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, both on vertex set <italic>V</italic> (i.e., there exists a bijection between <italic>V</italic> and <inline-formula id="il14"><mml:math id="IL18" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:math></inline-formula>). All edges in <inline-formula id="il502"><mml:math id="IL19" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il602"><mml:math id="IL20" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> are initialized to weight zero. Then, each quartet <inline-formula id="il15"><mml:math id="IL21" display="inline" overflow="scroll"><mml:mi>q</mml:mi><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>C</mml:mi><mml:mo>,</mml:mo><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:msub><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">Q</mml:mi></mml:mrow><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">X</mml:mi></mml:mrow></mml:msub></mml:mrow></mml:math></inline-formula> contributes its weight <inline-formula id="il16"><mml:math id="IL22" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> to two “bad” edges in <inline-formula id="il503"><mml:math id="IL23" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and four “good” edges in <inline-formula id="il603"><mml:math id="IL24" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, where <inline-formula id="il17"><mml:math id="IL25" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mi>q</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> corresponds to the number of gene trees in the input set <inline-formula id="il18"><mml:math id="IL26" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:math></inline-formula> that display <italic>q</italic>. The bad edges are based on sibling pairs: (<italic>A</italic>, <italic>B</italic>) and (<italic>C</italic>, <italic>D</italic>). The good edges are based on nonsibling pairs: (<italic>A</italic>, <italic>C</italic>), (<italic>A</italic>, <italic>D</italic>), (<italic>B</italic>, <italic>C</italic>), and (<italic>B</italic>, <italic>D</italic>). We do not want to cut bad edges because siblings should be on the same side of the bipartition; conversely, we want to cut good edges because nonsiblings should be on different sides of the bipartition. Ultimately, we seek a cut <inline-formula id="il19"><mml:math id="IL27" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">C</mml:mi></mml:mrow></mml:math></inline-formula> to maximize <inline-formula id="il20"><mml:math id="IL28" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">C</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>α</mml:mi><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></inline-formula>), where α &gt; 0 is a hyperparameter that can be optimized using binary search. Although MaxCut is NP-complete (<xref rid="GR277629HANC9" ref-type="bibr">Karp 1972</xref>), fast and accurate heuristics have been developed (<xref rid="GR277629HANC6" ref-type="bibr">Dunning et al. 2018</xref>). The cut gives a bipartition in the output species tree and the wQMC method proceeds by recursion on the two subsets of species on each side of the bipartition. Artificial taxa are introduced to represent the species on the other side of the bipartition.</p>
    </sec>
    <sec id="s3c">
      <title>TREE-QMC: quartet weight normalization</title>
      <p>Our key observation in developing TREE-QMC is that artificial taxa change the quartet weights so that a single gene tree will vote multiple times for quartets on artificial taxa and only once for quartets on only nonartificial taxa (called singletons). As shown in <xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>, the weight of quartet <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> is
<disp-formula id="GR277629HANM1"><label>(1)</label><mml:math id="M1" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <inline-formula id="il21"><mml:math id="IL29" display="inline" overflow="scroll"><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>⊂</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">L</mml:mi></mml:mrow></mml:math></inline-formula> denotes the set of leaves (i.e., species) in <italic>T</italic> associated with label <italic>M</italic> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). When labels <italic>M</italic>, <italic>N</italic>, <italic>O</italic>, <italic>P</italic> are all singletons, each gene tree casts exactly one vote for one of the three possible quartets: <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> or <italic>M</italic>, <italic>O</italic>|<italic>N</italic>, <italic>P</italic> or <italic>M</italic>, <italic>P</italic>|<italic>N</italic>, <italic>O</italic> (assuming no missing data). Otherwise, each gene tree casts |<bold>M</bold>| · |<bold>N</bold>| · |<bold>O</bold>| · |<bold>P</bold>| votes (again assuming no missing data) and thus can vote for more than one topology.</p>
      <p>We propose to normalize the quartet weights so that each gene tree casts one vote for each subset of four labels, although it may split its vote across the possible quartet topologies in the case of artificial taxa. To get this outcome, we can simply divide by the number of votes cast so that the weight of <italic>M</italic>, <italic>N</italic>|<italic>O</italic>, <italic>P</italic> becomes
<disp-formula id="GR277629HANM2"><label>(2)</label><mml:math id="M2" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>f</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mrow><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo fence="false">|</mml:mo><mml:mo>⋅</mml:mo><mml:mo fence="false">|</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow><mml:mo fence="false">|</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>.</mml:mo></mml:mstyle></mml:math></disp-formula>
This can be implemented efficiently by assigning an importance value <italic>I</italic>(<italic>x</italic>) to each species <inline-formula id="il22"><mml:math id="IL30" display="inline" overflow="scroll"><mml:mi>x</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">S</mml:mi></mml:mrow></mml:math></inline-formula> and then computing the weight as</p>
      <p><disp-formula id="GR277629HANM3"><label>(3)</label><mml:math id="M3" display="block" overflow="scroll"><mml:mi>f</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>,</mml:mo><mml:mi>N</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>O</mml:mi><mml:mo>,</mml:mo><mml:mi>P</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>w</mml:mi><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">T</mml:mi></mml:mrow></mml:msub></mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>I</italic>(<italic>m</italic>, <italic>n</italic>, <italic>o</italic>, <italic>p</italic>) = <italic>I</italic>(<italic>m</italic>) · <italic>I</italic>(<italic>n</italic>) · <italic>I</italic>(<italic>o</italic>) · <italic>I</italic>(<italic>p</italic>). Specifically, Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> reduces to Equation <xref rid="GR277629HANM2" ref-type="disp-formula">2</xref> when <italic>I</italic>(<italic>m</italic>) = |<bold>M</bold>|<sup>−1</sup> for all <italic>m</italic> ∈ <bold>M</bold> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). Because all species with the same label are assigned the same importance value, we refer to this approach as <italic>uniform normalization (n1)</italic>. More broadly, the quartet weights will be normalized whenever Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> corresponds to a weighted average, meaning that
<disp-formula id="GR277629HANM4"><label>(4)</label><mml:math id="M4" display="block" overflow="scroll"><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">O</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">P</mml:mi></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>,</mml:mo><mml:mi>n</mml:mi><mml:mo>,</mml:mo><mml:mi>o</mml:mi><mml:mo>,</mml:mo><mml:mi>p</mml:mi></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mn>1.</mml:mn></mml:math></disp-formula>
It is easy to see that this will be the case whenever <inline-formula id="il23"><mml:math id="IL31" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">M</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> (and similarly for <bold>N</bold>, <bold>O</bold>, <bold>P</bold>). In <italic>unnormalized (n0)</italic> case, we assign all species an importance value of 1 so that Equation <xref rid="GR277629HANM3" ref-type="disp-formula">3</xref> reduces to Equation <xref rid="GR277629HANM1" ref-type="disp-formula">1</xref>.</p>
      <p>We now describe how to normalize quartet weights while leveraging the hierarchical structure implied by artificial taxa by assigning importance values to species with the same label. The idea is that species should have lesser importance each time they are <italic>relabeled</italic> by an artificial taxon. In <xref rid="GR277629HANF1" ref-type="fig">Fig. 1</xref>, artificial taxon <italic>Z</italic> represents species <bold>Z</bold> = {0, 6, 7, 9} but species 0 and 9 were previously labeled by artificial taxon <italic>X</italic>. This relationship can be represented as the rooted “phylogenetic” tree <italic>T</italic><sub><italic>Z</italic></sub> given by Newick string: (6, 7, (0, 9)<italic>X</italic>)<italic>Z</italic>. We use <italic>T</italic><sub><italic>Z</italic></sub> to assign importance values to all species <italic>z</italic> ∈ <bold>Z</bold>, specifically
<disp-formula id="GR277629HANM5"><label>(5)</label><mml:math id="M5" display="block" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∏</mml:mo></mml:mrow><mml:mrow><mml:mi>v</mml:mi><mml:mo>∈</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>h</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>Z</mml:mi></mml:msub></mml:mrow><mml:mo>,</mml:mo><mml:mi>z</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:munder><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mrow><mml:mi>o</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>g</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>e</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></disp-formula>
where <italic>outdegree</italic>(<italic>v</italic>) is the out-degree of vertex <italic>v</italic> and <italic>path</italic>(<italic>T</italic><sub><italic>Z</italic></sub>, <italic>z</italic>) contains the vertices on the path in <italic>T</italic><sub><italic>Z</italic></sub> from the root to the leaf labeled <italic>z</italic>, excluding the leaf. Continuing the example, <inline-formula id="il24"><mml:math id="IL32" display="inline" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>6</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>7</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:math></inline-formula> and <inline-formula id="il25"><mml:math id="IL33" display="inline" overflow="scroll"><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>0</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>9</mml:mn><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>3</mml:mn></mml:mfrac></mml:mrow><mml:mo>⋅</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>=</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mn>1</mml:mn><mml:mn>6</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mstyle></mml:mstyle></mml:math></inline-formula>. By construction, <inline-formula id="il26"><mml:math id="IL34" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi mathvariant="bold">Z</mml:mi></mml:mrow></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>z</mml:mi><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:math></inline-formula> so this approach normalizes the quartet weights. Because different species with the same label can have different weights, we refer to this approach as <italic>nonuniform normalization (n2)</italic>. In our simulation study, normalizing the quartet weights in this fashion improved species tree accuracy for challenging model conditions.</p>
    </sec>
    <sec id="s3d">
      <title>TREE-QMC: efficient quartet graph construction</title>
      <p>Another key development in TREE-QMC is an efficient algorithm for constructing the quartet graph directly from <italic>k</italic> gene trees, each on <italic>n</italic> species. Our approach breaks down computing the weights for good and bad edges into three cases:
<list list-type="bullet"><list-item><p>Case 1: taxa <italic>X</italic>, <italic>Y</italic> are both nonartificial taxa (called singletons).</p></list-item><list-item><p>Case 2: taxa <italic>X</italic> is a singleton and <italic>Y</italic> is an artificial taxon (or vice versa).</p></list-item><list-item><p>Case 3: taxa <italic>X</italic>, <italic>Y</italic> are both artificial taxa.</p></list-item></list>For one gene tree, <inline-formula id="il604"><mml:math id="IL35" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] and <inline-formula id="il504"><mml:math id="IL36" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] can be computed for all pairs <italic>X</italic>, <italic>Y</italic> in case 1, case 2, and case 3 in <italic>O</italic>(<italic>a</italic><sup>2</sup>) time, <italic>O</italic>(<italic>abn</italic>) and <italic>O</italic>(<italic>b</italic><sup>2</sup><italic>n</italic>) time, respectively, where <italic>a</italic> is the number of singletons and <italic>b</italic> is the number of artificial taxa. Thus, for a subproblem with <italic>s</italic> = <italic>a</italic> + <italic>b</italic> taxa, the quartet graph can be constructed in <italic>O</italic>(<italic>s</italic><sup>2</sup><italic>nk</italic>) time by applying this algorithm to all gene trees (Theorem 1 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>).</p>
      <p>After quartet graph construction, we seek a max cut. Our high-level approach is the same as wQMC. However, we differ in our binary search for α (interval and precision) and our max-cut heuristic, instead using the one proposed by <xref rid="GR277629HANC3" ref-type="bibr">Burer et al. (2002)</xref> and implemented in the open-source package MQLib by <xref rid="GR277629HANC6" ref-type="bibr">Dunning et al. (2018)</xref>. Our approach for cutting the quartet graph runs in <italic>O</italic>(<italic>s</italic><sup>2</sup>) time (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>), so the time complexity for each subproblem is dominated by quartet graph construction. Overall, the divide-and-conquer algorithm runs in <italic>O</italic>(<italic>n</italic><sup>3</sup><italic>k</italic>) time (Theorem 3 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>) if the division into subproblems is perfectly balanced. We do not expect subproblem division to be perfectly balanced in practice, and moreover the time complexity analysis hides large constant factors (Theorem 2 in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>). That being said, we find TREE-QMC is sufficiently fast, at least on the specific inputs in our study.</p>
    </sec>
    <sec id="s3e">
      <title>Idea behind efficient quartet graph construction</title>
      <p>We now provide the idea behind our approach by considering the simplest case where there are no artificial taxa in gene tree <italic>T</italic> with <italic>n</italic> leaves (i.e., <italic>T</italic> is singly labeled). For TREE-QMC, the weight of bad edges between taxa <italic>X</italic> and <italic>Y</italic>, denoted <inline-formula id="il505"><mml:math id="IL37" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>], is the number of quartets displayed by <italic>T</italic> with <italic>X</italic>, <italic>Y</italic> as siblings and similarly for <inline-formula id="il605"><mml:math id="IL38" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] but nonsiblings. This means that we can easily compute the weight of the good edges if given the weight of the bad edges by applying <inline-formula id="il27"><mml:math id="IL39" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></inline-formula>.</p>
      <p>To compute <inline-formula id="il506"><mml:math id="IL40" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> efficiently, we observe that there is exactly one leaf associated with label <italic>X</italic> (denoted <italic>x</italic>) and one leaf associated with label <italic>Y</italic> (denoted <italic>y</italic>), so there is a unique path connecting leaves <italic>x</italic> and <italic>y</italic> in <italic>T</italic> (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>A). Deleting the edges on this path (and their end points) produces a forest of <italic>K</italic> rooted subtrees, denoted {<italic>t</italic><sub>1</sub>, <italic>t</italic><sub>2</sub>, …, <italic>t</italic><sub><italic>K</italic></sub>}. Let <italic>w</italic> and <italic>z</italic> be two leaves of subtrees <italic>t</italic><sub><italic>i</italic></sub> and <italic>t</italic><sub><italic>j</italic></sub>, respectively. Then, <italic>T</italic> displays quartet <italic>x</italic>, <italic>w</italic>|<italic>z</italic>, <italic>y</italic> for <italic>i</italic> &lt; <italic>j</italic>, quartet <italic>x</italic>, <italic>y</italic>|<italic>w</italic>, <italic>z</italic> for <italic>i</italic> = <italic>j</italic>, and quartet <italic>x</italic>, <italic>z</italic>|<italic>w</italic>, <italic>y</italic> for <italic>i</italic> &gt; <italic>j</italic>. To summarize, <italic>x</italic>, <italic>y</italic> are siblings if and only if leaves <italic>w</italic>, <italic>z</italic> are in the same subtree off the path from <italic>x</italic> to <italic>y</italic>. It follows that <inline-formula id="il507"><mml:math id="IL41" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] can be computed by considering all ways of selecting two other leaves from the same subtree for all subtrees on the path from <italic>x</italic> to <italic>y</italic>.</p>
      <fig position="float" id="GR277629HANF6">
        <label>Figure 6.</label>
        <caption>
          <p>To count the quartets induced by <italic>T</italic> with 0 and 17 as siblings, we consider the path between them (shown in blue in panel <italic>A</italic>). The deletion of the path produces six rooted subtrees (highlighted in gray). Because 0 and 17 are siblings in a quartet if and only if the other two taxa are drawn from the same subtree, the number of bad edges can be computed as <inline-formula id="il28"><mml:math id="IL42" display="inline" overflow="scroll"><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>4</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>3</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mn>1</mml:mn></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mn>2</mml:mn></mml:mtd></mml:mtr></mml:mtable></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>16</mml:mn></mml:math></inline-formula>. Here we show how to compute the number of quartets induced by <italic>T</italic> with 0 and 17 as siblings after rooting <italic>T</italic> arbitrarily. Panel <italic>B</italic> shows that we need to consider the number of ways of selecting two taxa from the same subtree for three cases: (1) the subtree above the <italic>lca</italic>(0, 17) (highlighted in green), (2) all subtrees off the path from the <italic>lca</italic>(0, 17) to the left taxon 0 (highlighted in red), and (3) all subtrees off the path from the <italic>lca</italic>(0, 17) to the right taxon 17 (highlighted in pink). Case 1 can be computed in constant time if we know the number of leaves below the LCA, that is, <inline-formula id="il801"><mml:math id="IL43" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = 6 (Eq. 8). Cases 2 and 3 can also be computed in constant time as follows. Panel <italic>C</italic> shows the prefix of the left child of the <italic>lca</italic>(0, 17), denoted <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>left</italic>]. This quantity is the number of ways of selecting two taxa from the same subtree for all subtrees off the path from the root to this vertex (circled in red). Similarly, the prefix of taxon 0, denoted <italic>p</italic>[0], is the number of ways of selecting two taxa from the same subtree for all subtrees off the path from the root to 0 (circled in purple). Therefore, the number of ways of selecting two taxa from all subtrees in case 2 (i.e., subtrees highlighted in red in <italic>B</italic>) is <inline-formula id="il701"><mml:math id="IL44" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = <italic>p</italic>[0] − <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>left</italic>] = 7 (Eq. 9). Case 3 can be computed in a similar fashion as <inline-formula id="il901"><mml:math id="IL45" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = <italic>p</italic>[17] − <italic>p</italic>[<italic>lca</italic>(0, 17).<italic>right</italic>] = 3 (Eq. 10). Putting this all together gives <inline-formula id="il508"><mml:math id="IL46" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[0, 17] = 16 (Eq. 6).</p>
        </caption>
        <graphic xlink:href="1042f06" position="float"/>
      </fig>
      <p>This observation can be used to count the quartets efficiently when gene trees are singly labeled. However, we need to be more careful when <italic>T</italic> is multilabeled, which is typically the case because of artificial taxa. Following our example, suppose that we want to count the number of bad edges between 0 and 17 contributed by the subtree with leaves 4, 5, and 6. However, if leaves 4 and 5 are both relabeled by artificial taxon <italic>M</italic>, the quartet on 0, 17|4, 5 corresponds to quartet 0, 17|<italic>M</italic>, <italic>M</italic> has no topological information and should not be counted. The other quartets 0, 17|4, 6 and 0, 17|5, 6 correspond to 0, 17|<italic>M</italic>, 6 and thus should be counted.</p>
    </sec>
    <sec id="s3f">
      <title>Computing the bad edges given a singly labeled gene tree</title>
      <p>We now present an algorithm for computing the number of bad edges given a singly labeled gene tree <italic>T</italic> (later we will extend it to the more general case of a multilabeled gene tree). After rooting <italic>T</italic> arbitrarily, we again consider the path between <italic>x</italic> and <italic>y</italic>, which now goes through their lowest common ancestor, denoted <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>B). This allows us to break the computation into three parts
<disp-formula id="GR277629HANM6"><label>(6)</label><mml:math id="M6" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <inline-formula id="il802"><mml:math id="IL47" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] is the number of ways of selecting two leaves from the subtree above <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>), <inline-formula id="il702"><mml:math id="IL48" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] the number of ways of selecting two leaves from the same subtree for all subtrees off the path from <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) to leaf in its <italic>left</italic> subtree (say <italic>x</italic>), and <inline-formula id="il902"><mml:math id="IL49" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] the number of ways of selecting two leaves from the same subtree for all subtrees off the path from <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) to the leaf in its <italic>right</italic> (say <italic>y</italic>). As we will show, each of these quantities can be computed in constant time, after an <italic>O</italic>(<italic>n</italic>) preprocessing phase, in which we compute two values for each vertex <italic>v</italic> in <italic>T</italic>. The first value <italic>c</italic>[<italic>v</italic>] is the number taxa below vertex <italic>v</italic>. The second value <italic>p</italic>[<italic>v</italic>], which we refer to as the “prefix” of <italic>v</italic>, is the number of ways to select two taxa from the same subtree for all subtrees off the path from the root to vertex <italic>v</italic> (<xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>C). It is easy to see that <italic>c</italic> can be computed in <italic>O</italic>(<italic>n</italic>) time via a postorder traversal. After which, <italic>p</italic> can be computed in <italic>O</italic>(<italic>n</italic>) via a preorder traversal, setting
<disp-formula id="GR277629HANM7"><label>(7)</label><mml:math id="M7" display="block" overflow="scroll"><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>c</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>
after initializing <italic>p</italic>[<italic>root</italic>] = 0. Now we can compute the quantities:
<disp-formula id="GR277629HANM8"><label>(8)</label><mml:math id="M8" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mi>n</mml:mi><mml:mo>−</mml:mo><mml:mi>c</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula>
<disp-formula id="GR277629HANM9"><label>(9)</label><mml:math id="M9" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>x</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:mi>l</mml:mi><mml:mi>e</mml:mi><mml:mi>f</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
<disp-formula id="GR277629HANM10"><label>(10)</label><mml:math id="M10" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mi>y</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mi>p</mml:mi><mml:mo>[</mml:mo><mml:mrow><mml:mi>l</mml:mi><mml:mi>c</mml:mi><mml:mi>a</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>.</mml:mo><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>g</mml:mi><mml:mi>h</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where <italic>v</italic>.<italic>left</italic> denotes the left child of <italic>v</italic> and <italic>v</italic>.<italic>right</italic> denotes the right child of <italic>v</italic> (see <xref rid="GR277629HANF6" ref-type="fig">Fig. 6</xref>C). It is possible to access <italic>lca</italic>(<italic>x</italic>, <italic>y</italic>) in constant time after <italic>O</italic>(<italic>n</italic>) preprocessing step (<xref rid="GR277629HANC7" ref-type="bibr">Gusfield 1997</xref>), although we implemented this implicitly by computing the entries of <inline-formula id="il509"><mml:math id="IL50" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> during a postorder traversal of <italic>T</italic>. Thus, we can compute <inline-formula id="il510"><mml:math id="IL51" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> in <italic>O</italic>(<italic>n</italic><sup>2</sup>) time, provided that <italic>T</italic> is singly labeled.</p>
    </sec>
    <sec id="s3g">
      <title>Computing the bad edges given a multilabeled gene tree</title>
      <p>We now present an algorithm for computing the number of bad edges <inline-formula id="il511"><mml:math id="IL52" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] given a multilabeled gene tree <italic>T</italic>. As previously mentioned, this breaks down into three cases. Case 1 (where taxa <italic>X</italic>, <italic>Y</italic> are both singletons) is presented below and cases 2 and 3 are presented in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      <p>As before, we focus on the number of ways to select two leaves <italic>w</italic>, <italic>z</italic> from a collection of subtrees; however, now that <italic>T</italic> is multilabeled, it is possible for two leaves <italic>w</italic>, <italic>z</italic> to have the same label. Therefore, we now need to count the number of ways to select two leaves <italic>z</italic>, <italic>w</italic> below vertex <italic>u</italic> so that they are <bold>uniquely labeled</bold>
<italic>Z</italic> ≠ <italic>W</italic> (note that we use capital letters <italic>W</italic> and <italic>Z</italic> to denote the current labels of leaves <italic>w</italic> and <italic>z</italic>, respectively). This modified binomial is computed by revising the preprocessing phase. We now let <italic>c</italic><sub>0</sub>[<italic>v</italic>] denote the number of leaves labeled by singletons below vertex <italic>v</italic> and let <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>] denote the number of leaves labeled by artificial taxon <italic>D</italic> below vertex <italic>v</italic>. Thus, for each vertex <italic>v</italic>, we store a vector <italic>c</italic>[<italic>v</italic>] of length <italic>b</italic> + 1, where <italic>b</italic> is the number of artificial taxa in <italic>T</italic>. As before, we can compute <italic>c</italic> in <italic>O</italic>(<italic>bn</italic>) time via a postorder traversal. However, the number of ways to select two leaves with different labels is now broken into three cases:
<list list-type="bullet"><list-item><p>the number of ways to select two singletons, which equals <inline-formula id="il29"><mml:math id="IL53" display="inline" overflow="scroll"><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow></mml:math></inline-formula>,</p></list-item><list-item><p>the number of ways to select one singleton and one artificial taxa, which equals <inline-formula id="il30"><mml:math id="IL54" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula>, where <inline-formula id="il31"><mml:math id="IL55" display="inline" overflow="scroll"><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula> is the set of artificial taxa below vertex <italic>v</italic>, and</p></list-item><list-item><p>the number of ways to select two artificial taxa, which equals <inline-formula id="il32"><mml:math id="IL56" display="inline" overflow="scroll"><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>≠</mml:mo><mml:mi>E</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>E</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula>.</p></list-item></list>Putting this all together gives the <bold>modified binomial coefficient</bold>:
<disp-formula id="GR277629HANM11"><label>(11)</label><mml:math id="M11" display="block" overflow="scroll"><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>v</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow><mml:mo>,</mml:mo></mml:mstyle></mml:math></disp-formula>
where <inline-formula id="il33"><mml:math id="IL57" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:math></inline-formula> and <inline-formula id="il34"><mml:math id="IL58" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>D</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">A</mml:mi></mml:mrow><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo></mml:mrow></mml:munder></mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math></inline-formula>. At each vertex, the calculation of <italic>G</italic><sub>1</sub>[<italic>v</italic>] and <italic>G</italic><sub>2</sub>[<italic>v</italic>] takes <italic>O</italic>(<italic>b</italic>) time, after which we can compute <italic>g</italic><sub>0</sub>[<italic>v</italic>] in constant time. Thus, <italic>g</italic><sub>0</sub> can be computed in <italic>O</italic>(<italic>bn</italic>) time. Note that we also need to compute modified binomial coefficient for the subtree “above” vertex <italic>v</italic>, denoted <italic>g</italic><sub>0</sub>[<italic>v</italic>.<italic>above</italic>]. This can be computed in a similar fashion by noting that number of singletons above <italic>v</italic> is <italic>a</italic> − <italic>c</italic><sub>0</sub>[<italic>v</italic>] and that the number of leaves above <italic>v</italic> labeled by each artificial taxon <italic>D</italic> is |<bold>D</bold>| − <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>].</p>
      <p>Using the modified binomial, we can apply our algorithm for singly labeled trees by redefining prefix sum:
<disp-formula id="GR277629HANM12"><label>(12)</label><mml:math id="M12" display="block" overflow="scroll"><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mspace width="0.4em"/><mml:msub><mml:mi>p</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>p</mml:mi><mml:mi>a</mml:mi><mml:mi>r</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi></mml:mrow><mml:mo>]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mrow><mml:mi>v</mml:mi><mml:mo>.</mml:mo><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>l</mml:mi><mml:mi>i</mml:mi><mml:mi>n</mml:mi><mml:mi>g</mml:mi></mml:mrow><mml:mo>]</mml:mo></mml:math></disp-formula>
and then redefining the quantities from which we can compute <italic>B</italic>[<italic>x</italic>, <italic>y</italic>] in constant time, that is, <inline-formula id="il803"><mml:math id="IL59" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>g</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>above</italic>], and <inline-formula id="il703"><mml:math id="IL60" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>p</italic><sub>0</sub>[<italic>x</italic>] − <italic>p</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>left</italic>], and <inline-formula id="il903"><mml:math id="IL61" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] = <italic>p</italic><sub>0</sub>[<italic>y</italic>] − <italic>p</italic><sub>0</sub>[<italic>lca</italic>(<italic>x</italic>, <italic>y</italic>).<italic>right</italic>]. As there are <italic>a</italic><sup>2</sup> pairs of singletons in the subproblem, the total runtime is <italic>O</italic>(<italic>a</italic><sup>2</sup> + <italic>bn</italic>).</p>
    </sec>
    <sec id="s3h">
      <title>Normalizing quartet weights while computing the bad edges</title>
      <p>To normalize the quartet weights, <inline-formula id="il512"><mml:math id="IL62" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] becomes the <italic>weighted</italic> sum of quartets with <italic>X</italic>, <italic>Y</italic> are siblings, where each quartet <italic>x</italic>, <italic>y</italic>|<italic>z</italic>, <italic>w</italic> is weighted by <italic>I</italic>(<italic>x</italic>, <italic>y</italic>, <italic>z</italic>, <italic>w</italic>) = <italic>I</italic>(<italic>x</italic>)<italic>I</italic>(<italic>y</italic>)<italic>I</italic>(<italic>z</italic>)<italic>I</italic>(<italic>w</italic>), where <italic>I</italic>(<italic>x</italic>) is the importance value assigned to leaf <italic>x</italic> (which corresponds to a species in the singly labeled gene tree). When <italic>X</italic>, <italic>Y</italic> are singletons,
<disp-formula id="GR277629HANM13"><label>(13)</label><mml:math id="M13" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>y</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>w</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>T</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo><mml:mi>Z</mml:mi><mml:mo>≠</mml:mo><mml:mi>W</mml:mi><mml:mo>≠</mml:mo><mml:mi>X</mml:mi><mml:mo>≠</mml:mo><mml:mi>Y</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>q</mml:mi><mml:mo>(</mml:mo><mml:mrow><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow><mml:mo>)</mml:mo><mml:mo>=</mml:mo><mml:mi>x</mml:mi><mml:mo>,</mml:mo><mml:mi>y</mml:mi><mml:mo fence="false">|</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula>
where the importance values of singletons are set to 1 so we know that <italic>I</italic>(<italic>x</italic>) = <italic>I</italic>(<italic>y</italic>) = 1. Note that all of the importance values are set to 1 in the unnormalized case.</p>
      <p>To compute the normalized version of <inline-formula id="il513"><mml:math id="IL63" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>] using the previous algorithm, we set <italic>c</italic><sub><italic>D</italic></sub>[<italic>v</italic>] to be the sum of the importance values of the leaves below <italic>v</italic> that are labeled by <italic>D</italic> (i.e., <inline-formula id="il35"><mml:math id="IL64" display="inline" overflow="scroll"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>v</mml:mi><mml:mo>]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:munder><mml:mo>∑</mml:mo><mml:mrow><mml:mi>m</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>v</mml:mi><mml:mo>)</mml:mo><mml:mo>,</mml:mo><mml:mi>M</mml:mi><mml:mo>=</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:munder></mml:mrow><mml:mi>I</mml:mi><mml:mo>(</mml:mo><mml:mi>m</mml:mi><mml:mo>)</mml:mo></mml:math></inline-formula>, where <italic>L</italic>(<italic>v</italic>) denotes the set of leaves below <italic>v</italic>). The proof of correctness follows from <xref rid="st1" ref-type="statement">Lemma 1</xref>, in which we show that the total weight of selecting two uniquely labeled leaves below vertex <italic>u</italic> equals <italic>g</italic><sub>0</sub>[<italic>u</italic>]. This is because all other quantities (<italic>p</italic>, <inline-formula id="il804"><mml:math id="IL65" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">A</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="il704"><mml:math id="IL66" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">L</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, <inline-formula id="il904"><mml:math id="IL67" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">R</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>) are computed from <italic>g</italic><sub>0</sub>[<italic>u</italic>].</p>
      <statement id="st1" content-type="lemma">
        <label>Lemma 1.</label>
        <p><italic>The total weight of all taxon pairs in the subtree rooted at internal vertex u</italic><disp-formula id="GR277629HANM14"><label>(14)</label><mml:math id="M14" display="block" overflow="scroll"><mml:munder><mml:mrow><mml:mo movablelimits="false">∑</mml:mo></mml:mrow><mml:mrow><mml:mtable rowspacing="4pt" columnspacing="1em"><mml:mtr><mml:mtd><mml:mrow><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>w</mml:mi><mml:mo>∈</mml:mo><mml:mi>L</mml:mi><mml:mo>(</mml:mo><mml:mi>u</mml:mi><mml:mo>)</mml:mo><mml:mo>:</mml:mo></mml:mrow></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mrow><mml:mi>Z</mml:mi><mml:mo>≠</mml:mo><mml:mi>W</mml:mi></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:munder><mml:mspace width="0.2em"/><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>w</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:msub><mml:mi>g</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>u</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:math></disp-formula><italic>where L</italic>(<italic>u</italic>) <italic>is the set of leaves below vertex u</italic>.</p>
        <p>See <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref> for proof.</p>
        <p>Lastly, we need to compute the good edges <inline-formula id="il606"><mml:math id="IL68" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>[<italic>X</italic>, <italic>Y</italic>], which is the total weight of quartets in which <italic>X</italic>, <italic>Y</italic> are not siblings. This can be performed in constant time, following <xref rid="st2" ref-type="statement">Lemma 2</xref>.</p>
      </statement>
      <statement id="st2" content-type="lemma">
        <label>Lemma 2.</label>
        <p><italic>Let T be a multilabeled gene tree, and let X</italic>, <italic>Y be singletons. Then,</italic><disp-formula id="GR277629HANM15"><label>(15)</label><mml:math id="M15" display="block" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mrow><mml:mi>X</mml:mi><mml:mo>,</mml:mo><mml:mi>Y</mml:mi></mml:mrow><mml:mo stretchy="false">]</mml:mo><mml:mo>=</mml:mo><mml:mrow><mml:mo>(</mml:mo><mml:mrow><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac linethickness="0"><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>0</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo><mml:mo>−</mml:mo><mml:mn>2</mml:mn></mml:mrow><mml:mo stretchy="false">)</mml:mo><mml:mo>⋅</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>r</mml:mi><mml:mo stretchy="false">]</mml:mo><mml:mo>+</mml:mo><mml:mstyle displaystyle="true" scriptlevel="0"><mml:mrow><mml:mfrac><mml:mrow><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:mrow><mml:mrow><mml:msup><mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow><mml:mo>−</mml:mo><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:mrow><mml:mo>[</mml:mo><mml:mi>r</mml:mi><mml:mo>]</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mrow></mml:mstyle></mml:mrow><mml:mo>,</mml:mo></mml:math></disp-formula><italic>where r is the root vertex of T</italic>.</p>
        <p>See <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref> for proof.</p>
        <p>This concludes our treatment of case 1, in which <italic>X</italic>, <italic>Y</italic> are both singletons. To compute all entries of <inline-formula id="il514"><mml:math id="IL69" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">B</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula> and <inline-formula id="il607"><mml:math id="IL70" display="inline" overflow="scroll"><mml:mrow><mml:mrow><mml:mrow><mml:mi mathvariant="double-struck">G</mml:mi></mml:mrow></mml:mrow></mml:mrow></mml:math></inline-formula>, we also need to consider the other two cases. In case 2, <italic>X</italic> is a singleton and <italic>Y</italic> is an artificial taxon or vice versa (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S13</xref>), and in case 3, both <italic>X</italic> and <italic>Y</italic> are artificial taxa (<xref rid="SD2" ref-type="supplementary-material">Supplemental Fig. S14</xref>). These cases are more complicated because the naive approach would consider all paths in the tree between a leaf labeled <italic>X</italic> and a leaf labeled <italic>Y</italic>, which is not efficient. The algorithms and proofs for these cases are provided in the <xref rid="SD2" ref-type="supplementary-material">Supplemental Materials</xref>.</p>
      </statement>
    </sec>
    <sec id="s3i">
      <title>Software availability</title>
      <p>TREE-QMC is available at GitHub (<uri xlink:href="https://github.com/molloy-lab/TREE-QMC">https://github.com/molloy-lab/TREE-QMC</uri>) and as <xref rid="SD1" ref-type="supplementary-material">Supplemental Code</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="SM1">
    <title>Supplementary Material</title>
    <supplementary-material id="SD1" position="float" content-type="local-data">
      <label>Supplement 1</label>
      <media xlink:href="Supplemental_Code.zip" id="d64e4532" position="anchor"/>
    </supplementary-material>
    <supplementary-material id="SD2" position="float" content-type="local-data">
      <label>Supplement 2</label>
      <media xlink:href="Supplemental_Materials.pdf" id="d64e4535" position="anchor"/>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>Acknowledgments</title>
    <p>This research was funded by the State of Maryland. We thank the reviewers for feedback that greatly improved the quality of our work.</p>
  </ack>
  <fn-group>
    <fn fn-type="supplementary-material">
      <p>[Supplemental material is available for this article.]</p>
    </fn>
    <fn>
      <p>Article published online before print. Article, supplemental material, and publication date are at <ext-link xlink:href="https://www.genome.org/cgi/doi/10.1101/gr.277629.122" ext-link-type="uri">https://www.genome.org/cgi/doi/10.1101/gr.277629.122</ext-link>.</p>
    </fn>
  </fn-group>
  <sec id="s5">
    <title>Competing interest statement</title>
    <p>The authors have no competing interests.</p>
  </sec>
  <ref-list>
    <title>References</title>
    <ref id="GR277629HANC1">
      <mixed-citation publication-type="journal"><string-name><surname>Avni</surname><given-names>E</given-names></string-name>, <string-name><surname>Cohen</surname><given-names>R</given-names></string-name>, <string-name><surname>Snir</surname><given-names>S</given-names></string-name>. <year>2014</year>. <article-title>Weighted quartets phylogenetics</article-title>. <source>Syst Biol</source><volume>64</volume>: <fpage>233</fpage>–<lpage>242</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syu087</pub-id><pub-id pub-id-type="pmid">25414175</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC2">
      <mixed-citation publication-type="journal"><string-name><surname>Braun</surname><given-names>E</given-names></string-name>, <string-name><surname>Kimball</surname><given-names>R</given-names></string-name>. <year>2021</year>. <article-title>Data types and the phylogeny of neoaves</article-title>. <source>Birds</source><volume>2</volume>: <fpage>1</fpage>–<lpage>22</lpage>. <pub-id pub-id-type="doi">10.3390/birds2010001</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC3">
      <mixed-citation publication-type="journal"><string-name><surname>Burer</surname><given-names>S</given-names></string-name>, <string-name><surname>Monteiro</surname><given-names>RD</given-names></string-name>, <string-name><surname>Zhang</surname><given-names>Y</given-names></string-name>. <year>2002</year>. <article-title>Rank-two relaxation heuristics for max-cut and other binary quadratic programs</article-title>. <source>SIAM J Optimization</source><volume>12</volume>: <fpage>503</fpage>–<lpage>521</lpage>. <pub-id pub-id-type="doi">10.1137/S1052623400382467</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC4">
      <mixed-citation publication-type="journal"><string-name><surname>Degnan</surname><given-names>JH</given-names></string-name>, <string-name><surname>Salter</surname><given-names>LA</given-names></string-name>. <year>2005</year>. <article-title>Gene tree distributions under the coalescent process</article-title>. <source>Evolution (N Y)</source><volume>59</volume>: <fpage>24</fpage>–<lpage>37</lpage>. <pub-id pub-id-type="doi">10.1111/j.0014-3820.2005.tb00891.x</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC5">
      <mixed-citation publication-type="journal"><string-name><surname>Dibaeinia</surname><given-names>P</given-names></string-name>, <string-name><surname>Tabe-Bordbar</surname><given-names>S</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2021</year>. <article-title>FASTRAL: improving scalability of phylogenomic analysis</article-title>. <source>Bioinformatics</source><volume>37</volume>: <fpage>2317</fpage>–<lpage>2324</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btab093</pub-id><pub-id pub-id-type="pmid">33576396</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC6">
      <mixed-citation publication-type="journal"><string-name><surname>Dunning</surname><given-names>I</given-names></string-name>, <string-name><surname>Gupta</surname><given-names>S</given-names></string-name>, <string-name><surname>Silberholz</surname><given-names>J</given-names></string-name>. <year>2018</year>. <article-title>What works best when? A systematic evaluation of heuristics for Max-Cut and QUBO</article-title>. <source>INFORMS J Comput</source><volume>30</volume>: <fpage>421</fpage>–<lpage>624</lpage>. <pub-id pub-id-type="doi">10.1287/ijoc.2017.0798</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC7">
      <mixed-citation publication-type="book"><string-name><surname>Gusfield</surname><given-names>D</given-names></string-name>. <year>1997</year>. <source>Algorithms on strings, trees, and sequences: computer science and computational biology</source>. <publisher-name>Cambridge University Press</publisher-name>, <publisher-loc>Cambridge, UK</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC8">
      <mixed-citation publication-type="journal"><string-name><surname>Jarvis</surname><given-names>ED</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Aberer</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Li</surname><given-names>B</given-names></string-name>, <string-name><surname>Houde</surname><given-names>P</given-names></string-name>, <string-name><surname>Li</surname><given-names>C</given-names></string-name>, <string-name><surname>Ho</surname><given-names>SYW</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Nabholz</surname><given-names>B</given-names></string-name>, <string-name><surname>Howard</surname><given-names>JT</given-names></string-name>, <etal/><year>2014</year>. <article-title>Whole-genome analyses resolve early branches in the tree of life of modern birds</article-title>. <source>Science</source><volume>346</volume>: <fpage>1320</fpage>–<lpage>1331</lpage>. <pub-id pub-id-type="doi">10.1126/science.1253451</pub-id><pub-id pub-id-type="pmid">25504713</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC9">
      <mixed-citation publication-type="book"><string-name><surname>Karp</surname><given-names>RM</given-names></string-name>. <year>1972</year>. <article-title>Reducibility among combinatorial problems</article-title>. In <source>Complexity of computer computations: the IBM research symposia series</source>. (ed. <string-name><surname>Miller</surname><given-names>RE</given-names></string-name>, <etal/>), pp. <fpage>85</fpage>–<lpage>103</lpage>. <publisher-name>Springer</publisher-name>, <publisher-loc>Boston</publisher-loc>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC10">
      <mixed-citation publication-type="journal"><string-name><surname>Kozlov</surname><given-names>AM</given-names></string-name>, <string-name><surname>Aberer</surname><given-names>AJ</given-names></string-name>, <string-name><surname>Stamatakis</surname><given-names>A</given-names></string-name>. <year>2015</year>. <article-title>ExaML version 3: a tool for phylogenomic analyses on supercomputers</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>2577</fpage>–<lpage>2579</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv184</pub-id><pub-id pub-id-type="pmid">25819675</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC11">
      <mixed-citation publication-type="journal"><string-name><surname>Kubatko</surname><given-names>LS</given-names></string-name>, <string-name><surname>Degnan</surname><given-names>JH</given-names></string-name>. <year>2007</year>. <article-title>Inconsistency of phylogenetic estimates from concatenated data under coalescence</article-title>. <source>Syst Biol</source><volume>56</volume>: <fpage>17</fpage>–<lpage>24</lpage>. <pub-id pub-id-type="doi">10.1080/10635150601146041</pub-id><pub-id pub-id-type="pmid">17366134</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC12">
      <mixed-citation publication-type="journal"><string-name><surname>Lafond</surname><given-names>M</given-names></string-name>, <string-name><surname>Scornavacca</surname><given-names>C</given-names></string-name>. <year>2019</year>. <article-title>On the weighted quartet consensus problem</article-title>. <source>Theor Comput Sci</source><volume>769</volume>: <fpage>1</fpage>–<lpage>17</lpage>. <pub-id pub-id-type="doi">10.1016/j.tcs.2018.10.005</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC13">
      <mixed-citation publication-type="journal"><string-name><surname>Legried</surname><given-names>B</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>, <string-name><surname>Roch</surname><given-names>S</given-names></string-name>. <year>2021</year>. <article-title>Polynomial-time statistical estimation of species trees under gene duplication and loss</article-title>. <source>J Comput Biol</source><volume>28</volume>: <fpage>452</fpage>–<lpage>468</lpage>. <pub-id pub-id-type="doi">10.1089/cmb.2020.0424</pub-id><pub-id pub-id-type="pmid">33325781</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC14">
      <mixed-citation publication-type="journal"><string-name><surname>Maddison</surname><given-names>W</given-names></string-name>. <year>1997</year>. <article-title>Gene trees in species trees</article-title>. <source>Syst Biol</source><volume>46</volume>: <fpage>523</fpage>–<lpage>536</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/46.3.523</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC15">
      <mixed-citation publication-type="journal"><string-name><surname>Mahbub</surname><given-names>M</given-names></string-name>, <string-name><surname>Wahab</surname><given-names>Z</given-names></string-name>, <string-name><surname>Reaz</surname><given-names>R</given-names></string-name>, <string-name><surname>Rahman</surname><given-names>MS</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>. <year>2021</year>. <article-title>wQFM: highly accurate genome-scale species tree estimation from weighted quartets</article-title>. <source>Bioinformatics</source><volume>37</volume>: <fpage>3734</fpage>–<lpage>3743</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btab428</pub-id><pub-id pub-id-type="pmid">34086858</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC16">
      <mixed-citation publication-type="journal"><string-name><surname>McCormack</surname><given-names>JE</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Crawford</surname><given-names>NG</given-names></string-name>, <string-name><surname>Gowaty</surname><given-names>PA</given-names></string-name>, <string-name><surname>Brumfield</surname><given-names>RT</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>TC</given-names></string-name>. <year>2012</year>. <article-title>Ultraconserved elements are novel phylogenomic markers that resolve placental mammal phylogeny when combined with species-tree analysis</article-title>. <source>Genome Res</source><volume>22</volume>: <fpage>746</fpage>–<lpage>754</lpage>. <pub-id pub-id-type="doi">10.1101/gr.125864.111</pub-id><pub-id pub-id-type="pmid">22207614</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC17">
      <mixed-citation publication-type="journal"><string-name><surname>Meiklejohn</surname><given-names>KA</given-names></string-name>, <string-name><surname>Faircloth</surname><given-names>BC</given-names></string-name>, <string-name><surname>Glenn</surname><given-names>TC</given-names></string-name>, <string-name><surname>Kimball</surname><given-names>RT</given-names></string-name>, <string-name><surname>Braun</surname><given-names>EL</given-names></string-name>. <year>2016</year>. <article-title>Analysis of a rapid evolutionary radiation using ultraconserved elements: evidence for a bias in some multispecies coalescent methods</article-title>. <source>Syst Biol</source><volume>65</volume>: <fpage>612</fpage>–<lpage>627</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syw014</pub-id><pub-id pub-id-type="pmid">26865273</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC18">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2015</year>. <article-title>ASTRAL-II: coalescent-based species tree estimation with many hundreds of taxa and thousands of genes</article-title>. <source>Bioinformatics</source><volume>31</volume>: <fpage>i44</fpage>–<lpage>i52</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btv234</pub-id><pub-id pub-id-type="pmid">26072508</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC19">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>, <string-name><surname>Boussau</surname><given-names>B</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2014a</year>. <article-title>Statistical binning enables an accurate coalescent-based estimation of the avian tree</article-title>. <source>Science</source><volume>346</volume>: <fpage>1250463</fpage>. <pub-id pub-id-type="doi">10.1126/science.1250463</pub-id><pub-id pub-id-type="pmid">25504728</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC20">
      <mixed-citation publication-type="journal"><string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Reaz</surname><given-names>R</given-names></string-name>, <string-name><surname>Bayzid</surname><given-names>MS</given-names></string-name>, <string-name><surname>Zimmermann</surname><given-names>T</given-names></string-name>, <string-name><surname>Swenson</surname><given-names>MS</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2014b</year>. <article-title>ASTRAL: genome-scale coalescent-based species tree estimation</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>i541</fpage>–<lpage>i548</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu462</pub-id><pub-id pub-id-type="pmid">25161245</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC21">
      <mixed-citation publication-type="journal"><string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>To include or not to include: the impact of gene filtering on species tree estimation methods</article-title>. <source>Syst Biol</source><volume>67</volume>: <fpage>285</fpage>–<lpage>303</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syx077</pub-id><pub-id pub-id-type="pmid">29029338</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC22">
      <mixed-citation publication-type="journal"><string-name><surname>Nute</surname><given-names>M</given-names></string-name>, <string-name><surname>Chou</surname><given-names>J</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>The performance of coalescent-based species tree estimation methods under models of missing data</article-title>. <source>BMC Genom</source><volume>19</volume>(<issue>Suppl 5</issue>): <fpage>286</fpage>. <pub-id pub-id-type="doi">10.1186/s12864-018-4619-8</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC23">
      <mixed-citation publication-type="journal"><string-name><surname>Pamilo</surname><given-names>P</given-names></string-name>, <string-name><surname>Nei</surname><given-names>M</given-names></string-name>. <year>1988</year>. <article-title>Relationships between gene trees and species trees</article-title>. <source>Mol Biol Evol</source><volume>5</volume>: <fpage>568</fpage>–<lpage>583</lpage>. <pub-id pub-id-type="doi">10.1093/oxfordjournals.molbev.a040517</pub-id><pub-id pub-id-type="pmid">3193878</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC24">
      <mixed-citation publication-type="journal"><string-name><surname>Rabiee</surname><given-names>M</given-names></string-name>, <string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2019</year>. <article-title>Multi-allele species reconstruction using ASTRAL</article-title>. <source>Mol Phylogenet Evol</source><volume>130</volume>: <fpage>286</fpage>–<lpage>296</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2018.10.033</pub-id><pub-id pub-id-type="pmid">30393186</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC25">
      <mixed-citation publication-type="journal"><string-name><surname>Roch</surname><given-names>S</given-names></string-name>, <string-name><surname>Steel</surname><given-names>M</given-names></string-name>. <year>2015</year>. <article-title>Likelihood-based tree reconstruction on a concatenation of aligned sequence data sets can be statistically inconsistent</article-title>. <source>Theor Popul Biol</source><volume>100</volume>: <fpage>56</fpage>–<lpage>62</lpage>. <pub-id pub-id-type="doi">10.1016/j.tpb.2014.12.005</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC26">
      <mixed-citation publication-type="journal"><string-name><surname>Roch</surname><given-names>S</given-names></string-name>, <string-name><surname>Nute</surname><given-names>M</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>. <year>2018</year>. <article-title>Long-branch attraction in species tree estimation: inconsistency of partitioned likelihood and topology-based summary methods</article-title>. <source>Syst Biol</source><volume>68</volume>: <fpage>281</fpage>–<lpage>297</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syy061</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC27">
      <mixed-citation publication-type="journal"><string-name><surname>Rosenberg</surname><given-names>NA</given-names></string-name>. <year>2002</year>. <article-title>The probability of topological concordance of gene trees and species trees</article-title>. <source>Theor Popul Biol</source><volume>61</volume>: <fpage>225</fpage>–<lpage>247</lpage>. <pub-id pub-id-type="doi">10.1006/tpbi.2001.1568</pub-id><pub-id pub-id-type="pmid">11969392</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC28">
      <mixed-citation publication-type="journal"><string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2016</year>. <article-title>Fast coalescent-based computation of local branch support from quartet frequencies</article-title>. <source>Mol Biol Evol</source><volume>33</volume>: <fpage>1654</fpage>–<lpage>1668</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msw079</pub-id><pub-id pub-id-type="pmid">27189547</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC29">
      <mixed-citation publication-type="journal"><string-name><surname>Seo</surname><given-names>TK</given-names></string-name>. <year>2008</year>. <article-title>Calculating bootstrap probabilities of phylogeny using multilocus sequence data</article-title>. <source>Mol Biol Evol</source><volume>25</volume>: <fpage>960</fpage>–<lpage>971</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msn043</pub-id><pub-id pub-id-type="pmid">18281270</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC30">
      <mixed-citation publication-type="journal"><string-name><surname>Smith</surname><given-names>ML</given-names></string-name>, <string-name><surname>Vanderpool</surname><given-names>D</given-names></string-name>, <string-name><surname>Hahn</surname><given-names>MW</given-names></string-name>. <year>2022</year>. <article-title>Using all gene families vastly expands data available for phylogenomic inference</article-title>. <source>Mol Biol Evol</source><volume>39</volume>: <fpage>msac112</fpage>. <pub-id pub-id-type="doi">10.1093/molbev/msac112</pub-id><pub-id pub-id-type="pmid">35642314</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC31">
      <mixed-citation publication-type="journal"><string-name><surname>Snir</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>S</given-names></string-name>. <year>2010</year>. <article-title>Quartets MaxCut: a divide and conquer quartets algorithm</article-title>. <source>IEEE/ACM Trans Comput Biol Bioinform</source><volume>7</volume>: <fpage>704</fpage>–<lpage>718</lpage>. <pub-id pub-id-type="doi">10.1109/TCBB.2008.133</pub-id><pub-id pub-id-type="pmid">21030737</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC32">
      <mixed-citation publication-type="journal"><string-name><surname>Snir</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>S</given-names></string-name>. <year>2012</year>. <article-title>Quartet MaxCut: a fast algorithm for amalgamating quartet trees</article-title>. <source>Mol Phylogenet Evol</source><volume>62</volume>: <fpage>1</fpage>–<lpage>8</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2011.06.021</pub-id><pub-id pub-id-type="pmid">21762785</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC33">
      <mixed-citation publication-type="journal"><string-name><surname>Song</surname><given-names>S</given-names></string-name>, <string-name><surname>Liu</surname><given-names>L</given-names></string-name>, <string-name><surname>Edwards</surname><given-names>SV</given-names></string-name>, <string-name><surname>Wu</surname><given-names>S</given-names></string-name>. <year>2012</year>. <article-title>Resolving conflict in eutherian mammal phylogeny using phylogenomics and the multispecies coalescent model</article-title>. <source>Proc Natl Acad Sci</source><volume>109</volume>: <fpage>14942</fpage>–<lpage>14947</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1211733109</pub-id><pub-id pub-id-type="pmid">22930817</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC34">
      <mixed-citation publication-type="journal"><string-name><surname>Stamatakis</surname><given-names>A</given-names></string-name>. <year>2014</year>. <article-title>RAxML version 8: a tool for phylogenetic analysis and post-analysis of large phylogenies</article-title>. <source>Bioinformatics</source><volume>30</volume>: <fpage>1312</fpage>–<lpage>1313</lpage>. <pub-id pub-id-type="doi">10.1093/bioinformatics/btu033</pub-id><pub-id pub-id-type="pmid">24451623</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC35">
      <mixed-citation publication-type="journal"><string-name><surname>Tavaré</surname><given-names>S</given-names></string-name>. <year>1986</year>. <article-title>Some probabilistic and statistical problems in the analysis of DNA sequences</article-title>. <source>Lect Math Life Sci</source><volume>17</volume>: <fpage>57</fpage>–<lpage>86</lpage>.</mixed-citation>
    </ref>
    <ref id="GR277629HANC36">
      <mixed-citation publication-type="journal"><string-name><surname>Wickett</surname><given-names>NJ</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>, <string-name><surname>Nguyen</surname><given-names>N</given-names></string-name>, <string-name><surname>Warnow</surname><given-names>T</given-names></string-name>, <string-name><surname>Carpenter</surname><given-names>E</given-names></string-name>, <string-name><surname>Matasci</surname><given-names>N</given-names></string-name>, <string-name><surname>Ayyampalayam</surname><given-names>S</given-names></string-name>, <string-name><surname>Barker</surname><given-names>MS</given-names></string-name>, <string-name><surname>Burleigh</surname><given-names>JG</given-names></string-name>, <string-name><surname>Gitzendanner</surname><given-names>MA</given-names></string-name>, <etal/><year>2014</year>. <article-title>Phylotranscriptomic analysis of the origin and early diversification of land plants</article-title>. <source>Proc Natl Acad Sci</source><volume>111</volume>: <fpage>E4859</fpage>–<lpage>E4868</lpage>. <pub-id pub-id-type="doi">10.1073/pnas.1323926111</pub-id><pub-id pub-id-type="pmid">25355905</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC37">
      <mixed-citation publication-type="journal"><string-name><surname>Xi</surname><given-names>Z</given-names></string-name>, <string-name><surname>Liu</surname><given-names>L</given-names></string-name>, <string-name><surname>Davis</surname><given-names>CC</given-names></string-name>. <year>2015</year>. <article-title>Genes with minimal phylogenetic information are problematic for coalescent analyses when gene tree estimation is biased</article-title>. <source>Mol Phylogenet Evol</source><volume>92</volume>: <fpage>63</fpage>–<lpage>71</lpage>. <pub-id pub-id-type="doi">10.1016/j.ympev.2015.06.009</pub-id><pub-id pub-id-type="pmid">26115844</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC38">
      <mixed-citation publication-type="journal"><string-name><surname>Yan</surname><given-names>Z</given-names></string-name>, <string-name><surname>Smith</surname><given-names>ML</given-names></string-name>, <string-name><surname>Du</surname><given-names>P</given-names></string-name>, <string-name><surname>Hahn</surname><given-names>MW</given-names></string-name>, <string-name><surname>Nakhleh</surname><given-names>L</given-names></string-name>. <year>2021</year>. <article-title>Species tree inference methods intended to deal with incomplete lineage sorting are robust to the presence of paralogs</article-title>. <source>Syst Biol</source><volume>71</volume>: <fpage>367</fpage>–<lpage>381</lpage>. <pub-id pub-id-type="doi">10.1093/sysbio/syab056</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC39">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2022</year>. <article-title>Weighting by gene tree uncertainty improves accuracy of quartet-based species trees</article-title>. <source>Mol Biol Evol</source><volume>39</volume>: <fpage>msac215</fpage>. <pub-id pub-id-type="doi">10.1093/molbev/msac215</pub-id><pub-id pub-id-type="pmid">36201617</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC40">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Rabiee</surname><given-names>M</given-names></string-name>, <string-name><surname>Sayyari</surname><given-names>E</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2018</year>. <article-title>ASTRAL-III: polynomial time species tree reconstruction from partially resolved gene trees</article-title>. <source>BMC Bioinform</source><volume>19</volume>: <fpage>153</fpage>. <pub-id pub-id-type="doi">10.1186/s12859-018-2129-y</pub-id></mixed-citation>
    </ref>
    <ref id="GR277629HANC41">
      <mixed-citation publication-type="journal"><string-name><surname>Zhang</surname><given-names>C</given-names></string-name>, <string-name><surname>Scornavacca</surname><given-names>C</given-names></string-name>, <string-name><surname>Molloy</surname><given-names>EK</given-names></string-name>, <string-name><surname>Mirarab</surname><given-names>S</given-names></string-name>. <year>2020</year>. <article-title>ASTRAL-Pro: quartet-based species-tree inference despite paralogy</article-title>. <source>Mol Biol Evol</source><volume>37</volume>: <fpage>3292</fpage>–<lpage>3307</lpage>. <pub-id pub-id-type="doi">10.1093/molbev/msaa139</pub-id><pub-id pub-id-type="pmid">32886770</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD Journal Publishing DTD v2.3 20070202//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName journalpublishing.dtd?>
<?SourceDTD.Version 2.3?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <?epub May-12-2010?>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="iso-abbrev">Nucleic Acids Res</journal-id>
    <journal-id journal-id-type="publisher-id">nar</journal-id>
    <journal-id journal-id-type="hwp">nar</journal-id>
    <journal-title-group>
      <journal-title>Nucleic Acids Research</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">0305-1048</issn>
    <issn pub-type="epub">1362-4962</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">2896102</article-id>
    <article-id pub-id-type="pmid">20462864</article-id>
    <article-id pub-id-type="doi">10.1093/nar/gkq398</article-id>
    <article-id pub-id-type="publisher-id">gkq398</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Articles</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>GRAPE: GRaphical Abstracted Protein Explorer</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Cipriano</surname>
          <given-names>Gregory</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
        <xref ref-type="corresp" rid="COR1">*</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wesenberg</surname>
          <given-names>Gary</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Grim</surname>
          <given-names>Tom</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Phillips</surname>
          <given-names>George N.</given-names>
          <suffix>Jr.</suffix>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>2</sup>
        </xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Gleicher</surname>
          <given-names>Michael</given-names>
        </name>
        <xref ref-type="aff" rid="AFF1">
          <sup>1</sup>
        </xref>
      </contrib>
    </contrib-group>
    <aff id="AFF1"><sup>1</sup>Department of Computer Sciences, University of Wisconsin-Madison Madison, WI 53715 and <sup>2</sup>Department of Biochemistry, University of Wisconsin-Madison, Madison, WI 53706, USA</aff>
    <author-notes>
      <corresp id="COR1">*To whom correspondence should be addressed. Tel: <phone>608 265 2711</phone>; Email: <email>gregc@cs.wisc.edu</email></corresp>
    </author-notes>
    <pub-date pub-type="ppub">
      <day>1</day>
      <month>7</month>
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>5</month>
      <year>2010</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>5</month>
      <year>2010</year>
    </pub-date>
    <!-- PMC Release delay is 0 months and 0 days and was based on the
							<pub-date pub-type="epub"/>. -->
    <volume>38</volume>
    <issue>Web Server issue</issue>
    <fpage>W595</fpage>
    <lpage>W601</lpage>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>2</month>
        <year>2010</year>
      </date>
      <date date-type="rev-recd">
        <day>27</day>
        <month>4</month>
        <year>2010</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>4</month>
        <year>2010</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2010. Published by Oxford University Press.</copyright-statement>
      <copyright-year>2010</copyright-year>
      <license license-type="creative-commons" xlink:href="http://creativecommons.org/licenses/by-nc/2.5">
        <license-p><!--CREATIVE COMMONS-->This is an Open Access article distributed under the terms of the Creative Commons Attribution Non-Commercial License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by-nc/2.5">http://creativecommons.org/licenses/by-nc/2.5</ext-link>), which permits unrestricted non-commercial use, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <abstract>
      <p>The region surrounding a protein, known as the surface of interaction or molecular surface, can provide valuable insight into its function. Unfortunately, due to the complexity of both their geometry and their surface fields, study of these surfaces can be slow and difficult and important features may be hard to identify. Here, we describe our GRaphical Abstracted Protein Explorer, or GRAPE, a web server that allows users to explore abstracted representations of proteins. These abstracted surfaces effectively reduce the level of detail of the surface of a macromolecule, using a specialized algorithm that removes small bumps and pockets, while preserving large-scale structural features. Scalar fields, such as electrostatic potential and hydropathy, are smoothed to further reduce visual complexity. This entirely new way of looking at proteins complements more traditional views of the molecular surface. GRAPE includes a thin 3D viewer that allows users to quickly flip back and forth between both views. Abstracted views provide a fast way to assess both a molecule's shape and its different surface field distributions. GRAPE is freely available at <ext-link ext-link-type="uri" xlink:href="http://grape.uwbacter.org">http://grape.uwbacter.org</ext-link>.</p>
    </abstract>
  </article-meta>
</front>
<body>
  <sec>
    <title>INTRODUCTION</title>
    <p>One goal of structural biology is to understand the chemical and physical properties of macromolecules (especially proteins) and how this enables the chemical reactions behind life's processes. In order to study these large and complex molecules, researchers rely on visualizations that provide various levels of abstraction. The more abstract visualizations, such as ribbon diagrams, are limited to the portrayal of a molecule's internal structure. However, protein interactions involve the ‘functional surface’ presented: to a large degree, the internal structure simply exists as scaffolding to place various forces and chemical properties in proper spatial relationships with one another. This articles describes a web server that can generate and display abstract visualizations of this surface.</p>
    <p>Popular molecular rendering programs, such as P<sub>y</sub>MOL (<xref ref-type="bibr" rid="B1">1</xref>) and Chimera (<xref ref-type="bibr" rid="B2">2</xref>), build a visual representation of the functional surface of a protein by sampling fields, such as charge, onto a triangle mesh, resulting in an image such as in <xref ref-type="fig" rid="F1">Figure 1</xref>a.
<fig id="F1" position="float"><label>Figure 1.</label><caption><p>An example of a porine protein (PDB ID: 2POR), rendered (<bold>a</bold>) with PyMOL (<xref ref-type="bibr" rid="B1">1</xref>) and (<bold>b</bold>) after abstraction and stylization in GRAPE. Note how its large-scale shape and electrostatic potential distribution can be more readily seen after abstraction. High-quality lighting helps to further emphasize the ion channel, by providing important depth cues that are missing in the PyMOL rendering.</p></caption><graphic xlink:href="gkq398f1"/></fig></p>
    <p>This triangle mesh can be thought of as the result of rolling a probe sphere over all the atoms in the protein. Connolly (<xref ref-type="bibr" rid="B3">3</xref>,<xref ref-type="bibr" rid="B4">4</xref>) provided practical methods for sampling these surfaces, which have subsequently been refined in both efficiency and quality (<xref ref-type="bibr" rid="B5 B6 B7 B8">5–8</xref>). The resulting surface, called a ‘solvent-excluded surface’ is locally smooth, but at scales larger than an atom, it exhibits high-frequency detail. For even the smallest proteins, this detail can obscure significant surface features, such as pockets and clefts. Charge sampled on the surface often exhibits similar high-frequency detail, which can obscure significant patches of uniform charge, in addition to making the shape of the surface even harder to discern.</p>
    <p>In Cipriano and Gleicher (<xref ref-type="bibr" rid="B9">9</xref>), we describe a method to overcome these limitations. Termed ‘Molecular Surface Abstraction’, the technique produces a simplified representation of both the geometry of, and of the surface fields surrounding, the molecular surface. Inspired, in part, by the works of David Goodsell and Olsen (<xref ref-type="bibr" rid="B10">10</xref>), this combination not only allows users to quickly see a gestalt of the surface, but also serves as a convenient canvas to place surface labels (or ‘stickers’) representing additional information, such as the location of external hydrogen bond donors and acceptors, or regions of known molecular interaction.</p>
    <p>To date, however, software implementing surface abstractions has not been made widely available. While we have written a stand-alone application to test our ideas, the requirement that users download, install and then learn a completely new application before exploring abstractions, has inhibited their wider adoption.</p>
    <p>GRAPE represents the first completely web-based system for constructing and displaying abstracted molecular surfaces, using Protein Data Bank (PDB) data as input. Its functionality can be broken into two categories:
<list list-type="bullet"><list-item><p>A back-end system that takes PDB files as input, coordinates the job of abstraction among a server pool and produces an output file encapsulating the abstracted surface and its varied fields.</p></list-item><list-item><p>A front-end viewer that uses a combination of Java and OpenGL to embed a live, explorable representation of the abstracted surface.</p></list-item></list>
</p>
    <sec>
      <title>Project goals</title>
      <p>GRAPE is motivated by the dual goals of making surface abstractions easy to generate and to give as many users as possible the ability to use them on their own molecules. We have organized GRAPE so that all computations, including those for high-quality lighting and mesh generation, are performed on the server; the viewer is a thin client that merely reads in the results of those computations and renders them. This reduces the computational burden on the user's computer and ensures that our system is available to users with low-end hardware.</p>
      <p>In recent years, many online protein viewers have come to be widely used, such as Jmol (<xref ref-type="bibr" rid="B11">11</xref>). These viewers are ideal for presenting a low barrier to entry for exploration: no software needs to be installed and results are available from any computer regardless of platform. GRAPE is designed to be similarly accessible: the client software itself is quite small and requires only modest graphics hardware for texture rendering. For this version, because we do require graphics hardware, layering our functionality on top of existing molecular viewers was not feasible.</p>
    </sec>
  </sec>
  <sec>
    <title>SERVER-SIDE PROCESSING</title>
    <p>The process of creating and using an abstraction in GRAPE has three steps: first, obtain the data about a molecule; then, abstract it into a useful form; finally, load this data into a viewer. The first two steps are performed on the server and result in a compressed data file.</p>
    <sec>
      <title>Input data</title>
      <p>GRAPE takes as input a PDB file that may be either uploaded from a local copy or fetched directly from the PDB (<xref ref-type="bibr" rid="B12">12</xref>). Optionally, users may also upload a PQR file to supply a custom protonation state, overriding the automatic protonation computations done within GRAPE.</p>
      <p>Abstracting a protein can take a long time, depending on its size and complexity, so the GRAPE server creates a separate job for each submitted protein. Jobs run asynchronously on the server; after a submission, users are redirected to a job queue to monitor the status of their job.</p>
    </sec>
    <sec>
      <title>The job queue</title>
      <p>Along with the PDB file itself, each job has the following metadata associated with it:
<list list-type="bullet"><list-item><p>JobID: the unique identifier for this job</p></list-item><list-item><p>Tool: GRAPE</p></list-item><list-item><p>Job Name: the name a user assigns to this job (not the name of the protein)</p></list-item><list-item><p>Status: Active refers to a job that is currently running. LaunchView appears when a job has successfully finished. Clicking this will take you to the viewer. pqr/dx map failure indicates that either pdb2pqr or APBS failed to produce charge and SurfAbstract failure indicates that abstraction failed, for an unknown reason. For either of these failure modes, clicking the Job ID, and then clicking on the ‘log’ link on the following page, may indicate the source of the failure.</p></list-item></list>
</p>
      <p>This data can be seen by browsing to the ‘job queue’ page, as shown in <xref ref-type="fig" rid="F2">Figure 2</xref>.
<fig id="F2" position="float"><label>Figure 2.</label><caption><p>The GRAPE job queue. The job queue is a list of pending and completed jobs, along with information on what user submitted for each job and the time of submission.</p></caption><graphic xlink:href="gkq398f2"/></fig></p>
    </sec>
    <sec>
      <title>Authentication</title>
      <p>To allow users to better manage their queue, GRAPE provides an optional authentication mechanism. Users who wish to authenticate may create an account by first providing a username and password. They then gain the ability to filter the job queue to show only their jobs, to receive an email when their jobs finish and to mark specific jobs as ‘private’.</p>
      <p>By default, all jobs in GRAPE are marked as public, which means that all GRAPE users will be able to view the results of a job. For users with sensitive data, such as prepublication proteins, the optional ability to mark a job as ‘private’ ensures that only that user will see the results.</p>
      <p>The authentication and queue management infrastructure used in GRAPE is derived from work done for the KFC server (<xref ref-type="bibr" rid="B13">13</xref>).</p>
    </sec>
    <sec>
      <title>Processing a job</title>
      <p>All major processing takes place on the server back end, where jobs are farmed out to a cluster of computers, in first-come first-served order. Each computer takes on the task of abstracting a single protein. This can be divided into two phases: the ‘data collection phase’, in which the shape and electrochemical properties of the original ‘solvent-excluded’ surface is computed, and the ‘abstraction phase’.</p>
      <p>All of the server-side code described below is based on the algorithms found in Cipriano, and Gleicher (<xref ref-type="bibr" rid="B9">9</xref>).</p>
      <sec>
        <title>Data collection</title>
        <p>The data collection phase breaks down as follows:
<list list-type="order"><list-item><p>Compute the solvent excluded surface using MSMS (<xref ref-type="bibr" rid="B6">6</xref>).</p></list-item><list-item><p>Compute electrostatic potential using PDB2PQR (<xref ref-type="bibr" rid="B14">14</xref>) (or a user-supplied PQR file) and APBS (<xref ref-type="bibr" rid="B15">15</xref>).</p></list-item><list-item><p>Compute hydrophobicity by finding, for each point, the hydropathic index of the closest amino acid in the protein.</p></list-item><list-item><p>Predict potential hydrogen bond donor/receptor locations by locating atoms in the side chains of each amino acid that are both potential donors/receivers and also near the solvent-excluded surface.</p></list-item><list-item><p>Find ‘interface regions’, areas of the surface which are within a radius (1.6 Å) of the van der Waals surface of another part of the molecular assembly (i.e. a different chain in the PDB file).</p></list-item><list-item><p>Compute ambient occlusion lighting (<xref ref-type="bibr" rid="B16">16</xref>) that darkens interior regions of the molecule (<xref ref-type="fig" rid="F2">Figure 2</xref>). High-quality global lighting has been shown to be useful as a shape cue, as recently demonstrated in QuteMol (<xref ref-type="bibr" rid="B17">17</xref>), but cannot be done in real time without high-end hardware. The GRAPE server precomputes lighting, reducing hardware requirements for our users.</p></list-item></list>
</p>
      </sec>
      <sec>
        <title>Abstraction</title>
        <p>After collecting surface data, the second phase of a server job is to abstract this data, transforming the detailed results of the first phase into a (visually) simpler form. This again can be broken down into a series of steps:
<list list-type="order"><list-item><p>Smooth fields, such as electrostatic potential, along the surface. This removes small features, while preserving larger regions of consistent value.</p></list-item><list-item><p>Perform a series of mesh restructuring operations on the mesh geometry to first smooth and then ‘sand off’ small bumps and pockets. The resulting mesh is a smooth approximation of the original solvent-accessible surface, which we call an ‘abstracted’ surface.</p></list-item><list-item><p>Apply stickers directly to the surface, as seen in <xref ref-type="fig" rid="F4">Figure 4</xref>. Due to its smoothness, it is much easier to apply stickers to (i.e. to parameterize) the abstracted surface than the original solvent-excluded surface. We take advantage of this fact to overlay existing surface coloring with several types of stickers. In this way, multiple surface properties can be shown simultaneously.</p></list-item></list>
<fig id="F3" position="float"><label>Figure 3.</label><caption><p>The GRAPE output window. Shown is the abstracted surface of a protein, each chain of which can be independently customized in the following ways: (<xref ref-type="bibr" rid="B1">1</xref>) Coloring: chains may be white, uniquely colored, colored by electrostatic potential or colored by hydropathic index; (<xref ref-type="bibr" rid="B2">2</xref>) the different sticker types may be hidden (<xref ref-type="fig" rid="F4">Figure 4</xref>); (<xref ref-type="bibr" rid="B3">3</xref>) display: chains may be hidden, displayed as the solvent-excluded surface or displayed in abstracted form. Also on this page are: (<xref ref-type="bibr" rid="B4">4</xref>) the discussion gadget, where users may leave comments; and (<xref ref-type="bibr" rid="B5">5</xref>) the recommendation gadget, where users may recommend their favorite proteins to one another.</p></caption><graphic xlink:href="gkq398f3"/></fig>
<fig id="F4" position="float"><label>Figure 4.</label><caption><p>Stickers: four types of stickers are applied to abstracted surfaces, each of which may be independently turned on or off. ‘Hydrogen bond stickers’ are placed on the surface in areas that are close to one or more atoms that could form an external hydrogen bond. ‘Detected Pocket stickers’ indicate regions of the surface that resemble binding pockets, according to a variant of the LIGSITE pocket detector. ‘Interface stickers’ indicate regions of the surface in close proximity to another chain. And ‘peak/bowl stickers’ display as an ‘X’ or ‘O’, respectively, points where significant peaks or bumps in the original solvent excluded surface were removed.</p></caption><graphic xlink:href="gkq398f4"/></fig></p>
      </sec>
    </sec>
    <sec>
      <title>Surface data format</title>
      <p>The final results of the abstraction process are compressed into a single ZIP file that stores the information required for the client to draw both traditional and abstracted views of the protein. This ZIP container contains a number of smaller files, in three major categories:
<list list-type="bullet"><list-item><p>Surface geometry: each chain in the PDB file is given its own set of surface geometry, one for the solvent-excluded surface and (for chains that are not hetero-compounds) one for the abstracted surface. Every surface is contained in a binary .PLY file.</p></list-item><list-item><p>Stickers: the picture for each sticker on the surface is stored in a compressed .png file. Note that some stickers, such as those for hydrogen bonds, are only stored once and then reused over the surface.</p></list-item><list-item><p>Surface Fields: one XML file connects surface geometry with field data, identifies the location of each sticker on the surface and matches chains in the PDB with each set of .PLY files.</p></list-item></list>
</p>
      <p>The ZIP file, which ranges in size from 200 KB to 12 MB, depending on the size of the protein, is stored on the server in a job-specific location.</p>
    </sec>
  </sec>
  <sec>
    <title>CLIENT-SIDE VIEWER</title>
    <p>After the GRAPE server has completely finished a job, its status changes to a link titled ‘LaunchView’. Clicking this link brings up the results of all abstraction computations. We have built a GRAPE viewer, shown in <xref ref-type="fig" rid="F3">Figure 3</xref>, which can be run directly within the output web page. Standard viewing controls are provided to let users navigate the molecular surface.</p>
    <p>The viewer itself is written in Java, and uses the Java OpenGL (<ext-link ext-link-type="uri" xlink:href="http://opengl.j3d.org/">http://opengl.j3d.org/</ext-link>), or JOGL, binding library to render the surface. On page load, a small JAR file is downloaded for the GRAPE applet, followed by native JOGL libraries, if necessary. Finally, the ZIP file described in the ‘Surface data format’, section above is downloaded from the server and loaded into memory.</p>
    <p>A link is also provided on this page to download abstraction data as a raw ZIP file. Currently, the GRAPE viewer is the only tool that can completely use this data, though we envision plugins for existing protein viewers that would allow us to merge abstract surfaces into existing methods of display.</p>
  </sec>
  <sec>
    <title>SOCIAL NETWORKING</title>
    <p>GRAPE uses Google Friend Connect throughout to foster discussion about protein surfaces, to link researchers together, to allow new users to quickly discover the surfaces that others have found interesting and to provide a mechanism for others to give us feedback about our tool.</p>
    <p>Friend Connect gadgets expand the usefulness of the site in two ways: first, GRAPE uses the ‘recommendation’ gadget to give users the ability to recommend proteins to one another, as in <xref ref-type="fig" rid="F6">Figure 6</xref>. So experienced users can discover interesting new models and new users can quickly see the benefits of abstraction on existing proteins, before they try their own. In addition to the these recommended proteins, we have added several of our own curated examples in a separate gadget, to ensure that new users always have a set of high-quality examples to begin their exploration of GRAPE.
<fig id="F5" position="float"><label>Figure 5.</label><caption><p>The same surface rendered (<bold>a</bold>) with and (<bold>b</bold>) without high-quality ambient occlusion lighting. Ambient occlusion lighting has been shown to be useful as a shape cue, as recently demonstrated in QuteMol (<xref ref-type="bibr" rid="B17">17</xref>), but can require high-end graphics hardware to compute. In GRAPE, this information is computed on the server and downloaded to the client for display.</p></caption><graphic xlink:href="gkq398f5"/></fig>
<fig id="F6" position="float"><label>Figure 6.</label><caption><p>A GRAPE recommendation gadget. The proteins most recommended by GRAPE users are shown at the top of this gadget, which appears in several places on the site. Each link immediately directs a user to the viewing page for that protein.</p></caption><graphic xlink:href="gkq398f6"/></fig></p>
    <p>Second, the viewer page for each job has an additional ‘ratings and reviews’ gadget, where users can discuss aspects of a single protein. An example can be seen in <xref ref-type="fig" rid="F3">Figure 3</xref>.</p>
  </sec>
  <sec sec-type="discussion">
    <title>DISCUSSION</title>
    <p>In making abstractions more accessible for researchers to use, we made several trade-offs. As described in this ‘Project goals’ section above, our primary goal was to give researchers the ability to quickly use abstractions, to judge their utility for themselves. So rather than attempting to fit into the many different workflows used by researchers, we chose instead to build a simple, easy-to-use server that provides quick results. This decision does ultimately limit how useful our software can be: as it does not integrate into researchers' workflows, they cannot use the tools to which they have grown accustomed. In the future, we would like to fix this limitation by providing a PyMOL plug-in that can understand and display our output data format.</p>
    <p>We also chose to make the client hardware requirements as low as possible: the GRAPE viewer itself is very thin and all abstraction is done on the server. While a heavyweight client application could have provided more functionality, and potentially lowered the time between submitting a protein and viewing its abstraction, this would shift the burden to the client's computer, which would in turn limit the number of users who could use our software.</p>
    <p>Nevertheless, the GRAPE viewer is currently missing several important features: there is no way to identify which regions of the surface are proximal to specific amino acids in the sequence, ribbon and stick-and-ball visualizations are not available, and certain parameters (such as the color maps for electrostatic potential and the degree of abstraction) are fixed. These features will be added in future revisions.</p>
  </sec>
  <sec sec-type="conclusions">
    <title>CONCLUSION</title>
    <p>We have presented GRAPE, a web server that computes and displays abstracted views of the solvent-excluded surface of proteins. The server gives researchers a quick means to explore the surface of a protein of interest, in both abstracted and solvent-excluded views. In addition, GRAPE leverages social networking, in the form of Google Friend Connect, to foster discussion about any aspect of a protein, and to allow the community to share their most compelling, interesting and surprising proteins with one another.</p>
  </sec>
  <sec>
    <title>FUNDING</title>
    <p><funding-source>National Institutes of Health</funding-source> (NIH) training grant (<award-id>NLM-5T15LM007359</award-id>, in part); US Department of Energy Genomics:GTL and SciDAC Programs (DE-FG02-04ER25627, in part); National Science Foundation (NSF) awards (CMMI-0941013 and IIS-0946598, in part). Funding for open access charge: US Department of Energy (DE-FG02-04ER25627) funds.</p>
    <p><italic>Conflict of interest statement</italic>. None declared.</p>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGEMENTS</title>
    <p>We thank Julie Mitchell for providing much of the authentication and job management infrastructure and for encouraging our efforts to deliver abstractions as a web server. We also thank Joshua Oakgrove for designing and implementing an early version of the Java viewer and Aaron Bryden for helping us port server code to the Macintosh.</p>
  </ack>
  <ref-list>
    <title>REFERENCES</title>
    <ref id="B1">
      <label>1</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DeLano</surname>
            <given-names>W</given-names>
          </name>
        </person-group>
        <article-title>The PyMOL molecular graphics system</article-title>
        <year>2002</year>
        <comment>Schrödinger, LLC. <ext-link ext-link-type="uri" xlink:href="http://www.pymol.org">http://www.pymol.org</ext-link>. (7 May 2010, date last accessed)</comment>
      </element-citation>
    </ref>
    <ref id="B2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pettersen</surname>
            <given-names>EF</given-names>
          </name>
          <name>
            <surname>Goddard</surname>
            <given-names>TD</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Couch</surname>
            <given-names>GS</given-names>
          </name>
          <name>
            <surname>Greenblatt</surname>
            <given-names>DM</given-names>
          </name>
          <name>
            <surname>Meng</surname>
            <given-names>EC</given-names>
          </name>
          <name>
            <surname>Ferrin</surname>
            <given-names>TE</given-names>
          </name>
        </person-group>
        <article-title>UCSF Chimera - a visualization system for exploratory research and analysis</article-title>
        <source>J. Comput. Chem.</source>
        <year>2004</year>
        <volume>25</volume>
        <fpage>1605</fpage>
        <lpage>1612</lpage>
        <pub-id pub-id-type="pmid">15264254</pub-id>
      </element-citation>
    </ref>
    <ref id="B3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Connolly</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Solvent-accessible surfaces of proteins and nucleic acids</article-title>
        <source>Science</source>
        <year>1983</year>
        <volume>221</volume>
        <fpage>709</fpage>
        <lpage>713</lpage>
        <pub-id pub-id-type="pmid">6879170</pub-id>
      </element-citation>
    </ref>
    <ref id="B4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Connolly</surname>
            <given-names>ML</given-names>
          </name>
        </person-group>
        <article-title>The molecular surface package</article-title>
        <source>J. Mol. Graph.</source>
        <year>1993</year>
        <volume>11</volume>
        <fpage>139</fpage>
        <lpage>141</lpage>
        <pub-id pub-id-type="pmid">8347567</pub-id>
      </element-citation>
    </ref>
    <ref id="B5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boissonnat</surname>
            <given-names>J-D</given-names>
          </name>
          <name>
            <surname>Devillers</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Duquesne</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yvinec</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Computing connolly surfaces</article-title>
        <source>J. Mol. Graph.</source>
        <year>1994</year>
        <volume>12</volume>
        <fpage>61</fpage>
        <lpage>62</lpage>
      </element-citation>
    </ref>
    <ref id="B6">
      <label>6</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Sanner</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Olson</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Spehner</surname>
            <given-names>J.-C</given-names>
          </name>
        </person-group>
        <article-title>Fast and robust computation of molecular surfaces</article-title>
        <source>In SCG'95: Proceedings of the eleventh annual symposium on Computational geometry</source>
        <year>1995</year>
        <publisher-loc>New York, NY, USA</publisher-loc>
        <publisher-name>ACM</publisher-name>
        <fpage>406</fpage>
        <lpage>407</lpage>
      </element-citation>
    </ref>
    <ref id="B7">
      <label>7</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Varshney</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Brooks</surname>
            <given-names>F.P.</given-names>
            <suffix>Jr</suffix>
          </name>
        </person-group>
        <article-title>Fast analytical computation of Richard's smooth molecular surface. In</article-title>
        <source>Proceedings of the IEEE Visualization</source>
        <year>1993</year>
        <publisher-loc>Washington, DC, USA</publisher-loc>
        <publisher-name>IEEE Computer Society</publisher-name>
        <fpage>300</fpage>
        <lpage>307</lpage>
      </element-citation>
    </ref>
    <ref id="B8">
      <label>8</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Cheng</surname>
            <given-names>H-L</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>X</given-names>
          </name>
        </person-group>
        <article-title>Quality mesh generation for molecular skin surfaces using restricted union of balls. In</article-title>
        <source>Proceedings of the IEEE Visualization Conference</source>
        <year>2005</year>
        <publisher-loc>Los Alamitos, CA, USA</publisher-loc>
        <publisher-name>IEEE Computer Society</publisher-name>
        <fpage>51</fpage>
      </element-citation>
    </ref>
    <ref id="B9">
      <label>9</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Cipriano</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Gleicher</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Molecular surface abstraction</article-title>
        <source>IEEE Trans. Vis. Comput. Graph.</source>
        <year>2007</year>
        <volume>13</volume>
        <fpage>1608</fpage>
        <lpage>1615</lpage>
        <pub-id pub-id-type="pmid">17968116</pub-id>
      </element-citation>
    </ref>
    <ref id="B10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Goodsell</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Olsen</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Molecular illustration in black and white</article-title>
        <source>J. Mol. Graph.</source>
        <year>1992</year>
        <volume>10</volume>
        <fpage>235</fpage>
        <lpage>240</lpage>
        <pub-id pub-id-type="pmid">1476997</pub-id>
      </element-citation>
    </ref>
    <ref id="B11">
      <label>11</label>
      <element-citation publication-type="journal">
        <collab>Jmol</collab>
        <article-title>an open-source Java viewer for chemical structures in 3D</article-title>
        <comment><ext-link ext-link-type="uri" xlink:href="http://www.jmol.org/">http://www.jmol.org/</ext-link> (7 May 2010, date last accessed)</comment>
      </element-citation>
    </ref>
    <ref id="B12">
      <label>12</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Berman</surname>
            <given-names>HM</given-names>
          </name>
          <name>
            <surname>Westbrook</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Feng</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gilliland</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Bhat</surname>
            <given-names>TN</given-names>
          </name>
          <name>
            <surname>Weissig</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Shindyalov</surname>
            <given-names>IN</given-names>
          </name>
          <name>
            <surname>Bourne</surname>
            <given-names>PE</given-names>
          </name>
        </person-group>
        <article-title>The protein data bank</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2000</year>
        <volume>28</volume>
        <fpage>235</fpage>
        <lpage>242</lpage>
        <pub-id pub-id-type="pmid">10592235</pub-id>
      </element-citation>
    </ref>
    <ref id="B13">
      <label>13</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darnell</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Page</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Mitchell</surname>
            <given-names>JC</given-names>
          </name>
        </person-group>
        <article-title>An automated decision-tree approach to predicting protein interaction hot spots</article-title>
        <source>Proteins</source>
        <year>2007</year>
        <volume>68</volume>
        <fpage>813</fpage>
        <lpage>823</lpage>
        <pub-id pub-id-type="pmid">17554779</pub-id>
      </element-citation>
    </ref>
    <ref id="B14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dolinsky</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Czodrowski</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Nielsen</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Jensen</surname>
            <given-names>JH</given-names>
          </name>
          <name>
            <surname>Klebe</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Baker</surname>
            <given-names>NA</given-names>
          </name>
        </person-group>
        <article-title>PDB2PQR: expanding and upgrading automated preparation of biomolecular structures for molecular simulations</article-title>
        <source>Nucleic Acids Res.</source>
        <year>2007</year>
        <volume>35</volume>
        <fpage>W522</fpage>
        <lpage>W525</lpage>
        <pub-id pub-id-type="pmid">17488841</pub-id>
      </element-citation>
    </ref>
    <ref id="B15">
      <label>15</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Baker</surname>
            <given-names>NA</given-names>
          </name>
          <name>
            <surname>Sept</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Joseph</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Holst</surname>
            <given-names>MJ</given-names>
          </name>
          <name>
            <surname>McCammon</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Electrostatics of nanosystems: application to microtubules and the ribosome</article-title>
        <source>Proc. Natl Acad. Sci. USA</source>
        <year>2001</year>
        <volume>98</volume>
        <fpage>10037</fpage>
        <lpage>10041</lpage>
        <pub-id pub-id-type="pmid">11517324</pub-id>
      </element-citation>
    </ref>
    <ref id="B16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Landis</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Production ready global illumination. In</article-title>
        <source>Siggraph Course Notes</source>
        <year>2002</year>
      </element-citation>
    </ref>
    <ref id="B17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tarini</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cignoni</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Montani</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Ambient occlusion and edge cueing for enhancing real time molecular visualization</article-title>
        <source>IEEE Trans. Vis. Comput. Graph.</source>
        <year>2006</year>
        <volume>12</volume>
        <fpage>1237</fpage>
        <lpage>1244</lpage>
        <pub-id pub-id-type="pmid">17080857</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

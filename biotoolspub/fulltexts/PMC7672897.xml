<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">7672897</article-id>
    <article-id pub-id-type="publisher-id">3788</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-020-03788-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Clover: a clustering-oriented de novo assembler for Illumina sequences</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>Hsieh</surname>
          <given-names>Ming-Feng</given-names>
        </name>
        <address>
          <email>jmfhsieh@gmail.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Lu</surname>
          <given-names>Chin Lung</given-names>
        </name>
        <address>
          <email>cllu@cs.nthu.edu.tw</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Tang</surname>
          <given-names>Chuan Yi</given-names>
        </name>
        <address>
          <email>cytang@pu.edu.tw</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.38348.34</institution-id><institution-id institution-id-type="ISNI">0000 0004 0532 0580</institution-id><institution>Department of Computer Science, </institution><institution>National Tsing Hua University, </institution></institution-wrap>Hsinchu, 30013 Taiwan </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.412550.7</institution-id><institution-id institution-id-type="ISNI">0000 0000 9012 9465</institution-id><institution>Department of Computer Science and Information Engineering, </institution><institution>Providence University, </institution></institution-wrap>Taichung, 43301 Taiwan </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>17</day>
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>17</day>
      <month>11</month>
      <year>2020</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2020</year>
    </pub-date>
    <volume>21</volume>
    <elocation-id>528</elocation-id>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>5</month>
        <year>2020</year>
      </date>
      <date date-type="accepted">
        <day>29</day>
        <month>9</month>
        <year>2020</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2020</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Next-generation sequencing technologies revolutionized genomics by producing high-throughput reads at low cost, and this progress has prompted the recent development of de novo assemblers. Multiple assembly methods based on de Bruijn graph have been shown to be efficient for Illumina reads. However, the sequencing errors generated by the sequencer complicate analysis of de novo assembly and influence the quality of downstream genomic researches.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">In this paper, we develop a de Bruijn assembler, called Clover (clustering-oriented de novo assembler), that utilizes a novel <italic>k</italic>-mer clustering approach from the overlap-layout-consensus concept to deal with the sequencing errors generated by the Illumina platform. We further evaluate Clover’s performance against several de Bruijn graph assemblers (ABySS, SOAPdenovo, SPAdes and Velvet), overlap-layout-consensus assemblers (Bambus2, CABOG and MSR-CA) and string graph assembler (SGA) on three datasets (<italic>Staphylococcus aureus</italic>, <italic>Rhodobacter sphaeroides</italic> and human chromosome 14). The results show that Clover achieves a superior assembly quality in terms of corrected N50 and E-size while remaining a significantly competitive in run time except SOAPdenovo. In addition, Clover was involved in the sequencing projects of bacterial genomes <italic>Acinetobacter baumannii</italic> TYTH-1 and <italic>Morganella morganii</italic> KT.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">The marvel clustering-based approach of Clover that integrates the flexibility of the overlap-layout-consensus approach and the efficiency of the de Bruijn graph method has high potential on de novo assembly. Now, Clover is freely available as open source software from <ext-link ext-link-type="uri" xlink:href="https://oz.nthu.edu.tw/~d9562563/src.html">https://oz.nthu.edu.tw/~d9562563/src.html</ext-link>.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>De novo genome assembly</kwd>
      <kwd>DNA sequencing</kwd>
      <kwd>De bruijn graph</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2020</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec2">
    <title>Background</title>
    <p id="Par22">Massively parallel DNA sequencing has become a prominent tool in biological research [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. The high-throughput and low cost of next-generation sequencing technologies produce high coverage of reads. The Illumina platform is one of the most commonly used sequencers, producing reads with lengths ranging from 35 to 300 bp. The de Bruijn graph approach is prevalent in the de novo assembly using Illumina reads, and it constitutes all possible substrings of length <italic>k</italic> (termed <italic>k</italic>-mers) from the reads to efficiently process the huge sequencing data. Choosing the length of <italic>k</italic> is an important issue in the de Bruijn graph approach. Theoretically, for reads without sequence errors, smaller <italic>k</italic>-mers increase the connectivity of the graph and larger <italic>k</italic>-mers decrease the number of ambiguous repeats in the graph. There is therefore a balance between sensitivity and specificity determined by <italic>k</italic> [<xref ref-type="bibr" rid="CR3">3</xref>]. However, for reads with errors, larger <italic>k</italic>-mers decrease the sensitivity and specificity further due to sequencing errors generated by the Illumina platform, in which the primary errors are substitution errors, at rates of 0.5–2.5% [<xref ref-type="bibr" rid="CR4">4</xref>].</p>
    <p id="Par23">In this study, we are trying to answer what happens if we design an approach to allow such errors on <italic>k</italic>-mers, and could the error allowance on <italic>k</italic>-mers improve the quality of de novo assembly. Therefore we developed a clustering-oriented approach, called Clover, to deal with those substitution errors, and use a new parameter <italic>p</italic> which describes the level of error allowance on <italic>k</italic>-mers. For example, setting <italic>k</italic> to 40 and <italic>p</italic> to 1 means that our algorithm uses each 40-mers in the input reads while allowing each of them to have the flexibility of 1 substitution error.</p>
    <p id="Par24">With the flexibility of error allowance on <italic>k</italic>-mers, Clover tries to cluster these <italic>k</italic>-mers together when their Hamming distance less than or equal to <italic>p</italic>, and merges each cluster of <italic>k</italic>-mers to a node by finding its consensus sequence. To avoid over-merging of clusters, which may occur on the boundary of repeat sequence, Clover will split each node into multiple nodes when the merged node has multiple major consensus sequences (see Implementation section for detail).</p>
    <p id="Par25">After the steps mentioned above, the number of nodes in the graph will dramatically reduce, which therefore simplifies analysis of assembly. For example, Table <xref rid="Tab1" ref-type="table">1</xref> compares three results of a <italic>Leptospira shermani</italic> assembly when using different level of error allowance (<italic>p</italic> = 0, 1 and 2). Setting <italic>p</italic> to 0 is equal to run our assembler with traditional de Bruijn-based approach, which does not have the flexibility of error allowance on <italic>k</italic>-mers. The assembly result shows that only setting <italic>p</italic> to 1 could dramatically increase the N50 both in contig and scaffold because it reduces the number of nodes to build the de Bruijn graph that increases the specificity. The result also shows that setting <italic>p</italic> to 2 only increases the N50 on contig whereas decreases on scaffold. In this case, reducing too many nodes could increase the specificity, but it seems losing some meaningful information, which decreases the sensitivity at the same time.<table-wrap id="Tab1"><label>Table 1</label><caption><p>The clustering effect of Clover on <italic>Leptospira shermani</italic> assemblies</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">p</th><th align="left" rowspan="2">Nodes</th><th align="left" colspan="4">Contigs</th><th align="left" colspan="4">Scaffolds</th><th align="left" rowspan="2">Time (min)</th><th align="left" rowspan="2">Memory (GB)</th></tr><tr><th align="left">Num</th><th align="left">Total (kb)</th><th align="left">Max (kb)</th><th align="left">N50 (kb)</th><th align="left">Num</th><th align="left">Total (kb)</th><th align="left">Max (kb)</th><th align="left">N50 (kb)</th></tr></thead><tbody><tr><td align="left">0</td><td char="." align="char">33,692,986</td><td char="." align="char">5070</td><td char="." align="char">3818</td><td char="." align="char">9</td><td char="." align="char">1.0</td><td char="." align="char">182</td><td char="." align="char">3947</td><td char="." align="char">178</td><td char="." align="char">54</td><td char="." align="char">45.8</td><td char="." align="char">17.7</td></tr><tr><td align="left">1</td><td char="." align="char">15,969,082</td><td char="." align="char">1201</td><td char="." align="char">3875</td><td char="." align="char">34</td><td char="." align="char">5.5</td><td char="." align="char">117</td><td char="." align="char">3897</td><td char="." align="char">196</td><td char="." align="char">85</td><td char="." align="char">30.5</td><td char="." align="char">16.2</td></tr><tr><td align="left">2</td><td char="." align="char">11,917,810</td><td char="." align="char">1103</td><td char="." align="char">3859</td><td char="." align="char">27</td><td char="." align="char">6.1</td><td char="." align="char">117</td><td char="." align="char">3880</td><td char="." align="char">145</td><td char="." align="char">63</td><td char="." align="char">36.0</td><td char="." align="char">11.7</td></tr></tbody></table><table-wrap-foot><p><italic>p</italic> the level of error allowance on the <italic>k</italic>-mers, <italic>Nodes</italic> the number of nodes to build de Bruijn graph, <italic>Num</italic> the number of sequences produced, <italic>Total</italic> the total length of sequences produced, <italic>Max</italic> the maximum length of sequences produced, <italic>N50</italic> the N50 statistic calculated with respect to the total length of sequences produced, <italic>Time</italic> the run time to assemble the genome, <italic>Memory</italic> the memory requirement to assemble the genome</p></table-wrap-foot></table-wrap></p>
    <p id="Par26">The memory requirements, as shown in Table <xref rid="Tab1" ref-type="table">1</xref>, are in clear proportion to the number of nodes to build the de Bruijn graph, but are not in obvious proportion to parameter <italic>p</italic> (Additional file <xref rid="MOESM4" ref-type="media">4</xref>: Table S1, compares the memory requirements when using different <italic>k</italic> and <italic>p</italic>). The time cost is dropped when setting <italic>p</italic> to 1 due to the benefit of simplifying analysis, but setting <italic>p</italic> to 2 could not get the benefit more. Together with the phenomena described above, we should choose a suitable <italic>p</italic>, not as large as possible. In the case of <italic>L. shermani</italic> assembly, the suitable <italic>p</italic> is 1 and <italic>p</italic>/<italic>k</italic> is 2.5%, which is nearly the error rate of Illumina platform.</p>
  </sec>
  <sec id="Sec3">
    <title>Implementation</title>
    <p id="Par27">Clover proceeds through the following phases whose flowchart is shown in Fig. <xref rid="Fig1" ref-type="fig">1</xref>.<fig id="Fig1"><label>Fig. 1</label><caption><p>The flowchart of the Clover pipeline</p></caption><graphic xlink:href="12859_2020_3788_Fig1_HTML" id="MO1"/></fig></p>
    <sec id="Sec4">
      <title>Construction and clustering of <italic>k</italic>-mers</title>
      <p id="Par28">For given <italic>k</italic> (<italic>k</italic>-mer) and <italic>p</italic> (error allowance), Clover constructs a Hamming graph by extracting all the input <italic>k</italic>-mers as nodes. The graph’s edges are created by the pairs of <italic>k</italic>-mers if the Hamming distance of the <italic>k</italic>-mers (or their reverse complements) is ≤ <italic>p</italic>. Figure <xref rid="Fig2" ref-type="fig">2</xref> illustrates an example of 5-mers clustering while allowing 1 error. Basically, the components of the Hamming graph are the clusters of <italic>k</italic>-mers (Fig. <xref rid="Fig2" ref-type="fig">2</xref>b). Clover then merges all the nodes within each component of the Hamming graph into a single node and computes its consensus sequence. In practice, just setting <italic>p</italic> to (<italic>k</italic> × error rate of sequencer) can dramatically reduce the number of <italic>k</italic>-mers for constructing the de Bruijn graph later and accelerates the subsequent graph processing. In the implementation, Clover uses two steps to cluster the <italic>k</italic>-mers: Step 1 extracts all <italic>k</italic>-mers from the input reads. Step 2 constructs a Hamming graph of the <italic>k</italic>-mers and then performs a breadth-first search to find each component in the Hamming graph. If there is no error allowance needed (<italic>p</italic> = 0), Clover will omit the process of step 2.<fig id="Fig2"><label>Fig. 2</label><caption><p>An example of 5-mers clustering while allowing 1 error</p></caption><graphic xlink:href="12859_2020_3788_Fig2_HTML" id="MO2"/></fig></p>
    </sec>
    <sec id="Sec5">
      <title>Consensus computing and splitting of nodes</title>
      <p id="Par29">Clover computes the consensus sequence for each merged node by selecting the nucleotide with the most occurrence on each base pair. For example, the fourth component of Fig. <xref rid="Fig2" ref-type="fig">2</xref>b has 4 <italic>k</italic>-mers (GGTCT, GGTAT, GCTCT and TGTCT) whose consensus sequence therefore is GGTCT as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>c. To avoid over-merging, if the <italic>k</italic>-mers of the merged node, called <italic>v</italic>, have a nucleotide on a base pair, called <italic>x</italic>, whose occurrence is closed to that of the corresponding nucleotide, called <italic>y</italic>, in the consensus sequence, Clover splits the merged node into multiple nodes. More realistically, given a fractional threshold <italic>sp</italic>, if the occurrence of <italic>x</italic> is greater than or equal to <italic>sp</italic> times the occurrence of <italic>y</italic>, Clover collects all the <italic>k</italic>-mers with <italic>x</italic> into a new node, called <italic>v</italic><sub>1</sub>, leaves the others into a new node, called <italic>v</italic><sub>2</sub>, and recursively retries this splitting process on <italic>v</italic><sub>1</sub> and <italic>v</italic><sub>2</sub>. Let <italic>q</italic> be the number of <italic>k</italic>-mers in the merged node. Then the consensus computing requires <italic>O</italic>(<italic>q</italic> × <italic>k</italic>) time, the condition checking requires <italic>O</italic>(<italic>k</italic>) time and collecting the <italic>k</italic>-mers into the new nodes requires <italic>O</italic>(<italic>q</italic>) time. Therefore, similar to the analysis of quick sort, the worst case of the time complexity on the whole process is <italic>O</italic>(<italic>q</italic><sup>2</sup> × <italic>k</italic>). Figure <xref rid="Fig2" ref-type="fig">2</xref>c shows the resulting consensus sequences of Fig. <xref rid="Fig2" ref-type="fig">2</xref>b by setting <italic>sp</italic> to 0.6. Finally, Clover collects all the resulting consensus sequences as the <italic>k</italic>-mer set for constructing de Bruijn graph in the next phase.</p>
    </sec>
    <sec id="Sec6">
      <title>De Bruijn graph construction</title>
      <p id="Par30">For the <italic>k</italic>-mer set obtained in the previous phase, Clover constructs the de Bruijn graph by directly using the <italic>k</italic>-mer set as its node set. For any two nodes, it creates an edge between them if their corresponding <italic>k</italic>-mers have an overlapping of length <italic>k</italic> − 1. Figure <xref rid="Fig2" ref-type="fig">2</xref>c provides an example for de Bruijn graph construction.</p>
    </sec>
    <sec id="Sec7">
      <title>Graph cleaning and extension with shorter <italic>k</italic>-mers</title>
      <p id="Par31">Clover provides multiple operations based on spectrum, structure and their combination for removing spurious edges from the de Bruijn graph. The spectral error removal operation is the trimming of low-frequency edges. The structural error removal operations are the pruning of tips, bubbles, and erroneous connections. If there are multiple options during pruning of tips and bubbles, Clover prunes the low-frequency edges first. All these operations were also used in SOAPdenovo [<xref ref-type="bibr" rid="CR5">5</xref>] and Velvet [<xref ref-type="bibr" rid="CR3">3</xref>]. Clover then iteratively extends the graph by connecting two paths if the sequences of the paths have an overlapping length shorter than <italic>k</italic> until the given minimum overlapping length <italic>m</italic> is achieved. Clover defaultly sets the parameter <italic>m</italic> to (<italic>k</italic>/2) + 1. For example, we compare the different settings of <italic>m</italic> on the <italic>Rhodobacter sphaeroides</italic> assemblies (see Additional file <xref rid="MOESM4" ref-type="media">4</xref>: Table S2), where <italic>k</italic> is set to 46 in this case, and find that the default value 24 of <italic>m</italic> has the best scaffold result.</p>
    </sec>
    <sec id="Sec8">
      <title>Scaffolding</title>
      <p id="Par32">Clover utilizes read-pair information by aligning both ends of the pairs to the paths in the graph to find pairs of anchors. Given a scaffold support <italic>ss</italic>, which defaultly is set to 5, Clover links each pair of paths with the consistent bound if its support from the pairs of anchors is greater than or equal to <italic>ss</italic>. Clover calculates the medium length of insert sizes inferred from the pairs of anchors to be the consistent bound of the linked pair of paths. Finally, Clover predicts contigs by searching Eulerian super-paths on the graph.</p>
    </sec>
  </sec>
  <sec id="Sec9">
    <title>Results and discussion</title>
    <p id="Par33">To evaluate the assembly correctness of Clover, we have tested three typical datasets in the GAGE study: <italic>Staphylococcus aureus</italic> (2.9 Mb), <italic>Rhodobacter sphaeroides</italic> (4.6 Mb) and human chromosome 14 (88.3 Mb) [<xref ref-type="bibr" rid="CR6">6</xref>]. Each dataset has original reads, Quake corrected reads and Allpaths-LG corrected reads. The result with the best scaffold N50 on these three datasets is selected for assembly comparison we will discuss later.</p>
    <sec id="Sec10">
      <title>Running Clover assembler</title>
      <p id="Par34">We provide Clover source code with this submission (see Additional file <xref rid="MOESM1" ref-type="media">1</xref>) and at our website <ext-link ext-link-type="uri" xlink:href="https://oz.nthu.edu.tw/~d9562563/src.html">https://oz.nthu.edu.tw/~d9562563/src.html</ext-link>.</p>
      <p id="Par35">Installation of Clover is provided at Additional file <xref rid="MOESM2" ref-type="media">2</xref>.</p>
      <p id="Par36">Each dataset in the GAGE study (see Additional file <xref rid="MOESM2" ref-type="media">2</xref>) is available at <ext-link ext-link-type="uri" xlink:href="https://gage.cbcb.umd.edu/data/">https://gage.cbcb.umd.edu/data/</ext-link>.</p>
      <p id="Par37">For testing Clover, test data is available at ‘Test Case’ of our website.</p>
      <p id="Par38">In Table <xref rid="Tab2" ref-type="table">2</xref>, the results of our Clover were obtained from Allpaths-LG corrected reads. The assembly instructions used by our Clover are:<list list-type="bullet"><list-item><p id="Par39"><italic>S. aureus</italic>: clover -k 32 -p 0 -i1 frag_1.fastq,shortjump_1.fastq -i2 frag_2.fastq,shortjump_2.fastq -cs 5 -ss 3 -is 180,3500 -hp 0.6 -pm -ml 700.</p></list-item><list-item><p id="Par40"><italic>R. sphaeroides</italic>: clover -k 46 -p 0 -i1 frag_1.fastq,shortjump_1.fastq -i2 frag_2.fastq,shortjump_2.fastq -cs 7 -ss 3 -is 180,3500 -hp 0.6 -pm -ml 200.</p></list-item><list-item><p id="Par41">Human chromosome 14: clover -k 80 -p 3 -i1 frag_1.fastq,shortjump_1.fastq,longjump_1.fastq -i2 frag_2.fastq,shortjump_2.fastq,longjump_2.fastq -cs 9 -ss 5 -is 155,2543,35306 -hp 0.8 -ml 900.</p></list-item></list><table-wrap id="Tab2"><label>Table 2</label><caption><p>Comparison of assemblers on <italic>Staphylococcus aureus</italic> (SA), <italic>Rhodobacter sphaeroides</italic> (RS) and human chromosome 14 (HG)</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Data (Mb</th><th align="left" rowspan="2">Assembler</th><th align="left" colspan="6">Contigs</th><th align="left" colspan="6">Scaffolds</th></tr><tr><th align="left">Num</th><th align="left">N50 (kb)</th><th align="left">E-size (kb)</th><th align="left">Errs</th><th align="left">N50C (kb)</th><th align="left">E-sizeC (kb)</th><th align="left">Num</th><th align="left">N50 (kb)</th><th align="left">E-size (kb)</th><th align="left">Errs</th><th align="left">N50C (kb)</th><th align="left">E-sizeC (kb)</th></tr></thead><tbody><tr><td align="left">SA</td><td align="left">Clover</td><td char="." align="char">128</td><td char="." align="char">43.9</td><td char="." align="char">53.1</td><td char="." align="char">13</td><td char="." align="char">41.3</td><td char="." align="char">50.5</td><td char="." align="char"><bold>12</bold></td><td char="." align="char">1490</td><td char="." align="char">947</td><td char="." align="char">2</td><td char="." align="char"><bold>1490</bold></td><td char="." align="char">890</td></tr><tr><td align="left">2.9</td><td align="left">ABySS</td><td char="." align="char"><bold>90</bold></td><td char="." align="char">129.1</td><td char="." align="char">181.1</td><td char="." align="char">16</td><td char="." align="char"><bold>69.8</bold></td><td char="." align="char"><bold>102.5</bold></td><td char="." align="char">61</td><td char="." align="char">170</td><td char="." align="char">199</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">107</td><td char="." align="char">127</td></tr><tr><td align="left"/><td align="left">Bambus2</td><td char="." align="char">109</td><td char="." align="char">50.2</td><td char="." align="char">69.1</td><td char="." align="char">178</td><td char="." align="char">16.7</td><td char="." align="char">19.5</td><td char="." align="char">17</td><td char="." align="char">1084</td><td char="." align="char">1120</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">1084</td><td char="." align="char"><bold>1120</bold></td></tr><tr><td align="left"/><td align="left">CABOG</td><td align="left" colspan="12">Could not run because of incompatible read lengths in one library</td></tr><tr><td align="left"/><td align="left">MSR-CA</td><td char="." align="char">94</td><td char="." align="char">59.2</td><td char="." align="char">60.4</td><td char="." align="char">22</td><td char="." align="char">49.2</td><td char="." align="char">51.4</td><td char="." align="char">17</td><td char="." align="char"><bold>2412</bold></td><td char="." align="char"><bold>2026</bold></td><td char="." align="char">1</td><td char="." align="char">1022</td><td char="." align="char">1039</td></tr><tr><td align="left"/><td align="left">SGA</td><td char="." align="char">1252</td><td char="." align="char">4.0</td><td char="." align="char">4.7</td><td char="." align="char"><bold>3</bold></td><td char="." align="char">4.0</td><td char="." align="char">4.7</td><td char="." align="char">546</td><td char="." align="char">208</td><td char="." align="char">166</td><td char="." align="char">2</td><td char="." align="char">208</td><td char="." align="char">164</td></tr><tr><td align="left"/><td align="left">SOAPdenovo</td><td char="." align="char">107</td><td char="." align="char"><bold>288.2</bold></td><td char="." align="char"><bold>252.3</bold></td><td char="." align="char">58</td><td char="." align="char">62.7</td><td char="." align="char">67.5</td><td char="." align="char">99</td><td char="." align="char">332</td><td char="." align="char">302</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">288</td><td char="." align="char">227</td></tr><tr><td align="left"/><td align="left">SPAdes</td><td char="." align="char">98</td><td char="." align="char">62.6</td><td char="." align="char">87.9</td><td char="." align="char">9</td><td char="." align="char">57.0</td><td char="." align="char">75.1</td><td char="." align="char">41</td><td char="." align="char">1703</td><td char="." align="char">1144</td><td char="." align="char">2</td><td char="." align="char">684</td><td char="." align="char">570</td></tr><tr><td align="left"/><td align="left">Velvet</td><td char="." align="char">162</td><td char="." align="char">48.4</td><td char="." align="char">60.3</td><td char="." align="char">19</td><td char="." align="char">41.5</td><td char="." align="char">49.8</td><td char="." align="char">45</td><td char="." align="char">762</td><td char="." align="char">664</td><td char="." align="char">18</td><td char="." align="char">284</td><td char="." align="char">282</td></tr><tr><td align="left">RS</td><td align="left">Clover</td><td char="." align="char">453</td><td char="." align="char">20.1</td><td char="." align="char">23.8</td><td char="." align="char">19</td><td char="." align="char"><bold>19.5</bold></td><td char="." align="char"><bold>21.9</bold></td><td char="." align="char">59</td><td char="." align="char">2483</td><td char="." align="char">1795</td><td char="." align="char">1</td><td char="." align="char">2483</td><td char="." align="char">1795</td></tr><tr><td align="left">4.6</td><td align="left">ABySS</td><td char="." align="char">644</td><td char="." align="char">19.7</td><td char="." align="char">25.1</td><td char="." align="char">57</td><td char="." align="char">13.3</td><td char="." align="char">18.5</td><td char="." align="char">414</td><td char="." align="char">51</td><td char="." align="char">56</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">46</td><td char="." align="char">47</td></tr><tr><td align="left"/><td align="left">Bambus2</td><td char="." align="char"><bold>177</bold></td><td char="." align="char">93.2</td><td char="." align="char">94.5</td><td char="." align="char">360</td><td char="." align="char">12.8</td><td char="." align="char">16.3</td><td char="." align="char">92</td><td char="." align="char">2439</td><td char="." align="char">1375</td><td char="." align="char">1</td><td char="." align="char">390</td><td char="." align="char">1106</td></tr><tr><td align="left"/><td align="left">CABOG</td><td char="." align="char">322</td><td char="." align="char">20.2</td><td char="." align="char">24.1</td><td char="." align="char">31</td><td char="." align="char">17.9</td><td char="." align="char">21.5</td><td char="." align="char">130</td><td char="." align="char">66</td><td char="." align="char">520</td><td char="." align="char">3</td><td char="." align="char">65</td><td char="." align="char">381</td></tr><tr><td align="left"/><td align="left">MSR-CA</td><td char="." align="char">395</td><td char="." align="char">22.1</td><td char="." align="char">24.2</td><td char="." align="char">32</td><td char="." align="char">19.1</td><td char="." align="char">21.5</td><td char="." align="char"><bold>43</bold></td><td char="." align="char"><bold>2976</bold></td><td char="." align="char"><bold>2039</bold></td><td char="." align="char">3</td><td char="." align="char"><bold>2976</bold></td><td char="." align="char"><bold>2017</bold></td></tr><tr><td align="left"/><td align="left">SGA</td><td char="." align="char">3067</td><td char="." align="char">2.3</td><td char="." align="char">3.3</td><td char="." align="char"><bold>4</bold></td><td char="." align="char">2.3</td><td char="." align="char">3.3</td><td char="." align="char">2096</td><td char="." align="char">51</td><td char="." align="char">53</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">51</td><td char="." align="char">53</td></tr><tr><td align="left"/><td align="left">SOAPdenovo</td><td char="." align="char">204</td><td char="." align="char"><bold>131.7</bold></td><td char="." align="char"><bold>157.2</bold></td><td char="." align="char">401</td><td char="." align="char">14.6</td><td char="." align="char">18.7</td><td char="." align="char">166</td><td char="." align="char">660</td><td char="." align="char">688</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">660</td><td char="." align="char">559</td></tr><tr><td align="left"/><td align="left">SPAdes</td><td char="." align="char">768</td><td char="." align="char">11.8</td><td char="." align="char">13.7</td><td char="." align="char">7</td><td char="." align="char">11.7</td><td char="." align="char">13.5</td><td char="." align="char">352</td><td char="." align="char">718</td><td char="." align="char">840</td><td char="." align="char"><bold>0</bold></td><td char="." align="char">718</td><td char="." align="char">840</td></tr><tr><td align="left"/><td align="left">Velvet</td><td char="." align="char">583</td><td char="." align="char">15.7</td><td char="." align="char">18.6</td><td char="." align="char">24</td><td char="." align="char">14.5</td><td char="." align="char">16.9</td><td char="." align="char">178</td><td char="." align="char">353</td><td char="." align="char">380</td><td char="." align="char">16</td><td char="." align="char">301</td><td char="." align="char">352</td></tr><tr><td align="left">HG</td><td align="left">Clover</td><td char="." align="char">24,527</td><td char="." align="char">3.4</td><td char="." align="char">5.3</td><td char="." align="char">718</td><td char="." align="char">3.2</td><td char="." align="char">5.0</td><td char="." align="char">2089</td><td char="." align="char">839</td><td char="." align="char">943</td><td char="." align="char">385</td><td char="." align="char"><bold>409</bold></td><td char="." align="char"><bold>502</bold></td></tr><tr><td align="left">88.3</td><td align="left">ABySS</td><td char="." align="char">21,222</td><td char="." align="char">14.7</td><td char="." align="char">19.0</td><td char="." align="char">1876</td><td char="." align="char">10.4</td><td char="." align="char">13.4</td><td char="." align="char">19,249</td><td char="." align="char">18</td><td char="." align="char">24</td><td char="." align="char"><bold>13</bold></td><td char="." align="char">13</td><td char="." align="char">19</td></tr><tr><td align="left"/><td align="left">Bambus2</td><td char="." align="char">13,592</td><td char="." align="char">5.9</td><td char="." align="char">23.3</td><td char="." align="char">8175</td><td char="." align="char">4.3</td><td char="." align="char">6.3</td><td char="." align="char">1792</td><td char="." align="char">324</td><td char="." align="char">528</td><td char="." align="char">240</td><td char="." align="char">200</td><td char="." align="char">274</td></tr><tr><td align="left"/><td align="left">CABOG</td><td char="." align="char"><bold>3361</bold></td><td char="." align="char"><bold>45.3</bold></td><td char="." align="char"><bold>58.8</bold></td><td char="." align="char">2346</td><td char="." align="char"><bold>23.7</bold></td><td char="." align="char"><bold>30.6</bold></td><td char="." align="char"><bold>479</bold></td><td char="." align="char">393</td><td char="." align="char">549</td><td char="." align="char">39</td><td char="." align="char">309</td><td char="." align="char">457</td></tr><tr><td align="left"/><td align="left">MSR-CA</td><td char="." align="char">30,103</td><td char="." align="char">4.9</td><td char="." align="char">6.8</td><td char="." align="char">1656</td><td char="." align="char">4.3</td><td char="." align="char">5.9</td><td char="." align="char">1425</td><td char="." align="char">893</td><td char="." align="char">1420</td><td char="." align="char">1430</td><td char="." align="char">282</td><td char="." align="char">407</td></tr><tr><td align="left"/><td align="left">SGA</td><td char="." align="char">56,939</td><td char="." align="char">2.7</td><td char="." align="char">3.8</td><td char="." align="char"><bold>375</bold></td><td char="." align="char">2.7</td><td char="." align="char">3.7</td><td char="." align="char">30,975</td><td char="." align="char">83</td><td char="." align="char">113</td><td char="." align="char">24</td><td char="." align="char">81</td><td char="." align="char">111</td></tr><tr><td align="left"/><td align="left">SOAPdenovo</td><td char="." align="char">21,818</td><td char="." align="char">16.7</td><td char="." align="char">21.9</td><td char="." align="char">6587</td><td char="." align="char">7.8</td><td char="." align="char">10.4</td><td char="." align="char">13,502</td><td char="." align="char">454</td><td char="." align="char">533</td><td char="." align="char">384</td><td char="." align="char">227</td><td char="." align="char">276</td></tr><tr><td align="left"/><td align="left">SPAdes</td><td char="." align="char">16,854</td><td char="." align="char">12.7</td><td char="." align="char">16.7</td><td char="." align="char">1519</td><td char="." align="char">10.4</td><td char="." align="char">13.6</td><td char="." align="char">9245</td><td char="." align="char">173</td><td char="." align="char">223</td><td char="." align="char">199</td><td char="." align="char">129</td><td char="." align="char">162</td></tr><tr><td align="left"/><td align="left">Velvet</td><td char="." align="char">45,564</td><td char="." align="char">2.3</td><td char="." align="char">3.3</td><td char="." align="char">3665</td><td char="." align="char">2.1</td><td char="." align="char">3.0</td><td char="." align="char">3565</td><td char="." align="char"><bold>1190</bold></td><td char="." align="char"><bold>1825</bold></td><td char="." align="char">8659</td><td char="." align="char">86</td><td char="." align="char">124</td></tr></tbody></table><table-wrap-foot><p><italic>Num</italic> the number of sequences produced, <italic>N50</italic> the N50 statistic calculated with respect to the genome size, <italic>E-size</italic> the most likely size of the sequence containing some random base in the genome, <italic>Errs</italic> the number of misjoins and for the contig value, also the number of indels &gt; 5 bases, <italic>N50C</italic> the N50 calculated after splitting all sequences at error locations, and <italic>E-sizeC</italic> the E-size calculated after splitting all sequences at error locations. The best result in each column, for each dataset, is indicated in bold</p></table-wrap-foot></table-wrap></p>
      <p id="Par42">The assembly results display all statistics data in the screen (see Additional file <xref rid="MOESM3" ref-type="media">3</xref>: Section S2) and create two assembly output files named out_contig.fasta and out_scaffold.fasta.</p>
    </sec>
    <sec id="Sec11">
      <title>Running <italic>Leptospira shermani</italic> assembly</title>
      <p id="Par43">We provide <italic>Leptospira shermani</italic> dataset tar file at our website <ext-link ext-link-type="uri" xlink:href="https://oz.nthu.edu.tw/~d9562563/src.html">https://oz.nthu.edu.tw/~d9562563/src.html</ext-link>.</p>
      <p id="Par44">Download and unpack it: tar -zxvf leptospirashermanidata.tar.gz.</p>
      <p id="Par45">The assembly instructions are: clover -k 40 -p ? -is 485 -i1 Lepto_500_1.fq -i2 Lepto_500_2.fq -hp 0.6, where ? runs with 0, 1 and 2, respectively.</p>
      <p id="Par46">The assembly results display all statistics data in the screen (see Additional file <xref rid="MOESM3" ref-type="media">3</xref>: Section S1) and create two assembly output files named out_contig.fasta and out_scaffold.fasta.</p>
    </sec>
    <sec id="Sec12">
      <title>Assemblers</title>
      <p id="Par47">Table <xref rid="Tab2" ref-type="table">2</xref> shows the comparison of Clover’s performance against several modern assemblers, which include ABySS [<xref ref-type="bibr" rid="CR7">7</xref>], Bambus2 [<xref ref-type="bibr" rid="CR8">8</xref>], CABOG [<xref ref-type="bibr" rid="CR9">9</xref>], MSR-CA [<xref ref-type="bibr" rid="CR10">10</xref>], SGA [<xref ref-type="bibr" rid="CR11">11</xref>], SOAPdenovo [<xref ref-type="bibr" rid="CR5">5</xref>], SPAdes [<xref ref-type="bibr" rid="CR12">12</xref>] and Velvet [<xref ref-type="bibr" rid="CR3">3</xref>]. All assembly statistics were generated by the GAGE validation scripts. Bambus2, CABOG and MSR-CA are well known overlap-layout-consensus assemblers, while ABySS, SOAPdenovo, SPAdes and Velvet are famous de Bruijn graph assemblers and SGA is typical string graph assembler.</p>
    </sec>
    <sec id="Sec13">
      <title>Comparison</title>
      <p id="Par48">For the <italic>S. aureus</italic> dataset, SOAPdenovo and ABySS have produced the longest two contigs. SGA, SPAdes, Clover and ABySS have been detected the fewest four errors in contigs, but SOAPdenovo contains many errors. Therefore ABySS achieves the longest corrected contigs. MSR-CA has produced the longest scaffolds, but its longest scaffold has been broken by an error. Instead, Clover and Bambus2 achieve the longest corrected scaffolds in terms of N50 and E-size respectively.</p>
      <p id="Par49">For the <italic>R. sphaeroides</italic> dataset, SOAPdenovo and Bambus2 have produced the longest two contigs. However, considering the assembly correctness, Clover achieves the longest corrected contigs. SGA and SPAdes contain fewest two errors in contigs, but their N50 lengths are relatively shorter. Excluding SGA and SPAdes, Clover’s contigs contain fewest errors. On the other hand, MSR-CA and Clover have the best two scaffold results both in uncorrected and corrected N50.</p>
      <p id="Par50">For the human chromosome 14 dataset, Clover produces the relatively conservative contigs, but its contigs contain fewest errors except SGA. CABOG has the best contig results both in uncorrected and corrected N50. Velvet produces the longest scaffolds. However, when focusing on the assembly correctness, Clover achieves the longest corrected scaffolds.</p>
      <p id="Par51">Note that the N50 statistics is defined as the minimum contig length (in descending order) needed to cover 50% of the genome. The N50 statistics generated by Clover is the minimum contig length needed to cover 50% of all the sequence produced. However, the N50 statistics generated by the GAGE validation scripts is the minimum contig length needed to cover 50% of the reference genomic sequence provided in GAGE study. Therefore the N50 statistics of Clover in Additional file <xref rid="MOESM3" ref-type="media">3</xref> and the N50 statistics of Clover in Table <xref rid="Tab2" ref-type="table">2</xref> have a little difference.</p>
      <p id="Par52">The result of <italic>L. shermani</italic> seems to be poorer than <italic>S. aureus</italic> and <italic>R. sphaeroides</italic>. However, these two datasets in GAGE study have two libraries and the fragment size is up to 3500 bp [<xref ref-type="bibr" rid="CR6">6</xref>], whereas the <italic>L. shermani</italic> dataset only has single library with fragment size 485 bp. The better assembly quality is caused by using more libraries. Practically, researchers usually use optical mapping to arrange scaffolds and then obtain the draft sequence [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par53">In addition, our clustering approach can apply on ever error-corrected reads. For example, the assembly of human chromosome 14 is generated by clustering 80-mers while allowing 3 errors on Allpaths-LG corrected reads. Therefore Clover would not conflict with current error correction tools. In practice, we will apply smaller <italic>k</italic>-mer on single library or lower coverage dataset such as the <italic>L. shermani</italic> assembly, and larger <italic>k</italic>-mer on more complex genomes such as human chromosome 14. When using large <italic>k</italic>-mer, increasing the level of error allowance is especially needed even on ever error-corrected reads.</p>
    </sec>
    <sec id="Sec14">
      <title>Run times and memory requirements</title>
      <p id="Par54">To assess Clover’s run times and memory requirements, we have rerun above assemblers that follow the same processes and parameters of GAGE with their newest version on a 16-core AMD Opteron 6128 2 GHz server with 256 GB of RAM. The parameters of optimal result seem varying with the different version of assemblers and hence we only take their run times and memory requirements into comparisons. Because we don’t have large-scale parallel environment, we only run ABySS on single-process version.</p>
      <p id="Par55">Table <xref rid="Tab3" ref-type="table">3</xref> shows the comparison of these assemblers on run times and memory requirements. The result shows that the run time of Clover is significantly competitive to those efficient de Bruijn graph assemblers except SOAPdenovo. SOAPdenovo is the fastest assembler due to the multi-process parallelization.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Comparison of assemblers on run times and memory requirements</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left" rowspan="2">Assembler</th><th align="left" colspan="2"><italic>Staphylococcus aureus</italic></th><th align="left" colspan="2"><italic>Rhodobacter sphaeroides</italic></th><th align="left" colspan="2">Human Chromosome 14</th></tr><tr><th align="left">Time</th><th align="left">Memory</th><th align="left">Time</th><th align="left">Memory</th><th align="left">Time</th><th align="left">Memory</th></tr></thead><tbody><tr><td align="left">Clover</td><td align="left">5.6 min</td><td align="left">10.1 GB</td><td align="left">13.9 min</td><td align="left">11.0 GB</td><td align="left">10.4 h</td><td align="left">59.3 GB</td></tr><tr><td align="left">ABySS</td><td align="left">5.1 min</td><td align="left">0.5 GB</td><td align="left">11.6 min</td><td align="left">0.5 GB</td><td align="left">6.7 h</td><td align="left">3.3 GB</td></tr><tr><td align="left">Bambus2</td><td align="left">55.5 min</td><td align="left">2.3 GB</td><td align="left">3.7 h</td><td align="left">12.3 GB</td><td align="left">5.1 d</td><td align="left">190.3 GB</td></tr><tr><td align="left">CABOG</td><td align="left">NA*</td><td align="left">NA*</td><td align="left">2.9 h</td><td align="left">12.3 GB</td><td align="left">22.9 h</td><td align="left">190.4 GB</td></tr><tr><td align="left">MSR-CA</td><td align="left">25.5 min</td><td align="left">26.2 GB</td><td align="left">41.3 min</td><td align="left">28.3 GB</td><td align="left">1.3 d</td><td align="left">34.6 GB</td></tr><tr><td align="left">SGA</td><td align="left">35.5 min</td><td align="left">1.1 GB</td><td align="left">1.1 h</td><td align="left">3.5 GB</td><td align="left">18.8 h</td><td align="left">35.0 GB</td></tr><tr><td align="left">SOAPdenovo</td><td align="left">2.3 min</td><td align="left">3.1 GB</td><td align="left">1.8 min</td><td align="left">5.0 GB</td><td align="left">2.1 h</td><td align="left">8.0 GB</td></tr><tr><td align="left">SPAdes</td><td align="left">56.8 min</td><td align="left">6.1 GB</td><td align="left">29.5 min</td><td align="left">4.5 GB</td><td align="left">10.9 h</td><td align="left">22.0 GB</td></tr><tr><td align="left">Velvet</td><td align="left">5.4 min</td><td align="left">0.4 GB</td><td align="left">7.3 min</td><td align="left">0.5 GB</td><td align="left">11.7 h</td><td align="left">72.3 GB</td></tr></tbody></table><table-wrap-foot><p><italic>Time</italic> the run time to assemble the genome, <italic>Memory</italic> the memory requirement to assemble the genome</p><p>*NA, could not run because of incompatible read lengths in one library</p></table-wrap-foot></table-wrap></p>
      <p id="Par56">The major cost of Clover is the <italic>k</italic>-mers clustering. In the <italic>k</italic>-mers clustering, Clover constructs a Hamming graph in which it links each pair of <italic>k</italic>-mers as an edge if the Hamming distance of the pair of <italic>k</italic>-mers is ≤ <italic>p</italic>. To accelerate the process, Clover utilizes the indexing technique that partitions a <italic>k</italic>-mer into (<italic>p</italic> + 1) substrings. If the Hamming distance of a pair of <italic>k</italic>-mers is ≤ <italic>p</italic>, there must exist a pair of substrings that are exactly the same. Therefore Clover uses (<italic>p</italic> + 1) hash tables which index each substring of all <italic>k</italic>-mers to find the candidate pairs of <italic>k</italic>-mers, and performs comparisons to check their real Hamming distances. Let <italic>n</italic> be the number of the reads. <italic>l</italic> be the length of the reads, <italic>k</italic> be the length of <italic>k</italic>-mers and <italic>p</italic> be the level of error allowance on the <italic>k</italic>-mers. Note that <italic>p</italic> can be 0 in this study. Then <italic>n</italic> × (<italic>l</italic> − <italic>k</italic> + 1) is the number of <italic>k</italic>-mers within the reads, (<italic>p</italic> + 1) is the number of hash tables needed to find the candidate pairs of <italic>k</italic>-mers and each comparison for them requires <italic>O</italic>(<italic>k</italic>) time. Therefore, the worst case of the time complexity on <italic>k</italic>-mers clustering is <italic>O</italic>(<italic>n</italic> × (<italic>l</italic> − <italic>k</italic> + 1) × <italic>k</italic> × (<italic>p</italic> + 1)) ≅ <italic>O</italic>(<italic>n</italic> × (<italic>l</italic> − <italic>k</italic>) × <italic>k</italic> × (<italic>p</italic> + 1)). Similarly, the memory needed to store all the sequences of the <italic>k</italic>-mers is <italic>O</italic>(<italic>n</italic> × (<italic>l</italic> − <italic>k</italic>) × <italic>k</italic>), and the memory needed for all the <italic>k</italic>-mers on the hash tables is <italic>O</italic>(<italic>n</italic> × (<italic>l</italic> − <italic>k</italic>) × (<italic>p</italic> + 1)). Since <italic>k</italic> is much larger than <italic>p</italic>, the worst case of the space complexity on <italic>k</italic>-mers clustering is <italic>O</italic>(<italic>n</italic> × (<italic>l</italic> − <italic>k</italic>) × <italic>k</italic>).</p>
    </sec>
    <sec id="Sec15">
      <title>Sequencing projects</title>
      <p id="Par57">It is worth mentioning that Clover was involved in two sequencing projects to respectively sequence bacterial genomes <italic>Acinetobacter baumannii</italic> TYTH-1 (4.0 Mb and 165 contigs) [<xref ref-type="bibr" rid="CR14">14</xref>] and <italic>Morganella morganii</italic> KT (3.8 Mb and 58 contigs) [<xref ref-type="bibr" rid="CR15">15</xref>]. The contigs generated by Clover were then used to build the draft sequences, which were confirmed by optical mapping and PCR. From the draft sequences of <italic>A. baumannii</italic> TYTH-1 and <italic>M. morganii</italic> KT, 3682 and 3565 protein-coding sequences, 75 and 72 tRNA genes, and 6 and 10 rRNA genes were further predicted, respectively. Table <xref rid="Tab4" ref-type="table">4</xref> shows the summary of these two sequencing results.<table-wrap id="Tab4"><label>Table 4</label><caption><p>The results of two bacterial genome sequencing projects</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left"><italic>Acinetobacter baumannii</italic> TYTH-1</th><th align="left"><italic>Morganella morganii</italic> KT</th></tr></thead><tbody><tr><td align="left">Length of sequence</td><td align="left">3,957,368 bp</td><td align="left">3,826,919 bp</td></tr><tr><td align="left">Number of contigs</td><td align="left">165</td><td align="left">58</td></tr><tr><td align="left">GC content</td><td align="left">39%</td><td align="left">51%</td></tr><tr><td align="left">Number of protein-coding sequences</td><td align="left">3682</td><td align="left">3565</td></tr><tr><td align="left">Number of tRNA genes</td><td align="left">75</td><td align="left">72</td></tr><tr><td align="left">Number of rRNA genes</td><td align="left">6</td><td align="left">10</td></tr><tr><td align="left">GenBank accession number</td><td align="left">CP003856</td><td align="left">ALJX00000000</td></tr></tbody></table><table-wrap-foot><p>The NGS datasets of these two bacterial sequencing projects are available for download at <ext-link ext-link-type="uri" xlink:href="https://oz.nthu.edu.tw/~d9562563/src.html">https://oz.nthu.edu.tw/~d9562563/src.html</ext-link></p></table-wrap-foot></table-wrap></p>
    </sec>
    <sec id="Sec16">
      <title>Limitations</title>
      <p id="Par58">The limit of our current Clover is that it cannot apply on genomes with large size up to 250 Mb. This is caused by 256 GB of RAM in our server (see Run times and memory requirements section for detail). However, if the server has more RAM, the limitation could be eliminated. The memory requirement issue exists in many assemblers with which we compared in this study. As shown in Table <xref rid="Tab3" ref-type="table">3</xref>, if a genome can not be assembled by Clover, the genome has the high probability that it can not be assembled by other assemblers we used in this study.</p>
    </sec>
    <sec id="Sec17">
      <title>Future works</title>
      <p id="Par59">We leave the parallelization of program as a future work that will further improve the performance of Clover. Besides, we leave the exploration of other possible clustering algorithms to further improve Clover as another future work.</p>
    </sec>
  </sec>
  <sec id="Sec18">
    <title>Conclusions</title>
    <p id="Par60">In this study, we developed a new clustering-oriented de novo assembler, called Clover, that integrates the flexibility of the overlap-layout-consensus approach on clustering <italic>k</italic>-mers and the efficiency of the de Bruijn graph method, with which we improve the robustness with respect to sequencing error especially using large <italic>k</italic>-mers. We discovered the effect of our clustering approach that not only improves the assembly result but also accelerates the assembly process by simplifying analysis on the <italic>Leptospira shermani</italic> assembly. The evaluation of Clover on GAGE datasets finally shows that it achieves a superior assembly quality in terms of corrected N50 and E-size while remaining a significantly competitive in run time.</p>
  </sec>
  <sec id="Sec19">
    <title>Availability and requirements</title>
    <p id="Par61"><italic>Project name</italic> Clover.</p>
    <p id="Par62">
      <italic>Project home page</italic>
      <ext-link ext-link-type="uri" xlink:href="https://oz.nthu.edu.tw/~d9562563/">https://oz.nthu.edu.tw/~d9562563/</ext-link>
    </p>
    <p id="Par63"><italic>Operating system(s)</italic> Linux.</p>
    <p id="Par64"><italic>Programming language</italic> C, Python and Cython.</p>
    <p id="Par65"><italic>Other requirements</italic> Python-devel to develop Python extensions.</p>
    <p id="Par66"><italic>License</italic> GNU GPL2.</p>
    <p id="Par67"><italic>Any restrictions to use by non-academics</italic> None.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec20">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="12859_2020_3788_MOESM1_ESM.zip">
            <label>Additional file 1</label>
            <caption>
              <p>Clover source code for Linux. Please refer to ‘Installation of Clover’.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="12859_2020_3788_MOESM2_ESM.docx">
            <label>Additional file 2</label>
            <caption>
              <p>Datasets and Installation of Clover. GAGE dataset list and locations, and build Clover’s executing and programming environments.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM3">
          <media xlink:href="12859_2020_3788_MOESM3_ESM.docx">
            <label>Additional file 3</label>
            <caption>
              <p>Section S1—<italic>Leptospira shermani</italic> assembly statistics results. Section S2—Clover assembly statistics results. Clover output screen text.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM4">
          <media xlink:href="12859_2020_3788_MOESM4_ESM.doc">
            <label>Additional file 4</label>
            <caption>
              <p> Table S1—Memory requirements (GB) of k versus p correlation on <italic>Leptospira shermani</italic> assembly. Table S2—Sensitivity comparison of different minimum overlapping lengths on <italic>Rhodobacter sphaeroides</italic> assembly. Supplemental analysis of Clover.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>ABySS</term>
        <def>
          <p id="Par4">Assembly by short sequences</p>
        </def>
      </def-item>
      <def-item>
        <term>bp</term>
        <def>
          <p id="Par5">Base pairs</p>
        </def>
      </def-item>
      <def-item>
        <term>CABOG</term>
        <def>
          <p id="Par6">Celera assembler with the best overlap graph</p>
        </def>
      </def-item>
      <def-item>
        <term>Clover</term>
        <def>
          <p id="Par7">Clustering-oriented de novo assembler</p>
        </def>
      </def-item>
      <def-item>
        <term>DNA</term>
        <def>
          <p id="Par8">Deoxyribonucleic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>E-size</term>
        <def>
          <p id="Par9">Expected size</p>
        </def>
      </def-item>
      <def-item>
        <term>GAGE</term>
        <def>
          <p id="Par10">Genome assembly gold-standard evaluation</p>
        </def>
      </def-item>
      <def-item>
        <term>GC-content</term>
        <def>
          <p id="Par11">Guanine-cytosine content</p>
        </def>
      </def-item>
      <def-item>
        <term>kb</term>
        <def>
          <p id="Par12">Kilo base pairs</p>
        </def>
      </def-item>
      <def-item>
        <term>Mb</term>
        <def>
          <p id="Par13">Mega base pairs</p>
        </def>
      </def-item>
      <def-item>
        <term>MSR-CA</term>
        <def>
          <p id="Par14">Maryland super-read celera assembler</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par15">Next-generation sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>PCR</term>
        <def>
          <p id="Par16">Polymerase chain reaction</p>
        </def>
      </def-item>
      <def-item>
        <term>rRNA</term>
        <def>
          <p id="Par17">Ribosomal ribonucleic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>SGA</term>
        <def>
          <p id="Par18">String graphs assembler</p>
        </def>
      </def-item>
      <def-item>
        <term>SOAPdenovo</term>
        <def>
          <p id="Par19">Short oligonucleotide analysis package de novo</p>
        </def>
      </def-item>
      <def-item>
        <term>SPAdes</term>
        <def>
          <p id="Par20">St. Petersburg genome assembler</p>
        </def>
      </def-item>
      <def-item>
        <term>tRNA</term>
        <def>
          <p id="Par21">Transfer ribonucleic acid</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p><bold>Supplementary information</bold> accompanies this paper at 10.1186/s12859-020-03788-9.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors appreciate the Ministry of Science and Technology of Taiwan for funding this study and three anonymous reviewers for their constructive comments.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors' contributions</title>
    <p>CYT and MFH: research conception and design; MFH: software development and performance improvement; CLL and MFH: manuscript preparation; CYT and CLL: final approval. All authors read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>The publication costs of this paper were funded by Ministry of Science and Technology of Taiwan under grant MOST 106-2221-E-126-008.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The evaluation datasets used during the current study are available in the <ext-link ext-link-type="uri" xlink:href="https://gage.cbcb.umd.edu/data/">https://gage.cbcb.umd.edu/data/</ext-link>. The source code of Clover is available at <ext-link ext-link-type="uri" xlink:href="https://oz.nthu.edu.tw/~d9562563/src.html">https://oz.nthu.edu.tw/~d9562563/src.html</ext-link>.</p>
  </notes>
  <notes id="FPar1">
    <title>Ethics approval and consent to participate</title>
    <p id="Par68">Not applicable.</p>
  </notes>
  <notes id="FPar2">
    <title>Consent for publication</title>
    <p id="Par69">Not applicable.</p>
  </notes>
  <notes id="FPar3" notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par70">The authors declare that they have no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shendure</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Ji</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Next-generation DNA sequencing</article-title>
        <source>Nat Biotechnol</source>
        <year>2008</year>
        <volume>26</volume>
        <fpage>1135</fpage>
        <lpage>1145</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt1486</pub-id>
        <pub-id pub-id-type="pmid">18846087</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hawkins</surname>
            <given-names>RD</given-names>
          </name>
          <name>
            <surname>Hon</surname>
            <given-names>GC</given-names>
          </name>
          <name>
            <surname>Ren</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Next-generation genomics: an integrative approach</article-title>
        <source>Nat Rev Genet</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>476</fpage>
        <lpage>486</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg2795</pub-id>
        <pub-id pub-id-type="pmid">20531367</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zerbino</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Birney</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Velvet: algorithms for de novo short read assembly using de Bruijn graphs</article-title>
        <source>Genome Res</source>
        <year>2008</year>
        <volume>18</volume>
        <fpage>821</fpage>
        <lpage>829</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.074492.107</pub-id>
        <pub-id pub-id-type="pmid">18349386</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kelley</surname>
            <given-names>DR</given-names>
          </name>
          <name>
            <surname>Schatz</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Quake: quality-aware detection and correction of sequencing errors</article-title>
        <source>Genome Biol</source>
        <year>2010</year>
        <volume>11</volume>
        <fpage>R116</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2010-11-11-r116</pub-id>
        <pub-id pub-id-type="pmid">21114842</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Ruan</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Qian</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Fang</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Shi</surname>
            <given-names>Z</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>De novo assembly of human genomes with massively parallel short read sequencing</article-title>
        <source>Genome Res</source>
        <year>2010</year>
        <volume>20</volume>
        <fpage>265</fpage>
        <lpage>272</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.097261.109</pub-id>
        <pub-id pub-id-type="pmid">20019144</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Zimin</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Puiu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Magoc</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>GAGE: a critical evaluation of genome assemblies and assembly algorithms</article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>22</volume>
        <fpage>557</fpage>
        <lpage>567</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.131383.111</pub-id>
        <pub-id pub-id-type="pmid">22147368</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Wong</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Jackman</surname>
            <given-names>SD</given-names>
          </name>
          <name>
            <surname>Schein</surname>
            <given-names>JE</given-names>
          </name>
          <name>
            <surname>Jones</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Birol</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>ABySS: a parallel assembler for short read sequence data</article-title>
        <source>Genome Res</source>
        <year>2009</year>
        <volume>19</volume>
        <fpage>1117</fpage>
        <lpage>1123</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.089532.108</pub-id>
        <pub-id pub-id-type="pmid">19251739</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Bambus 2: scaffolding metagenomes</article-title>
        <source>Bioinformatics</source>
        <year>2011</year>
        <volume>27</volume>
        <issue>21</issue>
        <fpage>2964</fpage>
        <lpage>2971</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr520</pub-id>
        <pub-id pub-id-type="pmid">21926123</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Miller</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Venter</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Walenz</surname>
            <given-names>BP</given-names>
          </name>
          <name>
            <surname>Brownley</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Aggressive assembly of pyrosequencing reads with mates</article-title>
        <source>Bioinformatics</source>
        <year>2008</year>
        <volume>24</volume>
        <issue>24</issue>
        <fpage>2818</fpage>
        <lpage>2824</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btn548</pub-id>
        <pub-id pub-id-type="pmid">18952627</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zimin</surname>
            <given-names>AV</given-names>
          </name>
          <name>
            <surname>Marçais</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Puiu</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>The MaSuRCA genome assembler</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>21</issue>
        <fpage>2669</fpage>
        <lpage>2677</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt476</pub-id>
        <pub-id pub-id-type="pmid">23990416</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Simpson</surname>
            <given-names>JT</given-names>
          </name>
          <name>
            <surname>Durbin</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Efficient de novo assembly of large genomes using compressed data structures</article-title>
        <source>Genome Res</source>
        <year>2012</year>
        <volume>22</volume>
        <fpage>549</fpage>
        <lpage>556</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.126953.111</pub-id>
        <pub-id pub-id-type="pmid">22156294</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bankevich</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Nurk</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Antipov</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Dvorkin</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Kulikov</surname>
            <given-names>AS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SPAdes: a new genome assembly algorithm and its applications to single-cell sequencing</article-title>
        <source>J Comput Biol</source>
        <year>2012</year>
        <volume>19</volume>
        <issue>5</issue>
        <fpage>455</fpage>
        <lpage>477</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2012.0021</pub-id>
        <pub-id pub-id-type="pmid">22506599</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shukla</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Kislow</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Briska</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Henkhaus</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Dykes</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Optical mapping reveals a large genetic inversion between two methicillin-resistant <italic>Staphylococcus aureus</italic> strains</article-title>
        <source>J Bacteriol</source>
        <year>2009</year>
        <volume>191</volume>
        <issue>18</issue>
        <fpage>5717</fpage>
        <lpage>5723</lpage>
        <pub-id pub-id-type="doi">10.1128/JB.00325-09</pub-id>
        <pub-id pub-id-type="pmid">19542272</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liou</surname>
            <given-names>ML</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>CC</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>CW</given-names>
          </name>
          <name>
            <surname>Hsieh</surname>
            <given-names>MF</given-names>
          </name>
          <name>
            <surname>Chang</surname>
            <given-names>KC</given-names>
          </name>
          <name>
            <surname>Kuo</surname>
            <given-names>HY</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Genome sequence of <italic>Acinetobacter baumannii</italic> TYTH-1</article-title>
        <source>J Bacteriol</source>
        <year>2012</year>
        <volume>194</volume>
        <issue>24</issue>
        <fpage>6974</fpage>
        <pub-id pub-id-type="doi">10.1128/JB.01860-12</pub-id>
        <pub-id pub-id-type="pmid">23209228</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chen</surname>
            <given-names>YT</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>HL</given-names>
          </name>
          <name>
            <surname>Shia</surname>
            <given-names>WC</given-names>
          </name>
          <name>
            <surname>Hsu</surname>
            <given-names>FR</given-names>
          </name>
          <name>
            <surname>Ken</surname>
            <given-names>CF</given-names>
          </name>
          <name>
            <surname>Tsao</surname>
            <given-names>YM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Whole-genome sequencing and identification of <italic>Morganella morganii</italic> KT pathogenicity-related genes</article-title>
        <source>BMC Genomics</source>
        <year>2012</year>
        <volume>13</volume>
        <issue>Suppl 7</issue>
        <fpage>S4</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2164-13-S7-S4</pub-id>
      </element-citation>
    </ref>
  </ref-list>
</back>

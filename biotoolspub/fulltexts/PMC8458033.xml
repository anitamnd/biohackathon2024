<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Publishing DTD v1.1 20151215//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-journalpublishing1.dtd?>
<?SourceDTD.Version 1.1?>
<?ConverterInfo.XSLTName jats2jats3.xsl?>
<?ConverterInfo.Version 1?>
<?properties open_access?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Gigascience</journal-id>
    <journal-id journal-id-type="iso-abbrev">Gigascience</journal-id>
    <journal-id journal-id-type="publisher-id">gigascience</journal-id>
    <journal-title-group>
      <journal-title>GigaScience</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2047-217X</issn>
    <publisher>
      <publisher-name>Oxford University Press</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">8458033</article-id>
    <article-id pub-id-type="doi">10.1093/gigascience/giab065</article-id>
    <article-id pub-id-type="publisher-id">giab065</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Technical Note</subject>
      </subj-group>
      <subj-group subj-group-type="category-taxonomy-collection">
        <subject>AcademicSubjects/SCI00960</subject>
        <subject>AcademicSubjects/SCI02254</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SimFFPE and FilterFFPE: improving structural variant calling in FFPE samples</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-4281-8017</contrib-id>
        <name>
          <surname>Wei</surname>
          <given-names>Lanying</given-names>
        </name>
        <!--lanying.wei@uni-muenster.de-->
        <aff><institution>Institute of Medical Informatics, University of Münster</institution>, Münster 48149, <country country="DE">Germany</country></aff>
        <xref rid="cor1" ref-type="corresp"/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0001-9740-0788</contrib-id>
        <name>
          <surname>Dugas</surname>
          <given-names>Martin</given-names>
        </name>
        <aff><institution>Institute of Medical Informatics, University of Münster</institution>, Münster 48149, <country country="DE">Germany</country></aff>
        <aff><institution>Institute of Medical Informatics, Heidelberg University Hospital</institution>, Heidelberg 69120, <country country="DE">Germany</country></aff>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">https://orcid.org/0000-0002-5011-0641</contrib-id>
        <name>
          <surname>Sandmann</surname>
          <given-names>Sarah</given-names>
        </name>
        <aff><institution>Institute of Medical Informatics, University of Münster</institution>, Münster 48149, <country country="DE">Germany</country></aff>
      </contrib>
    </contrib-group>
    <author-notes>
      <corresp id="cor1"><bold>Correspondence address</bold>. Lanying Wei, Institute of Medical Informatics, University of Münster, Albert-Schweitzer-Campus 1, Gebäude A11, Münster 48149, Germany. E-mail: <email>lanying.wei@uni-muenster.de</email></corresp>
    </author-notes>
    <pub-date pub-type="epub" iso-8601-date="2021-09-22">
      <day>22</day>
      <month>9</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="collection">
      <month>9</month>
      <year>2021</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>22</day>
      <month>9</month>
      <year>2021</year>
    </pub-date>
    <volume>10</volume>
    <issue>9</issue>
    <elocation-id>giab065</elocation-id>
    <history>
      <date date-type="received">
        <day>20</day>
        <month>4</month>
        <year>2021</year>
      </date>
      <date date-type="rev-recd">
        <day>19</day>
        <month>7</month>
        <year>2021</year>
      </date>
      <date date-type="accepted">
        <day>06</day>
        <month>9</month>
        <year>2021</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2021. Published by Oxford University Press GigaScience.</copyright-statement>
      <copyright-year>2021</copyright-year>
      <license>
        <ali:license_ref xmlns:ali="http://www.niso.org/schemas/ali/1.0/" specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link xmlns:xlink="http://www.w3.org/1999/xlink" ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">https://creativecommons.org/licenses/by/4.0/</ext-link>), which permits unrestricted reuse, distribution, and reproduction in any medium, provided the original work is properly cited.</license-p>
      </license>
    </permissions>
    <self-uri xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065.pdf"/>
    <abstract>
      <title>Abstract</title>
      <sec id="abs1">
        <title>Background</title>
        <p>Artifact chimeric reads are enriched in next-generation sequencing data generated from formalin-fixed paraffin-embedded (FFPE) samples. Previous work indicated that these reads are characterized by erroneous split-read support that is interpreted as evidence of structural variants. Thus, a large number of false-positive structural variants are detected. To our knowledge, no tool is currently available to specifically call or filter structural variants in FFPE samples. To overcome this gap, we developed 2 R packages: SimFFPE and FilterFFPE.</p>
      </sec>
      <sec id="abs2">
        <title>Results</title>
        <p>SimFFPE is a read simulator, specifically designed for next-generation sequencing data from FFPE samples. A mixture of characteristic artifact chimeric reads, as well as normal reads, is generated. FilterFFPE is a filtration algorithm, removing artifact chimeric reads from sequencing data while keeping real chimeric reads. To evaluate the performance of FilterFFPE, we performed structural variant calling with 3 common tools (Delly, Lumpy, and Manta) with and without prior filtration with FilterFFPE. After applying FilterFFPE, the mean positive predictive value improved from 0.27 to 0.48 in simulated samples and from 0.11 to 0.27 in real samples, while sensitivity remained basically unchanged or even slightly increased.</p>
      </sec>
      <sec id="abs3">
        <title>Conclusions</title>
        <p>FilterFFPE improves the performance of SV calling in FFPE samples. It was validated by analysis of simulated and real data.</p>
      </sec>
    </abstract>
    <kwd-group kwd-group-type="keywords">
      <kwd>FFPE</kwd>
      <kwd>next-generation sequencing</kwd>
      <kwd>artifact removal</kwd>
      <kwd>structural variant calling</kwd>
    </kwd-group>
    <counts>
      <page-count count="12"/>
    </counts>
  </article-meta>
</front>
<body>
  <sec sec-type="intro" id="sec1">
    <title>Background</title>
    <p>For decades, formalin fixation and paraffin embedding (FFPE) has been widely used to prepare and preserve biopsy specimens [<xref rid="bib1" ref-type="bibr">1</xref>]. FFPE tissues preserve morphological and cellular details and provide a method for long-term storage at room temperature. These advantages make FFPE tissues the most common sources of archived clinical material: it is estimated that &gt;400 million FFPE samples are currently available, many of which have corresponding clinical records, including diagnoses, treatment options, and drug responses [<xref rid="bib1" ref-type="bibr">1</xref>]. Furthermore, rare tumors are most often stored as FFPE samples [<xref rid="bib2" ref-type="bibr">2</xref>]. Therefore, FFPE samples provide a common and valuable source for medical research.</p>
    <p>Next-generation sequencing (NGS) plays an important role in medical research. It allows us to investigate entire genomes, uncover the molecular characteristics of diseases, and provide insights into therapies. However, formalin fixation can result in fragmented, degraded, protein cross-linked DNA, introducing false-positive results to NGS data analysis [<xref rid="bib3" ref-type="bibr">3</xref>]. The interpretation of NGS data strongly relies on bioinformatics tools; therefore, to analyze FFPE samples, these tools need to be optimized to minimize the number of false-positive or false-negative results.</p>
    <p>NGS can be used to detect genomic variants of different scales: single-nucleotide variants (SNVs), short insertions/deletions, and structural variants (SVs), including copy number variants (CNVs). So far, studies on FFPE-specific artifacts have been focusing on false-positive SNVs and only a few on CNVs [<xref rid="bib3" ref-type="bibr">3</xref>]. When performing variant calling on FFPE samples, we observed a large number of false-positive SVs. However, to our knowledge no study has yet considered filtration of these calls. Artifact chimeric reads (ACRs) are known to be enriched in FFPE samples [<xref rid="bib4" ref-type="bibr">4</xref>] and are likely leading to false-positive SV calls. It is hypothesized that these ACRs are derived from the binding of single-stranded DNA (ssDNA) fragments [<xref rid="bib4" ref-type="bibr">4</xref>]. The proportion of ssDNA is much higher in FFPE samples than in fresh frozen (FF) samples because double-stranded DNA (ds-DNA) is denatured owing to the high temperature used in the deparaffinization and reverse cross-linking steps for DNA extraction from FFPE samples [<xref rid="bib4" ref-type="bibr">4</xref>, <xref rid="bib5" ref-type="bibr">5</xref>]. These ssDNAs may randomly self-assemble if short reverse complementary (SRC) regions exist. During the end-repair step of library construction, T4 DNA polymerase removes the 3′ overhangs and fills in the 5′ overhangs of the binding product [<xref rid="bib4" ref-type="bibr">4</xref>], thereby producing artifact chimeric ds-DNA, which eventually leads to false-positive SV calls (see illustration in <xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S1</xref>).</p>
    <p>To evaluate and improve the performance of SV calling algorithms in FFPE samples, ground truth data are needed. However, publicly available real-world FFPE data sets with matched FF samples are scarce. Furthermore, to our knowledge, no experimental validation of SV candidates is available for these data sets. Therefore, we simulated data with known biological truth and performed expert-based validation of SV calls for 2 real data sets with FFPE and matched FF samples.</p>
    <p>Aiming at improving SV calling performance in FFPE samples, we defined the following research objectives: (i) To develop an NGS read simulator that can specifically simulate ACRs in FFPE samples; the simulated reads should be as realistic as possible. (ii) To develop a tool that successfully removes ACRs while keeping non-artifact chimeric reads resulting from real SVs. (iii) To benchmark existing SV callers by using simulated as well as real NGS data sets resulting from FFPE samples, and to evaluate the effect of ACR removal on SV calling.</p>
  </sec>
  <sec sec-type="methods" id="sec2">
    <title>Methods</title>
    <sec id="sec2-1">
      <title>Data sets</title>
      <sec id="sec2-1-1">
        <title>Real data sets</title>
        <p>Two real-world data sets were analyzed in this study. Both contain whole-exome sequencing (WES) data of FFPE and matched FF samples publicly available at the European Nucleotide Archive (<xref rid="sup10" ref-type="supplementary-material">Supplementary Table S1</xref>). The first data set contains 13 FFPE breast tumor samples and 13 corresponding FF samples (Accession No. SRP044740). The second data set contains 5 FFPE samples with unspecified tumor type and 4 corresponding FF samples (Accession No. PRJNA301548; note: 2 FFPE samples belong to the same patient).</p>
      </sec>
      <sec id="sec2-1-2">
        <title>Simulated data sets</title>
        <p>The real data available to us are all WES data; however, the ideal data for SV calling are whole-genome sequencing (WGS) data with sufficient read length. Therefore, to complement the available real data, we generated simulated data that are more optimal for SV calling (mimicking WGS data with 150 bp read length). To generate simulated data sets, we first simulated 400 non-overlapping SVs with varying lengths (1–10 kb; 100 duplications, 100 deletions, 100 inversions, and 100 translocations) on chromosome 12 of genome assembly hg19 using RSVSim [<xref rid="bib6" ref-type="bibr">6</xref>]. Next, we applied SimFFPE (algorithm described in section “Simulating ACRs with SimFFPE”) to the mutated, as well as the original, chr12 sequence to generate simulated FFPE NGS reads that cover the whole chromosome. Notably, the 100 translocations were simulated as large insertions of random segments from other chromosomes. To evaluate the effect of FilterFFPE (algorithm described in section “Filtering ACRs with FilterFFPE”) on SV calling, we generated 3 simulated data sets (see Table <xref rid="tbl1" ref-type="table">1</xref>). Altogether, 41 samples were simulated.</p>
        <table-wrap position="float" id="tbl1">
          <label>Table 1.</label>
          <caption>
            <p>Characteristics of the simulated data sets</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th rowspan="1" colspan="1">Name</th>
                <th align="center" rowspan="1" colspan="1">n</th>
                <th align="center" rowspan="1" colspan="1">Coverage (×)</th>
                <th align="center" rowspan="1" colspan="1">SV frequency (%)</th>
                <th align="center" rowspan="1" colspan="1">Proportion of ACFs (%)</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">Sim1</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">10–100</td>
                <td rowspan="1" colspan="1">50</td>
                <td rowspan="1" colspan="1">10</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Sim2</td>
                <td rowspan="1" colspan="1">10</td>
                <td rowspan="1" colspan="1">50</td>
                <td rowspan="1" colspan="1">10–100</td>
                <td rowspan="1" colspan="1">10</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Sim3</td>
                <td rowspan="1" colspan="1">21</td>
                <td rowspan="1" colspan="1">50</td>
                <td rowspan="1" colspan="1">50</td>
                <td rowspan="1" colspan="1">0–20</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
    </sec>
    <sec id="sec2-2">
      <title>Simulating ACRs with SimFFPE</title>
      <p>The general workflow of SimFFPE is shown in Fig. <xref rid="fig1" ref-type="fig">1</xref>.</p>
      <fig position="float" id="fig1">
        <label>Figure 1</label>
        <caption>
          <p>: Workflow of SimFFPE. The algorithm generates normal and artifact chimeric fragments and simulates read sequences from these fragments. Phred scores are simulated on the basis of read position. A FASTQ file is generated as output.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig1" position="float"/>
      </fig>
      <p>The whole simulation can be split into 2 parts—the simulation of normal fragments and the simulation of artifact chimeric fragments (ACFs). While normal fragments are simulated directly from the reference genome, the simulation of ACFs is more complex. Details of ACF simulation are described in the subsection “Simulating ACFs.” We observed normally distributed fragment lengths in real data; therefore, we used a normal distribution to simulate fragment lengths. This observation is in line with several other publications on NGS simulators (e.g., [<xref rid="bib7" ref-type="bibr">7</xref>, <xref rid="bib8" ref-type="bibr">8</xref>]).</p>
      <p>Simulations for WGS, as well as WES and targeted sequencing data, are supported. For WES and targeted data, we uniformly model the capture efficiency. Simulated read sequences are generated from one end (single-end sequencing) or both ends of the fragments (paired-end sequencing). We refer to the reads generated from ACFs as ACRs. It should be noted that well-known errors in NGS data, such as base substitutions and indels, are not the focus of this work; therefore, SimFFPE performs only simple random error simulations.</p>
      <p>Phred quality scores are correlated with base position in the reads [<xref rid="bib8" ref-type="bibr">8</xref>]. Accordingly, SimFFPE estimates positional Phred score profiles from real NGS data for simulations. We provide 2 exemplary positional Phred score profiles for read lengths of 100 and 150 bp.</p>
      <sec id="sec2-2-1">
        <title>Simulating ACFs</title>
        <p>To simulate ACFs, the essential task is to find genome sequence pairs with SRC regions and combine them to form double-stranded fragments. A graphic representation of this process is available in <xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S1</xref>.</p>
        <p>To locate candidate SRC pairs for binding, we randomly select short (on average 6 bp) genome sequences (referred to as “seed sequences”) and find their reverse complementary sequences (referred to as “target sequences”). The obvious match—target sequences at the same genomic location on the reverse strand—are excluded.</p>
        <p>For a given seed sequence, there can be millions of candidate target sequences. If 1 target sequence were randomly selected, this could result in simulated data widely deviating from real data. To simulate data as realistically as possible, an elaborate set of characteristics is considered when simulating SRC pairs. Among others, these characteristics include SRC region length distribution, location (whether from the same chromosome and, if so, whether from adjacent chromosomal regions), distance, and strand (Fig. <xref rid="fig2" ref-type="fig">2</xref>). All default distributions and proportions of SimFFPE are based on the characteristics of the 18 real FFPE samples from the 2 aforementioned public data sets (<xref rid="sup10" ref-type="supplementary-material">Supplementary Section S3</xref>). Based on the SRC region length distribution in these samples, we decided to use a lognormal distribution (μ = 1.8, σ = 0.55) to approximate the true distribution. More information about the relevant parameters can be found in the vignettes and reference manual of the SimFFPE package [<xref rid="bib24_1631654138240" ref-type="bibr">9</xref>].</p>
        <fig position="float" id="fig2">
          <label>Figure 2</label>
          <caption>
            <p>: Aspects that are considered when simulating short reverse complementary (SRC) pairs. The proportions and distribution models shown in parentheses are SimFFPE’s default settings, which are determined on the basis of 18 real FFPE samples from 2 public data sets.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig2" position="float"/>
        </fig>
        <p>Because only 1 target sequence of a seed is finally selected, computational costs are greatly reduced by SimFFPE identifying target sequences of a seed only within a small region. More specifically, we partition the genome into small windows (5 kb). Target sequences are searched in a random window or within the same window of the seed. The resulting SRC pairs and ACFs are called between-window SRC pairs and distant ACFs, and within-window SRC pairs and adjacent ACFs, respectively.</p>
        <p>The reason to differentiate between these 2 cases is as follows: we observed that in real FFPE samples, ∼27% (43% on the same chromosome × 63% from adjacent chromosomal regions) of ACFs are derived from the binding of adjacent (within 5 kb) SRC pairs (<xref rid="sup10" ref-type="supplementary-material">Supplementary Figs S5 and S6</xref>). Owing to the small window size and the sheer human genome size (&gt;3 Gb), such a relatively high proportion indicates a high chance of binding between 2 adjacent ssDNAs. It seems reasonable to assume that 2 ssDNAs originating from adjacent genomic regions are, on average, physically closer to each other and thus have a higher chance of binding. Accordingly, we divide the ACF simulation into 2 parts: the adjacent ACF simulation and the distant ACF simulation. For both, several demands have to be met.</p>
        <p>The most important considerations for adjacent ACF simulation are as follows (details in <xref rid="sup10" ref-type="supplementary-material">Supplementary Figs S7–S9</xref>): (i) In real data, we observed a relatively high proportion of adjacent ACFs resulting from genomically close SRC pairs (50–200 bp). Analyzing the distribution of the distance between the combined SRC pair in real data, we decided to choose a lognormal distribution (μ = 4.7, σ = 0.35) for simulation because this closely resembles real data. (ii) One SRC pair may originate from different strands of DNA or from the same strand. The probabilities for these 2 cases are not equal. We observed a higher proportion of same-stranded (65%) versus different-stranded (35%) SRC pairs in adjacent ACFs in real data. A corresponding parameter (sameStrandProp; default = 0.65) was set. It seems possible that a long ssDNA molecule might form a hairpin structure and generate chimeric ds-DNA. This might explain the higher proportion of same-stranded SRC pairs in adjacent ACFs. (iii) In some real samples, we observed that some read pairs from adjacent ACFs both align to the same genomic locus (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S9</xref>). We found out that this occurs when enzymatic fragmentation is used in library preparation. Enzymes are able to recognize and cut at specific sites of the genome. As shown in Fig. <xref rid="fig3" ref-type="fig">3</xref>, an adjacent ACF can be a repeat or an inverted repeat of a DNA sequence. Thus, enzymatic fragmentation leads to both ends of the ACF being cut at the same genomic locus. If the ACF is an inverted repeat and is enzymatically fragmented (with both sides ending at the same genomic position), then the read pair are sequenced from the same starting point and proceed with the same sequence (until the end of the repeat unit). As a result, this read pair is mapped to the same genomic locus. Accordingly, SimFFPE supports the simulation of enzymatic fragmented adjacent ACFs. When enzymatic fragmentation is simulated, SimFFPE cuts the adjacent ACF (if it is a repeat) at a random site in one end, and cuts the other end at the same genomic locus of the repeated sequence. For simplicity, we did not model the specific cutting sites of enzymes, but we ensured that the fragment length distribution was still well simulated.</p>
        <fig position="float" id="fig3">
          <label>Figure 3</label>
          <caption>
            <p>: Examples of forming a repeat and an inverted repeat by adjacent ssDNA combination. ACF: artifact chimeric fragment; SRC: short reverse complementary.</p>
          </caption>
          <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig3" position="float"/>
        </fig>
        <p>For distant ACF simulation, some additional aspects have to be taken into account: (i) Analysis of the real data sets indicates that strand usage for the formation of distant ACFs is almost equal. (ii) In real data sets, we observed a common feature across the whole genome: within some small genomic regions (1-2 kb), there were more ACRs originating from distant ACFs compared to other regions. These are referred to as “spikes” (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S9</xref>). To simulate these spikes, we use a β-distribution (α = β = 0.5) to model the amount of distant ACRs in each small region. Thus, the simulation enriches distant ACRs in some of these small regions.</p>
        <p>A summary of the differences in simulating adjacent and distant ACFs is provided in Table <xref rid="tbl2" ref-type="table">2</xref>.</p>
        <table-wrap position="float" id="tbl2">
          <label>Table 2.</label>
          <caption>
            <p>Differences in simulating adjacent and distant ACFs</p>
          </caption>
          <table frame="hsides" rules="groups">
            <thead>
              <tr>
                <th rowspan="1" colspan="1"> Parameter</th>
                <th align="center" rowspan="1" colspan="1">Adjacent ACF</th>
                <th align="center" rowspan="1" colspan="1">Distant ACF</th>
              </tr>
            </thead>
            <tbody>
              <tr>
                <td rowspan="1" colspan="1">SRC pair</td>
                <td rowspan="1" colspan="1">Within-window</td>
                <td rowspan="1" colspan="1">Between-window</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Strand usage of the SRC pair</td>
                <td rowspan="1" colspan="1">Unequal</td>
                <td rowspan="1" colspan="1">Equal</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Distance between the SRC pair</td>
                <td rowspan="1" colspan="1">Lognormal</td>
                <td rowspan="1" colspan="1">Random</td>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Enzymatic fragmentation simulation</td>
                <td rowspan="1" colspan="1">Applicable</td>
                <td rowspan="1" colspan="1"/>
              </tr>
              <tr>
                <td rowspan="1" colspan="1">Spike simulation</td>
                <td rowspan="1" colspan="1"/>
                <td rowspan="1" colspan="1">Applicable</td>
              </tr>
            </tbody>
          </table>
        </table-wrap>
      </sec>
    </sec>
    <sec id="sec2-3">
      <title>Filtering ACRs with FilterFFPE</title>
      <p>The workflow of FilterFFPE is shown in Fig. <xref rid="fig4" ref-type="fig">4</xref>. To filter ACRs while preserving informative chimeric reads resulting from true SVs, it is important to identify features that can help to distinguish between these 2 types of chimeric reads. As long as sequencing depth and SV frequency are not too low, &gt;1 or even dozens of chimeric fragments can cover the same breakpoints of the SV event (Fig. <xref rid="fig4" ref-type="fig">4B</xref>). However, because the binding of 2 ssDNAs is a rather random event, there is little chance that the breakpoint of an ACF is also present in other ACFs or in chimeric reads from real SV events (note that for paired-end sequencing, the read pair from an ACF can share the same breakpoints, but both reads belong to the same fragment). Therefore, an apparent filtering strategy is to evaluate the number of reads sharing the same breakpoint: if n or fewer chimeric reads (default: n = 2 for paired-end sequencing) share the same breakpoints, these reads are recognized as potential ACRs. Notably, chimeric reads covering true SVs may also be identified as potential ACRs at low sequencing depths or low SV frequencies. Therefore, we need an additional feature to validate these potential ACRs. This feature is the presence of an SRC region. According to the ACF formation mechanism, only the presence of an SRC region causes 2 ssDNAs to bind and form an ACF. Therefore, FilterFFPE analyzes whether an SRC region is present next to the breakpoint of an ACR candidate.</p>
      <fig position="float" id="fig4">
        <label>Figure 4</label>
        <caption>
          <p>: Filtration with FilterFFPE. (A) The workflow of FilterFFPE to filter out artifact chimeric reads (ACRs). Values of n and m are user-definable. (B) Breakpoint of a true deletion. (C) Breakpoint of an ACR pair. SRC: short reverse complementary.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig4" position="float"/>
      </fig>
      <p>The detection of an SRC region is based on the main characteristics of ACRs. ACRs contain 2 genome segments: 1 from the seed sequence and 1 from the complementary target. Thus, there exist (at least) 2 alignments, both containing soft-clipped bases. In an ACR, towards the end of the mapped sequences, a short region should be mapped in both alignments. This region can be identified as the SRC region that links 2 ssDNAs forming the ACF. First, FilterFFPE identifies potential ACRs. Second, the presence and lengths of SRC regions within these ACR candidates is analyzed. Only reads with plausible SRC regions (SRC region length ≥ m, with default m = 1 to remove as many ACRs as possible) are removed by FilterFFPE. This step helps not to exclude real chimeric reads resulting from low-coverage regions or low-frequency SVs by mistake, i.e., preserving sensitivity. However, sequencing noise in ACRs may harm the correct detection of SRC regions. Thus, it is possible that some ACRs are falsely categorized as real chimeric reads, i.e., positive predictive value (PPV) is decreased. Therefore, this second filtration step is optional.</p>
      <p>After determining the reads to be excluded, FilterFFPE generates a filtered and indexed BAM file, as well as a text file containing the names of the excluded reads.</p>
    </sec>
    <sec id="sec2-4">
      <title>Performance evaluation</title>
      <p>The steps taken to evaluate SV calling performance in real and simulated FFPE samples with and without application of FilterFFPE are shown in Fig. <xref rid="fig5" ref-type="fig">5</xref> (see <xref rid="sup10" ref-type="supplementary-material">Supplementary Section S4</xref> for information on sequence alignment, duplicate removal, downsampling, and so forth). Three SV callers, Delly (v0.7.9) [<xref rid="bib9" ref-type="bibr">10</xref>], Lumpy (v0.3.1) [<xref rid="bib10" ref-type="bibr">11</xref>], and Manta (v1.6.0) [<xref rid="bib11" ref-type="bibr">12</xref>], were used for SV calling. These tools have performed best in recent benchmarking studies [<xref rid="bib12" ref-type="bibr">13–15</xref>].</p>
      <fig position="float" id="fig5">
        <label>Figure 5</label>
        <caption>
          <p>: Performance evaluation of SV callers Delly, Lumpy, and Manta with and without application of FilterFFPE considering real and simulated FFPE samples. Steps performed in case of (A) simulated data and (B) real data are visualized. del: deletions; dup: duplications; FF: fresh frozen; FFPE: formalin-fixed paraffin-embedded; inv: inversions; SV: structural variant; trans: translocations.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig5" position="float"/>
      </fig>
      <p>For real data sets, each pair of matched FFPE and FF samples was downsampled to the same size. Furthermore, only reads within exonic regions with sufficient coverage were used for SV detection (exonic regions with mean coverage ≥30× in both samples of the pair). PPV, sensitivity, and F1-score were used to evaluate each tool's SV calling performance with and without application of FilterFFPE.</p>
      <p>Different SV callers can detect the same breakpoint with minor shifts in the genomic location. To determine whether an SV call indicates a true-positive SV and whether it is shared between 2 samples, a maximum shift of ±5 bp is allowed to identify consistent breakpoints. This threshold was determined on the basis of a previous evaluation on different SV callers’ breakpoint resolution by Gong et al. [<xref rid="bib13" ref-type="bibr">14</xref>].</p>
      <p>Because data on experimental validation of SV candidates in real samples were not available, we performed expert-based validation by 2 independent experts in the field of SV detection (see <xref rid="sup10" ref-type="supplementary-material">Supplementary Section S5</xref> for characteristics used to determine true-positive SVs). To facilitate manual inspection, we divided SV calls in FFPE samples (before and after FilterFFPE’s application) into 4 categories: (1) SV calls with high probability of being true-positive SVs (1,041 SV calls). These are shared SV calls with matched FF samples (without application of FilterFFPE in FF samples). (2) SV calls with reduced probability of being true-positive calls (2,282 SV calls). These are non-shared SV calls with reliable support (shared with ≥1 non-matched FF sample, or having in total ≥10 reads of split- and/or paired-read support). The criteria for reliable support were determined on the basis of prior manual inspection of 500 randomly selected non-shared SV calls. (3) SV calls with low probability of being true-positive calls (1,952 SV calls). These are non-shared SV calls that lacked reliable support (do not match a call in any FF sample and have &lt;10 supporting reads) but showed characteristics that we identified in categories 1 and 2 as being typical for true-positive variants (matching a call that is labeled as true positive in any other FFPE sample, or overlapping with a gene that is characterized by a high number of SV calls). (4) SV calls with high probability of being false-positive calls (the remaining 44,877 SV calls).</p>
      <p>We manually inspected all 5,275 SV calls in categories 1–3. The SV calls in the fourth category were automatically labeled as false-positive calls because they lack characteristics of potentially true variants. To ensure that this automatic classification was reliable, we randomly selected 2,000 of the 44,877 calls and performed manual inspection. In total, 1,996 of these 2,000 calls are false-positive calls; the remaining 4 are ambiguous (and remain so after application of FilterFFPE; for details see <xref rid="sup10" ref-type="supplementary-material">Supplementary Section S5</xref>). We therefore consider it plausible to automatically label the whole category as false-positive calls. In total, we labeled 1,506 SV calls as true-positive and 47,026 as false-positive calls. In addition, 1,620 SV calls could not be classified clearly and were thus excluded from further evaluation. The number of SV calls with information on initial category and final judgment is shown in <xref rid="sup10" ref-type="supplementary-material">Supplementary Table S2</xref>.</p>
    </sec>
  </sec>
  <sec sec-type="results" id="sec3">
    <title>Results</title>
    <sec id="sec3-1">
      <title>Simulating realistic FFPE data using SimFFPE</title>
      <p>A comparison of SimFFPE to existing NGS data simulators is provided in Table <xref rid="tbl3" ref-type="table">3</xref>. The other tools mainly serve to simulate read-level sequencing noise. In contrast, SimFFPE additionally simulates ACFs that are characteristic of FFPE samples. These ACFs are fragment-level noise that can lead to false-positive SV calls.</p>
      <table-wrap position="float" id="tbl3">
        <label>Table 3.</label>
        <caption>
          <p>Comparison of SimFFPE to existing NGS data simulators</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th rowspan="1" colspan="1">Name</th>
              <th align="center" rowspan="1" colspan="1">Installation</th>
              <th align="center" rowspan="1" colspan="1">Language</th>
              <th align="center" rowspan="1" colspan="1">OS</th>
              <th align="center" rowspan="1" colspan="1">Sequencing type</th>
              <th align="center" rowspan="1" colspan="1">Read type</th>
              <th align="center" rowspan="1" colspan="1">Noise type</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td rowspan="1" colspan="1">SimFFPE</td>
              <td rowspan="1" colspan="1">Bioconductor, Bioconda</td>
              <td rowspan="1" colspan="1">R</td>
              <td rowspan="1" colspan="1">L, M, W</td>
              <td rowspan="1" colspan="1">WGS, WES</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">ACR, SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">ART [<xref rid="bib7" ref-type="bibr">7</xref>]</td>
              <td rowspan="1" colspan="1">Bioconda, manual</td>
              <td rowspan="1" colspan="1">C++, Perl</td>
              <td rowspan="1" colspan="1">L, M, W</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">BEAR [<xref rid="bib15" ref-type="bibr">16</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">Python, Perl</td>
              <td rowspan="1" colspan="1">L</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">FASTQSim [<xref rid="bib16" ref-type="bibr">17</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">Bash, Python</td>
              <td rowspan="1" colspan="1">L</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">SE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">GemSim [<xref rid="bib17" ref-type="bibr">18</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">Python</td>
              <td rowspan="1" colspan="1">L, M, W</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">Grinder [<xref rid="bib18" ref-type="bibr">19</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">Perl</td>
              <td rowspan="1" colspan="1">L, M, W</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">InSilicoSeq [<xref rid="bib19" ref-type="bibr">20</xref>]</td>
              <td rowspan="1" colspan="1">Bioconda, manual</td>
              <td rowspan="1" colspan="1">Python</td>
              <td rowspan="1" colspan="1">L, M, W</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">NeSSM [<xref rid="bib20" ref-type="bibr">21</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">Python</td>
              <td rowspan="1" colspan="1">L</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">pIRS [<xref rid="bib21" ref-type="bibr">22</xref>]</td>
              <td rowspan="1" colspan="1">Bioconda, manual</td>
              <td rowspan="1" colspan="1">C++, Perl</td>
              <td rowspan="1" colspan="1">L</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">SimuSCoP [<xref rid="bib8" ref-type="bibr">8</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">C++</td>
              <td rowspan="1" colspan="1">L</td>
              <td rowspan="1" colspan="1">WGS, WES</td>
              <td rowspan="1" colspan="1">SE, PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
            <tr>
              <td rowspan="1" colspan="1">SInC [<xref rid="bib22" ref-type="bibr">23</xref>]</td>
              <td rowspan="1" colspan="1">Manual</td>
              <td rowspan="1" colspan="1">C++</td>
              <td rowspan="1" colspan="1">L</td>
              <td rowspan="1" colspan="1">WGS</td>
              <td rowspan="1" colspan="1">PE</td>
              <td rowspan="1" colspan="1">SeqE</td>
            </tr>
          </tbody>
        </table>
        <table-wrap-foot>
          <fn id="req-163165769973132810">
            <p>ACR: artifact chimeric read; L: Linux; M: MacOS; OS: operating system; PE: paired-end sequencing; SE: single-end sequencing; SeqE: sequencing error; W: Windows; WES: whole-exome sequencing; WGS: whole-genome sequencing.</p>
          </fn>
        </table-wrap-foot>
      </table-wrap>
      <p>Figure <xref rid="fig6" ref-type="fig">6</xref> shows exemplary aligned reads generated by SimFFPE. For comparison, data from a real sample (FFPE and matching FF) are displayed. SimFFPE generates ACRs that closely resemble those highly noisy reads in real FFPE samples. In contrast, existing simulators such as ART [<xref rid="bib7" ref-type="bibr">7</xref>] only produce normal reads similar to those in FF samples (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S9</xref>). We further compared the proportion of abnormally paired reads in real and simulated samples (<xref rid="sup10" ref-type="supplementary-material">Supplementary Section S7</xref>). The proportion of abnormally paired reads is higher in real FFPE samples than in FF samples. The distribution of this proportion in simulated data set Sim3 (with varying artifact levels) is very close to that of real FFPE samples.</p>
      <fig position="float" id="fig6">
        <label>Figure 6</label>
        <caption>
          <p>: Exemplary alignment of reads simulated by SimFFPE in comparison to real reads in matching FF and FFPE samples. Soft-clipped bases are shown. Alignments are grouped by pair orientation. Pair orientation is presented in terms of read-strand: left (L) vs right (R), and first read vs second read of a pair. The color (not gray) of the alignment indicates an abnormal pair orientation, or a different chromosome that the paired read mapped to. Alignments with normal pair orientation are colored in grey. FF: fresh frozen; FFPE: formalin-fixed paraffin-embedded.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig6" position="float"/>
      </fig>
    </sec>
    <sec id="sec3-2">
      <title>Filtering FFPE-specific ACRs with FilterFFPE</title>
      <p>On all real and simulated samples, we performed filtration with FilterFFPE (using default setting with 2-step filtration; for results on filtration with FilterFFPE applying the first step only, see <xref rid="sup10" ref-type="supplementary-material">Supplementary Sections S8–S11</xref>).</p>
      <p>For each simulated sample, excluded reads could be divided into ACRs and normal reads (tagged by SimFFPE when generating the data) and counted separately (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S13</xref>). As a result, in 40 of 41 simulated samples (1 sample without any ACFs was simulated), 99.73–100% of the removed reads were ACRs (mean: 99.96%, see <xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S14</xref>, results with 2-step filtration). These excluded ACRs account for 97.72–97.94% (mean: 97.82%) of all chimeric reads derived from ACFs (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S16</xref>). Reads obtained from ACFs can also be non-chimeric (without supplementary alignment): these include reads that do not cover breakpoints or cover only a few bases of 1 of the 2 original sequences (see <xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S15</xref> for illustration). These non-chimeric reads do not lead to artifact split-read support and are thus not removed by FilterFFPE. Therefore, the percentage of excluded ACRs based on all reads from ACFs is 65.63% on average (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S17</xref>).</p>
      <p>In real data sets, we applied FilterFFPE to both FFPE and matched FF samples. The percentage of filtered reads ranged from 0.33% to 9.2% in FFPE samples (median: 2.5%). In contrast, only 0.015–0.33% (median: 0.10%) were filtered in FF samples. These results match our previous observation that ACRs are enriched in FFPE samples compared to FF samples. It should be noted that FF samples are expected to contain some ACRs because any heating step during sequencing can result in DNA denaturation and thus ACR generation. Nevertheless, because the percentage of ACRs in FF samples is low, the effect of these ACRs on SV calling is usually negligible (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S23</xref>).</p>
    </sec>
    <sec id="sec3-3">
      <title>Evaluation of SV calling with and without previous filtration with FilterFFPE</title>
      <p>Figure <xref rid="fig7" ref-type="fig">7</xref> shows the performance of the 3 SV calling tools Delly, Lumpy, and Manta on the 3 simulated data sets with and without previous application of FilterFFPE. Results show that FilterFFPE substantially improves PPV of SV calling, considering a diverse set of scenarios, while only affecting sensitivity in a few exceptional cases. Thus, an overall improvement in F1-score is observed.</p>
      <fig position="float" id="fig7">
        <label>Figure 7</label>
        <caption>
          <p>: FilterFFPE increases positive predictive value (PPV) of SV calling in simulated samples while keeping sensitivity unchanged. Lumpy performs best—with and without application of FilterFFPE.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig7" position="float"/>
      </fig>
      <p>As simulated coverage or ACF proportion increases, the number of ACRs increases; therefore, we expected and also observe an increasing number of false-positive SV calls and decreasing PPV. SV frequency has no effect on the number of ACRs, and thus, we did not expect any effect on the number of false-positive SV calls. It can be observed that both Manta and Delly are characterized by stable PPV at different SV frequencies. Interestingly, Lumpy shows a decrease in PPV with increasing SV frequency. Detailed evaluation of the SV calling results revealed that Lumpy generated several SV candidates for real SVs with different breakpoints. Some of these SV candidates were recognized as false-positive calls because the detected breakpoints were not close enough to the real ones (±5 bp).</p>
      <p>After removing ACRs with FilterFFPE, PPVs of all 3 tools increase in all our simulated data sets: Manta shows the largest increase (on average from 0.06 ± 0.15 [mean ± SD] to 0.45 ± 0.21), followed by Delly (0.10 ± 0.18 to 0.29 ± 0.22) and Lumpy (0.65 ± 0.13 to 0.71 ± 0.12).</p>
      <p>Sensitivity of the 3 tools is stable across all simulated data sets, except for low coverage (≤30×) or low SV frequencies (≤30%). In these extreme cases, it is difficult to distinguish between real chimeric reads and ACRs. Therefore, application of FilterFFPE slightly reduces sensitivity (on average from 0.83 ± 0.13 to 0.78 ± 0.17; 6 samples). For all other samples, sensitivity even increases marginally after using FilterFFPE (on average from 0.94 ± 0.05 to 0.95 ± 0.05). Compared to the other tools, Delly is characterized by lowest sensitivity—before and after filtration with FilterFFPE. This is due to the fact that Delly did not detect translocations with precise genomic location: 61 of 100 simulated translocations could not be detected accurately by Delly (often with a deviation of 30–300 bp at the breakpoint).</p>
      <p>It should be mentioned that these results are based on all reported SV calls. In addition, every tool has diverse internal categories to characterize SV calls of different qualities, including "precise" vs "imprecise" calls (whether breakpoints can be precisely located) and/or "pass" vs "non-pass" calls (whether certain quality conditions are met). Interestingly, with the combined use of these categories and FilterFFPE, the best performance is observed in case of FilterFFPE+Delly, considering only precise calls. Delly’s precise calls have a mean F1-score of 0.71 ± 0.14 across the 3 simulated data sets and reach 0.91 ± 0.06 with FilterFFPE. More details can be found in <xref rid="sup10" ref-type="supplementary-material">Supplementary Figs S18–S21</xref>.</p>
      <p>Figure <xref rid="fig8" ref-type="fig">8</xref> shows the influence of FilterFFPE on SV calling in real FFPE samples. Similar to the results in simulated data sets, application of FilterFFPE leads to a considerable improvement in PPV and a minor improvement in sensitivity: filtration with FilterFFPE increases mean PPV in case of Delly from 0.14 ± 0.14 to 0.26 ± 0.19, from 0.06 ± 0.05 to 0.25 ± 0.21 for Manta, and from 0.14 ± 0.17 to 0.29 ± 0.25 for Lumpy; mean sensitivity increases from 0.62 ± 0.23 to 0.65 ± 0.16 for Delly, from 0.44 ± 0.24 to 0.46 ± 0.23 for Manta, and remains 0.46 for Lumpy. For Delly and Manta, more true-positive calls were exclusively detected after application of FilterFFPE (<xref rid="sup10" ref-type="supplementary-material">Supplementary Tables S3 and S4</xref>), thus resulting in increased sensitivity. Considering the tools’ internal categories, the best overall performance can be observed—just like in the case of simulated data—for FilterFFPE+Delly, considering only precise calls. Delly’s precise calls have a mean F1-score of 0.45 ± 0.28 in real FFPE samples and reach 0.58 ± 0.24 with FilterFFPE. More details can be found in <xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S22</xref>.</p>
      <fig position="float" id="fig8">
        <label>Figure 8</label>
        <caption>
          <p>: FilterFFPE considerably increases positive predictive value (PPV) of SV calling in real FFPE samples, while slightly improving sensitivity. PPV and sensitivity of SV calling (A) before and (B) after application of FilterFFPE are shown. Each dot represents 1 FFPE sample. The upper and lower hinges of the box plot correspond to the third and the first quartiles, respectively. Box midline represents median value. Whisker extends to the largest or smallest value that is within 1.5 * interquartile range of the upper or lower hinge. Square in the box plot indicates mean value. Altogether, Lumpy is characterized by highest PPV and Delly by highest sensitivity.</p>
        </caption>
        <graphic xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065fig8" position="float"/>
      </fig>
      <p>To further validate the performance of FilterFFPE, we also calculated the number of reported SV calls in FF samples before and after FilterFFPE’s application (<xref rid="sup10" ref-type="supplementary-material">Supplementary Fig. S23</xref>). Over all 18 real FFPE samples, FilterFFPE reduces the number of reported SV calls by 44% (Delly), 76% (Manta), and 61% (Lumpy). In comparison, the number is reduced by only 0.3% (Delly) and 5% (Manta) and increased by only 0.2% (Lumpy) in matched FF samples.</p>
    </sec>
  </sec>
  <sec sec-type="discussion" id="sec4">
    <title>Discussion</title>
    <p>In this article, we introduce 2 R packages for improved handling of sequencing data generated from FFPE samples: SimFFPE and FilterFFPE. SimFFPE is a novel tool simulating realistic sequencing data from FFPE samples. Simulated data with known biological truth are the prerequisite for, e.g., optimization of variant calling pipelines. Based on the output of SimFFPE we developed and tested a new filtration algorithm for SV calling: FilterFFPE. Results on both simulated and real data show that our filtration algorithm is able to improve PPV without compromising the sensitivity of 3 established SV calling algorithms.</p>
    <p>Despite developing a tool for realistic simulation of FFPE samples, it can be observed that the sensitivity of the 3 SV calling tools Manta, Delly, and Lumpy differed between simulated and real data. These discrepancies were mainly due to technical differences between these data sets: our simulated samples were whole-chromosome sequencing data (mimicking WGS data because they are the ideal material for SV calling) while real samples contained WES data and had a shorter read length (150 bp in simulated samples vs 90 bp in real samples).</p>
    <p>The sensitivity of Lumpy and Manta was much lower for real data than for simulated data. Lumpy uses not only read-pair and split-read support but also read-depth support to identify SV candidates. However, regional coverage fluctuates heavily in WES data. Thus, it can harm read-depth support detection in Lumpy and lead to lower sensitivity. The reduced sensitivity of Manta is likely due to inaccurately detected SV positions. The accuracy of Manta’s local assembly might have been affected by the shorter read length of the real data. Delly showed the lowest sensitivity in simulated data sets but featured the highest in real data. It could be observed that Delly’s imprecise positioning of translocations leads to false-negative calls. In our simulated data, 25% (100 of 400) of all SVs were translocations, but only 2% (7 of 296) in real data.</p>
    <p>Because the purpose of SimFFPE and the type of its simulated noise are different from those of existing simulators, it is difficult to compare SimFFPE with other simulation tools. However, exemplary comparison of simulated and real data in the IGV shows that reads generated by SimFFPE resemble real FFPE samples, while reads generated by other simulation tools resemble real FF samples.</p>
    <p>It can be argued that for real data we do not know biological truth based on validation experiments but just by expert-based review. It is possible that our data contain misclassified variants, i.e., false-negative and false-positive calls. Nevertheless, the classification was based on a detailed scheme and criteria, and we performed careful manual inspection on &gt;5,000 SV calls. Therefore, the effect of misclassified variants on our overall results can be assumed to be negligible.</p>
    <p>Regarding FilterFFPE, the first filtration step may seem very similar to filtering out SV calls with split-read support ≤2. However, these 2 strategies are fundamentally different. Many true SV calls in real samples lack split-read support. For example, in the 18 real FFPE samples, 41% (615 of 1,506) of the true-positive SV calls had no split-read support. This can be related to the fact that real SVs often overlap with homologous sequences and/or sequence repeats [<xref rid="bib6" ref-type="bibr">6</xref>]. These highly repetitive sequences can confound split-read alignment and thus obscure split-read support detection. Short read length and low coverage can also lead to missing split-read support. In addition, split-read support appears to be tool-dependent: for the same SV call we observe varying amounts of split-read support and missing information on how this number is calculated by each tool.</p>
    <p>In real FFPE samples, we observed different levels of artifacts and, thus, variable levels of PPV for SV detection. One possible reason for sample-wise artifact level variation may be different time at high-temperature steps during processing of FFPE samples in the laboratory. For instance, larger paraffin blocks require longer time for deparaffinization, thus leading to a higher proportion of denatured DNA and a higher number of ACRs. Besides, long-term storage of FFPE samples leads to more fragmented DNA, which is more vulnerable to denaturation at high temperature. We also observed varying sensitivities for real samples, which could be explained by different levels of sample coverage.</p>
    <p>The mechanism of the ACR generation in FFPE samples was first described in detail by Haile et al. [<xref rid="bib4" ref-type="bibr">4</xref>]. They used S1 nuclease to remove ssDNAs before sequencing. Their method serves as a laboratory aid, while FilterFFPE serves as a bioinformatic method to deal with these ACRs. Using S1 nuclease has the advantage of preventing ACR generation from the source. It has the ability to degrade large amounts of ssDNA, especially in highly noisy FFPE samples. However, this can be unfavorable for low-frequency variant detection, especially considering that the FFPE material is often very precious. Moreover, the majority of already sequenced FFPE samples have not been treated with S1 nuclease. And currently, to our knowledge, S1 nuclease treatment is not yet widely adopted in the standard protocol for sequencing FFPE samples.</p>
  </sec>
  <sec sec-type="conclusions" id="sec5">
    <title>Conclusion</title>
    <p>SV calling in FFPE samples is challenging owing to the presence of ACRs leading to a large number of false-positive calls. To facilitate future development of FFPE-specific algorithms, we developed SimFFPE. It is the first simulation tool generating realistic NGS data from FFPE samples, simulating ACRs as well as normal reads. In addition, we developed the filtration algorithm FilterFFPE. Analyses on simulated as well as real data show that our algorithm successfully removes ACRs while keeping real chimeric reads. Thus, FilterFFPE improves PPV considerably without affecting sensitivity.</p>
  </sec>
  <sec id="sec6">
    <title>Availability of Source Code and Requirements</title>
    <p>Project name: SimFFPE and FilterFFPE</p>
    <p>Project home page: <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://bioconductor.org/packages/release/bioc/html/SimFFPE.html" ext-link-type="uri">https://bioconductor.org/packages/release/bioc/html/SimFFPE.html</ext-link>; <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://bioconductor.org/packages/release/bioc/html/FilterFFPE.html" ext-link-type="uri">https://bioconductor.org/packages/release/bioc/html/FilterFFPE.html</ext-link></p>
    <p>Operating system: Platform independent</p>
    <p>Programming language: R</p>
    <p>Other requirements: None</p>
    <p>License: LGPL-3</p>
    <p><ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scicrunch.org/resolver/RRID:SCR_021085" ext-link-type="uri">RRID:SCR_021085</ext-link>; <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://scicrunch.org/resolver/RRID:SCR_021086" ext-link-type="uri">RRID:SCR_021086</ext-link></p>
  </sec>
  <sec sec-type="data-availability" id="sec7">
    <title>Data Availability</title>
    <p>The 2 real data sets analyzed during the present study are available in the European Nucleotide Archive repository at <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://www.ebi.ac.uk/ena/browser/home" ext-link-type="uri">https://www.ebi.ac.uk/ena/browser/home</ext-link> and can be accessed with accession Nos. SRP044740 and PRJNA301548.</p>
    <p>The 3 simulated data sets can be generated with SimFFPE and RSVSim as described.</p>
    <p>Additional supporting files including FilterFFPE’s outputs and tabular data are available from the <italic toggle="yes">GigaScience</italic> GigaDB database [<xref rid="bib23" ref-type="bibr">24</xref>].</p>
  </sec>
  <sec id="sec8">
    <title>Additional Files</title>
    <p><bold>Supplementary Section S1</bold>. Mechanism of ACF formation.</p>
    <p><bold>Supplementary Section S2</bold>. Real data sets.</p>
    <p><bold>Supplementary Section S3</bold>. Distributions and proportions for simulation.</p>
    <p><bold>Supplementary Section S4</bold>. BAM file processing.</p>
    <p><bold>Supplementary Section S5</bold>. Manual inspection.</p>
    <p><bold>Supplementary Section S6</bold>. IGV view of NGS data.</p>
    <p><bold>Supplementary Section S7</bold>. Proportion of abnormally paired reads.</p>
    <p><bold>Supplementary Section S8</bold>. FilterFFPE excludes FFPE-specific ACRs.</p>
    <p><bold>Supplementary Section S9</bold>. Evaluation of SV calling in simulated data sets.</p>
    <p><bold>Supplementary Section S10</bold>. Evaluation of SV calling in real data sets.</p>
    <p><bold>Supplementary Section S11</bold>. Increased sensitivity after application of FilterFFPE.</p>
    <p><bold>Supplementary Figure S1</bold>. Example of seed- and target sequences used to generate an SRC region in an ACF.</p>
    <p><bold>Supplementary Figure S2</bold>. SRC region length distribution in real FF samples.</p>
    <p><bold>Supplementary Figure S3</bold>. SRC region length distribution in real FFPE samples.</p>
    <p><bold>Supplementary Figure S4</bold>. SRC region length distribution in an exemplary sample simulated with SimFFPE.</p>
    <p><bold>Supplementary Figure S5</bold>. Proportion of SRC pairs with two ssDNA molecules originating from the same chromosome.</p>
    <p><bold>Supplementary Figure S6</bold>. Proportion of adjacent SRC pairs among same chromosomal SRC pairs.</p>
    <p><bold>Supplementary Figure S7</bold>. Proportion of same strand SRC pairs among adjacent SRC pairs.</p>
    <p><bold>Supplementary Figure S8</bold>. Cumulative distribution of the original genomic distance between two ssDNA molecules of adjacent SRC pairs.</p>
    <p><bold>Supplementary Figure S9</bold>. Exemplary alignment of reads simulated by SimFFPE and ART in comparison to real reads in an FFPE sample</p>
    <p><bold>Supplementary Figure S10</bold>. FilterFFPE removes artifact chimeric reads while keeping real chimeric reads.</p>
    <p><bold>Supplementary Figure S11</bold>. Proportion of improperly paired reads.</p>
    <p><bold>Supplementary Figure S12</bold>. Proportion of read pairs mapping to different chromosomes.</p>
    <p><bold>Supplementary Figure S13</bold>. FilterFFPE excludes FFPE-specific ACRs.</p>
    <p><bold>Supplementary Figure S14</bold>. Proportion of ACRs in excluded reads.</p>
    <p><bold>Supplementary Figure S15</bold>. Examples of chimeric and non-chimeric reads deriving from artifact chimeric fragments.</p>
    <p><bold>Supplementary Figure S16</bold>. Sensitivity of FilterFFPE excluding ACRs based on chimeric reads (with supplementary alignment) from ACFs.</p>
    <p><bold>Supplementary Figure S17</bold>. Sensitivity of FilterFFPE excluding ACRs based on all reads (chimeric + non-chimeric) from ACFs.</p>
    <p><bold>Supplementary Figure S18</bold>. SV calling performance for each SV call category in simulated data sets with and without FilterFFPE’s application (two filtration steps applied).</p>
    <p><bold>Supplementary Figure S19</bold>. SV calling performance for each SV call category in simulated data sets with and without applying FilterFFPE’s first filtering step only.</p>
    <p><bold>Supplementary Figure S20</bold>. SV calling performance for 6 simulated samples with low coverage or low SV frequency.</p>
    <p><bold>Supplementary Figure S21</bold>. SV calling performance for 35 simulated samples with high coverage and high SV frequency.</p>
    <p><bold>Supplementary Figure S22</bold>. SV calling performance for real data with (one- or two-step filtration) and without FilterFFPE’s application.</p>
    <p><bold>Supplementary Figure S23</bold>. Relative change in the number of SV calls in real data after application of FilterFFPE (one-step and two-step filtration).</p>
    <p><bold>Supplementary Table S1</bold>. Information on real data sets.</p>
    <p><bold>Supplementary Table S2</bold>. Number of SV calls with information on initial category and final judgment.</p>
    <p><bold>Supplementary Table S3</bold>. Number of true calls that are exclusively called before and after the application of FilterFFPE with one-step filtration.</p>
    <p><bold>Supplementary Table S4</bold>. Number of true calls that are exclusively called before and after the application of FilterFFPE with two-step filtration.</p>
  </sec>
  <sec id="sec9">
    <title>Abbreviations</title>
    <p>ACF: artifact chimeric fragment; ACR: artifact chimeric read; bp: base pairs; CNV: copy number variant; dsDNA: double-stranded DNA; FF: fresh frozen; FFPE: formalin-fixed and paraffin-embedded; Gb: gigabase pairs; IGV: Integrative Genomics Viewer; indel: short insertion/deletion; kb: kilobase pairs; NGS: next-generation sequencing; PCR: polymerase chain reaction; PPV: positive predictive value; SNV: single-nucleotide variant; SD: standard deviation; SRC: short reverse complementary; ssDNA: single-stranded DNA; SV: structural variant; WES: whole-exome sequencing; WGS: whole-genome sequencing.</p>
  </sec>
  <sec id="h1content1631648640454">
    <title>Competing Interests</title>
    <p>The authors declare that they have no competing interests.</p>
  </sec>
  <sec id="h1content1631664647086">
    <title>Authors' Contributions</title>
    <p>L.W. analyzed the data, developed SimFFPE and FilterFFPE, and wrote the manuscript. S.S. and M.D. guided the project and provided ideas for improvement during the development of the 2 tools, as well as suggestions on the manuscript. All authors read and approved the final version of the manuscript.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Material</title>
    <supplementary-material id="sup1" position="float" content-type="local-data">
      <label>giab065_GIGA-D-21-00120_Original_Submission</label>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_giga-d-21-00120_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup2" position="float" content-type="local-data">
      <label>giab065_GIGA-D-21-00120_Revision_1</label>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_giga-d-21-00120_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup3" position="float" content-type="local-data">
      <label>giab065_GIGA-D-21-00120_Revision_2</label>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_giga-d-21-00120_revision_2.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup4" position="float" content-type="local-data">
      <label>giab065_Response_to_Reviewer_Comments_Original_Submission</label>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_response_to_reviewer_comments_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup5" position="float" content-type="local-data">
      <label>giab065_Response_to_Reviewer_Comments_Revision_1</label>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_response_to_reviewer_comments_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup6" position="float" content-type="local-data">
      <label>giab065_Reviewer_1_Report_Original_Submission</label>
      <caption>
        <p>Michael Linderman -- 5/19/2021 Reviewed</p>
      </caption>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_reviewer_1_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup7" position="float" content-type="local-data">
      <label>giab065_Reviewer_1_Report_Revision_1</label>
      <caption>
        <p>Michael Linderman -- 8/4/2021 Reviewed</p>
      </caption>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_reviewer_1_report_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup8" position="float" content-type="local-data">
      <label>giab065_Reviewer_2_Report_Original_Submission</label>
      <caption>
        <p>Binay Panda -- 6/16/2021 Reviewed</p>
      </caption>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_reviewer_2_report_original_submission.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup9" position="float" content-type="local-data">
      <label>giab065_Reviewer_2_Report_Revision_1</label>
      <caption>
        <p>Binay Panda -- 8/12/2021 Reviewed</p>
      </caption>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_reviewer_2_report_revision_1.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
    <supplementary-material id="sup10" position="float" content-type="local-data">
      <label>giab065_Supplemental_File</label>
      <media xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="giab065_supplemental_file.pdf">
        <caption>
          <p>Click here for additional data file.</p>
        </caption>
      </media>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack id="ack1">
    <title>ACKNOWLEDGEMENTS</title>
    <p>We thank Dr. Marius Wöste for supporting the evaluation of SV calls.</p>
  </ack>
  <ref-list id="ref1">
    <title>References</title>
    <ref id="bib1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Sah</surname><given-names>S</given-names></string-name>, <string-name><surname>Chen</surname><given-names>L</given-names></string-name>, <string-name><surname>Houghton</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Functional DNA quantification guides accurate next-generation sequencing mutation detection in formalin-fixed, paraffin-embedded tumor biopsies</article-title>. <source>Genome Med</source>. <year>2013</year>; <volume>5</volume>(<issue>8</issue>):<fpage>77</fpage>.<pub-id pub-id-type="pmid">24001039</pub-id></mixed-citation>
    </ref>
    <ref id="bib2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wimmer</surname><given-names>I</given-names></string-name>, <string-name><surname>Tröscher</surname><given-names>A</given-names></string-name>, <string-name><surname>Brunner</surname><given-names>F</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Systematic evaluation of RNA quality, microarray data reliability and pathway analysis in fresh frozen and formalin-fixed paraffin-embedded tissue samples</article-title>. <source>Sci Rep</source>. <year>2018</year>;<volume>8</volume>(<issue>1</issue>):<fpage>6351</fpage>.<pub-id pub-id-type="pmid">29679021</pub-id></mixed-citation>
    </ref>
    <ref id="bib3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Zhang</surname><given-names>P</given-names></string-name>, <string-name><surname>Lehmann</surname><given-names>BD</given-names></string-name>, <string-name><surname>Shyr</surname><given-names>Y</given-names></string-name>, <etal>et al.</etal></person-group><article-title>The utilization of formalin fixed-paraffin-embedded specimens in high throughput genomic studies</article-title>. <source>Int J Genomics</source>. <year>2017</year>;<volume>2017</volume>:<fpage>1926304</fpage>.<pub-id pub-id-type="pmid">28246590</pub-id></mixed-citation>
    </ref>
    <ref id="bib4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Haile</surname><given-names>S</given-names></string-name>, <string-name><surname>Corbett</surname><given-names>R</given-names></string-name>, <string-name><surname>Bilobram</surname><given-names>S</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Sources of erroneous sequences and artifact chimeric reads in next generation sequencing of genomic DNA from formalin-fixed paraffin-embedded samples</article-title>. <source>Nucleic Acids Res</source>. <year>2019</year>;<volume>47</volume>(<issue>2</issue>):<fpage>e12</fpage>.<pub-id pub-id-type="pmid">30418619</pub-id></mixed-citation>
    </ref>
    <ref id="bib5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kerick</surname><given-names>M</given-names></string-name>, <string-name><surname>Isau</surname><given-names>M</given-names></string-name>, <string-name><surname>Timmermann</surname><given-names>B</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Targeted high throughput sequencing in clinical cancer settings: formaldehyde fixed-paraffin embedded (FFPE) tumor tissues, input amount and tumor heterogeneity</article-title>. <source>BMC Med Genomics</source>. <year>2011</year>;<volume>4</volume>:<fpage>68</fpage>.<pub-id pub-id-type="pmid">21958464</pub-id></mixed-citation>
    </ref>
    <ref id="bib6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Bartenhagen</surname><given-names>C</given-names></string-name>, <string-name><surname>Dugas</surname><given-names>M</given-names></string-name></person-group>. <article-title>RSVSim: an R/Bioconductor package for the simulation of structural variations</article-title>. <source>Bioinformatics</source>. <year>2013</year>;<volume>29</volume>(<issue>13</issue>):<fpage>1679</fpage>–<lpage>81</lpage>.<pub-id pub-id-type="pmid">23620362</pub-id></mixed-citation>
    </ref>
    <ref id="bib7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Huang</surname><given-names>W</given-names></string-name>, <string-name><surname>Li</surname><given-names>L</given-names></string-name>, <string-name><surname>Myers</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>ART: a next-generation sequencing read simulator</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>(<issue>4</issue>):<fpage>593</fpage>–<lpage>4</lpage>.<pub-id pub-id-type="pmid">22199392</pub-id></mixed-citation>
    </ref>
    <ref id="bib8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Yu</surname><given-names>Z</given-names></string-name>, <string-name><surname>Du</surname><given-names>F</given-names></string-name>, <string-name><surname>Ban</surname><given-names>R</given-names></string-name>, <etal>et al.</etal></person-group><article-title>SimuSCoP: reliably simulate Illumina sequencing data based on position and context dependent profiles</article-title>. <source>BMC Bioinformatics</source>. <year>2020</year>;<volume>21</volume>(<issue>1</issue>):<fpage>331</fpage>.<pub-id pub-id-type="pmid">32703148</pub-id></mixed-citation>
    </ref>
    <ref id="bib24_1631654138240">
      <label>9.</label>
      <mixed-citation publication-type="journal"><comment>SimFFPE</comment>. <ext-link xmlns:xlink="http://www.w3.org/1999/xlink" xlink:href="https://bioconductor.org/packages/release/bioc/html/SimFFPE.html" ext-link-type="uri">https://bioconductor.org/packages/release/bioc/html/SimFFPE.html</ext-link>. <year>Accessed: 12 November 2020</year>.</mixed-citation>
    </ref>
    <ref id="bib9">
      <label>10.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Rausch</surname><given-names>T</given-names></string-name>, <string-name><surname>Zichner</surname><given-names>T</given-names></string-name>, <string-name><surname>Schlattl</surname><given-names>A</given-names></string-name>, <etal>et al.</etal></person-group><article-title>DELLY: structural variant discovery by integrated paired-end and split-read analysis</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>18</volume>(<issue>18</issue>):<fpage>i333</fpage>–<lpage>9</lpage>.</mixed-citation>
    </ref>
    <ref id="bib10">
      <label>11.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Layer</surname><given-names>R</given-names></string-name>, <string-name><surname>Chiang</surname><given-names>C</given-names></string-name>, <string-name><surname>Quinlan</surname><given-names>A</given-names></string-name>, <etal>et al.</etal></person-group><article-title>LUMPY: a probabilistic framework for structural variant discovery</article-title>. <source>Genome Biol</source>. <year>2014</year>;<volume>15</volume>(<issue>6</issue>):<fpage>R84</fpage>.<pub-id pub-id-type="pmid">24970577</pub-id></mixed-citation>
    </ref>
    <ref id="bib11">
      <label>12.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Chen</surname><given-names>X</given-names></string-name>, <string-name><surname>Schulz-Trieglaff</surname><given-names>O</given-names></string-name>, <string-name><surname>Shaw</surname><given-names>R</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Manta: rapid detection of structural variants and indels for germline and cancer sequencing applications</article-title>. <source>Bioinformatics</source>. <year>2016</year>;<volume>32</volume>(<issue>8</issue>):<fpage>1220</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">26647377</pub-id></mixed-citation>
    </ref>
    <ref id="bib12">
      <label>13.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Kosugi</surname><given-names>S</given-names></string-name>, <string-name><surname>Momozawa</surname><given-names>Y</given-names></string-name>, <string-name><surname>Liu</surname><given-names>X</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Comprehensive evaluation of structural variation detection algorithms for whole genome sequencing</article-title>. <source>Genome Biol</source>. <year>2019</year>;<volume>20</volume>(<issue>1</issue>):<fpage>117</fpage>.<pub-id pub-id-type="pmid">31159850</pub-id></mixed-citation>
    </ref>
    <ref id="bib13">
      <label>14.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gong</surname><given-names>T</given-names></string-name>, <string-name><surname>Hayes</surname><given-names>V</given-names></string-name>, <string-name><surname>Chan</surname><given-names>E</given-names></string-name></person-group>. <article-title>Detection of somatic structural variants from short-read next-generation sequencing data</article-title>. <source>Brief Bioinform</source>. <year>2020</year>;<volume>22</volume>(<issue>3</issue>):doi:<pub-id pub-id-type="doi">10.1093/bib/bbaa056</pub-id>.</mixed-citation>
    </ref>
    <ref id="bib14">
      <label>15.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Cameron</surname><given-names>D</given-names></string-name>, <string-name><surname>Di Stefano</surname><given-names>L</given-names></string-name>, <string-name><surname>Papenfuss</surname><given-names>A</given-names></string-name></person-group>. <article-title>Comprehensive evaluation and characterisation of short read general-purpose structural variant calling software</article-title>. <source>Nat Commun</source>. <year>2019</year>;<volume>10</volume>(<issue>1</issue>):<fpage>3240</fpage>.<pub-id pub-id-type="pmid">31324872</pub-id></mixed-citation>
    </ref>
    <ref id="bib15">
      <label>16.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Johnson</surname><given-names>S</given-names></string-name>, <string-name><surname>Trost</surname><given-names>B</given-names></string-name>, <string-name><surname>Long</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>A better sequence-read simulator program for metagenomics</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume>(<issue>Suppl 9</issue>):<fpage>S14</fpage>.</mixed-citation>
    </ref>
    <ref id="bib16">
      <label>17.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Shcherbina</surname><given-names>A</given-names></string-name></person-group>. <article-title>FASTQSim: platform-independent data characterization and in silico read generation for NGS datasets</article-title>. <source>BMC Res Notes</source>. <year>2014</year>;<volume>7</volume>:<fpage>533</fpage>.<pub-id pub-id-type="pmid">25123167</pub-id></mixed-citation>
    </ref>
    <ref id="bib17">
      <label>18.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>McElroy</surname><given-names>KE</given-names></string-name>, <string-name><surname>Luciani</surname><given-names>F</given-names></string-name>, <string-name><surname>Thomas</surname><given-names>T</given-names></string-name></person-group>. <article-title>GemSIM: general, error-model based simulator of next-generation sequencing data</article-title>. <source>BMC Genomics</source>. <year>2012</year>;<volume>13</volume>(<issue>1</issue>):<fpage>74</fpage>.<pub-id pub-id-type="pmid">22336055</pub-id></mixed-citation>
    </ref>
    <ref id="bib18">
      <label>19.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Angly</surname><given-names>F</given-names></string-name>, <string-name><surname>Willner</surname><given-names>D</given-names></string-name>, <string-name><surname>Rohwer</surname><given-names>F</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Grinder: a versatile amplicon and shotgun sequence simulator</article-title>. <source>Nucleic Acids Res</source>. <year>2012</year>;<volume>40</volume>(<issue>12</issue>):<fpage>e94</fpage>.<pub-id pub-id-type="pmid">22434876</pub-id></mixed-citation>
    </ref>
    <ref id="bib19">
      <label>20.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Gourlé</surname><given-names>H</given-names></string-name>, <string-name><surname>Karlsson-Lindsjö</surname><given-names>O</given-names></string-name>, <string-name><surname>Hayer</surname><given-names>J</given-names></string-name>, <etal>et al.</etal></person-group><article-title>Simulating Illumina metagenomic data with InSilicoSeq</article-title>. <source>Bioinformatics</source>. <year>2019</year>;<volume>35</volume>(<issue>3</issue>):<fpage>521</fpage>–<lpage>2</lpage>.<pub-id pub-id-type="pmid">30016412</pub-id></mixed-citation>
    </ref>
    <ref id="bib20">
      <label>21.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Jia</surname><given-names>B</given-names></string-name>, <string-name><surname>Xuan</surname><given-names>L</given-names></string-name>, <string-name><surname>Cai</surname><given-names>K</given-names></string-name>, <etal>et al.</etal></person-group><article-title>NeSSM: a Next-generation Sequencing Simulator for Metagenomics</article-title>. <source>PLoS One</source>. <year>2013</year>;<volume>8</volume>(<issue>10</issue>):<fpage>e75448</fpage>.<pub-id pub-id-type="pmid">24124490</pub-id></mixed-citation>
    </ref>
    <ref id="bib21">
      <label>22.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Hu</surname><given-names>X</given-names></string-name>, <string-name><surname>Yuan</surname><given-names>J</given-names></string-name>, <string-name><surname>Shi</surname><given-names>Y</given-names></string-name>, <etal>et al.</etal></person-group><article-title>pIRS: profile-based Illumina pair-end reads simulator</article-title>. <source>Bioinformatics</source>. <year>2012</year>;<volume>28</volume>(<issue>11</issue>):<fpage>1533</fpage>–<lpage>5</lpage>.<pub-id pub-id-type="pmid">22508794</pub-id></mixed-citation>
    </ref>
    <ref id="bib22">
      <label>23.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Pattnaik</surname><given-names>S</given-names></string-name>, <string-name><surname>Gupta</surname><given-names>S</given-names></string-name>, <string-name><surname>Rao</surname><given-names>A</given-names></string-name>, <etal>et al.</etal></person-group><article-title>SInC: an accurate and fast error-model based simulator for SNPs, Indels and CNVs coupled with a read generator for short-read sequence data</article-title>. <source>BMC Bioinformatics</source>. <year>2014</year>;<volume>15</volume>:<fpage>40</fpage>.<pub-id pub-id-type="pmid">24495296</pub-id></mixed-citation>
    </ref>
    <ref id="bib23">
      <label>24.</label>
      <mixed-citation publication-type="journal"><person-group person-group-type="author"><string-name><surname>Wei</surname><given-names>L</given-names></string-name>, <string-name><surname>Dugas</surname><given-names>M</given-names></string-name>, <string-name><surname>Sandmann</surname><given-names>S</given-names></string-name></person-group>. <article-title>Supporting data for “SimFFPE and FilterFFPE: improving structural variant calling in FFPE samples.”</article-title>. <source>GigaScience Database</source>. <year>2021</year>: <pub-id pub-id-type="doi">10.5524/100924</pub-id>.</mixed-citation>
    </ref>
  </ref-list>
</back>

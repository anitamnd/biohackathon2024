<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//NLM//DTD JATS (Z39.96) Journal Archiving and Interchange DTD v1.0 20120330//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName JATS-archivearticle1.dtd?>
<?SourceDTD.Version 1.0?>
<?ConverterInfo.XSLTName jp2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">APL Bioeng</journal-id>
    <journal-id journal-id-type="iso-abbrev">APL Bioeng</journal-id>
    <journal-id journal-id-type="coden">ABPID9</journal-id>
    <journal-title-group>
      <journal-title>APL Bioengineering</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2473-2877</issn>
    <publisher>
      <publisher-name>AIP Publishing LLC</publisher-name>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6481718</article-id>
    <article-id pub-id-type="doi">10.1063/1.5039473</article-id>
    <article-id pub-id-type="publisher-id">1.5039473</article-id>
    <article-id pub-id-type="publisher-id">011802APB</article-id>
    <article-id pub-id-type="publisher-manuscript">APB17-AR-00053R1</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Articles</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Cell studio: A platform for interactive, 3D graphical simulation of immunological processes</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-3727-9706</contrib-id>
        <name>
          <surname>Liberman</surname>
          <given-names>Asaf</given-names>
        </name>
        <xref ref-type="aff" rid="a1">1</xref>
        <xref ref-type="fn" rid="n1 n2">a),b)</xref>
        <email/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Kario</surname>
          <given-names>Danny</given-names>
        </name>
        <xref ref-type="aff" rid="a1 a2">1,2</xref>
        <xref ref-type="fn" rid="n1 n3">a),c)</xref>
        <email/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Mussel</surname>
          <given-names>Matan</given-names>
        </name>
        <xref ref-type="aff" rid="a3">3</xref>
        <xref ref-type="author-notes" rid="n4">d)</xref>
        <email/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Brill</surname>
          <given-names>Jacob</given-names>
        </name>
        <xref ref-type="aff" rid="a4">4</xref>
        <xref ref-type="author-notes" rid="n5">e)</xref>
        <email/>
      </contrib>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid" authenticated="false">http://orcid.org/0000-0003-4439-0939</contrib-id>
        <name>
          <surname>Buetow</surname>
          <given-names>Kenneth</given-names>
        </name>
        <xref ref-type="aff" rid="a4">4</xref>
        <xref ref-type="author-notes" rid="n6">f)</xref>
        <email/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Efroni</surname>
          <given-names>Sol</given-names>
        </name>
        <xref ref-type="aff" rid="a5">5</xref>
        <xref ref-type="author-notes" rid="n7">g)</xref>
        <email/>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Nevo</surname>
          <given-names>Uri</given-names>
        </name>
        <xref ref-type="aff" rid="a1 a2">1,2</xref>
        <xref ref-type="corresp" rid="cor1">h)</xref>
        <email/>
      </contrib>
      <aff id="a1"><label>1</label><institution>The Iby and Aladar Fleischman Faculty of Engineering, Tel Aviv University</institution>, Tel Aviv 6997801, <country>Israel</country></aff>
      <aff id="a2"><label>2</label><institution>Sagol School of Neuroscience, Tel Aviv University</institution>, Tel Aviv 6997801, <country>Israel</country></aff>
      <aff id="a3"><label>3</label><institution>Physics Department, TU Dortmund University</institution>, Dortmund 44227, <country>Germany</country></aff>
      <aff id="a4"><label>4</label><institution>Arizona State University</institution>, Tempe, Arizona 85281, <country>USA</country></aff>
      <aff id="a5"><label>5</label><institution>The Mina and Everard Goodman Faculty of Life Sciences, Bar Ilan University</institution>, Ramat Gan 52900, <country>Israel</country></aff>
    </contrib-group>
    <author-notes>
      <fn id="n1">
        <label>a)</label>
        <p>A. Liberman and D. Kario contributed equally to this work.</p>
      </fn>
      <fn id="n2">
        <label>b)</label>
        <p>
          <email>asaf.lib@gmail.com</email>
        </p>
      </fn>
      <fn id="n3">
        <label>c)</label>
        <p>
          <email>dannykario@gmail.com</email>
        </p>
      </fn>
      <fn id="n4">
        <label>d)</label>
        <p>
          <email>matanmus@gmail.com</email>
        </p>
      </fn>
      <fn id="n5">
        <label>e)</label>
        <p>
          <email>jacob.Brill@asu.edu</email>
        </p>
      </fn>
      <fn id="n6">
        <label>f)</label>
        <p>
          <email>kenneth.buetow@asu.edu</email>
        </p>
      </fn>
      <fn id="n7">
        <label>g)</label>
        <p>
          <email>solefroni@gmail.com</email>
        </p>
      </fn>
      <corresp id="cor1"><label>h)</label>Author to whom correspondence should be addressed: <email>nevouri@tau.ac.il</email></corresp>
    </author-notes>
    <pub-date pub-type="collection">
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>04</day>
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <!--PMC Release delay is 0 months and 0 days and was based on the epub date.-->
    <pub-date pub-type="epub">
      <day>04</day>
      <month>6</month>
      <year>2018</year>
    </pub-date>
    <volume>2</volume>
    <issue>2</issue>
    <elocation-id seq="1">026107</elocation-id>
    <history>
      <date date-type="received">
        <day>17</day>
        <month>5</month>
        <year>2017</year>
      </date>
      <date date-type="accepted">
        <day>04</day>
        <month>5</month>
        <year>2018</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© 2018 Author(s).</copyright-statement>
      <copyright-year>2018</copyright-year>
      <copyright-holder>Author(s)</copyright-holder>
      <license license-type="ccc">
        <license-p>2473-2877/2018/2(2)/026107/15</license-p>
      </license>
      <license license-type="open">
        <license-p>All article content, except where otherwise noted, is licensed under a Creative Commons Attribution (CC BY) license (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>).</license-p>
      </license>
    </permissions>
    <abstract>
      <p>The field of computer modeling and simulation of biological systems is rapidly advancing, backed by significant progress in the fields of experimentation techniques, computer hardware, and programming software. The result of a simulation may be delivered in several ways, from numerical results, through graphs of the simulated run, to a visualization of the simulation. The vision of an <italic>in-silico</italic> experiment mimicking an <italic>in-vitro</italic> or <italic>in-vivo</italic> experiment as it is viewed under a microscope is appealing but technically demanding and computationally intensive. Here, we report “Cell Studio,” a generic, hybrid platform to simulate an immune microenvironment with biological and biophysical rules. We use game engines—generic programs for game creation which offer ready-made assets and tools—to create a visualized, interactive 3D simulation. We also utilize a scalable architecture that delegates the computational load to a server. The user may view the simulation, move the “camera” around, stop, fast-forward, and rewind it and inject soluble molecules into the extracellular medium at any point in time. During simulation, graphs are created in real time for a broad view of system-wide processes. The model is parametrized using a user-friendly Graphical User Interface (GUI). We show a simple validation simulation and compare its results with those from a “classical” simulation, validated against a “wet” experiment. We believe that interactive, real-time 3D visualization may aid in generating insights from the model and encourage intuition about the immunological scenario.</p>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <named-content content-type="funder_name">Kodesz Foundation</named-content>
        </funding-source>
      </award-group>
      <award-group>
        <funding-source>
          <named-content content-type="funder_name">Sagol School of Neuroscience</named-content>
        </funding-source>
      </award-group>
    </funding-group>
    <counts>
      <page-count count="15"/>
    </counts>
    <custom-meta-group>
      <custom-meta>
        <meta-name>crossmark</meta-name>
        <meta-value/>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="s1">
    <title>INTRODUCTION</title>
    <p>Computer models aim to incorporate multi-scale biological data into comprehensive, dynamic computer software that simulates a biological system. Such models may help in understanding and even predicting the outcome of the modeled biological processes.<xref rid="c1" ref-type="bibr"><sup>1–4</sup></xref> Advance in computer modeling is fueled by both advance in biological experimentation techniques (the so-called “-omics”)<xref rid="c5" ref-type="bibr"><sup>5</sup></xref>—which significantly increase the amount of data acquired in a given experiment—and advance in computer hardware technology—which boosts the resources available to the modeler. Biological models are at the core of Systems Biology, a novel approach to analyzing biological systems as a dynamic whole, which may overcome some of the limitations posed by more reductionist approaches.<xref rid="c2" ref-type="bibr"><sup>2,6–8</sup></xref></p>
  </sec>
  <sec id="s2">
    <title>APPROACHES TO BIOLOGICAL MODELING</title>
    <p>Biological modeling paradigms can be roughly associated with one of the two main categories: mathematical modeling and computational modeling. Mathematical models use mathematical tools, most commonly differential equations, to calculate dynamic relationships between bulk quantities.<xref rid="c9" ref-type="bibr"><sup>9,10</sup></xref> In contrast, computational models use computer algorithms to describe a system, frequently depicting each entity separately.<xref rid="c6" ref-type="bibr"><sup>6,9</sup></xref></p>
    <p>Such is Agent-Based Modeling (ABM), a modeling paradigm which attempts to break down a system into its comprising entities, treating each of them as a separate agent, capable of making its own “decisions,” based on its local environment.<xref rid="c11" ref-type="bibr"><sup>11,12</sup></xref> Biological models may concentrate on different biological scales, from single molecules, through the cellular scale, to the entire organism. “Middle–out” biological simulations, which introduce the cell as the basic unit of function, are naturally well suited to ABM.<xref rid="c5" ref-type="bibr"><sup>5,10</sup></xref> This paradigm enables the assignment of known cellular characteristics to each cell-agent, without the need to assert the systemic impact of cell-cell and cell-lattice interactions. Thus, data obtained from biological experiments, which are otherwise hard to grasp due to their size and level of detail, are incorporated into a model and simulated to be analyzed at the system level. The discrete nature of the simulation makes it possible to track individual cells and follow populations, to observe how mesoscopic entities' actions and interactions lead to macro-level events—a phenomenon referred to as emergent behavior.<xref rid="c9" ref-type="bibr"><sup>9,11,13</sup></xref> A middle-out, cellular-level model may later be extended “down” and “up”—either by adding intra-cellular mechanisms (e.g., signaling pathways) or by adding macroscopic phenomena, at the organ- or entire body-level, respectively, thus creating a multiscale model.<xref rid="c5" ref-type="bibr"><sup>5</sup></xref></p>
  </sec>
  <sec id="s3">
    <title>CURRENTLY AVAILABLE FRAMEWORKS</title>
    <p>In recent years, several teams have built general purpose simulation systems, software frameworks that offer basic tools that should serve as building blocks to allow researchers to create an <italic>ad-hoc</italic> simulation for a particular biological case. These simulation systems can be classified, apart from their aforementioned modeling paradigm, by their modelled biological scale: from the intracellular level to the complete organism level. Intracellular scale simulations model different phenomena occurring inside a cell or on its surface, concentrating on a single cell per simulation run. Standout examples of intracellular, general purpose systems are Virtual Cell,<xref rid="c14" ref-type="bibr"><sup>14,15</sup></xref> BIOCHAM,<xref rid="c16" ref-type="bibr"><sup>16</sup></xref> BioNetGen,<xref rid="c17" ref-type="bibr"><sup>17</sup></xref> Cellular Dynamic Simulator (CDS),<xref rid="c18" ref-type="bibr"><sup>18</sup></xref> Smoldyn,<xref rid="c19" ref-type="bibr"><sup>19,20</sup></xref> and COPASI,<xref rid="c21" ref-type="bibr"><sup>21</sup></xref> which simulate different intracellular processes using different modeling paradigms. Some systems listed above may be used either standalone or incorporated into other systems (e.g., Virtual Cell incorporates Smoldyn and COPASI) to serve as an algorithmic solution for a certain component in the process. For further information, we refer to the reader to reviews of such systems.<xref rid="c22" ref-type="bibr"><sup>22,23</sup></xref></p>
    <p>Cellular level simulation systems model the mesoscopic scale—cells and extracellular matrix, often along with the extracellular fluid and soluble molecules. These systems commonly adopt the ABM paradigm for its natural fit to modelling cells. Using ABM facilitates both the development of the modeling system—since Object Oriented Programming, the software architecture equivalent to agent-based modeling, is a prominent software engineering pattern—and the researcher's work of creating the model—since assigning properties and abilities to each cell population separately emulates the biological study process more closely. In addition, this modeling method may alleviate the need for advanced mathematical or algorithmic knowledge required to create a model.<xref rid="c24" ref-type="bibr"><sup>24–27</sup></xref></p>
    <p>Examples of cellular level, agent based, general purpose simulation systems include the Multiscale Systems Immunology Project (MSI),<xref rid="c28" ref-type="bibr"><sup>28</sup></xref> EPISIM,<xref rid="c29" ref-type="bibr"><sup>29,30</sup></xref> LINDSAY,<xref rid="c31" ref-type="bibr"><sup>31</sup></xref> SimuLife,<xref rid="c32" ref-type="bibr"><sup>32</sup></xref> FLAME,<xref rid="c33" ref-type="bibr"><sup>33–35</sup></xref> Simmune,<xref rid="c36" ref-type="bibr"><sup>36,37</sup></xref> C-ImmSim,<xref rid="c38" ref-type="bibr"><sup>38</sup></xref> and CellSys.<xref rid="c39" ref-type="bibr"><sup>39</sup></xref> Also mentionable is Compucell3D,<xref rid="c40" ref-type="bibr"><sup>40,41</sup></xref> a prominent, non-agent-based, biological simulation system. See Table <xref rid="t1" ref-type="table">I</xref> for a concise comparison of these systems. There are also projects with the stated strategy of combining several simulation systems into one framework, using a shared specification, such as Multiscale Modelling and Simulation Framework (MMSF)<xref rid="c42" ref-type="bibr"><sup>42</sup></xref> and Fully integrated Immune Response Model (FIRM).<xref rid="c43" ref-type="bibr"><sup>43</sup></xref> Reviewing these systems in depth is outside the scope of this article, and we refer the reader to the individual articles referenced or to detailed reviews of these systems in Refs. <xref rid="c13" ref-type="bibr">13</xref> and <xref rid="c44" ref-type="bibr">44</xref>.</p>
    <table-wrap id="t1" orientation="portrait" position="float">
      <label>TABLE I.</label>
      <caption>
        <p>A comparison of frameworks for biological modeling and simulation that include modeling of the cellular level. It should be noted that newer versions of the surveyed software may contain features that are not mentioned in this table.</p>
      </caption>
      <table frame="hsides" rules="groups" border="1">
        <colgroup span="1">
          <col align="left" span="1"/>
          <col align="center" span="1"/>
          <col align="center" span="1"/>
          <col align="center" span="1"/>
          <col align="center" span="1"/>
          <col align="center" span="1"/>
          <col align="center" span="1"/>
        </colgroup>
        <thead>
          <tr>
            <th align="left" colspan="1" rowspan="1">Name of systems</th>
            <th align="center" colspan="1" rowspan="1">Biological scale</th>
            <th align="center" colspan="1" rowspan="1">Paradigm</th>
            <th align="center" colspan="1" rowspan="1">Medium</th>
            <th align="center" colspan="1" rowspan="1">Visualization capabilities</th>
            <th align="center" colspan="1" rowspan="1">Real-time interactivity</th>
            <th align="center" colspan="1" rowspan="1">Features for scalability</th>
          </tr>
        </thead>
        <tbody>
          <tr>
            <td colspan="1" rowspan="1">MSI<xref rid="c28" ref-type="bibr"><sup>28</sup></xref></td>
            <td colspan="1" rowspan="1">Multiscale-cellular and intracellular</td>
            <td colspan="1" rowspan="1">Agent-based</td>
            <td colspan="1" rowspan="1">Yes</td>
            <td colspan="1" rowspan="1">Non-real-time 3D</td>
            <td colspan="1" rowspan="1">None</td>
            <td colspan="1" rowspan="1">Parallelization</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">EPISIM<xref rid="c29" ref-type="bibr"><sup>29,30</sup></xref></td>
            <td colspan="1" rowspan="1">Multiscale-cellular and intracellular using COPASI</td>
            <td colspan="1" rowspan="1">Multi paradigm</td>
            <td colspan="1" rowspan="1">No</td>
            <td colspan="1" rowspan="1">Real-time 2D and 3D</td>
            <td colspan="1" rowspan="1">Simulation parameter control</td>
            <td colspan="1" rowspan="1">Parallelization</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">LINDSAY<xref rid="c31" ref-type="bibr"><sup>31</sup></xref></td>
            <td colspan="1" rowspan="1">Cellular</td>
            <td colspan="1" rowspan="1">Agent-based</td>
            <td colspan="1" rowspan="1">No</td>
            <td colspan="1" rowspan="1">Real-time 3D visualization</td>
            <td colspan="1" rowspan="1">Moving camera, simulation parameter control</td>
            <td colspan="1" rowspan="1">Distributed computing</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">SimuLife<xref rid="c32" ref-type="bibr"><sup>32</sup></xref></td>
            <td colspan="1" rowspan="1">Cellular</td>
            <td colspan="1" rowspan="1">“Reactive animation”</td>
            <td colspan="1" rowspan="1">Yes</td>
            <td colspan="1" rowspan="1">Real-time 3D</td>
            <td colspan="1" rowspan="1">Moving camera, simulation parameter control</td>
            <td colspan="1" rowspan="1">Client–server architecture on web</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">FLAME-GPU<xref rid="c33" ref-type="bibr"><sup>33–35</sup></xref></td>
            <td colspan="1" rowspan="1">Cellular, subcellular if linked to COPASI</td>
            <td colspan="1" rowspan="1">Agent-based</td>
            <td colspan="1" rowspan="1">No, but can be linked to other simulators to enable a medium</td>
            <td colspan="1" rowspan="1">3D visualization</td>
            <td colspan="1" rowspan="1">In later versions</td>
            <td colspan="1" rowspan="1">GPU used for non-graphical tasks</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">Simmune<xref rid="c36" ref-type="bibr"><sup>36,37</sup></xref></td>
            <td colspan="1" rowspan="1">Multiscale</td>
            <td colspan="1" rowspan="1">Multi-paradigm–agent based, 3D grid</td>
            <td colspan="1" rowspan="1">Yes</td>
            <td colspan="1" rowspan="1">Non-graphical output of data</td>
            <td colspan="1" rowspan="1">No</td>
            <td colspan="1" rowspan="1">No</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">C-ImmSim<xref rid="c38" ref-type="bibr"><sup>38</sup></xref></td>
            <td colspan="1" rowspan="1">Multiscale–cellular and intracellular</td>
            <td colspan="1" rowspan="1">Agent-based</td>
            <td colspan="1" rowspan="1">Yes</td>
            <td colspan="1" rowspan="1">Non-graphical output of data</td>
            <td colspan="1" rowspan="1">No</td>
            <td colspan="1" rowspan="1">No, but following system “ImmunoGrid” uses grid technologies for scalability<xref rid="c45" ref-type="bibr"><sup>45</sup></xref></td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">CellSys<xref rid="c39" ref-type="bibr"><sup>39</sup></xref></td>
            <td colspan="1" rowspan="1">Cellular</td>
            <td colspan="1" rowspan="1">Agent-based</td>
            <td colspan="1" rowspan="1">Yes</td>
            <td colspan="1" rowspan="1">Real-time 3D with medium field visualization</td>
            <td colspan="1" rowspan="1">No</td>
            <td colspan="1" rowspan="1">Parallelization using OpenMP</td>
          </tr>
          <tr>
            <td colspan="1" rowspan="1">Compucell3D<xref rid="c40" ref-type="bibr"><sup>40</sup></xref></td>
            <td colspan="1" rowspan="1">Cellular</td>
            <td colspan="1" rowspan="1">Cellular Potts model (CPM) or lattice-based Glazier–Graner–Hogeweg (GGH)</td>
            <td colspan="1" rowspan="1">Yes</td>
            <td colspan="1" rowspan="1">Real-time 3D</td>
            <td colspan="1" rowspan="1">No</td>
            <td colspan="1" rowspan="1">Parallelization using OpenMP</td>
          </tr>
        </tbody>
      </table>
    </table-wrap>
    <p>As can be seen in Table <xref rid="t1" ref-type="table">I</xref>, these systems differ in several key aspects, among them: simulation scale, modeling paradigm (using a single modeling approach or a “hybrid” of several paradigms), inclusion of the extracellular medium along with biophysics of soluble molecules, their visualization capabilities (real-time or otherwise), the level of in-simulation interactivity, and their use of different algorithmic measures for scalability and performance enhancement. These differences were central in our decision to build a new system which attempts to combine some of these systems' abilities while emphasizing the important aspect of real-time, 3D, interactive visualization of a simulation, and its scalability, using game engine technology.</p>
  </sec>
  <sec id="s4">
    <title>COMPUTER MODELING TOOLS</title>
    <p>The video game industry has seen a steady growth in recent years—particularly thanks to a surge in mobile gaming<xref rid="c46" ref-type="bibr"><sup>46</sup></xref>—and with it, the need for high quality game engines. Game engines are programs that provide tools and assets that facilitate and expedite game development, which include in part: a scripting environment, network capabilities, a physics engine, a rendering engine, and an extensive IDE (Integrated Development Environment) for centralized control of the development process. Using game engines for uses other than game creation (e.g., architecture, medical, etc.) is referred to as “serious games.”<xref rid="c47" ref-type="bibr"><sup>47,48</sup></xref></p>
    <p>A great challenge of modeling the immune system is dealing with the vast number and a large variety of entities to model, while running the simulation on a single Central Processing Unit (CPU) computer, a standard desktop client. There are several approaches for pushing the computational power beyond what is made available in a single processor: (a) repurposing the GPU for parallelization of trivial non-graphical calculation<xref rid="c35" ref-type="bibr"><sup>35,49</sup></xref> (the GPU is built for tasks of different nature from CPU, making it better equipped to handle many simple calculations in parallel), (b) parallelizing the simulation over several threads, using multicore CPUs,<xref rid="c18" ref-type="bibr"><sup>18,31,42,50</sup></xref> and (c) using a client-server architecture, delegating heavy duty calculations to the “server” while assigning simpler, mainly visualization-oriented tasks to the client,<xref rid="c32" ref-type="bibr"><sup>32</sup></xref> thereby removing the requirement for an expensive, high performance computer from the end-user.</p>
    <p>In this work, we describe “Cell Studio” (available for download at <ext-link ext-link-type="uri" xlink:href="http://www.cellstudio.info">www.cellstudio.info</ext-link>, currently only for the Windows OS), a general-purpose, multi-paradigm (“hybrid”) framework to simulate and visualize an immune microenvironment in real-time 3D, while allowing interaction with the simulation during the run [moving the camera freely, controlling the timeline (including to rewind the simulation), injecting soluble molecules into the medium, etc.]. We deploy a client-server architecture, using the Unity3D game engine at the client side and a scalable C++ algorithm at the server side, using the GPU to accelerate certain (non-graphical) processes. We offer an intuitive graphical user interface (GUI) for parameter initialization at the beginning of the modeling process. A “batch mode” is available, enabling the user to run many simulations continuously with a textual output instead of visualization.</p>
    <p>We refer here to a hybrid model in two functions: (a) it combines discrete and continuous forms of calculation<xref rid="c10" ref-type="bibr"><sup>10</sup></xref> and (b) it combines an agent-based simulation of independent simulation entities (e.g., cells) with functional programming for describing the medium (e.g., soluble molecule diffusion).</p>
    <p>Combining the concept of agent based modelling with strong visualization capabilities is known to assist biologists (and other “domain experts”) with little formal training in advanced mathematical or computer algorithms to use a simulation system.<xref rid="c15" ref-type="bibr"><sup>15,24,27,31,32</sup></xref> Our main goal in creating this framework is to use the tools offered by game engines to overcome challenges in interactive, real-time 3D visualization and create a system that is user-friendly and approachable.</p>
  </sec>
  <sec id="s5">
    <title>RESULTS</title>
    <sec id="s5A">
      <title>Parameter initialization</title>
      <p>Each cell is an agent in the simulation and has properties that are saved in its object class. A cell object is not characterized by an explicit “state” but only by its physical and biophysical properties, and so, all cells are theoretically able to undergo all events. Thus, a cell's implicit immunological “state” is inherently inferred from its properties. For example, once a T-cell expresses the CD4 receptor, it is by definition regarded as a helper T-cell, but properties dictated by this phenotype must still be explicitly defined. Configurable properties for each cell population include the amount and velocity of cells in population, the population's spatial distribution, and the composition of its membranal proteins. Per each membranal protein (e.g., receptor) population, the size of population and the typical membranal diffusion rate can be defined. Each property value in the simulation is configured using a uniform distribution (defined by minimum and maximum values) that is assigned to each cell randomly. This reflects the inherent heterogeneity of a biological system.</p>
      <p>Each cell can be set to react in response to three types of events: (a) binding of a receptor on its surface to a neighboring membrane-bound molecule for a cell-cell interaction, (b) “sensing” the concentration of a certain molecule near a receptor, and (c) “sensing” the average concentration of a certain molecule around a cell.</p>
      <p>Following each of these events and based on a set of rules, cellular reactions are induced: (a) secretion of molecules, (b) a change in the expression level of membranal proteins, (c) proliferation (mitosis), and (d) apoptosis. The combination of one or more events that result in one or more applied actions is referred to as a “rule.” Rules are the mechanisms with which changes in the cell's properties are introduced in the simulation.</p>
      <p>Apart from the cells and receptors, the medium of the simulation is also specified. This medium may be a petri dish containing a substrate that sustains the cell or an organ or part of the organ that contains an extracellular medium. Several biological “regions” can be defined per each simulation (e.g., lymph node, thymus, inflammation micro-environment, etc.) and can be connected via “bridges.” Bridges allow cells to migrate across regions. In each region, different initial conditions may be specified, including the size of the region, the composition of soluble molecules in the medium, and the size of the bridges.</p>
    </sec>
    <sec id="s5B">
      <title>Creating a simulation</title>
      <p>Creating a new simulation in the system is done using a GUI in Unity3D. During the initialization process, the user selects and characterizes<xref rid="c1" ref-type="bibr"><sup>1</sup></xref> the extracellular medium (including the size of the region and the soluble molecules that inhabit it) [Figs. <xref ref-type="fig" rid="f1">1(a)</xref> and <xref ref-type="fig" rid="f1">1(b)</xref>],<xref rid="c2" ref-type="bibr"><sup>2</sup></xref> the cells that participate in the simulation (including the size of population, velocity, and receptor expression profiles) [Fig. <xref ref-type="fig" rid="f1">1(c)</xref>], and<xref rid="c3" ref-type="bibr"><sup>3</sup></xref> the rule set that dictates how cells interact with other cells and with the medium [Fig. <xref ref-type="fig" rid="f1">1(d)</xref>].</p>
      <fig fig-type="figure" id="f1" orientation="portrait" position="float">
        <label>FIG. 1.</label>
        <caption>
          <p>Initialization process using a GUI. (a) Design of the microenvironment of the simulation: its size, the number of compartments (referred to as “regions”), and the number of routes between regions, (b) selection of soluble molecules that inhibit the extracellular medium, (c) selection and adjustment of cell populations that take part in the simulation along with their membranal proteins, and (d) creation of the rules that define the interactions in the simulation.</p>
        </caption>
        <graphic xlink:href="ABPID9-000002-026107_1-g001"/>
      </fig>
      <p>While the rules defined in the simulation (see above) represent the biological mechanism of the simulation, biophysical laws are implemented independent of the rule set and modelled entities and are calculated continuously (at significantly smaller intervals). These include the diffusion of soluble molecules in the extracellular fluid and migration of receptors along the cell surface.</p>
    </sec>
    <sec id="s5C">
      <title>Visualization of a simulation</title>
      <p>Once the simulation is executed, the user can observe it as it is animated in real-time in 3D or via a textual output. The animated view is meant to emulate the experience of observing cellular activity under the microscope, see Fig. <xref ref-type="fig" rid="f2">2</xref>. At the default magnification, the animated objects include the cells that participate in the simulation. At higher levels of magnification, single membranal proteins are visible as they diffuse and migrate on the cell surface. The cell objects are animated in real-time, reacting to the back-end engine as it executes the simulation. Each of the cell's actions, such as death, proliferation, and “scanning” of another cell, are represented by a custom-tailored animation which was designed based on videos of cell microscopy; these animations are not movie clips prepared in advance but real-time, context-based morphing of the three-dimensional mesh which is the skeleton of the cell model. This morphing directly influences the outcome of cellular interactions, as membranal receptors' positions change as the cells morph. We are currently working on algorithms that calculate complex directional diffusion on the cell surface using the mesh, use the position of membranal receptors in the determination of the fate of cell interactions, and aim to publish the results soon.</p>
      <fig fig-type="figure" id="f2" orientation="portrait" position="float">
        <label>FIG. 2.</label>
        <caption>
          <p>Screenshots from the simulation which depict several graphical features. (a) Cell division, (b) receptors migrating to the immune synapse in order to bind, (c) a cluster of cells which creates a tissue-like structure, and (d) graphs that display real time data from the simulation (on the left, the number of cells in each monoclonal population; on the right, a Fluorescent Activated Cell Sorting (FACS) plot).</p>
        </caption>
        <graphic xlink:href="ABPID9-000002-026107_1-g002"/>
      </fig>
      <p>Real-time visualization grants the user control over different aspects of the simulation. First, the user controls the timeline of the simulation: stop, play, rewind to any point in time, fast forward, and run it frame by frame. To view the simulation, a “camera”—a user-controlled window onto the simulation—is available. The user may move the camera in space, rotate, and zoom it in and out. By moving and zooming the camera at will, one can shift in real-time between a comprehensive view of the simulation with all implemented cells and a more intimate view of an immunological synapse, which is simulated according to user-defined rules and biophysical laws. Such a view may help to elucidate emergent behavior at the receptor level.</p>
      <p>The user may change the course of the simulation by injecting soluble molecules at different concentrations into a region's medium. In addition, numerical data on the simulation are available in real-time by displaying: (a) FACS plots (to get receptor distribution on a monoclonal cell population) and (b) the number of cells from each monoclonal population [see Fig. <xref ref-type="fig" rid="f2">2(d)</xref>]. While the simulation is running, each event registers an on-screen alert, with an option to move the camera and examine the event up close or drop a marker on the timeline to return to it at a later time. See Fig. <xref ref-type="fig" rid="f3">3</xref> for a move clip of the design and visualization process (Multimedia View).</p>
      <fig fig-type="figure" id="f3" orientation="portrait" position="float">
        <label>FIG. 3.</label>
        <caption>
          <p>A video clip exhibiting design and execution of an experiment on Cell Studio. Featured in the order of appearance: creating a simulation, visualization of a simulation, injecting soluble molecules into the extracellular medium in mid-simulation, cell animations, diffusion of membranal proteins on the cell surface, and live plots during simulation. Multimedia view: <ext-link ext-link-type="uri" xlink:href="https://doi.org/10.1063/1.5039473.1">https://doi.org/10.1063/1.5039473.1</ext-link>
<media id="v1" mime-subtype="mp4" mimetype="video" orientation="portrait" specific-use="original-format" xlink:href="ABPID9-000002-026107_1-S1.mp4" position="anchor"><object-id pub-id-type="doi" specific-use="metadata">10.1063/1.5039473.1</object-id></media></p>
        </caption>
        <graphic xlink:href="ABPID9-000002-026107_1-g003"/>
      </fig>
      <p>It is difficult to estimate the duration the system takes to generate a simulation since it is heavily dependent upon the number of cells, membranal receptors, soluble molecules, and rules created in each simulation run. A rule of thumb would be that on a mid- to high-end computer with a modern GPU, a model containing 1000 cells each having 1000 receptors, with about 20 user-generated rules, can be simulated at a 1:1 ratio to real-time. This means that it would take the system 1 s to generate 1 s of simulation (which is also equivalent to 1 “biological” second).</p>
      <p>A “batch mode” is available and may be used to run multiple instances of the simulation with a range of parameters. The user may select to change certain parameters across many otherwise identical simulations to learn about the effect these parameters have on the modelled system. The output of the batch mode is textual, including “snapshots” (generated in intervals of 30 s) that detail all cells (with positions), user-defined rules that were registered, and quantities from the simulation. If one of the instances of the simulation is found to be particularly interesting, it can be re-executed and visualized for in-depth inspection.</p>
    </sec>
    <sec id="s5D">
      <title>A simple validation simulation on Cell Studio</title>
      <p>To provide initial, high level validation, we compared trends and results from a simulation executed on Cell Studio to a corresponding simulation on an already validated system. For that, we have referred to the work by Prokopiou <italic>et al.</italic> on the Compucell simulation system.<xref rid="c54" ref-type="bibr"><sup>54</sup></xref> In this work, Prokopiou <italic>et al.</italic> describe a 2D simulation of an immune response to viral infection that is controlled by CD8 T-cells upon interaction with Antigen Presenting Cells (APCs). Their model included the activation of T-Cell Receptor (TCR), leading to differentiation of naïve CD8 T-cells, Soluble factors that take part in their model included the Il2 and the T-bet, a T-cell-associated transcription factor. Apoptosis of the infected cells was induced in their model by the action of caspases and by Fas-Fas ligand interactions (cell-cell contact). Their model was compared with data from C57B1/6 mice infected by intranasal H1N1 transferred with F5 cells 24 h prior to infection. CD8 responder T-Cells were assessed by flow cytometry, based on CD8, CD45.1, and CD45.2 expression. The model included the kinetics during the first days of infection (up to day 5).</p>
      <p>In translating the above simulated experiment to terms executable on Cell Studio, we have kept as many parameters possible identical. Since the work against which we compare Cell Studio uses CompuCell in 2D, while Cell Studio simulates a 3D space, we have adapted the spatial parameters to fit our model. We have used a configuration of a single compartment, with a volume of <inline-formula><mml:math id="M1"><mml:mn>75</mml:mn><mml:mo> </mml:mo><mml:mo>μ</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">m</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula>, simulating a lymph node. The compartment inhabits two cell populations: 3 APC cells with a radius of <inline-formula><mml:math id="M2"><mml:mn>10</mml:mn><mml:mo> </mml:mo><mml:mo>μ</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">m</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula> and an average speed (random movement) of <inline-formula><mml:math id="M3"><mml:mn>0.1</mml:mn><mml:mo> </mml:mo><mml:mo>μ</mml:mo><mml:mi mathvariant="normal">m</mml:mi><mml:mo>/</mml:mo><mml:mtext>min</mml:mtext></mml:math></inline-formula> and 30 CD8 T-cells, with a radius of <inline-formula><mml:math id="M4"><mml:mn>1</mml:mn><mml:mo> </mml:mo><mml:mo>μ</mml:mo><mml:mi mathvariant="normal">m</mml:mi></mml:math></inline-formula> and an average speed of <inline-formula><mml:math id="M5"><mml:mn>0.75</mml:mn><mml:mo> </mml:mo><mml:mo>μ</mml:mo><mml:mi mathvariant="normal">m</mml:mi><mml:mo>/</mml:mo><mml:mtext>min</mml:mtext></mml:math></inline-formula>. Each APC cell expresses two membranal protein populations: Major Histocompatibility Complex (MHC)-I and CD80 receptors, while each CD8 T-cell expresses populations of IL2R, FasR, FasL, CD28 TCR, and CD8 TCR. Both cell populations proliferate and undergo apoptosis at rates corresponding to the above experiment. The full specification is given in the <ext-link ext-link-type="ftp" xlink:href="ftp://ftp.aip.org/epaps/apl_bioengineering/E-ABPID9-2-011802">supplementary material</ext-link>.</p>
      <p>The dynamics of the simulation are determined by the system of rules of events and actions. Three rules have been created, representing the interaction of a Naïve T-cell with APC which moves it through the pre-activated and activated CD8 phases, the activation of the CD8 T-cell after interaction with an APC (increase in expression of several receptors, higher chance to proliferate and die), and self-regulation of T-cells.</p>
      <p>Figure <xref ref-type="fig" rid="f4">4</xref> shows a snapshot of an interaction between an APC (green) and a T-cell, taken during a real-time visualization of the simulation. A plot of results of the simulation can be viewed in Fig. <xref ref-type="fig" rid="f5">5</xref>. It may be seen that the trends and numbers are similar to those obtained by Prokopiou <italic>et al.</italic></p>
      <fig fig-type="figure" id="f4" orientation="portrait" position="float">
        <label>FIG. 4.</label>
        <caption>
          <p>A snapshot of Cell Studio taken during a simulation run, where an activated APC (green) is in the process of antigen presentation with a Naïve T-cell (purple). The T-cell has begun forming the immune synapse with TCRs while scanning the APC (red arrow). Diffusing membranal receptors on the cell surface may be noticed: on the APC, the MHC complexes are in green, while the CD80 receptors are in light blue. The T-cell displays CD8 T-cell receptors in purple and CD28 receptors are visible in light green.</p>
        </caption>
        <graphic xlink:href="ABPID9-000002-026107_1-g004"/>
      </fig>
      <fig fig-type="figure" id="f5" orientation="portrait" position="float">
        <label>FIG. 5.</label>
        <caption>
          <p>Level of all CD8 cell counts in simulation vs. the Mouse data of Prokopiou <italic>et al.</italic> The simulated data are the average of nine simulations, with the standard error for error bars. The number of T-cell increases with time.</p>
        </caption>
        <graphic xlink:href="ABPID9-000002-026107_1-g005"/>
      </fig>
    </sec>
  </sec>
  <sec id="s6">
    <title>DISCUSSION</title>
    <p>We have developed a hybrid, cellular-level, general-purpose platform for modeling and simulation of immunological processes. The platform includes a user-friendly GUI to facilitate parametrization of a model. The model can be then simulated in two ways: either run as a single simulation in real-time, interactive 3D or as a series of simulations with a range of parameters in a non-graphical manner with a textual output (“batch mode”). The results can be plotted in real-time during the simulation. The platform includes an implementation of an extracellular medium with diffusing soluble molecules.</p>
    <p>We have created a relatively simple validation experiment, which includes two cell populations with multiple membranal protein populations and several rules. Parameters were set according to a similar simulation created on CompuCell (itself validated against results from a “wet” experiment). We have received results which greatly resemble the results of the experiment. We treat this result as an initial “sanity check” of the simulation.</p>
    <p>In our continuing efforts to create and validate further modules of Cell Studio, we have recently completed a module that simulates the diffusion process of membranal proteins on the cell's surface, together with recycling processes (endo- and exocytosis). As a result, we are able to implement a more biologically accurate model of juxtacrine (cell-cell) signaling. We have validated this module against a mathematical model of such processes from the literature, itself validated against <italic>in-vitro</italic> data (in preparation).<xref rid="c55" ref-type="bibr"><sup>55</sup></xref> This module (of which an in-depth description extends beyond the scope of this article) is pivotal for future simulations, while serving as another example of the way simple interactions lead to complex spatio-temporal dynamics in multi-cellular systems.</p>
    <p>These examples of validation simulations are based on relatively simple scenarios that take into account as few parameters as possible. Due to the complexity of biological systems, these are the types of validation experiments that we believe are needed. Otherwise, the inherent uncertainty and inaccuracy in the value of parameters (most biological parameter values required for simulation are extremely hard to obtain or are unknown), specifically in an elaborate scenario, may lead to misleading results that take away from the validity of the simulation.</p>
    <p>Enabling real-time 3D visualization in the simulation introduces two main advantages for the researcher: (a) visualization is highly important to encourage intuition and understanding of the modelled emergent behavior. We see animated visualization of a simulation as an optimal multi-dimensional representation of data; for certain types of processes, it carries more information than any other representation of data and facilitates gained insight. Of course, detailed plots of simulation results must also be displayable. (b) Interacting with a system is an instinct for researchers—intervening in the case of unintended or interesting behavior: system problems, surprising outcomes, or any irregular phenomena. The researcher may pause, rewind, or fast forward the simulation at any point, run it step by step, and control the simulation “camera.” The ability to rewind gives the simulation a “debugging” ability. Should a certain unintended event take place (all events are registered on-screen as they occur and may be marked on the timeline), the researcher may stop the simulation, inject a different molecule to the medium, and re-simulate what occurs under an alternate experimental route—this can be repeated until the desired outcome is achieved, leading to efficient online parameter optimization. We believe these two advantages—which accompany real-time 3D visualization—may aid in bridging the gap between modelers and domain experts.</p>
    <p>The development of front-end interactive visualization requires several programmatic features: (a) development IDE—which centralizes all programming efforts, assets, and supports resource load debugging (i.e., to identify memory and CPU bottlenecks), (b) a code editor that supports a programming language and framework (this inherently includes many features like networking support, file system support, etc.), (c) graphical abilities for simulation rendering, (d) support for spatial, physics-based programming (we include in this, for example, the mesh on which the cell “skin” is laid), (e) GUI tools, which enable creation of on-screen controllers for real-time interaction during a simulation run, and (f) animation creation tools. Electing to use the Unity3D game engine as our front-end development environment has readily provided us with all these features and many more. Unity3D is also a cross-platform—deployable on almost any operation system. Beyond the natural choice of using a game engine for its available tools and benefits, it is important to note that an agent-based biological model is in many ways very similar to a computer game—it includes many actors of different properties and abilities, all of which act according to their own current state and local environment, and all together are subjected to environmental constraints.</p>
    <p>We aimed for resource exhaustion when building the back-end algorithm of the system. For this, we utilized non-graphical GPU programming using CUDA. Since the GPU is built differently from the CPU, it is able to handle parallelization of basic tasks better. Such is, for example, the calculation of diffusion in the medium. Dividing computational load between the CPU and GPU enables better usage of both and so to enable larger simulated compartments and more simultaneous entities in the simulation. To achieve scalability for the system, we have employed a client-server architecture with constant communication between sides. The “server” can be deployed on a cluster in the “cloud” to utilize larger computational resources and reduce load from the researcher's client computer, which may not be able to handle the steeper computational requirements of the system. Moreover, cloud architecture offers load balancing which frees new resources when needed, enabling ad-hoc scaling of the back-end for specific tasks at specific times.</p>
    <p>The inclusion of simulation of the extracellular medium—and specifically existence and diffusion of soluble factors—is important for two key processes in the simulation: non-juxtacrine cell-cell signaling and cell chemotaxis according to molecule gradients (which is currently in development). This inclusion of the constant biophysical law calculation in the simulation and combination with the biological, user-defined rules (which are calculated over longer intervals) enable many resulting phenomena to occur. For example, a given biological rule might dictate that a cell secretes a certain antibody in response to stimuli, and diffusion dictates its dispersion in the extra-cellular medium and at what concentration will this antibody reach another cell—this may, for example, yield the expected immune reaction to an invasion of a pathogen to the system.</p>
    <p>In order to facilitate modelling of interactions occurring in multiple sites, we introduced the concept of bridges. In many physiological processes and pathologies, multiple distant tissues are involved and cells operate in more than one niche. This, however, does not imply that in all these cases an in-silico modeling of a whole organism is needed. The essence of a multi-site interaction is in many cases the migration of cells across tissues, using “bridges.” Modeling a connecting bridge is characterized by the probability of migration of a cell and some delay and bypasses the need in modeling whole organs, with enormous complexity. A bridge can describe the functional connectivity of an inflamed tissue and a lymph node, thereby allowing the migration of lymphocytes across these tissues or the connectivity to two distant tissues, allowing migration of a neoplastic cell from one localized tumor to a site of a new metastasis.</p>
    <p>The two modes of operation (batch mode to run multiple simulations in series and animated visualization of a single run) can be integrated for optimal results: a set of simulations may be run and particularly interesting runs are observed. It should be noted that the future use of such an integrated mode would require finding ways to identify, among a large set of simulations, the ones that might be of special interest and that require further investigation.</p>
    <p>A known problem in the field of biological modeling is the “gap” between the experimentalist (e.g., biologist), who often is not versed in programming and is not accustomed to using a computer for experimental needs, and the modeler (e.g., computer scientist), who is not the “domain expert” (see Introduction for further references). We aim to bridge this gap using a user-friendly GUI for simulation creation, built specifically to be approachable to casual users with no need for any programming knowledge. Using the above described system, of selecting cells, soluble molecules for the medium, and rules for the simulation, we expect the GUI—together with the visualized simulation—to aid in easing access to the system.</p>
    <p>Several important challenges still remain for future development of the system. First, we plan to add an intracellular component (e.g., intracellular pathways, signaling and expression of some factor) to the simulation, by adding support to an existing intracellular modelling system, similar to Ref. <xref rid="c24" ref-type="bibr">24</xref>. We aim to add support to the shared modeling format, Systems Biology Markup Language (SBML).<xref rid="c56" ref-type="bibr"><sup>56</sup></xref> SBML was not initially incorporated due to the added overhead in integrating it prior to the basic validation needed for this system. This is an important step in utilizing the growing library of models created by the systems biology community. We also continue to integrate further biophysical modules we see as critical for simulation of immunological scenarios, such as the above-mentioned chemotaxis.</p>
    <p>We believe that it is important to design and build the simulation to be extensible, sharing not only complete specification of processes and models (possibly using SBML) but also single, fully specified and parameterized entities from the model, e.g., a cell population of a certain size distribution, together with their membranal proteins, biophysical properties, and even graphical representation (including mesh and texture). The use of such premade simulation assets (known as “prefabs” in the game engine jargon) may expedite the arduous work of parametrization of a simulation and help to recreate simulation conditions for comparison between researchers. It should also be noted that any vision as vast as creating a system for modeling and simulation of an immunological system must include in it the basis for a community of users, sharing knowledge and assets. This can be encouraged by creating a hub (e.g., a website or web forum—we aim to add features to our current website at <ext-link ext-link-type="uri" xlink:href="http://www.cellstudio.info">www.cellstudio.info</ext-link>) for asset sharing.</p>
  </sec>
  <sec id="s7">
    <title>METHODS</title>
    <sec id="s7A">
      <title>System architecture</title>
      <p>Cell Studio is built in a client-server architecture, which is separated into three logical modules (Fig. <xref ref-type="fig" rid="f6">6</xref>): the client, the server, and the file system, which holds the data frames. The server runs the main simulation engine, constantly calculating the positions of cells and membrane proteins, diffusion of soluble molecules in the medium, chances of interaction of two cells and results of tested rules—which contain conditions posed on elements on the simulation. The output of the engine is saved in data frames, each containing a snapshot of a single time point of the simulation. Data frames are saved on the file system and sent to the client. Graphical processing is conducted on the client side, where the game engine parses data frames and displays the simulation (cells, receptors, timeline, etc.) accordingly. Control commands are sent directly to the server. This architecture can accommodate different setups: all the modules may run on a user's computer or the server and its created data frames may be hosted in the “cloud.” Using the latter architecture enables scaling of the system under heavy processing load so that more intensive calculations (e.g., more cells per simulation, more detailed cell models, more regions, etc.) may be allowed without changes to the simulation code. This architecture also removes the requirement of a high-powered computer from the end-user.</p>
      <fig fig-type="figure" id="f6" orientation="portrait" position="float">
        <label>FIG. 6.</label>
        <caption>
          <p>Architecture of the system. The system is separated into three modules—client, server, and file system. The server hosts the engine which runs the simulation and saves data frames, which are sent to the client, parsed, and translated into a graphical representation of the simulation.</p>
        </caption>
        <graphic xlink:href="ABPID9-000002-026107_1-g006"/>
      </fig>
    </sec>
    <sec id="s7B">
      <title>The back end</title>
      <sec id="s7B1">
        <title>General</title>
        <p>The backend is implemented in C++ with some elements written in CUDA<xref rid="c51" ref-type="bibr"><sup>51</sup></xref> to be performed on the GPU for improved performance. While the CPU contains few cores optimized to handle complex calculations, the GPU contains many cores optimized to handle simple calculations. This makes it better suited to handle parallelized tasks like computation of diffusion in many grid points from many injection points and receptor movement (a simple computational action for thousands of elements). Elements written for the GPU are written to scale, using as many GPU cores as needed per calculation.</p>
        <p>After a model is created, it is saved onto an XML file (formatted using a custom, Cell Studio specification), and maintained as a data structure in C++. Subsequently, each of the biological entities (cells, receptors, and regions) is implemented as a separate instantiated class (agent) which the simulation engine places in a single virtual 3D space. The engine also controls the time axis and handles the calculation of the logical components (rules, events, etc.).</p>
      </sec>
      <sec id="s7B2">
        <title>Space and diffusion</title>
        <p>An important feature of the Cell Studio framework is modeling of an extracellular medium and specifically diffusion of soluble molecules in three-dimensional space. To model the medium, we use a grid of cubes with a volume of 1 <inline-formula><mml:math id="M6"><mml:mo>μ</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="normal">m</mml:mi></mml:mrow><mml:mrow><mml:mn>3</mml:mn></mml:mrow></mml:msup></mml:math></inline-formula>. Each grid cube can contain all receptors specified during the experiment initialization phase, at different concentrations. When a receptor's level in a grid cube falls beneath a value that is considered too low to generate any cellular response, it is marked and saved as <inline-formula><mml:math id="M7"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mo>∞</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula>. Cells are able to react to molecule concentrations in grid cubes that they intersect with. As cells move in 3D space freely, unbound to the grid, they may intersect with several cubes at once; the level of molecules from all intersecting cubes is sampled to test for conditions of relevant user-generated rules at each time step.</p>
        <p>For the diffusion calculation, we employ the classic Gaussian diffusion equation and continuously calculate the concentration of each molecule per each cube. When some soluble molecule concentration is injected (or secreted) into a grid cube, the simulation calculates the dispersion of the material to each adjacent cube up to a point in time and space where the concentration of the material is close enough to its value at infinity, <inline-formula><mml:math id="M8"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mo>∞</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula>. The higher the molecule's diffusion value (and interchangeably, the larger the injected concentration), the larger the diffusion cloud will grow on the grid and the longer it will take it to reach <inline-formula><mml:math id="M9"><mml:msub><mml:mrow><mml:mi>C</mml:mi></mml:mrow><mml:mrow><mml:mo>∞</mml:mo></mml:mrow></mml:msub></mml:math></inline-formula>.</p>
        <p>Cells are treated as perfect spheres. As such, the position of the cell's center together with its radius is sufficient to calculate collisions between cells. For diffusion purposes, the grid cubes that the cells occupy can also be occupied by soluble molecules, i.e., the diffusion calculation disregards the existence of cells, both in terms of soluble molecules diffusing into the volume they occupy and in terms of the drag they induce by moving in the extracellular fluid. This was necessary to enable the highly complex diffusion calculation in real-time, while still allowing modeling the effect of high concentrations of cells.</p>
        <p>The simulation contains various user-generated rules in which a certain level of a soluble molecule near a cell is required. This mechanism effectively implements cell to cell communication for both direct and indirect interactions. The calculation of the concentration of molecules in each cube which pertains to these rules is implemented in the GPU, where the effect of the diffusion is calculated in parallel for each involved injection point (i.e., a point in the grid which is a source of soluble molecules, such as a cell secreting molecule or an external injection by pipette). The calculation is done in a “just-in-time” manner so that the molecule level will only be calculated for rule evaluation when (and if) needed.</p>
        <p>Figure <xref ref-type="fig" rid="f7">7</xref> outlines a 2D rendering (projection of a 3D original) of molecular levels in the cube marked with a question mark, in which levels will only be calculated if a rule needs to be evaluated for that grid cube at that specific point in time. Thus, if a cell which was initialized to have a rule with conditions which depend on the level of soluble molecules in the surrounding medium, upon each calculation of the rule, <italic>local</italic> diffusion will be calculated. The calculation is parallelized in the GPU by taking into account only “molecule secreting centers” (here A and B) which are close enough to have their molecules diffuse into the calculated area. The cumulative amount is calculated and used to evaluate the rule.</p>
        <fig fig-type="figure" id="f7" orientation="portrait" position="float">
          <label>FIG. 7.</label>
          <caption>
            <p>An illustration of the calculation of diffusion. To conserve computational resources, molecule levels are only calculated for the grid cube marked with a question mark if it is required for calculating the result of a rule, and the calculation will take into account only grid cubes which contain molecules that might affect the calculation of the rule. This is referred to as a “just-in-time” calculation.</p>
          </caption>
          <graphic xlink:href="ABPID9-000002-026107_1-g007"/>
        </fig>
      </sec>
      <sec id="s7B3">
        <title>Membranal proteins</title>
        <p>Receptor (and other membranal proteins) movement is currently for visualization purposes only and is calculated by moving the receptor object along the mesh of the cell object (the mesh can be thought of as “train tracks” for the receptors). Movement either occurs randomly or follows a calculated path towards a “sink point” on the object (a sink point might be, for example, an immunological synapse).</p>
      </sec>
      <sec id="s7B4">
        <title>Cell-cell interaction</title>
        <p>Cells may directly interact in the simulation. Successfully interaction serves as a condition for user-generated rules. Successful cell-cell interaction and signaling are determined by a condition on the number of relevant membranal proteins and the size of each cell. When two cells come close enough for a possible reaction, a linear combination of these parameters sets the probability for the reaction to occur.</p>
      </sec>
    </sec>
    <sec id="s7C">
      <title>The front end</title>
      <p>The user interface (or “front end”) of the simulation, for both the simulation parameter initialization and the visualized simulation run, is built using a game engine. We have selected to use Unity3D (Unity Technologies, San Francisco, CA, USA)<xref rid="c52" ref-type="bibr"><sup>52</sup></xref>—currently the most widely used game engine<xref rid="c53" ref-type="bibr"><sup>53</sup></xref>—for its graphical, scripting (using C#), network, and physics-based tools, as well as being a cross-platform (i.e., easily compiled and deployed on most computer platforms). To visualize cells, we used a set of freely available, premade cell models. A model is made up of a mesh—a three-dimensional structure—and its “skin,” the graphical texture for the mesh. Cell animations are prepared prior to the simulation run. These are not recorded animation clips but a set of directions that readjust and animate the mesh in real-time according to constraints and conditions set on the cell. These directions are created via the MegaFiers Unity package. The GUI is built using Unity3D GUI tools, which simulate a 2D canvas over the 3D simulation. Graphs are plotted using the Graph Maker Unity package.</p>
      <p>Ethical approval for this work is not required.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material" id="s8">
    <title>SUPPLEMENTARY MATERIAL</title>
    <supplementary-material content-type="local-data">
      <p>See <ext-link ext-link-type="ftp" xlink:href="ftp://ftp.aip.org/epaps/apl_bioengineering/E-ABPID9-2-011802">supplementary material</ext-link> for a detailed specification for the validation simulation (see the section on A simple validation simulation on Cell Studio under Results).</p>
    </supplementary-material>
  </sec>
</body>
<back>
  <ack>
    <title>ACKNOWLEDGMENTS</title>
    <p>We thank the Sagol School of Neuroscience and the Kodesz Foundation for support of this research.</p>
  </ack>
  <ref-list content-type="numbered">
    <ref id="c1">
      <label>1.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M.</given-names><surname>Tomita</surname></string-name>, “<article-title>Whole-cell simulation: A grand challenge of the 21st century</article-title>,” <source>Trends Biotechnol.</source>
<volume>19</volume>(<issue>6</issue>), <fpage>205</fpage>–<lpage>210</lpage> (<year>2001</year>).<pub-id pub-id-type="doi">10.1016/S0167-7799(01)01636-5</pub-id><pub-id pub-id-type="pmid">11356281</pub-id></mixed-citation>
    </ref>
    <ref id="c2">
      <label>2.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>T.</given-names><surname>Ideker</surname></string-name>, 
<string-name><given-names>T.</given-names><surname>Galitski</surname></string-name>, and 
<string-name><given-names>L.</given-names><surname>Hood</surname></string-name>, “<article-title>A new approach to decoding life: Systems biology</article-title>,” <source>Annu. Rev. Genomics Hum. Genet.</source>
<volume>2</volume>, <fpage>343</fpage>–<lpage>372</lpage> (<year>2001</year>).<pub-id pub-id-type="doi">10.1146/annurev.genom.2.1.343</pub-id><pub-id pub-id-type="pmid">11701654</pub-id></mixed-citation>
    </ref>
    <ref id="c3">
      <label>3.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>H.</given-names><surname>Kitano</surname></string-name>, “<article-title>Systems biology: A brief overview</article-title>,” <source>Science</source>
<volume>295</volume>(<issue>5560</issue>), <fpage>1662</fpage>–<lpage>1664</lpage> (<year>2002</year>).<pub-id pub-id-type="doi">10.1126/science.1069492</pub-id><pub-id pub-id-type="pmid">11872829</pub-id></mixed-citation>
    </ref>
    <ref id="c4">
      <label>4.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>R. N.</given-names><surname>Germain</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Meier-schellersheim</surname></string-name>, 
<string-name><given-names>A.</given-names><surname>Nita-lazar</surname></string-name>, and 
<string-name><given-names>D. C.</given-names><surname>Iain</surname></string-name>, “<article-title>Systems biology in immunology—A computational modeling perspective</article-title>,” <source>Annu. Rev. Immunol.</source>
<volume>29</volume>, <fpage>527</fpage>–<lpage>585</lpage> (<year>2011</year>).<pub-id pub-id-type="doi">10.1146/annurev-immunol-030409-101317</pub-id><pub-id pub-id-type="pmid">21219182</pub-id></mixed-citation>
    </ref>
    <ref id="c5">
      <label>5.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>D. C.</given-names><surname>Walker</surname></string-name> and 
<string-name><given-names>J.</given-names><surname>Southgate</surname></string-name>, “<article-title>The virtual cell–a candidate co-ordinator for “middle-out” modelling of biological systems</article-title>,” <source>Briefings Bioinf.</source>
<volume>10</volume>(<issue>4</issue>), <fpage>450</fpage>–<lpage>461</lpage> (<year>2009</year>).<pub-id pub-id-type="doi">10.1093/bib/bbp010</pub-id></mixed-citation>
    </ref>
    <ref id="c6">
      <label>6.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>J.</given-names><surname>Fisher</surname></string-name> and 
<string-name><given-names>T. A.</given-names><surname>Henzinger</surname></string-name>, “<article-title>Executable cell biology</article-title>,” <source>Nat. Biotechnol.</source>
<volume>25</volume>(<issue>11</issue>), <fpage>1239</fpage>–<lpage>1249</lpage> (<year>2007</year>).<pub-id pub-id-type="doi">10.1038/nbt1356</pub-id><pub-id pub-id-type="pmid">17989686</pub-id></mixed-citation>
    </ref>
    <ref id="c7">
      <label>7.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>H.</given-names><surname>Kitano</surname></string-name>, “<article-title>Computational systems biology</article-title>,” <source>Nature</source>
<volume>420</volume>(<issue>6912</issue>), <fpage>206</fpage>–<lpage>210</lpage> (<year>2002</year>).<pub-id pub-id-type="doi">10.1038/nature01254</pub-id><pub-id pub-id-type="pmid">12432404</pub-id></mixed-citation>
    </ref>
    <ref id="c8">
      <label>8.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>C.</given-names><surname>Benoist</surname></string-name>, 
<string-name><given-names>R. N.</given-names><surname>Germain</surname></string-name>, and 
<string-name><given-names>D.</given-names><surname>Mathis</surname></string-name>, “<article-title>A Plaidoyer for ‘systems immunology</article-title>,’” <source>Immunol. Rev.</source>
<volume>210</volume>, <fpage>229</fpage>–<lpage>234</lpage> (<year>2006</year>).<pub-id pub-id-type="doi">10.1111/j.0105-2896.2006.00374.x</pub-id><pub-id pub-id-type="pmid">16623774</pub-id></mixed-citation>
    </ref>
    <ref id="c9">
      <label>9.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>V.</given-names><surname>Narang</surname></string-name>, 
<string-name><given-names>J.</given-names><surname>Decraene</surname></string-name>, 
<string-name><given-names>S. Y.</given-names><surname>Wong</surname></string-name>, 
<string-name><given-names>B. S.</given-names><surname>Aiswarya</surname></string-name>, 
<string-name><given-names>A. R.</given-names><surname>Wasem</surname></string-name>, 
<string-name><given-names>S. R.</given-names><surname>Leong</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>Systems immunology: A survey of modeling formalisms, applications and simulation tools</article-title>,” <source>Immunol. Res.</source>
<volume>53</volume>(<issue>1–3</issue>), <fpage>251</fpage>–<lpage>265</lpage> (<year>2012</year>).<pub-id pub-id-type="doi">10.1007/s12026-012-8305-7</pub-id><pub-id pub-id-type="pmid">22528121</pub-id></mixed-citation>
    </ref>
    <ref id="c10">
      <label>10.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>K.</given-names><surname>Rejniak</surname></string-name> and 
<string-name><given-names>A.</given-names><surname>Anderson</surname></string-name>, “<article-title>Hybrid models of tumor growth</article-title>,” <source>WIREs Syst. Biol. Med.</source>
<volume>3</volume>(<issue>1</issue>), <fpage>115</fpage>–<lpage>125</lpage> (<year>2011</year>).<pub-id pub-id-type="doi">10.1002/wsbm.102</pub-id></mixed-citation>
    </ref>
    <ref id="c11">
      <label>11.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>N. R.</given-names><surname>Jennings</surname></string-name>, “<article-title>On agent-based software engineering</article-title>,” <source>Artif. Intell.</source>
<volume>117</volume>(<issue>2</issue>), <fpage>277</fpage>–<lpage>296</lpage> (<year>2000</year>).<pub-id pub-id-type="doi">10.1016/S0004-3702(99)00107-1</pub-id></mixed-citation>
    </ref>
    <ref id="c12">
      <label>12.</label>
      <mixed-citation publication-type="book"><string-name><given-names>N.</given-names><surname>Fachada</surname></string-name>, 
<string-name><given-names>V.</given-names><surname>Lopes</surname></string-name>, and 
<string-name><given-names>A.</given-names><surname>Rosa</surname></string-name>, “<article-title>Agent-based modelling and simulation of the immune system: A review</article-title>,” in <source><italic toggle="yes">Epia 2007</italic></source>, LNCS Vol. 4874 (
<publisher-name>Springer</publisher-name>, 
<publisher-loc>Heidelberg</publisher-loc>, <year>2007</year>), pp. <fpage>300</fpage>–<lpage>315</lpage>.</mixed-citation>
    </ref>
    <ref id="c13">
      <label>13.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>A. L.</given-names><surname>Bauer</surname></string-name>, 
<string-name><given-names>C. A. A.</given-names><surname>Beauchemin</surname></string-name>, and 
<string-name><given-names>A. S.</given-names><surname>Perelson</surname></string-name>, “<article-title>Agent-based modeling of host-pathogen systems: The successes and challenges</article-title>,” <source>Inf. Sci.</source>
<volume>179</volume>(<issue>10</issue>), <fpage>1379</fpage>–<lpage>1389</lpage> (<year>2009</year>).<pub-id pub-id-type="doi">10.1016/j.ins.2008.11.012</pub-id></mixed-citation>
    </ref>
    <ref id="c14">
      <label>14.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>L. M.</given-names><surname>Loew</surname></string-name> and 
<string-name><given-names>J. C.</given-names><surname>Schaff</surname></string-name>, “<article-title>The virtual cell: A software environment for computational cell biology</article-title>,” <source>Trends Biotechnol.</source>
<volume>19</volume>, <fpage>401</fpage>–<lpage>406</lpage> (<year>2001</year>).<pub-id pub-id-type="doi">10.1016/S0167-7799(01)01740-1</pub-id><pub-id pub-id-type="pmid">11587765</pub-id></mixed-citation>
    </ref>
    <ref id="c15">
      <label>15.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>I. I.</given-names><surname>Moraru</surname></string-name>, 
<string-name><given-names>J. C.</given-names><surname>Schaff</surname></string-name>, 
<string-name><given-names>B. M.</given-names><surname>Slepchenko</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Blinov</surname></string-name>, 
<string-name><given-names>F.</given-names><surname>Morgan</surname></string-name>, 
<string-name><given-names>A.</given-names><surname>Lakshminarayana</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>The virtual cell modeling and simulation software environment</article-title>,” <source>IET Syst. Biol.</source>
<volume>2</volume>(<issue>5</issue>), <fpage>352</fpage>–<lpage>362</lpage> (<year>2008</year>).<pub-id pub-id-type="doi">10.1049/iet-syb:20080102</pub-id><pub-id pub-id-type="pmid">19045830</pub-id></mixed-citation>
    </ref>
    <ref id="c16">
      <label>16.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>L.</given-names><surname>Calzone</surname></string-name>, 
<string-name><given-names>F.</given-names><surname>Fages</surname></string-name>, and 
<string-name><given-names>S.</given-names><surname>Soliman</surname></string-name>, “<article-title>BIOCHAM: An environment for modeling biological systems and formalizing experimental knowledge</article-title>,” <source>Bioinformatics</source>
<volume>22</volume>(<issue>14</issue>), <fpage>1805</fpage>–<lpage>1807</lpage> (<year>2006</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/btl172</pub-id><pub-id pub-id-type="pmid">16672256</pub-id></mixed-citation>
    </ref>
    <ref id="c17">
      <label>17.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M. L.</given-names><surname>Blinov</surname></string-name>, 
<string-name><given-names>J. R.</given-names><surname>Faeder</surname></string-name>, 
<string-name><given-names>B.</given-names><surname>Goldstein</surname></string-name>, and 
<string-name><given-names>W. S.</given-names><surname>Hlavacek</surname></string-name>, “<article-title>BioNetGen: Software for rule-based modeling of signal transduction based on the interactions of molecular domains</article-title>,” <source>Bioinformatics</source>
<volume>20</volume>(<issue>17</issue>), <fpage>3289</fpage>–<lpage>3291</lpage> (<year>2004</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/bth378</pub-id><pub-id pub-id-type="pmid">15217809</pub-id></mixed-citation>
    </ref>
    <ref id="c18">
      <label>18.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M. J.</given-names><surname>Byrne</surname></string-name>, 
<string-name><given-names>M. N.</given-names><surname>Waxham</surname></string-name>, and 
<string-name><given-names>Y.</given-names><surname>Kubota</surname></string-name>, “<article-title>Cellular dynamic simulator: An event driven molecular simulation environment for cellular physiology</article-title>,” <source>Neuroinformatics</source>
<volume>8</volume>(<issue>2</issue>), <fpage>63</fpage>–<lpage>82</lpage> (<year>2010</year>).<pub-id pub-id-type="doi">10.1007/s12021-010-9066-x</pub-id><pub-id pub-id-type="pmid">20361275</pub-id></mixed-citation>
    </ref>
    <ref id="c19">
      <label>19.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S. S.</given-names><surname>Andrews</surname></string-name> and 
<string-name><given-names>D.</given-names><surname>Bray</surname></string-name>, “<article-title>Stochastic simulation of chemical reactions with spatial resolution and single molecule detail</article-title>,” <source>Phys. Biol.</source>
<volume>1</volume>(<issue>3–4</issue>), <fpage>137</fpage>–<lpage>151</lpage> (<year>2004</year>).<pub-id pub-id-type="doi">10.1088/1478-3967/1/3/001</pub-id><pub-id pub-id-type="pmid">16204833</pub-id></mixed-citation>
    </ref>
    <ref id="c20">
      <label>20.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S. S.</given-names><surname>Andrews</surname></string-name>, 
<string-name><given-names>N. J.</given-names><surname>Addy</surname></string-name>, 
<string-name><given-names>R.</given-names><surname>Brent</surname></string-name>, and 
<string-name><given-names>A. P.</given-names><surname>Arkin</surname></string-name>, “<article-title>Detailed simulations of cell biology with Smoldyn 2.1</article-title>,” <source>PLoS Comput. Biol.</source>
<volume>6</volume>(<issue>3</issue>), <fpage>e1000705</fpage> (<year>2010</year>).<pub-id pub-id-type="doi">10.1371/journal.pcbi.1000705</pub-id><pub-id pub-id-type="pmid">20300644</pub-id></mixed-citation>
    </ref>
    <ref id="c21">
      <label>21.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S.</given-names><surname>Hoops</surname></string-name>, 
<string-name><given-names>R.</given-names><surname>Gauges</surname></string-name>, 
<string-name><given-names>C.</given-names><surname>Lee</surname></string-name>, 
<string-name><given-names>J.</given-names><surname>Pahle</surname></string-name>, 
<string-name><given-names>N.</given-names><surname>Simus</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Singhal</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>COPASI—A complex pathway simulator</article-title>,” <source>Bioinformatics</source>
<volume>22</volume>(<issue>24</issue>), <fpage>3067</fpage>–<lpage>3074</lpage> (<year>2006</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/btl485</pub-id><pub-id pub-id-type="pmid">17032683</pub-id></mixed-citation>
    </ref>
    <ref id="c22">
      <label>22.</label>
      <mixed-citation publication-type="book"><string-name><given-names>Z.</given-names><surname>Szallasi</surname></string-name>, <source><italic toggle="yes">System Modeling in Cellular Biology: From Concepts to Nuts Bolts</italic></source> (
<publisher-name>MIT Press</publisher-name>, <year>2006</year>), p. <fpage>452</fpage>.</mixed-citation>
    </ref>
    <ref id="c23">
      <label>23.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>R.</given-names><surname>Alves</surname></string-name>, 
<string-name><given-names>F.</given-names><surname>Antunes</surname></string-name>, and 
<string-name><given-names>A.</given-names><surname>Salvador</surname></string-name>, “<article-title>Tools for kinetic modeling of biochemical networks</article-title>,” <source>Nat. Biotechnol.</source>
<volume>24</volume>(<issue>6</issue>), <fpage>667</fpage>–<lpage>672</lpage> (<year>2006</year>).<pub-id pub-id-type="doi">10.1038/nbt0606-667</pub-id><pub-id pub-id-type="pmid">16763599</pub-id></mixed-citation>
    </ref>
    <ref id="c24">
      <label>24.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S.</given-names><surname>Adra</surname></string-name>, 
<string-name><given-names>T.</given-names><surname>Sun</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>MacNeil</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Holcombe</surname></string-name>, and 
<string-name><given-names>R.</given-names><surname>Smallwood</surname></string-name>, “<article-title>Development of a three dimensional multiscale computational model of the human epidermis</article-title>,” <source>PLoS One</source>
<volume>5</volume>(<issue>1</issue>), <fpage>e8511</fpage> (<year>2010</year>).<pub-id pub-id-type="doi">10.1371/journal.pone.0008511</pub-id><pub-id pub-id-type="pmid">20076760</pub-id></mixed-citation>
    </ref>
    <ref id="c25">
      <label>25.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>H.</given-names><surname>Kaul</surname></string-name>, 
<string-name><given-names>Z.</given-names><surname>Cui</surname></string-name>, and 
<string-name><given-names>Y.</given-names><surname>Ventikos</surname></string-name>, “<article-title>A multi-paradigm modeling framework to simulate dynamic reciprocity in a bioreactor</article-title>,” <source>PLoS One</source>
<volume>8</volume>(<issue>3</issue>), <fpage>e59671</fpage> (<year>2013</year>).<pub-id pub-id-type="doi">10.1371/journal.pone.0059671</pub-id><pub-id pub-id-type="pmid">23555740</pub-id></mixed-citation>
    </ref>
    <ref id="c26">
      <label>26.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>Y.</given-names><surname>Vodovotz</surname></string-name>, 
<string-name><given-names>G.</given-names><surname>Clermont</surname></string-name>, 
<string-name><given-names>C.</given-names><surname>Chow</surname></string-name>, and 
<string-name><given-names>G.</given-names><surname>An</surname></string-name>, “<article-title>Mathematical models of the acute inflammatory response</article-title>,” <source>Curr. Opin. Crit. Care</source>
<volume>10</volume>, <fpage>383</fpage>–<lpage>390</lpage> (<year>2004</year>).<pub-id pub-id-type="doi">10.1097/01.ccx.0000139360.30327.69</pub-id><pub-id pub-id-type="pmid">15385756</pub-id></mixed-citation>
    </ref>
    <ref id="c27">
      <label>27.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>T.</given-names><surname>Sun</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>Adra</surname></string-name>, 
<string-name><given-names>R.</given-names><surname>Smallwood</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Holcombe</surname></string-name>, and 
<string-name><given-names>S.</given-names><surname>MacNeil</surname></string-name>, “<article-title>Exploring hypotheses of the actions of TGF-β1 in epidermal wound healing using a 3D computational multiscale model of the human epidermis</article-title>,” <source>PLoS One</source>
<volume>4</volume>(<issue>12</issue>), <fpage>e8515</fpage> (<year>2009</year>).<pub-id pub-id-type="doi">10.1371/journal.pone.0008515</pub-id><pub-id pub-id-type="pmid">20046881</pub-id></mixed-citation>
    </ref>
    <ref id="c28">
      <label>28.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>F.</given-names><surname>Mitha</surname></string-name>, 
<string-name><given-names>T. A.</given-names><surname>Lucas</surname></string-name>, 
<string-name><given-names>F.</given-names><surname>Feng</surname></string-name>, 
<string-name><given-names>T. B.</given-names><surname>Kepler</surname></string-name>, and 
<string-name><given-names>C.</given-names><surname>Chan</surname></string-name>, “<article-title>The multiscale systems immunology project: Software for cell-based immunological simulation</article-title>,” <source>Source Code Biol. Med.</source>
<volume>3</volume>(<issue>1</issue>), <fpage>6</fpage> (<year>2008</year>).<pub-id pub-id-type="doi">10.1186/1751-0473-3-6</pub-id><pub-id pub-id-type="pmid">18442405</pub-id></mixed-citation>
    </ref>
    <ref id="c29">
      <label>29.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>T.</given-names><surname>Süterlin</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>Huber</surname></string-name>, 
<string-name><given-names>H.</given-names><surname>Dickhaus</surname></string-name>, and 
<string-name><given-names>N.</given-names><surname>Grabe</surname></string-name>, “<article-title>Modeling multi-cellular behavior in epidermal tissue homeostasis via finite state machines in multi-agent systems</article-title>,” <source>Bioinformatics</source>
<volume>25</volume>(<issue>16</issue>), <fpage>2057</fpage>–<lpage>2063</lpage> (<year>2009</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/btp361</pub-id><pub-id pub-id-type="pmid">19535533</pub-id></mixed-citation>
    </ref>
    <ref id="c30">
      <label>30.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>T.</given-names><surname>Sütterlin</surname></string-name>, 
<string-name><given-names>C.</given-names><surname>Kolb</surname></string-name>, 
<string-name><given-names>H.</given-names><surname>Dickhaus</surname></string-name>, 
<string-name><given-names>D.</given-names><surname>Jäger</surname></string-name>, and 
<string-name><given-names>N.</given-names><surname>Grabe</surname></string-name>, “<article-title>Bridging the scales: Semantic integration of quantitative SBML in graphical multi-cellular models and simulations with EPISIM and COPASI</article-title>,” <source>Bioinformatics</source>
<volume>29</volume>(<issue>2</issue>), <fpage>223</fpage>–<lpage>229</lpage> (<year>2013</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/bts659</pub-id><pub-id pub-id-type="pmid">23162085</pub-id></mixed-citation>
    </ref>
    <ref id="c31">
      <label>31.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>V.</given-names><surname>Sarpe</surname></string-name> and 
<string-name><given-names>C.</given-names><surname>Jacob</surname></string-name>, “<article-title>Simulating the decentralized processes of the human immune system in a virtual anatomy model</article-title>,” <source>BMC Bioinf.</source>
<volume>14</volume>(<issue>Suppl 6</issue>), <fpage>S2</fpage> (<year>2013</year>).<pub-id pub-id-type="doi">10.1186/1471-2105-14-S6-S2</pub-id></mixed-citation>
    </ref>
    <ref id="c32">
      <label>32.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>N.</given-names><surname>Bloch</surname></string-name>, 
<string-name><given-names>G.</given-names><surname>Weiss</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>Szekely</surname></string-name>, and 
<string-name><given-names>D.</given-names><surname>Harel</surname></string-name>, “<article-title>An interactive tool for animating biology, and its use in spatial and temporal modeling of a cancerous tumor and its microenvironment</article-title>,” <source>PLoS One</source>
<volume>10</volume>(<issue>7</issue>), <fpage>e0133484</fpage> (<year>2015</year>).<pub-id pub-id-type="doi">10.1371/journal.pone.0133484</pub-id><pub-id pub-id-type="pmid">26191814</pub-id></mixed-citation>
    </ref>
    <ref id="c33">
      <label>33.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S.</given-names><surname>Tamrakar</surname></string-name>, 
<string-name><given-names>P.</given-names><surname>Richmond</surname></string-name>, and 
<string-name><given-names>R. M.</given-names><surname>D'Souza</surname></string-name>, “<article-title>PI-FLAME: A parallel immune system simulator using the FLAME graphic processing unit environment</article-title>,” <source>Simulation</source>
<volume>93</volume>(<issue>1</issue>), <fpage>69</fpage>–<lpage>84</lpage> (<year>2017</year>).<pub-id pub-id-type="doi">10.1177/0037549716673724</pub-id></mixed-citation>
    </ref>
    <ref id="c34">
      <label>34.</label>
      <mixed-citation publication-type="confproc"><string-name><given-names>M.</given-names><surname>Holcombe</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>Coakley</surname></string-name>, and 
<string-name><given-names>R.</given-names><surname>Smallwood</surname></string-name>, “<article-title>A general framework for agent-based modelling of complex systems</article-title>,” in <conf-name><italic>Proceedings of the 2006 European Conference on Complex Systems</italic></conf-name> (<year>2006</year>), pp. <fpage>1</fpage>–<lpage>6</lpage>.</mixed-citation>
    </ref>
    <ref id="c35">
      <label>35.</label>
      <mixed-citation publication-type="confproc"><string-name><given-names>P.</given-names><surname>Richmond</surname></string-name> and 
<string-name><given-names>D.</given-names><surname>Romano</surname></string-name>, “<article-title>Agent based GPU, a real-time 3D simulation and interactive visualisation framework for massive agent based modelling on the GPU</article-title>,” in <conf-name>Proceedings International Workshop on Super Visualisation</conf-name> (<year>2008</year>).</mixed-citation>
    </ref>
    <ref id="c36">
      <label>36.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M.</given-names><surname>Meier-Schellersheim</surname></string-name>, 
<string-name><given-names>X.</given-names><surname>Xu</surname></string-name>, 
<string-name><given-names>B.</given-names><surname>Angermann</surname></string-name>, 
<string-name><given-names>E. J.</given-names><surname>Kunkel</surname></string-name>, 
<string-name><given-names>T.</given-names><surname>Jin</surname></string-name>, and 
<string-name><given-names>R. N.</given-names><surname>Germain</surname></string-name>, “<article-title>Key role of local regulation in chemosensing revealed by a new molecular interaction-based modeling method</article-title>,” <source>PLoS Comput. Biol.</source>
<volume>2</volume>(<issue>7</issue>), <fpage>e82</fpage> (<year>2006</year>).<pub-id pub-id-type="doi">10.1371/journal.pcbi.0020082</pub-id><pub-id pub-id-type="pmid">16854213</pub-id></mixed-citation>
    </ref>
    <ref id="c37">
      <label>37.</label>
      <mixed-citation publication-type="eprint"><string-name><given-names>M.</given-names><surname>Meier-Schellersheim</surname></string-name> and 
<string-name><given-names>G.</given-names><surname>Mack</surname></string-name>, “<article-title>SIMMUNE, a tool for simulating and analyzing immune system behavior</article-title>,” eprint <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/arXiv:cs/9903017">arXiv:cs/9903017</ext-link> (<year>1999</year>).</mixed-citation>
    </ref>
    <ref id="c38">
      <label>38.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>V.</given-names><surname>Baldazzi</surname></string-name>, 
<string-name><given-names>F.</given-names><surname>Castiglione</surname></string-name>, and 
<string-name><given-names>M.</given-names><surname>Bernaschi</surname></string-name>, “<article-title>An enhanced agent based model of the immune system response</article-title>,” <source>Cell Immunol.</source>
<volume>244</volume>(<issue>2</issue>), <fpage>77</fpage>–<lpage>79</lpage> (<year>2006</year>).<pub-id pub-id-type="doi">10.1016/j.cellimm.2006.12.006</pub-id><pub-id pub-id-type="pmid">17416357</pub-id></mixed-citation>
    </ref>
    <ref id="c39">
      <label>39.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S.</given-names><surname>Hoehme</surname></string-name> and 
<string-name><given-names>D.</given-names><surname>Drasdo</surname></string-name>, “<article-title>A cell-based simulation software for multi-cellular systems</article-title>,” <source>Bioinformatics</source>
<volume>26</volume>(<issue>20</issue>), <fpage>2641</fpage>–<lpage>2642</lpage> (<year>2010</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/btq437</pub-id><pub-id pub-id-type="pmid">20709692</pub-id></mixed-citation>
    </ref>
    <ref id="c40">
      <label>40.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M. H.</given-names><surname>Swat</surname></string-name>, 
<string-name><given-names>G. L.</given-names><surname>Thomas</surname></string-name>, 
<string-name><given-names>J. M.</given-names><surname>Belmonte</surname></string-name>, 
<string-name><given-names>A.</given-names><surname>Shirinifard</surname></string-name>, 
<string-name><given-names>D.</given-names><surname>Hmeljak</surname></string-name>, and 
<string-name><given-names>J. A.</given-names><surname>Glazier</surname></string-name>, “<article-title>Multi-scale modeling of tissues using CompuCell3D</article-title>,” <source>Methods Cell Biol.</source>
<volume>110</volume>, <fpage>325</fpage>–<lpage>366</lpage> (<year>2012</year>).<pub-id pub-id-type="doi">10.1016/B978-0-12-388403-9.00013-8</pub-id><pub-id pub-id-type="pmid">22482955</pub-id></mixed-citation>
    </ref>
    <ref id="c41">
      <label>41.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>J. A.</given-names><surname>Izaguirre</surname></string-name>, 
<string-name><given-names>R.</given-names><surname>Chaturvedi</surname></string-name>, 
<string-name><given-names>C.</given-names><surname>Huang</surname></string-name>, 
<string-name><given-names>T.</given-names><surname>Cickovski</surname></string-name>, 
<string-name><given-names>J.</given-names><surname>Coffland</surname></string-name>, 
<string-name><given-names>G.</given-names><surname>Thomas</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>CompuCell, a multi-model framework for simulation of morphogenesis</article-title>,” <source>Bioinformatics</source>
<volume>20</volume>(<issue>7</issue>), <fpage>1129</fpage>–<lpage>1137</lpage> (<year>2004</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/bth050</pub-id><pub-id pub-id-type="pmid">14764549</pub-id></mixed-citation>
    </ref>
    <ref id="c42">
      <label>42.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>B.</given-names><surname>Chopard</surname></string-name>, 
<string-name><given-names>J.</given-names><surname>Borgdorff</surname></string-name>, and 
<string-name><given-names>A. G.</given-names><surname>Hoekstra</surname></string-name>, “<article-title>A framework for multi-scale modelling</article-title>,” <source>Philos. Trans. R. Soc. London, A</source>
<volume>372</volume>(<issue>2021</issue>), <fpage>20130378</fpage> (<year>2014</year>).<pub-id pub-id-type="doi">10.1098/rsta.2013.0378</pub-id></mixed-citation>
    </ref>
    <ref id="c43">
      <label>43.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S.</given-names><surname>Palsson</surname></string-name>, 
<string-name><given-names>T. P.</given-names><surname>Hickling</surname></string-name>, 
<string-name><given-names>E. L.</given-names><surname>Bradshaw-Pierce</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Zager</surname></string-name>, 
<string-name><given-names>K.</given-names><surname>Jooss</surname></string-name>, 
<string-name><given-names>P. J.</given-names><surname>O'Brien</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>The development of a fully-integrated immune response model (FIRM) simulator of the immune response through integration of multiple subset models</article-title>,” <source>BMC Syst. Biol.</source>
<volume>7</volume>(<issue>1</issue>), <fpage>95</fpage> (<year>2013</year>).<pub-id pub-id-type="doi">10.1186/1752-0509-7-95</pub-id><pub-id pub-id-type="pmid">24074340</pub-id></mixed-citation>
    </ref>
    <ref id="c44">
      <label>44.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>A.</given-names><surname>Cappuccio</surname></string-name>, 
<string-name><given-names>P.</given-names><surname>Tieri</surname></string-name>, and 
<string-name><given-names>F.</given-names><surname>Castiglione</surname></string-name>, “<article-title>Multiscale modelling in immunology: A review</article-title>,” <source>Briefings Bioinf.</source>
<volume>17</volume>(<issue>3</issue>), <fpage>408</fpage>–<lpage>418</lpage> (<year>2016</year>).<pub-id pub-id-type="doi">10.1093/bib/bbv012</pub-id></mixed-citation>
    </ref>
    <ref id="c45">
      <label>45.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M.</given-names><surname>Halling-Brown</surname></string-name>, 
<string-name><given-names>F.</given-names><surname>Pappalardo</surname></string-name>, 
<string-name><given-names>N.</given-names><surname>Rapin</surname></string-name>, 
<string-name><given-names>P.</given-names><surname>Zhang</surname></string-name>, 
<string-name><given-names>D.</given-names><surname>Alemani</surname></string-name>, 
<string-name><given-names>A.</given-names><surname>Emerson</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>ImmunoGrid: Towards agent-based simulations of the human immune system at a natural scale</article-title>,” <source>Philos. Trans. R. Soc., A</source>
<volume>368</volume>(<issue>1920</issue>), <fpage>2799</fpage>–<lpage>2815</lpage> (<year>2010</year>).<pub-id pub-id-type="doi">10.1098/rsta.2010.0067</pub-id></mixed-citation>
    </ref>
    <ref id="c46">
      <label>46.</label>
      <mixed-citation publication-type="book"><collab>Newzoo</collab>, <source><italic toggle="yes">The Global Games Market Reaches $99.6 Billion in 2016, Mobile Generating 37%</italic></source> (
<publisher-name>Newzoo</publisher-name>, <year>2016</year>).</mixed-citation>
    </ref>
    <ref id="c47">
      <label>47.</label>
      <mixed-citation publication-type="book"><string-name><given-names>K. I.</given-names><surname>Friese</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Herrlich</surname></string-name>, and 
<string-name><given-names>F. E.</given-names><surname>Wolter</surname></string-name>, “<article-title>Using game engines for visualization in scientific applications</article-title>,” in <source><italic toggle="yes">IFIP International Federation for Information Processing</italic></source> (
<publisher-name>Springer US</publisher-name>, 
<publisher-loc>Boston, MA</publisher-loc>, <year>2008</year>). pp. <fpage>11</fpage>–<lpage>22</lpage>.</mixed-citation>
    </ref>
    <ref id="c48">
      <label>48.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>B.</given-names><surname>Sawyer</surname></string-name>, “<article-title>Serious games: Broadening games impact beyond entertainment</article-title>,” <source>Comput. Graph Forum.</source>
<volume>26</volume>(<issue>3</issue>), <fpage>9600</fpage> (<year>2007</year>).<pub-id pub-id-type="doi">10.1111/j.1467-8659.2007.01044.x</pub-id></mixed-citation>
    </ref>
    <ref id="c49">
      <label>49.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>P.</given-names><surname>Richmond</surname></string-name>, 
<string-name><given-names>D.</given-names><surname>Walker</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>Coakley</surname></string-name>, and 
<string-name><given-names>D.</given-names><surname>Romano</surname></string-name>, “<article-title>High performance cellular level agent-based simulation with FLAME for the GPU</article-title>,” <source>Briefings Bioinf.</source>
<volume>11</volume>(<issue>3</issue>), <fpage>334</fpage>–<lpage>347</lpage> (<year>2010</year>).<pub-id pub-id-type="doi">10.1093/bib/bbp073</pub-id></mixed-citation>
    </ref>
    <ref id="c50">
      <label>50.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>J.</given-names><surname>Borgdorff</surname></string-name>, 
<string-name><given-names>J.-L.</given-names><surname>Falcone</surname></string-name>, 
<string-name><given-names>E.</given-names><surname>Lorenz</surname></string-name>, 
<string-name><given-names>C.</given-names><surname>Bona-Casas</surname></string-name>, 
<string-name><given-names>B.</given-names><surname>Chopard</surname></string-name>, and 
<string-name><given-names>A. G.</given-names><surname>Hoekstra</surname></string-name>, “<article-title>Foundations of distributed multiscale computing: Formalization, specification, and analysis</article-title>,” <source>J Parallel Distrib. Comput.</source>
<volume>73</volume>(<issue>4</issue>), <fpage>465</fpage>–<lpage>483</lpage> (<year>2013</year>).<pub-id pub-id-type="doi">10.1016/j.jpdc.2012.12.011</pub-id></mixed-citation>
    </ref>
    <ref id="c51">
      <label>51.</label>
      <mixed-citation publication-type="website"><collab>Nvidia</collab>, <ext-link ext-link-type="uri" xlink:href="http://www.nvidia.com/object/cuda_home_new.html">http://www.nvidia.com/object/cuda_home_new.html</ext-link> for CUDA: Parallel Programming and Computing Platform.</mixed-citation>
    </ref>
    <ref id="c52">
      <label>52.</label>
      <mixed-citation publication-type="website"><collab>Unity Technologies</collab>, <ext-link ext-link-type="uri" xlink:href="http://unity3d.com/">http://unity3d.com/</ext-link> for Unity3D.</mixed-citation>
    </ref>
    <ref id="c53">
      <label>53.</label>
      <mixed-citation publication-type="website">The Next Web, <ext-link ext-link-type="uri" xlink:href="https://thenextweb.com/gaming/2016/03/24/engine-dominating-gaming-industry-right-now/#.tnw_hRaUKwIg">https://thenextweb.com/gaming/2016/03/24/engine-dominating-gaming-industry-right-now/#.tnw_hRaUKwIg</ext-link> for this engine is dominating the gaming industry right now (<year>2016</year>).</mixed-citation>
    </ref>
    <ref id="c54">
      <label>54.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>S.</given-names><surname>Prokopiou</surname></string-name>, 
<string-name><given-names>L.</given-names><surname>Barbarroux</surname></string-name>, 
<string-name><given-names>S.</given-names><surname>Bernard</surname></string-name>, 
<string-name><given-names>J.</given-names><surname>Mafille</surname></string-name>, 
<string-name><given-names>Y.</given-names><surname>Leverrier</surname></string-name>, 
<string-name><given-names>C.</given-names><surname>Arpin</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>Multiscale modeling of the early CD8 T-cell immune response in lymph nodes: An integrative study</article-title>,” <source>Computation</source>
<volume>2</volume>(<issue>4</issue>), <fpage>159</fpage>–<lpage>181</lpage> (<year>2014</year>).<pub-id pub-id-type="doi">10.3390/computation2040159</pub-id></mixed-citation>
    </ref>
    <ref id="c55">
      <label>55.</label>
      <mixed-citation publication-type="other"><string-name><given-names>A.</given-names><surname>Liberman</surname></string-name>, 
<string-name><given-names>M.</given-names><surname>Mussel</surname></string-name>, 
<string-name><given-names>D.</given-names><surname>Kario</surname></string-name>, 
<string-name><given-names>U.</given-names><surname>Nevo</surname></string-name>, and 
<string-name><given-names>D.</given-names><surname>Sprinzak</surname></string-name>, “<article-title>Modeling and validation of a visualized 3D Receptor diffusion and interaction model using gaming technology</article-title>” (unpublished).</mixed-citation>
    </ref>
    <ref id="c56">
      <label>56.</label>
      <mixed-citation publication-type="journal"><string-name><given-names>M.</given-names><surname>Hucka</surname></string-name>, 
<string-name><given-names>A.</given-names><surname>Finney</surname></string-name>, 
<string-name><given-names>H. M.</given-names><surname>Sauro</surname></string-name>, 
<string-name><given-names>H.</given-names><surname>Bolouri</surname></string-name>, 
<string-name><given-names>J. C.</given-names><surname>Doyle</surname></string-name>, 
<string-name><given-names>H.</given-names><surname>Kitano</surname></string-name><etal><italic>et al.</italic></etal>, “<article-title>The systems biology markup language (SBML): A medium for representation and exchange of biochemical network models</article-title>,” <source>Bioinformatics</source>
<volume>19</volume>(<issue>4</issue>), <fpage>524</fpage>–<lpage>531</lpage> (<year>2003</year>).<pub-id pub-id-type="doi">10.1093/bioinformatics/btg015</pub-id><pub-id pub-id-type="pmid">12611808</pub-id></mixed-citation>
    </ref>
  </ref-list>
</back>

<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 2?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">4531504</article-id>
    <article-id pub-id-type="publisher-id">679</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-015-0679-9</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Research Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Breaking the computational barriers of pairwise genome comparison</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-8513-3109</contrib-id>
        <name>
          <surname>Torreno</surname>
          <given-names>Oscar</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1"/>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Trelles</surname>
          <given-names>Oswaldo</given-names>
        </name>
        <address>
          <email>ortrelles@uma.es</email>
        </address>
        <xref ref-type="aff" rid="Aff2"/>
      </contrib>
      <aff id="Aff1"><label/>Advanced Computing Technologies Unit, RISC Software GmbH, Softwarepark 35, Hagenberg, 4232 Austria </aff>
      <aff id="Aff2"><label/>Computer Architecture Department, University of Malaga, Bulevar Luis Pasteur 35, Malaga, 29071 Spain </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>11</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>11</day>
      <month>8</month>
      <year>2015</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2015</year>
    </pub-date>
    <volume>16</volume>
    <issue>1</issue>
    <elocation-id>250</elocation-id>
    <history>
      <date date-type="received">
        <day>10</day>
        <month>4</month>
        <year>2015</year>
      </date>
      <date date-type="accepted">
        <day>20</day>
        <month>7</month>
        <year>2015</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© Torreno and Trelles; licensee BioMed Central. 2015</copyright-statement>
      <license license-type="OpenAccess">
        <license-p>This is an Open Access article distributed under the terms of the Creative Commons Attribution License (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0">http://creativecommons.org/licenses/by/4.0</ext-link>), which permits unrestricted use, distribution, and reproduction in any medium, provided the original work is properly cited. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p>Conventional pairwise sequence comparison software algorithms are being used to process much larger datasets than they were originally designed for. This can result in processing bottlenecks that limit software capabilities or prevent full use of the available hardware resources. Overcoming the barriers that limit the efficient computational analysis of large biological sequence datasets by retrofitting existing algorithms or by creating new applications represents a major challenge for the bioinformatics community.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p>We have developed C libraries for pairwise sequence comparison within diverse architectures, ranging from commodity systems to high performance and cloud computing environments. Exhaustive tests were performed using different datasets of closely- and distantly-related sequences that span from small viral genomes to large mammalian chromosomes. The tests demonstrated that our solution is capable of generating high quality results with a linear-time response and controlled memory consumption, being comparable or faster than the current state-of-the-art methods.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p>We have addressed the problem of pairwise and all-versus-all comparison of large sequences in general, greatly increasing the limits on input data size. The approach described here is based on a modular out-of-core strategy that uses secondary storage to avoid reaching memory limits during the identification of High-scoring Segment Pairs (HSPs) between the sequences under comparison. Software engineering concepts were applied to avoid intermediate result re-calculation, to minimise the performance impact of input/output (I/O) operations and to modularise the process, thus enhancing application flexibility and extendibility. Our computationally-efficient approach allows tasks such as the massive comparison of complete genomes, evolutionary event detection, the identification of conserved synteny blocks and inter-genome distance calculations to be performed more effectively.</p>
      </sec>
      <sec>
        <title>Electronic supplementary material</title>
        <p>The online version of this article (doi:10.1186/s12859-015-0679-9) contains supplementary material, which is available to authorized users.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Comparative genomics</kwd>
      <kwd>Out-of-core algorithm</kwd>
      <kwd>External memory</kwd>
      <kwd>Long sequences comparison</kwd>
    </kwd-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2015</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p>The number of genome sequencing projects has grown exponentially, in parallel with a drastic reduction in the cost of sequencing. For example, at the turn of the millennium the cost of sequencing 1 Mbp of genomic DNA (million DNA base pairs) was about 10 thousand US dollars, compared to around 5 US cents at the time of writing [<xref ref-type="bibr" rid="CR1">1</xref>]. Scientists are continuing to develop faster and cheaper methods that will allow the routine sequencing of individual patient genomes, thus truly ushering in the era of genetics-based personalised medicine.</p>
    <p>The human genome is not the only one of interest to the research community, and the progression of sequencing technology also has huge consequences for studies involving the genomes of other organisms. At present, hundreds of different organisms, from all living kingdoms, have been sequenced and thousands more projects are on-going. These developments have put Comparative Genomics into the spotlight in order to provide the tools for studying relationships within this flood of data.</p>
    <p>Pairwise sequence comparison algorithms have been implemented since the early days of bioinformatics. Original algorithms for global [<xref ref-type="bibr" rid="CR2">2</xref>] and local alignments [<xref ref-type="bibr" rid="CR3">3</xref>] were designed using dynamic programming techniques that result in quadratic calculation time and memory consumption proportional to the product of the total number of bases analysed.</p>
    <p>When sequence analysis jumped from individual genes and proteins to full genomes, new software appeared, such as MegaBlast [<xref ref-type="bibr" rid="CR4">4</xref>], MUMmer [<xref ref-type="bibr" rid="CR5">5</xref>] and Gepard [<xref ref-type="bibr" rid="CR6">6</xref>], the latter of which has been reported to be able to compare more than 300 Mbp of human chromosome-1 in approximately 1 h [<xref ref-type="bibr" rid="CR6">6</xref>]. These software adopted some ideas introduced by the heuristic sequence database searching algorithms FASTA [<xref ref-type="bibr" rid="CR7">7</xref>], and later BLAST [<xref ref-type="bibr" rid="CR8">8</xref>]. These algorithms introduced a computational space reduction strategy based on the fast identification of matching points (hits) that are in turn used as seed points for the extension of local alignments. In FASTA, these matching points are perfect matches between K-mers (words of length k) from each sequence, while BLAST allows certain mismatches, thus enhancing its sensitivity. Other computational space reduction strategies confine the search to the most probable matching space (FASTA), or limit seed extension to regions with a minimal concentration of hits (BLAST).</p>
    <p>Additionally, some of the previous software adopted other ideas coming from the string matching field such as the Generalized Suffix Trees and Suffix Array data structures [<xref ref-type="bibr" rid="CR9">9</xref>, <xref ref-type="bibr" rid="CR10">10</xref>] which reduce significantly the computational complexity but still involves the use of significant memory resources (see Section 2.2 of the Additional file <xref rid="MOESM1" ref-type="media">1</xref>). In order to overcome the mentioned memory issue, a number of disk-based implementations were developed [<xref ref-type="bibr" rid="CR11">11</xref>–<xref ref-type="bibr" rid="CR13">13</xref>]. Despite using customised strategies to minimize the I/O operation overhead, they reported higher execution times for indexing the Human genome (6 h in [<xref ref-type="bibr" rid="CR12">12</xref>] and 11 h in [<xref ref-type="bibr" rid="CR13">13</xref>]) compared to 3 h for our proposed indexing strategy.</p>
    <p>In general, the reference software was designed to deal with genes, proteins and small genome sequences and since are now used for much larger datasets than they were originally designed for, they are now reaching their limit in terms of memory capacity and efficient computation on single-CPU systems. Consequently, there is a pressing need to design new software that tackles the memory consumption problem caused by the analysis of very large genome sequence datasets. A good strategy to deal with this problem is to move data that does not fit into internal memory to external memory (i.e. hard disks), following what is known as an out-of-core strategy [<xref ref-type="bibr" rid="CR14">14</xref>, <xref ref-type="bibr" rid="CR15">15</xref>]. However, since there is a difference of several orders of magnitude in access time between the two memory layers, special care must be taken in order to avoid performance degradation. Some of these approaches have previously been applied to bioinformatics [<xref ref-type="bibr" rid="CR16">16</xref>], but not specifically for pairwise genome comparison.</p>
    <p>In this document we report on GECKO (GEnome Comparison with K-mers Out-of-core), a modular application designed to identify collections of HSPs by pairwise genome comparison procedures, that can then be used to obtain gapped fragments. Our work improves on previous methods by introducing controlled memory usage and a modular design that allows further comparisons to be performed without the need to recalculate intermediate results and thus without sacrificing performance. We have benchmarked the application in terms of both performance and results quality. We designed experiments with datasets ranging from short sequences in the kilobase range to larger sequences up to 200 Mbp in length in order to compare GECKO against the best currently available software under both unfavourable and favourable conditions respectively. In addition, we performed a massive comparison exercise between mammalian chromosome sequences in order to test one of the key improvements of the application: the avoidance of intermediate result re-calculation. In the tests with short sequences, GECKO was slower compared to existing software, but with long sequences, the results were comparable or superior in terms of performance. The results quality in both cases (short and long sequences) was superior. Binaries are available from <ext-link ext-link-type="uri" xlink:href="http://bitlab-es.com/gecko/">http://bitlab-es.com/gecko/</ext-link>. Source code is available from: <ext-link ext-link-type="uri" xlink:href="https://sourceforge.net/projects/gecko-aligner/">https://sourceforge.net/projects/gecko-aligner/</ext-link>.</p>
  </sec>
  <sec id="Sec2" sec-type="methods">
    <title>Methods</title>
    <p>To overcome the limitations of existing sequence comparison methods we focused firstly on the application-specific reduction of main memory and computational space usage, and secondly on modularising the process using classical software engineering concepts. In the next sections, we explain how we reduce memory usage using an out-of-core strategy designed to manage data structures that are too large to fit into main memory at one time. Naturally, memory management could be delegated to the Operating System using virtual memory concepts; however poorer data locality can result in performance degradation in memory intensive applications such as large-scale sequence analyses. In addition, we explain the strategies applied to the design of GECKO (see Fig. <xref rid="Fig1" ref-type="fig">1</xref>): (a) Dictionary calculation, (b) Hits determination, (c) HSP detection, and (d) HSP post-processing.
<fig id="Fig1"><label>Fig. 1</label><caption><p>Summary of GECKO’s modular design. The branches on the top represent dictionary computation using the binary tree for each sequence. Once the dictionaries are calculated, perfect matches between words produce a set of seed points (hits). Afterwards, hits are sorted (by diagonal and offset inside the diagonal) and filtered. Finally, the hits are extended to generate a set of HSPs (FragHits). An additional figure with a real example is provided in Section 2.1 of the Additional file <xref rid="MOESM1" ref-type="media">1</xref>
</p></caption><graphic xlink:href="12859_2015_679_Fig1_HTML" id="MO1"/></fig></p>
    <sec id="Sec3">
      <title>Memory consumption and computational space reduction</title>
      <p>This section describes our approaches for dealing with the memory usage problem with an out-of-core solution, while compensating for the slower access time of secondary storage devices in several ways:
<list list-type="order"><list-item><p>Sensitivity studies involve obtaining results for different <italic>K</italic> values (word sizes) and require computing word dictionaries for each value. It is easy to realise that a collection of words of length <italic>K</italic> contains all the prefixes with <italic>K</italic>′&lt;<italic>K</italic> (only the last <italic>K</italic>−<italic>K</italic>′ K-mers at the end of each sequence are lost). Regardless of word length, the number of words is practically the same (sequence length <italic>L</italic>−<italic>K</italic>+1; with <italic>L</italic>&gt;&gt;<italic>K</italic>). Therefore the dictionary is calculated only once using a large <italic>K</italic> value (<italic>K</italic>=32 by default). It is important to note that although <italic>K</italic> is calculated with a value of 32, the value of <italic>K</italic>′ is selected by the user at the seed points step, based on their knowledge of the sequences’ similarity.</p></list-item><list-item><p>Words are compressed on disk with a compression rate of 4 by using 2 bits per letter. This is possible because the K-mers are strictly composed of the {A, C, G, T} symbols of the DNA alphabet.</p></list-item><list-item><p>Larger <italic>K</italic> values produce a lower number of word matches between sequences, mainly due to less frequent repetitions, and result in a greatly decreased number of potential seed points from which to extend the alignment. On-the-fly dictionary analysis of stored words (repetitions, low complexity regions, etc.) help users select the most appropriate <italic>K</italic> value. In some circumstances low complexity regions (LCRs) can result in an excessive number of seed points or hits that can severely affect performance. GECKO includes a sampling procedure that limits the maximum number of hits analysed in a given area according to a user defined parameter. This effectively limits the number of hits in repetitive regions to a number of equally spaced “samples”, thus reducing the processing impact of LCRs without affecting normal sequences.</p></list-item><list-item><p>It is possible to further reduce the number of selected hits by using a proximity criterion, whereby additional seed points must be separated by a minimum distance parameter from other hits in order to be extended.</p></list-item><list-item><p>The computed K-word dictionaries remain available for subsequent processing when comparing genomes, which significantly reduces I/O load.</p></list-item></list></p>
      <p>To reduce computational space usage we followed a similar strategy to that used by some existing solutions, which depends on the identification of common K-mers present in both sequences that are then used as seed points for local alignments.</p>
    </sec>
    <sec id="Sec4">
      <title>Modular design</title>
      <p>As mentioned above, the second major improvement of our design was to modularise the process. The application is designed to be used for multiple genome data analysis, allowing for parameter sensitive studies as well as all-versus-all comparisons of genome collections. With the aim of reducing dependencies and repetitive actions, we organised the application workflow as follows (see Fig. <xref rid="Fig1" ref-type="fig">1</xref>):
<list list-type="order"><list-item><p>One-off creation of a K-mer dictionary for each genome or sequence. The dictionary is stored on disk as a hash table, containing the words that appear in the sequence together with their positions.</p></list-item><list-item><p>Once calculated, K-mer dictionaries are then used to identify starting points (or hits) that will be used to obtain the HSPs. These seed points correspond to all possible matches produced between dictionary words. It is worth noting that the K value is parameterised at this point, with smaller K values derived as prefixes from the same dictionary.</p></list-item><list-item><p>Next, the application produces a local alignment (i.e. the HSPs) based on the calculated starting points, extending them in forward and reverse directions. From this point, all hits covered by a valid HSP are not analysed further.</p></list-item><list-item><p>To illustrate possible post-processing steps, several accessory modules have been developed such as HSP visualisation (equivalent to the Mummerplot application in the MUMmer suite); data format converters to allow the use of other visualisation software packages and further data analysis tools such as the K-mer frequency analysis program.</p></list-item></list></p>
      <p>With minimal performance losses several software development features have been incorporated into GECKO to enable the development of a set of multi-platform applications. Examples include the usage of generic data types with the same representations in 32 and 64 bit architectures, the implementation of data access functions to read/write binary files in order to avoid Endianness problems and buffering strategies to minimise I/O operations and improve performance.</p>
      <p>In the following sections we go into the details of each step performed by the GECKO application in chronological order.</p>
      <sec id="Sec5">
        <title>Dictionary calculation</title>
        <p>The dictionary calculation is based on the well-known binary tree in computer sciences. Each tree node contains a word (key) and its list of occurrences (values). Following the behaviour of a binary tree, left hand side nodes of a given tree come lexicographically before nodes on the right hand side. To avoid memory consumption problems caused by the huge number of possible words (i.e. a theoretical maximum of 4<sup><italic>K</italic></sup> different words, without counting repetitions), we decided to split the calculation in <italic>p</italic> steps (with <italic>p</italic> being a multiple of 4), thus reducing the amount of memory used by the program by a factor of <italic>p</italic> (assuming a normal distribution of words). To split the dictionary and conserve its lexicographical order, a prefix of length log4<italic>p</italic> is used. This strategy requires us to iterate <italic>p</italic> times over the whole sequence, using a different lexicographically-organized prefix each time to preserve word order. To avoid memory allocation requests for each node, a single memory pool is reserved at the beginning of the process. New memory pools are then only reserved once the currently reserved memory is used up. To obtain the final result we traverse the tree in order, storing the word contained in the node together with the list of occurrences. We considered other strategies for this step, such as a prefix tree and a suffix array, but found that they experience memory consumption issues similar to the problems faced by existing software approaches.</p>
      </sec>
      <sec id="Sec6">
        <title>Hits determination</title>
        <p>The second section of the workflow corresponds to the identification of the starting points or seeds for the local alignment. If a word <italic>w</italic><sub><italic>i</italic></sub> appears <italic>n</italic> times in the first sequence at positions <italic>p</italic><sub><italic>j</italic></sub>(<italic>j</italic>=1...<italic>n</italic>); and the same word <italic>w</italic><sub><italic>i</italic></sub> appears <italic>m</italic> times in the second sequence at positions <italic>p</italic><sub><italic>k</italic></sub>(<italic>k</italic>=1...<italic>m</italic>), a hit will occur in all (<italic>p</italic><sub><italic>j</italic></sub>,<italic>p</italic><sub><italic>k</italic></sub>) coordinates producing the following set <italic>h</italic>={(1,1),...(1,<italic>m</italic>),(2,1),...(2,<italic>m</italic>),(<italic>n</italic>,1),...(<italic>n</italic>,<italic>m</italic>)}. All these hits are then considered starting positions for possible local alignments. Depending on how similar the sequences are and also on the K value used, the number of resulting hits could be very high. It is highly recommended to mask low complexity regions in order to reduce the hits produced by repetitive sequences. To reduce the number of hits further we have applied a proximity approach, by which those hits on the same diagonal, defined as <italic>d</italic>=(<italic>p</italic><sub><italic>j</italic></sub>−<italic>p</italic><sub><italic>k</italic></sub>), and at a predefined distance are combined. This can be achieved quickly and easily by sorting hits by diagonal (and offset), what is performed using a threaded version of the quicksort algorithm, and then combining the hits that are within the distance parameter value.</p>
      </sec>
      <sec id="Sec7">
        <title>HSP detection</title>
        <p>The last calculation step consists of producing a set of ungapped HSPs that conform to a local alignment. An HSP is defined as a substring matching sequence whose positive accumulated score cannot be increased by extending the fragment at either of its extremes (i.e. until it attains a local similarity maximum between sequences). The score is calculated either by adding or subtracting a given weight value (usually on the basis of DNA identity) depending on if a match or mismatch is given, respectively. The fragment starts from a hit with a positive score (the seed points identified in the previous section), and is extended along the sequence modifying the overall HSP score until it becomes negative or the end of one of the sequences is reached (or both simultaneously). Fragment boundaries are positions that give the highest accumulated score at both ends as HSPs are extended in both directions along the sequence (forward and backward). The algorithm continues searching for HSPs within the next hit in the diagonal or the first one of the next diagonal. If the next hit in the same diagonal has been covered by extension of the previous HSP, it would not be used because it will result in a redundant sub-HSP within the previous one. GECKO outputs a set of identified HSPs that are defined by starting and ending coordinates in both sequences, together with HSP length, score and identity levels.</p>
      </sec>
      <sec id="Sec8">
        <title>HSP post-processing</title>
        <p>Almost all existing methods provide a way of graphically representing local alignments after computation. GECKO incorporates its own visualisation procedure that generates a PNG file as well as the ability to output its analyses in formats that can be processed by the visualisation methods included with existing analysis programs. In addition, GECKO includes post-processing applications that enable tasks such as the ability to apply additional filters to HSP collections or generate gapped alignment constructions based on ungapped ones.</p>
      </sec>
    </sec>
  </sec>
  <sec id="Sec9" sec-type="results">
    <title>Results</title>
    <sec id="Sec10">
      <title>Dataset</title>
      <p>The selected test dataset contains sequences of different sizes in order to thoroughly compare GECKO with other state-of-the-art methods under both favourable (large sequences) and unfavourable (short sequences) situations. Specifically, the dataset is composed of short (virus), medium (bacteria and fly), and large (mammalian) sequences (see Table <xref rid="Tab1" ref-type="table">1</xref> for sequence names and their GenBank accession numbers). The large mammalian sequences will also be used for an all-versus-all experiment.
<table-wrap id="Tab1"><label>Table 1</label><caption><p>Dataset information. From left to right: Type of comparison for which the sequence is going to be used, species name, strand and/or chromosome of origin, GenBank accession number and size in Mbp</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Test type</th><th align="left">Species</th><th align="left">Strain / Chromosome</th><th align="left">Accession number</th><th align="left">Mbp</th></tr></thead><tbody><tr><td align="center">Pairwise comparison</td><td align="left">Tomato Yellow Leaf Curl Virus</td><td align="left">TYLCV</td><td align="left">GenBank:AM409201.1</td><td align="right">0.004</td></tr><tr><td align="center"/><td align="left">Tomato Yellow Leaf Curl Virus</td><td align="left">TYLCV-lr2</td><td align="left">GenBank:EU085423.2</td><td align="right">0.004</td></tr><tr><td align="center"/><td align="left">Buchnera aphidicola</td><td align="left">APS (Acyrthosiphon pisum)</td><td align="left">GenBank:NC_002528.1</td><td align="right">0.636</td></tr><tr><td align="center"/><td align="left">Buchnera aphidicola</td><td align="left">5A (Acyrthosiphon pisum)</td><td align="left">GenBank:NC_011833.1</td><td align="right">0.640</td></tr><tr><td align="center"/><td align="left">Escherichia coli</td><td align="left">K-12</td><td align="left">GenBank:NC_000913.2</td><td align="right">4.596</td></tr><tr><td align="center"/><td align="left">Escherichia coli</td><td align="left">O157:H7 Sakai</td><td align="left">GenBank:NC_002695.1</td><td align="right">5.448</td></tr><tr><td align="center"/><td align="left">Drosophila melanogaster</td><td align="left">chromosome 2R</td><td align="left">GenBank:NT_033778.3</td><td align="right">20.948</td></tr><tr><td align="center"/><td align="left">Drosophila pseudoobscura</td><td align="left">strain MV2–25 chromsome 3</td><td align="left">GenBank:NC_009006.2</td><td align="right">19.604</td></tr><tr><td align="center">Multiple comparison</td><td align="left">Homo sapiens</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_000001.11</td><td align="right">246.600</td></tr><tr><td align="center"/><td align="left">Pan troglodytes</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_006468.3</td><td align="right">226.172</td></tr><tr><td align="center"/><td align="left">Macaca mulata</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_007858.1</td><td align="right">226.092</td></tr><tr><td align="center"/><td align="left">Pongo abelii</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_012591.1</td><td align="right">227.768</td></tr><tr><td align="center"/><td align="left">Gorilla gorilla</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_018424.1</td><td align="right">227.336</td></tr><tr><td align="center"/><td align="left">Mus musculus</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_000067.6</td><td align="right">193.624</td></tr><tr><td align="center"/><td align="left">Rattus norvegicus</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_005100.3</td><td align="right">287.344</td></tr><tr><td align="center"/><td align="left">Bos taurus breed Hereford</td><td align="left">chromosome 1</td><td align="left">GenBank:AC_000158.1</td><td align="right">156.840</td></tr><tr><td align="center"/><td align="left">Canis lupus familiaris breed Boxer</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_006583.3</td><td align="right">121.516</td></tr><tr><td align="center"/><td align="left">Sus scrofa breed mixed</td><td align="left">chromosome 1</td><td align="left">GenBank:NC_010443.4</td><td align="right">312.336</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec11">
      <title>Infrastructure and reference software</title>
      <p>GECKO performance will be compared against equivalent state-of-the-art applications such as Gepard [<xref ref-type="bibr" rid="CR6">6</xref>], MUMmer [<xref ref-type="bibr" rid="CR5">5</xref>], Mauve [<xref ref-type="bibr" rid="CR17">17</xref>], LASTZ [<xref ref-type="bibr" rid="CR18">18</xref>] and LAST [<xref ref-type="bibr" rid="CR19">19</xref>–<xref ref-type="bibr" rid="CR21">21</xref>]. Either the source code or pre-compiled binaries were downloaded from the sources provided in the corresponding manuscripts. GECKO was compiled using GNU C Compiler (GCC) version 4.8.2, with “-O3” and “-D_FILE_OFFSET_BITS=64” compiling options (in the same way reference software packages were compiled). All the reference software was used in their command line versions in order to do a fair comparison with GECKO which is also executed through the command line (more details about execution parameters in the Section 3.3 of the Additional file <xref rid="MOESM1" ref-type="media">1</xref>).</p>
      <p>The tests reported in this document were performed using an Openstack cloud instance configured with 4 Intel Xeon E312xx (Sandy Bridge) 2.0GHz equivalent cores, 8GB of RAM and the Ubuntu 12.04 LTS 64-bit operating system. For storage, a 300GB Openstack volume was used. The underlying physical disks of the Openstack setup were conventional ones (500GB, 16MB buffer, SATA 3, 7200 RPM). The cloud instance was deployed within the RISC Software GmbH cloud facilities in Hagenberg, Austria. Due to the inability of some current software to run in the mentioned infrastructure with large sequences (see the notes of Table <xref rid="Tab2" ref-type="table">2</xref>), we additionally used Picasso shared memory multiprocessor located at the University of Málaga (Málaga, Spain). It contains 7 nodes, each with eight Intel E7-4870 processors which delivers 96 Gflop/s each, giving a peak performance of 5 Tflop/s. Each node has 2 TB of RAM giving an aggregate memory of 14 TB.
<table-wrap id="Tab2"><label>Table 2</label><caption><p>Execution time in seconds for the comparison of the sequences listed in Table <xref rid="Tab1" ref-type="table">1</xref> under “pairwise comparison” (lowest execution time and memory consumption of each row are highlighted in bold). The comparison of mammalian chromosomes was also included to test the ability of GECKO and reference software packages to function when analysing very large datasets. The dictionary calculation time is included in the reported times, since the dictionary were not pre-calculated. “n.a.” indicates that resource problems prevented analysis execution and the presence of (*<sup>1</sup>) after some execution times indicates that the time was measured in a bigger machine because in such cases they were using more than 8GB of memory (more details of these cases in the Additional file <xref rid="MOESM1" ref-type="media">1</xref> Section 3.3)</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left"/><th align="left" colspan="2">Gepard</th><th align="left" colspan="2">MUMmer</th><th align="left" colspan="2">Mauve</th></tr><tr><th align="left">Comparison</th><th align="left">Time</th><th align="left">Memory</th><th align="left">Time</th><th align="left">Memory</th><th align="left">Time</th><th align="left">Memory</th></tr></thead><tbody><tr><td align="left">TYLCV-TYLCV-lr2</td><td align="right">0.84</td><td align="right">52824</td><td align="right"><bold>0.00</bold></td><td align="right">2944</td><td align="right">0.06</td><td align="right"><bold>2800</bold></td></tr><tr><td align="left">BuchneraAPS-BuchneraBp</td><td align="right">2.56</td><td align="right">74808</td><td align="right"><bold>0.44</bold></td><td align="right"><bold>11100</bold></td><td align="right">6.73</td><td align="right">14304</td></tr><tr><td align="left">E.colik12-E.coliO157</td><td align="right">33.12</td><td align="right">378412</td><td align="right">10.63</td><td align="right"><bold>79212</bold></td><td align="right">45.92</td><td align="right">99880</td></tr><tr><td align="left">D.Melanogaster-D.Pseudoobscura</td><td align="right">238.34</td><td align="right">716244</td><td align="right">45.99</td><td align="right">355272</td><td align="right">294.92</td><td align="right">379912</td></tr><tr><td align="left">H.Sapiens-Chr1-P.Troglodytes-chr1</td><td align="right"><bold>7</bold><bold>0</bold><bold>8</bold><bold>4</bold><bold>.</bold><bold>0</bold><bold>0</bold><sup>∗1</sup></td><td align="right">49788208</td><td align="right">23226.00<sup>∗1</sup>
</td><td align="right">15747168</td><td align="right">&gt;604800.00</td><td align="right">n.a.</td></tr><tr><td align="left"/><td align="center" colspan="2">LASTZ</td><td align="center" colspan="2">LAST</td><td align="center" colspan="2">GECKO</td></tr><tr><td align="left">Comparison</td><td align="right">Time</td><td align="right">Memory</td><td align="right">Time</td><td align="right">Memory</td><td align="right">Time</td><td align="right">Memory</td></tr><tr><td align="left">TYLCV-TYLCV-lr2</td><td align="right">0.04</td><td align="right">67388</td><td align="right"><bold>0.00</bold></td><td align="right">3024</td><td align="right">0.36</td><td align="right">1564816</td></tr><tr><td align="left">BuchneraAPS-BuchneraBp</td><td align="right">0.46</td><td align="right">71244</td><td align="right">46.20</td><td align="right">475912</td><td align="right">1.60</td><td align="right">1564816</td></tr><tr><td align="left">E.colik12-E.coliO157</td><td align="right"><bold>1.83</bold></td><td align="right">95884</td><td align="right">109.00</td><td align="right">1972028</td><td align="right">17.20</td><td align="right">1564816</td></tr><tr><td align="left">D.Melanogaster-D.Pseudoobscura</td><td align="right"><bold>19.64</bold></td><td align="right"><bold>190448</bold></td><td align="right">1593.00</td><td align="right">5436716</td><td align="right">48.72</td><td align="right">1564816</td></tr><tr><td align="left">H.Sapiens-Chr1-P.Troglodytes-chr1</td><td align="right">78360.00</td><td align="right">5782352</td><td align="right">n.a.</td><td align="right">312065840</td><td align="right"><bold>11848.15</bold></td><td align="right"><bold>1564816</bold></td></tr></tbody></table></table-wrap></p>
      <p>Results shown in this section (Table <xref rid="Tab2" ref-type="table">2</xref>) correspond to sequential (one core) execution of each module except for the hit sorting method that used 8 threads running on one 4 core CPU. Further benchmarks using diverse collections of additional data are available in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
    </sec>
    <sec id="Sec12">
      <title>Pairwise tests</title>
      <p>Multiple tests of the proposed out-of-core implementation have been designed within the simple pairwise comparison framework to evaluate memory consumption as a function of sequence length.</p>
    </sec>
    <sec id="Sec13">
      <title>Multiple comparison tests</title>
      <p>This exercise was designed to test the advantages of saving intermediate results to disk. The test involves comparing human (Homo sapiens) chromosome 1 against the same chromosome in several other species. Figure <xref rid="Fig2" ref-type="fig">2</xref> displays the visualisation of the resulting HSPs for <italic>P. troglodytes, M. mulatta, P. abelii, G. gorilla, M. musculus, R. norvegicus, B. taurus, C. familiaris and S. scrofa.</italic> It is worth noting, that only execution times of some methods are shown, due to the inability of the rest to run these tests in the mentioned infrastructure.
<fig id="Fig2"><label>Fig. 2</label><caption><p>Separate dotplot-like representations of Human chromosome 1 (X-axis) compared to equivalent chromosomes from several other mammalian species: (<bold>1</bold>) Pan troglodytes, (<bold>2</bold>) Macaca mulata, (<bold>3</bold>) Pongo abelii, (<bold>4</bold>) Gorilla gorilla, (<bold>5</bold>) Mus musculus, (<bold>6</bold>) Rattus norvegicus, (<bold>7</bold>) Bos taurus, (<bold>8</bold>) Canis familiaris and (<bold>9</bold>) Sus scrofa. Red colour indicates forward strand fragments and black the reverse strand ones. Plots indicate that there are closely-related (from 1 to 5) and remotely-related (from 6 to 9) sequences. This is caused by the fact of that chromosome numbering was based on their length and not their content. For example, human chromosome 1 is present in several chromosomes of Bos Taurus (but not in the first chromosome, as can be deduced from sub-figure 7). An image with the first five sub-plots projected over one sequence is provided in the Additional file <xref rid="MOESM1" ref-type="media">1</xref>
</p></caption><graphic xlink:href="12859_2015_679_Fig2_HTML" id="MO2"/></fig></p>
      <p>In all cases, we took into account the execution time of the full pipeline, as this test was designed to evaluate the worst-case situation. As explained in the Methods section, GECKO only needed to obtain the dictionaries once for the previous set of comparisons. For the sake of understanding the impact of this step and to aid comparisons with other methods, GECKO dictionary calculation times are shown in Table <xref rid="Tab3" ref-type="table">3</xref> and the total time is shown in Table <xref rid="Tab4" ref-type="table">4</xref>.
<table-wrap id="Tab3"><label>Table 3</label><caption><p>Dictionary calculation execution time in seconds for the sequences listed in Table <xref rid="Tab1" ref-type="table">1</xref> under the multiple comparison test type</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Sequence (chr1)</th><th align="left">Time</th></tr></thead><tbody><tr><td align="left">Homo sapiens (HS)</td><td align="right">747.53</td></tr><tr><td align="left">Pan troglodytes (PT)</td><td align="right">630.07</td></tr><tr><td align="left">Macaca mulata (MM)</td><td align="right">649.26</td></tr><tr><td align="left">Pongo abelii (PA)</td><td align="right">628.81</td></tr><tr><td align="left">Gorilla gorilla (GG)</td><td align="right">712.68</td></tr><tr><td align="left">Mus musculus (MMu)</td><td align="right">537.45</td></tr><tr><td align="left">Rattus norvegicus (RN)</td><td align="right">857.28</td></tr><tr><td align="left">Bos taurus breed Hereford (BT)</td><td align="right">451.83</td></tr><tr><td align="left">Canis lupus familiaris breed Boxer (CF)</td><td align="right">293.36</td></tr><tr><td align="left">Sus scrofa breed mixed (SS)</td><td align="right">980.99</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec14">
      <title>Results quality</title>
      <p>Although the performance aspects of GECKO’s design are crucial, the production of high quality results is equally important. In this section we explain how we evaluated the quality of the results produced by our algorithm versus the other applications using the same parameters. The rationale behind our evaluation was to compare the coverage of the HSPs detected by each algorithm. To avoid biases in the evaluation we decide to obtain a consensus set of reference HSPs. This set is composed of those HSPs reported by at least half of the reference algorithms. The HSPs produced by GECKO were then mapped over the reference HSPs and the percentage of coverage recorded as a measurement of result quality. This means that matching positions reported by the consensus HSP reference and not reported by GECKO will push down the quality and vice versa. There are more sophisticated ways of comparing the results, such as only considering coding regions, or by qualifying and weighting matches depending on sequence type or section. However, we decided not to use these methods as they can incorporate noise or biases into the evaluation.</p>
      <p>Following this procedure, we performed quality evaluation on sets of both closely- and remotely-related sequences in order to thoroughly study the results of GECKO. In the case of closely-related sequences, our evaluation determined that GECKO detected 3 % more HSPs than the consensus set. Moreover, GECKO obtained a larger dataset while maintaining identity values over 65 %, thus representing the identification of additional statistically-significant HSPs. For both short and long remotely-related sequences, GECKO again obtained an average of 3 % more HSPs with identity values above 65 %. In addition to the coverage study, we also evaluated the identity values of the HSPs reported by GECKO compared to those of LASTZ. This test produced similar results for the two methods albeit with slightly better values reported by GECKO (details of this evaluation can be found in Sections 5.1, 5.2 and 5.3 of the Additional file <xref rid="MOESM1" ref-type="media">1</xref>).</p>
    </sec>
    <sec id="Sec15">
      <title>Visualisation</title>
      <p>Strictly speaking GECKO is not intended for dotplot-like visualisation. However, we provide two alternatives: (1) two different programs able to generate 2D representations, one for single pairwise comparison results, capable of analysing forward and reverse HSPs (see Fig. <xref rid="Fig2" ref-type="fig">2</xref>); and the second for multiple comparisons whereby all comparisons are projected over one of the sequences selected as the reference. Obviously, any of the compared sequences can be used as the reference; (2) small plugins that allow GECKO results to be converted into formats compatible with commonly used visualisation methods.</p>
    </sec>
  </sec>
  <sec id="Sec16" sec-type="discussion">
    <title>Discussion</title>
    <p>Considering that GECKO’s implementation was designed primarily for very large sequence comparisons, it compares surprisingly well with the reference software packages when analysing short sequences. It is as fast as Gepard even when the dictionaries were not pre-calculated. Gepard reports 33 s for 5 Mbp genomes, compared with 17 s for our implementation. In the cases of MUMmer, LAST and LASTZ, our execution time was greater, due to the different strategy we are following compared to the suffix array indexing they are using, but still the difference is acceptable since the execution time is not that high. However, for longer sequences, our method strongly outperforms existing methods. GECKO needed less than 2 h in average to compare chromosome 1 from different species (all possessing more than 120 Mbp) against the 3 h and a half in average of Gepard and MUMmer and the 29 h of LASTZ (average values extracted from Table <xref rid="Tab4" ref-type="table">4</xref>). Since all the reference software packages manage data structures in core memory, their good performance with short sequences was predictable, but this also means that their performance degrades as sequence size grows, entering into starvation when no more computational resources are available. This is due in part to the use of the Suffix Array data structure which in one side reduces the computational complexity but in the other increases the memory consumption up to 9 times the length of the input sequence in the most efficient implementations. For comparison purposes and to prove the mentioned Suffix Array memory consumption, we implemented a Suffix Array version of the program which significantly reduces the computation time compared with our actual dictionary strategy, but as mentioned is using more memory (more details can be seen in the Additional file <xref rid="MOESM1" ref-type="media">1</xref> Section 2.2 “Alternative dictionary calculation using Suffix arrays”). The results of these comparisons are shown in Table <xref rid="Tab2" ref-type="table">2</xref>. and more details are available in the Additional file <xref rid="MOESM1" ref-type="media">1</xref> at Section 3.3.</p>
    <p>GECKO’s implementation showed real-world performance gains ranging from 133 % versus Gepard for TYLCV comparison, to 3269 % versus LAST in the case of Drosophila comparison (see Table <xref rid="Tab2" ref-type="table">2</xref>).</p>
    <sec id="Sec17">
      <title>In- or out-of-core implementations and modularity</title>
      <p>Traditionally, bioinformatics programs, in common with conventional software development practices, are designed to perform calculations with the data loaded in main memory. This is in order to take advantage of the difference in access time between main and external memory, which is in the range of several orders of magnitude. However, the growth rate of available data has been even greater than the growth of the typical amount of RAM memory available. Although some specialised infrastructures offer TB quantities of RAM, such facilities are not yet routinely available to the global research community, while the quantity of available sequence data continues to spiral.</p>
      <p>Clearly, in the era of Big Data it is increasingly impractical to keep all the data in core. Consequently there is a pressing need to re-design trusted software packages, as well as to develop brand new software strategies to tackle this problem. It is valid to exploit the particular data flow of each specific application, but generic solutions that can be applied to new problems as they emerge should ideally be the final target of developers. In this sense, our work here explores how both approaches can be combined to better exploit their advantages. The out-of-core implementation used in GECKO has the following advantages:
<list list-type="order"><list-item><p>It removes any dependence on K-mer size, giving rise to the possibility of using small prefixes for short sequences and bigger values for larger ones. We have identified 32 as a maximum K value that gives the exact matches that are useful for this type of application, especially while comparing distantly-related sequences. Greater K values did not produce enough seed points for a meaningful comparison (even with chromosome or genome-sized datasets).</p></list-item><list-item><p>Working in disk allows word dictionaries computed by previous program instances to be preserved in secondary storage, thus reducing the time required for multiple comparison studies. As can be seen in Tables <xref rid="Tab3" ref-type="table">3</xref> and <xref rid="Tab4" ref-type="table">4</xref>, the time saved by dictionary pre-calculation is around 65 % of total elapsed time for remotely related sequences and 7 % for closely related ones. For all-versus-all studies, with <italic>n</italic>∗(<italic>n</italic>−1)/2 comparisons, the time reduction is even greater since we save repeating dictionary-recalculation <italic>n</italic>−1 times. This is one of the drawbacks of current methods. It is important to note, that the time to access the dictionary from disk is less than the combined time to access the sequence from disk and re-build the dictionary, what confirms the improvement of storing it in disk.</p></list-item><list-item><p>The modular implementation of GECKO stores intermediate results to disk, which facilitates the development of small and simple software components that allow the exhaustive analysis of the program’s final output, as well as intermediate data such as word frequencies, word structure, comparative studies, extreme frequency analysis, functional genomics annotation and data visualisation. This method for organising execution even allows interactive analysis, with the possibility of re-executing specific parts of the analysis with different parameters.</p></list-item></list></p>
      <table-wrap id="Tab4">
        <label>Table 4</label>
        <caption>
          <p>The numbers in the upper diagonal refer to the combined execution time for total HSP calculation, hit sorting and all-vs-all comparison of both strands (forward and reverse) in seconds (acronyms as described in Table <xref rid="Tab3" ref-type="table">3</xref>). The charts in the bottom part are symmetric visual representations of the corresponding cell in the upper diagonal (bar colour legend: blue =GECKO; orange =Gepard; grey =Lastz; and yellow =MUMmer). The total execution time (in seconds) for all the comparisons were: GECKO - 318591, Gepard - 576889, Lastz - 4752315 and MUMmer - 558360. The total time for GECKO represents a dummy execution, the actual execution time (executing the dictionary calculation once) was of 142954</p>
        </caption>
        <table frame="hsides" rules="groups">
          <thead>
            <tr>
              <th align="left"/>
              <th align="left">Method</th>
              <th align="left">HS</th>
              <th align="left">PT</th>
              <th align="left">MM</th>
              <th align="left">PA</th>
              <th align="left">GG</th>
              <th align="left">MMU</th>
              <th align="left">RN</th>
              <th align="left">BT</th>
              <th align="left">CF</th>
              <th align="left">SS</th>
            </tr>
          </thead>
          <tbody>
            <tr>
              <td align="left">HS</td>
              <td align="left">GECKO</td>
              <td align="right"/>
              <td align="right">19190</td>
              <td align="right">2438</td>
              <td align="right">11282</td>
              <td align="right">11433</td>
              <td align="right">9358</td>
              <td align="right">11367</td>
              <td align="right">3768</td>
              <td align="right">2944</td>
              <td align="right">5875</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right">6152</td>
              <td align="right">2581</td>
              <td align="right">12973</td>
              <td align="right">2861</td>
              <td align="right">8644</td>
              <td align="right">11478</td>
              <td align="right">5850</td>
              <td align="right">5540</td>
              <td align="right">14880</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right">158874</td>
              <td align="right">140255</td>
              <td align="right">117398</td>
              <td align="right">105912</td>
              <td align="right">108312</td>
              <td align="right">96593</td>
              <td align="right">63294</td>
              <td align="right">70904</td>
              <td align="right">157619</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right">13891</td>
              <td align="right">2536</td>
              <td align="right">7519</td>
              <td align="right">11083</td>
              <td align="right">31164</td>
              <td align="right">10566</td>
              <td align="right">2127</td>
              <td align="right">3277</td>
              <td align="right">10170</td>
            </tr>
            <tr>
              <td align="left">PT</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figa_HTML.gif" id="d30e1763"/>
              </td>
              <td align="right"/>
              <td align="right">2932</td>
              <td align="right">10567</td>
              <td align="right">9287</td>
              <td align="right">9686</td>
              <td align="right">10800</td>
              <td align="right">3766</td>
              <td align="right">2939</td>
              <td align="right">5909</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right">15662</td>
              <td align="right">22242</td>
              <td align="right">26400</td>
              <td align="right">27394</td>
              <td align="right">9113</td>
              <td align="right">11362</td>
              <td align="right">10445</td>
              <td align="right">12856</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right">135093</td>
              <td align="right">191012</td>
              <td align="right">181386</td>
              <td align="right">210949</td>
              <td align="right">164312</td>
              <td align="right">171510</td>
              <td align="right">146315</td>
              <td align="right">115160</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right">6214</td>
              <td align="right">23434</td>
              <td align="right">43301</td>
              <td align="right">27051</td>
              <td align="right">9640</td>
              <td align="right">1594</td>
              <td align="right">2836</td>
              <td align="right">10384</td>
            </tr>
            <tr>
              <td align="left">MM</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figb_HTML.gif" id="d30e1898"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figc_HTML.gif" id="d30e1904"/>
              </td>
              <td align="right"/>
              <td align="right">3322</td>
              <td align="right">5432</td>
              <td align="right">5306</td>
              <td align="right">7558</td>
              <td align="right">4461</td>
              <td align="right">3294</td>
              <td align="right">6387</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">16356</td>
              <td align="right">16675</td>
              <td align="right">15573</td>
              <td align="right">9349</td>
              <td align="right">8663</td>
              <td align="right">7111</td>
              <td align="right">13517</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">141032</td>
              <td align="right">128324</td>
              <td align="right">136632</td>
              <td align="right">128874</td>
              <td align="right">72552</td>
              <td align="right">57393</td>
              <td align="right">133667</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">4512</td>
              <td align="right">6669</td>
              <td align="right">17013</td>
              <td align="right">25387</td>
              <td align="right">1736</td>
              <td align="right">6005</td>
              <td align="right">10423</td>
            </tr>
            <tr>
              <td align="left">PA</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figd_HTML.gif" id="d30e2031"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Fige_HTML.gif" id="d30e2037"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figf_HTML.gif" id="d30e2043"/>
              </td>
              <td align="right"/>
              <td align="right">31137</td>
              <td align="right">10012</td>
              <td align="right">5907</td>
              <td align="right">3770</td>
              <td align="right">3081</td>
              <td align="right">5879</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">28282</td>
              <td align="right">25929</td>
              <td align="right">11305</td>
              <td align="right">11727</td>
              <td align="right">11680</td>
              <td align="right">14778</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">148768</td>
              <td align="right">167206</td>
              <td align="right">135357</td>
              <td align="right">82444</td>
              <td align="right">63000</td>
              <td align="right">157305</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">15115</td>
              <td align="right">36458</td>
              <td align="right">19321</td>
              <td align="right">3330</td>
              <td align="right">3170</td>
              <td align="right">11564</td>
            </tr>
            <tr>
              <td align="left">GG</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figg_HTML.gif" id="d30e2160"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figh_HTML.gif" id="d30e2166"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figi_HTML.gif" id="d30e2172"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figj_HTML.gif" id="d30e2178"/>
              </td>
              <td align="right"/>
              <td align="right">9703</td>
              <td align="right">5957</td>
              <td align="right">5206</td>
              <td align="right">5294</td>
              <td align="right">7895</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">25819</td>
              <td align="right">9960</td>
              <td align="right">13355</td>
              <td align="right">13250</td>
              <td align="right">13244</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">137351</td>
              <td align="right">63414</td>
              <td align="right">44411</td>
              <td align="right">28089</td>
              <td align="right">66732</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">36614</td>
              <td align="right">11729</td>
              <td align="right">6869</td>
              <td align="right">30429</td>
              <td align="right">45431</td>
            </tr>
            <tr>
              <td align="left">MMU</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figk_HTML.gif" id="d30e2286"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figl_HTML.gif" id="d30e2292"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figm_HTML.gif" id="d30e2298"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Fign_HTML.gif" id="d30e2304"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figo_HTML.gif" id="d30e2310"/>
              </td>
              <td align="right"/>
              <td align="right">5908</td>
              <td align="right">5159</td>
              <td align="right">5170</td>
              <td align="right">5873</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">10229</td>
              <td align="right">12219</td>
              <td align="right">11360</td>
              <td align="right">13493</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">58823</td>
              <td align="right">44641</td>
              <td align="right">32046</td>
              <td align="right">92761</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">8546</td>
              <td align="right">1307</td>
              <td align="right">2756</td>
              <td align="right">10128</td>
            </tr>
            <tr>
              <td align="left">RN</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figp_HTML.gif" id="d30e2410"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figq_HTML.gif" id="d30e2416"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figr_HTML.gif" id="d30e2422"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figs_HTML.gif" id="d30e2428"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figt_HTML.gif" id="d30e2434"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figu_HTML.gif" id="d30e2440"/>
              </td>
              <td align="right"/>
              <td align="right">5930</td>
              <td align="right">5894</td>
              <td align="right">5935</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">8143</td>
              <td align="right">6458</td>
              <td align="right">17278</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">47869</td>
              <td align="right">39163</td>
              <td align="right">79895</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">1979</td>
              <td align="right">4702</td>
              <td align="right">15277</td>
            </tr>
            <tr>
              <td align="left">BT</td>
              <td align="left">GECKO</td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figv_HTML.gif" id="d30e2530"/>
              </td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figw_HTML.gif" id="d30e2536"/>
              </td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figx_HTML.gif" id="d30e2542"/>
              </td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figy_HTML.gif" id="d30e2548"/>
              </td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figz_HTML.gif" id="d30e2554"/>
              </td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figaa_HTML.gif" id="d30e2560"/>
              </td>
              <td align="left">
                <inline-graphic xlink:href="12859_2015_679_Figab_HTML.gif" id="d30e2566"/>
              </td>
              <td align="left"/>
              <td align="left">3777</td>
              <td align="left">5914</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left">6574</td>
              <td align="left">9827</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left">21861</td>
              <td align="left">56029</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left"/>
              <td align="left">717</td>
              <td align="left">1608</td>
            </tr>
            <tr>
              <td align="left">CF</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figac_HTML.gif" id="d30e2647"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figad_HTML.gif" id="d30e2653"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figae_HTML.gif" id="d30e2659"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figaf_HTML.gif" id="d30e2665"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figag_HTML.gif" id="d30e2671"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figah_HTML.gif" id="d30e2677"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figai_HTML.gif" id="d30e2683"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figaj_HTML.gif" id="d30e2689"/>
              </td>
              <td align="right"/>
              <td align="right">5889</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">8302</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">51778</td>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right">2777</td>
            </tr>
            <tr>
              <td align="left">SS</td>
              <td align="left">GECKO</td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figak_HTML.gif" id="d30e2762"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figal_HTML.gif" id="d30e2768"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figam_HTML.gif" id="d30e2774"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figan_HTML.gif" id="d30e2780"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figao_HTML.gif" id="d30e2786"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figap_HTML.gif" id="d30e2792"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figaq_HTML.gif" id="d30e2798"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figar_HTML.gif" id="d30e2804"/>
              </td>
              <td align="right">
                <inline-graphic xlink:href="12859_2015_679_Figas_HTML.gif" id="d30e2810"/>
              </td>
              <td align="right"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Gepard</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">Lastz</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
            </tr>
            <tr>
              <td align="left"/>
              <td align="left">MUMmer</td>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
              <td align="right"/>
            </tr>
          </tbody>
        </table>
      </table-wrap>
    </sec>
    <sec id="Sec18">
      <title>K-mer size parameter</title>
      <p>It is not difficult to deduce from all of the above that the time needed to complete each analysis is determined by word size (K), and strongly affected by both noise and the algorithm’s seed point detection sensitivity. K-mers are stored as K = 32 to avoid having a large collection of dictionaries for each K value. K = 32 contains all the K-mers for <italic>K</italic>′&lt;<italic>K</italic> with no additional processing, values that are especially useful to obtain enough exact matches for distant sequences. The software is designed such that it can be used with K values greater than 32 in case that future sequences and/or applications require such a change. Using an incorrect K value will degrade performance due to the large number of K-mers repetitions. To avoid starvation GECKO uses a sampling scheme for very common repetitions.</p>
    </sec>
    <sec id="Sec19">
      <title>Parallel execution</title>
      <p>Although this work did not specifically address the issue of parallel execution, it is interesting to make some observations concerning this topic. Most of the processes described in the procedure are appropriate for parallel execution. A simple dataset-splitting process would allow the distribution of partial components from computation by different processors, followed by the collection and reassembly of results. For instance, it would be possible to distribute the processing of K-mers by the first program by sending words starting with a given prefix to different processors. Each process would produce a partial dictionary of words with a given prefix that can then be used by separate processes to calculate the seed points sharing the same prefix. For example, there are 64 different 3-letter prefixes, assuming a 4-letter DNA alphabet, which would produce 64 sub-dictionaries for each sequence and 64 comparisons to calculate seed points.</p>
      <p>Although the processing times achieved by GECKO for the test analyses reported here were acceptable even when calculated using a single processor core, there are clear advantages to developing sequence analysis algorithms that take advantage of multi-core systems. In the context of ever increasing sequence dataset sizes, the development of parallel-processing implementations of sequence analysis software will be particularly important for multiple genome comparison studies.</p>
    </sec>
  </sec>
  <sec id="Sec20" sec-type="conclusion">
    <title>Conclusions</title>
    <p>This document presents GECKO, a pairwise genome comparison application based on an enhanced reduction of memory consumption and computational space, combined with a modular out-of-core implementation with several important advantages, including K value independence, complexity reduction, high performance and high results accuracy.</p>
    <p>Additionally, software components can be easily added to this application to extend its capabilities in the spirit of software developer collaboration. New modules can be added without needing any change to the current architecture. Example programs currently available include: K-mer frequency calculation, analysis of over- and under-represented word sets, pre-visualisation monitoring tools and full construction of local ungapped fragments including their alignment.</p>
    <p>A set of benchmarks demonstrates the effectiveness of GECKO’s implementation, even on a single CPU machine.</p>
    <p>GECKO does not require custom software or libraries to run. It can be executed within a variety of computing environments, from simple desktop PCs to more complex architectures such as clusters.</p>
    <p>This software aims to facilitate massive comparisons of genome-sized sequences, as well as more complex evolutionary studies. Currently the output provided by this program is being used to identify evolutionary events such as inversions, transpositions and gene duplications. These studies have already provided new insights into evolutionary models of populations and species [<xref ref-type="bibr" rid="CR22">22</xref>], as well as comparative metagenomic studies [<xref ref-type="bibr" rid="CR23">23</xref>].</p>
    <p>Ongoing work is focused on three main lines. The first is to develop additional modules to improve and extend the results generated by GECKO. The second is the parallelisation of the full pipeline and the last is to provide user-friendly environments on desktop and mobile platforms to make using GECKO as easy and accessible as possible.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Additional file</title>
    <sec id="Sec21">
      <supplementary-material content-type="local-data" id="MOESM1">
        <media xlink:href="12859_2015_679_MOESM1_ESM.pdf">
          <label>Additional file 1</label>
          <caption>
            <p><bold>Supplementary material.</bold> (PDF 2160 kb)</p>
          </caption>
        </media>
      </supplementary-material>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Competing interests</bold>
      </p>
      <p>The authors declare that they have no competing interests.</p>
    </fn>
    <fn>
      <p>
        <bold>Authors’ contributions</bold>
      </p>
      <p>OTrelles initiated the work by developing an initial prototype and also supervised the work. OTorreno started from the developed prototype and has contributed in code refactoring, with new ideas for the pre-processing calculation step, as well as general code improvements in terms of functionality and performance. Both authors contributed to the manuscript’s preparation. Both authors read and approved the final manuscript.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>This work has been partially supported by the Plataforma de Recursos Biomoleculares y Bioinformaticos (ISCIII-PT13.0001.0012), the Junta de Andalucía through the project entitled Proyecto Motriz de Excelencia (P10-TIC-6108) and the European Community through the FP7 IAPP project Mr. SymBioMath, grant agreement number 324554. We would like to thank first, RISC Software GmbH for providing the required infrastructure for running the tests and for hosting Oscar Torreno as a visiting researcher; and second, John Pearson, our language quality reviewer, for helping to improve the document quality.</p>
  </ack>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1</label>
      <mixed-citation publication-type="other">DNA Sequencing costs. <ext-link ext-link-type="uri" xlink:href="http://www.genome.gov/sequencingcosts">http://www.genome.gov/sequencingcosts</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Needleman</surname>
            <given-names>SB</given-names>
          </name>
          <name>
            <surname>Wunsch</surname>
            <given-names>CD</given-names>
          </name>
        </person-group>
        <article-title>A general method applicable to the search for similarities in the amino acid sequence of two proteins</article-title>
        <source>J Mol Biol</source>
        <year>1970</year>
        <volume>48</volume>
        <issue>3</issue>
        <fpage>443</fpage>
        <lpage>53</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(70)90057-4</pub-id>
        <?supplied-pmid 5420325?>
        <pub-id pub-id-type="pmid">5420325</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Smith</surname>
            <given-names>TF</given-names>
          </name>
          <name>
            <surname>Waterman</surname>
            <given-names>MS</given-names>
          </name>
        </person-group>
        <article-title>Identification of common molecular subsequences</article-title>
        <source>J Mol Biol</source>
        <year>1981</year>
        <volume>147</volume>
        <issue>1</issue>
        <fpage>195</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1016/0022-2836(81)90087-5</pub-id>
        <?supplied-pmid 7265238?>
        <pub-id pub-id-type="pmid">7265238</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Rapid and sensitive dot-matrix methods for genome analysis</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <issue>4</issue>
        <fpage>460</fpage>
        <lpage>6</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btg429</pub-id>
        <?supplied-pmid 14764561?>
        <pub-id pub-id-type="pmid">14764561</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kurtz</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Delcher</surname>
            <given-names>AL</given-names>
          </name>
          <name>
            <surname>Smoot</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Shumway</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Antonescu</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Versatile and open software for comparing large genomes</article-title>
        <source>Genome Biol</source>
        <year>2004</year>
        <volume>5</volume>
        <issue>2</issue>
        <fpage>12</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2004-5-2-r12</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Krumsiek</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Arnold</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Rattei</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Gepard: a rapid and sensitive tool for creating dotplots on genome scale</article-title>
        <source>Bioinformatics</source>
        <year>2007</year>
        <volume>23</volume>
        <issue>8</issue>
        <fpage>1026</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btm039</pub-id>
        <?supplied-pmid 17309896?>
        <pub-id pub-id-type="pmid">17309896</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pearson</surname>
            <given-names>WR</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Improved tools for biological sequence comparison</article-title>
        <source>Proc Natl Acad Sci</source>
        <year>1988</year>
        <volume>85</volume>
        <issue>8</issue>
        <fpage>2444</fpage>
        <lpage>8</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.85.8.2444</pub-id>
        <?supplied-pmid 3162770?>
        <pub-id pub-id-type="pmid">3162770</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Altschul</surname>
            <given-names>SF</given-names>
          </name>
          <name>
            <surname>Gish</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>EW</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
        </person-group>
        <article-title>Basic local alignment search tool</article-title>
        <source>J Mol Biol</source>
        <year>1990</year>
        <volume>215</volume>
        <issue>3</issue>
        <fpage>403</fpage>
        <lpage>10</lpage>
        <pub-id pub-id-type="doi">10.1016/S0022-2836(05)80360-2</pub-id>
        <?supplied-pmid 2231712?>
        <pub-id pub-id-type="pmid">2231712</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9</label>
      <mixed-citation publication-type="other">Bieganski P, Riedl J, Cartis JV, Retzel EF. Generalized suffix trees for biological sequence data: applications and implementation. In: System Sciences, 1994. Proceedings of the Twenty-Seventh Hawaii International Conference On. IEEE: 1994. p. 35–44.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Manber</surname>
            <given-names>U</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>Suffix arrays: a new method for on-line string searches</article-title>
        <source>SIAM J Comput</source>
        <year>1993</year>
        <volume>22</volume>
        <issue>5</issue>
        <fpage>935</fpage>
        <lpage>48</lpage>
        <pub-id pub-id-type="doi">10.1137/0222058</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11</label>
      <mixed-citation publication-type="other">Wong SS, Sung WK, Wong L. Cps-tree: a compact partitioned suffix tree for disk-based indexing on large genome sequences. In: Data Engineering, 2007. ICDE 2007. IEEE 23rd International Conference on data Engineering. IEEE: 2007. p. 1350–4. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1109/ICDE.2007.369009">http://dx.doi.org/10.1109/ICDE.2007.369009</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12</label>
      <mixed-citation publication-type="other">Phoophakdee B, Zaki MJ. Genome-scale disk-based suffix tree indexing. In: Proceedings of the 2007 ACM SIGMOD international conference on management of data. ACM: 2007. p. 833–44. <ext-link ext-link-type="uri" xlink:href="http://dx.doi.org/10.1145/1247480.1247572">http://dx.doi.org/10.1145/1247480.1247572</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13</label>
      <mixed-citation publication-type="other">Phoophakdee B, Zaki MJ. Trellis+: an effective approach for indexing genome-scale sequences using suffix trees. In: Pacific Symposium on Biocomputing. vol. 13,. World Scientific: 2008. p. 90–101.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Vitter</surname>
            <given-names>JS</given-names>
          </name>
        </person-group>
        <article-title>External memory algorithms and data structures: Dealing with massive data</article-title>
        <source>ACM Comput Surv (CsUR)</source>
        <year>2001</year>
        <volume>33</volume>
        <issue>2</issue>
        <fpage>209</fpage>
        <lpage>71</lpage>
        <pub-id pub-id-type="doi">10.1145/384192.384193</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15</label>
      <mixed-citation publication-type="other">Louza FA, Telles GP, Ciferri CDDA. External memory generalized suffix and lcp arrays construction. In: Combinatorial Pattern Matching. Springer: 2013. p. 201–10.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kundeti</surname>
            <given-names>VK</given-names>
          </name>
          <name>
            <surname>Rajasekaran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Dinh</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Vaughn</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Thapar</surname>
            <given-names>V</given-names>
          </name>
        </person-group>
        <article-title>Efficient parallel and out of core algorithms for constructing large bi-directed de bruijn graphs</article-title>
        <source>BMC Bioinforma</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>560</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-560</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Darling</surname>
            <given-names>AE</given-names>
          </name>
          <name>
            <surname>Mau</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Perna</surname>
            <given-names>NT</given-names>
          </name>
        </person-group>
        <article-title>progressivemauve: multiple genome alignment with gene gain, loss and rearrangement</article-title>
        <source>PloS one</source>
        <year>2010</year>
        <volume>5</volume>
        <issue>6</issue>
        <fpage>11147</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0011147</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18</label>
      <mixed-citation publication-type="other">Harris R. Improved pairwise alignment of genomic dna. 2007: PhD diss., The Pennsylvania State University. (2007).</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frith</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Hamada</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Horton</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Parameters for accurate genome alignment</article-title>
        <source>BMC Bioinforma</source>
        <year>2010</year>
        <volume>11</volume>
        <issue>1</issue>
        <fpage>80</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-11-80</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Frith</surname>
            <given-names>MC</given-names>
          </name>
          <name>
            <surname>Wan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Horton</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>Incorporating sequence quality data into alignment improves dna read mapping</article-title>
        <source>Nucleic Acids Res</source>
        <year>2010</year>
        <volume>38</volume>
        <issue>7</issue>
        <fpage>100</fpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkq010</pub-id>
      </element-citation>
    </ref>
    <ref id="CR21">
      <label>21</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kiełbasa</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Wan</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Sato</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Horton</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Frith</surname>
            <given-names>MC</given-names>
          </name>
        </person-group>
        <article-title>Adaptive seeds tame genomic sequence comparison</article-title>
        <source>Genome Res</source>
        <year>2011</year>
        <volume>21</volume>
        <issue>3</issue>
        <fpage>487</fpage>
        <lpage>93</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.113985.110</pub-id>
        <?supplied-pmid 21209072?>
        <pub-id pub-id-type="pmid">21209072</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Arjona-Medina</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Torreno Tirado</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Trelles</surname>
            <given-names>O</given-names>
          </name>
        </person-group>
        <source>Software for featuring genome evolution. Poster presented at the European Conference on Computational Biology (ECCB), Sept 7–10</source>
        <year>2014</year>
        <publisher-loc>Strasbourg, France</publisher-loc>
        <publisher-name>Strasbourg conference center</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Maboni</surname>
            <given-names>F</given-names>
          </name>
          <collab>Ribeiro de Vasconcellos AT</collab>
          <name>
            <surname>Zaha</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Upton</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Orue Esquivel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Torreno</surname>
            <given-names>O</given-names>
          </name>
          <etal/>
        </person-group>
        <source>Pig metagenome analysis using gecko. Technical Report 2014-001</source>
        <year>2014</year>
        <publisher-loc>Campus de Teatinos, Málaga</publisher-loc>
        <publisher-name>Department of Computer Architecture, University of Málaga</publisher-name>
      </element-citation>
    </ref>
  </ref-list>
</back>

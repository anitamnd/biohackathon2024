<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Sci Rep</journal-id>
    <journal-id journal-id-type="iso-abbrev">Sci Rep</journal-id>
    <journal-title-group>
      <journal-title>Scientific Reports</journal-title>
    </journal-title-group>
    <issn pub-type="epub">2045-2322</issn>
    <publisher>
      <publisher-name>Nature Publishing Group UK</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">6803637</article-id>
    <article-id pub-id-type="publisher-id">51418</article-id>
    <article-id pub-id-type="doi">10.1038/s41598-019-51418-z</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Article</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Denoising of Aligned Genomic Data</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Fischer-Hwang</surname>
          <given-names>Irena</given-names>
        </name>
        <address>
          <email>ihwang@stanford.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Ochoa</surname>
          <given-names>Idoia</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Weissman</surname>
          <given-names>Tsachy</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Hernaez</surname>
          <given-names>Mikel</given-names>
        </name>
        <address>
          <email>mhernaez@illinois.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ISNI">0000000419368956</institution-id><institution-id institution-id-type="GRID">grid.168010.e</institution-id><institution>Stanford University, Department of Electrical Engineering, </institution></institution-wrap>Stanford, 94305 USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 9991</institution-id><institution-id institution-id-type="GRID">grid.35403.31</institution-id><institution>University of Illinois Urbana-Champaign, Department of Electrical and Computer Engineering, </institution></institution-wrap>Urbana, 61801 USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ISNI">0000 0004 1936 9991</institution-id><institution-id institution-id-type="GRID">grid.35403.31</institution-id><institution>University of Illinois Urbana-Champaign, Carl R. Woese Institute for Genomic Biology, </institution></institution-wrap>Urbana, 61801 USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>21</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>21</day>
      <month>10</month>
      <year>2019</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2019</year>
    </pub-date>
    <volume>9</volume>
    <elocation-id>15067</elocation-id>
    <history>
      <date date-type="received">
        <day>7</day>
        <month>1</month>
        <year>2019</year>
      </date>
      <date date-type="accepted">
        <day>25</day>
        <month>9</month>
        <year>2019</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2019</copyright-statement>
      <license license-type="OpenAccess">
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons license, and indicate if changes were made. The images or other third party material in this article are included in the article’s Creative Commons license, unless indicated otherwise in a credit line to the material. If material is not included in the article’s Creative Commons license and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this license, visit <ext-link ext-link-type="uri" xlink:href="http://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Noise in genomic sequencing data is known to have effects on various stages of genomic data analysis pipelines. Variant identification is an important step of many of these pipelines, and is increasingly being used in clinical settings to aid medical practices. We propose a denoising method, dubbed SAMDUDE, which operates on aligned genomic data in order to improve variant calling performance. Denoising human data with SAMDUDE resulted in improved variant identification in both individual chromosome as well as whole genome sequencing (WGS) data sets. In the WGS data set, denoising led to identification of almost 2,000 additional true variants, and elimination of over 1,500 erroneously identified variants. In contrast, we found that denoising with other state-of-the-art denoisers significantly worsens variant calling performance. SAMDUDE is written in Python and is freely available at <ext-link ext-link-type="uri" xlink:href="https://github.com/ihwang/SAMDUDE">https://github.com/ihwang/SAMDUDE</ext-link>.</p>
    </abstract>
    <kwd-group kwd-group-type="npg-subject">
      <title>Subject terms</title>
      <kwd>Data processing</kwd>
      <kwd>Software</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">https://doi.org/10.13039/100000002</institution-id>
            <institution>U.S. Department of Health &amp; Human Services | National Institutes of Health (NIH)</institution>
          </institution-wrap>
        </funding-source>
        <award-id>5 U01 CA198943-03</award-id>
        <principal-award-recipient>
          <name>
            <surname>Fischer-Hwang</surname>
            <given-names>Irena</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Center for the Science of Information, grant agreement CCF-0939370</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2019</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1" sec-type="introduction">
    <title>Introduction</title>
    <p id="Par2">The ability to sequence genetic material has expanded our understanding of genes and their roles in biological processes, opened up new areas of biological inquiry, and are guiding the trajectory of modern biomedical research<sup><xref ref-type="bibr" rid="CR1">1</xref></sup>. Raw sequencing data are typically stored in the FASTQ file format and converted to the SAM file format following alignment to a reference genome. Both file types comprise sequences of nucleotide bases called “reads,” which are accompanied by sequences of quality scores that indicate the sequencing machine’s confidence in the base calls making up the reads. However, the genomic sequencing process is imperfect and can result in reads containing various types of noise including base substitutions, insertions, and deletions (INDELs).</p>
    <p id="Par3">Although noise characteristics vary across sequencing technologies, they are well characterized for some sequencing platforms. For example, Illumina sequencing technologies produce “short” reads on the order of hundreds of bases, with an average substitution error rate of less than 1%, and INDEL rates orders of magnitude lower<sup><xref ref-type="bibr" rid="CR2">2</xref></sup>. Furthermore, these errors were found to be correlated with position within the read, resulting in position-dependent noise characteristics. These errors can affect downstream applications, with an important application being variant calling, or the identification of genetic polymorphisms unique to individuals. Variant identification from WGS is increasingly being used for diagnosis and treatment design in the clinical setting, especially in the field of rare genetic disease research<sup><xref ref-type="bibr" rid="CR3">3</xref></sup>. Thus, accuracy of variant identification is paramount. Note that there is a clear distinction between the natural variations of DNA sequences (i.e., genetic polymorphisms)—which are the target of variant calling—and noise due to sequencing errors introduced by the sequencing platform, which can be represented as base call mismatches (single base-substitutions) and INDELs.</p>
    <p id="Par4">Algorithms for removing noise, or denoisers, have been proposed for genomic sequencing data<sup><xref ref-type="bibr" rid="CR4">4</xref></sup>, as well as for other biological methods relying on genomic sequencing, like ChiP-seq<sup><xref ref-type="bibr" rid="CR5">5</xref></sup>. These denoisers attempt to rectify sequencing errors by only changing individual bases in reads, while retaining the original quality scores. They are typically tested on simulated and real data sets in FASTQ format, and have been shown to perform well on some of the early stages of genomic sequencing pipelines, such as correcting base calling errors in the simulated data sets, increasing both breadth and depth of reads coverage during alignment<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>, or improving de novo assembly of real data sets<sup><xref ref-type="bibr" rid="CR7">7</xref></sup>. However, these analyses often do not extend to later steps in genomic sequence analysis pipelines, and those that do focus on non-human data sets<sup><xref ref-type="bibr" rid="CR8">8</xref></sup>. To our knowledge, none of these works examines the effect that denoising might have on variant calling. Current variant calling procedures are complex and rely on alignment information, including quality scores which are a direct function of the analog signals used to determine the called base. In fact, a survey of lossy quality score compressors has already shown that changing quality scores alone can sometimes have a beneficial effect on variant calling<sup><xref ref-type="bibr" rid="CR9">9</xref></sup>. This result demonstrates that in a sense, lossy quality score compression removes noise from, or denoises the genomic data, resulting in more accurate variant calling. Taken together, the existing body of work on denoising and variant calling suggests that reads denoising could be improved by incorporating alignment and quality score information during error correction.</p>
    <p id="Par5">In this work, we propose a novel denoising method, SAMDUDE, which takes advantage of alignment information contained in the SAM file in order to both denoise reads and update quality scores. We evaluate the effect of denoising on variant calling by comparing variants identified in files before and after denoising by SAMDUDE. We also evaluate files that have been denoised using other state-of-the-art denoisers that operate solely on reads in FASTQ files. This variant calling comparison methodology has already been used to analyze the effect of lossy compression on quality scores beyond the early steps in a genomic sequencing pipeline<sup><xref ref-type="bibr" rid="CR9">9</xref></sup>. To our knowledge, this is the first application of such a comparison methodology on denoised genomic sequencing data, and provides a unique framework for directly evaluating the effect of denoising on sequencing data. To highlight the potential utility of simultaneous base denoising and quality score updating in a clinical setting, we perform denoising and variant calling comparisons on human data sets. We show that the simultaneous reads denoising and quality score updating procedure either maintains or improves variant calling with respect to the original SAM file, while denoising schemes that change only the reads result in degraded variant calling performance.</p>
  </sec>
  <sec id="Sec2">
    <title>Survey of Denoisers for Genomic Data</title>
    <p id="Par6">Current state-of-the-art denoisers perform denoising based on a variety of techniques including <italic>k</italic>-mer counting and statistical error models, and target either substitution errors, insertion and deletion errors, or a combination of both<sup><xref ref-type="bibr" rid="CR4">4</xref></sup>. We chose Musket<sup><xref ref-type="bibr" rid="CR10">10</xref></sup> and RACER<sup><xref ref-type="bibr" rid="CR11">11</xref></sup> to serve as benchmarks for SAMDUDE denoising performance, since both were touted for their ability to handle human WGS data sets<sup><xref ref-type="bibr" rid="CR6">6</xref></sup>. In addition to Musket and RACER, BFCounter<sup><xref ref-type="bibr" rid="CR12">12</xref></sup> and Lighter<sup><xref ref-type="bibr" rid="CR13">13</xref></sup> are also preferred in the field for their memory efficiency and speed, respectively, and are thus the most likely to be used in practice. We omitted comparisons with BLESS 2<sup><xref ref-type="bibr" rid="CR14">14</xref></sup>, another denoising tool especially popular for its speed, due to installation difficulties. Here, we briefly describe the techniques underlying these four denoisers.</p>
    <p id="Par7">Musket<sup><xref ref-type="bibr" rid="CR10">10</xref></sup> uses a <italic>k</italic>-mer spectrum approach in which reads that are suspected to be erroneous are changed until their <italic>k</italic>-mers appear frequently in the entire data set. The <italic>k</italic>-mer spectrum is constructed using a parallelized master-slave model, resulting in Musket’s highly competitive execution time and excellent parallel scalability. Denoising is performed using a multistage workflow which begins with multiple iterations of two-sided conservative base correction. Two-sided conservative base correction is followed by multiple iterations of one-sided aggressive correction and voting-based refinement. Musket is able to denoise paired-end reads data sets simultaneously.</p>
    <p id="Par8">RACER<sup><xref ref-type="bibr" rid="CR11">11</xref></sup> uses a <italic>k</italic>-mer counting approach to denoise FASTA and FASTQ data. Its <italic>k</italic>-mer counting method retains <italic>k</italic>-mers with counts above a given threshold, while correcting all other ones. RACER utilizes a unique and efficient hash table-based data structure which makes it extremely space efficient. While RACER does not denoise both files in a paired-end reads data set at the same time, each of the FASTQ files can be denoised independently and recombined in subsequent analysis steps. RACER requires approximate genome size as a parameter.</p>
    <p id="Par9">BFCounter<sup><xref ref-type="bibr" rid="CR12">12</xref></sup> also uses a <italic>k</italic>-mer counting approach coupled with a Bloom filter in a two-pass denoising process. The use of a Bloom filter results in reduced memory requirements of nearly 50% memory savings, as compared to popular <italic>k</italic>-mer counting software. However, the two-pass implementation requires a significant amount of time for completing denoising, especially on human WGS data. Like RACER, BFCounter requires approximate genome size as a parameter.</p>
    <p id="Par10">Unlike the previously mentioned denoisers, Lighter<sup><xref ref-type="bibr" rid="CR13">13</xref></sup> avoids <italic>k</italic>-mer counting and instead relies entirely on Bloom filters to perform denoising. Compared with most denoising methods, Lighter is extremely fast and memory-efficient, but like RACER and BFCounter it also requires an estimate of genome size as a parameter.</p>
  </sec>
  <sec id="Sec3" sec-type="results">
    <title>Results</title>
    <p id="Par11">To formulate the proposed denoising method, we assume a setting in which a genetic sample undergoes high-throughput shotgun sequencing, producing a large number of short, overlapping reads of length on the order of hundreds of base pairs. The errors introduced during the sequencing process are assumed to be primarily substitution errors, while INDELs are assumed to be negligible. We also assume that a reference genome is available, and that the reads can be aligned to the reference.</p>
    <p id="Par12">Our proposed denoising method, SAMDUDE, is based on the Discrete Universal Denoiser (DUDE) algorithm proposed in<sup><xref ref-type="bibr" rid="CR15">15</xref></sup>. DUDE is a sliding-window discrete denoising scheme which is universally optimal in the limit of input sequence length when applied to an unknown source with finite alphabet size corrupted by a known discrete memoryless channel. The universal optimality of the DUDE guarantees that in the asymptotic limit of input sequence length it does as well as the best scheme of its type, regardless of the characteristics of the underlying noise-free sequence. In brief: DUDE uses a two-pass procedure to first infer statistics of the source sequence based on the noisy sequence, and then denoise the noisy sequence using the inferred statistics and noise channel characteristics. See Fig. <xref rid="Fig1" ref-type="fig">1</xref> for a schematic of the SAMDUDE setting and algorithm.<fig id="Fig1"><label>Figure 1</label><caption><p>Schematic of the SAMDUDE setting and algorithm. A genetic sample, <italic>x</italic><sup><italic>n</italic></sup> (blue bar), is corrupted by a noise channel <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\boldsymbol{\Pi }}$$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="bold">Π</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq1.gif"/></alternatives></inline-formula>, producing noisy reads <italic>z</italic><sub>(<italic>i</italic>)</sub> with errors (red lines). In the first pass of SAMDUDE, a sliding window (dashed rectangle) sequentially records the central symbol (green line) flanked by a context of length 2<italic>k</italic>, <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}^{k}{r}^{k}$$\end{document}</tex-math><mml:math id="M4"><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq2.gif"/></alternatives></inline-formula> for each location in each read. These central symbols and contexts are combined across all reads into a vector of counts <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf{m}}({l}^{k},{r}^{k})$$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="bold">m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq3.gif"/></alternatives></inline-formula>. During the first pass, a sequence estimate <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\hat{x}}^{n}$$\end{document}</tex-math><mml:math id="M8"><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo>ˆ</mml:mo></mml:mover></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq4.gif"/></alternatives></inline-formula> and estimate of the noise channel <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M10"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq5.gif"/></alternatives></inline-formula> are also obtained. In the second pass, each read is again traversed sequentially for denoising. For each context in each read <bold>m</bold>, <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M12"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq6.gif"/></alternatives></inline-formula> and <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\hat{x}}^{n}$$\end{document}</tex-math><mml:math id="M14"><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>x</mml:mi><mml:mo>ˆ</mml:mo></mml:mover></mml:mrow><mml:mi>n</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq7.gif"/></alternatives></inline-formula> are all used to denoise the central symbol (yellow line) for each context in each read. The output of SAMDUDE is a collection of denoised reads.</p></caption><graphic xlink:href="41598_2019_51418_Fig1_HTML" id="d29e550"/></fig></p>
    <p id="Par13">In order to apply the DUDE-like denoising framework to the genomic sequencing setting, we make a number of algorithm design choices based on assumptions about the problem setting. While the universal denoising setting assumes a single noise-free input sequence and a single noise-corrupted output sequence of equal length to the input sequence, in the high-throughput sequencing setting the channel input is a single, noise-free sequence and the output are numerous overlapping, short, noisy sequences. The reads may not necessarily all be of the same length, but are all assumed to be much shorter than the noise-free sequence length. Despite the difference between these settings, the sequencing reads can be thought of as samples of a single, noise-corrupted sequence that can be inferred from the reads using alignment information. Under this assumption, we aggregate information from each read into statistics about the inferred noisy sequence. The universal denoising setting also assumes that the noise channel is memoryless and known, and corrupts sequences only with substitution errors. In the genomic sequencing setting, substitution errors are the primary form of noise in sequencing-by-synthesis methods, such as Illumina technologies. Today, sequencing-by-synthesis methods are among the most commonly used in practice<sup><xref ref-type="bibr" rid="CR16">16</xref></sup>. SAMDUDE is a natural fit for such methods, and thus we assume that errors introduced during the sequencing process are primarily substitution errors, while INDELS are assumed to be negligible<sup><xref ref-type="bibr" rid="CR2">2</xref>,<xref ref-type="bibr" rid="CR17">17</xref></sup>. We also assume that a reference genome is available, and that raw sequencing reads stored in the FASTQ file format can be aligned to the reference in order to produce a SAM file of aligned reads. We consider only the primary mapping of the aligned reads, and disregard any other mappings, i.e., if more than one alignment location is reported for a read, only the primary one is considered (all secondary alignments are omitted). While DUDE is designed to operate in the setting where the corrupting noise channel is known and memoryless, in the genomic sequencing setting it is often difficult to obtain precise information about a particular machine’s noise characteristics. As a result, we use alignment information in the SAM file to generate an estimate of the particular sequencer’s noise-injecting characteristics. Operationally, this strategy has the added benefit of accounting for individual variations in performance from one sequencing machine to another. Finally, while paired-end reads are acceptable inputs to the denoiser, the pairing information is not used in the denoising process. The SAMDUDE denoising scheme is depicted in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, and described in detail in the Methods section.</p>
    <p id="Par14">While all sequencing technologies inject all three types of errors, the noise channel model used in SAMDUDE is a particularly accurate reflection of Illumina sequencing technologies. Furthermore, due to the importance of variant identification in the clinical setting, we evaluated the effect of denoising on variant calling in human data sets. We tested SAMDUDE on three different paired-end WGS data sets of the <italic>H. Sapiens</italic> individual NA12878. The data sets are: ERR262997 corresponding to 30×-coverage, CEUTrio.HiSeq.WGS corresponding to 100×-coverage, and NA12878_V2.5_Robot_2 corresponding to 40×-coverage. For convenience, we refer to these data sets as 1, 2 and 3, respectively. Variant calls were compared against the version 37 gold standard call set for individual NA12878 released by the National Institute of Standards and Technology’s (NIST) Genome in a Bottle consortium (GIAB)<sup><xref ref-type="bibr" rid="CR18">18</xref></sup>. While the GIAB gold standard call set is a fairly conservative estimate of the individual NA12878 true variant call set, it is widely regarded by the field as the standard benchmark for evaluating sequence analysis algorithms. Furthermore, there exist “gold standard” (consensus of polymorphisms) variant call sets for certain human individuals, which can be used for an intuitive and direct method of assessing variant calling performance.</p>
    <p id="Par15">Denoising performance was evaluated with respect to variant calling of single nucleotide polymorphisms (SNPs). We first analyzed the effect of denoising on variant calling performance for individual human chromosomes using SAMDUDE and other state-of-the-art denoisers. We also compared the effect of denoising reads to the effect of lossy quality score compression. Lossy quality score compressors were developed to decrease the size of SAM files while still maintaining variant calling performance. Previous work showed that while quality score compressors effectively reduced SAM file size, they also sometimes had the unintended effect of improving variant calling performance<sup><xref ref-type="bibr" rid="CR9">9</xref></sup>. For this reason, the lossy quality score compressors serve as a counterpoint to the SAMDUDE algorithm’s procedure of changing both reads and quality scores in tandem with the explicit goal of improving variant calling performance. Finally, we analyzed the effect of SAMDUDE denoising on human WGS data.</p>
    <sec id="Sec4">
      <title>Human chromosome denoising with SAMDUDE</title>
      <p id="Par16">For individual chromosome denoising experiments, we chose to use chromosomes 11 and 20. Chromosome 11 was chosen as representative of the median chromosome length in the human genome, and chromosome 20 was chosen since it is frequently used in genomic data tool assessment as representative of a small human chromosome<sup><xref ref-type="bibr" rid="CR9">9</xref></sup>. The leftmost column of Fig. <xref rid="Fig2" ref-type="fig">2</xref> shows that SAMDUDE can have varied effects across different data sets. For data set 1, denoising with SAMDUDE resulted in an increase in T.P. variants called concomitant with a decrease in F.P. variants, resulting in a modest gain in F-score. Although denoising resulted in a slight decrease of T.P. variants called in data set 2 relative to the original file, it also resulted in a very large decrease in number of F.P. variants called, resulting in a large gain in F-score. In contrast, a handful of additional T.P. and F.P. variants were called in data set 3, resulting in no change in F-score. Despite variation in results across data sets, the effect of SAMDUDE denoising is consistent across chromosomes within a given data set.<fig id="Fig2"><label>Figure 2</label><caption><p>Denoising results for SAMDUDE (left column), Musket (second from left), RACER (center), BFCounter (second from right), and Lighter (right) for chromosomes 11 (blue) and 20 (orange). ΔT.P. indicates the change in True Positives, ΔF.P. indicates the change in False Positives, and ΔF indicates the change in F-score. In particular, positive ΔT.P. and ΔF indicate increases in true positive variants called and improvement of F-score, respectively. A negative ΔF.P. indicates that fewer variants were erroneously called, i.e., there were fewer false positives. Raw (dark colors) and filtered (light colors) variant call values are shown.</p></caption><graphic xlink:href="41598_2019_51418_Fig2_HTML" id="d29e602"/></fig></p>
      <p id="Par17">While differences in performance across data sets seem to indicate inconsistency in the SAMDUDE denoising algorithm, these results make sense in the context of coverage and initial data quality, which are summarized in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. The original performance metrics for data set 3 are by far the highest. In contrast, while data set 2 also has a high initial sensitivity, its relatively low precision leaves room for improvement in F-score. Data set 1 has the most room for improvement, with low initial sensitivity, precision and F-score.<fig id="Fig3"><label>Figure 3</label><caption><p>Statistics for variant call sets generated from the original data sets (blue, chromosome 11 and orange, chromosome 20). The statistics are: sensitivity (circles), precision (squares) and F-score (triangles). Statistics are grouped by variant call type: raw (dark colors) and filtered (light colors).</p></caption><graphic xlink:href="41598_2019_51418_Fig3_HTML" id="d29e616"/></fig></p>
      <p id="Par18">Because of SAMDUDE’s conservative behavior, it might be suspected that the gains from updating quality scores are small compared to the effect of denoising bases in the reads. To test this hypothesis, we created partially-denoised SAM files where the reads were those obtained from SAMDUDE denoising, but were paired with the original quality score strings. These partially-denoised files were then analyzed using the same variant calling pipeline, and the results of this experiment are summarized in Supplementary Table <xref rid="MOESM1" ref-type="media">1</xref> (labeled Partial Denoising). For all data sets, partial denoising resulted in either no change or an increase in F-score, even after GATK filtering. However, for data sets 1 and 2 the gains were not as large as those attained using SAMDUDE after GATK filtering of variant calls.</p>
      <p id="Par19">It might also be suspected that the same amount of random base changes would additionally result in improvements in variant calling. To check this hypothesis, we ran the variant calling pipeline on the SAM files for chromosome 20 with bases changed at random based on a uniform distribution over the possible nucleotide bases (see Supplementary Table <xref rid="MOESM1" ref-type="media">2</xref>). The results of this experiment are summarized in Supplementary Table <xref rid="MOESM1" ref-type="media">1</xref> (labeled Random noise). For all data sets, addition of random noise resulted in either no change or a decrease in sensitivity, concurrent with a uniform increase in precision. Overall, the effect of random noise is an increase in F-score for all raw variant calls, but a decrease in F-score for GATK-filtered variant calls in data sets 1 and 2.</p>
      <p id="Par20">Together, these results support our claim that SAMDUDE is a conservative denoising method which will not adversely affect data sets that do not need denoising, while improving those that can benefit from denoising. Furthermore, SAMDUDE’s performance is robust and consistent for both raw and filtered variant calls, unlike that of partial denoising and random noise addition.</p>
      <sec id="Sec5">
        <title>Comparison of SAMDUDE denoising with state-of-the-art genomic denoisers and quality score compressors</title>
        <p id="Par21">The effects of denoising by the state-of-the-art genomic denoisers Musket, RACER, BFCounter and Lighter are shown in the center and right columns of Fig. <xref rid="Fig2" ref-type="fig">2</xref>. In most cases, the denoisers resulted in significant decreases in the number of T.P. variants called, with significant increases in the number of F.P. variants called, leading overall to significant decreases in F-score for both the raw and GATK-filtered variants. The only exception is the denoising of data set 2 using BFCounter, which resulted in a slight increase in T.P. variants called, slight decrease in F.P. variant called, and a corresponding slight increase in F-score. However, this improvement in variant calling is not consistent, as denoising data sets 1 and 3 using BFCounter resulted in worse F-scores. These changes demonstrate that although current state-of-the-art denoisers have been shown to improve early steps of the genome analysis pipeline, their denoising choices tend to have adverse effects on variant calling.</p>
        <p id="Par22">The trends are consistent even when we consider different variant call filtering levels. Supplementary Figures <xref rid="MOESM1" ref-type="media">1</xref>–<xref rid="MOESM1" ref-type="media">6</xref> show the variant calling precision as a function of sensitivity for different filtering criteria. We focus on the variant call filtering results for data set 2 (Supplementary Figs. <xref rid="MOESM1" ref-type="media">3</xref> and <xref rid="MOESM1" ref-type="media">4</xref>) since for this data set SAMDUDE denoising resulted in the largest number of total changes to the variant call set, and also in the largest change in F-score. We also focus on comparing sensitivity filtering for the results of Musket and RACER due to their consistent denoising trends. To construct these curves, we set percentile thresholds starting at the 10<sup>th</sup> and ending at the 90<sup>th</sup> percentile at increments of 10% for quality of depth (QD) of the raw variant calls. All variants with QD below the threshold were filtered out, and the remaining variant calls were evaluated against the gold standard call set. The top row of Supplementary Fig. <xref rid="MOESM1" ref-type="media">4</xref> shows that even under these filtering criteria, the curves corresponding to the variant call sets of Musket- and RACER-denoised SAM files lie far below the others. In other words, for a given sensitivity level, the variants called under Musket- and RACER-denoised SAM files have significantly worse precision than SAMDUDE.</p>
        <p id="Par23">In addition to variant call filtering results for call sets from SAMDUDE, Musket-, and RACER-denoised SAM files, the bottom rows of Supplementary Figs <xref rid="MOESM1" ref-type="media">1</xref>–<xref rid="MOESM1" ref-type="media">6</xref> also show the filtered variant call set curves for the original call set, the call set resulting from the addition of random noise to the reads, and two call sets resulting from lossy compression of the original file using P-Block and R-Block with compression parameters 3 and 40, respectively. P-Block and R-Block are two state-of-the-art lossy quality score compressors<sup><xref ref-type="bibr" rid="CR19">19</xref></sup> which have also been shown to improve variant calling performance. Another state-of-the-art lossy compressor, QVZ<sup><xref ref-type="bibr" rid="CR20">20</xref></sup>, has been omitted from the analysis since it is unable to compress SAM files with variable length reads. Again we focus our discussion on data set 2 and observe that in Supplementary Figs. 3 and <xref rid="MOESM1" ref-type="media">4</xref> the effect of lossy compression on the variant call set is almost indistinguishable from that of SAMDUDE. However, the rightmost points in each of the filtered variant call set curves show that SAMDUDE outperforms all other schemes when sensitivity and precision are both high. SAMDUDE’s dominance, especially at high sensitivity levels for chromosome 11, makes sense since SAMDUDE’s denoising performance improves as read coverage increases.</p>
      </sec>
    </sec>
    <sec id="Sec6">
      <title>Human whole-genome denoising with SAMDUDE</title>
      <p id="Par24">Next, we evaluated the effect of denoising on variant calling for an entire WGS human data set. For this experiment, we used all reads of data set 1, and the results are summarized in Table <xref rid="Tab1" ref-type="table">1</xref>. After SAMDUDE denoising the raw variant call set included in total 1,954 additional true positive variants. Furthermore, 1,509 false positive variants were eliminated relative to the original set of variant calls. After the GATK pipeline, 1,642 of the additional true positive variants were validated, and the number of additional false positive variant calls eliminated increased to 1,923. In contrast, raw variant calls based on the Musket-denoised file resulted in 208,144 fewer true positive calls and 324,957 additional false positive calls relative to the original set of variant calls. After the GATK pipeline, the number of true positive variant calls missed increased by 215,524 while the number of false positive variant calls increased by 305,362. Variant calls from the RACER-denoised data set were unable to be validated against the gold standard call set due to pipeline errors.<table-wrap id="Tab1"><label>Table 1</label><caption><p>Results for raw and filtered variant calling on denoised data set 1 using SAMDUDE and Musket.</p></caption><table frame="hsides" rules="groups"><thead><tr><th/><th>ΔT.P. raw</th><th>ΔT.P. filtered</th><th>ΔF.P. raw</th><th>ΔF.P. filtered</th></tr></thead><tbody><tr><td>SAMDUDE</td><td>1,954</td><td>1,642</td><td>−1,509</td><td>−1,923</td></tr><tr><td>Musket</td><td>−208,144</td><td>−215,524</td><td>324,957</td><td>305,362</td></tr></tbody></table></table-wrap></p>
    </sec>
  </sec>
  <sec id="Sec7" sec-type="discussion">
    <title>Discussion</title>
    <p id="Par25">We have presented SAMDUDE, a denoising method that uses alignment information in SAM files and a statistical model of the genomic data in order to improve variant calling. Because of the assumptions used by the denoising model, SAMDUDE’s intended use is for improving the quality of short sequencing reads obtained from healthy tissue. The potential problem of applying SAMDUDE to samples from unhealthy, e.g. cancerous, tissues is that SAMDUDE may incorporate <italic>k</italic>-mers from the unhealthy tissue into analysis, and incorrectly denoise bases that were indeed correct. This could happen when the variant allele frequency (VAF) of a given somatic mutation is below or similar to the substitution error rate from the sequencing technology being used<sup><xref ref-type="bibr" rid="CR21">21</xref></sup>. In such cases, differentiating between genomic sequencing errors and somatic mutation in unhealthy tissue is more challenging.</p>
    <p id="Par26">Taken together with the initial data quality statistics in Fig. <xref rid="Fig3" ref-type="fig">3</xref>, the range of improvements observed in Fig. <xref rid="Fig2" ref-type="fig">2</xref> imply that SAMDUDE is a “conservative” denoising algorithm that makes few or no changes to the reads and quality scores when the original data set is already of very high quality, but makes sound denoising choices resulting in variant calling improvements when the original data set is of lesser quality. The quality of denoising performance also correlates with data coverage: data set 2 has the highest coverage and SAMDUDE denoising performance is the best on this set. Since SAMDUDE relies on empirical estimates of <italic>k</italic>–mer distributions and the noise channel, the higher the coverage and the more accurate the empirical estimates, the better the denoising performance. It is also notable that the trends in performance hold for both raw variant and filtered variant calls, adding to our confidence in SAMDUDE as a conservative denoiser that integrates well with existing recommended genomic data analysis pipelines.</p>
    <p id="Par27">The results of denoising aligned whole genome data are consistent with those observed for individual chromosomes. While the relative number of true positive variants identified might seem relatively small, the extra information provided by each extra variant could be invaluable. Single point mutations are responsible for numerous human diseases, and other diseases once assumed to be caused by a single variant with large effect are now being understood to be the result of multiple monogenic mutations, or of collections of rare variants in previously identified genes<sup><xref ref-type="bibr" rid="CR22">22</xref>–<xref ref-type="bibr" rid="CR24">24</xref></sup>. Perhaps more importantly, the elimination of false positive variants is crucial to accurate diagnosis and appropriate treatment design<sup><xref ref-type="bibr" rid="CR25">25</xref>–<xref ref-type="bibr" rid="CR27">27</xref></sup>. Thus, in the clinical context the implications of every additional true positive variant identified and each false positive variant eliminated are far larger than the objective tally.</p>
    <p id="Par28">Our results emphasize that the quality score updating step of SAMDUDE is crucial to improving variant calling outcome, and that denoising reads alone is insufficient for higher quality of variant calls. SAMDUDE was able to both identify thousands of additional variants and eliminate a similar number of false positive variants from a single human whole-genome data set. In contrast, state-of-the-art denoisers, which were designed to improve earlier steps in the sequencing pipeline and are limited to changing information only in the reads and not the quality scores, led to degraded variant calling performance. Our results also highlight the importance of evaluating denoisers on the variant calling step of the genomic sequencing pipeline using real data sets with gold standards.</p>
    <p id="Par29">As a proof-of-concept denoiser, SAMDUDE shows great promise in improving the accuracy of variant calling based on individual sequencing data sets. Furthermore, these encouraging results motivate further experimentation of the parameters and elements of the denoising procedure, including context length <italic>k</italic>, majority and confidence thresholds, quality score updating rule, and additional refinement of the implementation in order to reduce computational memory and time requirements. We anticipate that the SAMDUDE denoising method will inspire an efficient and powerful denoising software that will be a valuable tool for researchers and clinicians alike.</p>
  </sec>
  <sec id="Sec8">
    <title>Methods</title>
    <sec id="Sec9">
      <title>Problem setting</title>
      <p id="Par30">We have the following problem setting: <italic>x</italic><sup><italic>n</italic></sup> is the true genomic sequence of length <italic>n</italic>, and the sequencing procedure involves a noise channel, <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M16"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq8.gif"/></alternatives></inline-formula>, which generates a set of <italic>m</italic> noisy reads <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{{z}_{(1)},{z}_{(2)},\ldots ,{z}_{(m)}\}$$\end{document}</tex-math><mml:math id="M18"><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq9.gif"/></alternatives></inline-formula> with components taking values in the set of all possible nucleotide bases, alphabet <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}=\{{\rm{A}},{\rm{C}},{\rm{G}},{\rm{T}}\}$$\end{document}</tex-math><mml:math id="M20"><mml:mi mathvariant="script">A</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mi mathvariant="normal">A</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="normal">C</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="normal">G</mml:mi><mml:mo>,</mml:mo><mml:mi mathvariant="normal">T</mml:mi><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq10.gif"/></alternatives></inline-formula>. The reads set is accompanied by a set of quality score strings <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{{q}_{(1)},{q}_{(2)},\ldots ,{q}_{(m)}\}$$\end{document}</tex-math><mml:math id="M22"><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>2</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq11.gif"/></alternatives></inline-formula> with components taking values in the set of ASCII characters quantifying basecalling quality on a quality score scale. Our goal is to both denoise the bases in the reads and to update the corresponding quality scores in order to improve the accuracy of variant identification, while still preserving polymorphisms that are unique to the individual. The denoiser has access to the reads and the quality score strings, as well as to the alignment information of each of the reads to the reference sequence. Note that in this setting, the true genome sequence <italic>x</italic><sup><italic>n</italic></sup> is unknown.</p>
      <p id="Par31">We assume that for a particular location <italic>i</italic> in the reference genome, the majority of reads covering that position will have base calls that agree, and that the minority of base calls which do not match with the majority are likely to be errors. Under this assumption, the sequence estimate is obtained by recording the majority base, for some majority threshold, for all reference genome positions covered by the reads. For noise channel estimation, creating vectors of counts and denoising, we couple base calls and quality scores by combining bases with their corresponding quality scores. In other words, we assume that the input to the channel is a noise-free sequence taking values in alphabet <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M24"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq12.gif"/></alternatives></inline-formula>, while the channel output is a tuple of the called based and the quality score associated with that base. Hence the output alphabet is given by <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\mathcal B} ={\mathscr{A}}\times {\mathscr{Q}}$$\end{document}</tex-math><mml:math id="M26"><mml:mi>ℬ</mml:mi><mml:mo>=</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq13.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{Q}}$$\end{document}</tex-math><mml:math id="M28"><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq14.gif"/></alternatives></inline-formula> denotes the alphabet of the quality scores. The typical size of <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{Q}}$$\end{document}</tex-math><mml:math id="M30"><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq15.gif"/></alternatives></inline-formula> is 42, which carries a significant computational burden due to the resulting size of <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}\times {\mathscr{Q}}$$\end{document}</tex-math><mml:math id="M32"><mml:mi mathvariant="script">A</mml:mi><mml:mo>×</mml:mo><mml:mi mathvariant="script">Q</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq16.gif"/></alternatives></inline-formula>. To avoid this burden, we adopt the quality score binning method recommended by Illumina for reducing quality score resolution<sup><xref ref-type="bibr" rid="CR28">28</xref></sup>. This method reduces the original alphabet of quality scores from 42 to only 8 bins; hence, <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{Q}}\in \{{{\rm{bin}}}_{1},{{\rm{bin}}}_{2},\ldots ,{{\rm{bin}}}_{8}\}$$\end{document}</tex-math><mml:math id="M34"><mml:mi mathvariant="script">Q</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">bin</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">bin</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">bin</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq17.gif"/></alternatives></inline-formula>, with bin limits corresponding to those recommended by Illumina (see Supplementary Table <xref rid="MOESM1" ref-type="media">3</xref>). This set of output tuples also incorporates the fact that certain sequencing technologies, like Illumina technologies, are known to produce reads with position-varying noise characteristics. Typically, different noise characteristics would be characterized by different noise channels—in the position-varying case, up to one channel per position. However, by combining each nucleotide base with its quality score, we can broadly account for various possible position-dependent trends in noise without setting hard boundaries and limiting ourselves to particular assumptions about the noise characteristics.</p>
      <p id="Par32">With this formalization of the problem setting, the noise channel estimate <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M36"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq18.gif"/></alternatives></inline-formula> is of size <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\mathscr{A}}|\times | {\mathcal B} |$$\end{document}</tex-math><mml:math id="M38"><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:mo stretchy="false">|</mml:mo><mml:mo>×</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>ℬ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq19.gif"/></alternatives></inline-formula>, reflecting the assumption that the noise channel corrupts a sequence composed of symbols belonging to input alphabet <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M40"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq20.gif"/></alternatives></inline-formula>, and produces noisy sequences composed of symbols belonging to output alphabet <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\mathcal B} $$\end{document}</tex-math><mml:math id="M42"><mml:mi>ℬ</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq21.gif"/></alternatives></inline-formula>. The vector of counts <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf{m}}({l}^{k},{r}^{k})$$\end{document}</tex-math><mml:math id="M44"><mml:mi mathvariant="bold">m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq22.gif"/></alternatives></inline-formula>, of size <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$| {\mathcal B} |$$\end{document}</tex-math><mml:math id="M46"><mml:mo stretchy="false">|</mml:mo><mml:mi>ℬ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq23.gif"/></alternatives></inline-formula>, records the number of times the subsequence <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}^{k}b{r}^{k}$$\end{document}</tex-math><mml:math id="M48"><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mi>b</mml:mi><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq24.gif"/></alternatives></inline-formula>, comprising left and right contexts <italic>l</italic><sup><italic>k</italic></sup> and <italic>r</italic><sup><italic>k</italic></sup>, is observed in the collection of reads, with <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}^{k},{r}^{k}\in {{\mathscr{A}}}^{k}$$\end{document}</tex-math><mml:math id="M50"><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq25.gif"/></alternatives></inline-formula>, and central tuple <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b\in  {\mathcal B} $$\end{document}</tex-math><mml:math id="M52"><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mi>ℬ</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq26.gif"/></alternatives></inline-formula>. We limit the alphabet of the context to <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M54"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq27.gif"/></alternatives></inline-formula> to ensure that each possible context is observed a significant number of times.</p>
      <p id="Par33">Once the noise channel estimate <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M56"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq28.gif"/></alternatives></inline-formula> and vectors of counts <bold>m</bold> are acquired, the SAMDUDE algorithm proceeds follows. For ease of exposition and with some abuse of notation, we denote an arbitrary read as <italic>z</italic> with <italic>i</italic><sup>th</sup> component <italic>z</italic><sub><italic>i</italic></sub> accompanied by quality score <italic>q</italic><sub><italic>i</italic></sub>. Subsequences of <italic>z</italic> are denoted as <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${z}_{a}^{b}=({z}_{a},\ldots ,{z}_{b})$$\end{document}</tex-math><mml:math id="M58"><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msubsup><mml:mo>=</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>a</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq29.gif"/></alternatives></inline-formula>.<list list-type="order"><list-item><p id="Par34">For each base <italic>z</italic><sub><italic>i</italic></sub> and its associated quality score <italic>q</italic><sub><italic>i</italic></sub> in read <italic>z</italic>, identify the length 2<italic>k</italic> context string <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${z}_{i-k}^{i-1}{z}_{i+1}^{i+k}$$\end{document}</tex-math><mml:math id="M60"><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq30.gif"/></alternatives></inline-formula> surrounding position <italic>i</italic>, and bin bin<sub><italic>i</italic></sub> to which <italic>q</italic><sub><italic>i</italic></sub> belongs.</p></list-item><list-item><p id="Par35">Calculate the estimated probability of observing the left and right contexts <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${z}_{i-k}^{i-1}$$\end{document}</tex-math><mml:math id="M62"><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq31.gif"/></alternatives></inline-formula> and <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${z}_{i+1}^{i+k}$$\end{document}</tex-math><mml:math id="M64"><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq32.gif"/></alternatives></inline-formula> in <italic>x</italic><sup><italic>n</italic></sup> with different central symbols belonging in <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M66"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq33.gif"/></alternatives></inline-formula>. The probability is distributed over all symbols in <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M68"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq34.gif"/></alternatives></inline-formula> and given by<disp-formula id="Equ1"><label>1</label><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\bf{q}}}({z}_{i-k}^{i-1},({z}_{i},{{\rm{bin}}}_{i})),{z}_{i+1}^{i+k})={\pi }_{({z}_{i},{{\rm{bin}}}_{i})}\odot [{(\hat{{\boldsymbol{\Pi }}}{\hat{{\boldsymbol{\Pi }}}}^{T})}^{-1}\hat{{\boldsymbol{\Pi }}}{\bf{m}}({z}_{i-k}^{i-1},{z}_{i+1}^{i+k})],$$\end{document}</tex-math><mml:math id="M70" display="block"><mml:mover accent="true"><mml:mi mathvariant="bold">q</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">bin</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">)</mml:mo><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">bin</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mo>⊙</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msup><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover><mml:mi mathvariant="bold">m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msubsup><mml:mo>,</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">]</mml:mo><mml:mo>,</mml:mo></mml:math><graphic xlink:href="41598_2019_51418_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq35"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M72"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq35.gif"/></alternatives></inline-formula> is the channel estimate matrix comprising column vectors <inline-formula id="IEq36"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\{{\pi }_{1},{\pi }_{2},\ldots ,{\pi }_{| {\mathcal B} |}\}$$\end{document}</tex-math><mml:math id="M74"><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>π</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mi>ℬ</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq36.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq37"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\odot $$\end{document}</tex-math><mml:math id="M76"><mml:mo>⊙</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq37.gif"/></alternatives></inline-formula> represents element-wise multiplication for vectors (see<sup><xref ref-type="bibr" rid="CR15">15</xref></sup>, Eq. (25)).</p></list-item><list-item><p id="Par36">Replace <italic>z</italic><sub><italic>i</italic></sub> with the base corresponding to the argument of the maximum of the distribution estimate, and update <italic>q</italic><sub><italic>i</italic></sub> using the maximum of the distribution estimate (see subsec. Quality score updating for details).</p></list-item></list></p>
      <p id="Par37">We devote the following subsections to detailed descriptions of the components of SAMDUDE: estimates of the channel and true sequence, noise statistics, and vectors of counts. We also describe the quality score updating procedure, specify implementation details in terms of reads padding and describe the overall evaluation workflow.</p>
    </sec>
    <sec id="Sec10">
      <title>Channel and sequence estimation</title>
      <p id="Par38">To compute the channel estimate <inline-formula id="IEq38"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M78"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq38.gif"/></alternatives></inline-formula>, we use alignment information from the SAM file to perform a sequence pileup at every reference genome position by cataloging all reads at that position. At each position we assume that the majority base, for some majority threshold <inline-formula id="IEq39"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${t}_{m}\ge 0.5$$\end{document}</tex-math><mml:math id="M80"><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>≥</mml:mo><mml:mn>0.5</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq39.gif"/></alternatives></inline-formula>, is the true base. That is, the base in the pileup with normalized counts greater than or equal to <italic>t</italic><sub><italic>m</italic></sub> is declared to be the majority base. If there is no clear majority base, then we do not use information from that position for channel estimation. This rule allows us to use the overwhelming majority of genomic positions in order to estimate the channel characteristics. Additionally, the threshold ensures that information is not used from positions in the genome that display heterozygosity, e.g., due to polyploidy of the organism being sequenced. This, in turn, prevents the conflation of differences in reads overlapping heterozygous positions with noise, and precludes erroneous denoising of reads at those positions. For each base in <inline-formula id="IEq40"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M82"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq40.gif"/></alternatives></inline-formula> we record the number of bases in an 4 × 32 conditional counts matrix<disp-formula id="Equa"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf{N}}=[\begin{array}{ccccc}{{\rm{n}}}_{({\rm{A}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{A}}} &amp; \ldots  &amp; {{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{A}}} &amp; \ldots  &amp; {{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{8})|{\rm{A}}}\\ {{\rm{n}}}_{({\rm{A}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{C}}} &amp; \ldots  &amp; {{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{C}}} &amp; \ldots  &amp; {{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{8})|{\rm{C}}}\\ \vdots  &amp; \ddots  &amp; \vdots  &amp; \ddots  &amp; \vdots \\ {{\rm{n}}}_{({\rm{A}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{T}}} &amp; \ldots  &amp; {{\rm{n}}}_{({\rm{T}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{T}}} &amp; \ldots \ldots  &amp; {{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{8})|{\rm{T}}}\end{array}],$$\end{document}</tex-math><mml:math id="M84" display="block"><mml:mrow><mml:mrow><mml:mi mathvariant="bold">N</mml:mi></mml:mrow></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd><mml:mtd><mml:mo>…</mml:mo><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mtd></mml:mtr></mml:mtable><mml:mo>]</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math><graphic xlink:href="41598_2019_51418_Article_Equa.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq41"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{\rm{n}}}_{({i}_{1},{i}_{2})|j}$$\end{document}</tex-math><mml:math id="M86"><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>i</mml:mi></mml:mrow><mml:mrow><mml:mn>2</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi>j</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq41.gif"/></alternatives></inline-formula> is the number of positions in all reads for which the read contains base <italic>i</italic><sub>1</sub> with accompanying quality score in bin <italic>i</italic><sub>2</sub> at a position whose majority base is <italic>j</italic>. <bold>N</bold> is row-normalized to obtain <inline-formula id="IEq42"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}$$\end{document}</tex-math><mml:math id="M88"><mml:mover accent="true"><mml:mi mathvariant="bold">Π</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq42.gif"/></alternatives></inline-formula><disp-formula id="Equ2"><label>2</label><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\boldsymbol{\Pi }}}=[\begin{array}{ccccc}\frac{{{\rm{n}}}_{({\rm{A}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{A}}}}{\sum _{{\rm{\forall }}b\in {\mathscr{B}}}{{\rm{n}}}_{b|{\rm{A}}}} &amp; \ldots  &amp; \frac{{{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{A}}}}{\sum _{{\rm{\forall }}b\in {\mathscr{B}}}{{\rm{n}}}_{b|{\rm{A}}}} &amp; \ldots  &amp; \frac{{{\rm{n}}}_{({\rm{C}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{8})|{\rm{A}}}}{\sum _{{\rm{\forall }}b\in {\mathscr{B}}}{{\rm{n}}}_{b|{\rm{A}}}}\\ \vdots  &amp; \ddots  &amp; \vdots  &amp; \ddots  &amp; \vdots \\ \frac{{{\rm{n}}}_{({\rm{A}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{T}}}}{\sum _{{\rm{\forall }}b\in {\mathscr{B}}}{{\rm{n}}}_{b|{\rm{T}}}} &amp; \ldots  &amp; \frac{{{\rm{n}}}_{({\rm{T}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{1})|{\rm{T}}}}{\sum _{{\rm{\forall }}b\in {\mathscr{B}}}{{\rm{n}}}_{b|{\rm{T}}}} &amp; \ldots  &amp; \frac{{{\rm{n}}}_{({\rm{T}},{{\rm{b}}{\rm{i}}{\rm{n}}}_{8})|{\rm{T}}}}{\sum _{{\rm{\forall }}b\in {\mathscr{B}}}{{\rm{n}}}_{b|{\rm{T}}}}\end{array}].$$\end{document}</tex-math><mml:math id="M90" display="block"><mml:mrow><mml:mover><mml:mrow><mml:mi mathvariant="bold">Π</mml:mi></mml:mrow><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo>[</mml:mo><mml:mtable columnspacing="1em" rowspacing="4pt"><mml:mtr><mml:mtd><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">C</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd><mml:mtd><mml:mo>⋱</mml:mo></mml:mtd><mml:mtd><mml:mo>⋮</mml:mo></mml:mtd></mml:mtr><mml:mtr><mml:mtd><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">A</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd><mml:mtd><mml:mo>…</mml:mo></mml:mtd><mml:mtd><mml:mfrac><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="normal">b</mml:mi><mml:mi mathvariant="normal">i</mml:mi><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mn>8</mml:mn></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub><mml:mrow><mml:munder><mml:mo movablelimits="false">∑</mml:mo><mml:mrow><mml:mi mathvariant="normal">∀</mml:mi><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mrow><mml:mi class="MJX-tex-caligraphic" mathvariant="script">B</mml:mi></mml:mrow></mml:mrow></mml:munder><mml:msub><mml:mrow><mml:mi mathvariant="normal">n</mml:mi></mml:mrow><mml:mrow><mml:mi>b</mml:mi><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mi mathvariant="normal">T</mml:mi></mml:mrow></mml:mrow></mml:msub></mml:mrow></mml:mfrac></mml:mtd></mml:mtr></mml:mtable><mml:mo>]</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:math><graphic xlink:href="41598_2019_51418_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par39">The majority bases are recorded as the sequence estimate.</p>
    </sec>
    <sec id="Sec11">
      <title>Counts vector acquisition</title>
      <p id="Par40">The vectors of counts <inline-formula id="IEq43"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf{m}}({l}^{k},{r}^{k})$$\end{document}</tex-math><mml:math id="M92"><mml:mi mathvariant="bold">m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq43.gif"/></alternatives></inline-formula> record all appearances of context <inline-formula id="IEq44"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}^{k}{r}^{k}$$\end{document}</tex-math><mml:math id="M94"><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq44.gif"/></alternatives></inline-formula> surrounding a central symbol <italic>b</italic>, with <inline-formula id="IEq45"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}^{k},{r}^{k}\in {{\mathscr{A}}}^{k}$$\end{document}</tex-math><mml:math id="M96"><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>∈</mml:mo><mml:msup><mml:mrow><mml:mi mathvariant="script">A</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq45.gif"/></alternatives></inline-formula> and <inline-formula id="IEq46"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b\in  {\mathcal B} $$\end{document}</tex-math><mml:math id="M98"><mml:mi>b</mml:mi><mml:mo>∈</mml:mo><mml:mi>ℬ</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq46.gif"/></alternatives></inline-formula>. There are up to <inline-formula id="IEq47"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$|{\mathscr{A}}{|}^{2k}$$\end{document}</tex-math><mml:math id="M100"><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="script">A</mml:mi><mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mn>2</mml:mn><mml:mi>k</mml:mi></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq47.gif"/></alternatives></inline-formula> possible vectors <bold>m</bold> for each possible context <inline-formula id="IEq48"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$({l}^{k}{r}^{k})$$\end{document}</tex-math><mml:math id="M102"><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq48.gif"/></alternatives></inline-formula>, and each <bold>m</bold> is of length |<inline-formula id="IEq49"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$ {\mathcal B} $$\end{document}</tex-math><mml:math id="M104"><mml:mi>ℬ</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq49.gif"/></alternatives></inline-formula>|. For each <italic>b</italic> appearing between the left and right context components <italic>l</italic><sup><italic>k</italic></sup> and <italic>r</italic><sup><italic>k</italic></sup>, respectively, we record the number of times the sequence <inline-formula id="IEq50"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}^{k}b{r}^{k}$$\end{document}</tex-math><mml:math id="M106"><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mi>b</mml:mi><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq50.gif"/></alternatives></inline-formula> appears in the collection of reads as the <italic>b</italic><sup>th</sup> component of <inline-formula id="IEq51"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\bf{m}}({l}^{k},{r}^{k})$$\end{document}</tex-math><mml:math id="M108"><mml:mi mathvariant="bold">m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq51.gif"/></alternatives></inline-formula>:<disp-formula id="Equ3"><label>3</label><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{array}{rcl}{\bf{m}}({l}^{k},{r}^{k})[b] &amp; = &amp; |\{z,i:k+1\le i\le {\rm{length}}(z)-k\\ \forall {z}_{i-k}^{i+k} &amp; = &amp; {l}^{k}b{r}^{k},z\in \{{z}_{\mathrm{(1)}},{z}_{\mathrm{(2)}},\ldots ,{z}_{(m)}\mathrm{\}|.}\end{array}$$\end{document}</tex-math><mml:math id="M110" display="block"><mml:mtable columnalign="left"><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mrow><mml:mi mathvariant="bold">m</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo stretchy="false">)</mml:mo><mml:mo stretchy="false">[</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:mi>z</mml:mi><mml:mo>,</mml:mo><mml:mi>i</mml:mi><mml:mo>:</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi mathvariant="normal">length</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:mtd></mml:mtr><mml:mtr columnalign="left"><mml:mtd columnalign="right"><mml:mrow><mml:mo>∀</mml:mo><mml:msubsup><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:mrow></mml:msubsup></mml:mrow></mml:mtd><mml:mtd columnalign="center"><mml:mo>=</mml:mo></mml:mtd><mml:mtd columnalign="left"><mml:mrow><mml:msup><mml:mrow><mml:mi>l</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mi>b</mml:mi><mml:msup><mml:mrow><mml:mi>r</mml:mi></mml:mrow><mml:mi>k</mml:mi></mml:msup><mml:mo>,</mml:mo><mml:mi>z</mml:mi><mml:mo>∈</mml:mo><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mn>(1)</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mn>(2)</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mi>…</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mrow><mml:mi>z</mml:mi></mml:mrow><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>m</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:msub><mml:mn>}|.</mml:mn></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:math><graphic xlink:href="41598_2019_51418_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par41">For positions <inline-formula id="IEq52"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i &lt; k+1$$\end{document}</tex-math><mml:math id="M112"><mml:mi>i</mml:mi><mml:mo>&lt;</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq52.gif"/></alternatives></inline-formula> or <inline-formula id="IEq53"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i &gt; {\rm{length}}(z)-k$$\end{document}</tex-math><mml:math id="M114"><mml:mi>i</mml:mi><mml:mo>&gt;</mml:mo><mml:mi mathvariant="normal">length</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>z</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq53.gif"/></alternatives></inline-formula>, we employ information from the sequence estimate to acquire context counts. This process is detailed in subsec. Reads padding.</p>
    </sec>
    <sec id="Sec12">
      <title>Position-based denoising rules</title>
      <p id="Par42">Denoising is performed at read positions where <italic>z</italic><sub><italic>i</italic></sub> as well as the surrounding context string contain only bases in <inline-formula id="IEq54"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\mathscr{A}}$$\end{document}</tex-math><mml:math id="M116"><mml:mi mathvariant="script">A</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq54.gif"/></alternatives></inline-formula>, excluding symbols indicating ambiguity. We use this simple genomic alphabet in order to avoid basing denoising decisions on non-uniquely identifiable context strings. For efficiency, we set a quality score threshold above which denoising is not attempted, <italic>t</italic><sub><italic>p</italic></sub>. At read positions with quality scores corresponding to a probability above <italic>t</italic><sub>p</sub>, SAMDUDE does not attempt denoising for expediency.</p>
    </sec>
    <sec id="Sec13">
      <title>Quality score updating</title>
      <p id="Par43">The maximum of the conditional distribution estimate <inline-formula id="IEq55"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\bf{q}}}$$\end{document}</tex-math><mml:math id="M118"><mml:mover accent="true"><mml:mi mathvariant="bold">q</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq55.gif"/></alternatives></inline-formula> is used to update the quality score accompanying the denoised base. The updating procedure depends on whether the base the denoiser selected matches the original base <italic>z</italic><sub><italic>i</italic></sub>. If the maximum of <inline-formula id="IEq56"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\bf{q}}}$$\end{document}</tex-math><mml:math id="M120"><mml:mover accent="true"><mml:mi mathvariant="bold">q</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq56.gif"/></alternatives></inline-formula> corresponds to the same base as the original one, the quality score is adjusted as follows: convert the original quality score <italic>q</italic><sub><italic>i</italic></sub> into a confidence probability<disp-formula id="Equ4"><label>4</label><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${p}_{i}=1-{10}^{-{q}_{i}\mathrm{/10}},$$\end{document}</tex-math><mml:math id="M122" display="block"><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msup><mml:mrow><mml:mn>10</mml:mn></mml:mrow><mml:mrow><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>q</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mn>/10</mml:mn></mml:mrow></mml:msup><mml:mo>,</mml:mo></mml:math><graphic xlink:href="41598_2019_51418_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>take the arithmetic mean of <italic>p</italic><sub><italic>i</italic></sub> and the maximum of the estimated conditional probability <inline-formula id="IEq57"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\hat{{\bf{q}}}$$\end{document}</tex-math><mml:math id="M124"><mml:mover accent="true"><mml:mi mathvariant="bold">q</mml:mi><mml:mo mathvariant="bold">ˆ</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq57.gif"/></alternatives></inline-formula>, denoted by <italic>p</italic><sub>max</sub>, and back-convert the averaged probability into the updated quality score. In other words, the updated quality score is<disp-formula id="Equb"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathop{q}\limits^{ \sim }=-\,10\,\log (1-\frac{{p}_{i}+{p}_{max}}{2}),$$\end{document}</tex-math><mml:math id="M126" display="block"><mml:mrow><mml:mover><mml:mi>q</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:mrow><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mspace width="-.25em"/><mml:mn>10</mml:mn><mml:mspace width="thinmathspace"/><mml:mi>log</mml:mi><mml:mrow><mml:mo>(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:mfrac><mml:mrow><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi>i</mml:mi></mml:mrow></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mrow><mml:mrow><mml:mo form="prefix" movablelimits="true">max</mml:mo></mml:mrow></mml:mrow></mml:mrow></mml:msub></mml:mrow><mml:mn>2</mml:mn></mml:mfrac><mml:mo>)</mml:mo></mml:mrow><mml:mo>,</mml:mo></mml:math><graphic xlink:href="41598_2019_51418_Article_Equb.gif" position="anchor"/></alternatives></disp-formula>when the denoiser does not recommend a different base. The updated quality score is re-inserted into the quality score string after conversion to an ASCII character as per the sequencing machine’s quality score encoding method. For example, if the sequencing machine encodes on a Phred + 33 scale, the quality score string’s <italic>i</italic><sup>th</sup> component is replaced with the ASCII character for <inline-formula id="IEq58"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{q}+33$$\end{document}</tex-math><mml:math id="M128"><mml:mover accent="true"><mml:mi>q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mo>+</mml:mo><mml:mn>33</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq58.gif"/></alternatives></inline-formula>. On the other hand, if the denoiser recommends a base change, <italic>q</italic><sub><italic>i</italic></sub> is simply replaced with <inline-formula id="IEq59"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{q}=-\,10\,\log (1-{p}_{{\rm{\max }}})$$\end{document}</tex-math><mml:math id="M130"><mml:mover accent="true"><mml:mi>q</mml:mi><mml:mo>˜</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:mo>−</mml:mo><mml:mspace width="-.25em"/><mml:mn>10</mml:mn><mml:mspace width=".1em"/><mml:mi>log</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>−</mml:mo><mml:msub><mml:mrow><mml:mi>p</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="normal">max</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq59.gif"/></alternatives></inline-formula>. Again, the quality score string’s <italic>i</italic><sup>th</sup> component is replaced with the appropriately encoded <inline-formula id="IEq60"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{q}$$\end{document}</tex-math><mml:math id="M132"><mml:mover accent="true"><mml:mi>q</mml:mi><mml:mo>˜</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq60.gif"/></alternatives></inline-formula>.</p>
      <p id="Par44">This procedure was chosen in order to balance the denoiser’s conditional probability estimates with the original quality scores, which reflect the sequencing machine’s confidence in the base calls. Since the original quality score is a function of the original base call, if the denoiser agrees with the base call, the denoiser’s probability estimate should be combined with the sequencer’s quality score. However, if the denoiser decides on a different base, then the original quality score is unrelated to the denoiser’s chosen base and we can disregard the original quality score in favor of the quality score converted from the denoiser’s probability estimate.</p>
    </sec>
    <sec id="Sec14">
      <title>Reads padding</title>
      <p id="Par45">The reads reported from a sequencing machine cannot always be mapped directly to the reference genome in their entirety, since they may contain bases that are insertions relative to the reference genome, lack bases that correspond to deletions from the reference genome, or contain stretches of bases at the beginning and end of the read that simply do not match the reference genome. These inconsistencies relative to the reference genome are summarized by the sequence aligner in a CIGAR string accompanying the read (<ext-link ext-link-type="uri" xlink:href="https://samtools.github.io/hts-specs/SAMv1.eps">https://samtools.github.io/hts-specs/SAMv1.eps</ext-link>). Additionally, large portions of the read may be assigned very low quality scores, indicating entire regions of the read for which the sequencer has low confidence. One strategy for dealing with these inconsistencies is to simply eliminate non-matching or low-quality bases, but this can lead to loss of potentially valuable information. Instead, we retain this information and tailor our use of it to process the reads during channel estimation, counts vector acquisition, and denoising.</p>
      <p id="Par46">The channel estimation procedure relies on the creation of pileups at reference genome positions. As a result, this step considers only bases that are mapped to the reference genome and relies on the CIGAR string information to accurately map bases to reference genome positions. Bases that are designated in the CIGAR string as low-confidence and non-matching (i.e., “soft-clipped”, or simply “clipped”) or inserted relative to the reference genome are not considered during channel estimation. When deletions are indicated in the CIGAR string, reference mapping positions are adjusted accordingly.</p>
      <p id="Par47">The counts vectors are simply histograms of the central base appearing with context strings of length 2<italic>k</italic>. These context strings are unique to the individual and should include bases that are inconsistent relative to the reference genome, since those bases may be true polymorphisms. Thus, during counts vector acquisition the reads retain bases that are marked by the aligner as insertions since those insertions may be inherent to the true sequence. However, as in the channel estimation process, bases that are designated in the CIGAR string as clipped are omitted to avoid large sections of low-confidence base calls. In order to maximize the number of context strings obtained from a processed read, we additionally pad the read with a header and footer of length up to <italic>k</italic> if the read begins or ends, respectively, with bases that are mapped to the reference genome, i.e., not insertions. The padding process, illustrated in Fig. <xref rid="Fig4" ref-type="fig">4</xref>, allows the denoiser to obtain context information from up to 2<italic>k</italic> additional locations in each read.<fig id="Fig4"><label>Figure 4</label><caption><p>During context acquisition and denoising processes, reads are padded with bases from the sequence estimate. At left: position <italic>i</italic> in the read corresponds to position <italic>j</italic> in the sequence estimate, and <inline-formula id="IEq61"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1\le i\le k$$\end{document}</tex-math><mml:math id="M134"><mml:mn>1</mml:mn><mml:mo>≤</mml:mo><mml:mi>i</mml:mi><mml:mo>≤</mml:mo><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq61.gif"/></alternatives></inline-formula>. The left half of the context for that base is padded with sequence estimate bases from positions <inline-formula id="IEq62"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j-k$$\end{document}</tex-math><mml:math id="M136"><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq62.gif"/></alternatives></inline-formula> up to <inline-formula id="IEq63"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j-i+1$$\end{document}</tex-math><mml:math id="M138"><mml:mi>j</mml:mi><mml:mo>−</mml:mo><mml:mi>i</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq63.gif"/></alternatives></inline-formula>, where <italic>k</italic> is half of the context length. At right: here, position <italic>i</italic>′ in the read corresponds to position <italic>j</italic>′ in the sequence estimate. <inline-formula id="IEq64"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$i^{\prime} \ge l-k+1$$\end{document}</tex-math><mml:math id="M140"><mml:mi>i</mml:mi><mml:mo>′</mml:mo><mml:mo>≥</mml:mo><mml:mi>l</mml:mi><mml:mo>−</mml:mo><mml:mi>k</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq64.gif"/></alternatives></inline-formula>, where <italic>l</italic> is the length of the processed read. The base at position <italic>i</italic>′ can now use positions <inline-formula id="IEq65"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j^{\prime} -l+i^{\prime} +1$$\end{document}</tex-math><mml:math id="M142"><mml:mi>j</mml:mi><mml:mo>′</mml:mo><mml:mo>−</mml:mo><mml:mi>l</mml:mi><mml:mo>+</mml:mo><mml:mi>i</mml:mi><mml:mo>′</mml:mo><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq65.gif"/></alternatives></inline-formula> up to <inline-formula id="IEq66"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$j^{\prime} +k$$\end{document}</tex-math><mml:math id="M144"><mml:mi>j</mml:mi><mml:mo>′</mml:mo><mml:mo>+</mml:mo><mml:mi>k</mml:mi></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq66.gif"/></alternatives></inline-formula> of the sequence estimate as a right-hand context.</p></caption><graphic xlink:href="41598_2019_51418_Fig4_HTML" id="d29e3605"/></fig></p>
    </sec>
    <sec id="Sec15">
      <title>Evaluation</title>
      <sec id="Sec16">
        <title>Evaluation procedures and metrics</title>
        <p id="Par48">Denoising performance was evaluated with respect to variant calling of single nucleotide polymorphisms (SNPs). To quantify denoiser performance, we used the common performance metrics of true positives (T.P.), false positives (F.P.), and false negatives (F.N.). T.P. variants are the calls present in the gold standard call set, F.P. variants are the calls not present in the gold standard call set, and F.N. variants are those present in the gold standard set but not called. To summarize the changes in T.P., F.P. and F.N. variants identified, we used the following performance metrics: sensitivity (S), which measures the proportion of all the variants that are correctly called (<inline-formula id="IEq67"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\rm{T}}.{\rm{P}}./({\rm{T}}.{\rm{P}}.+{\rm{F}}.{\rm{N}}.)$$\end{document}</tex-math><mml:math id="M146"><mml:mi mathvariant="normal">T</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mi mathvariant="normal">P</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">T</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mi mathvariant="normal">P</mml:mi><mml:mo>.</mml:mo><mml:mo>+</mml:mo><mml:mi mathvariant="normal">F</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mi mathvariant="normal">N</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq67.gif"/></alternatives></inline-formula>), precision (P), which measures the proportion of called variants that are true (<inline-formula id="IEq68"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\rm{T}}.{\rm{P}}./({\rm{T}}.{\rm{P}}.+{\rm{F}}.{\rm{P}}.)$$\end{document}</tex-math><mml:math id="M148"><mml:mi mathvariant="normal">T</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mi mathvariant="normal">P</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="normal">T</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mi mathvariant="normal">P</mml:mi><mml:mo>.</mml:mo><mml:mo>+</mml:mo><mml:mi mathvariant="normal">F</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mi mathvariant="normal">P</mml:mi><mml:mo>.</mml:mo><mml:mspace width="-0.25em"/><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq68.gif"/></alternatives></inline-formula>), and F-score (F), which is the harmonic mean of the sensitivity and precision (<inline-formula id="IEq69"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2(S\times P)/(S+P)$$\end{document}</tex-math><mml:math id="M150"><mml:mn>2</mml:mn><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>×</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">)</mml:mo><mml:mo>/</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>S</mml:mi><mml:mo>+</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq69.gif"/></alternatives></inline-formula>).</p>
      </sec>
      <sec id="Sec17">
        <title>SAMDUDE parameters</title>
        <p id="Par49">For all denoising experiments, we used a single-sided context length of <inline-formula id="IEq70"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=7$$\end{document}</tex-math><mml:math id="M152"><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mn>7</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq70.gif"/></alternatives></inline-formula> (14 bases total in the double-sided context). This context length was chosen for computational feasibility, but also maximizes the number of counts in each context histogram without skewing the histograms towards a uniform distribution, which occurs when <italic>k</italic> is either too small or too large (see Supplementary Tables <xref rid="MOESM1" ref-type="media">4–6</xref>). For sequence and channel estimation we used a majority threshold of <inline-formula id="IEq71"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${t}_{m}=0.9$$\end{document}</tex-math><mml:math id="M154"><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>m</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.9</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq71.gif"/></alternatives></inline-formula> for high confidence in our estimate of the “true” genomic sequence, and also to definitively eliminate potentially confounding effects at heterozygous genomic positions which might not have a clear majority base. Finally, based on experiments with different quality value thresholds (see Supplementary Tables <xref rid="MOESM1" ref-type="media">5</xref> and <xref rid="MOESM1" ref-type="media">6</xref>), we attempted denoising only at bases for which the sequencer’s confidence probability <italic>p</italic>, Eq. (<xref rid="Equ4" ref-type="">4</xref>)) is less than a chosen confidence threshold <inline-formula id="IEq72"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${t}_{p}=0.9$$\end{document}</tex-math><mml:math id="M156"><mml:msub><mml:mrow><mml:mi>t</mml:mi></mml:mrow><mml:mrow><mml:mi>p</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>0.9</mml:mn></mml:math><inline-graphic xlink:href="41598_2019_51418_Article_IEq72.gif"/></alternatives></inline-formula>.</p>
      </sec>
      <sec id="Sec18">
        <title>Denoising and variant calling pipeline</title>
        <p id="Par50">Individual chromosomes were extracted in binary SAM (BAM) file format from the aligned data sets and sorted using the SAMtools utility<sup><xref ref-type="bibr" rid="CR29">29</xref></sup>. For denoising using Musket, RACER, BFCounter and Lighter, copies of the sorted BAM file were converted from the BAM to FASTQ format via the biobambam2 BAM file processing toolkit<sup><xref ref-type="bibr" rid="CR30">30</xref></sup>. BAM files for each chromosome were also converted to the SAM format. The extracted SAM files were denoised using SAMDUDE.</p>
        <p id="Par51">The denoised FASTQ files were then aligned to a reference file using BWA-mem<sup><xref ref-type="bibr" rid="CR31">31</xref></sup>, generating denoised SAM files. All denoised SAM files then underwent SNP calling using the SNP calling pipeline recommended by the Broad Institute<sup><xref ref-type="bibr" rid="CR32">32</xref>–<xref ref-type="bibr" rid="CR34">34</xref></sup>, and compared to the gold standard call set. We report results for both raw variants and variants filtered under the GATK Best Practices-recommended variant filtering process. For more details regarding the variant calling, filtering and evaluation pipelines, we refer the reader to the Variant calling pipeline section in the Supplementary data.</p>
      </sec>
      <sec id="Sec19">
        <title>Computational requirements and machine specifications</title>
        <p id="Par52">We ran most experiments on a workstation computer with 12 Intel Xeon cores at 3.4 GHz and 32 GB of RAM, running Linux Ubuntu 14.04.4. SAMDUDE denoising for the chromosome 11 file of data set 3 was run on a different workstation with 80 Intel Deon cores at 2.2 GHz and 504 GB RAM, running CentOS 7.4.1708. Time and peak computational memory requirements for denoising data sets 1, 2 and 3 using SAMDUDE, Musket, RACER, BFCounter and Lighter are summarized in the Supplementary Table <xref rid="MOESM1" ref-type="media">7</xref>. In its current manifestation, SAMDUDE generally uses about an order of magnitude more memory than Musket and RACER. This is due to the large number of context histogram vectors that SAMDUDE acquires. SAMDUDE also generally requires about an order of magnitude more runtime than Musket and RACER. This result is not surprising, given that SAMDUDE is currently implemented in Python with no parallelization.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary information</title>
    <sec id="Sec20">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="41598_2019_51418_MOESM1_ESM.pdf">
            <caption>
              <p>SAMDUDE supplementary data</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p><bold>Publisher’s note</bold> Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <sec>
    <title>Supplementary information</title>
    <p>is available for this paper at 10.1038/s41598-019-51418-z.</p>
  </sec>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors would like to thank Jiantao Jiao and Dmitri Pavlichin for helpful discussions and suggestions. This work has been supported by the Center for Science of Information (CSoI), an NSF Science and Technology Center, under grant agreement CCF-0939370, and by NIH Grant 5 U01 CA198943-03.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>I.O., M.H. and T.W. conceived the experiments, I.F.-H. conducted the experiments and analyzed the results. All authors reviewed the manuscript.</p>
  </notes>
  <notes notes-type="COI-statement">
    <title>Competing interests</title>
    <p id="Par53">The authors declare no competing interests.</p>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Costa</surname>
            <given-names>FF</given-names>
          </name>
        </person-group>
        <article-title>Big data in biomedicine</article-title>
        <source>Drug discovery today</source>
        <year>2014</year>
        <volume>19</volume>
        <fpage>433</fpage>
        <lpage>440</lpage>
        <pub-id pub-id-type="doi">10.1016/j.drudis.2013.10.012</pub-id>
        <pub-id pub-id-type="pmid">24183925</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Minoche</surname>
            <given-names>AE</given-names>
          </name>
          <name>
            <surname>Dohm</surname>
            <given-names>JC</given-names>
          </name>
          <name>
            <surname>Himmelbauer</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of genomic high-throughput sequencing data generated on illumina hiseq and genome analyzer systems</article-title>
        <source>Genome biology</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>R112</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2011-12-11-r112</pub-id>
        <pub-id pub-id-type="pmid">22067484</pub-id>
      </element-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Boycott</surname>
            <given-names>KM</given-names>
          </name>
          <name>
            <surname>Vanstone</surname>
            <given-names>MR</given-names>
          </name>
          <name>
            <surname>Bulman</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>MacKenzie</surname>
            <given-names>AE</given-names>
          </name>
        </person-group>
        <article-title>Rare-disease genetics in the era of next-generation sequencing: discovery to translation</article-title>
        <source>Nature Reviews Genetics</source>
        <year>2013</year>
        <volume>14</volume>
        <fpage>681</fpage>
        <lpage>691</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg3555</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Laehnemann</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Borkhardt</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>McHardy</surname>
            <given-names>AC</given-names>
          </name>
        </person-group>
        <article-title>Denoising dna deep sequencing data—high-throughput sequencing errors and their correction</article-title>
        <source>Briefings in bioinformatics</source>
        <year>2016</year>
        <volume>17</volume>
        <fpage>154</fpage>
        <lpage>179</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbv029</pub-id>
        <pub-id pub-id-type="pmid">26026159</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Koh, P. W., Pierson, E. &amp; Kundaje, A. Denoising genome-wide histone chip-seq with convolutional neural networks. <italic>Bioinformatics</italic><bold>33</bold>, i225–i233, 10.1093/bioinformatics/btx243, /oup/backfile/content_public/journal/bioinformatics/33/14/10.1093_bioinformatics_btx243/2/btx243.pdf (2017).</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Molnar</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ilie</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Correcting illumina data</article-title>
        <source>Briefings in bioinformatics</source>
        <year>2014</year>
        <volume>16</volume>
        <fpage>588</fpage>
        <lpage>599</lpage>
        <pub-id pub-id-type="doi">10.1093/bib/bbu029</pub-id>
        <pub-id pub-id-type="pmid">25183248</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heydari</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Miclotte</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Demeester</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Van de Peer</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Fostier</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Evaluation of the impact of illumina error correction tools on de novo genome assembly</article-title>
        <source>BMC bioinformatics</source>
        <year>2017</year>
        <volume>18</volume>
        <fpage>374</fpage>
        <pub-id pub-id-type="doi">10.1186/s12859-017-1784-8</pub-id>
        <pub-id pub-id-type="pmid">28821237</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lee</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Moon</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Yoon</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>T</given-names>
          </name>
        </person-group>
        <article-title>Dude-seq: Fast, flexible, and robust denoising for targeted amplicon sequencing</article-title>
        <source>PloS one</source>
        <year>2017</year>
        <volume>12</volume>
        <fpage>e0181463</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0181463</pub-id>
        <pub-id pub-id-type="pmid">28749987</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ochoa</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Hernaez</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Goldfeder</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Weissman</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ashley</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>Effect of lossy compression of quality scores on variant calling</article-title>
        <source>Briefings in bioinformatics</source>
        <year>2016</year>
        <volume>18</volume>
        <fpage>183</fpage>
        <lpage>194</lpage>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Liu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Schröder</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Schmidt</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Musket: a multistage k-mer spectrum-based error corrector for illumina sequence data</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>308</fpage>
        <lpage>315</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts690</pub-id>
        <pub-id pub-id-type="pmid">23202746</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ilie</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Molnar</surname>
            <given-names>M</given-names>
          </name>
        </person-group>
        <article-title>Racer: rapid and accurate correction of errors in reads</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <fpage>2490</fpage>
        <lpage>2493</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt407</pub-id>
        <pub-id pub-id-type="pmid">23853064</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pritchard</surname>
            <given-names>JK</given-names>
          </name>
        </person-group>
        <article-title>Efficient counting of k-mers in dna sequences using a bloom filter</article-title>
        <source>BMC Bioinformatics</source>
        <year>2011</year>
        <volume>12</volume>
        <fpage>333</fpage>
        <pub-id pub-id-type="doi">10.1186/1471-2105-12-333</pub-id>
        <?supplied-pmid 21831268?>
        <pub-id pub-id-type="pmid">21831268</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Florea</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Lighter: fast and memory-efficient sequencing error correction without counting</article-title>
        <source>Genome Biology</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>509</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-014-0509-9</pub-id>
        <?supplied-pmid 25398208?>
        <pub-id pub-id-type="pmid">25398208</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Heo</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Ramachandran</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Hwu</surname>
            <given-names>W-M</given-names>
          </name>
          <name>
            <surname>Ma</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>D</given-names>
          </name>
        </person-group>
        <article-title>Bless 2: accurate, memory-efficient and fast error correction method</article-title>
        <source>Bioinformatics</source>
        <year>2016</year>
        <volume>32</volume>
        <fpage>2369</fpage>
        <lpage>2371</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btw146</pub-id>
        <?supplied-pmid 27153708?>
        <pub-id pub-id-type="pmid">27153708</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Weissman</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Ordentlich</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Seroussi</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Verdú</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Weinberger</surname>
            <given-names>MJ</given-names>
          </name>
        </person-group>
        <article-title>Universal discrete denoising: Known channel</article-title>
        <source>IEEE Transactions on Information Theory</source>
        <year>2005</year>
        <volume>51</volume>
        <fpage>5</fpage>
        <lpage>28</lpage>
        <pub-id pub-id-type="doi">10.1109/TIT.2004.839518</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pfeiffer</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Systematic evaluation of error rates and causes in short samples in next-generation sequencing</article-title>
        <source>Scientific reports</source>
        <year>2018</year>
        <volume>8</volume>
        <fpage>10950</fpage>
        <pub-id pub-id-type="doi">10.1038/s41598-018-29325-6</pub-id>
        <pub-id pub-id-type="pmid">30026539</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Fox, E. J., Reid-Bayliss, K. S., Emond, M. J. &amp; Loeb, L. A. Accuracy of next generation sequencing platforms. <italic>Next generation, sequencing &amp; applications</italic><bold>1</bold> (2014).</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zook</surname>
            <given-names>JM</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Integrating human sequence data sets provides a resource of benchmark snp and indel genotype calls</article-title>
        <source>Nature biotechnology</source>
        <year>2014</year>
        <volume>32</volume>
        <fpage>246</fpage>
        <lpage>251</lpage>
        <pub-id pub-id-type="doi">10.1038/nbt.2835</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Cánovas, R., Moffat, A. &amp; Turpin, A. Lossy compression of quality scores in genomic data. <italic>Bioinformatics</italic><bold>30</bold>, 2130–2136, 10.1093/bioinformatics/btu183, /oup/backfile/content_public/journal/bioinformatics/30/15/10.1093_bioinformatics_btu183/2/btu183.pdf (2014).</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Malysa, G. <italic>et al</italic>. Qvz: lossy compression of quality values. <italic>Bioinformatics</italic><bold>31</bold>, 3122–3129, 10.1093/bioinformatics/btv330, /oup/backfile/content_public/journal/bioinformatics/31/19/10.1093_bioinformatics_btv330/3/btv330.pdf (2015).</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kandoth</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Mutational landscape and significance across 12 major cancer types</article-title>
        <source>Nature</source>
        <year>2013</year>
        <volume>502</volume>
        <fpage>333</fpage>
        <?supplied-pmid 24132290?>
        <pub-id pub-id-type="pmid">24132290</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gilissen</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Hoischen</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Brunner</surname>
            <given-names>HG</given-names>
          </name>
          <name>
            <surname>Veltman</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Disease gene identification strategies for exome sequencing</article-title>
        <source>European Journal of Human Genetics</source>
        <year>2012</year>
        <volume>20</volume>
        <fpage>490</fpage>
        <pub-id pub-id-type="doi">10.1038/ejhg.2011.258</pub-id>
        <pub-id pub-id-type="pmid">22258526</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Rabbani</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Mahdieh</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Hosomichi</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Nakaoka</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Inoue</surname>
            <given-names>I</given-names>
          </name>
        </person-group>
        <article-title>Next-generation sequencing: impact of exome sequencing in characterizing mendelian disorders</article-title>
        <source>Journal of human genetics</source>
        <year>2012</year>
        <volume>57</volume>
        <fpage>621</fpage>
        <pub-id pub-id-type="doi">10.1038/jhg.2012.91</pub-id>
        <pub-id pub-id-type="pmid">22832387</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bastarache</surname>
            <given-names>L</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Phenotype risk scores identify patients with unrecognized mendelian disease patterns</article-title>
        <source>Science</source>
        <year>2018</year>
        <volume>359</volume>
        <fpage>1233</fpage>
        <lpage>1239</lpage>
        <pub-id pub-id-type="doi">10.1126/science.aal4043</pub-id>
        <pub-id pub-id-type="pmid">29590070</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Goldfeder</surname>
            <given-names>RL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Medical implications of technical accuracy in genome sequencing</article-title>
        <source>Genome medicine</source>
        <year>2016</year>
        <volume>8</volume>
        <fpage>24</fpage>
        <pub-id pub-id-type="doi">10.1186/s13073-016-0269-0</pub-id>
        <pub-id pub-id-type="pmid">26932475</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dewey</surname>
            <given-names>FE</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Clinical interpretation and implications of whole-genome sequencing</article-title>
        <source>Jama</source>
        <year>2014</year>
        <volume>311</volume>
        <fpage>1035</fpage>
        <lpage>1045</lpage>
        <pub-id pub-id-type="doi">10.1001/jama.2014.1717</pub-id>
        <pub-id pub-id-type="pmid">24618965</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Altman, R. B. <italic>et al</italic>. A research roadmap for next-generation sequencing informatics. <italic>Science translational medicine</italic><bold>8</bold>, 335ps10–335ps10 (2016).</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Illumina. Reducing whole-genome data storage footprint (white paper, available at <ext-link ext-link-type="uri" xlink:href="https://www.illumina.com/documents/products/whitepapers/whitepaper_datacompression.pdf">https://www.illumina.com/documents/products/whitepapers/whitepaper_datacompression.pdf</ext-link>, 2014).</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The sequence alignment/map format and samtools</article-title>
        <source>Bioinformatics</source>
        <year>2009</year>
        <volume>25</volume>
        <fpage>2078</fpage>
        <lpage>2079</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btp352</pub-id>
        <pub-id pub-id-type="pmid">19505943</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tischler</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Leonard</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>biobambam: tools for read pair collation based algorithms on bam files</article-title>
        <source>Source Code for Biology and Medicine</source>
        <year>2014</year>
        <volume>9</volume>
        <fpage>13</fpage>
        <pub-id pub-id-type="doi">10.1186/1751-0473-9-13</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <mixed-citation publication-type="other">Li, H. Aligning sequence reads, clone sequences and assembly contigs with bwa-mem. <italic>arXiv preprint arXiv:1303.3997</italic> (2013).</mixed-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>McKenna</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>The genome analysis toolkit: a mapreduce framework for analyzing next-generation dna sequencing data</article-title>
        <source>Genome research</source>
        <year>2010</year>
        <volume>20</volume>
        <fpage>1297</fpage>
        <lpage>1303</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.107524.110</pub-id>
        <pub-id pub-id-type="pmid">20644199</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>DePristo</surname>
            <given-names>MA</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A framework for variation discovery and genotyping using next-generation dna sequencing data</article-title>
        <source>Nature genetics</source>
        <year>2011</year>
        <volume>43</volume>
        <fpage>491</fpage>
        <lpage>498</lpage>
        <pub-id pub-id-type="doi">10.1038/ng.806</pub-id>
        <pub-id pub-id-type="pmid">21478889</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Van der Auwera, G. A. <italic>et al</italic>. From fastq data to high-confidence variant calls: the genome analysis toolkit best practices pipeline. <italic>Current protocols in bioinformatics</italic> 11–10 (2013).</mixed-citation>
    </ref>
  </ref-list>
</back>

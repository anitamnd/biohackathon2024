<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10464206</article-id>
    <article-id pub-id-type="pmid">37626411</article-id>
    <article-id pub-id-type="publisher-id">2998</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02998-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SCA: recovering single-cell heterogeneity through information-based dimensionality reduction</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>DeMeo</surname>
          <given-names>Benjamin</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-2724-7228</contrib-id>
        <name>
          <surname>Berger</surname>
          <given-names>Bonnie</given-names>
        </name>
        <address>
          <email>bab@mit.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.116068.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2341 2786</institution-id><institution>Computer Science and Artificial Intelligence Laboratory, MIT, </institution></institution-wrap>Cambridge, 02139 MA USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/03vek6s52</institution-id><institution-id institution-id-type="GRID">grid.38142.3c</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 754X</institution-id><institution>Department of Biomedical Informatics, </institution><institution>Harvard University, </institution></institution-wrap>Cambridge, 02138 MA USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.116068.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2341 2786</institution-id><institution>Department of Mathematics, MIT, </institution></institution-wrap>Cambridge, 02139 MA USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>195</elocation-id>
    <history>
      <date date-type="received">
        <day>7</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>28</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Dimensionality reduction summarizes the complex transcriptomic landscape of single-cell datasets for downstream analyses. Current approaches favor large cellular populations defined by many genes, at the expense of smaller and more subtly defined populations. Here, we present surprisal component analysis (SCA), a technique that newly leverages the information-theoretic notion of surprisal for dimensionality reduction to promote more meaningful signal extraction. For example, SCA uncovers clinically important cytotoxic T-cell subpopulations that are indistinguishable using existing pipelines. We also demonstrate that SCA substantially improves downstream imputation. SCA’s efficient information-theoretic paradigm has broad applications to the study of complex biological tissues in health and disease.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02998-7.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>National Institutes of Health</institution>
        </funding-source>
        <award-id>R01HG010959</award-id>
        <principal-award-recipient>
          <name>
            <surname>DeMeo</surname>
            <given-names>Benjamin</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>1R35GM141861</award-id>
        <principal-award-recipient>
          <name>
            <surname>Berger</surname>
            <given-names>Bonnie</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Massachusetts Institute of Technology (MIT)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>'Open Access funding provided by the MIT Libraries'</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Single-cell RNA sequencing (scRNA-seq) produces transcript counts for individual cells, enabling fine-grained analyses of biological tissues. Single-cell datasets can uncover cellular populations and gene-gene interactions that play critical roles in biological and pathological phenomena [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>]. Identifying and characterizing this heterogeneity is a key motivator of many single-cell experiments.</p>
    <p id="Par3">However, the size, high dimensionality, and noisiness of single-cell data complicates this task. Modern experiments profile tens of thousands of genes per cell, often with high dropout levels (under-sampling of mRNA molecules) and technical noise. Dimensionality reduction, whereby the data is represented in a lower-dimensional space with enriched signal, has become a cornerstone of modern scRNA-seq analysis pipelines. For example, principal component analysis (PCA) projects the data to a lower-dimensional linear subspace such that the total variance of the projected data is maximized. Independent component analysis (ICA) instead aims to identify non-Gaussian combinations of features. Both have found widespread use in single-cell studies [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. A more recent method, scVI [<xref ref-type="bibr" rid="CR8">8</xref>], models transcript counts using a zero-inflated negative-binomial distribution, and performs variational inference to non-linearly embed each cell into a low-dimensional parameter space. Graph-based dimensionality reduction methods such as PHATE [<xref ref-type="bibr" rid="CR9">9</xref>] and diffusion maps [<xref ref-type="bibr" rid="CR10">10</xref>] compute pairwise similarities between cells using diffusion on a <italic>k</italic>-nearest-neighbor network and create embeddings that preserve these similarities.</p>
    <p id="Par4">While these approaches are effective, they often fail to capture the full cellular diversity of complex tissues for two reasons. First, rare cell types, by definition, account for a small fraction of the observations, and therefore contribute little to a dataset’s global structure. Second, many distinctions between cellular populations hinge on just a few of the thousands of genes measured; we call such populations <italic>subtly defined</italic>. For instance, gamma-delta T cells, which are known for their antigen recognition capacities [<xref ref-type="bibr" rid="CR11">11</xref>], are distinguished from ordinary cytotoxic T cells by the presence of just a few gamma and delta T receptors. Whereas PCA and ICA both compute features that optimize objective functions over the entire dataset―total variance and non-Gaussianity―rare cell populations thwart both strategies, since the genes defining them may be noisy or unexpressed over much of the data. Similarly, scVI uses the evidence lower bound (ELBO) loss function to evaluate and refine its latent encoding. Since ELBO takes each recorded transcript into account, rare and subtly defined cell types may not impact it much, leading to underrepresentation. Other non-linear methods, like UMAP [<xref ref-type="bibr" rid="CR12">12</xref>] and t-SNE [<xref ref-type="bibr" rid="CR13">13</xref>], rely on a <italic>k</italic>-nearest-neighbor graph; however, constructing an accurate <italic>k</italic>-nearest-neighbor graph requires an accurate notion of cell-cell similarity, which is nontrivial. The same can be said of network-based methods, like PHATE [<xref ref-type="bibr" rid="CR9">9</xref>] and diffusion maps [<xref ref-type="bibr" rid="CR10">10</xref>], which build reductions using diffusion over the <italic>k</italic>-nearest-neighbor graph. Real cellular populations may be both rare and subtly defined, so these challenges are significant roadblocks to realizing scRNA-seq’s full potential.</p>
    <p id="Par5">Here, we introduce SCA (surprisal component analysis), an information-theoretic dimensionality reduction method that identifies statistically informative signals in single-cell transcriptional data to enable deeper insight into complex tissues (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a). SCA newly leverages the notion of <italic>surprisal</italic>, whereby less probable events are more informative when they occur, to assign a <italic>surprisal score</italic> to each transcript in each cell. By identifying the set of axes which captures the most of this surprising variation, SCA enables dimensionality reduction that better preserves information from rare and subtly defined cell types, uncovering them where existing methods cannot.<fig id="Fig1"><label>Fig. 1</label><caption><p><bold>a</bold> Illustration of SCA’s key conceptual advance. The vertical axis separates a small cellular population (top) from a larger one (bottom). The two horizontal axes have higher variance but cannot separate the two populations. The leading principal components align with the higher-variance horizontal axes and fail to separate the populations. The leading surprisal component aligns with the more informative vertical axis, allowing downstream separation. <bold>b</bold> Construction of surprisal scores from gene expression data. For each cell, we compare the gene’s expression in a local neighborhood of the cell to the gene’s global expression using the Wilcoxon rank-sum test. The resulting <italic>p</italic>-values are negative log-transformed to give the “surprisal” of the observed over- or under-expression, and given a positive sign for over-expression and a negative sign for under-expression. <bold>c</bold> Surprisal scores of the <italic>ITGAL</italic> gene over a set of 3000 PBMCs profiled via Smart-seq 3 [<xref ref-type="bibr" rid="CR14">14</xref>]. Scores are positive where the gene is locally enriched, near zero where it represents noise, and negative where it is conspicuously absent. <bold>d</bold> Construction of surprisal components. Surprisal scores undergo singular value decomposition (SVD) over all genes to yield <italic>D</italic> loading vectors that capture informative axes in the data. We then linearly project the input transcript count matrix to these axes, producing a <italic>D</italic>-dimensional representation of each cell for downstream analysis</p></caption><graphic xlink:href="13059_2023_2998_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par6">To demonstrate the utility of our approach, we ran SCA on real and simulated data with rare and subtly defined cellular populations, and assessed our ability to recover these populations downstream. For comparison, we also tested PCA, ICA, scVI, diffusion maps, PHATE, and six rare cell type discovery tools: RaceID [<xref ref-type="bibr" rid="CR15">15</xref>], GiniClust [<xref ref-type="bibr" rid="CR16">16</xref>], CellSIUS [<xref ref-type="bibr" rid="CR17">17</xref>], FiRE [<xref ref-type="bibr" rid="CR18">18</xref>], GeoSketch [<xref ref-type="bibr" rid="CR19">19</xref>], and Hopper [<xref ref-type="bibr" rid="CR20">20</xref>]. We show that SCA enables detection of small populations, such as gamma-delta T cells and mucosal-associated invariant T (MAIT) cells, which are invisible to existing pipelines and yet critical to the study of tumor immunology [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. At the same time, SCA reductions better capture larger-scale differences between more common cell types, enabling multi-resolution analysis without the need for re-clustering [<xref ref-type="bibr" rid="CR21">21</xref>]. Beyond rare cell type recovery, we found that SCA more accurately recovers gene-gene relationships and restores dropouts when used as a basis for MAGIC imputation [<xref ref-type="bibr" rid="CR3">3</xref>].</p>
    <p id="Par7">SCA is highly efficient, requires no information aside from transcript counts, and generalizes to data comprised of discrete cell types or continuous trajectories. The output components have a clear linear relationship with the original transcripts, facilitating straightforward biological verification and interpretation. We believe that SCA’s information-theoretic approach is a mathematically justified and empirically useful approach to signal extraction in any high-dimensional data modality, biological or otherwise.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Overview of SCA</title>
      <p id="Par8">Like PCA and ICA, SCA projects the input data to a linear subspace spanned by a set of basis vectors, which we call <italic>surprisal components</italic>. SCA’s key conceptual advance is its novel approach for finding <italic>informative</italic> axes of variation, where an informative axis is one that separates cell types or captures biologically meaningful variation (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a). Single-cell experiments have shown that the presence or absence of a small number of genes can determine a cell’s phenotype [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR22">22</xref>, <xref ref-type="bibr" rid="CR23">23</xref>]. The key challenge, then, is to find and isolate these signals for each cell.</p>
      <p id="Par9">To this end, SCA first quantifies the importance of each transcript in each cell by converting transcript counts into <italic>surprisal scores</italic> (Fig. <xref rid="Fig1" ref-type="fig">1</xref>b; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 1). To determine the score of a given transcript in a given cell, we compare its expression distribution among the cell’s <italic>k</italic> nearest neighbors to its global expression (i.e., to the expected distribution of the transcript among a set of <italic>k</italic> cells randomly chosen from the entire dataset) for a user-specified neighborhood size <italic>k</italic>. A transcript whose local expression deviates strongly from its global expression is more likely to inform the cell’s location in relation to other cells, and therefore its identity. We quantify this deviation through a Wilcoxon rank-sum test, which produces a <italic>p</italic>-value representing the probability of the observed deviation in a random set of <italic>k cells</italic>. Following Shannon’s definition [<xref ref-type="bibr" rid="CR24">24</xref>], the <italic>surprisal</italic> or <italic>self-information</italic> of the observed deviation is then defined as the negative logarithm of its probability, i.e., as <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\log (p)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq1.gif"/></alternatives></inline-formula>. This is a positive number which measures how surprising the transcript’s local expression is, in units of nats when the logarithm is natural (changing the base scales the scores by a constant factor, which does not affect SCA’s output). To distinguish over- from under-expression, we flip the sign for under-expressed transcripts (Methods). The resulting scores are compiled into a <italic>surprisal matrix</italic> with the same dimensionality as the input data.</p>
      <p id="Par10">This strategy gives genes high positive scores where they are markers (genes that distinguish a cell type from the rest), scores near zero where they represent noise, and low negative scores where they are conspicuously absent (Fig. <xref rid="Fig1" ref-type="fig">1</xref>c). For example, consider a marker gene for a rare population. The gene is unexpressed over much of the data but highly expressed in cells belonging to the population. Thus, for these rare cells, the local expression is far higher than would be expected by chance, so the gene receives a high score for these cells. Likewise, a gene expressed everywhere <italic>except</italic> in a rare population receives low scores on members of the population. On the other hand, a noisy gene with no bearing on cellular identity receives low scores everywhere, since its distribution on <italic>k</italic>-neighborhoods resembles that of random sets of <italic>k</italic> cells.</p>
      <p id="Par11">We next sought to distill the signal captured by the surprisal matrix into a low-dimensional representation (Fig. <xref rid="Fig1" ref-type="fig">1</xref>d; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 2). As shown in Methods and in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 1, the right-eigenvectors of the surprisal matrix represent highly informative linear combinations of genes, which we call <italic>surprisal components</italic> (SCs). The first <italic>D</italic> right-eigenvectors, which we denote <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_1,...,v_D$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq2.gif"/></alternatives></inline-formula>, then span a linear subspace onto which we project the input matrix <italic>X</italic> of <italic>N</italic> cells by <italic>M</italic> genes. The resulting <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N\times D$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq3.gif"/></alternatives></inline-formula> matrix is the output of SCA. We emphasize that while the construction of the surprisal matrix and of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_1,...,v_D$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq4.gif"/></alternatives></inline-formula> is nonlinear, SCA’s output is a linear projection of its input to their span. This places SCA in the category of linear dimensionality reduction methods, together with PCA and ICA. This means that each of the output features is a weighted sum of genes, enabling straightforward interpretation. Furthermore, it enables many convenient workflows, including elbow plots (via the eigenvectors of the surprisal matrix, which we make readily available), and analysis of the gene loading vectors to interpret the components.</p>
      <p id="Par12">In summary, SCA accepts a transcript matrix and sets of <italic>k</italic>-nearest neighbors for each cell, finds transcripts that inform each cell’s locale, and distills this information into a smaller set of features. This process amplifies the locality signal of the input <italic>k</italic>-nearest neighbor data. For example, even if only 10% of a cell’s neighbors belong to the same population, this is still highly significant when the population comprises only 1% of the sample. SCA’s surprisal scores would reflect this, and the resulting components would better separate the rare cells, as we verify. The input neighborhoods can be specified arbitrarily, but by default SCA computes them via Euclidean distance on a PCA representation.</p>
      <p id="Par13">This signal-boosting step can be repeated: from an initial SCA reduction, we can compute <italic>k</italic>-neighborhoods using the Euclidean metric, use these neighborhoods to compute a surprisal matrix, and perform singular value decomposition to compute another SCA reduction. As we show for both real and Splatter-simulated data [<xref ref-type="bibr" rid="CR25">25</xref>], this often improves the representation of rare and subtly defined cell types (Figs. <xref rid="Fig2" ref-type="fig">2</xref>d and <xref rid="Fig3" ref-type="fig">3</xref>f). Intuitively, we begin with a weak notion of locality (provided by PCA) and continually refine it. In our experiments, we have found that performance usually stabilizes after 3–5 iterations and remains stable thereafter (Fig. <xref rid="Fig3" ref-type="fig">3</xref>f, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2). Note that regardless of the number of iterations, SCA’s output remains a linear projection of its input, since iteration simply refines the subspace onto which SCA projects.<fig id="Fig2"><label>Fig. 2</label><caption><p>Performance of SCA on data simulated with Splatter [<xref ref-type="bibr" rid="CR25">25</xref>]. <bold>a</bold> Ability of PCA, ICA, and SCA to recover rare cell populations of different sizes and with varying numbers of marker genes (out of 1000 cells and 1000 genes total). The population is considered “recovered” if the downstream Leiden clusters capture it with F1 score greater than 0.9 (Methods). SCA detects smaller populations with few marker genes. <bold>b</bold>, <bold>c</bold> Performance of FiRE [<xref ref-type="bibr" rid="CR18">18</xref>] and RaceID [<xref ref-type="bibr" rid="CR15">15</xref>] on a simulated dataset where 3% of the cells are defined by 10 marker genes (out of 1000 cells and 1000 genes total). For easy comparison with (e), FiRE scores and cluster memberships are plotted in the UMAP embedding downstream of the SCA representation. <bold>d</bold> Performance of SCA on the same dataset with a variety of neighborhood sizes. With a neighborhood size of 20 or fewer, SCA captures the rare population with very high F1 score after 2 or more iterations. The F1 score decreases when the neighborhood size approaches the size of the rare population, though it remains higher than PCA’s score of 0.153. <bold>e</bold> Top: UMAP plots downstream of various dimensionality reduction strategies, as well as the PHATE embedding [<xref ref-type="bibr" rid="CR9">9</xref>]. SCA alone separates the rare population. Bottom: Scatter plots of the first two components of each reduction. The leading surprisal component separates the rare population from the rest</p></caption><graphic xlink:href="13059_2023_2998_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par14">
        <fig id="Fig3">
          <label>Fig. 3</label>
          <caption>
            <p>SCA recovers subtly defined cellular populations from a set of 307 cytotoxic T cells profiled using Smart-seq 3 [<xref ref-type="bibr" rid="CR14">14</xref>]. <bold>a</bold> UMAP embedding computed from a 20-dimensional SCA representation using Euclidean nearest neighbors, with Leiden clusterings (left) and inferred cell types (right). Gamma-delta, MAIT, and T helper populations cleanly separate. <bold>b</bold> Dot plot of key marker gene groups in each SCA-derived Leiden cluster. Gamma-delta, MAIT, and T helper cells are clearly identifiable from their known marker genes. <bold>c</bold> Scatter plots of leading principal, independent, and surprisal components, colored by log-TPM (transcript per million) expression of key marker genes: the delta-receptor TRDV2 marks gamma-delta T cells [<xref ref-type="bibr" rid="CR11">11</xref>], and SLC4A10 marks MAIT cells [<xref ref-type="bibr" rid="CR26">26</xref>]. The leading surprisal components cleanly separate the gamma-delta and MAIT subpopulations, whereas the leading PCs and ICs blur these distinctions. <bold>d</bold> UMAP plots derived from 20-dimensional PCA, ICA, scVI, and SCA, and diffusion map embeddings of the data, as well as the PHATE embedding (Methods). CD8 T cells, CD4+ T helper cells, TRDV2+ gamma-delta T cells, and SLC4A10+ MAIT cells form distinct regions of the SCA-derived UMAP plot. <bold>e</bold> F1 scores for recovery of major T cell populations by various clustering schemes (Methods). For PCA, ICA, SCA, scVI, and diffusion maps, we assess Leiden clusters from the Euclidean 15-nearest neighbors graph with resolution 1. Leiden clusterings computed on the SCA representation consistently capture these cell types with highest accuracy. <bold>f</bold> Robustness analysis for cell type recovery with respect to the size of the neighborhoods used to compute SCA’s surprisal scores and the number of iterations. Performance improves with more iterations, and is stable across a wide range of neighborhood sizes</p>
          </caption>
          <graphic xlink:href="13059_2023_2998_Fig3_HTML" id="MO3"/>
        </fig>
      </p>
    </sec>
    <sec id="Sec4">
      <title>SCA recovers rare populations from noisy synthetic data</title>
      <p id="Par15">To test SCA’s power to uncover rare cell populations under a wide range of conditions, we used Splatter [<xref ref-type="bibr" rid="CR25">25</xref>] to generate synthetic datasets with rare populations of various size and with varying numbers of marker genes. Each simulated dataset contains 1000 cells and 1000 genes, with 2–200 rare cells marked by 2–50 differentially expressed genes. The remaining simulation parameters, such as library size distribution, outlier gene probability, and gene expression distribution, were estimated by fitting Splatter to a widely used dataset of 3000 peripheral blood monocytes profiled by 10X genomics [<xref ref-type="bibr" rid="CR27">27</xref>] (Methods).</p>
      <p id="Par16">To test the ability of SCA, ICA, and PCA to recover rare populations, for each combination of marker gene count and rare population size, we examined 10 replicate Splatter datasets generated with different random seeds. To assess population recovery, we computed Leiden clusterings from 20-dimensional embeddings using each method, chose the subset of Leiden clusters that best identified the rare population, and computed the F1 score (Methods). We consider the rare population recovered if this F1 score is 0.9 or greater.</p>
      <p id="Par17">We found that on average, SCA requires 38% fewer marker genes than PCA and 39% fewer marker genes than ICA to recover a rare population of a given size (Fig. <xref rid="Fig2" ref-type="fig">2</xref>a). Similarly, for a fixed number of marker genes, SCA can detect rare populations on average 29% smaller than those of PCA, and 28% smaller than those of ICA. For example, when the rare population contains 100 cells, SCA requires an average of 6.4 marker genes to detect it, whereas PCA and ICA require on average 10.8 and 10.6 marker genes, respectively. A <italic>t</italic>-test across the 10 replicates confirms that SCA consistently requires fewer marker genes than either PCA or ICA (<inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p&lt;0.001$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>0.001</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq5.gif"/></alternatives></inline-formula>). Thus, SCA enables better recovery both of rare and of subtly defined populations.</p>
      <p id="Par18">To allow more comprehensive benchmarking and visualization, we used the same Splatter parameters to generate a dataset where each cell has a 2.5% chance of belonging to a rare population with 10 marker genes. Due to sampling noise, the resulting dataset had 34 rare cells (3.4% of the total). We performed dimensionality reduction on this dataset using PCA, ICA, SCA, scVI, diffusion maps, and PHATE, as well as several tailored methods for rare cell type discovery: CellSIUS ([<xref ref-type="bibr" rid="CR17">17</xref>]), RaceID ([<xref ref-type="bibr" rid="CR15">15</xref>]), GiniClust3 ([<xref ref-type="bibr" rid="CR16">16</xref>]), and FiRE([<xref ref-type="bibr" rid="CR18">18</xref>]) (Fig. <xref rid="Fig2" ref-type="fig">2</xref>b, c, e). To obtain an F1 score from FiRE, which assigns cells a continuous rarity score, we consider all sets containing the top <italic>n</italic> rarest cells for <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1&lt;n&lt;1000$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mn>1</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>n</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1000</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq6.gif"/></alternatives></inline-formula> and report the highest F1 score of any such set (Methods). As GiniClust3 did not identify any of the marker genes as having significantly high Gini index, it combined all cells into a single cluster. Similarly, CellSIUS did not identify any genes with a bimodal distribution and did not generate a clustering.</p>
      <p id="Par19">SCA cleanly separates the two populations (F1 score 0.971) whereas the other methods do not (F1 score <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&lt;0.3$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq7.gif"/></alternatives></inline-formula>; Fig. <xref rid="Fig2" ref-type="fig">2</xref>e). In UMAP plots downstream of each reduction, only SCA shows a clear separation (Fig. <xref rid="Fig2" ref-type="fig">2</xref>e, top row). The first surprisal component (SC) distinguishes the rare population, whereas the leading principal, independent, or diffusion components do not (Fig. <xref rid="Fig2" ref-type="fig">2</xref>e, bottom row). Thus, SCA better extracts features that recover rare populations, enabling more sensitive and specific detection.</p>
      <p id="Par20">We found that SCA’s performance improves with more iterations and is stable for neighborhood sizes ranging from 2 to 20 (Fig. <xref rid="Fig2" ref-type="fig">2</xref>d). At larger neighborhood sizes, the F1 score is comparable to that achieved by other methods. This behavior is expected: since large neighborhoods cannot be contained in very small populations, SCA has limited ability to identify populations with similar or smaller size than the chosen neighborhood size. We therefore recommend choosing a neighborhood size smaller than the expected size of the rarest cellular population in the sample. Our simulations (Figs.  <xref rid="Fig2" ref-type="fig">2</xref>d and <xref rid="Fig3" ref-type="fig">3</xref>f) show strong cluster recovery even at neighborhood sizes smaller than 10, so this is not a substantial limitation. </p>
    </sec>
    <sec id="Sec5">
      <title>SCA reveals the landscape of cytotoxic T cell subtypes</title>
      <p id="Par21">Novel therapies increasingly leverage the immune system to fight disease, and the complexity and cellular diversity of immunological tissues make them ideal targets for scRNA-seq [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]. However, these tissues also challenge the technology in a variety of ways: they contain diverse cell types with rare but clinically important sub-types, and the expression of individual surface receptors has outsize effects on phenotype, leading to many subtly defined cell types [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]. We therefore examined whether SCA can find and distill these signals to reveal a richer landscape of immune cell types.</p>
      <p id="Par22">We obtained a collection of 307 cytotoxic T cells profiled using Smart-seq 3 (SS3) [<xref ref-type="bibr" rid="CR14">14</xref>]. After standard log transcript per million pre-processing with a pseudocount of 1 (Methods), we computed 20-dimensional reductions using PCA, ICA, SCA, scVI, and a diffusion map. We ran SCA with 1-5 iterations and the default neighborhood size of 15. We followed each reduction with standard downstream steps: 15-nearest neighbor graph construction using the Euclidean metric, UMAP embedding, and Leiden clustering. In addition, we computed a two-dimensional embedding using PHATE and a clustering using PHATE’s own clustering function based on internally computed similarities.</p>
      <p id="Par23">The PCA, ICA, and scVI reductions suggest that the data is homogeneous: the UMAP visualizations are globular, with no distinct clusters, and there is no obvious structure in the leading components (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c and d). On the other hand, SCA’s embedding reveals several clearly separated populations, summarized by 9 Leiden clusters (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a). Differential gene expression analysis shows that these correspond to known cell types (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b). For example, clusters 1 and 2 contain Gamma-delta T cells, as indicated by expression of the gamma- and delta-receptors <italic>TRGV9</italic> and <italic>TRDV2</italic> [<xref ref-type="bibr" rid="CR11">11</xref>]. Cluster 4 expresses <italic>SLC4A10</italic>, <italic>TRAV1-2</italic>, and <italic>LTK</italic>, strongly suggesting that this cluster contains MAIT cells [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR26">26</xref>]. CD4+ T helper cells group neatly in cluster 9, whereas high <italic>TIGIT</italic> levels in cluster 7 suggest an inhibitory phenotype [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]. Clusters 3 and 8 express standard cytotoxic effector genes like granzymes and perforins, whereas clusters 5 and 6 express CD8 but have low granzyme expression, suggesting recently activated CD8 T cells.</p>
      <p id="Par24">We further tested the ability of each method to detect key immunological marker genes (Fig. <xref rid="Fig3" ref-type="fig">3</xref>d). The UMAP plots derived from the PCA, ICA, scVI, PHATE, and diffusion map representations do not separate cells based on key immunological markers, whereas the SCA-derived UMAP plot does. To quantify this finding and see how it affects de novo population discovery, we assessed whether the Leiden clusters computed downstream of each representation were concordant with a marker-based classification. We defined CD8+ T cells as those expressing <italic>CD8A</italic>; CD4+ T cells as those expressing <italic>CD4</italic>; gamma-delta T cells as those expressing at least two of <italic>TRGV9</italic>, <italic>TRDV2</italic>, and <italic>TRDC</italic>; and MAIT cells as those expressing at least two of <italic>SLC4A10</italic>, <italic>TRAV1-2</italic>, and <italic>LTK</italic>. We computed F1 scores for the recovery of each of these types as described for synthetic data and in Methods. We did the same for clusterings output by CellSIUS, RaceID, GiniClust, GeoSketch, and Hopper. To produce clusterings using Hopper, we performed Leiden-clustering on a 50-point Hopper sketch of the data, then assigned each cell the cluster label of its nearest sub-sampled cell. For GeoSketch, we projected the data to 20-dimensional PCA coordinates computed from a 50-point sketch, and then computed Leiden clusters. SCA consistently outperforms the other methods in identifying these immunological classes (Fig. <xref rid="Fig3" ref-type="fig">3</xref>e). As with the synthetic data, we found that the leading surprisal components distinguish cell types, whereas leading independent and principal components do not (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c). Thus, SCA is better-suited to detect subtly defined immune cell types.</p>
      <p id="Par25">We next performed robustness analysis to see how SCA’s performance varies under different choices of neighborhood size <italic>k</italic> and different numbers of iterations (Fig. <xref rid="Fig3" ref-type="fig">3</xref>f). As with the synthetic datasets, running more iterations often improves the representation; notably, the CD4+ sub-type is not consistently clearly captured until at least the third iteration. After 3, 4, or 5 iterations, SCA performs well on all sub-types over a wide range of neighborhood sizes (from 5 to at least 90). Very small neighborhood sizes (<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&lt;5$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq8.gif"/></alternatives></inline-formula>) do not perform as well, likely due to a lack of statistical power. On the other hand, results on simulated data suggest limited ability to recover cellular populations with size similar to or smaller than the neighborhood size (Fig. <xref rid="Fig2" ref-type="fig">2</xref>d). For most datasets, this leads to a wide span of acceptable choices of neighborhood size. We also found that SCA’s performance is robust to the number of components in the reduction, performing well when as few as 5 and as many as 50 components are taken (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6c).</p>
      <p id="Par26">While single-cell analysis pipelines frequently subset to highly variable genes (HVG) to remove noisy or lowly expressed transcripts, marker genes for small populations intrinsically have low variance. To ensure that these were not removed in the above experiments, we did not perform highly variable gene (HVG) selection prior to dimensionality reduction. To test the effect of HVG subsetting, we repeated all of these experiments on the same dataset after filtering to the 1000 most variable genes and log transcript per million preprocessing (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 6; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6a,b). We found that SCA performs substantially better when all genes are kept, and outperforms the other tested methods regardless of whether gene filtering is performed.</p>
    </sec>
    <sec id="Sec6">
      <title>SCA distinguishes known cell types profiled by CITE-seq</title>
      <p id="Par27">To evaluate whether SCA’s reductions better detect known populations of cells in a larger-scale immmunological single-cell dataset, we obtained a CITE-seq dataset from Hao et al. [<xref ref-type="bibr" rid="CR6">6</xref>], in which hundreds of thousands of PBMCs from 8 human donors were subjected in parallel to transcriptomic profiling and to surface receptor profiling with a panel of 228 antibodies. The authors use both modalities, and input from human experts, to produce a cell type classification, which we take as a ground truth. We subsetted the data to T cells, yielding 73,000 cells across all donors, and assess performance in each donor individually. For each donor, we computed 50-dimensional representations using PCA, ICA, SCA, scVI, and a diffusion map. We also compute 2-dimensional PHATE embeddings, and clusterings using PHATE’s built-in function.</p>
      <p id="Par28">Compared to PCA and ICA, SCA consistently generates more structured UMAP plots downstream, with clearer visual separation between cell types. UMAP plots computed from PCA, ICA, and SCA are shown for patient 1 in Fig. <xref rid="Fig4" ref-type="fig">4</xref>a, and similar UMAP plots for the remaining patients and reductions are provided in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4. We observe similar improvements when plotting the first two components of each reduction against each other (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5). We hypothesized that this separation leads to more accurate clusterings downstream. To test this theory, we performed Leiden clustering [<xref ref-type="bibr" rid="CR31">31</xref>] on each representation with resolution 1.0 and computed the adjusted mutual information (AMI) between the Leiden clusters and the true cell labels [<xref ref-type="bibr" rid="CR32">32</xref>]. For further comparison, we also computed AMIs for Leiden clusterings computed from GeoSketch and Hopper reductions, and clusterings returned by GiniClust3 [<xref ref-type="bibr" rid="CR16">16</xref>], CellSIUS [<xref ref-type="bibr" rid="CR17">17</xref>], and RaceID [<xref ref-type="bibr" rid="CR15">15</xref>]. Across all patients, the SCA-derived Leiden clusterings achieved the highest AMI with the true cell labels (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b). Thus, SCA representations enable more accurate downstream recovery of cellular populations in a sample.<fig id="Fig4"><label>Fig. 4</label><caption><p>SCA outperforms many other methods, both general and problem-specific, at rare and subtly defined cell type discovery on a large PBMC dataset with ground-truth cell labels. <bold>a</bold> UMAP plots computed from PCA, ICA, and SCA reductions of T cell scRNA-seq data for patient 1 from the Hao et al. [<xref ref-type="bibr" rid="CR6">6</xref>] dataset. Cell type labels were determined by the original authors via parallel screening of 228 antibodies using CITE-seq. <bold>b</bold> Adjusted mutual information (AMI) of true cell labels with clusters output by each of the 11 methods tested in each patient (FiRE does not output a clustering but a rareness score and thus is not amenable to AMI analysis). For PCA, ICA, SCA, and scVI, we perform Leiden clustering with resolution 1.0 after reduction. SCA-based clusterings consistently have higher AMI with the true labels. <bold>c</bold> F1 scores for recovery of all T cell subtypes across all 8 patients of the dataset from Hao et al., from PCA, ICA, and SCA followed by Leiden clustering with resolution 1.0, and from nine other methods. For each clustering and cell type, the set of clusters best identifying that cell type was selected, and the F1 score reported</p></caption><graphic xlink:href="13059_2023_2998_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par29">To determine the accuracy with which SCA and other methods detect each of the known cellular populations, we used the F1 score measure (Methods). Across all donors, we found that SCA consistently ranks among the highest F1 scores, with some cell types recoverable only by SCA (Fig. <xref rid="Fig4" ref-type="fig">4</xref>c). For example, in patient 1, SCA recovers CD4 cytotoxic T lymphocytes (CD4 CTL), a subtly defined population distinguished from CD8 CTLs mainly by the presence of CD4, with F1 score 0.97. As notable exceptions, CellSIUS and GiniClust perform exceptionally well on the CD4 proliferating population, with CellSIUS also outperforming other methods on the CD8 proliferating and double-negative T populations. We suspect that the Leiden clusterings under-perform here due to theoretical limitations of community-detection algorithms to detect very small populations, as discussed in Kumpula et al. [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
    </sec>
    <sec id="Sec7">
      <title>SCA improves graph-based imputation</title>
      <p id="Par30">Dropouts and technical noise often obscure gene-gene relationships in single-cell data. Imputation aims to recover lost transcripts and restore these relationships. MAGIC [<xref ref-type="bibr" rid="CR3">3</xref>] tackles imputation by constructing a diffusion operator to share information across similar cells, achieving better recovery of gene-gene interactions than a variety of other methods, including simple <italic>k</italic>-NN imputation, low-rank approximation, and smoothing based on diffusion components [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR34">34</xref>, <xref ref-type="bibr" rid="CR35">35</xref>]. By default, MAGIC computes cellular similarity using the Euclidean distance in PCA space. Since SCA better separates biological cell types, we pursued the intuition that using Euclidean distance in an SCA reduction would allow MAGIC to build a better diffusion operator, yielding more accurate imputation. We therefore formulated <italic>SCA-MAGIC</italic>, which performs diffusion over an SCA embedding instead of a PCA embedding (Methods).</p>
      <p id="Par31">To test the ability of each method to recover dropouts from the 1000-cell Splatter synthetic dataset analyzed in Fig. <xref rid="Fig2" ref-type="fig">2</xref>b–e, we performed imputation using MAGIC and SCA-MAGIC and measured the Pearson correlation between the imputed values of the marker genes and an artificial “ground-truth” marker gene expressing 1 transcript on each rare cell and 0 transcripts elsewhere (due to normalization, the number of transcripts expressed in the rare population does not affect the Pearson correlation). We also tested SAVER [<xref ref-type="bibr" rid="CR36">36</xref>], another imputation approach that uses regression instead of diffusion. As shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>a, SCA-MAGIC achieves the highest correlation between imputed marker genes and the ground-truth marker gene (correlation <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 0.7$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>0.7</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq9.gif"/></alternatives></inline-formula>).<fig id="Fig5"><label>Fig. 5</label><caption><p>Imputation performance using SAVER, MAGIC and our SCA-MAGIC. <bold>a</bold> Recovery of marker genes on the Splatter dataset analyzed in Fig. <xref rid="Fig2" ref-type="fig">2</xref>b–e. For each method, we measure the average correlation between the marker genes after imputation and an indicator vector for the rare cells. MAGIC achieves significantly higher correlation using SCA as a base embedding (SCA-MAGIC). <bold>b</bold> Visualizing gene-gene relationships in cytotoxic T cell data after imputation using SAVER, MAGIC or our SCA-MAGIC. SCA-MAGIC better recovers the inverse relationships between CD8 and CD4 and between granzyme B and granzyme K, with gamma-delta T cells expressing neither CD8 nor CD4 and lower granzyme expression for T helper cells. <bold>c</bold> Scatter plot showing dropout recovery in the cytotoxic T cell dataset at various dropout rates. A fixed percentage of nonzero transcript measurements were set to zero, and the mean imputed values of these removed transcripts were assessed for each gene. While MAGIC and SCA-MAGIC perform similarly on most genes, SCA-MAGIC consistently performs better on a subset of them, measured by dropout rate. <bold>d</bold> A closer look at the genes where SCA-MAGIC significantly outperforms MAGIC in recovering dropouts at the 90% dropout rate. They include many key marker genes such as <italic>CD8A</italic>, <italic>CD8B</italic>, <italic>CD4</italic>, emphTIGIT, and <italic>TRDV2</italic></p></caption><graphic xlink:href="13059_2023_2998_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par32">To assess recovery of gene-gene relationships, we ran MAGIC and SCA-MAGIC on the cytotoxic T cells from [<xref ref-type="bibr" rid="CR14">14</xref>]. We find that SCA-MAGIC best recovers the complementary relationship between CD8 expression and CD4 expression among alpha-beta T cells, with T helper cells having high CD4 levels and gamma-delta T cells expressing neither surface receptor, consistent with the literature [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR37">37</xref>] (Fig. <xref rid="Fig5" ref-type="fig">5</xref>b, top). Both MAGIC and SCA-MAGIC report an inverse relationship between the expression levels of granzyme B and granzyme K. However, SCA-based MAGIC assigns the T helper cells lower granzyme B levels than the other populations. This finding is concordant with flow-cytometry results, which indicate that CD8+ T cells are the primary secretors of granzyme B [<xref ref-type="bibr" rid="CR38">38</xref>]. SAVER-imputed data does not show smooth correlations and resembles the raw data.</p>
      <p id="Par33">To compare dropout recovery of MAGIC and SCA-MAGIC on real data, we created low-coverage versions of the cytotoxic T cell dataset by setting 10%, 30%, 50%, or 90% of the nonzero transcript counts to zero and examined the values of these dropped-out transcripts after imputation. Higher imputed values indicate better transcript recovery. For most genes, SCA-MAGIC and MAGIC perform similarly (Fig. <xref rid="Fig5" ref-type="fig">5</xref>c). However, SCA-MAGIC outperforms MAGIC on a small set of key marker genes, including <italic>CD8A</italic>, <italic>CD8B</italic>, <italic>CD4</italic>, <italic>TIGIT</italic>, <italic>KLRC1</italic>, and the gamma-delta marker genes <italic>TRDV2</italic> and <italic>TRGV9</italic> (Fig. <xref rid="Fig5" ref-type="fig">5</xref>d). Since these genes define important T cell subclasses, this improvement is consequential.</p>
      <p id="Par34">The creation of false positive signals is a concern in imputation [<xref ref-type="bibr" rid="CR39">39</xref>]. We found that SCA-MAGIC performed at least as well as MAGIC at avoiding creation of false positive gene counts and artificial marker genes (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S7).</p>
    </sec>
    <sec id="Sec8">
      <title>SCA scales to large datasets</title>
      <p id="Par35">As improving technologies generate ever larger datasets, the computational tools used to analyze these datasets must scale accordingly. SCA meets this need with fast runtimes and modest memory overhead. Asymptotically, SCA’s runtime and memory overhead are both linear in the size of the input dataset (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 2; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1). To test this empirically, we measured runtime and peak memory usage for one iteration of SCA on data of varying sizes (Fig. S<xref rid="MOESM1" ref-type="media">1</xref>). We produced test datasets by taking random subsets of patient 1’s T cell data from Hao et al. [<xref ref-type="bibr" rid="CR6">6</xref>] with varying numbers of cells and genes. For all tests, we used a neighborhood size of 15. As expected, we find SCA’s runtime and memory performance <italic>scale linearly</italic> with increasing numbers of cells. On a subset with 9000 cells and over 20,000 genes, SCA takes 3 min and 15 s to run with a peak allocation of 561 MB. This is only slightly slower than PCA, which finishes in 2 min and 10 s and allocates 179 MB (ICA is somewhat more computationally demanding, requiring 266 s and allocating over 4GB). SCA’s linear scaling makes it tractable even on the very largest single-cell datasets; for example, on a mouse brain dataset from Saunders et al. with 939,489 cells and 20,658 genes [<xref ref-type="bibr" rid="CR4">4</xref>], SCA runs in 5.5 h and allocates a maximum of about 29 GB, well within the range of most modern day computers. Sub-sampling techniques that preserve rare cell types, such as Hopper [<xref ref-type="bibr" rid="CR20">20</xref>] and Geosketch [<xref ref-type="bibr" rid="CR19">19</xref>], may be combined with SCA to enable fine-grained analyses of these massive datasets even on a laptop. We can reduce the memory overhead further by processing the data in chunks containing a user-specified number of genes (Methods). Chunk size is implemented as a parameter in the core function of SCA’s Python package.</p>
    </sec>
    <sec id="Sec9">
      <title>SCA performs well in the presence of batch effects</title>
      <p id="Par36">Single-cell experiments often include data from different samples, and sometimes different donors, introducing unwanted technical variation known as batch effects. While SCA is not designed to remove batch effects, we aimed to verify that its signal-boosting procedure does not emphasize them at the expense of true biological variation. To this end, we obtained scRNA-seq data comprising approximately 70,000 CD34+ cells from 3 human donors [<xref ref-type="bibr" rid="CR40">40</xref>], combined the data without performing batch correction, computed PCA and SCA reductions with 20 components each, and assessed the impact of donor on each reduction. UMAP plots downstream of SCA showed significantly more overlap between donors than those downstream of PCA, and performing more iterations of SCA increased the degree of overlap between donors while keeping biological cell type separate (Fig. <xref rid="Fig6" ref-type="fig">6</xref>a). To quantify this finding, we used the silhouette score [<xref ref-type="bibr" rid="CR41">41</xref>] to measure separation between donors and between cell types. The donor silhouette score is lower when using SCA, and decreases with more iterations, indicating better batch integration (Fig. <xref rid="Fig6" ref-type="fig">6</xref>b). By contrast, the cell type silhouette score was higher for SCA than for PCA, consistent with our other results. Thus, SCA’s reductions emphasize cell type-related biological differences over technical batch effects.<fig id="Fig6"><label>Fig. 6</label><caption><p><bold>a</bold> UMAP plots downstream of PCA and SCA on CD34+ immune cell data with 7 cell types and 3 donors. With further iterations, batches appear more integrated (top) whereas cell types remain separate (bottom). <bold>b</bold> Silhouette scores of the donor and cell type groupings, using Euclidean distance downstream of PCA or SCA. The donor silhouette score decreases with further iterations of SCA (left), whereas the cell type silhouette score remains above that of PCA (right)</p></caption><graphic xlink:href="13059_2023_2998_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Discussion</title>
    <p id="Par37">SCA offers an information-theoretic approach to measuring and extracting salient transcriptional signals in single-cell data, enabling downstream analyses at unprecedented resolution. By iteratively boosting the locality-specific signal of individual transcripts, SCA uncovers clinically relevant immunological populations that are invisible to existing approaches.</p>
    <p id="Par38">A variety of approaches have arisen that are specifically tailored to the problem of rare cell type recovery. However, we find that these methods have limiting assumptions [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR18">18</xref>] or rely on potentially inaccurate or ill-defined clustering procedures [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR17">17</xref>] that limit performance. GiniClust [<xref ref-type="bibr" rid="CR16">16</xref>] assumes that genes with high Gini index are the most important; yet, we demonstrated that this is not always the case (e.g., the marker genes in the synthetic dataset were not marked as having high-Gini index by the algorithm). RaceID and CellSIUS both compute initial clusterings which are then individually refined. However, an accurate initial clustering may be difficult to obtain when cell types of interest are rare or subtly defined, and cluster-based approaches are unsuitable when cells form more continuous transcriptional structures, such as developmental trajectories, which do not neatly partition [<xref ref-type="bibr" rid="CR42">42</xref>]. On the other hand, FiRE [<xref ref-type="bibr" rid="CR18">18</xref>] sidesteps the limitations of clustering by assigning each cell a rarity score according to its degree of isolation, but the notion of isolation in turn relies on a meaningful cell-to-cell distance metric, which is not readily derived. Hopper [<xref ref-type="bibr" rid="CR20">20</xref>] reduces the data in the hopes of increasing the proportion of rare cells, but its approach requires a reliable distance metric and requires discarding observations. For the latter two methods, one might improve performance by using Euclidean distance in an SCA representation as a distance metric. Our work suggests that the right dimensionality reduction can enable recovery of even rare and subtly defined populations.</p>
    <p id="Par39">SCA’s surprisal scores are similar in principle to the inverse document frequency (IDF) transform, a normalization approach widely used in text processing and in some single-cell applications, whereby each feature (gene) is weighted by the logarithm of its inverse frequency [<xref ref-type="bibr" rid="CR43">43</xref>]. Like SCA, IDF gives rarely seen features more weight; however, it does not consider the locality-specific context of each feature measurement, so it lacks the statistical power to detect locally enriched signals. By incorporating counts from local neighborhoods of each cell, SCA allows genes to have variable scores across the dataset, achieving high-magnitude scores where they are discriminative and near-zero scores where they are noise (Fig. <xref rid="Fig1" ref-type="fig">1</xref>c). Our approach is designed to reflect true biology, where genes may be expressed sporadically across the entire dataset but mark informative distinctions only within a small subpopulation.</p>
    <p id="Par40">SCA is also conceptually similar to surprisal analysis [<xref ref-type="bibr" rid="CR44">44</xref>], which compares observed data to a pre-computed balance state to identify meaningful deviations. Originally developed for thermodynamics, these methods have recently found use in <italic>bulk</italic> transcriptomic analysis of biological systems in flux, such as cancer cells undergoing epithelial-to-mesenchymal transition and carcinogenesis [<xref ref-type="bibr" rid="CR45">45</xref>–<xref ref-type="bibr" rid="CR48">48</xref>]. For example, Gross et al. [<xref ref-type="bibr" rid="CR45">45</xref>] perform singular value decomposition on a surprisal matrix derived from time series micro-arrays to identify bulk transcriptomic signatures that predict eventual malignancy. In their work, the surprisal of a transcript is defined by the negative logarithmic fold change of the transcript from its value in the balance state. We attempted to generalize this idea to single-cell data by treating each cell as a separate time point, and computing surprisals as negative log-fold changes between observed transcript counts and transcript expression means across all cells. However, we show this extended notion of surprisal is under-powered and inaccurate for single-cell data (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 5; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6), because individual transcript counts are themselves noisy. For example, on the cytotoxic T cell dataset, this approach fails to separate CD8 from CD4 T cells (Fig. S<xref rid="MOESM1" ref-type="media">6</xref>). SCA’s novel approach of testing expression in <italic>neighborhoods</italic> of cells instead of individual cells lends statistical power and limits the impact of noise and dropouts, especially in combination with the robust Wilcoxon test.</p>
    <p id="Par41">Data visualization, which features prominently in many single-cell pipelines [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR49">49</xref>], differs from dimensionality reduction, on which we focus. Whereas visualization aims to produce a two-dimensional rendering of the data, dimensionality reduction produces a smaller, but still many-dimensional representation which is then analyzed further downstream. Thus, data visualization tools complement dimensionality reduction rather than substitute for it. Indeed, visualizations are often built on dimensionality-reduced data; for example, UMAP plots in existing literature are often computed on PCA or ICA reductions [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. SCA complements existing visualization tools to facilitate exploratory analysis (Figs. <xref rid="Fig4" ref-type="fig">4</xref>a, <xref rid="Fig3" ref-type="fig">3</xref>a, and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4).</p>
    <p id="Par42">SCA also combines well with <italic>sketching</italic> techniques, such as Geosketch [<xref ref-type="bibr" rid="CR19">19</xref>] and Hopper [<xref ref-type="bibr" rid="CR20">20</xref>], which generate subsamples of cells that retain transcriptional diversity. In turn, these sketching techniques rely on a low-dimensional representation of cells, which SCA may provide. As motivation for the latter, we have shown that SCA is better at identifying rare cell types than these sketching techniques.</p>
    <p id="Par43">Although the process that generates the surprisal components is nonlinear, requiring nearest-neighbor graphs and Wilcoxon score computation, SCA’s output is a linear projection of its input. This places SCA firmly in the linear category, together with PCA and ICA; indeed, for fixed dimension <italic>D</italic>, the coordinate systems defined by SCA and by these methods are related by rotation in the original high-dimensional space. Intuitively, SCA changes the “perspective” from which the data is viewed. It is remarkable, then, that SCA’s reductions look so different in downstream analyses from those of PCA and ICA (e.g., Fig. <xref rid="Fig3" ref-type="fig">3</xref>a). This observation is possibly because high-dimensional space offers a far wider variety of perspectives than the three-dimensional space we often think in, giving linear methods more richness than they are usually credited for.</p>
  </sec>
  <sec id="Sec11">
    <title>Conclusion</title>
    <p id="Par44">Dimensionality reduction addresses the underlying goal of nearly all single-cell analytic pipelines―to determine which cells are phenotypically similar to one another or, in mathematical terms, to derive a biologically meaningful metric between cells. If we could meet this goal perfectly, we could immediately obtain perfect clusterings of single-cell data (each cluster would be a connected component of the <italic>k</italic>-nearest neighbor graph), perform perfect batch correction (by integrating cells based on phenotypic similarity), and substantially improve trajectory inference (by connecting similar cells along a continuous path). Dimensionality reduction represents single-cell data in a lower-dimensional Euclidean space, which inherits natural metrics (e.g., the standard Euclidean distance). Using information theory, SCA provides an embedding where Euclidean distance better captures biological similarity, causing cells with similar phenotypes to cluster together.</p>
  </sec>
  <sec id="Sec12">
    <title>Methods</title>
    <sec id="Sec13">
      <title>Details of the SCA Algorithm</title>
      <sec id="Sec14">
        <title>Surprisal matrix computation (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 1).</title>
        <p id="Par45">Given the input data <italic>X</italic> with <italic>N</italic> cells and <italic>M</italic> genes, a target dimensionality <italic>D</italic>, and a neighborhood size <italic>k</italic>, we first compute a <italic>D</italic>-dimensional PCA reduction of <italic>X</italic>. Using Euclidean distance in this PCA space, we compute for each cell <italic>c</italic> a neighborhood <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_k(c)$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq10.gif"/></alternatives></inline-formula> containing the <italic>k</italic> nearest cells. Alternatively, the user may specify neighborhoods manually as lists of indices.</p>
        <p id="Par46">For each gene <italic>g</italic> and cell <italic>c</italic>, we then assess the significance of <italic>g</italic>’s expression in <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_k(c)$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq11.gif"/></alternatives></inline-formula> as compared to its global expression. Under the null hypothesis, where <italic>g</italic> is randomly expressed, the local distribution <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_k(c)$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq12.gif"/></alternatives></inline-formula> should be similar to the global expression. Using a Wilcoxon rank-sum test, we obtain a two-sided <italic>p</italic>-value <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{c,g}$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq13.gif"/></alternatives></inline-formula> representing the probability of the observed difference under this null hypothesis. We also offer two alternative <italic>p</italic>-values based on different models: a <italic>t</italic>-test, and a binomial test using only the binarized counts. We strongly recommend the Wilcoxon model for its flexibility to a wide range of data distributions, and robustness to different pre-processing protocols.</p>
        <p id="Par47">Small <italic>p</italic>-values indicate very unlikely events under the null hypothesis, leading to high surprisal. However, since tens of thousands of genes are often measured for each cell, we would expect <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{c,g}$$\end{document}</tex-math><mml:math id="M28"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq14.gif"/></alternatives></inline-formula> to be very low for some cell-gene combinations even in the absence of true biological signal. We therefore adjust for multiple-testing within each cell using a family-wise error rate correction. If we assume that genes are uncorrelated, this correction takes the form<disp-formula id="Equ1"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \tilde{p}_{c,g}=1-(1-p_{c,g})^{M} \end{aligned}$$\end{document}</tex-math><mml:math id="M30" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <italic>M</italic> is the number of genes. The corrected value <inline-formula id="IEq15"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{p}_{c,g}$$\end{document}</tex-math><mml:math id="M32"><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq15.gif"/></alternatives></inline-formula> represents the probability that <italic>any</italic> gene has the observed deviation from the null distribution in <italic>c</italic>’s neighborhood. However, in real single-cell data, genes are often highly correlated, so the effective number of independent features is far fewer than <italic>M</italic>. As detailed in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 4 and Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 3, we can identify a reasonable exponent <inline-formula id="IEq16"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M34"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq16.gif"/></alternatives></inline-formula> by sampling many random sets of <italic>k</italic> cells from <italic>X</italic>, computing <italic>p</italic>-values from these random neighborhoods, and observing the distribution of these <italic>p</italic>-values. This provides a background model for contextualizing the <inline-formula id="IEq17"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{c,g}$$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq17.gif"/></alternatives></inline-formula> values computed from the actual locally derived <italic>k</italic>-nearest neighborhoods and leads to the correction<disp-formula id="Equ2"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \tilde{p}_{c,g}=1-(1-p_{c,g})^{N_t} \end{aligned}$$\end{document}</tex-math><mml:math id="M38" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq18"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M40"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq18.gif"/></alternatives></inline-formula> is often far less than <italic>M</italic>. When <inline-formula id="IEq19"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq19.gif"/></alternatives></inline-formula> is computed as in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 4, SCA does not produce erroneous clusters on negative control datasets which lack intrinsic structure, and randomly generated neighborhoods yield scores clustered around zero (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 3; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3). SCA computes <inline-formula id="IEq20"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M44"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq20.gif"/></alternatives></inline-formula> in this way by default; however, users may also manually define <inline-formula id="IEq21"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq21.gif"/></alternatives></inline-formula> to adjust the balance between sensitivity and specificity.</p>
        <p id="Par48">We next convert the corrected <italic>p</italic>-values <inline-formula id="IEq22"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{p}_{c,g}$$\end{document}</tex-math><mml:math id="M48"><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq22.gif"/></alternatives></inline-formula> into surprisal scores <italic>I</italic>(<italic>c</italic>, <italic>g</italic>). Shannon [<xref ref-type="bibr" rid="CR24">24</xref>] defines the <italic>surprisal</italic> or <italic>self-information</italic> of an event with probability <italic>p</italic> as <inline-formula id="IEq23"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\log (p)$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq23.gif"/></alternatives></inline-formula>. Intuitively, less probable events are more informative when they occur. For a given cell <italic>c</italic> and gene <italic>g</italic>, <inline-formula id="IEq24"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{p_{c,g}}$$\end{document}</tex-math><mml:math id="M52"><mml:mover accent="true"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq24.gif"/></alternatives></inline-formula> is the probability of the event that that one of <italic>c</italic>’s genes has a local distribution at least as extreme as the observed distribution of <italic>g</italic>, under the null hypothesis of random gene expression. Thus, <inline-formula id="IEq25"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\log (\tilde{p_{c,g}})$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq25.gif"/></alternatives></inline-formula> is the surprisal of this event and defines the magnitude of <italic>I</italic>(<italic>c</italic>, <italic>g</italic>).</p>
        <p id="Par49">To distinguish over-expression from under-expression, we give <italic>I</italic>(<italic>c</italic>, <italic>g</italic>) a positive sign if <italic>g</italic> is over-expressed in <italic>c</italic>’s neighborhood and a negative sign if it is under-expressed. Under the Wilcoxon model, over- or under-expression is determined by the sum of the ranks of <italic>g</italic>’s values in the <italic>k</italic>-neighborhood of <italic>c</italic> among all values <italic>g</italic> takes, which we denote <inline-formula id="IEq26"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {ranksum}(g, N_k(c))$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:mtext>ranksum</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq26.gif"/></alternatives></inline-formula>. Under the null hypothesis, this quantity follows a normal distribution with mean <inline-formula id="IEq27"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{k(N-k)}{2}$$\end{document}</tex-math><mml:math id="M58"><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq27.gif"/></alternatives></inline-formula>. Thus, we obtain<disp-formula id="Equ3"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(c,g)=-\text {sgn}\left( \text {ranksum}(g, N_k(c))-\frac{k(N-k)}{2}\right) \log (\tilde{p}_{c,g}). \end{aligned}$$\end{document}</tex-math><mml:math id="M60" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mtext>sgn</mml:mtext><mml:mfenced close=")" open="("><mml:mtext>ranksum</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mfenced><mml:mo>log</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
      <sec id="Sec15">
        <title>Computing surprisal components</title>
        <p id="Par50">From the surprisal scores <italic>I</italic>(<italic>c</italic>, <italic>g</italic>), SCA next seeks to generate an informative linear combination of genes. For a given combination defined by<disp-formula id="Equ4"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \tilde{g} = \alpha _1g_1+\alpha _2g_2+...\alpha _Mg_M \end{aligned}$$\end{document}</tex-math><mml:math id="M62" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>we say that <inline-formula id="IEq28"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M64"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq28.gif"/></alternatives></inline-formula> has <italic>loadings</italic>
<inline-formula id="IEq29"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,...,\alpha _n$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq29.gif"/></alternatives></inline-formula>. For a fixed cell <italic>c</italic>, we formulate the surprisal score of <inline-formula id="IEq30"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M68"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq30.gif"/></alternatives></inline-formula> as<disp-formula id="Equ5"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(c, \tilde{g}) = \alpha _1I(c, g_1)+\alpha _2I(c,g_2)+...+\alpha _MI(c,g_M) \end{aligned}$$\end{document}</tex-math><mml:math id="M70" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>We then define the overall overall surprisal score of <inline-formula id="IEq31"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M72"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq31.gif"/></alternatives></inline-formula> by taking the norm over all cells:<disp-formula id="Equ6"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(\tilde{g}) = ||\langle I(c_1,\tilde{g}), I(c_2, \tilde{g}),...,I(c_N, \tilde{g})\rangle || \end{aligned}$$\end{document}</tex-math><mml:math id="M74" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">⟨</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">⟩</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>or, in matrix notation,<disp-formula id="Equ7"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(\tilde{g}) = ||{\textbf {S}}\mathbf {\alpha }^T || \end{aligned}$$\end{document}</tex-math><mml:math id="M76" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="bold">S</mml:mi></mml:mrow><mml:msup><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq32"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M78"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq32.gif"/></alternatives></inline-formula> denotes the surprisal matrix and <inline-formula id="IEq33"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {\alpha }=\langle \alpha _1,...,\alpha _M\rangle$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">⟨</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">⟩</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq33.gif"/></alternatives></inline-formula>.</p>
        <p id="Par51">We now seek the metagene <inline-formula id="IEq34"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M82"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq34.gif"/></alternatives></inline-formula>, defined by the loadings <inline-formula id="IEq35"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,...,\alpha _N$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq35.gif"/></alternatives></inline-formula>, that maximizes <inline-formula id="IEq36"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I(\tilde{g})$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq36.gif"/></alternatives></inline-formula>. Since we can achieve arbitrarily large values of <inline-formula id="IEq37"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I(\tilde{g})$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq37.gif"/></alternatives></inline-formula> by scaling the coefficients, we constrain the loading coefficients to have norm 1, that is:<disp-formula id="Equ8"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} ||\langle \alpha _1,...,\alpha _M\rangle || = 1. \end{aligned}$$\end{document}</tex-math><mml:math id="M90" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">⟨</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">⟩</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par52">It is a standard linear algebra result that this maximum is realized by the leading right-eigenvector of <inline-formula id="IEq38"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{S}$$\end{document}</tex-math><mml:math id="M92"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq38.gif"/></alternatives></inline-formula> (proof in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 1 and [<xref ref-type="bibr" rid="CR51">51</xref>]). Thus, the first surprisal component loading vector is simply the first right eigenvector of <inline-formula id="IEq39"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M94"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq39.gif"/></alternatives></inline-formula>, which we denote <inline-formula id="IEq40"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {v_1}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi mathvariant="bold">v</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq40.gif"/></alternatives></inline-formula>. To obtain additional surprisal components, we repeat the optimization with the constraint<disp-formula id="Equ9"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathbf {\alpha }\perp \mathbf {v_1}. \end{aligned}$$\end{document}</tex-math><mml:math id="M98" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>α</mml:mi><mml:mo>⊥</mml:mo><mml:msub><mml:mi mathvariant="bold">v</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>It is straightforward to see (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 1) that this yields the second principal component loading vector <inline-formula id="IEq41"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {v_2}$$\end{document}</tex-math><mml:math id="M100"><mml:msub><mml:mi mathvariant="bold">v</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq41.gif"/></alternatives></inline-formula> of <inline-formula id="IEq42"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M102"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq42.gif"/></alternatives></inline-formula>. Continuing, we see that the loading vectors for surprisal components are simply the right eigenvectors of <inline-formula id="IEq43"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M104"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq43.gif"/></alternatives></inline-formula>.</p>
        <p id="Par53">SCA next computes the values of the first <italic>D</italic> surprisal components over the <italic>input</italic> data (not the surprisal scores). That is,<disp-formula id="Equ10"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\textbf {SC}}_i({\textbf {X}}) = {\textbf {X}}\textbf{v}_i^T. \end{aligned}$$\end{document}</tex-math><mml:math id="M106" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold">SC</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:msubsup><mml:mi mathvariant="bold">v</mml:mi><mml:mi>i</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula>Note that the surprisal components are linear functions of the input data, despite the nonlinear construction of <inline-formula id="IEq44"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{S}$$\end{document}</tex-math><mml:math id="M108"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq44.gif"/></alternatives></inline-formula>. Although the loadings are computed on <inline-formula id="IEq45"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{S}$$\end{document}</tex-math><mml:math id="M110"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq45.gif"/></alternatives></inline-formula>, the values of the components are computed by applying these loadings to <inline-formula id="IEq46"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {X}}$$\end{document}</tex-math><mml:math id="M112"><mml:mi mathvariant="bold">X</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq46.gif"/></alternatives></inline-formula>.</p>
        <p id="Par54">If desired, we can now use the resulting <italic>D</italic>-dimensional representation of <italic>X</italic> to compute a Euclidean <italic>k</italic>-nearest neighbor graph, compute a new surprisal matrix from these neighborhoods, and perform SVD on this new matrix to produce another <italic>D</italic>-dimensional representation of <italic>X</italic>. This can be repeated arbitrarily many times, and often improves performance up to 3–4 iterations (Fig. <xref rid="Fig3" ref-type="fig">3</xref>f, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2).</p>
        <p id="Par55">Formal pseudocode for this algorithm is provided in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 2.</p>
      </sec>
      <sec id="Sec16">
        <title>Time and memory optimizations</title>
        <p id="Par56">Computing the surprisal scores <italic>I</italic>(<italic>c</italic>, <italic>g</italic>) for all cells <italic>c</italic> and genes <italic>g</italic> requires <italic>NM</italic> Wilcoxon rank-sum tests. However, we can rapidly produce all of the rank-sum statistics with minimal memory overhead as follows: <list list-type="order"><list-item><p id="Par57">Divide the genes into chunks of a user-specified size <italic>C</italic>, depending on memory constraints (default 1000). Let <inline-formula id="IEq47"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1=\{g_1,...,g_C\}, G2=\{g_{C+1},....,g_{2C}\}$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mn>2</mml:mn><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq47.gif"/></alternatives></inline-formula>, and so on.</p></list-item><list-item><p id="Par58">For each gene chunk <inline-formula id="IEq48"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_i$$\end{document}</tex-math><mml:math id="M116"><mml:msub><mml:mi>G</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq48.gif"/></alternatives></inline-formula>: <list list-type="alpha-lower"><list-item><p id="Par59">Subset <italic>X</italic> to genes in <inline-formula id="IEq49"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_i$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>G</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq49.gif"/></alternatives></inline-formula>, obtaining a reduced dataset <inline-formula id="IEq50"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq50.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par60">rank each column of <inline-formula id="IEq51"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M122"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq51.gif"/></alternatives></inline-formula> to obtain a rank matrix <inline-formula id="IEq52"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M124"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq52.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par61">Multiply the neighborhood adjacency matrix <italic>A</italic> with <inline-formula id="IEq53"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M126"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq53.gif"/></alternatives></inline-formula>, yielding a rank-sum matrix over neighborhoods, denoted <inline-formula id="IEq54"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M128"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq54.gif"/></alternatives></inline-formula>, overwriting <inline-formula id="IEq55"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq55.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par62">Convert these rank-sums into <italic>p</italic>-values under to the null model, overwriting <inline-formula id="IEq56"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq56.gif"/></alternatives></inline-formula> with a <italic>p</italic>-value matrix <inline-formula id="IEq57"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_i$$\end{document}</tex-math><mml:math id="M134"><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq57.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par63">Convert these <italic>p</italic>-values into surprisal scores, as described above and in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 1, overwriting <inline-formula id="IEq58"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_i$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq58.gif"/></alternatives></inline-formula> with surprisal scores <inline-formula id="IEq59"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M138"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq59.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par64">Sparsify <inline-formula id="IEq60"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M140"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq60.gif"/></alternatives></inline-formula> and store it. (<inline-formula id="IEq61"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq61.gif"/></alternatives></inline-formula> is frequently quite sparse).</p></list-item></list></p></list-item><list-item><p id="Par65">Concatenate the matrices <inline-formula id="IEq62"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M144"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq62.gif"/></alternatives></inline-formula> horizontally to obtain the surprisal matrix <italic>S</italic>.</p></list-item></list>Using this approach, we only need to compute ranks for each gene once, and we avoid storing dense matrices of size larger than <inline-formula id="IEq63"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N\times C$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq63.gif"/></alternatives></inline-formula>. Since <italic>A</italic> has at most <italic>k</italic> nonzero elements per row, the sparse matrix multiplication in step 2c requires only <italic>O</italic>(<italic>kNC</italic>) time. The remaining steps are easily accomplished with vectorized functions from scipy [<xref ref-type="bibr" rid="CR52">52</xref>] and numpy [<xref ref-type="bibr" rid="CR53">53</xref>].</p>
        <p id="Par66">With these improvements, SCA is nearly as fast as ICA and PCA, and uses significantly less memory than ICA (Additional File <xref rid="MOESM1" ref-type="media">1</xref>; Fig. S1). We include more in-depth time and memory benchmarks in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 2.</p>
      </sec>
      <sec id="Sec17">
        <title>Generating F1 scores from clusterings</title>
        <p id="Par67">To assess the accuracy with which a set of <italic>T</italic> clusters <inline-formula id="IEq64"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c_1,...,c_T$$\end{document}</tex-math><mml:math id="M148"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>T</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq64.gif"/></alternatives></inline-formula> recovers a known population <italic>P</italic>, we used the following procedure: <list list-type="order"><list-item><p id="Par68">Rank all clusters by the degree of overlap with <italic>P</italic>, i.e., by <inline-formula id="IEq65"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{|c_i\cap P|}{|c_i|}$$\end{document}</tex-math><mml:math id="M150"><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>∩</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq65.gif"/></alternatives></inline-formula>. Ties may be handled arbitrarily. Assume without loss of generality that the indexing <inline-formula id="IEq66"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c_1,...,c_T$$\end{document}</tex-math><mml:math id="M152"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>T</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq66.gif"/></alternatives></inline-formula> ranks the clusters in this way. Let <italic>S</italic> be an empty set.</p></list-item><list-item><p id="Par69">for <italic>i</italic> in 1,2,...,<italic>T</italic>: <list list-type="alpha-lower"><list-item><p id="Par70">Measure the F1 score of <inline-formula id="IEq67"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\cup c_i$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi>S</mml:mi><mml:mo>∪</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq67.gif"/></alternatives></inline-formula> with respect to <italic>P</italic>.</p></list-item><list-item><p id="Par71">If this F1 score is higher than that of <italic>S</italic>, add <inline-formula id="IEq68"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c_i$$\end{document}</tex-math><mml:math id="M156"><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq68.gif"/></alternatives></inline-formula> to <italic>S</italic>. Otherwise, stop and return the current F1 score of <italic>S</italic> with respect to <italic>P</italic>.</p></list-item></list></p></list-item><list-item><p id="Par72">Return the F1 score of <italic>S</italic> (if not already returned above).</p></list-item></list>If the target population is a union of clusters, this procedure is guaranteed to find it and return an F1 score of 1; otherwise, it finds a set of clusters whose union approximates <italic>P</italic> and returns the F1 score of their union with respect to <italic>P</italic>.</p>
      </sec>
      <sec id="Sec18">
        <title>Synthetic data experiments using splatter</title>
        <p id="Par73">The synthetic dataset analyzed in Fig. <xref rid="Fig2" ref-type="fig">2</xref> was generated using Splatter [<xref ref-type="bibr" rid="CR25">25</xref>]. All but two parameters were determined by fitting the PBMC dataset from [<xref ref-type="bibr" rid="CR27">27</xref>]. The fitted parameters are listed below:<list list-type="bullet"><list-item><p id="Par74">Mean rate parameter: 13.5</p></list-item><list-item><p id="Par75">Mean shape parameter: 0.583</p></list-item><list-item><p id="Par76">Library size location parameter: 7.69</p></list-item><list-item><p id="Par77">Library size scale parameter: 0.412</p></list-item><list-item><p id="Par78">Outlier probability: 0.025</p></list-item><list-item><p id="Par79">Outlier location parameter: 4.761</p></list-item><list-item><p id="Par80">Outlier scale parameter: 1.037</p></list-item><list-item><p id="Par81">Biological Coefficient of Variation dispersion: 0.2825</p></list-item><list-item><p id="Par82">Biological Coefficient of Variation degrees of freedom: 30.37</p></list-item></list>The two remaining parameters are (1) the probability of a gene being differentially expressed between the two groups and (2) the probability that a cell belongs to the smaller of the two groups (the “rare” population). We test all combinations of these two parameters for rare cell fractions ranging from 5 cells (0.5%) to 200 cells (20%) and for marker gene probabilities ranging from 0.2 to 5% in increments of 0.2%. For each combination, we generate ten synthetic datasets with different random seeds and run PCA, ICA, and SCA to make 20-dimensional representations of each replicate, keeping up to 5 iterations for SCA. We then compute Leiden clusterings on the 15-nearest Euclidean neighbor graph of each representation, with the default resolution of 1.0. From these clusterings we compute F1 scores for recovery of the rare population as described just above.</p>
        <p id="Par83">To determine how many marker genes are required to recover a population of a specific size, we filtered to all trials with the given population size, and recorded the lowest number of marker genes in any trial with F1 score greater than 0.9. We performed this analysis separately for each random seed used to generate replicates, resulting in 10 marker gene percentage values for each combination of rare cell fraction and method. These values are plotted in Fig. <xref rid="Fig2" ref-type="fig">2</xref>a.</p>
      </sec>
      <sec id="Sec19">
        <title>Cytotoxic T cell population discovery</title>
        <p id="Par84">We extracted all cytotoxic T cells from the dataset in [<xref ref-type="bibr" rid="CR14">14</xref>] using the authors’ cell type annotations, obtaining 307 cells in total. For PCA, we used scanpy’s pca function with 20 components. For ICA, we used the FastICA function of sklearn [<xref ref-type="bibr" rid="CR54">54</xref>, <xref ref-type="bibr" rid="CR55">55</xref>], again with 20 components. For SCA, we ran five iterations with 20 components each, starting with the PCA representation. We ran scVI with default parameters on the top 4000 most variable genes (we observed little difference in performance when running on all genes). 15-nearest neighbors graphs were computed in each representation using Euclidean distance, and the results were used to generate the UMAP plots in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. We computed diffusion maps using the 15-nearest neighbor graph downstream of the PCA representation, keeping 20 components (eigenvalue analysis confirms that this is a reasonable number of components, with further components adding noise). We computed the PHATE representation using the default parameters of the package (100 PCs, 5-nearest neighbors). Leiden clusters in each representation were computed downstream of Euclidean 15-nearest neighbor graphs, with the default resolution of 1.0. For PHATE, we use the built-in phate.cluster.kmeans with k=5. Dotplots to show expression of key marker genes were generated using scanpy’s dotplot function.</p>
      </sec>
      <sec id="Sec20">
        <title>T cell data from Hao et al.</title>
        <p id="Par85">We obtained transcriptomic data from the authors’ website at <ext-link ext-link-type="uri" xlink:href="https://atlas.fredhutch.org/nygc/multimodal-pbmc/">https://atlas.fredhutch.org/nygc/multimodal-pbmc/</ext-link>. The log-transformed count data was subset to T cells using the authors’ annotations, yielding 73,259 T cells and 20,729 genes across all 8 patients. We then split by patient into 8 donor-specific datasets. For each donor, we computed an SCA reduction using 50 components and 5 iterations, with a neighborhood size of 100 (a larger neighborhood size is appropriate for larger datasets; neighborhood size did not greatly affect performance). Fifty principal components were computed using scanpy’s pca function, and 50 independent components were computed with the FastICA implementation provided by scikit-learn [<xref ref-type="bibr" rid="CR54">54</xref>, <xref ref-type="bibr" rid="CR55">55</xref>]. To ensure convergence of FastICA, we raised the maximum number of iterations to 500 from the default of 200. We ran scVI with default parameters (learning rate 0.001, 400 warmup epochs for KL divergence term) and a 50-dimensional latent embedding space to match the dimensionality of the PCA, ICA, and SCA embeddings. Diffusion maps were likewise computed in 50 dimensions. We computed 15-nearest-neighbor graphs in each representation using the Euclidean distance metric, then ran UMAP [<xref ref-type="bibr" rid="CR12">12</xref>] and Leiden clustering [<xref ref-type="bibr" rid="CR31">31</xref>] on the resulting neighborhood graphs. For Leiden clustering, we use the default resolution of 1.0. PHATE embedding and clustering was run with default parameters using the phate Python package [<xref ref-type="bibr" rid="CR9">9</xref>].</p>
      </sec>
      <sec id="Sec21">
        <title>Imputation using MAGIC</title>
        <p id="Par86">To create SCA-MAGIC, we used the graphtools package to build a diffusion operator based on a 20-dimensional SCA reduction, with default parameters inherited from MAGIC (<italic>knn = 5</italic>, <italic>knn_max = 15</italic>, <italic>decay = 1</italic>, <italic>thresh = 0.0001</italic>). We used the same parameters to construct an analogous operator from a 20-dimensional PCA embedding. We then build MAGIC instances from these two operators, with time parameter <italic>t = 5</italic>, and compare performance on various datasets.</p>
        <p id="Par87">To generate artificial dropouts in the cytotoxic T cell data, we replaced a random subset of the pooled nonzero transcript measurements with zeros, comprising either 10%, 30%, 50%, or 90% of the total nonzero measurements. After performing imputation, we re-examined the transcripts that had been eliminated and checked whether they had been restored. High imputed values indicate well-restored transcripts.</p>
      </sec>
      <sec id="Sec22">
        <title>CD34+ immune cells for batch performance benchmarking</title>
        <p id="Par88">We downloaded the training data from the multimodal single-cell integration challenge [<xref ref-type="bibr" rid="CR40">40</xref>], consisting of 70,988 cells from 3 donors. The data were pre-processed by the original authors using a log transcripts-per-million transformation; we applied no further processing and used the cell types from the original authors to compute silhouette scores and visualize the data. We performed SCA with a wilcoxon scoring model and the default neighborhood size of 15, reducing to 20 components.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec23">
      <title>Supplementary information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2998_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Contains proofs of key mathematical results, formal descriptions of the algorithms underlying SCA, and results of additional experiments testing SCA’s performance and robustness.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2998_MOESM2_ESM.docx">
            <caption>
              <p><bold>Additional file 2.</bold> Contains the review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors are grateful to Ashwin Narayan, Brian Hie, Hyunghoon Cho, Sarah Nyquist, Rohit Singh, Ellen Zhong, and other members of the Berger lab for their continual support and helpful feedback. We also thank Josh Peters, Bryan Bryson, and Cheng-Zhong Zhang for helpful conversations on SCA’s applications and valuable suggestions for biological applications.</p>
    <sec id="FPar1">
      <title>Review history</title>
      <p id="Par89">The review history is available as Additional File <xref rid="MOESM2" ref-type="media">2</xref>.</p>
    </sec>
    <sec id="FPar2">
      <title>Peer review information</title>
      <p id="Par90">Veronique van den Berghe was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>B. DeMeo developed SCA’s source code, ran the benchmarking experiments, and generated all figures. B. Berger guided methodological development, proposed benchmarks, and helped analyze results. Both authors wrote the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding provided by the MIT Libraries. This work was supported by the National Institutes of Health R01HG010959 and the National Institutes of Health 1R35GM141861.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>SCA is implemented in Python, installed on PyPi for ease of use, fully documented, and offers ready integration with scanpy, a popular scRNA processing framework. Its source code is available under the MIT open source license, and the latest version can be found at <ext-link ext-link-type="uri" xlink:href="https://github.com/bendemeo/shannonca">https://github.com/bendemeo/shannonca</ext-link> [<xref ref-type="bibr" rid="CR56">56</xref>]. A stable release is also available on Zenodo (doi:10.5281/zenodo.7854155, [<xref ref-type="bibr" rid="CR57">57</xref>]). API documentation, installation instructions, and vignettes can be found at <ext-link ext-link-type="uri" xlink:href="https://shannonca.readthedocs.io">https://shannonca.readthedocs.io</ext-link>. For convenience, links to these pages are compiled along with a brief description of the method at <ext-link ext-link-type="uri" xlink:href="http://sca.csail.mit.edu/">http://sca.csail.mit.edu/</ext-link>.</p>
    <p> The SMART-seq3 data containing cytotoxic T cells has been deposited by the original authors under ArrayExpress E-MTAB-8735 at the European Bioinformatics Institute [<xref ref-type="bibr" rid="CR58">58</xref>]. The T cell data from Hao et. al. [<xref ref-type="bibr" rid="CR6">6</xref>] is available through GEO (GEO: GSE128639, [<xref ref-type="bibr" rid="CR59">59</xref>]). The CD34+ immune cell dataset used for batch performance benchmarking is available as training data for the online Kaggle competition at <ext-link ext-link-type="uri" xlink:href="https://www.kaggle.com/competitions/open-problems-multimodal/data">https://www.kaggle.com/competitions/open-problems-multimodal/data</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par91">Not applicable.</p>
    </notes>
    <notes id="FPar4">
      <title>Consent for publication</title>
      <p id="Par92">Not applicable.</p>
    </notes>
    <notes id="FPar5" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par93">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Park JH, Lee HK. Function of γδ T cells in tumor immunology and their application to cancer therapy. Exp Mol Med. 2021;53(3):318–27.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Parrot T, Healy K, Boulouis C, Sobkowiak MJ, Leeansyah E, Aleman S, et al. Expansion of donor-unrestricted MAIT cells with enhanced cytolytic function suitable for TCR redirection. JCI Insight. 2021;6(5).</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Van Dijk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sharma</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Nainys</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yim</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kathail</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Carr</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recovering gene interactions from single-cell data using data diffusion</article-title>
        <source>Cell.</source>
        <year>2018</year>
        <volume>174</volume>
        <issue>3</issue>
        <fpage>716</fpage>
        <lpage>729</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2018.05.061</pub-id>
        <?supplied-pmid 29961576?>
        <pub-id pub-id-type="pmid">29961576</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Saunders</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Macosko</surname>
            <given-names>EZ</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goldman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Krienen</surname>
            <given-names>FM</given-names>
          </name>
          <name>
            <surname>de Rivera</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Molecular diversity and specializations among the cells of the adult mouse brain</article-title>
        <source>Cell.</source>
        <year>2018</year>
        <volume>174</volume>
        <issue>4</issue>
        <fpage>1015</fpage>
        <lpage>1030</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2018.07.028</pub-id>
        <?supplied-pmid 30096299?>
        <pub-id pub-id-type="pmid">30096299</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zheng</surname>
            <given-names>GX</given-names>
          </name>
          <name>
            <surname>Terry</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Belgrader</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ryvkin</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bent</surname>
            <given-names>ZW</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Massively parallel digital transcriptional profiling of single cells</article-title>
        <source>Nat Commun.</source>
        <year>2017</year>
        <volume>8</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/ncomms14049</pub-id>
        <pub-id pub-id-type="pmid">28232747</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Hao Y, Hao S, Andersen-Nissen E, Mauck WM, Zheng S, Butler A, Lee MJ, Wilk AJ, Darby C, Zager M, Hoffman P. Integrated analysis of multimodal single-cell data. Cell. 2021;184(13):3573–87.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Nascimento M, Silva FFe, Sáfadi T, Nascimento ACC, Ferreira TEM, Barroso LMA, et al. Independent component analysis (ICA) based-clustering of temporal RNA-seq data. PLoS ONE. 2017;12(7):e0181195.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lopez</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Regier</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cole</surname>
            <given-names>MB</given-names>
          </name>
          <name>
            <surname>Jordan</surname>
            <given-names>MI</given-names>
          </name>
          <name>
            <surname>Yosef</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Deep generative modeling for single-cell transcriptomics</article-title>
        <source>Nat Methods.</source>
        <year>2018</year>
        <volume>15</volume>
        <issue>12</issue>
        <fpage>1053</fpage>
        <lpage>1058</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-018-0229-2</pub-id>
        <?supplied-pmid 30504886?>
        <pub-id pub-id-type="pmid">30504886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moon</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>van Dijk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gigante</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Burkhardt</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>WS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Visualizing structure and transitions in high-dimensional biological data</article-title>
        <source>Nat Biotechnol.</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>12</issue>
        <fpage>1482</fpage>
        <lpage>1492</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0336-3</pub-id>
        <?supplied-pmid 31796933?>
        <pub-id pub-id-type="pmid">31796933</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Coifman RR, Lafon S, Lee AB, Maggioni M, Nadler B, Warner F, et al. Geometric diffusions as a tool for harmonic analysis and structure definition of data: diffusion maps. Proc Natl Acad Sci. 2005;102(21):7426–31.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Holtmeier W, Kabelitz D. <inline-formula id="IEq75"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma \delta$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:mi>γ</mml:mi><mml:mi>δ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq75.gif"/></alternatives></inline-formula> T cells link innate and adaptive immune responses. In: Mechanisms of epithelial defense, vol 86. Karger Publishers; 2005. p. 151–183.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">McInnes L, Healy J, Melville J. Umap: uniform manifold approximation and projection for dimension reduction. 2018. arXiv preprint <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1802.03426">arXiv:1802.03426</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Maaten Lvd, Hinton G. Visualizing data using t-SNE. J Mach Learn Res. 2008;9(Nov):2579–605.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hagemann-Jensen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ziegenhain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ramsköld</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hendriks</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Larsson</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Single-cell RNA counting at allele and isoform resolution using Smart-seq3</article-title>
        <source>Nat Biotechnol.</source>
        <year>2020</year>
        <volume>38</volume>
        <issue>6</issue>
        <fpage>708</fpage>
        <lpage>714</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-020-0497-0</pub-id>
        <?supplied-pmid 32518404?>
        <pub-id pub-id-type="pmid">32518404</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>How to catch rare cell types</article-title>
        <source>Nature.</source>
        <year>2015</year>
        <volume>525</volume>
        <issue>7568</issue>
        <fpage>197</fpage>
        <lpage>198</lpage>
        <pub-id pub-id-type="doi">10.1038/nature15204</pub-id>
        <?supplied-pmid 26287456?>
        <pub-id pub-id-type="pmid">26287456</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dong</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>GC</given-names>
          </name>
        </person-group>
        <article-title>GiniClust3: a fast and memory-efficient tool for rare cell type identification</article-title>
        <source>BMC Bioinformatics.</source>
        <year>2020</year>
        <volume>21</volume>
        <fpage>1</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-020-3482-1</pub-id>
        <pub-id pub-id-type="pmid">31898485</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wegmann</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Neri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schuierer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bilican</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hartkopf</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Nigsch</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CellSIUS provides sensitive and specific detection of rare cell populations from complex single-cell RNA-seq data</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1739-7</pub-id>
        <pub-id pub-id-type="pmid">30606230</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jindal</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gupta</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Sengupta</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Discovery of rare cells from voluminous single cell expression data</article-title>
        <source>Nat Commun.</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-07234-6</pub-id>
        <pub-id pub-id-type="pmid">29317637</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hie</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Cho</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>DeMeo</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bryson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Berger</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Geometric sketching compactly summarizes the single-cell transcriptomic landscape</article-title>
        <source>Cell Syst.</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>6</issue>
        <fpage>483</fpage>
        <lpage>493</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cels.2019.05.003</pub-id>
        <?supplied-pmid 31176620?>
        <pub-id pub-id-type="pmid">31176620</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">DeMeo B, Berger B. Hopper: a mathematically optimal algorithm for sketching biological data. Bioinformatics. 2020;36(Supplement_1):i236–41.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Hie B, Peters J, Nyquist SK, Shalek AK, Berger B, Bryson BD. Computational methods for single-cell RNA sequencing. Annu Rev Biomed Data Sci. 2020;3:339–64.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wilk</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Rustagi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>NQ</given-names>
          </name>
          <name>
            <surname>Roque</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Martínez-Colón</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>McKechnie</surname>
            <given-names>JL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A single-cell atlas of the peripheral immune response in patients with severe COVID-19</article-title>
        <source>Nat Med.</source>
        <year>2020</year>
        <volume>26</volume>
        <issue>7</issue>
        <fpage>1070</fpage>
        <lpage>1076</lpage>
        <pub-id pub-id-type="doi">10.1038/s41591-020-0944-y</pub-id>
        <?supplied-pmid 32514174?>
        <pub-id pub-id-type="pmid">32514174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andreatta</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Corria-Osorio</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Müller</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cubas</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Coukos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Carmona</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Interpretation of T cell states from single-cell transcriptomics data using reference atlases</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-23324-4</pub-id>
        <pub-id pub-id-type="pmid">33397941</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shannon</surname>
            <given-names>CE</given-names>
          </name>
        </person-group>
        <article-title>A mathematical theory of communication</article-title>
        <source>Bell Syst Tech J.</source>
        <year>1948</year>
        <volume>27</volume>
        <issue>3</issue>
        <fpage>379</fpage>
        <lpage>423</lpage>
        <pub-id pub-id-type="doi">10.1002/j.1538-7305.1948.tb01338.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zappia</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Phipson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Oshlack</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Splatter: simulation of single-cell RNA sequencing data</article-title>
        <source>Genome Biol.</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1305-0</pub-id>
        <pub-id pub-id-type="pmid">28077169</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Treiner</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Duban</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bahram</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Radosavljevic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wanner</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Tilloy</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Selection of evolutionarily conserved mucosal-associated invariant T cells by MR1</article-title>
        <source>Nature.</source>
        <year>2003</year>
        <volume>422</volume>
        <issue>6928</issue>
        <fpage>164</fpage>
        <lpage>169</lpage>
        <pub-id pub-id-type="doi">10.1038/nature01433</pub-id>
        <?supplied-pmid 12634786?>
        <pub-id pub-id-type="pmid">12634786</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">3K PBMCs from a healthy donor, single cell immune profiling dataset by Cell Ranger 1.1.0, 10x Genomics. <ext-link ext-link-type="uri" xlink:href="https://www.10xgenomics.com/resources/datasets/3-k-pbm-cs-from-a-healthy-donor-1-standard-1-1-0">https://www.10xgenomics.com/resources/datasets/3-k-pbm-cs-from-a-healthy-donor-1-standard-1-1-0</ext-link>. Accessed Apr 2022.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>Dissecting the human immune system with single cell RNA sequencing technology</article-title>
        <source>J Leukoc Biol.</source>
        <year>2020</year>
        <volume>107</volume>
        <issue>4</issue>
        <fpage>613</fpage>
        <lpage>623</lpage>
        <pub-id pub-id-type="doi">10.1002/JLB.5MR1019-179R</pub-id>
        <?supplied-pmid 31803960?>
        <pub-id pub-id-type="pmid">31803960</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Joller</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lozano</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Burkett</surname>
            <given-names>PR</given-names>
          </name>
          <name>
            <surname>Patel</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Xiao</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Treg cells expressing the coinhibitory molecule TIGIT selectively inhibit proinflammatory Th1 and Th17 cell responses</article-title>
        <source>Immunity.</source>
        <year>2014</year>
        <volume>40</volume>
        <issue>4</issue>
        <fpage>569</fpage>
        <lpage>581</lpage>
        <pub-id pub-id-type="doi">10.1016/j.immuni.2014.02.012</pub-id>
        <?supplied-pmid 24745333?>
        <pub-id pub-id-type="pmid">24745333</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kunicki</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Hernandez</surname>
            <given-names>LCA</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Bacchetta</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Roncarolo</surname>
            <given-names>MG</given-names>
          </name>
        </person-group>
        <article-title>Identity and diversity of human peripheral Th and T regulatory cells defined by single-cell mass cytometry</article-title>
        <source>J Immunol.</source>
        <year>2018</year>
        <volume>200</volume>
        <issue>1</issue>
        <fpage>336</fpage>
        <lpage>346</lpage>
        <pub-id pub-id-type="doi">10.4049/jimmunol.1701025</pub-id>
        <?supplied-pmid 29180490?>
        <pub-id pub-id-type="pmid">29180490</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Traag</surname>
            <given-names>VA</given-names>
          </name>
          <name>
            <surname>Waltman</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>van Eck</surname>
            <given-names>NJ</given-names>
          </name>
        </person-group>
        <article-title>From Louvain to Leiden: guaranteeing well-connected communities</article-title>
        <source>Sci Rep.</source>
        <year>2019</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41598-019-41695-z</pub-id>
        <pub-id pub-id-type="pmid">30626917</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Vinh NX, Epps J, Bailey J. Information theoretic measures for clusterings comparison: variants, properties, normalization and correction for chance. J Mach Learn Res. 2010;11:2837–54.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kumpula</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Saramäki</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kaski</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kertész</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Limited resolution in complex network community detection with Potts model approach</article-title>
        <source>Eur Phys J B.</source>
        <year>2007</year>
        <volume>56</volume>
        <issue>1</issue>
        <fpage>41</fpage>
        <lpage>45</lpage>
        <pub-id pub-id-type="doi">10.1140/epjb/e2007-00088-4</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Achlioptas D, McSherry F. Fast computation of low-rank matrix approximations. J ACM (JACM). 2007;54(2):9–es.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Candès</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Recht</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Exact matrix completion via convex optimization</article-title>
        <source>Found Comput Math.</source>
        <year>2009</year>
        <volume>9</volume>
        <issue>6</issue>
        <fpage>717</fpage>
        <lpage>772</lpage>
        <pub-id pub-id-type="doi">10.1007/s10208-009-9045-5</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Torre</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Dueck</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Shaffer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bonasio</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SAVER: gene expression recovery for single-cell RNA sequencing</article-title>
        <source>Nat Methods.</source>
        <year>2018</year>
        <volume>15</volume>
        <issue>7</issue>
        <fpage>539</fpage>
        <lpage>542</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-018-0033-z</pub-id>
        <?supplied-pmid 29941873?>
        <pub-id pub-id-type="pmid">29941873</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Paul</surname>
            <given-names>WE</given-names>
          </name>
        </person-group>
        <article-title>Heterogeneity and plasticity of T helper cells</article-title>
        <source>Cell Res.</source>
        <year>2010</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>4</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/cr.2009.138</pub-id>
        <?supplied-pmid 20010916?>
        <pub-id pub-id-type="pmid">20010916</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Couturier</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Medina</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Kozinetz</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>DE</given-names>
          </name>
        </person-group>
        <article-title>Granzyme B secretion by human memory CD4 T cells is less strictly regulated compared to memory CD8 T cells</article-title>
        <source>BMC Immunol.</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1186/s12865-014-0036-1</pub-id>
        <pub-id pub-id-type="pmid">24423010</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Andrews TS, Hemberg M. False signals induced by single-cell imputation [version 2; peer review: 4 approved]. F1000Research. 2019;7:1740. 10.12688/f1000research.16613.2.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">in Single-cell Analysis OP. Open problems - multimodal single-cell integration. 2022. <ext-link ext-link-type="uri" xlink:href="https://www.kaggle.com/competitions/open-problems-multimodal">https://www.kaggle.com/competitions/open-problems-multimodal</ext-link>. Accessed Mar 2023.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">Rousseeuw PJ. Silhouettes: a graphical aid to the interpretation and validation of cluster analysis. J Comput Appl Math. 1987;20:53–65.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Tritschler S, Büttner M, Fischer DS, Lange M, Bergen V, Lickert H, Theis FJ. Concepts and limitations for learning developmental trajectories from single cell genomics. Development. 2019;146(12):dev170506.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Sparck Jones K. A statistical interpretation of term specificity and its application in retrieval. Journal of documentation. 1972;28(1):11–21.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Levine RD. Molecular reaction dynamics. Cambridge University Press; 2009.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gross</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>Surprisal analysis of transcripts expression levels in the presence of noise: a reliable determination of the onset of a tumor phenotype</article-title>
        <source>PLoS ONE.</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>4</issue>
        <fpage>e61554</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0061554</pub-id>
        <?supplied-pmid 23626699?>
        <pub-id pub-id-type="pmid">23626699</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zadran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arumugam</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Herschman</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Phelps</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Surprisal analysis characterizes the free energy time course of cancer cells undergoing epithelial-to-mesenchymal transition</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2014</year>
        <volume>111</volume>
        <issue>36</issue>
        <fpage>13235</fpage>
        <lpage>13240</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1414714111</pub-id>
        <?supplied-pmid 25157127?>
        <pub-id pub-id-type="pmid">25157127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Remacle</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kravchenko-Balasha</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Levitzki</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>Information-theoretic analysis of phenotype changes in early stages of carcinogenesis</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2010</year>
        <volume>107</volume>
        <issue>22</issue>
        <fpage>10324</fpage>
        <lpage>10329</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1005283107</pub-id>
        <?supplied-pmid 20479229?>
        <pub-id pub-id-type="pmid">20479229</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kravchenko-Balasha</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Levitzki</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rotter</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gross</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Remacle</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>On a fundamental structure of gene networks in living cells</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2012</year>
        <volume>109</volume>
        <issue>12</issue>
        <fpage>4702</fpage>
        <lpage>4707</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1200790109</pub-id>
        <?supplied-pmid 22392990?>
        <pub-id pub-id-type="pmid">22392990</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <mixed-citation publication-type="other">Narayan A, Berger B, Cho H. Assessing single-cell transcriptomic variability through density-preserving data visualization. Nat Biotechnol. 2021;39(6):765–74.</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Schaum N, Karkanias J, Neff NF, May AP, Quake SR, Wyss-Coray T, et al. Single-cell transcriptomics of 20 mouse organs creates a Tabula Muris: the Tabula Muris Consortium. Nature. 2018;562(7727):367.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <mixed-citation publication-type="other">(<ext-link ext-link-type="uri" xlink:href="https://math.stackexchange.com/users/22857/martin%20argerami">https://math.stackexchange.com/users/22857/martin argerami</ext-link>) MA. What vector x will maximize the norm of <inline-formula id="IEq76"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Vert Ax\Vert _2 / \Vert x\Vert _2$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">‖</mml:mo><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">‖</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mrow><mml:mo stretchy="false">‖</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">‖</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq76.gif"/></alternatives></inline-formula> (norm 2). Mathematics Stack Exchange. <ext-link ext-link-type="uri" xlink:href="https://math.stackexchange.com/q/3112310">https://math.stackexchange.com/q/3112310</ext-link> (version: 2021-01-26). Accessed Dec 2020.</mixed-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <mixed-citation publication-type="other">Virtanen P, Gommers R, Oliphant TE, Haberland M, Reddy T, Cournapeau D, et al. SciPy 1.0: Fundamental algorithms for scientific computing in Python. Nat Methods. 2020;17:261–272. 10.1038/s41592-019-0686-2.</mixed-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature.</source>
        <year>2020</year>
        <volume>585</volume>
        <issue>7825</issue>
        <fpage>357</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
        <?supplied-pmid 32939066?>
        <pub-id pub-id-type="pmid">32939066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <mixed-citation publication-type="other">Pedregosa F, Varoquaux G, Gramfort A, Michel V, Thirion B, Grisel O, et al. Scikit-learn: machine learning in Python. J Mach Learn Res. 2011;12:2825–30.</mixed-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oja</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hyvarinen</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Independent component analysis: algorithms and applications</article-title>
        <source>Neural Netw.</source>
        <year>2000</year>
        <volume>13</volume>
        <issue>4–5</issue>
        <fpage>411</fpage>
        <lpage>430</lpage>
        <?supplied-pmid 10946390?>
        <pub-id pub-id-type="pmid">10946390</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">DeMeo B. shannonca v0.0.2. Github. 2023. <ext-link ext-link-type="uri" xlink:href="https://github.com/bendemeo/shannonca">https://github.com/bendemeo/shannonca</ext-link>. Accessed Apr 2023.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <mixed-citation publication-type="other">DeMeo B. shannonca v0.0.2. Zenodo. 2023. 10.5281/zenodo.7854155.</mixed-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <mixed-citation publication-type="other">Hagemann-Jensen M, Ziegenhain C, Chen P, Ramsköld D, Hendriks GJ, Larsson AJ, et al. Single-cell RNA counting at allele- and isoform-resolution using Smart-seq3. ArrayExpress; 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/biostudies/arrayexpress/studies/E-MTAB-8735">https://www.ebi.ac.uk/biostudies/arrayexpress/studies/E-MTAB-8735</ext-link>. Accessed Nov 2020.</mixed-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <mixed-citation publication-type="other">Hao Y, Hao S, Andersen-Nissen E, Mauck WM, Zheng S, Butler A, et al. Comprehensive integration of single-cell data. Gene Expression Omnibus; 2019. <ext-link ext-link-type="uri" xlink:href="https://identifiers.org/geo:GSE128639">https://identifiers.org/geo:GSE128639</ext-link>. Accessed Jan 2021.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">10464206</article-id>
    <article-id pub-id-type="pmid">37626411</article-id>
    <article-id pub-id-type="publisher-id">2998</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-023-02998-7</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Method</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>SCA: recovering single-cell heterogeneity through information-based dimensionality reduction</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author">
        <name>
          <surname>DeMeo</surname>
          <given-names>Benjamin</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-2724-7228</contrib-id>
        <name>
          <surname>Berger</surname>
          <given-names>Bonnie</given-names>
        </name>
        <address>
          <email>bab@mit.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.116068.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2341 2786</institution-id><institution>Computer Science and Artificial Intelligence Laboratory, MIT, </institution></institution-wrap>Cambridge, 02139 MA USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/03vek6s52</institution-id><institution-id institution-id-type="GRID">grid.38142.3c</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 754X</institution-id><institution>Department of Biomedical Informatics, </institution><institution>Harvard University, </institution></institution-wrap>Cambridge, 02138 MA USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.116068.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2341 2786</institution-id><institution>Department of Mathematics, MIT, </institution></institution-wrap>Cambridge, 02139 MA USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>8</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>24</volume>
    <elocation-id>195</elocation-id>
    <history>
      <date date-type="received">
        <day>7</day>
        <month>8</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>28</day>
        <month>6</month>
        <year>2023</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Dimensionality reduction summarizes the complex transcriptomic landscape of single-cell datasets for downstream analyses. Current approaches favor large cellular populations defined by many genes, at the expense of smaller and more subtly defined populations. Here, we present surprisal component analysis (SCA), a technique that newly leverages the information-theoretic notion of surprisal for dimensionality reduction to promote more meaningful signal extraction. For example, SCA uncovers clinically important cytotoxic T-cell subpopulations that are indistinguishable using existing pipelines. We also demonstrate that SCA substantially improves downstream imputation. SCA’s efficient information-theoretic paradigm has broad applications to the study of complex biological tissues in health and disease.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-023-02998-7.</p>
      </sec>
    </abstract>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>National Institutes of Health</institution>
        </funding-source>
        <award-id>R01HG010959</award-id>
        <principal-award-recipient>
          <name>
            <surname>DeMeo</surname>
            <given-names>Benjamin</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000002</institution-id>
            <institution>National Institutes of Health</institution>
          </institution-wrap>
        </funding-source>
        <award-id>1R35GM141861</award-id>
        <principal-award-recipient>
          <name>
            <surname>Berger</surname>
            <given-names>Bonnie</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Massachusetts Institute of Technology (MIT)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>'Open Access funding provided by the MIT Libraries'</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Single-cell RNA sequencing (scRNA-seq) produces transcript counts for individual cells, enabling fine-grained analyses of biological tissues. Single-cell datasets can uncover cellular populations and gene-gene interactions that play critical roles in biological and pathological phenomena [<xref ref-type="bibr" rid="CR1">1</xref>–<xref ref-type="bibr" rid="CR3">3</xref>]. Identifying and characterizing this heterogeneity is a key motivator of many single-cell experiments.</p>
    <p id="Par3">However, the size, high dimensionality, and noisiness of single-cell data complicates this task. Modern experiments profile tens of thousands of genes per cell, often with high dropout levels (under-sampling of mRNA molecules) and technical noise. Dimensionality reduction, whereby the data is represented in a lower-dimensional space with enriched signal, has become a cornerstone of modern scRNA-seq analysis pipelines. For example, principal component analysis (PCA) projects the data to a lower-dimensional linear subspace such that the total variance of the projected data is maximized. Independent component analysis (ICA) instead aims to identify non-Gaussian combinations of features. Both have found widespread use in single-cell studies [<xref ref-type="bibr" rid="CR4">4</xref>–<xref ref-type="bibr" rid="CR7">7</xref>]. A more recent method, scVI [<xref ref-type="bibr" rid="CR8">8</xref>], models transcript counts using a zero-inflated negative-binomial distribution, and performs variational inference to non-linearly embed each cell into a low-dimensional parameter space. Graph-based dimensionality reduction methods such as PHATE [<xref ref-type="bibr" rid="CR9">9</xref>] and diffusion maps [<xref ref-type="bibr" rid="CR10">10</xref>] compute pairwise similarities between cells using diffusion on a <italic>k</italic>-nearest-neighbor network and create embeddings that preserve these similarities.</p>
    <p id="Par4">While these approaches are effective, they often fail to capture the full cellular diversity of complex tissues for two reasons. First, rare cell types, by definition, account for a small fraction of the observations, and therefore contribute little to a dataset’s global structure. Second, many distinctions between cellular populations hinge on just a few of the thousands of genes measured; we call such populations <italic>subtly defined</italic>. For instance, gamma-delta T cells, which are known for their antigen recognition capacities [<xref ref-type="bibr" rid="CR11">11</xref>], are distinguished from ordinary cytotoxic T cells by the presence of just a few gamma and delta T receptors. Whereas PCA and ICA both compute features that optimize objective functions over the entire dataset―total variance and non-Gaussianity―rare cell populations thwart both strategies, since the genes defining them may be noisy or unexpressed over much of the data. Similarly, scVI uses the evidence lower bound (ELBO) loss function to evaluate and refine its latent encoding. Since ELBO takes each recorded transcript into account, rare and subtly defined cell types may not impact it much, leading to underrepresentation. Other non-linear methods, like UMAP [<xref ref-type="bibr" rid="CR12">12</xref>] and t-SNE [<xref ref-type="bibr" rid="CR13">13</xref>], rely on a <italic>k</italic>-nearest-neighbor graph; however, constructing an accurate <italic>k</italic>-nearest-neighbor graph requires an accurate notion of cell-cell similarity, which is nontrivial. The same can be said of network-based methods, like PHATE [<xref ref-type="bibr" rid="CR9">9</xref>] and diffusion maps [<xref ref-type="bibr" rid="CR10">10</xref>], which build reductions using diffusion over the <italic>k</italic>-nearest-neighbor graph. Real cellular populations may be both rare and subtly defined, so these challenges are significant roadblocks to realizing scRNA-seq’s full potential.</p>
    <p id="Par5">Here, we introduce SCA (surprisal component analysis), an information-theoretic dimensionality reduction method that identifies statistically informative signals in single-cell transcriptional data to enable deeper insight into complex tissues (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a). SCA newly leverages the notion of <italic>surprisal</italic>, whereby less probable events are more informative when they occur, to assign a <italic>surprisal score</italic> to each transcript in each cell. By identifying the set of axes which captures the most of this surprising variation, SCA enables dimensionality reduction that better preserves information from rare and subtly defined cell types, uncovering them where existing methods cannot.<fig id="Fig1"><label>Fig. 1</label><caption><p><bold>a</bold> Illustration of SCA’s key conceptual advance. The vertical axis separates a small cellular population (top) from a larger one (bottom). The two horizontal axes have higher variance but cannot separate the two populations. The leading principal components align with the higher-variance horizontal axes and fail to separate the populations. The leading surprisal component aligns with the more informative vertical axis, allowing downstream separation. <bold>b</bold> Construction of surprisal scores from gene expression data. For each cell, we compare the gene’s expression in a local neighborhood of the cell to the gene’s global expression using the Wilcoxon rank-sum test. The resulting <italic>p</italic>-values are negative log-transformed to give the “surprisal” of the observed over- or under-expression, and given a positive sign for over-expression and a negative sign for under-expression. <bold>c</bold> Surprisal scores of the <italic>ITGAL</italic> gene over a set of 3000 PBMCs profiled via Smart-seq 3 [<xref ref-type="bibr" rid="CR14">14</xref>]. Scores are positive where the gene is locally enriched, near zero where it represents noise, and negative where it is conspicuously absent. <bold>d</bold> Construction of surprisal components. Surprisal scores undergo singular value decomposition (SVD) over all genes to yield <italic>D</italic> loading vectors that capture informative axes in the data. We then linearly project the input transcript count matrix to these axes, producing a <italic>D</italic>-dimensional representation of each cell for downstream analysis</p></caption><graphic xlink:href="13059_2023_2998_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par6">To demonstrate the utility of our approach, we ran SCA on real and simulated data with rare and subtly defined cellular populations, and assessed our ability to recover these populations downstream. For comparison, we also tested PCA, ICA, scVI, diffusion maps, PHATE, and six rare cell type discovery tools: RaceID [<xref ref-type="bibr" rid="CR15">15</xref>], GiniClust [<xref ref-type="bibr" rid="CR16">16</xref>], CellSIUS [<xref ref-type="bibr" rid="CR17">17</xref>], FiRE [<xref ref-type="bibr" rid="CR18">18</xref>], GeoSketch [<xref ref-type="bibr" rid="CR19">19</xref>], and Hopper [<xref ref-type="bibr" rid="CR20">20</xref>]. We show that SCA enables detection of small populations, such as gamma-delta T cells and mucosal-associated invariant T (MAIT) cells, which are invisible to existing pipelines and yet critical to the study of tumor immunology [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. At the same time, SCA reductions better capture larger-scale differences between more common cell types, enabling multi-resolution analysis without the need for re-clustering [<xref ref-type="bibr" rid="CR21">21</xref>]. Beyond rare cell type recovery, we found that SCA more accurately recovers gene-gene relationships and restores dropouts when used as a basis for MAGIC imputation [<xref ref-type="bibr" rid="CR3">3</xref>].</p>
    <p id="Par7">SCA is highly efficient, requires no information aside from transcript counts, and generalizes to data comprised of discrete cell types or continuous trajectories. The output components have a clear linear relationship with the original transcripts, facilitating straightforward biological verification and interpretation. We believe that SCA’s information-theoretic approach is a mathematically justified and empirically useful approach to signal extraction in any high-dimensional data modality, biological or otherwise.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Overview of SCA</title>
      <p id="Par8">Like PCA and ICA, SCA projects the input data to a linear subspace spanned by a set of basis vectors, which we call <italic>surprisal components</italic>. SCA’s key conceptual advance is its novel approach for finding <italic>informative</italic> axes of variation, where an informative axis is one that separates cell types or captures biologically meaningful variation (Fig. <xref rid="Fig1" ref-type="fig">1</xref>a). Single-cell experiments have shown that the presence or absence of a small number of genes can determine a cell’s phenotype [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR22">22</xref>, <xref ref-type="bibr" rid="CR23">23</xref>]. The key challenge, then, is to find and isolate these signals for each cell.</p>
      <p id="Par9">To this end, SCA first quantifies the importance of each transcript in each cell by converting transcript counts into <italic>surprisal scores</italic> (Fig. <xref rid="Fig1" ref-type="fig">1</xref>b; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 1). To determine the score of a given transcript in a given cell, we compare its expression distribution among the cell’s <italic>k</italic> nearest neighbors to its global expression (i.e., to the expected distribution of the transcript among a set of <italic>k</italic> cells randomly chosen from the entire dataset) for a user-specified neighborhood size <italic>k</italic>. A transcript whose local expression deviates strongly from its global expression is more likely to inform the cell’s location in relation to other cells, and therefore its identity. We quantify this deviation through a Wilcoxon rank-sum test, which produces a <italic>p</italic>-value representing the probability of the observed deviation in a random set of <italic>k cells</italic>. Following Shannon’s definition [<xref ref-type="bibr" rid="CR24">24</xref>], the <italic>surprisal</italic> or <italic>self-information</italic> of the observed deviation is then defined as the negative logarithm of its probability, i.e., as <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\log (p)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq1.gif"/></alternatives></inline-formula>. This is a positive number which measures how surprising the transcript’s local expression is, in units of nats when the logarithm is natural (changing the base scales the scores by a constant factor, which does not affect SCA’s output). To distinguish over- from under-expression, we flip the sign for under-expressed transcripts (Methods). The resulting scores are compiled into a <italic>surprisal matrix</italic> with the same dimensionality as the input data.</p>
      <p id="Par10">This strategy gives genes high positive scores where they are markers (genes that distinguish a cell type from the rest), scores near zero where they represent noise, and low negative scores where they are conspicuously absent (Fig. <xref rid="Fig1" ref-type="fig">1</xref>c). For example, consider a marker gene for a rare population. The gene is unexpressed over much of the data but highly expressed in cells belonging to the population. Thus, for these rare cells, the local expression is far higher than would be expected by chance, so the gene receives a high score for these cells. Likewise, a gene expressed everywhere <italic>except</italic> in a rare population receives low scores on members of the population. On the other hand, a noisy gene with no bearing on cellular identity receives low scores everywhere, since its distribution on <italic>k</italic>-neighborhoods resembles that of random sets of <italic>k</italic> cells.</p>
      <p id="Par11">We next sought to distill the signal captured by the surprisal matrix into a low-dimensional representation (Fig. <xref rid="Fig1" ref-type="fig">1</xref>d; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 2). As shown in Methods and in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 1, the right-eigenvectors of the surprisal matrix represent highly informative linear combinations of genes, which we call <italic>surprisal components</italic> (SCs). The first <italic>D</italic> right-eigenvectors, which we denote <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_1,...,v_D$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq2.gif"/></alternatives></inline-formula>, then span a linear subspace onto which we project the input matrix <italic>X</italic> of <italic>N</italic> cells by <italic>M</italic> genes. The resulting <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N\times D$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>D</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq3.gif"/></alternatives></inline-formula> matrix is the output of SCA. We emphasize that while the construction of the surprisal matrix and of <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$v_1,...,v_D$$\end{document}</tex-math><mml:math id="M8"><mml:mrow><mml:msub><mml:mi>v</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>v</mml:mi><mml:mi>D</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq4.gif"/></alternatives></inline-formula> is nonlinear, SCA’s output is a linear projection of its input to their span. This places SCA in the category of linear dimensionality reduction methods, together with PCA and ICA. This means that each of the output features is a weighted sum of genes, enabling straightforward interpretation. Furthermore, it enables many convenient workflows, including elbow plots (via the eigenvectors of the surprisal matrix, which we make readily available), and analysis of the gene loading vectors to interpret the components.</p>
      <p id="Par12">In summary, SCA accepts a transcript matrix and sets of <italic>k</italic>-nearest neighbors for each cell, finds transcripts that inform each cell’s locale, and distills this information into a smaller set of features. This process amplifies the locality signal of the input <italic>k</italic>-nearest neighbor data. For example, even if only 10% of a cell’s neighbors belong to the same population, this is still highly significant when the population comprises only 1% of the sample. SCA’s surprisal scores would reflect this, and the resulting components would better separate the rare cells, as we verify. The input neighborhoods can be specified arbitrarily, but by default SCA computes them via Euclidean distance on a PCA representation.</p>
      <p id="Par13">This signal-boosting step can be repeated: from an initial SCA reduction, we can compute <italic>k</italic>-neighborhoods using the Euclidean metric, use these neighborhoods to compute a surprisal matrix, and perform singular value decomposition to compute another SCA reduction. As we show for both real and Splatter-simulated data [<xref ref-type="bibr" rid="CR25">25</xref>], this often improves the representation of rare and subtly defined cell types (Figs. <xref rid="Fig2" ref-type="fig">2</xref>d and <xref rid="Fig3" ref-type="fig">3</xref>f). Intuitively, we begin with a weak notion of locality (provided by PCA) and continually refine it. In our experiments, we have found that performance usually stabilizes after 3–5 iterations and remains stable thereafter (Fig. <xref rid="Fig3" ref-type="fig">3</xref>f, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2). Note that regardless of the number of iterations, SCA’s output remains a linear projection of its input, since iteration simply refines the subspace onto which SCA projects.<fig id="Fig2"><label>Fig. 2</label><caption><p>Performance of SCA on data simulated with Splatter [<xref ref-type="bibr" rid="CR25">25</xref>]. <bold>a</bold> Ability of PCA, ICA, and SCA to recover rare cell populations of different sizes and with varying numbers of marker genes (out of 1000 cells and 1000 genes total). The population is considered “recovered” if the downstream Leiden clusters capture it with F1 score greater than 0.9 (Methods). SCA detects smaller populations with few marker genes. <bold>b</bold>, <bold>c</bold> Performance of FiRE [<xref ref-type="bibr" rid="CR18">18</xref>] and RaceID [<xref ref-type="bibr" rid="CR15">15</xref>] on a simulated dataset where 3% of the cells are defined by 10 marker genes (out of 1000 cells and 1000 genes total). For easy comparison with (e), FiRE scores and cluster memberships are plotted in the UMAP embedding downstream of the SCA representation. <bold>d</bold> Performance of SCA on the same dataset with a variety of neighborhood sizes. With a neighborhood size of 20 or fewer, SCA captures the rare population with very high F1 score after 2 or more iterations. The F1 score decreases when the neighborhood size approaches the size of the rare population, though it remains higher than PCA’s score of 0.153. <bold>e</bold> Top: UMAP plots downstream of various dimensionality reduction strategies, as well as the PHATE embedding [<xref ref-type="bibr" rid="CR9">9</xref>]. SCA alone separates the rare population. Bottom: Scatter plots of the first two components of each reduction. The leading surprisal component separates the rare population from the rest</p></caption><graphic xlink:href="13059_2023_2998_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par14">
        <fig id="Fig3">
          <label>Fig. 3</label>
          <caption>
            <p>SCA recovers subtly defined cellular populations from a set of 307 cytotoxic T cells profiled using Smart-seq 3 [<xref ref-type="bibr" rid="CR14">14</xref>]. <bold>a</bold> UMAP embedding computed from a 20-dimensional SCA representation using Euclidean nearest neighbors, with Leiden clusterings (left) and inferred cell types (right). Gamma-delta, MAIT, and T helper populations cleanly separate. <bold>b</bold> Dot plot of key marker gene groups in each SCA-derived Leiden cluster. Gamma-delta, MAIT, and T helper cells are clearly identifiable from their known marker genes. <bold>c</bold> Scatter plots of leading principal, independent, and surprisal components, colored by log-TPM (transcript per million) expression of key marker genes: the delta-receptor TRDV2 marks gamma-delta T cells [<xref ref-type="bibr" rid="CR11">11</xref>], and SLC4A10 marks MAIT cells [<xref ref-type="bibr" rid="CR26">26</xref>]. The leading surprisal components cleanly separate the gamma-delta and MAIT subpopulations, whereas the leading PCs and ICs blur these distinctions. <bold>d</bold> UMAP plots derived from 20-dimensional PCA, ICA, scVI, and SCA, and diffusion map embeddings of the data, as well as the PHATE embedding (Methods). CD8 T cells, CD4+ T helper cells, TRDV2+ gamma-delta T cells, and SLC4A10+ MAIT cells form distinct regions of the SCA-derived UMAP plot. <bold>e</bold> F1 scores for recovery of major T cell populations by various clustering schemes (Methods). For PCA, ICA, SCA, scVI, and diffusion maps, we assess Leiden clusters from the Euclidean 15-nearest neighbors graph with resolution 1. Leiden clusterings computed on the SCA representation consistently capture these cell types with highest accuracy. <bold>f</bold> Robustness analysis for cell type recovery with respect to the size of the neighborhoods used to compute SCA’s surprisal scores and the number of iterations. Performance improves with more iterations, and is stable across a wide range of neighborhood sizes</p>
          </caption>
          <graphic xlink:href="13059_2023_2998_Fig3_HTML" id="MO3"/>
        </fig>
      </p>
    </sec>
    <sec id="Sec4">
      <title>SCA recovers rare populations from noisy synthetic data</title>
      <p id="Par15">To test SCA’s power to uncover rare cell populations under a wide range of conditions, we used Splatter [<xref ref-type="bibr" rid="CR25">25</xref>] to generate synthetic datasets with rare populations of various size and with varying numbers of marker genes. Each simulated dataset contains 1000 cells and 1000 genes, with 2–200 rare cells marked by 2–50 differentially expressed genes. The remaining simulation parameters, such as library size distribution, outlier gene probability, and gene expression distribution, were estimated by fitting Splatter to a widely used dataset of 3000 peripheral blood monocytes profiled by 10X genomics [<xref ref-type="bibr" rid="CR27">27</xref>] (Methods).</p>
      <p id="Par16">To test the ability of SCA, ICA, and PCA to recover rare populations, for each combination of marker gene count and rare population size, we examined 10 replicate Splatter datasets generated with different random seeds. To assess population recovery, we computed Leiden clusterings from 20-dimensional embeddings using each method, chose the subset of Leiden clusters that best identified the rare population, and computed the F1 score (Methods). We consider the rare population recovered if this F1 score is 0.9 or greater.</p>
      <p id="Par17">We found that on average, SCA requires 38% fewer marker genes than PCA and 39% fewer marker genes than ICA to recover a rare population of a given size (Fig. <xref rid="Fig2" ref-type="fig">2</xref>a). Similarly, for a fixed number of marker genes, SCA can detect rare populations on average 29% smaller than those of PCA, and 28% smaller than those of ICA. For example, when the rare population contains 100 cells, SCA requires an average of 6.4 marker genes to detect it, whereas PCA and ICA require on average 10.8 and 10.6 marker genes, respectively. A <italic>t</italic>-test across the 10 replicates confirms that SCA consistently requires fewer marker genes than either PCA or ICA (<inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p&lt;0.001$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>p</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>0.001</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq5.gif"/></alternatives></inline-formula>). Thus, SCA enables better recovery both of rare and of subtly defined populations.</p>
      <p id="Par18">To allow more comprehensive benchmarking and visualization, we used the same Splatter parameters to generate a dataset where each cell has a 2.5% chance of belonging to a rare population with 10 marker genes. Due to sampling noise, the resulting dataset had 34 rare cells (3.4% of the total). We performed dimensionality reduction on this dataset using PCA, ICA, SCA, scVI, diffusion maps, and PHATE, as well as several tailored methods for rare cell type discovery: CellSIUS ([<xref ref-type="bibr" rid="CR17">17</xref>]), RaceID ([<xref ref-type="bibr" rid="CR15">15</xref>]), GiniClust3 ([<xref ref-type="bibr" rid="CR16">16</xref>]), and FiRE([<xref ref-type="bibr" rid="CR18">18</xref>]) (Fig. <xref rid="Fig2" ref-type="fig">2</xref>b, c, e). To obtain an F1 score from FiRE, which assigns cells a continuous rarity score, we consider all sets containing the top <italic>n</italic> rarest cells for <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$1&lt;n&lt;1000$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:mn>1</mml:mn><mml:mo>&lt;</mml:mo><mml:mi>n</mml:mi><mml:mo>&lt;</mml:mo><mml:mn>1000</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq6.gif"/></alternatives></inline-formula> and report the highest F1 score of any such set (Methods). As GiniClust3 did not identify any of the marker genes as having significantly high Gini index, it combined all cells into a single cluster. Similarly, CellSIUS did not identify any genes with a bimodal distribution and did not generate a clustering.</p>
      <p id="Par19">SCA cleanly separates the two populations (F1 score 0.971) whereas the other methods do not (F1 score <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&lt;0.3$$\end{document}</tex-math><mml:math id="M14"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>0.3</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq7.gif"/></alternatives></inline-formula>; Fig. <xref rid="Fig2" ref-type="fig">2</xref>e). In UMAP plots downstream of each reduction, only SCA shows a clear separation (Fig. <xref rid="Fig2" ref-type="fig">2</xref>e, top row). The first surprisal component (SC) distinguishes the rare population, whereas the leading principal, independent, or diffusion components do not (Fig. <xref rid="Fig2" ref-type="fig">2</xref>e, bottom row). Thus, SCA better extracts features that recover rare populations, enabling more sensitive and specific detection.</p>
      <p id="Par20">We found that SCA’s performance improves with more iterations and is stable for neighborhood sizes ranging from 2 to 20 (Fig. <xref rid="Fig2" ref-type="fig">2</xref>d). At larger neighborhood sizes, the F1 score is comparable to that achieved by other methods. This behavior is expected: since large neighborhoods cannot be contained in very small populations, SCA has limited ability to identify populations with similar or smaller size than the chosen neighborhood size. We therefore recommend choosing a neighborhood size smaller than the expected size of the rarest cellular population in the sample. Our simulations (Figs.  <xref rid="Fig2" ref-type="fig">2</xref>d and <xref rid="Fig3" ref-type="fig">3</xref>f) show strong cluster recovery even at neighborhood sizes smaller than 10, so this is not a substantial limitation. </p>
    </sec>
    <sec id="Sec5">
      <title>SCA reveals the landscape of cytotoxic T cell subtypes</title>
      <p id="Par21">Novel therapies increasingly leverage the immune system to fight disease, and the complexity and cellular diversity of immunological tissues make them ideal targets for scRNA-seq [<xref ref-type="bibr" rid="CR6">6</xref>, <xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]. However, these tissues also challenge the technology in a variety of ways: they contain diverse cell types with rare but clinically important sub-types, and the expression of individual surface receptors has outsize effects on phenotype, leading to many subtly defined cell types [<xref ref-type="bibr" rid="CR23">23</xref>, <xref ref-type="bibr" rid="CR28">28</xref>]. We therefore examined whether SCA can find and distill these signals to reveal a richer landscape of immune cell types.</p>
      <p id="Par22">We obtained a collection of 307 cytotoxic T cells profiled using Smart-seq 3 (SS3) [<xref ref-type="bibr" rid="CR14">14</xref>]. After standard log transcript per million pre-processing with a pseudocount of 1 (Methods), we computed 20-dimensional reductions using PCA, ICA, SCA, scVI, and a diffusion map. We ran SCA with 1-5 iterations and the default neighborhood size of 15. We followed each reduction with standard downstream steps: 15-nearest neighbor graph construction using the Euclidean metric, UMAP embedding, and Leiden clustering. In addition, we computed a two-dimensional embedding using PHATE and a clustering using PHATE’s own clustering function based on internally computed similarities.</p>
      <p id="Par23">The PCA, ICA, and scVI reductions suggest that the data is homogeneous: the UMAP visualizations are globular, with no distinct clusters, and there is no obvious structure in the leading components (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c and d). On the other hand, SCA’s embedding reveals several clearly separated populations, summarized by 9 Leiden clusters (Fig. <xref rid="Fig3" ref-type="fig">3</xref>a). Differential gene expression analysis shows that these correspond to known cell types (Fig. <xref rid="Fig3" ref-type="fig">3</xref>b). For example, clusters 1 and 2 contain Gamma-delta T cells, as indicated by expression of the gamma- and delta-receptors <italic>TRGV9</italic> and <italic>TRDV2</italic> [<xref ref-type="bibr" rid="CR11">11</xref>]. Cluster 4 expresses <italic>SLC4A10</italic>, <italic>TRAV1-2</italic>, and <italic>LTK</italic>, strongly suggesting that this cluster contains MAIT cells [<xref ref-type="bibr" rid="CR2">2</xref>, <xref ref-type="bibr" rid="CR26">26</xref>]. CD4+ T helper cells group neatly in cluster 9, whereas high <italic>TIGIT</italic> levels in cluster 7 suggest an inhibitory phenotype [<xref ref-type="bibr" rid="CR29">29</xref>, <xref ref-type="bibr" rid="CR30">30</xref>]. Clusters 3 and 8 express standard cytotoxic effector genes like granzymes and perforins, whereas clusters 5 and 6 express CD8 but have low granzyme expression, suggesting recently activated CD8 T cells.</p>
      <p id="Par24">We further tested the ability of each method to detect key immunological marker genes (Fig. <xref rid="Fig3" ref-type="fig">3</xref>d). The UMAP plots derived from the PCA, ICA, scVI, PHATE, and diffusion map representations do not separate cells based on key immunological markers, whereas the SCA-derived UMAP plot does. To quantify this finding and see how it affects de novo population discovery, we assessed whether the Leiden clusters computed downstream of each representation were concordant with a marker-based classification. We defined CD8+ T cells as those expressing <italic>CD8A</italic>; CD4+ T cells as those expressing <italic>CD4</italic>; gamma-delta T cells as those expressing at least two of <italic>TRGV9</italic>, <italic>TRDV2</italic>, and <italic>TRDC</italic>; and MAIT cells as those expressing at least two of <italic>SLC4A10</italic>, <italic>TRAV1-2</italic>, and <italic>LTK</italic>. We computed F1 scores for the recovery of each of these types as described for synthetic data and in Methods. We did the same for clusterings output by CellSIUS, RaceID, GiniClust, GeoSketch, and Hopper. To produce clusterings using Hopper, we performed Leiden-clustering on a 50-point Hopper sketch of the data, then assigned each cell the cluster label of its nearest sub-sampled cell. For GeoSketch, we projected the data to 20-dimensional PCA coordinates computed from a 50-point sketch, and then computed Leiden clusters. SCA consistently outperforms the other methods in identifying these immunological classes (Fig. <xref rid="Fig3" ref-type="fig">3</xref>e). As with the synthetic data, we found that the leading surprisal components distinguish cell types, whereas leading independent and principal components do not (Fig. <xref rid="Fig3" ref-type="fig">3</xref>c). Thus, SCA is better-suited to detect subtly defined immune cell types.</p>
      <p id="Par25">We next performed robustness analysis to see how SCA’s performance varies under different choices of neighborhood size <italic>k</italic> and different numbers of iterations (Fig. <xref rid="Fig3" ref-type="fig">3</xref>f). As with the synthetic datasets, running more iterations often improves the representation; notably, the CD4+ sub-type is not consistently clearly captured until at least the third iteration. After 3, 4, or 5 iterations, SCA performs well on all sub-types over a wide range of neighborhood sizes (from 5 to at least 90). Very small neighborhood sizes (<inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$&lt;5$$\end{document}</tex-math><mml:math id="M16"><mml:mrow><mml:mo>&lt;</mml:mo><mml:mn>5</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq8.gif"/></alternatives></inline-formula>) do not perform as well, likely due to a lack of statistical power. On the other hand, results on simulated data suggest limited ability to recover cellular populations with size similar to or smaller than the neighborhood size (Fig. <xref rid="Fig2" ref-type="fig">2</xref>d). For most datasets, this leads to a wide span of acceptable choices of neighborhood size. We also found that SCA’s performance is robust to the number of components in the reduction, performing well when as few as 5 and as many as 50 components are taken (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6c).</p>
      <p id="Par26">While single-cell analysis pipelines frequently subset to highly variable genes (HVG) to remove noisy or lowly expressed transcripts, marker genes for small populations intrinsically have low variance. To ensure that these were not removed in the above experiments, we did not perform highly variable gene (HVG) selection prior to dimensionality reduction. To test the effect of HVG subsetting, we repeated all of these experiments on the same dataset after filtering to the 1000 most variable genes and log transcript per million preprocessing (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 6; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6a,b). We found that SCA performs substantially better when all genes are kept, and outperforms the other tested methods regardless of whether gene filtering is performed.</p>
    </sec>
    <sec id="Sec6">
      <title>SCA distinguishes known cell types profiled by CITE-seq</title>
      <p id="Par27">To evaluate whether SCA’s reductions better detect known populations of cells in a larger-scale immmunological single-cell dataset, we obtained a CITE-seq dataset from Hao et al. [<xref ref-type="bibr" rid="CR6">6</xref>], in which hundreds of thousands of PBMCs from 8 human donors were subjected in parallel to transcriptomic profiling and to surface receptor profiling with a panel of 228 antibodies. The authors use both modalities, and input from human experts, to produce a cell type classification, which we take as a ground truth. We subsetted the data to T cells, yielding 73,000 cells across all donors, and assess performance in each donor individually. For each donor, we computed 50-dimensional representations using PCA, ICA, SCA, scVI, and a diffusion map. We also compute 2-dimensional PHATE embeddings, and clusterings using PHATE’s built-in function.</p>
      <p id="Par28">Compared to PCA and ICA, SCA consistently generates more structured UMAP plots downstream, with clearer visual separation between cell types. UMAP plots computed from PCA, ICA, and SCA are shown for patient 1 in Fig. <xref rid="Fig4" ref-type="fig">4</xref>a, and similar UMAP plots for the remaining patients and reductions are provided in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4. We observe similar improvements when plotting the first two components of each reduction against each other (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S5). We hypothesized that this separation leads to more accurate clusterings downstream. To test this theory, we performed Leiden clustering [<xref ref-type="bibr" rid="CR31">31</xref>] on each representation with resolution 1.0 and computed the adjusted mutual information (AMI) between the Leiden clusters and the true cell labels [<xref ref-type="bibr" rid="CR32">32</xref>]. For further comparison, we also computed AMIs for Leiden clusterings computed from GeoSketch and Hopper reductions, and clusterings returned by GiniClust3 [<xref ref-type="bibr" rid="CR16">16</xref>], CellSIUS [<xref ref-type="bibr" rid="CR17">17</xref>], and RaceID [<xref ref-type="bibr" rid="CR15">15</xref>]. Across all patients, the SCA-derived Leiden clusterings achieved the highest AMI with the true cell labels (Fig. <xref rid="Fig4" ref-type="fig">4</xref>b). Thus, SCA representations enable more accurate downstream recovery of cellular populations in a sample.<fig id="Fig4"><label>Fig. 4</label><caption><p>SCA outperforms many other methods, both general and problem-specific, at rare and subtly defined cell type discovery on a large PBMC dataset with ground-truth cell labels. <bold>a</bold> UMAP plots computed from PCA, ICA, and SCA reductions of T cell scRNA-seq data for patient 1 from the Hao et al. [<xref ref-type="bibr" rid="CR6">6</xref>] dataset. Cell type labels were determined by the original authors via parallel screening of 228 antibodies using CITE-seq. <bold>b</bold> Adjusted mutual information (AMI) of true cell labels with clusters output by each of the 11 methods tested in each patient (FiRE does not output a clustering but a rareness score and thus is not amenable to AMI analysis). For PCA, ICA, SCA, and scVI, we perform Leiden clustering with resolution 1.0 after reduction. SCA-based clusterings consistently have higher AMI with the true labels. <bold>c</bold> F1 scores for recovery of all T cell subtypes across all 8 patients of the dataset from Hao et al., from PCA, ICA, and SCA followed by Leiden clustering with resolution 1.0, and from nine other methods. For each clustering and cell type, the set of clusters best identifying that cell type was selected, and the F1 score reported</p></caption><graphic xlink:href="13059_2023_2998_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par29">To determine the accuracy with which SCA and other methods detect each of the known cellular populations, we used the F1 score measure (Methods). Across all donors, we found that SCA consistently ranks among the highest F1 scores, with some cell types recoverable only by SCA (Fig. <xref rid="Fig4" ref-type="fig">4</xref>c). For example, in patient 1, SCA recovers CD4 cytotoxic T lymphocytes (CD4 CTL), a subtly defined population distinguished from CD8 CTLs mainly by the presence of CD4, with F1 score 0.97. As notable exceptions, CellSIUS and GiniClust perform exceptionally well on the CD4 proliferating population, with CellSIUS also outperforming other methods on the CD8 proliferating and double-negative T populations. We suspect that the Leiden clusterings under-perform here due to theoretical limitations of community-detection algorithms to detect very small populations, as discussed in Kumpula et al. [<xref ref-type="bibr" rid="CR33">33</xref>].</p>
    </sec>
    <sec id="Sec7">
      <title>SCA improves graph-based imputation</title>
      <p id="Par30">Dropouts and technical noise often obscure gene-gene relationships in single-cell data. Imputation aims to recover lost transcripts and restore these relationships. MAGIC [<xref ref-type="bibr" rid="CR3">3</xref>] tackles imputation by constructing a diffusion operator to share information across similar cells, achieving better recovery of gene-gene interactions than a variety of other methods, including simple <italic>k</italic>-NN imputation, low-rank approximation, and smoothing based on diffusion components [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR34">34</xref>, <xref ref-type="bibr" rid="CR35">35</xref>]. By default, MAGIC computes cellular similarity using the Euclidean distance in PCA space. Since SCA better separates biological cell types, we pursued the intuition that using Euclidean distance in an SCA reduction would allow MAGIC to build a better diffusion operator, yielding more accurate imputation. We therefore formulated <italic>SCA-MAGIC</italic>, which performs diffusion over an SCA embedding instead of a PCA embedding (Methods).</p>
      <p id="Par31">To test the ability of each method to recover dropouts from the 1000-cell Splatter synthetic dataset analyzed in Fig. <xref rid="Fig2" ref-type="fig">2</xref>b–e, we performed imputation using MAGIC and SCA-MAGIC and measured the Pearson correlation between the imputed values of the marker genes and an artificial “ground-truth” marker gene expressing 1 transcript on each rare cell and 0 transcripts elsewhere (due to normalization, the number of transcripts expressed in the rare population does not affect the Pearson correlation). We also tested SAVER [<xref ref-type="bibr" rid="CR36">36</xref>], another imputation approach that uses regression instead of diffusion. As shown in Fig. <xref rid="Fig5" ref-type="fig">5</xref>a, SCA-MAGIC achieves the highest correlation between imputed marker genes and the ground-truth marker gene (correlation <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sim 0.7$$\end{document}</tex-math><mml:math id="M18"><mml:mrow><mml:mo>∼</mml:mo><mml:mn>0.7</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq9.gif"/></alternatives></inline-formula>).<fig id="Fig5"><label>Fig. 5</label><caption><p>Imputation performance using SAVER, MAGIC and our SCA-MAGIC. <bold>a</bold> Recovery of marker genes on the Splatter dataset analyzed in Fig. <xref rid="Fig2" ref-type="fig">2</xref>b–e. For each method, we measure the average correlation between the marker genes after imputation and an indicator vector for the rare cells. MAGIC achieves significantly higher correlation using SCA as a base embedding (SCA-MAGIC). <bold>b</bold> Visualizing gene-gene relationships in cytotoxic T cell data after imputation using SAVER, MAGIC or our SCA-MAGIC. SCA-MAGIC better recovers the inverse relationships between CD8 and CD4 and between granzyme B and granzyme K, with gamma-delta T cells expressing neither CD8 nor CD4 and lower granzyme expression for T helper cells. <bold>c</bold> Scatter plot showing dropout recovery in the cytotoxic T cell dataset at various dropout rates. A fixed percentage of nonzero transcript measurements were set to zero, and the mean imputed values of these removed transcripts were assessed for each gene. While MAGIC and SCA-MAGIC perform similarly on most genes, SCA-MAGIC consistently performs better on a subset of them, measured by dropout rate. <bold>d</bold> A closer look at the genes where SCA-MAGIC significantly outperforms MAGIC in recovering dropouts at the 90% dropout rate. They include many key marker genes such as <italic>CD8A</italic>, <italic>CD8B</italic>, <italic>CD4</italic>, emphTIGIT, and <italic>TRDV2</italic></p></caption><graphic xlink:href="13059_2023_2998_Fig5_HTML" id="MO5"/></fig></p>
      <p id="Par32">To assess recovery of gene-gene relationships, we ran MAGIC and SCA-MAGIC on the cytotoxic T cells from [<xref ref-type="bibr" rid="CR14">14</xref>]. We find that SCA-MAGIC best recovers the complementary relationship between CD8 expression and CD4 expression among alpha-beta T cells, with T helper cells having high CD4 levels and gamma-delta T cells expressing neither surface receptor, consistent with the literature [<xref ref-type="bibr" rid="CR11">11</xref>, <xref ref-type="bibr" rid="CR37">37</xref>] (Fig. <xref rid="Fig5" ref-type="fig">5</xref>b, top). Both MAGIC and SCA-MAGIC report an inverse relationship between the expression levels of granzyme B and granzyme K. However, SCA-based MAGIC assigns the T helper cells lower granzyme B levels than the other populations. This finding is concordant with flow-cytometry results, which indicate that CD8+ T cells are the primary secretors of granzyme B [<xref ref-type="bibr" rid="CR38">38</xref>]. SAVER-imputed data does not show smooth correlations and resembles the raw data.</p>
      <p id="Par33">To compare dropout recovery of MAGIC and SCA-MAGIC on real data, we created low-coverage versions of the cytotoxic T cell dataset by setting 10%, 30%, 50%, or 90% of the nonzero transcript counts to zero and examined the values of these dropped-out transcripts after imputation. Higher imputed values indicate better transcript recovery. For most genes, SCA-MAGIC and MAGIC perform similarly (Fig. <xref rid="Fig5" ref-type="fig">5</xref>c). However, SCA-MAGIC outperforms MAGIC on a small set of key marker genes, including <italic>CD8A</italic>, <italic>CD8B</italic>, <italic>CD4</italic>, <italic>TIGIT</italic>, <italic>KLRC1</italic>, and the gamma-delta marker genes <italic>TRDV2</italic> and <italic>TRGV9</italic> (Fig. <xref rid="Fig5" ref-type="fig">5</xref>d). Since these genes define important T cell subclasses, this improvement is consequential.</p>
      <p id="Par34">The creation of false positive signals is a concern in imputation [<xref ref-type="bibr" rid="CR39">39</xref>]. We found that SCA-MAGIC performed at least as well as MAGIC at avoiding creation of false positive gene counts and artificial marker genes (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S7).</p>
    </sec>
    <sec id="Sec8">
      <title>SCA scales to large datasets</title>
      <p id="Par35">As improving technologies generate ever larger datasets, the computational tools used to analyze these datasets must scale accordingly. SCA meets this need with fast runtimes and modest memory overhead. Asymptotically, SCA’s runtime and memory overhead are both linear in the size of the input dataset (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 2; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S1). To test this empirically, we measured runtime and peak memory usage for one iteration of SCA on data of varying sizes (Fig. S<xref rid="MOESM1" ref-type="media">1</xref>). We produced test datasets by taking random subsets of patient 1’s T cell data from Hao et al. [<xref ref-type="bibr" rid="CR6">6</xref>] with varying numbers of cells and genes. For all tests, we used a neighborhood size of 15. As expected, we find SCA’s runtime and memory performance <italic>scale linearly</italic> with increasing numbers of cells. On a subset with 9000 cells and over 20,000 genes, SCA takes 3 min and 15 s to run with a peak allocation of 561 MB. This is only slightly slower than PCA, which finishes in 2 min and 10 s and allocates 179 MB (ICA is somewhat more computationally demanding, requiring 266 s and allocating over 4GB). SCA’s linear scaling makes it tractable even on the very largest single-cell datasets; for example, on a mouse brain dataset from Saunders et al. with 939,489 cells and 20,658 genes [<xref ref-type="bibr" rid="CR4">4</xref>], SCA runs in 5.5 h and allocates a maximum of about 29 GB, well within the range of most modern day computers. Sub-sampling techniques that preserve rare cell types, such as Hopper [<xref ref-type="bibr" rid="CR20">20</xref>] and Geosketch [<xref ref-type="bibr" rid="CR19">19</xref>], may be combined with SCA to enable fine-grained analyses of these massive datasets even on a laptop. We can reduce the memory overhead further by processing the data in chunks containing a user-specified number of genes (Methods). Chunk size is implemented as a parameter in the core function of SCA’s Python package.</p>
    </sec>
    <sec id="Sec9">
      <title>SCA performs well in the presence of batch effects</title>
      <p id="Par36">Single-cell experiments often include data from different samples, and sometimes different donors, introducing unwanted technical variation known as batch effects. While SCA is not designed to remove batch effects, we aimed to verify that its signal-boosting procedure does not emphasize them at the expense of true biological variation. To this end, we obtained scRNA-seq data comprising approximately 70,000 CD34+ cells from 3 human donors [<xref ref-type="bibr" rid="CR40">40</xref>], combined the data without performing batch correction, computed PCA and SCA reductions with 20 components each, and assessed the impact of donor on each reduction. UMAP plots downstream of SCA showed significantly more overlap between donors than those downstream of PCA, and performing more iterations of SCA increased the degree of overlap between donors while keeping biological cell type separate (Fig. <xref rid="Fig6" ref-type="fig">6</xref>a). To quantify this finding, we used the silhouette score [<xref ref-type="bibr" rid="CR41">41</xref>] to measure separation between donors and between cell types. The donor silhouette score is lower when using SCA, and decreases with more iterations, indicating better batch integration (Fig. <xref rid="Fig6" ref-type="fig">6</xref>b). By contrast, the cell type silhouette score was higher for SCA than for PCA, consistent with our other results. Thus, SCA’s reductions emphasize cell type-related biological differences over technical batch effects.<fig id="Fig6"><label>Fig. 6</label><caption><p><bold>a</bold> UMAP plots downstream of PCA and SCA on CD34+ immune cell data with 7 cell types and 3 donors. With further iterations, batches appear more integrated (top) whereas cell types remain separate (bottom). <bold>b</bold> Silhouette scores of the donor and cell type groupings, using Euclidean distance downstream of PCA or SCA. The donor silhouette score decreases with further iterations of SCA (left), whereas the cell type silhouette score remains above that of PCA (right)</p></caption><graphic xlink:href="13059_2023_2998_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec10">
    <title>Discussion</title>
    <p id="Par37">SCA offers an information-theoretic approach to measuring and extracting salient transcriptional signals in single-cell data, enabling downstream analyses at unprecedented resolution. By iteratively boosting the locality-specific signal of individual transcripts, SCA uncovers clinically relevant immunological populations that are invisible to existing approaches.</p>
    <p id="Par38">A variety of approaches have arisen that are specifically tailored to the problem of rare cell type recovery. However, we find that these methods have limiting assumptions [<xref ref-type="bibr" rid="CR16">16</xref>, <xref ref-type="bibr" rid="CR18">18</xref>] or rely on potentially inaccurate or ill-defined clustering procedures [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR17">17</xref>] that limit performance. GiniClust [<xref ref-type="bibr" rid="CR16">16</xref>] assumes that genes with high Gini index are the most important; yet, we demonstrated that this is not always the case (e.g., the marker genes in the synthetic dataset were not marked as having high-Gini index by the algorithm). RaceID and CellSIUS both compute initial clusterings which are then individually refined. However, an accurate initial clustering may be difficult to obtain when cell types of interest are rare or subtly defined, and cluster-based approaches are unsuitable when cells form more continuous transcriptional structures, such as developmental trajectories, which do not neatly partition [<xref ref-type="bibr" rid="CR42">42</xref>]. On the other hand, FiRE [<xref ref-type="bibr" rid="CR18">18</xref>] sidesteps the limitations of clustering by assigning each cell a rarity score according to its degree of isolation, but the notion of isolation in turn relies on a meaningful cell-to-cell distance metric, which is not readily derived. Hopper [<xref ref-type="bibr" rid="CR20">20</xref>] reduces the data in the hopes of increasing the proportion of rare cells, but its approach requires a reliable distance metric and requires discarding observations. For the latter two methods, one might improve performance by using Euclidean distance in an SCA representation as a distance metric. Our work suggests that the right dimensionality reduction can enable recovery of even rare and subtly defined populations.</p>
    <p id="Par39">SCA’s surprisal scores are similar in principle to the inverse document frequency (IDF) transform, a normalization approach widely used in text processing and in some single-cell applications, whereby each feature (gene) is weighted by the logarithm of its inverse frequency [<xref ref-type="bibr" rid="CR43">43</xref>]. Like SCA, IDF gives rarely seen features more weight; however, it does not consider the locality-specific context of each feature measurement, so it lacks the statistical power to detect locally enriched signals. By incorporating counts from local neighborhoods of each cell, SCA allows genes to have variable scores across the dataset, achieving high-magnitude scores where they are discriminative and near-zero scores where they are noise (Fig. <xref rid="Fig1" ref-type="fig">1</xref>c). Our approach is designed to reflect true biology, where genes may be expressed sporadically across the entire dataset but mark informative distinctions only within a small subpopulation.</p>
    <p id="Par40">SCA is also conceptually similar to surprisal analysis [<xref ref-type="bibr" rid="CR44">44</xref>], which compares observed data to a pre-computed balance state to identify meaningful deviations. Originally developed for thermodynamics, these methods have recently found use in <italic>bulk</italic> transcriptomic analysis of biological systems in flux, such as cancer cells undergoing epithelial-to-mesenchymal transition and carcinogenesis [<xref ref-type="bibr" rid="CR45">45</xref>–<xref ref-type="bibr" rid="CR48">48</xref>]. For example, Gross et al. [<xref ref-type="bibr" rid="CR45">45</xref>] perform singular value decomposition on a surprisal matrix derived from time series micro-arrays to identify bulk transcriptomic signatures that predict eventual malignancy. In their work, the surprisal of a transcript is defined by the negative logarithmic fold change of the transcript from its value in the balance state. We attempted to generalize this idea to single-cell data by treating each cell as a separate time point, and computing surprisals as negative log-fold changes between observed transcript counts and transcript expression means across all cells. However, we show this extended notion of surprisal is under-powered and inaccurate for single-cell data (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 5; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S6), because individual transcript counts are themselves noisy. For example, on the cytotoxic T cell dataset, this approach fails to separate CD8 from CD4 T cells (Fig. S<xref rid="MOESM1" ref-type="media">6</xref>). SCA’s novel approach of testing expression in <italic>neighborhoods</italic> of cells instead of individual cells lends statistical power and limits the impact of noise and dropouts, especially in combination with the robust Wilcoxon test.</p>
    <p id="Par41">Data visualization, which features prominently in many single-cell pipelines [<xref ref-type="bibr" rid="CR12">12</xref>, <xref ref-type="bibr" rid="CR49">49</xref>], differs from dimensionality reduction, on which we focus. Whereas visualization aims to produce a two-dimensional rendering of the data, dimensionality reduction produces a smaller, but still many-dimensional representation which is then analyzed further downstream. Thus, data visualization tools complement dimensionality reduction rather than substitute for it. Indeed, visualizations are often built on dimensionality-reduced data; for example, UMAP plots in existing literature are often computed on PCA or ICA reductions [<xref ref-type="bibr" rid="CR4">4</xref>, <xref ref-type="bibr" rid="CR50">50</xref>]. SCA complements existing visualization tools to facilitate exploratory analysis (Figs. <xref rid="Fig4" ref-type="fig">4</xref>a, <xref rid="Fig3" ref-type="fig">3</xref>a, and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S4).</p>
    <p id="Par42">SCA also combines well with <italic>sketching</italic> techniques, such as Geosketch [<xref ref-type="bibr" rid="CR19">19</xref>] and Hopper [<xref ref-type="bibr" rid="CR20">20</xref>], which generate subsamples of cells that retain transcriptional diversity. In turn, these sketching techniques rely on a low-dimensional representation of cells, which SCA may provide. As motivation for the latter, we have shown that SCA is better at identifying rare cell types than these sketching techniques.</p>
    <p id="Par43">Although the process that generates the surprisal components is nonlinear, requiring nearest-neighbor graphs and Wilcoxon score computation, SCA’s output is a linear projection of its input. This places SCA firmly in the linear category, together with PCA and ICA; indeed, for fixed dimension <italic>D</italic>, the coordinate systems defined by SCA and by these methods are related by rotation in the original high-dimensional space. Intuitively, SCA changes the “perspective” from which the data is viewed. It is remarkable, then, that SCA’s reductions look so different in downstream analyses from those of PCA and ICA (e.g., Fig. <xref rid="Fig3" ref-type="fig">3</xref>a). This observation is possibly because high-dimensional space offers a far wider variety of perspectives than the three-dimensional space we often think in, giving linear methods more richness than they are usually credited for.</p>
  </sec>
  <sec id="Sec11">
    <title>Conclusion</title>
    <p id="Par44">Dimensionality reduction addresses the underlying goal of nearly all single-cell analytic pipelines―to determine which cells are phenotypically similar to one another or, in mathematical terms, to derive a biologically meaningful metric between cells. If we could meet this goal perfectly, we could immediately obtain perfect clusterings of single-cell data (each cluster would be a connected component of the <italic>k</italic>-nearest neighbor graph), perform perfect batch correction (by integrating cells based on phenotypic similarity), and substantially improve trajectory inference (by connecting similar cells along a continuous path). Dimensionality reduction represents single-cell data in a lower-dimensional Euclidean space, which inherits natural metrics (e.g., the standard Euclidean distance). Using information theory, SCA provides an embedding where Euclidean distance better captures biological similarity, causing cells with similar phenotypes to cluster together.</p>
  </sec>
  <sec id="Sec12">
    <title>Methods</title>
    <sec id="Sec13">
      <title>Details of the SCA Algorithm</title>
      <sec id="Sec14">
        <title>Surprisal matrix computation (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 1).</title>
        <p id="Par45">Given the input data <italic>X</italic> with <italic>N</italic> cells and <italic>M</italic> genes, a target dimensionality <italic>D</italic>, and a neighborhood size <italic>k</italic>, we first compute a <italic>D</italic>-dimensional PCA reduction of <italic>X</italic>. Using Euclidean distance in this PCA space, we compute for each cell <italic>c</italic> a neighborhood <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_k(c)$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq10.gif"/></alternatives></inline-formula> containing the <italic>k</italic> nearest cells. Alternatively, the user may specify neighborhoods manually as lists of indices.</p>
        <p id="Par46">For each gene <italic>g</italic> and cell <italic>c</italic>, we then assess the significance of <italic>g</italic>’s expression in <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_k(c)$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq11.gif"/></alternatives></inline-formula> as compared to its global expression. Under the null hypothesis, where <italic>g</italic> is randomly expressed, the local distribution <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_k(c)$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq12.gif"/></alternatives></inline-formula> should be similar to the global expression. Using a Wilcoxon rank-sum test, we obtain a two-sided <italic>p</italic>-value <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{c,g}$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq13.gif"/></alternatives></inline-formula> representing the probability of the observed difference under this null hypothesis. We also offer two alternative <italic>p</italic>-values based on different models: a <italic>t</italic>-test, and a binomial test using only the binarized counts. We strongly recommend the Wilcoxon model for its flexibility to a wide range of data distributions, and robustness to different pre-processing protocols.</p>
        <p id="Par47">Small <italic>p</italic>-values indicate very unlikely events under the null hypothesis, leading to high surprisal. However, since tens of thousands of genes are often measured for each cell, we would expect <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{c,g}$$\end{document}</tex-math><mml:math id="M28"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq14.gif"/></alternatives></inline-formula> to be very low for some cell-gene combinations even in the absence of true biological signal. We therefore adjust for multiple-testing within each cell using a family-wise error rate correction. If we assume that genes are uncorrelated, this correction takes the form<disp-formula id="Equ1"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \tilde{p}_{c,g}=1-(1-p_{c,g})^{M} \end{aligned}$$\end{document}</tex-math><mml:math id="M30" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mi>M</mml:mi></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ1.gif" position="anchor"/></alternatives></disp-formula>where <italic>M</italic> is the number of genes. The corrected value <inline-formula id="IEq15"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{p}_{c,g}$$\end{document}</tex-math><mml:math id="M32"><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq15.gif"/></alternatives></inline-formula> represents the probability that <italic>any</italic> gene has the observed deviation from the null distribution in <italic>c</italic>’s neighborhood. However, in real single-cell data, genes are often highly correlated, so the effective number of independent features is far fewer than <italic>M</italic>. As detailed in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 4 and Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 3, we can identify a reasonable exponent <inline-formula id="IEq16"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M34"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq16.gif"/></alternatives></inline-formula> by sampling many random sets of <italic>k</italic> cells from <italic>X</italic>, computing <italic>p</italic>-values from these random neighborhoods, and observing the distribution of these <italic>p</italic>-values. This provides a background model for contextualizing the <inline-formula id="IEq17"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p_{c,g}$$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq17.gif"/></alternatives></inline-formula> values computed from the actual locally derived <italic>k</italic>-nearest neighborhoods and leads to the correction<disp-formula id="Equ2"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \tilde{p}_{c,g}=1-(1-p_{c,g})^{N_t} \end{aligned}$$\end{document}</tex-math><mml:math id="M38" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msup><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:msup></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ2.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq18"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M40"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq18.gif"/></alternatives></inline-formula> is often far less than <italic>M</italic>. When <inline-formula id="IEq19"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq19.gif"/></alternatives></inline-formula> is computed as in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 4, SCA does not produce erroneous clusters on negative control datasets which lack intrinsic structure, and randomly generated neighborhoods yield scores clustered around zero (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 3; Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S3). SCA computes <inline-formula id="IEq20"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M44"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq20.gif"/></alternatives></inline-formula> in this way by default; however, users may also manually define <inline-formula id="IEq21"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N_t$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>N</mml:mi><mml:mi>t</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq21.gif"/></alternatives></inline-formula> to adjust the balance between sensitivity and specificity.</p>
        <p id="Par48">We next convert the corrected <italic>p</italic>-values <inline-formula id="IEq22"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{p}_{c,g}$$\end{document}</tex-math><mml:math id="M48"><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq22.gif"/></alternatives></inline-formula> into surprisal scores <italic>I</italic>(<italic>c</italic>, <italic>g</italic>). Shannon [<xref ref-type="bibr" rid="CR24">24</xref>] defines the <italic>surprisal</italic> or <italic>self-information</italic> of an event with probability <italic>p</italic> as <inline-formula id="IEq23"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\log (p)$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mi>p</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq23.gif"/></alternatives></inline-formula>. Intuitively, less probable events are more informative when they occur. For a given cell <italic>c</italic> and gene <italic>g</italic>, <inline-formula id="IEq24"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{p_{c,g}}$$\end{document}</tex-math><mml:math id="M52"><mml:mover accent="true"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq24.gif"/></alternatives></inline-formula> is the probability of the event that that one of <italic>c</italic>’s genes has a local distribution at least as extreme as the observed distribution of <italic>g</italic>, under the null hypothesis of random gene expression. Thus, <inline-formula id="IEq25"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-\log (\tilde{p_{c,g}})$$\end{document}</tex-math><mml:math id="M54"><mml:mrow><mml:mo>-</mml:mo><mml:mo>log</mml:mo><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:msub><mml:mi>p</mml:mi><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq25.gif"/></alternatives></inline-formula> is the surprisal of this event and defines the magnitude of <italic>I</italic>(<italic>c</italic>, <italic>g</italic>).</p>
        <p id="Par49">To distinguish over-expression from under-expression, we give <italic>I</italic>(<italic>c</italic>, <italic>g</italic>) a positive sign if <italic>g</italic> is over-expressed in <italic>c</italic>’s neighborhood and a negative sign if it is under-expressed. Under the Wilcoxon model, over- or under-expression is determined by the sum of the ranks of <italic>g</italic>’s values in the <italic>k</italic>-neighborhood of <italic>c</italic> among all values <italic>g</italic> takes, which we denote <inline-formula id="IEq26"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\text {ranksum}(g, N_k(c))$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:mtext>ranksum</mml:mtext><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq26.gif"/></alternatives></inline-formula>. Under the null hypothesis, this quantity follows a normal distribution with mean <inline-formula id="IEq27"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{k(N-k)}{2}$$\end{document}</tex-math><mml:math id="M58"><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq27.gif"/></alternatives></inline-formula>. Thus, we obtain<disp-formula id="Equ3"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(c,g)=-\text {sgn}\left( \text {ranksum}(g, N_k(c))-\frac{k(N-k)}{2}\right) \log (\tilde{p}_{c,g}). \end{aligned}$$\end{document}</tex-math><mml:math id="M60" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mo>-</mml:mo><mml:mtext>sgn</mml:mtext><mml:mfenced close=")" open="("><mml:mtext>ranksum</mml:mtext><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>g</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>N</mml:mi><mml:mi>k</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>-</mml:mo><mml:mfrac><mml:mrow><mml:mi>k</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>N</mml:mi><mml:mo>-</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:mfenced><mml:mo>log</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mover accent="true"><mml:mi>p</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mrow><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mi>g</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ3.gif" position="anchor"/></alternatives></disp-formula></p>
      </sec>
      <sec id="Sec15">
        <title>Computing surprisal components</title>
        <p id="Par50">From the surprisal scores <italic>I</italic>(<italic>c</italic>, <italic>g</italic>), SCA next seeks to generate an informative linear combination of genes. For a given combination defined by<disp-formula id="Equ4"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \tilde{g} = \alpha _1g_1+\alpha _2g_2+...\alpha _Mg_M \end{aligned}$$\end{document}</tex-math><mml:math id="M62" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>+</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:msub><mml:mi>g</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ4.gif" position="anchor"/></alternatives></disp-formula>we say that <inline-formula id="IEq28"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M64"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq28.gif"/></alternatives></inline-formula> has <italic>loadings</italic>
<inline-formula id="IEq29"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,...,\alpha _n$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>n</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq29.gif"/></alternatives></inline-formula>. For a fixed cell <italic>c</italic>, we formulate the surprisal score of <inline-formula id="IEq30"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M68"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq30.gif"/></alternatives></inline-formula> as<disp-formula id="Equ5"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(c, \tilde{g}) = \alpha _1I(c, g_1)+\alpha _2I(c,g_2)+...+\alpha _MI(c,g_M) \end{aligned}$$\end{document}</tex-math><mml:math id="M70" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>+</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>c</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ5.gif" position="anchor"/></alternatives></disp-formula>We then define the overall overall surprisal score of <inline-formula id="IEq31"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M72"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq31.gif"/></alternatives></inline-formula> by taking the norm over all cells:<disp-formula id="Equ6"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(\tilde{g}) = ||\langle I(c_1,\tilde{g}), I(c_2, \tilde{g}),...,I(c_N, \tilde{g})\rangle || \end{aligned}$$\end{document}</tex-math><mml:math id="M74" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">⟨</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>N</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo stretchy="false">⟩</mml:mo></mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ6.gif" position="anchor"/></alternatives></disp-formula>or, in matrix notation,<disp-formula id="Equ7"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} I(\tilde{g}) = ||{\textbf {S}}\mathbf {\alpha }^T || \end{aligned}$$\end{document}</tex-math><mml:math id="M76" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>I</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mi mathvariant="bold">S</mml:mi></mml:mrow><mml:msup><mml:mrow><mml:mi>α</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:msup><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ7.gif" position="anchor"/></alternatives></disp-formula>where <inline-formula id="IEq32"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M78"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq32.gif"/></alternatives></inline-formula> denotes the surprisal matrix and <inline-formula id="IEq33"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {\alpha }=\langle \alpha _1,...,\alpha _M\rangle$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi>α</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">⟨</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">⟩</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq33.gif"/></alternatives></inline-formula>.</p>
        <p id="Par51">We now seek the metagene <inline-formula id="IEq34"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\tilde{g}$$\end{document}</tex-math><mml:math id="M82"><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq34.gif"/></alternatives></inline-formula>, defined by the loadings <inline-formula id="IEq35"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\alpha _1,...,\alpha _N$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>N</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq35.gif"/></alternatives></inline-formula>, that maximizes <inline-formula id="IEq36"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I(\tilde{g})$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq36.gif"/></alternatives></inline-formula>. Since we can achieve arbitrarily large values of <inline-formula id="IEq37"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I(\tilde{g})$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:mi>I</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mover accent="true"><mml:mi>g</mml:mi><mml:mo stretchy="false">~</mml:mo></mml:mover><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq37.gif"/></alternatives></inline-formula> by scaling the coefficients, we constrain the loading coefficients to have norm 1, that is:<disp-formula id="Equ8"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} ||\langle \alpha _1,...,\alpha _M\rangle || = 1. \end{aligned}$$\end{document}</tex-math><mml:math id="M90" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">⟨</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>α</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo stretchy="false">⟩</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo stretchy="false">|</mml:mo><mml:mo>=</mml:mo><mml:mn>1</mml:mn><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ8.gif" position="anchor"/></alternatives></disp-formula></p>
        <p id="Par52">It is a standard linear algebra result that this maximum is realized by the leading right-eigenvector of <inline-formula id="IEq38"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{S}$$\end{document}</tex-math><mml:math id="M92"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq38.gif"/></alternatives></inline-formula> (proof in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 1 and [<xref ref-type="bibr" rid="CR51">51</xref>]). Thus, the first surprisal component loading vector is simply the first right eigenvector of <inline-formula id="IEq39"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M94"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq39.gif"/></alternatives></inline-formula>, which we denote <inline-formula id="IEq40"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {v_1}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi mathvariant="bold">v</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq40.gif"/></alternatives></inline-formula>. To obtain additional surprisal components, we repeat the optimization with the constraint<disp-formula id="Equ9"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} \mathbf {\alpha }\perp \mathbf {v_1}. \end{aligned}$$\end{document}</tex-math><mml:math id="M98" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:mi>α</mml:mi><mml:mo>⊥</mml:mo><mml:msub><mml:mi mathvariant="bold">v</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ9.gif" position="anchor"/></alternatives></disp-formula>It is straightforward to see (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 1) that this yields the second principal component loading vector <inline-formula id="IEq41"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {v_2}$$\end{document}</tex-math><mml:math id="M100"><mml:msub><mml:mi mathvariant="bold">v</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq41.gif"/></alternatives></inline-formula> of <inline-formula id="IEq42"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M102"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq42.gif"/></alternatives></inline-formula>. Continuing, we see that the loading vectors for surprisal components are simply the right eigenvectors of <inline-formula id="IEq43"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {S}}$$\end{document}</tex-math><mml:math id="M104"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq43.gif"/></alternatives></inline-formula>.</p>
        <p id="Par53">SCA next computes the values of the first <italic>D</italic> surprisal components over the <italic>input</italic> data (not the surprisal scores). That is,<disp-formula id="Equ10"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\begin{aligned} {\textbf {SC}}_i({\textbf {X}}) = {\textbf {X}}\textbf{v}_i^T. \end{aligned}$$\end{document}</tex-math><mml:math id="M106" display="block"><mml:mrow><mml:mtable><mml:mtr><mml:mtd columnalign="right"><mml:mrow><mml:msub><mml:mi mathvariant="bold">SC</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi mathvariant="bold">X</mml:mi><mml:msubsup><mml:mi mathvariant="bold">v</mml:mi><mml:mi>i</mml:mi><mml:mi>T</mml:mi></mml:msubsup><mml:mo>.</mml:mo></mml:mrow></mml:mtd></mml:mtr></mml:mtable></mml:mrow></mml:math><graphic xlink:href="13059_2023_2998_Article_Equ10.gif" position="anchor"/></alternatives></disp-formula>Note that the surprisal components are linear functions of the input data, despite the nonlinear construction of <inline-formula id="IEq44"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{S}$$\end{document}</tex-math><mml:math id="M108"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq44.gif"/></alternatives></inline-formula>. Although the loadings are computed on <inline-formula id="IEq45"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{S}$$\end{document}</tex-math><mml:math id="M110"><mml:mi mathvariant="bold">S</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq45.gif"/></alternatives></inline-formula>, the values of the components are computed by applying these loadings to <inline-formula id="IEq46"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\textbf {X}}$$\end{document}</tex-math><mml:math id="M112"><mml:mi mathvariant="bold">X</mml:mi></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq46.gif"/></alternatives></inline-formula>.</p>
        <p id="Par54">If desired, we can now use the resulting <italic>D</italic>-dimensional representation of <italic>X</italic> to compute a Euclidean <italic>k</italic>-nearest neighbor graph, compute a new surprisal matrix from these neighborhoods, and perform SVD on this new matrix to produce another <italic>D</italic>-dimensional representation of <italic>X</italic>. This can be repeated arbitrarily many times, and often improves performance up to 3–4 iterations (Fig. <xref rid="Fig3" ref-type="fig">3</xref>f, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S2).</p>
        <p id="Par55">Formal pseudocode for this algorithm is provided in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 2.</p>
      </sec>
      <sec id="Sec16">
        <title>Time and memory optimizations</title>
        <p id="Par56">Computing the surprisal scores <italic>I</italic>(<italic>c</italic>, <italic>g</italic>) for all cells <italic>c</italic> and genes <italic>g</italic> requires <italic>NM</italic> Wilcoxon rank-sum tests. However, we can rapidly produce all of the rank-sum statistics with minimal memory overhead as follows: <list list-type="order"><list-item><p id="Par57">Divide the genes into chunks of a user-specified size <italic>C</italic>, depending on memory constraints (default 1000). Let <inline-formula id="IEq47"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_1=\{g_1,...,g_C\}, G2=\{g_{C+1},....,g_{2C}\}$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>G</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mi>C</mml:mi></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow><mml:mo>,</mml:mo><mml:mi>G</mml:mi><mml:mn>2</mml:mn><mml:mo>=</mml:mo><mml:mrow><mml:mo stretchy="false">{</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mi>C</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>g</mml:mi><mml:mrow><mml:mn>2</mml:mn><mml:mi>C</mml:mi></mml:mrow></mml:msub><mml:mo stretchy="false">}</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq47.gif"/></alternatives></inline-formula>, and so on.</p></list-item><list-item><p id="Par58">For each gene chunk <inline-formula id="IEq48"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_i$$\end{document}</tex-math><mml:math id="M116"><mml:msub><mml:mi>G</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq48.gif"/></alternatives></inline-formula>: <list list-type="alpha-lower"><list-item><p id="Par59">Subset <italic>X</italic> to genes in <inline-formula id="IEq49"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$G_i$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>G</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq49.gif"/></alternatives></inline-formula>, obtaining a reduced dataset <inline-formula id="IEq50"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq50.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par60">rank each column of <inline-formula id="IEq51"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$X_i$$\end{document}</tex-math><mml:math id="M122"><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq51.gif"/></alternatives></inline-formula> to obtain a rank matrix <inline-formula id="IEq52"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M124"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq52.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par61">Multiply the neighborhood adjacency matrix <italic>A</italic> with <inline-formula id="IEq53"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M126"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq53.gif"/></alternatives></inline-formula>, yielding a rank-sum matrix over neighborhoods, denoted <inline-formula id="IEq54"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M128"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq54.gif"/></alternatives></inline-formula>, overwriting <inline-formula id="IEq55"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M130"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq55.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par62">Convert these rank-sums into <italic>p</italic>-values under to the null model, overwriting <inline-formula id="IEq56"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq56.gif"/></alternatives></inline-formula> with a <italic>p</italic>-value matrix <inline-formula id="IEq57"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_i$$\end{document}</tex-math><mml:math id="M134"><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq57.gif"/></alternatives></inline-formula></p></list-item><list-item><p id="Par63">Convert these <italic>p</italic>-values into surprisal scores, as described above and in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Algorithm 1, overwriting <inline-formula id="IEq58"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$P_i$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>P</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq58.gif"/></alternatives></inline-formula> with surprisal scores <inline-formula id="IEq59"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M138"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq59.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par64">Sparsify <inline-formula id="IEq60"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M140"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq60.gif"/></alternatives></inline-formula> and store it. (<inline-formula id="IEq61"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M142"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq61.gif"/></alternatives></inline-formula> is frequently quite sparse).</p></list-item></list></p></list-item><list-item><p id="Par65">Concatenate the matrices <inline-formula id="IEq62"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S_i$$\end{document}</tex-math><mml:math id="M144"><mml:msub><mml:mi>S</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq62.gif"/></alternatives></inline-formula> horizontally to obtain the surprisal matrix <italic>S</italic>.</p></list-item></list>Using this approach, we only need to compute ranks for each gene once, and we avoid storing dense matrices of size larger than <inline-formula id="IEq63"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$N\times C$$\end{document}</tex-math><mml:math id="M146"><mml:mrow><mml:mi>N</mml:mi><mml:mo>×</mml:mo><mml:mi>C</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq63.gif"/></alternatives></inline-formula>. Since <italic>A</italic> has at most <italic>k</italic> nonzero elements per row, the sparse matrix multiplication in step 2c requires only <italic>O</italic>(<italic>kNC</italic>) time. The remaining steps are easily accomplished with vectorized functions from scipy [<xref ref-type="bibr" rid="CR52">52</xref>] and numpy [<xref ref-type="bibr" rid="CR53">53</xref>].</p>
        <p id="Par66">With these improvements, SCA is nearly as fast as ICA and PCA, and uses significantly less memory than ICA (Additional File <xref rid="MOESM1" ref-type="media">1</xref>; Fig. S1). We include more in-depth time and memory benchmarks in Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Supplementary Note 2.</p>
      </sec>
      <sec id="Sec17">
        <title>Generating F1 scores from clusterings</title>
        <p id="Par67">To assess the accuracy with which a set of <italic>T</italic> clusters <inline-formula id="IEq64"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c_1,...,c_T$$\end{document}</tex-math><mml:math id="M148"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>T</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq64.gif"/></alternatives></inline-formula> recovers a known population <italic>P</italic>, we used the following procedure: <list list-type="order"><list-item><p id="Par68">Rank all clusters by the degree of overlap with <italic>P</italic>, i.e., by <inline-formula id="IEq65"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{|c_i\cap P|}{|c_i|}$$\end{document}</tex-math><mml:math id="M150"><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo>∩</mml:mo><mml:mi>P</mml:mi><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq65.gif"/></alternatives></inline-formula>. Ties may be handled arbitrarily. Assume without loss of generality that the indexing <inline-formula id="IEq66"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c_1,...,c_T$$\end{document}</tex-math><mml:math id="M152"><mml:mrow><mml:msub><mml:mi>c</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>.</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>T</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq66.gif"/></alternatives></inline-formula> ranks the clusters in this way. Let <italic>S</italic> be an empty set.</p></list-item><list-item><p id="Par69">for <italic>i</italic> in 1,2,...,<italic>T</italic>: <list list-type="alpha-lower"><list-item><p id="Par70">Measure the F1 score of <inline-formula id="IEq67"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\cup c_i$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:mi>S</mml:mi><mml:mo>∪</mml:mo><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq67.gif"/></alternatives></inline-formula> with respect to <italic>P</italic>.</p></list-item><list-item><p id="Par71">If this F1 score is higher than that of <italic>S</italic>, add <inline-formula id="IEq68"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$c_i$$\end{document}</tex-math><mml:math id="M156"><mml:msub><mml:mi>c</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq68.gif"/></alternatives></inline-formula> to <italic>S</italic>. Otherwise, stop and return the current F1 score of <italic>S</italic> with respect to <italic>P</italic>.</p></list-item></list></p></list-item><list-item><p id="Par72">Return the F1 score of <italic>S</italic> (if not already returned above).</p></list-item></list>If the target population is a union of clusters, this procedure is guaranteed to find it and return an F1 score of 1; otherwise, it finds a set of clusters whose union approximates <italic>P</italic> and returns the F1 score of their union with respect to <italic>P</italic>.</p>
      </sec>
      <sec id="Sec18">
        <title>Synthetic data experiments using splatter</title>
        <p id="Par73">The synthetic dataset analyzed in Fig. <xref rid="Fig2" ref-type="fig">2</xref> was generated using Splatter [<xref ref-type="bibr" rid="CR25">25</xref>]. All but two parameters were determined by fitting the PBMC dataset from [<xref ref-type="bibr" rid="CR27">27</xref>]. The fitted parameters are listed below:<list list-type="bullet"><list-item><p id="Par74">Mean rate parameter: 13.5</p></list-item><list-item><p id="Par75">Mean shape parameter: 0.583</p></list-item><list-item><p id="Par76">Library size location parameter: 7.69</p></list-item><list-item><p id="Par77">Library size scale parameter: 0.412</p></list-item><list-item><p id="Par78">Outlier probability: 0.025</p></list-item><list-item><p id="Par79">Outlier location parameter: 4.761</p></list-item><list-item><p id="Par80">Outlier scale parameter: 1.037</p></list-item><list-item><p id="Par81">Biological Coefficient of Variation dispersion: 0.2825</p></list-item><list-item><p id="Par82">Biological Coefficient of Variation degrees of freedom: 30.37</p></list-item></list>The two remaining parameters are (1) the probability of a gene being differentially expressed between the two groups and (2) the probability that a cell belongs to the smaller of the two groups (the “rare” population). We test all combinations of these two parameters for rare cell fractions ranging from 5 cells (0.5%) to 200 cells (20%) and for marker gene probabilities ranging from 0.2 to 5% in increments of 0.2%. For each combination, we generate ten synthetic datasets with different random seeds and run PCA, ICA, and SCA to make 20-dimensional representations of each replicate, keeping up to 5 iterations for SCA. We then compute Leiden clusterings on the 15-nearest Euclidean neighbor graph of each representation, with the default resolution of 1.0. From these clusterings we compute F1 scores for recovery of the rare population as described just above.</p>
        <p id="Par83">To determine how many marker genes are required to recover a population of a specific size, we filtered to all trials with the given population size, and recorded the lowest number of marker genes in any trial with F1 score greater than 0.9. We performed this analysis separately for each random seed used to generate replicates, resulting in 10 marker gene percentage values for each combination of rare cell fraction and method. These values are plotted in Fig. <xref rid="Fig2" ref-type="fig">2</xref>a.</p>
      </sec>
      <sec id="Sec19">
        <title>Cytotoxic T cell population discovery</title>
        <p id="Par84">We extracted all cytotoxic T cells from the dataset in [<xref ref-type="bibr" rid="CR14">14</xref>] using the authors’ cell type annotations, obtaining 307 cells in total. For PCA, we used scanpy’s pca function with 20 components. For ICA, we used the FastICA function of sklearn [<xref ref-type="bibr" rid="CR54">54</xref>, <xref ref-type="bibr" rid="CR55">55</xref>], again with 20 components. For SCA, we ran five iterations with 20 components each, starting with the PCA representation. We ran scVI with default parameters on the top 4000 most variable genes (we observed little difference in performance when running on all genes). 15-nearest neighbors graphs were computed in each representation using Euclidean distance, and the results were used to generate the UMAP plots in Fig. <xref rid="Fig3" ref-type="fig">3</xref>. We computed diffusion maps using the 15-nearest neighbor graph downstream of the PCA representation, keeping 20 components (eigenvalue analysis confirms that this is a reasonable number of components, with further components adding noise). We computed the PHATE representation using the default parameters of the package (100 PCs, 5-nearest neighbors). Leiden clusters in each representation were computed downstream of Euclidean 15-nearest neighbor graphs, with the default resolution of 1.0. For PHATE, we use the built-in phate.cluster.kmeans with k=5. Dotplots to show expression of key marker genes were generated using scanpy’s dotplot function.</p>
      </sec>
      <sec id="Sec20">
        <title>T cell data from Hao et al.</title>
        <p id="Par85">We obtained transcriptomic data from the authors’ website at <ext-link ext-link-type="uri" xlink:href="https://atlas.fredhutch.org/nygc/multimodal-pbmc/">https://atlas.fredhutch.org/nygc/multimodal-pbmc/</ext-link>. The log-transformed count data was subset to T cells using the authors’ annotations, yielding 73,259 T cells and 20,729 genes across all 8 patients. We then split by patient into 8 donor-specific datasets. For each donor, we computed an SCA reduction using 50 components and 5 iterations, with a neighborhood size of 100 (a larger neighborhood size is appropriate for larger datasets; neighborhood size did not greatly affect performance). Fifty principal components were computed using scanpy’s pca function, and 50 independent components were computed with the FastICA implementation provided by scikit-learn [<xref ref-type="bibr" rid="CR54">54</xref>, <xref ref-type="bibr" rid="CR55">55</xref>]. To ensure convergence of FastICA, we raised the maximum number of iterations to 500 from the default of 200. We ran scVI with default parameters (learning rate 0.001, 400 warmup epochs for KL divergence term) and a 50-dimensional latent embedding space to match the dimensionality of the PCA, ICA, and SCA embeddings. Diffusion maps were likewise computed in 50 dimensions. We computed 15-nearest-neighbor graphs in each representation using the Euclidean distance metric, then ran UMAP [<xref ref-type="bibr" rid="CR12">12</xref>] and Leiden clustering [<xref ref-type="bibr" rid="CR31">31</xref>] on the resulting neighborhood graphs. For Leiden clustering, we use the default resolution of 1.0. PHATE embedding and clustering was run with default parameters using the phate Python package [<xref ref-type="bibr" rid="CR9">9</xref>].</p>
      </sec>
      <sec id="Sec21">
        <title>Imputation using MAGIC</title>
        <p id="Par86">To create SCA-MAGIC, we used the graphtools package to build a diffusion operator based on a 20-dimensional SCA reduction, with default parameters inherited from MAGIC (<italic>knn = 5</italic>, <italic>knn_max = 15</italic>, <italic>decay = 1</italic>, <italic>thresh = 0.0001</italic>). We used the same parameters to construct an analogous operator from a 20-dimensional PCA embedding. We then build MAGIC instances from these two operators, with time parameter <italic>t = 5</italic>, and compare performance on various datasets.</p>
        <p id="Par87">To generate artificial dropouts in the cytotoxic T cell data, we replaced a random subset of the pooled nonzero transcript measurements with zeros, comprising either 10%, 30%, 50%, or 90% of the total nonzero measurements. After performing imputation, we re-examined the transcripts that had been eliminated and checked whether they had been restored. High imputed values indicate well-restored transcripts.</p>
      </sec>
      <sec id="Sec22">
        <title>CD34+ immune cells for batch performance benchmarking</title>
        <p id="Par88">We downloaded the training data from the multimodal single-cell integration challenge [<xref ref-type="bibr" rid="CR40">40</xref>], consisting of 70,988 cells from 3 donors. The data were pre-processed by the original authors using a log transcripts-per-million transformation; we applied no further processing and used the cell types from the original authors to compute silhouette scores and visualize the data. We performed SCA with a wilcoxon scoring model and the default neighborhood size of 15, reducing to 20 components.</p>
      </sec>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec23">
      <title>Supplementary information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2023_2998_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Contains proofs of key mathematical results, formal descriptions of the algorithms underlying SCA, and results of additional experiments testing SCA’s performance and robustness.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2023_2998_MOESM2_ESM.docx">
            <caption>
              <p><bold>Additional file 2.</bold> Contains the review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>The authors are grateful to Ashwin Narayan, Brian Hie, Hyunghoon Cho, Sarah Nyquist, Rohit Singh, Ellen Zhong, and other members of the Berger lab for their continual support and helpful feedback. We also thank Josh Peters, Bryan Bryson, and Cheng-Zhong Zhang for helpful conversations on SCA’s applications and valuable suggestions for biological applications.</p>
    <sec id="FPar1">
      <title>Review history</title>
      <p id="Par89">The review history is available as Additional File <xref rid="MOESM2" ref-type="media">2</xref>.</p>
    </sec>
    <sec id="FPar2">
      <title>Peer review information</title>
      <p id="Par90">Veronique van den Berghe was the primary editor of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors’ contributions</title>
    <p>B. DeMeo developed SCA’s source code, ran the benchmarking experiments, and generated all figures. B. Berger guided methodological development, proposed benchmarks, and helped analyze results. Both authors wrote the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding provided by the MIT Libraries. This work was supported by the National Institutes of Health R01HG010959 and the National Institutes of Health 1R35GM141861.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>SCA is implemented in Python, installed on PyPi for ease of use, fully documented, and offers ready integration with scanpy, a popular scRNA processing framework. Its source code is available under the MIT open source license, and the latest version can be found at <ext-link ext-link-type="uri" xlink:href="https://github.com/bendemeo/shannonca">https://github.com/bendemeo/shannonca</ext-link> [<xref ref-type="bibr" rid="CR56">56</xref>]. A stable release is also available on Zenodo (doi:10.5281/zenodo.7854155, [<xref ref-type="bibr" rid="CR57">57</xref>]). API documentation, installation instructions, and vignettes can be found at <ext-link ext-link-type="uri" xlink:href="https://shannonca.readthedocs.io">https://shannonca.readthedocs.io</ext-link>. For convenience, links to these pages are compiled along with a brief description of the method at <ext-link ext-link-type="uri" xlink:href="http://sca.csail.mit.edu/">http://sca.csail.mit.edu/</ext-link>.</p>
    <p> The SMART-seq3 data containing cytotoxic T cells has been deposited by the original authors under ArrayExpress E-MTAB-8735 at the European Bioinformatics Institute [<xref ref-type="bibr" rid="CR58">58</xref>]. The T cell data from Hao et. al. [<xref ref-type="bibr" rid="CR6">6</xref>] is available through GEO (GEO: GSE128639, [<xref ref-type="bibr" rid="CR59">59</xref>]). The CD34+ immune cell dataset used for batch performance benchmarking is available as training data for the online Kaggle competition at <ext-link ext-link-type="uri" xlink:href="https://www.kaggle.com/competitions/open-problems-multimodal/data">https://www.kaggle.com/competitions/open-problems-multimodal/data</ext-link>.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par91">Not applicable.</p>
    </notes>
    <notes id="FPar4">
      <title>Consent for publication</title>
      <p id="Par92">Not applicable.</p>
    </notes>
    <notes id="FPar5" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par93">The authors declare no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Park JH, Lee HK. Function of γδ T cells in tumor immunology and their application to cancer therapy. Exp Mol Med. 2021;53(3):318–27.</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Parrot T, Healy K, Boulouis C, Sobkowiak MJ, Leeansyah E, Aleman S, et al. Expansion of donor-unrestricted MAIT cells with enhanced cytolytic function suitable for TCR redirection. JCI Insight. 2021;6(5).</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Van Dijk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Sharma</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Nainys</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yim</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kathail</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Carr</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Recovering gene interactions from single-cell data using data diffusion</article-title>
        <source>Cell.</source>
        <year>2018</year>
        <volume>174</volume>
        <issue>3</issue>
        <fpage>716</fpage>
        <lpage>729</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2018.05.061</pub-id>
        <?supplied-pmid 29961576?>
        <pub-id pub-id-type="pmid">29961576</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Saunders</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Macosko</surname>
            <given-names>EZ</given-names>
          </name>
          <name>
            <surname>Wysoker</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goldman</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Krienen</surname>
            <given-names>FM</given-names>
          </name>
          <name>
            <surname>de Rivera</surname>
            <given-names>H</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Molecular diversity and specializations among the cells of the adult mouse brain</article-title>
        <source>Cell.</source>
        <year>2018</year>
        <volume>174</volume>
        <issue>4</issue>
        <fpage>1015</fpage>
        <lpage>1030</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cell.2018.07.028</pub-id>
        <?supplied-pmid 30096299?>
        <pub-id pub-id-type="pmid">30096299</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zheng</surname>
            <given-names>GX</given-names>
          </name>
          <name>
            <surname>Terry</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Belgrader</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ryvkin</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Bent</surname>
            <given-names>ZW</given-names>
          </name>
          <name>
            <surname>Wilson</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Massively parallel digital transcriptional profiling of single cells</article-title>
        <source>Nat Commun.</source>
        <year>2017</year>
        <volume>8</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/ncomms14049</pub-id>
        <pub-id pub-id-type="pmid">28232747</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Hao Y, Hao S, Andersen-Nissen E, Mauck WM, Zheng S, Butler A, Lee MJ, Wilk AJ, Darby C, Zager M, Hoffman P. Integrated analysis of multimodal single-cell data. Cell. 2021;184(13):3573–87.</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Nascimento M, Silva FFe, Sáfadi T, Nascimento ACC, Ferreira TEM, Barroso LMA, et al. Independent component analysis (ICA) based-clustering of temporal RNA-seq data. PLoS ONE. 2017;12(7):e0181195.</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lopez</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Regier</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Cole</surname>
            <given-names>MB</given-names>
          </name>
          <name>
            <surname>Jordan</surname>
            <given-names>MI</given-names>
          </name>
          <name>
            <surname>Yosef</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Deep generative modeling for single-cell transcriptomics</article-title>
        <source>Nat Methods.</source>
        <year>2018</year>
        <volume>15</volume>
        <issue>12</issue>
        <fpage>1053</fpage>
        <lpage>1058</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-018-0229-2</pub-id>
        <?supplied-pmid 30504886?>
        <pub-id pub-id-type="pmid">30504886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Moon</surname>
            <given-names>KR</given-names>
          </name>
          <name>
            <surname>van Dijk</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>Z</given-names>
          </name>
          <name>
            <surname>Gigante</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Burkhardt</surname>
            <given-names>DB</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>WS</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Visualizing structure and transitions in high-dimensional biological data</article-title>
        <source>Nat Biotechnol.</source>
        <year>2019</year>
        <volume>37</volume>
        <issue>12</issue>
        <fpage>1482</fpage>
        <lpage>1492</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-019-0336-3</pub-id>
        <?supplied-pmid 31796933?>
        <pub-id pub-id-type="pmid">31796933</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Coifman RR, Lafon S, Lee AB, Maggioni M, Nadler B, Warner F, et al. Geometric diffusions as a tool for harmonic analysis and structure definition of data: diffusion maps. Proc Natl Acad Sci. 2005;102(21):7426–31.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Holtmeier W, Kabelitz D. <inline-formula id="IEq75"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\gamma \delta$$\end{document}</tex-math><mml:math id="M158"><mml:mrow><mml:mi>γ</mml:mi><mml:mi>δ</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq75.gif"/></alternatives></inline-formula> T cells link innate and adaptive immune responses. In: Mechanisms of epithelial defense, vol 86. Karger Publishers; 2005. p. 151–183.</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">McInnes L, Healy J, Melville J. Umap: uniform manifold approximation and projection for dimension reduction. 2018. arXiv preprint <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1802.03426">arXiv:1802.03426</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Maaten Lvd, Hinton G. Visualizing data using t-SNE. J Mach Learn Res. 2008;9(Nov):2579–605.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hagemann-Jensen</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Ziegenhain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Chen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ramsköld</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Hendriks</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>Larsson</surname>
            <given-names>AJ</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Single-cell RNA counting at allele and isoform resolution using Smart-seq3</article-title>
        <source>Nat Biotechnol.</source>
        <year>2020</year>
        <volume>38</volume>
        <issue>6</issue>
        <fpage>708</fpage>
        <lpage>714</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-020-0497-0</pub-id>
        <?supplied-pmid 32518404?>
        <pub-id pub-id-type="pmid">32518404</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wen</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>F</given-names>
          </name>
        </person-group>
        <article-title>How to catch rare cell types</article-title>
        <source>Nature.</source>
        <year>2015</year>
        <volume>525</volume>
        <issue>7568</issue>
        <fpage>197</fpage>
        <lpage>198</lpage>
        <pub-id pub-id-type="doi">10.1038/nature15204</pub-id>
        <?supplied-pmid 26287456?>
        <pub-id pub-id-type="pmid">26287456</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dong</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Yuan</surname>
            <given-names>GC</given-names>
          </name>
        </person-group>
        <article-title>GiniClust3: a fast and memory-efficient tool for rare cell type identification</article-title>
        <source>BMC Bioinformatics.</source>
        <year>2020</year>
        <volume>21</volume>
        <fpage>1</fpage>
        <lpage>7</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-020-3482-1</pub-id>
        <pub-id pub-id-type="pmid">31898485</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wegmann</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Neri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Schuierer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bilican</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Hartkopf</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Nigsch</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CellSIUS provides sensitive and specific detection of rare cell populations from complex single-cell RNA-seq data</article-title>
        <source>Genome Biol.</source>
        <year>2019</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>21</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1739-7</pub-id>
        <pub-id pub-id-type="pmid">30606230</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Jindal</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gupta</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Sengupta</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Discovery of rare cells from voluminous single cell expression data</article-title>
        <source>Nat Commun.</source>
        <year>2018</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>9</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-018-07234-6</pub-id>
        <pub-id pub-id-type="pmid">29317637</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Hie</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Cho</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>DeMeo</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Bryson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Berger</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Geometric sketching compactly summarizes the single-cell transcriptomic landscape</article-title>
        <source>Cell Syst.</source>
        <year>2019</year>
        <volume>8</volume>
        <issue>6</issue>
        <fpage>483</fpage>
        <lpage>493</lpage>
        <pub-id pub-id-type="doi">10.1016/j.cels.2019.05.003</pub-id>
        <?supplied-pmid 31176620?>
        <pub-id pub-id-type="pmid">31176620</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">DeMeo B, Berger B. Hopper: a mathematically optimal algorithm for sketching biological data. Bioinformatics. 2020;36(Supplement_1):i236–41.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Hie B, Peters J, Nyquist SK, Shalek AK, Berger B, Bryson BD. Computational methods for single-cell RNA sequencing. Annu Rev Biomed Data Sci. 2020;3:339–64.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wilk</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Rustagi</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Zhao</surname>
            <given-names>NQ</given-names>
          </name>
          <name>
            <surname>Roque</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Martínez-Colón</surname>
            <given-names>GJ</given-names>
          </name>
          <name>
            <surname>McKechnie</surname>
            <given-names>JL</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>A single-cell atlas of the peripheral immune response in patients with severe COVID-19</article-title>
        <source>Nat Med.</source>
        <year>2020</year>
        <volume>26</volume>
        <issue>7</issue>
        <fpage>1070</fpage>
        <lpage>1076</lpage>
        <pub-id pub-id-type="doi">10.1038/s41591-020-0944-y</pub-id>
        <?supplied-pmid 32514174?>
        <pub-id pub-id-type="pmid">32514174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Andreatta</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Corria-Osorio</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Müller</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Cubas</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Coukos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Carmona</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Interpretation of T cell states from single-cell transcriptomics data using reference atlases</article-title>
        <source>Nat Commun.</source>
        <year>2021</year>
        <volume>12</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-23324-4</pub-id>
        <pub-id pub-id-type="pmid">33397941</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shannon</surname>
            <given-names>CE</given-names>
          </name>
        </person-group>
        <article-title>A mathematical theory of communication</article-title>
        <source>Bell Syst Tech J.</source>
        <year>1948</year>
        <volume>27</volume>
        <issue>3</issue>
        <fpage>379</fpage>
        <lpage>423</lpage>
        <pub-id pub-id-type="doi">10.1002/j.1538-7305.1948.tb01338.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zappia</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Phipson</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Oshlack</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Splatter: simulation of single-cell RNA sequencing data</article-title>
        <source>Genome Biol.</source>
        <year>2017</year>
        <volume>18</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1186/s13059-017-1305-0</pub-id>
        <pub-id pub-id-type="pmid">28077169</pub-id>
      </element-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Treiner</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Duban</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bahram</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Radosavljevic</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wanner</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Tilloy</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Selection of evolutionarily conserved mucosal-associated invariant T cells by MR1</article-title>
        <source>Nature.</source>
        <year>2003</year>
        <volume>422</volume>
        <issue>6928</issue>
        <fpage>164</fpage>
        <lpage>169</lpage>
        <pub-id pub-id-type="doi">10.1038/nature01433</pub-id>
        <?supplied-pmid 12634786?>
        <pub-id pub-id-type="pmid">12634786</pub-id>
      </element-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">3K PBMCs from a healthy donor, single cell immune profiling dataset by Cell Ranger 1.1.0, 10x Genomics. <ext-link ext-link-type="uri" xlink:href="https://www.10xgenomics.com/resources/datasets/3-k-pbm-cs-from-a-healthy-donor-1-standard-1-1-0">https://www.10xgenomics.com/resources/datasets/3-k-pbm-cs-from-a-healthy-donor-1-standard-1-1-0</ext-link>. Accessed Apr 2022.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Xu</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>Y</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Liu</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>Z</given-names>
          </name>
        </person-group>
        <article-title>Dissecting the human immune system with single cell RNA sequencing technology</article-title>
        <source>J Leukoc Biol.</source>
        <year>2020</year>
        <volume>107</volume>
        <issue>4</issue>
        <fpage>613</fpage>
        <lpage>623</lpage>
        <pub-id pub-id-type="doi">10.1002/JLB.5MR1019-179R</pub-id>
        <?supplied-pmid 31803960?>
        <pub-id pub-id-type="pmid">31803960</pub-id>
      </element-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Joller</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Lozano</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Burkett</surname>
            <given-names>PR</given-names>
          </name>
          <name>
            <surname>Patel</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Xiao</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Zhu</surname>
            <given-names>C</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Treg cells expressing the coinhibitory molecule TIGIT selectively inhibit proinflammatory Th1 and Th17 cell responses</article-title>
        <source>Immunity.</source>
        <year>2014</year>
        <volume>40</volume>
        <issue>4</issue>
        <fpage>569</fpage>
        <lpage>581</lpage>
        <pub-id pub-id-type="doi">10.1016/j.immuni.2014.02.012</pub-id>
        <?supplied-pmid 24745333?>
        <pub-id pub-id-type="pmid">24745333</pub-id>
      </element-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kunicki</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Hernandez</surname>
            <given-names>LCA</given-names>
          </name>
          <name>
            <surname>Davis</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Bacchetta</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Roncarolo</surname>
            <given-names>MG</given-names>
          </name>
        </person-group>
        <article-title>Identity and diversity of human peripheral Th and T regulatory cells defined by single-cell mass cytometry</article-title>
        <source>J Immunol.</source>
        <year>2018</year>
        <volume>200</volume>
        <issue>1</issue>
        <fpage>336</fpage>
        <lpage>346</lpage>
        <pub-id pub-id-type="doi">10.4049/jimmunol.1701025</pub-id>
        <?supplied-pmid 29180490?>
        <pub-id pub-id-type="pmid">29180490</pub-id>
      </element-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Traag</surname>
            <given-names>VA</given-names>
          </name>
          <name>
            <surname>Waltman</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>van Eck</surname>
            <given-names>NJ</given-names>
          </name>
        </person-group>
        <article-title>From Louvain to Leiden: guaranteeing well-connected communities</article-title>
        <source>Sci Rep.</source>
        <year>2019</year>
        <volume>9</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/s41598-019-41695-z</pub-id>
        <pub-id pub-id-type="pmid">30626917</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <mixed-citation publication-type="other">Vinh NX, Epps J, Bailey J. Information theoretic measures for clusterings comparison: variants, properties, normalization and correction for chance. J Mach Learn Res. 2010;11:2837–54.</mixed-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kumpula</surname>
            <given-names>JM</given-names>
          </name>
          <name>
            <surname>Saramäki</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kaski</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Kertész</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Limited resolution in complex network community detection with Potts model approach</article-title>
        <source>Eur Phys J B.</source>
        <year>2007</year>
        <volume>56</volume>
        <issue>1</issue>
        <fpage>41</fpage>
        <lpage>45</lpage>
        <pub-id pub-id-type="doi">10.1140/epjb/e2007-00088-4</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Achlioptas D, McSherry F. Fast computation of low-rank matrix approximations. J ACM (JACM). 2007;54(2):9–es.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Candès</surname>
            <given-names>EJ</given-names>
          </name>
          <name>
            <surname>Recht</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Exact matrix completion via convex optimization</article-title>
        <source>Found Comput Math.</source>
        <year>2009</year>
        <volume>9</volume>
        <issue>6</issue>
        <fpage>717</fpage>
        <lpage>772</lpage>
        <pub-id pub-id-type="doi">10.1007/s10208-009-9045-5</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Torre</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Dueck</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Shaffer</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Bonasio</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>SAVER: gene expression recovery for single-cell RNA sequencing</article-title>
        <source>Nat Methods.</source>
        <year>2018</year>
        <volume>15</volume>
        <issue>7</issue>
        <fpage>539</fpage>
        <lpage>542</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-018-0033-z</pub-id>
        <?supplied-pmid 29941873?>
        <pub-id pub-id-type="pmid">29941873</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zhu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Paul</surname>
            <given-names>WE</given-names>
          </name>
        </person-group>
        <article-title>Heterogeneity and plasticity of T helper cells</article-title>
        <source>Cell Res.</source>
        <year>2010</year>
        <volume>20</volume>
        <issue>1</issue>
        <fpage>4</fpage>
        <lpage>12</lpage>
        <pub-id pub-id-type="doi">10.1038/cr.2009.138</pub-id>
        <?supplied-pmid 20010916?>
        <pub-id pub-id-type="pmid">20010916</pub-id>
      </element-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lin</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Couturier</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Yu</surname>
            <given-names>X</given-names>
          </name>
          <name>
            <surname>Medina</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Kozinetz</surname>
            <given-names>CA</given-names>
          </name>
          <name>
            <surname>Lewis</surname>
            <given-names>DE</given-names>
          </name>
        </person-group>
        <article-title>Granzyme B secretion by human memory CD4 T cells is less strictly regulated compared to memory CD8 T cells</article-title>
        <source>BMC Immunol.</source>
        <year>2014</year>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>15</lpage>
        <pub-id pub-id-type="doi">10.1186/s12865-014-0036-1</pub-id>
        <pub-id pub-id-type="pmid">24423010</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <mixed-citation publication-type="other">Andrews TS, Hemberg M. False signals induced by single-cell imputation [version 2; peer review: 4 approved]. F1000Research. 2019;7:1740. 10.12688/f1000research.16613.2.</mixed-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <mixed-citation publication-type="other">in Single-cell Analysis OP. Open problems - multimodal single-cell integration. 2022. <ext-link ext-link-type="uri" xlink:href="https://www.kaggle.com/competitions/open-problems-multimodal">https://www.kaggle.com/competitions/open-problems-multimodal</ext-link>. Accessed Mar 2023.</mixed-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <mixed-citation publication-type="other">Rousseeuw PJ. Silhouettes: a graphical aid to the interpretation and validation of cluster analysis. J Comput Appl Math. 1987;20:53–65.</mixed-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <mixed-citation publication-type="other">Tritschler S, Büttner M, Fischer DS, Lange M, Bergen V, Lickert H, Theis FJ. Concepts and limitations for learning developmental trajectories from single cell genomics. Development. 2019;146(12):dev170506.</mixed-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <mixed-citation publication-type="other">Sparck Jones K. A statistical interpretation of term specificity and its application in retrieval. Journal of documentation. 1972;28(1):11–21.</mixed-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Levine RD. Molecular reaction dynamics. Cambridge University Press; 2009.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gross</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>Surprisal analysis of transcripts expression levels in the presence of noise: a reliable determination of the onset of a tumor phenotype</article-title>
        <source>PLoS ONE.</source>
        <year>2013</year>
        <volume>8</volume>
        <issue>4</issue>
        <fpage>e61554</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pone.0061554</pub-id>
        <?supplied-pmid 23626699?>
        <pub-id pub-id-type="pmid">23626699</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Zadran</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Arumugam</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Herschman</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Phelps</surname>
            <given-names>ME</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>Surprisal analysis characterizes the free energy time course of cancer cells undergoing epithelial-to-mesenchymal transition</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2014</year>
        <volume>111</volume>
        <issue>36</issue>
        <fpage>13235</fpage>
        <lpage>13240</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1414714111</pub-id>
        <?supplied-pmid 25157127?>
        <pub-id pub-id-type="pmid">25157127</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Remacle</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Kravchenko-Balasha</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Levitzki</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Levine</surname>
            <given-names>RD</given-names>
          </name>
        </person-group>
        <article-title>Information-theoretic analysis of phenotype changes in early stages of carcinogenesis</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2010</year>
        <volume>107</volume>
        <issue>22</issue>
        <fpage>10324</fpage>
        <lpage>10329</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1005283107</pub-id>
        <?supplied-pmid 20479229?>
        <pub-id pub-id-type="pmid">20479229</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kravchenko-Balasha</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Levitzki</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Goldstein</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Rotter</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Gross</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Remacle</surname>
            <given-names>F</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>On a fundamental structure of gene networks in living cells</article-title>
        <source>Proc Natl Acad Sci.</source>
        <year>2012</year>
        <volume>109</volume>
        <issue>12</issue>
        <fpage>4702</fpage>
        <lpage>4707</lpage>
        <pub-id pub-id-type="doi">10.1073/pnas.1200790109</pub-id>
        <?supplied-pmid 22392990?>
        <pub-id pub-id-type="pmid">22392990</pub-id>
      </element-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <mixed-citation publication-type="other">Narayan A, Berger B, Cho H. Assessing single-cell transcriptomic variability through density-preserving data visualization. Nat Biotechnol. 2021;39(6):765–74.</mixed-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Schaum N, Karkanias J, Neff NF, May AP, Quake SR, Wyss-Coray T, et al. Single-cell transcriptomics of 20 mouse organs creates a Tabula Muris: the Tabula Muris Consortium. Nature. 2018;562(7727):367.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <mixed-citation publication-type="other">(<ext-link ext-link-type="uri" xlink:href="https://math.stackexchange.com/users/22857/martin%20argerami">https://math.stackexchange.com/users/22857/martin argerami</ext-link>) MA. What vector x will maximize the norm of <inline-formula id="IEq76"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Vert Ax\Vert _2 / \Vert x\Vert _2$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msub><mml:mrow><mml:mo stretchy="false">‖</mml:mo><mml:mi>A</mml:mi><mml:mi>x</mml:mi><mml:mo stretchy="false">‖</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub><mml:mo stretchy="false">/</mml:mo><mml:msub><mml:mrow><mml:mo stretchy="false">‖</mml:mo><mml:mi>x</mml:mi><mml:mo stretchy="false">‖</mml:mo></mml:mrow><mml:mn>2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2023_2998_Article_IEq76.gif"/></alternatives></inline-formula> (norm 2). Mathematics Stack Exchange. <ext-link ext-link-type="uri" xlink:href="https://math.stackexchange.com/q/3112310">https://math.stackexchange.com/q/3112310</ext-link> (version: 2021-01-26). Accessed Dec 2020.</mixed-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <mixed-citation publication-type="other">Virtanen P, Gommers R, Oliphant TE, Haberland M, Reddy T, Cournapeau D, et al. SciPy 1.0: Fundamental algorithms for scientific computing in Python. Nat Methods. 2020;17:261–272. 10.1038/s41592-019-0686-2.</mixed-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Harris</surname>
            <given-names>CR</given-names>
          </name>
          <name>
            <surname>Millman</surname>
            <given-names>KJ</given-names>
          </name>
          <name>
            <surname>van der Walt</surname>
            <given-names>SJ</given-names>
          </name>
          <name>
            <surname>Gommers</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Virtanen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Cournapeau</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Array programming with NumPy</article-title>
        <source>Nature.</source>
        <year>2020</year>
        <volume>585</volume>
        <issue>7825</issue>
        <fpage>357</fpage>
        <lpage>362</lpage>
        <pub-id pub-id-type="doi">10.1038/s41586-020-2649-2</pub-id>
        <?supplied-pmid 32939066?>
        <pub-id pub-id-type="pmid">32939066</pub-id>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <mixed-citation publication-type="other">Pedregosa F, Varoquaux G, Gramfort A, Michel V, Thirion B, Grisel O, et al. Scikit-learn: machine learning in Python. J Mach Learn Res. 2011;12:2825–30.</mixed-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Oja</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Hyvarinen</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Independent component analysis: algorithms and applications</article-title>
        <source>Neural Netw.</source>
        <year>2000</year>
        <volume>13</volume>
        <issue>4–5</issue>
        <fpage>411</fpage>
        <lpage>430</lpage>
        <?supplied-pmid 10946390?>
        <pub-id pub-id-type="pmid">10946390</pub-id>
      </element-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">DeMeo B. shannonca v0.0.2. Github. 2023. <ext-link ext-link-type="uri" xlink:href="https://github.com/bendemeo/shannonca">https://github.com/bendemeo/shannonca</ext-link>. Accessed Apr 2023.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <mixed-citation publication-type="other">DeMeo B. shannonca v0.0.2. Zenodo. 2023. 10.5281/zenodo.7854155.</mixed-citation>
    </ref>
    <ref id="CR58">
      <label>58.</label>
      <mixed-citation publication-type="other">Hagemann-Jensen M, Ziegenhain C, Chen P, Ramsköld D, Hendriks GJ, Larsson AJ, et al. Single-cell RNA counting at allele- and isoform-resolution using Smart-seq3. ArrayExpress; 2020. <ext-link ext-link-type="uri" xlink:href="https://www.ebi.ac.uk/biostudies/arrayexpress/studies/E-MTAB-8735">https://www.ebi.ac.uk/biostudies/arrayexpress/studies/E-MTAB-8735</ext-link>. Accessed Nov 2020.</mixed-citation>
    </ref>
    <ref id="CR59">
      <label>59.</label>
      <mixed-citation publication-type="other">Hao Y, Hao S, Andersen-Nissen E, Mauck WM, Zheng S, Butler A, et al. Comprehensive integration of single-cell data. Gene Expression Omnibus; 2019. <ext-link ext-link-type="uri" xlink:href="https://identifiers.org/geo:GSE128639">https://identifiers.org/geo:GSE128639</ext-link>. Accessed Jan 2021.</mixed-citation>
    </ref>
  </ref-list>
</back>

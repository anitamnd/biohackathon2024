<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">BMC Bioinformatics</journal-id>
    <journal-id journal-id-type="iso-abbrev">BMC Bioinformatics</journal-id>
    <journal-title-group>
      <journal-title>BMC Bioinformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1471-2105</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9743588</article-id>
    <article-id pub-id-type="publisher-id">5092</article-id>
    <article-id pub-id-type="doi">10.1186/s12859-022-05092-0</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Graph4Med: a web application and a graph database for visualizing and analyzing medical databases</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes" equal-contrib="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0001-7727-1181</contrib-id>
        <name>
          <surname>Schäfer</surname>
          <given-names>Jero</given-names>
        </name>
        <address>
          <email>jeschaef@cs.uni-frankfurt.de</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author" equal-contrib="yes">
        <name>
          <surname>Tang</surname>
          <given-names>Ming</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Luu</surname>
          <given-names>Danny</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Bergmann</surname>
          <given-names>Anke Katharina</given-names>
        </name>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wiese</surname>
          <given-names>Lena</given-names>
        </name>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.7839.5</institution-id><institution-id institution-id-type="ISNI">0000 0004 1936 9721</institution-id><institution>Institute of Computer Science, </institution><institution>Goethe-Universität Frankfurt, </institution></institution-wrap>Frankfurt am Main, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.10423.34</institution-id><institution-id institution-id-type="ISNI">0000 0000 9529 9877</institution-id><institution>Department of Human Genetics, </institution><institution>Hannover Medical School, </institution></institution-wrap>Hannover, Germany </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="GRID">grid.9122.8</institution-id><institution-id institution-id-type="ISNI">0000 0001 2163 2777</institution-id><institution>L3S Research Center, </institution><institution>Leibniz Universität Hannover, </institution></institution-wrap>Hannover, Germany </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="GRID">grid.418009.4</institution-id><institution-id institution-id-type="ISNI">0000 0000 9191 9864</institution-id><institution>Bioinformatics Group, </institution><institution>Fraunhofer ITEM, </institution></institution-wrap>Hannover, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>12</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>12</day>
      <month>12</month>
      <year>2022</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2022</year>
    </pub-date>
    <volume>23</volume>
    <elocation-id>537</elocation-id>
    <history>
      <date date-type="received">
        <day>24</day>
        <month>3</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>1</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2022</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Medical databases normally contain large amounts of data in a variety of forms. Although they grant significant insights into diagnosis and treatment, implementing data exploration into current medical databases is challenging since these are often based on a relational schema and cannot be used to easily extract information for cohort analysis and visualization. As a consequence, valuable information regarding cohort distribution or patient similarity may be missed. With the rapid advancement of biomedical technologies, new forms of data from methods such as Next Generation Sequencing (NGS) or chromosome microarray (array CGH) are constantly being generated; hence it can be expected that the amount and complexity of medical data will rise and bring relational database systems to a limit.</p>
      </sec>
      <sec>
        <title>Description</title>
        <p id="Par2">We present Graph4Med, a web application that relies on a graph database obtained by transforming a relational database. Graph4Med provides a straightforward visualization and analysis of a selected patient cohort. Our use case is a database of pediatric Acute Lymphoblastic Leukemia (ALL). Along routine patients’ health records it also contains results of latest technologies such as NGS data. We developed a suitable graph data schema to convert the relational data into a graph data structure and store it in Neo4j. We used NeoDash to build a dashboard for querying and displaying patients’ cohort analysis. This way our tool (1) quickly displays the overview of patients’ cohort information such as distributions of gender, age, mutations (fusions), diagnosis; (2) provides mutation (fusion) based similarity search and display in a maneuverable graph; (3) generates an interactive graph of any selected patient and facilitates the identification of interesting patterns among patients.</p>
      </sec>
      <sec>
        <title>Conclusion</title>
        <p id="Par3">We demonstrate the feasibility and advantages of a graph database for storing and querying medical databases. Our dashboard allows a fast and interactive analysis and visualization of complex medical data. It is especially useful for patients similarity search based on mutations (fusions), of which vast amounts of data have been generated by NGS in recent years. It can discover relationships and patterns in patients cohorts that are normally hard to grasp. Expanding Graph4Med to more medical databases will bring novel insights into diagnostic and research.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>Graph database</kwd>
      <kwd>Medical database</kwd>
      <kwd>Data exploration</kwd>
      <kwd>Visualization</kwd>
      <kwd>Web application</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100003042</institution-id>
            <institution>Else Kröner-Fresenius-Stiftung</institution>
          </institution-wrap>
        </funding-source>
        <award-id>Promotionsprogramm DigiStrucMed 2020_EKPK.20</award-id>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/501100002347</institution-id>
            <institution>Bundesministerium für Bildung und Forschung</institution>
          </institution-wrap>
        </funding-source>
        <award-id>LeibnizKILabor (grant no. 01DD20003)</award-id>
        <principal-award-recipient>
          <name>
            <surname>Tang</surname>
            <given-names>Ming</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Johann Wolfgang Goethe-Universität, Frankfurt am Main (1022)</institution>
        </funding-source>
      </award-group>
      <open-access>
        <p>Open Access funding enabled and organized by Projekt DEAL.</p>
      </open-access>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2022</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par19">Medical databases are not only vitally important for providing accurate and timely health services but also crucial for an improvement of the work flow for doctors, researchers and health care providers. Managing a health database system is challenging because it needs to ensure (1) real-time access and analysis, (2) data security and sharing, (3) patient privacy while having to deal with very different data formats and users [<xref ref-type="bibr" rid="CR1">1</xref>]. Traditional medical databases are usually relational or network-based. They are designed to manage the information that stores different data regarding a single entity. However as the volume and diversity of medical data continue to expand exponentially, people realize that a relational model actually keeps “healthcare data locked, isolated and unused” [<xref ref-type="bibr" rid="CR2">2</xref>]. More and more healthcare providers are migrating from relational to non-relational database systems like graph databases and document data stores [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR5">5</xref>].</p>
    <sec id="Sec2">
      <title>Medical graph databases</title>
      <p id="Par20">With the increasing amount of heterogeneous biological data obtained by novel technologies in the medical sector, graph databases have gained more attention as flexible and feasible storage systems [<xref ref-type="bibr" rid="CR6">6</xref>] that help to find and understand complex hidden relationships [<xref ref-type="bibr" rid="CR7">7</xref>]. Biological pathways can also be modeled more efficiently in a graph database than in a traditional relational database, which results in an increased query performance when traversing the knowledge graph [<xref ref-type="bibr" rid="CR8">8</xref>]. The integration of multi-omics data provides the ability to extract new knowledge from data but is challenging due to the high diversity and complexity of such data and requires novel approaches (e.g., as provided by graph database systems) [<xref ref-type="bibr" rid="CR9">9</xref>]. One of the most popular graph database systems is the Neo4j graph data platform [<xref ref-type="bibr" rid="CR10">10</xref>] (cf. Graph Databases). It was chosen for realizing medical data applications around the management of biological knowledge bases [<xref ref-type="bibr" rid="CR8">8</xref>, <xref ref-type="bibr" rid="CR11">11</xref>] or the integration of data from multiple sources [<xref ref-type="bibr" rid="CR12">12</xref>].</p>
      <p id="Par21">The usage of a graph database such as Neo4j to store, manage and query medical data often serves the purpose of building a backbone for a web application with easy user access. A web-based dashboard is a powerful tool for visualizing and analyzing the graph data as it makes the stored data available to the users in a comprehensible fashion by abstracting from the underlying graph database technology. Bukhari et al. [<xref ref-type="bibr" rid="CR12">12</xref>] have used a Neo4j database to implement such an intuitive dashboard on top of it for browsing and visualizing immunological data in plots supporting the automatic translation of natural language queries to Cypher queries.Their web application lets users view immunology-related data, e.g., age distributions of subjects in a study, via a graph-based and natural language query interface for a more intuitive usage. Our approach, in contrast, uses a dashboard that retrieves data for rendering with Cypher queries, that the user does not need to interact with but can if they are familiar with Cypher, for multiple visual representations of data in one page. The purpose of LinkedImm is to integrate different data sources into a linked graph, whereas our tool focuses on the analysis of a cohort of patients obtained from a relational database and transformed into a graph model.</p>
      <p id="Par22">The graph database BioGraphDB [<xref ref-type="bibr" rid="CR13">13</xref>–<xref ref-type="bibr" rid="CR15">15</xref>] also relies on Neo4j as one of the core technologies and has been used to build the BioGraph [<xref ref-type="bibr" rid="CR16">16</xref>] web application, which allows users to interactively query and analyze the integrated biological data, e.g., microRNA or protein sequence data. Similar to LinkedImm, the BioGraph integrates data from multiple sources into a data graph with a manually derived graph schema to model the relationships between biological entities like genes and proteins. The schema was developed according to the results of the ETL processes whereas our proposal gives a generally applicable methodology to transform a relational to a graph data schema. The web application on top of BioGraph offers also only single visualizations of data at a time, that can be retrieved with several predefined queries with parameters or freely entered queries. Our dashboard is capable of visualizing an aggregation of different aspects for a more comfortable work flow. Another platform displaying multi-omics data in a web application has been developed in Graphomics  [<xref ref-type="bibr" rid="CR11">11</xref>]. It combines a Neo4j database that maps the multi-omics data to a graph of connected entities, reactions and pathways with a relational SQLite database that stores the final results.</p>
    </sec>
    <sec id="Sec3">
      <title>Medical background</title>
      <p id="Par23">The integration of Next Generation Sequencing (NGS) and related technologies to medicine have revolutionized the field and made personalized medicine possible. As large amounts of data are being generated and added to medical databases, their analysis and visualization becomes increasingly challenging. This greatly hampers our efforts to take full advantage of these new technologies. A specific example would be the pediatric acute lymphoblastic leukemia (ALL) database that we used in this study. In acute lymphoblastic leukemia the most common genetic drivers are gene fusions while mutations and copy number variations may also contribute [<xref ref-type="bibr" rid="CR17">17</xref>]. Over the last years, diagnostic samples of ALL were analyzed by RNA sequencing, panel sequencing and/or arrayCGH. RNA sequencing detects gene fusions much more efficiently than the traditional methods such as karyotyping or Fluorescence in situ hybridization (FISH). Panel sequencing identifies mutations in selected DNA regions of interests. ArrayCGH is a powerful method that detects losses or gains of genomic regions. All these new technologies play critical roles in providing diagnostic, prognostic and treatment information. For example, fusion result is one of the main criteria to stratify leukemia patients and identify patient similarities [<xref ref-type="bibr" rid="CR17">17</xref>]. However, the current relational databases lack the capacity to search and analyze patients based on fusion/mutation types. In contrast, similarity searches are simplified by using a graph-based database structure.</p>
    </sec>
    <sec id="Sec4">
      <title>Our contribution</title>
      <p id="Par24">We introduce Graph4Med, a user-friendly, graph-based visualization tool for the analysis of a cohort of patients. In particular, we extracted pediatric ALL cases from a relational database and transformed them into a graph schema tailored to our use case, which was derived from the relational schema. The extracted cohort was then stored in a Neo4j graph database and a web-based dashboard was built with NeoDash, a Neo4j dashboard building tool [<xref ref-type="bibr" rid="CR18">18</xref>]. The rest of this work is organized as follows: First, we outline the limitations of the current relational system and the benefits of using a graph database in our use case in section “<xref rid="Sec5" ref-type="sec">Use case scenario</xref>”. Then the section “<xref rid="Sec8" ref-type="sec">Implementation</xref>” describes the process of modeling the graph database schema from the transformation of the relational schema into a graph schema, which is further converted into the final graph model. Then in the “<xref rid="Sec12" ref-type="sec">Results</xref>” section the system architecture and the built application dashboard are elucidated. We further comment on the usability, significance and limitations of our implementation in the “<xref rid="Sec18" ref-type="sec">Discussion</xref>”. Finally, a summary of our contribution is given in the “<xref rid="Sec21" ref-type="sec">Conclusion</xref>”.</p>
    </sec>
  </sec>
  <sec id="Sec5">
    <title>Use case scenario</title>
    <sec id="Sec6">
      <title>Current relational system</title>
      <p id="Par25">Currently our medical partner uses a system that employs a relational database and a graphical interface to interact with the patient data. According to the relational schema, the user can browse different concepts and navigate through the case of an individual patient by viewing data about the diagnoses, samples, tests, analyses or prescriptions in the form of tabular or unstructured data. Although it is possible to alter the stored records, there are no straightforward visualizations other than tables or sheets to obtain a comprehensive overview. This leads to overly complex and time intense work for the user to identify key aspects for the diagnosis or treatment of the subject. To this end, a dashboard improves the work flow by displaying the required and most valuable information concisely and user-friendly.</p>
      <p id="Par26">In particular, the desired information in many scenarios is often scattered across multiple tables due to database normalization. The information inside these tables are only shown separately in the interface. To address certain questions, clinicians and researchers have to acquire information from different tables. However, the combination of multiple tables via joins in queries, that should aid to directly derive the same solution, often also impedes the work flow as these tables are quite overloaded and, thus, inefficient to work with. Additionally, the resulting joined table might contain redundant information inflating the amount of information the user has to deal with. Especially, if querying for a subgroup of patients, the non-redundant information usually needs to be aggregated carefully as otherwise records with redundant information are returned. To overcome these issues, the proposed system provides access to the information in an implicitly non-redundant fashion by using a graph database.</p>
      <p id="Par27">Further use cases not addressed by the former system are to examine common features or correlations inside subgroups of patients and not just the individuals, which is an important aspect for research in general. Particularly regarding ALL, we believe that it is crucial to investigate on common fusions or mutations to gain valuable insights for diagnostics and treatment opportunities. Hence, the system is required to support the search for a specific subgroup by fusions and appropriate display of the gathered information, for instance, by applying additional filters based on the age at diagnosis, sex or aneuploidy of the patients. If the case of an individual patient is identified to be of high interest, the next step usually is to find other cases being similar to the target patient. This functionality is also not in the scope of the old relational-based system as it would require a set of complex SQL queries or a separate application program to measure similarity between patients.</p>
    </sec>
    <sec id="Sec7">
      <title>Graph databases</title>
      <p id="Par28">Graph databases manage data by employing a graph data model using graph structures for the logical representation of data and their schema [<xref ref-type="bibr" rid="CR19">19</xref>]. The essential part comes from the mathematical formulation of graph theory that supplies the abstract data type. Formally, a graph consists of a set of nodes (or vertices) and a set of edges to connect pairs of nodes. Edges can have a direction pointing from one node to another or be undirected. In a labeled-property graph, both the nodes and edges are labeled and can have additional properties in the form of key-value pairs further characterizing the entities (nodes) and relationships (edges). In the context of a database, data are then obtained by formulating queries against the graph and data manipulations are performed by graph transformation operations.</p>
      <p id="Par29">One of the benefits of using a graph data model is that related information can be queried more easily. Starting from an individual patient or a common concept, e.g., the detection of a certain fusion or mutation, the graph can be traversed along multiple relationships step-by-step without having to consider unrelated data. The index-free adjacency ensures that the neighbors of a node (i.e., connected via an edge) can be directly accessed from the node itself and, thus, the lookup performance does not depend on the size of the graph resulting in a better scalability. Furthermore, queries are more flexible regarding the grouping and aggregation of data by returning subgraphs as query results. This capability implicitly eliminates duplicate answers on-the-fly as the same node is just returned once but with possibly multiple relationships/paths to other nodes. For example, consider a scenario of multiple chained one-to-many relationships, e.g., various analyses, that themselves might have multiple results, can be done for each patient. In relational databases the grouping for findings per patient and analysis would lead to a table with potentially redundant information as each patient occurs once for each analysis. The graph database, in contrast, would return a subgraph of patient nodes with paths via analysis nodes to result nodes. The graph structure inherently yields a powerful possibility for visualization of such subgraphs that facilitates the identification of complex relationships in the data by the user.</p>
      <p id="Par30">Neo4j is our choice of graph database management system that “stores and manages data in its more natural, connected state, maintaining data relationships that deliver lightning-fast queries, deeper context for analytics, and a pain-free modifiable data model” [<xref ref-type="bibr" rid="CR10">10</xref>]. Neo4j is available in an open-source version and comes with a native graph database, the graph query language Cypher and libraries for graph analytics. It has a vivid community, a broad variety of tools and extensions, and is one of the most popular systems for storing data with a graph data model. The corresponding query language comes with an intuitive and logical syntax that is easy to learn and understand (e.g., documentation at <ext-link ext-link-type="uri" xlink:href="https://Neo4j.com/docs/">https://Neo4j.com/docs/</ext-link>). This is important as our dashboard will use Cypher queries to populate the reports with data directly obtained from the database.</p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Implementation</title>
    <sec id="Sec9">
      <title>Relational database schema</title>
      <p id="Par31">The data underlying the dashboard application was extracted from a relational database and mapped into a suitable graph data model. Figure <xref rid="Fig1" ref-type="fig">1</xref> shows a simplified version of the relational database schema that was restricted to only comprise the features of the entities and core relationships between the different entities present that are relevant for the visualization of the ALL cases in the dashboard. Formally, the relational database schema <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{R}$$\end{document}</tex-math><mml:math id="M2"><mml:mi mathvariant="bold">R</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq1.gif"/></alternatives></inline-formula> consists of the following main relations: Patient(id, name, gender, dob), Project(id, name), Family(id, name), Order(id, type), Diagnosis(id, name, icd), DiagnosisAddition(id, description), AnalysisMaster(id, type), Analysis(id, order_id, master_id, material_id, result), DynamicField(analysis_id, field, name, value), Material(id, type), MaterialNumber(id, master_id, sub_type, sub_number) and Result(id, description, value).<fig id="Fig1"><label>Fig. 1</label><caption><p>Relational database schema. The schema of the relational database with primary key (PK) attributes indicated by bold names and foreign key (FK) relationships indicated by the grey lines connecting FK and PK attributes</p></caption><graphic xlink:href="12859_2022_5092_Fig1_HTML" id="MO1"/></fig></p>
      <p id="Par32">These relations model the logical entities of our use case and the other relations are associative relations that implement the logical one-to-many or many-to-many relationships. Such relationships occur for the membership of patients in families and projects, the assignment of the patients’ diagnoses incl. addition, orders and materials, or the relation of analyses to results, that may aggregate multiple analytical results. The relation that represents the patient entity plays a central role (marked red) in the designed relational model. The other relations modeling logical entities can be differentiated into patient-specific or patient-agnostic relations. The relations Project, Family, Diagnosis, DiagnosisAddition and AnalysisMaster are patient-agnostic as they (generally) do not store information that depends on a specific patient but potentially link to every patient. The tuple (12345, ’Leukemia Research’) in the relation Project, for instance, represents a research project named ’Leukemia Research’ with id 12345 and multiple patients as subjects. In contrast to this, the relations Order, Analysis, Result, DynamicField, Material and MaterialNumber are patient-specific and store information that belong to a specific patient. For instance, the relation Material can contain a tuple (98765, ’DNA’) representing a DNA sample with id 98765 that was obtained from a patient (as mapped by the MaterialPatient relation).</p>
    </sec>
    <sec id="Sec10">
      <title>Schema graph transformation</title>
      <p id="Par33">Similar to Definition 1 in [<xref ref-type="bibr" rid="CR20">20</xref>], we constructed a relational schema graph <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{RG} = \langle N, E\rangle$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mi mathvariant="bold">RG</mml:mi><mml:mo>=</mml:mo><mml:mo stretchy="false">⟨</mml:mo><mml:mi>N</mml:mi><mml:mo>,</mml:mo><mml:mi>E</mml:mi><mml:mo stretchy="false">⟩</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq2.gif"/></alternatives></inline-formula> for the relational database schema <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{R}$$\end{document}</tex-math><mml:math id="M6"><mml:mi mathvariant="bold">R</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq3.gif"/></alternatives></inline-formula> with a node <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_a$$\end{document}</tex-math><mml:math id="M8"><mml:msub><mml:mi>n</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq4.gif"/></alternatives></inline-formula> for each of the attributes <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$a \in X_i$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>a</mml:mi><mml:mo>∈</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq5.gif"/></alternatives></inline-formula> of each relation schema <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i(X_i)$$\end{document}</tex-math><mml:math id="M12"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msub><mml:mi>X</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq6.gif"/></alternatives></inline-formula> in <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{R}$$\end{document}</tex-math><mml:math id="M14"><mml:mi mathvariant="bold">R</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq7.gif"/></alternatives></inline-formula>. Each node <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_a$$\end{document}</tex-math><mml:math id="M16"><mml:msub><mml:mi>n</mml:mi><mml:mi>a</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq8.gif"/></alternatives></inline-formula> is labeled with the name of the relation <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M18"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq9.gif"/></alternatives></inline-formula> followed by a dot and the name of the attribute <italic>a</italic>, i.e. <inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i.a$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq10.gif"/></alternatives></inline-formula>. Before introducing edges, we merge the nodes of composite PK attributes into single nodes which are then labeled with <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i.PK$$\end{document}</tex-math><mml:math id="M22"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo><mml:mi>P</mml:mi><mml:mi>K</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq11.gif"/></alternatives></inline-formula>. This reduced the amount of nodes and edges for a simpler representation of the schema. Furthermore, the transformation of the schema graph to the graph data schema is simplified by the merge of PK attributes when creating the nodes representing the different entities. In the following, we refer to both single and composite PK attribute nodes as PK nodes. Also, we did not consider composite FKs but they could be handled in the same way as composite PKs by merging them into one single FK node. The general transformation steps towards the final graph data schema are: <list list-type="order"><list-item><p id="Par34">Create nodes labeled with <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i.a$$\end{document}</tex-math><mml:math id="M24"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq12.gif"/></alternatives></inline-formula> for relations <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M26"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq13.gif"/></alternatives></inline-formula> and their attributes <italic>a</italic>.</p></list-item><list-item><p id="Par35">Merge nodes of composite PK attributes into single PK nodes.</p></list-item><list-item><p id="Par36">Create directed edges from PK nodes to nodes of other attributes <italic>a</italic> of the same relation <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M28"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq14.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par37">Create directed edges from FK nodes to the respective PK nodes.</p></list-item><list-item><p id="Par38">Merge sinks (i.e. nodes without any outgoing edges) that are all connected to the same PK node and have only one incoming edge into one node labeled <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i.attributes$$\end{document}</tex-math><mml:math id="M30"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>t</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>b</mml:mi><mml:mi>u</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>s</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq15.gif"/></alternatives></inline-formula>.</p></list-item><list-item><p id="Par39">Merge PK hubs (i.e. nodes with incoming and outgoing edges) labeled <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i.a$$\end{document}</tex-math><mml:math id="M32"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq16.gif"/></alternatives></inline-formula> with only one outgoing edge to a (merged) sink with these sinks. The new entity nodes are labeled <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M34"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq17.gif"/></alternatives></inline-formula> and contain all attributes from the previously merged hub and sink.</p></list-item><list-item><p id="Par40">Replace sources <italic>n</italic> (i.e. nodes without incoming edges) that are connected to exactly two entity nodes <italic>p</italic> and <italic>q</italic> and these two edges by an undirected edge <italic>e</italic> connecting <italic>p</italic> and <italic>q</italic> directly.<list list-type="bullet"><list-item><label/><p id="Par41">Case 1: If <italic>n</italic> has no other edges, no other actions are required.</p></list-item><list-item><label/><p id="Par42">Case 2: If <italic>n</italic> has an edge to a (merged) sink <italic>m</italic>, add the attribute(s) represented by <italic>m</italic> as property to <italic>e</italic> and remove <italic>m</italic>, too.</p></list-item><list-item><label/><p id="Par43">Case 3: If <italic>n</italic> has an edge to a hub <italic>m</italic> with only one other edge to an entity node <italic>r</italic> containing only one additional attribute <italic>a</italic> next to the identifying attribute(s), add <italic>a</italic> as property to <italic>e</italic> and remove <italic>m</italic> and <italic>r</italic> from <italic>N</italic>.</p></list-item></list> If none of the above cases is applicable, no merge is performed.</p></list-item><list-item><p id="Par44">Resolve FK relations by edges:<list list-type="bullet"><list-item><label/><p id="Par45">Case 1: Replace FK relations indicated by hubs <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_h$$\end{document}</tex-math><mml:math id="M36"><mml:msub><mml:mi>n</mml:mi><mml:mi>h</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq18.gif"/></alternatives></inline-formula> with one incoming edge from an entity node <italic>m</italic> and one outgoing edge to an entity node <italic>o</italic> by an undirected edge directly connecting <italic>m</italic> and <italic>o</italic>.</p></list-item><list-item><label/><p id="Par46">Case 2: If the FK relations is a source <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_s$$\end{document}</tex-math><mml:math id="M38"><mml:msub><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq19.gif"/></alternatives></inline-formula> labeled <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i.a$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub><mml:mo>.</mml:mo><mml:mi>a</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq20.gif"/></alternatives></inline-formula> with outgoing edges to an entity node <italic>m</italic> and to a (merged) sink <italic>o</italic>, first merge <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n_s$$\end{document}</tex-math><mml:math id="M42"><mml:msub><mml:mi>n</mml:mi><mml:mi>s</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq21.gif"/></alternatives></inline-formula> and <italic>o</italic> (with all attributes except the FK attribute) into an entity node <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M44"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq22.gif"/></alternatives></inline-formula>. Then, connect the entity nodes <italic>m</italic> and <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$R_i$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>R</mml:mi><mml:mi>i</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq23.gif"/></alternatives></inline-formula> with an undirected edge.</p></list-item></list></p></list-item></list></p>
      <p id="Par47">The obtained schema graph <inline-formula id="IEq26"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{RG}$$\end{document}</tex-math><mml:math id="M48"><mml:mi mathvariant="bold">RG</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq26.gif"/></alternatives></inline-formula> after applying steps 1-5 is shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref> but was split into two parts <inline-formula id="IEq27"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1} \cup \mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M50"><mml:mrow><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq27.gif"/></alternatives></inline-formula> for a less overloaded visualization. The left part of the figure displays the schema graph around the Patient, Family, Project, Diagnosis and DiagnosisAddition relations and the right part displays the schema graph restricted to the Patient and the other relations. The PK property of attributes represented by the nodes are highlighted by a thicker outline (e.g., the node labeled <italic>Patient</italic>.<italic>id</italic>). The direct edges of <inline-formula id="IEq28"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{RG}$$\end{document}</tex-math><mml:math id="M52"><mml:mi mathvariant="bold">RG</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq28.gif"/></alternatives></inline-formula> visualized by arrows between the nodes indicate either the FK relationships between attributes or the relationship of PK to non-key attributes (e.g., the node <italic>OrderPatient</italic>.<italic>PK</italic> comprises the two attributes OrderPatient.patient_id and OrderPatient.order_id), which are references to patients and orders, respectively. It also links the PK to the OrderPatient.order_date attribute characterizing the date of order request. The (merged) sinks are colored green and the source are colored red.<fig id="Fig2"><label>Fig. 2</label><caption><p>Schema graph. The constructed and compressed schema graph <inline-formula id="IEq24"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{RG}$$\end{document}</tex-math><mml:math id="M54"><mml:mi mathvariant="bold">RG</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq24.gif"/></alternatives></inline-formula> which is split into two parts <inline-formula id="IEq25"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1} \cup \mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M56"><mml:mrow><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq25.gif"/></alternatives></inline-formula> (left and right, respectively). Nodes with a thick outline represent PK attributes. Sinks are colored green and sources are colored red</p></caption><graphic xlink:href="12859_2022_5092_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par48">Figure <xref rid="Fig3" ref-type="fig">3</xref> shows the application of the transformation steps 6 and 7 to the first part <inline-formula id="IEq32"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1}$$\end{document}</tex-math><mml:math id="M58"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq32.gif"/></alternatives></inline-formula> of the schema graph (left graph in Fig. <xref rid="Fig2" ref-type="fig">2</xref>) from left (step 6) to right (step 7). At the first stage, the nodes representing the patient, project, family, diagnosis and diagnosis addition entities were created by merging the hubs, that are PK nodes, with the connected attributes. This aggregated the entity-specific properties in one node. The source nodes between exactly two of the new entity nodes (blue colored nodes in Fig. <xref rid="Fig3" ref-type="fig">3</xref>) were resolved as edges modeling the relationship between objects of the two entities. The simplest scenario (step 7.1) occured for transforming the sources labeled <italic>ProjectPatient</italic>.<italic>PK</italic> and <italic>FamilyPatient</italic>.<italic>PK</italic> into the relationships <italic>InProject</italic> and <italic>InFamily</italic> between patients and projects/families stating that a patient was participating in a research project or was member of a family, respectively.<fig id="Fig3"><label>Fig. 3</label><caption><p>Schema graph <inline-formula id="IEq29"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1}$$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq29.gif"/></alternatives></inline-formula> transformation. The transformation of the schema graph <inline-formula id="IEq30"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1}$$\end{document}</tex-math><mml:math id="M62"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq30.gif"/></alternatives></inline-formula> is depicted in two steps. The left panel shows how hubs and directly connected sinks were merged into new entity nodes (blue) in <inline-formula id="IEq31"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1}$$\end{document}</tex-math><mml:math id="M64"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq31.gif"/></alternatives></inline-formula> according to transformation step 6 (e.g., nodes <italic>Patient</italic>.<italic>id</italic> and <italic>Patient</italic>.<italic>attributes</italic> were merged into node <italic>Patient</italic>). Sources were transformed into edges connecting the previously created nodes directly (e.g., <italic>ProjectPatient</italic>.<italic>PK</italic> became the edge labeled <italic>InProject</italic>) as shown in the right panel (step 7)</p></caption><graphic xlink:href="12859_2022_5092_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par49">For the third source labeled <italic>DiagnosisPatient</italic>.<italic>PK</italic> the transformation steps 7.2 and 7.3 were applicable. In absence of the DiagnosisAddition relation, the direct relationship between the <italic>Patient</italic> and <italic>Diagnosis</italic> node would simply be established by transforming the source according to step 7.2. The relationship <italic>HasDiagnosis</italic> would then also incorporate the additional property for the date at which the certain diagnosis was made for the specific patient. Considering also the diagnosis addition, the ternary relationship could not be modeled by a single relationship between two of the affected entities if the DiagnosisAddition relation stored more than just an id and description (i.e. further attributes regarding the characteristics of the addition or FK attributes linking to other relations). However, the attributes DiagnosisPatient.addition and DiagnosisAddition.id constituting the FK relationship between a patient’s diagnosis and the (optional) addition to the diagnosis were consumed as defined in step 7.3 because the DiagnosisAddition.description was pulled into <italic>HasDiagnosis</italic> as an additional attribute of the relationship, too.</p>
      <p id="Par50">The same transformations were applied to the other half of <inline-formula id="IEq38"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{RG}$$\end{document}</tex-math><mml:math id="M66"><mml:mi mathvariant="bold">RG</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq38.gif"/></alternatives></inline-formula>. This is visualized by the two graphs in Fig. <xref rid="Fig4" ref-type="fig">4</xref> after subsequent application of each of the two previously described transformation steps 6 and 7. From the transformation step 6, we obtained the nodes <italic>Order</italic>, <italic>Analysis</italic>, <italic>Result</italic>, <italic>AnalysisMaster</italic>, <italic>MaterialNumber</italic>, <italic>Material</italic> and of course <italic>Patient</italic> (which was already shown in Fig. <xref rid="Fig3" ref-type="fig">3</xref>) with the respective attributes. Following the rules for transformation step 7, the sources <italic>OrderPatient</italic>.<italic>PK</italic>, <italic>ResultAnalysis</italic>.<italic>PK</italic> and <italic>MaterialPatient</italic>.<italic>PK</italic> were converted into edges labeled <italic>HasOrder</italic>, <italic>HasResult</italic> and <italic>HasMaterial</italic>, respectively.<fig id="Fig4"><label>Fig. 4</label><caption><p>Schema graph <inline-formula id="IEq33"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq33.gif"/></alternatives></inline-formula> transformation. The transformation of the schema graph <inline-formula id="IEq34"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq34.gif"/></alternatives></inline-formula> is depicted in two steps. The left panel displays the merge of hubs and directly connected sinks into new entity nodes (blue) in <inline-formula id="IEq35"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M72"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq35.gif"/></alternatives></inline-formula> according to transformation step 6 (e.g., nodes <italic>Patient</italic>.<italic>id</italic> and <italic>Patient</italic>.<italic>attributes</italic> were merged into node <italic>Patient</italic>). Sources were transformed into edges connecting the previously created nodes directly (e.g., <italic>OrderPatient</italic>.<italic>PK</italic> and <inline-formula id="IEq36"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$OrderPatient.order\_date$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:mi>O</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>P</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>i</mml:mi><mml:mi>e</mml:mi><mml:mi>n</mml:mi><mml:mi>t</mml:mi><mml:mo>.</mml:mo><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq36.gif"/></alternatives></inline-formula> became the edge labeled <italic>HasOrder</italic> with attribute <inline-formula id="IEq37"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$order\_date$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>d</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq37.gif"/></alternatives></inline-formula>) as shown in the right panel (step 7)</p></caption><graphic xlink:href="12859_2022_5092_Fig4_HTML" id="MO4"/></fig></p>
      <p id="Par51">Figure <xref rid="Fig5" ref-type="fig">5</xref> visualizes the further processing of <inline-formula id="IEq43"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M78"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq43.gif"/></alternatives></inline-formula> by the previously defined conversion of FK relations into edges (step 8). In particular, the four hubs labeled <inline-formula id="IEq44"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$MaterialNumber.master\_id$$\end{document}</tex-math><mml:math id="M80"><mml:mrow><mml:mi>M</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>N</mml:mi><mml:mi>u</mml:mi><mml:mi>m</mml:mi><mml:mi>b</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mo>.</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq44.gif"/></alternatives></inline-formula>, <inline-formula id="IEq45"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Analysis.material\_id$$\end{document}</tex-math><mml:math id="M82"><mml:mrow><mml:mi>A</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>y</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>i</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>_</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq45.gif"/></alternatives></inline-formula>, <inline-formula id="IEq46"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Analysis.master\_id$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mi>A</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>y</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>m</mml:mi><mml:mi>a</mml:mi><mml:mi>s</mml:mi><mml:mi>t</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq46.gif"/></alternatives></inline-formula> and <inline-formula id="IEq47"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Analysis.order\_id$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:mi>A</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>y</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq47.gif"/></alternatives></inline-formula> fulfill the condition of linking two entities (i.e. they represent a FK relation between them), and, thus, were resolved as relationships in the graph data model according to step 8.1. These new edges, that were labeled <italic>CreatedFrom</italic>, <italic>OnMaterial</italic>, <italic>HasMaster</italic> and <italic>HasAnalysis</italic>, replace the four hub nodes in <inline-formula id="IEq48"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M88"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq48.gif"/></alternatives></inline-formula> depicted in the left-hand panel of Fig. <xref rid="Fig5" ref-type="fig">5</xref>. Furthermore, based on the source <italic>DynamicField</italic>.<italic>PK</italic>, that covers the analysis_id and field attribute of the DynamicField relation, and the sink <italic>DynamicField</italic>.<italic>attributes</italic> a new entity <italic>DynamicField</italic> and a new relationship <italic>HasDynamicField</italic> going out from it towards the entity <italic>Analysis</italic> were added to <inline-formula id="IEq49"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M90"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq49.gif"/></alternatives></inline-formula> (step 8.2).<fig id="Fig5"><label>Fig. 5</label><caption><p>Schema graph <inline-formula id="IEq39"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M92"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq39.gif"/></alternatives></inline-formula> transformation. The further transformation of the schema graph <inline-formula id="IEq40"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M94"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq40.gif"/></alternatives></inline-formula> is depicted in two steps. The left panel depicts how the remaining FK relations between some entities were resolved and how the respective nodes were replaced by relationships between the entities in <inline-formula id="IEq41"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq41.gif"/></alternatives></inline-formula> according to transformation step 8. For instance, the reference from <italic>Analysis</italic> to <italic>Order</italic> via the FK <inline-formula id="IEq42"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Analysis.order\_id$$\end{document}</tex-math><mml:math id="M98"><mml:mrow><mml:mi>A</mml:mi><mml:mi>n</mml:mi><mml:mi>a</mml:mi><mml:mi>l</mml:mi><mml:mi>y</mml:mi><mml:mi>s</mml:mi><mml:mi>i</mml:mi><mml:mi>s</mml:mi><mml:mo>.</mml:mo><mml:mi>o</mml:mi><mml:mi>r</mml:mi><mml:mi>d</mml:mi><mml:mi>e</mml:mi><mml:mi>r</mml:mi><mml:mi>_</mml:mi><mml:mi>i</mml:mi><mml:mi>d</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq42.gif"/></alternatives></inline-formula> was transformed to <italic>HasAnalysis</italic>. The graph data model was further refined and simplified by structural changes (e.g., pulling the <italic>AnalysisMaster</italic> into the <italic>Analysis</italic> entity) as depicted in the right panel</p></caption><graphic xlink:href="12859_2022_5092_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec11">
      <title>Use case specific data model adaptation</title>
      <p id="Par52">Under the consideration that the AnalysisMaster relation only contained a single attribute description next to the id attribute with the sole purpose of identifying each record uniquely, the same information from the corresponding <italic>AnalysisMaster</italic> entity could also be incorporated into each <italic>Analysis</italic> entity directly by declaring the description about a certain type of analysis as an attribute of the <italic>Analysis</italic> entity logically replacing the <italic>AnalysisMaster</italic> entity. As alternative to this strategy, we specified a node label for each of the different types of analysis that all inherit attributes and relationships from the general <italic>Analysis</italic> node label for a more fine-grained and intuitive modeling. On the one hand, this allowed the formulation of Cypher queries that either traverse analysis nodes regardless of the specific type of analysis or traverse nodes of a specific analysis type only. The definition of the data model in this way, on the other hand, could also utilize even more sophisticated, deeper taxonomies. The effect of this restructuring is also shown in the right panel of Fig. <xref rid="Fig5" ref-type="fig">5</xref> where the <italic>AnalysisMaster</italic> entity was “absorbed” by the <italic>Analysis</italic> entity that now also represented the node labels of the different analysis types (not visualized in this figure for the sake of simplicity).</p>
      <p id="Par53">Another transformation was applied to the entity nodes representing the material hierarchy obtained as biological samples from a patient (e.g., DNA or RNA material, from which sub-materials are produced by cultivation or preparation). We did not further distinguish between the subtypes of materials such as preparation or cultivation but rather model them as material themselves which were obtained from a main material. Hence, the <italic>MaterialNumber</italic> entity was merged into the <italic>Material</italic> entity and then represented main materials and sub-materials produced from main materials. A node in the Neo4j database with the label <italic>Material</italic> is then either a main material with a unique number as <italic>id</italic> and a <italic>type</italic> value or it is a sub-material with an additional <italic>subnumber</italic> attribute. The optionality of such properties as well as the introduced self-reference (i.e. the edge labeled <italic>CreatedFrom</italic> in the graph on the right panel in Fig. <xref rid="Fig5" ref-type="fig">5</xref>) appropriately mirrored the native dependence in the material hierarchy. Here, we decided not to model the materials analogously to the analyses with additional labels for the different types of material. This avoids an inflation of the model by too many node labels for the more than 50 material types.</p>
      <p id="Par54">To model the peculiarities of the different types of analyses recorded in the medical database which manifest in diverse results (e.g., mutations indicated by potentially multiple fusions as detected in the context of an RNA sequence analysis or the determined karyotype information based on an Array-CGH analysis) the relational schema contains multiple relations storing that analysis-dependent information as key-value pairs. For the implementation of our system, we, first, aggregated them logically into one placeholder relation called DynamicField representing all the different relations with specific key-value pairs for the results of the analyses. This relation resulted in the applied transformation of the relational schema to the graph data model to an entity <italic>DynamicField</italic> that is related to the <italic>Analysis</italic> entity via the relation <italic>HasDynamicField</italic> as depicted in Fig. <xref rid="Fig5" ref-type="fig">5</xref>.</p>
      <p id="Par55">As our dashboard is focused on the analytical results, we then further refined our graph data model at this place. There were multiple ways of how to restructure the model around the specific replacement of the <italic>DynamicField</italic> placeholder depending on the value type of the analytical result: <list list-type="order"><list-item><p id="Par56">A dynamic field can be restructured when pulling the respective entity node into the specific analysis by setting the stored name or key of the field as new attribute name. Such a restructuring is suitable if there are dedicated fields with a huge or even infinite active domain that are also independent from other fields (e.g., a field with name <italic>q</italic> for some measured numerical value would be a reasonable extension to the corresponding analysis entity node as additional attribute). Creating an individual node for each possible value, in contrast, is obviously not feasible if there are too many possibilities.</p></list-item><list-item><p id="Par57">If the data type of the dynamic field is multi-valued (e.g., a list of identified mutations) or multiple dynamic fields constitute one logical entity that reasonably should be grouped together (e.g., some combination of fields represent an estimated result), a likelihood for the estimation and the next most likely estimation, the placeholder entity can be replaced with a more specific entity or set of entities. In our use case, one new node label named <italic>Fusion</italic> was inserted into the database that stands for a certain mutation or group of mutations. The information about each analysis that detected a fusion matching one of the mutations was then stored by establishing the relation <italic>HasFusion</italic> between the specific analysis node and the corresponding fusion node. This was an improvement as it resolved the dynamic fields even over different types of analysis identifying mutations. Additionally, this facilitated queries and the graph structure as patients with the same mutation(s) related to the same fusion node(s).</p></list-item></list></p>
    </sec>
  </sec>
  <sec id="Sec12">
    <title>Results</title>
    <sec id="Sec13">
      <title>Architecture and ETL</title>
      <p id="Par58">The final graph database model as obtained from the transformations of <inline-formula id="IEq50"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\textbf{RG}$$\end{document}</tex-math><mml:math id="M100"><mml:mi mathvariant="bold">RG</mml:mi></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq50.gif"/></alternatives></inline-formula> (cf. Implementation) and implemented in the Neo4j graph database as backbone of our Graph4Med system is shown in Fig. <xref rid="Fig6" ref-type="fig">6</xref>. The nodes model the different domains (i.e., the classes of objects stored in the graph) and the edges model the relationships between objects. The implemented model was equal to the union <inline-formula id="IEq51"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\mathbf {RG_1} \cup \mathbf {RG_2}$$\end{document}</tex-math><mml:math id="M102"><mml:mrow><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">1</mml:mn></mml:msub><mml:mo>∪</mml:mo><mml:msub><mml:mi mathvariant="bold">RG</mml:mi><mml:mn mathvariant="bold">2</mml:mn></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq51.gif"/></alternatives></inline-formula> after the applied transformations (right graphs from Figs. <xref rid="Fig3" ref-type="fig">3</xref> and <xref rid="Fig5" ref-type="fig">5</xref>). The <italic>Analysis</italic> node was still a generic node label from which other labels for more specific analysis types (e.g., the label <italic>ArrayCGHAnalysis</italic> for Array-CGH analyses) were derived. For the sake of a less overloaded graph these are not shown in Fig. <xref rid="Fig6" ref-type="fig">6</xref>. Here, we also show the <italic>Fusion</italic> node as a restructuring of a dynamic field that was detected for different types of analysis (e.g., RNA sequence or Array-CGH analysis).<fig id="Fig6"><label>Fig. 6</label><caption><p>Graph database model. The final graph database model as applied in the Neo4j database behind the web-based dashboard in Graph4Med. The nodes of this graph represent the different domains of the objects stored in the database and the edges indicate the relationships between two objects</p></caption><graphic xlink:href="12859_2022_5092_Fig6_HTML" id="MO6"/></fig></p>
      <p id="Par59">We used Python scripts to extract the patient cohort of pediatric ALL cases from the relational MS-SQL database server in an incremental fashion via SQL queries. Then, the obtained data were transformed into the graph data model using Neomodel [<xref ref-type="bibr" rid="CR21">21</xref>], an Object Graph Mapper (OGM) for the Neo4j database system, and loaded into the Neo4j database instance. First the patients’ personal information (i.e. id, name, age, gender) were queried and added as nodes to mark the cohort. Subsequently all other related data (e.g., projects, orders, analyses) were queried for each patient of the cohort and linked to the related nodes according to the schema. We focused on the retrieval of general information about the patient and related entities, e.g., diagnoses or lab results. The analytics-related data concentrated on the results of various assays and methods, instead of raw data, e.g., raw NGS data, raw karyotype data. Our system is not intended to store the raw data, but instead the analytical results and related information, e.g., the materials on which the specific analyses were carried out, that contribute to the visualization regarding the ALL cases in our proposed visualization tool. The setup of the Neo4j database took approx. 50-55 minutes and was scheduled to be updated once every night.</p>
    </sec>
    <sec id="Sec14">
      <title>NeoDash dashboard builder</title>
      <p id="Par60">Based on this Neo4j database, the web-based dashboard building tool NeoDash [<xref ref-type="bibr" rid="CR18">18</xref>] was deployed in a web server next to Neo4j and used to build a dashboard for the visualization and analysis of the ALL cohort. Once the NeoDash web application is setup, it can be connected to any Neo4j database instance for a convenient development and usage of dashboards for displaying and analyzing the stored data. The main components of a dashboard are one or more pages that each contain a collection of reports, i.e., some sort of visualization of information. The reports are populated with the results of Cypher queries that are executed via the dashboard against database on-the-fly. A built-in query editor enables to formulate these queries for the reports based on the selected chart type, e.g., a bar chart. The definition of the dashboard structure itself can also be stored in Neo4j for a convenient versioning, sharing and on-demand loading of the developed dashboards. The modularity of dashboard pages with multiple reports increases the flexibility regarding the extension of the dashboard by adding reports or new pages on demand.</p>
      <p id="Par61">Our analysis dashboard consists of several pages to grant different views on the data being investigated. Each page comprises multiple reports presenting tabular, graph-based, or chart-based visualizations of the patient data. In particular, our dashboard incorporates pages for the general overview and statistics of the full cohort, the detailed analysis of a specific subgroup of patients and the analysis of a single patient including the similarity comparison to other patients.</p>
    </sec>
    <sec id="Sec15">
      <title>Cohort view</title>
      <p id="Par62">In the previously used relational database of this pediatric ALL cohort, it was always cumbersome to retrieve overall statistics. Doctors and researchers were required to perform the counting and selections from the exported tables themselves, which is time consuming and error-prone. It was almost impossible for them to generate visualizations of cohort statistics. In contrast, with our tool Graph4Med, they can now easily obtain up-to-date statistics and visualizations immediately. For example, in the cohort view page of our dashboard, the top two bar plots show the distribution of current age (top) or age at diagnosis (middle) (Fig. <xref rid="Fig7" ref-type="fig">7</xref>), which are both additionally grouped by the gender of the cohort patients. (Note: Due to data privacy reasons, we do not show the plots from the real data, but instead from artificially generated data). The number to the top left indicates the size of the cohort. In these bar plots, the stacked colors indicate the distribution grouped by gender. Green and orange indicate female and male, respectively. The bottom bar plot shows various non-ALL diagnosis grouped by gender. Because our cohort had a small percentage of non-ALL cases such as Acute Myeloid Leukemia (AML), pediatric and non-pediatric Myelodysplastic Syndrome (MDS), or Trisomy 21, it is very helpful to have the number and gender distribution of these comorbidity cases. These plots are useful for identifying relationships between age/gender and disease. Moreover, our dashboard can displays other useful information in addition to age/gender: The three drop down fields below the bar plot allow users to choose the values to plot on the X-axis, Y-axis and color group. For example, it is possible to show frequencies instead of patients counts. Similarly, it is possible to display distributions of MRD (minimal residual disease) or material type instead of gender.<fig id="Fig7"><label>Fig. 7</label><caption><p>Cohort view. Dashboard page for general cohort information and statistics such as gender and age distribution. The three drop down fields below each bar plot allow to choose distributions other than gender and age. Note: due to data privacy reasons, the plots shown here were made from artificially generated data</p></caption><graphic xlink:href="12859_2022_5092_Fig7_HTML" id="MO7"/></fig></p>
    </sec>
    <sec id="Sec16">
      <title>Subgroup view</title>
      <p id="Par63">As mentioned previously, leukemia is mostly driven by gene fusions and aberrant chromosome numbers. They are the main factors for deciding B-ALL subgroups and play important roles in risk stratification [<xref ref-type="bibr" rid="CR17">17</xref>]. In Fig. <xref rid="Fig8" ref-type="fig">8</xref>a, we demonstrated the number of fusions per patient in the left panel, and a distribution of major B-ALL subgroups in the middle panel. The table on the right shows all the names of fusions and their aliases used in the database.<fig id="Fig8"><label>Fig. 8</label><caption><p>Subgroup distribution. <bold>a</bold> The left panel shows the number of fusions per patient. The middle panel shows the distribution of 10 most frequent B-ALL subgroups. The table on the right lists all the fusion names and their aliases. <bold>b</bold> Age and gender distribution for selected fusion, “CRLF2-P2RY8” in this case. <italic>Note</italic>: Due to data privacy reasons, the plots shown here do not reflect the real distributions</p></caption><graphic xlink:href="12859_2022_5092_Fig8_HTML" id="MO8"/></fig></p>
      <p id="Par64">Because gene fusion and aneuploidy information are important for leukemia, we implemented a function to select certain fusion or aneuploidy type, and then visualize patients’ distribution within this subgroup. In the left panel of Fig. <xref rid="Fig8" ref-type="fig">8</xref>b, there is an auto-completing selection field where users can enter the name of a subgroup, for example, CRLF2-P2RY8 was chosen in this case. In the middle and right panel of Fig. <xref rid="Fig8" ref-type="fig">8</xref>b , we display the age and gender distributions for this selected subgroup.</p>
      <p id="Par65">We also developed a graph view to demonstrate the relationships among patients. After selecting a certain subgroup, all the patients of this subgroup are displayed in a table (right panel of Fig. <xref rid="Fig9" ref-type="fig">9</xref>a). A maneuverable graph showing the relationships between patients (green nodes) and subgroups (yellow nodes) are displayed on the left. This graph can show different nodes depending on the needs. For example, in Fig. <xref rid="Fig9" ref-type="fig">9</xref>b, material information (orange nodes) were added in relation to the patients and subgroup. Similarly any other features (color of nodes) mentioned in Fig. <xref rid="Fig6" ref-type="fig">6</xref> can be added. The exact value to display inside each node can be chosen by the drop-down menu on the bottom, which has the same color scheme as nodes (more explanation in next section and Table <xref rid="Tab1" ref-type="table">1</xref>). Our graph is flexible in that it can not only display any feature (color of nodes) of interests but users may also (1) drag the nodes for easier visualizations; (2) hover over or click on nodes and relationships to inspect their properties; (3) zoom in/out on any region of the graph.<table-wrap id="Tab1"><label>Table 1</label><caption><p>List of variables to display at graph reports for some node labels</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Node label</th><th align="left">Alternative attribute</th></tr></thead><tbody><tr><td align="left">Patient (dark blue)</td><td align="left">id, name, gender, date of birth</td></tr><tr><td align="left">Diagnosis (pink)</td><td align="left">name, icd code</td></tr><tr><td align="left">Material (brown)</td><td align="left">id, type, description</td></tr><tr><td align="left">Order (orange)</td><td align="left">id, type, date</td></tr><tr><td align="left">Analysis (gray)</td><td align="left">id, analytical result</td></tr><tr><td align="left">Fusion (light blue)</td><td align="left">name, other names</td></tr></tbody></table></table-wrap><fig id="Fig9"><label>Fig. 9</label><caption><p>Graph view of relationships. <bold>a</bold> Graph view of a selected subgroup. It shows the relationship between patients and subgroups. The table on the right lists all the patients belonging to this subgroup with their additional information such as age, karyotype, chromosomes etc. <bold>b</bold> Different features of patients (color of node) can be integrated, for example, patients materials (orange nodes) were chosen here as additional information. <italic>Note</italic>: due to data privacy reasons, the plots and table shown here were made from artificially generated data</p></caption><graphic xlink:href="12859_2022_5092_Fig9_HTML" id="MO9"/></fig></p>
    </sec>
    <sec id="Sec17">
      <title>Individual patient view</title>
      <p id="Par66">The traditional relational database was designed based on the management and health care for an individual patient. Its functionality is sufficient to retrieve information of a particular patient (e.g., a doctor checks the lab results and plans the treatment for one patient). Here, we enhance this functionality by displaying an individual’s information in a compact, maneuverable graph. By a single glance, the users can grasp most of the details instead of going through the cumbersome and error-prone tabular process. The bottom left of Fig. <xref rid="Fig10" ref-type="fig">10</xref> shows such a graph where different colors of nodes represent different types of information (features) for the selected patient. The user can dynamically adapt the value displayed on the nodes through the small drop-down menus at the bottom of the graph. In this way, the node text can be set to any of the node attributes or some basic property such as the node label according to the data schema. For instance, currently in Fig. <xref rid="Fig10" ref-type="fig">10</xref> the dark blue node presents the patient’s gender; the brown nodes depict a single material linked to the patient and analysis; the light grey nodes represent the fusions identified, which are PAX5 and CRLF2-P2RY8 in this case. Table <xref rid="Tab1" ref-type="table">1</xref> gives an overview for the alternative values that could be displayed on the nodes of each type (color). Furthermore, the tabular report in Fig. <xref rid="Fig10" ref-type="fig">10</xref> gives an overview over the subgroup with one row per patient. The columns can be sorted and filtered and the user can also decide which columns to display or hide (e.g., the column with the patient ID is hidden here).<fig id="Fig10"><label>Fig. 10</label><caption><p>Individual patient view. Presentation of an individual patient’s information in a table and graph (top right and bottom left panel). Bottom right is the result of the similarity search across the entire cohort with the selected patient in the middle. Note: due to privacy reasons, the plots shown here were made from artificially generated data</p></caption><graphic xlink:href="12859_2022_5092_Fig10_HTML" id="MO10"/></fig></p>
      <p id="Par67">Graph4Med can also generate a patient similarity graph, which is shown on the bottom right of Fig. <xref rid="Fig10" ref-type="fig">10</xref>. Here, we implemented a very simple similarity algorithm based on diagnosis, gene fusions, and aneuploidy which can be treated as a fusion. Depending on the needs of the specific medical use case, a more sophisticated similarity measure could be developed in the future. In our use case, the Jaccard index <inline-formula id="IEq52"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$J(A, B) = \frac{A \cap B}{A \cup B}$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:mi>J</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>A</mml:mi><mml:mo>,</mml:mo><mml:mi>B</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mi>A</mml:mi><mml:mo>∩</mml:mo><mml:mi>B</mml:mi></mml:mrow><mml:mrow><mml:mi>A</mml:mi><mml:mo>∪</mml:mo><mml:mi>B</mml:mi></mml:mrow></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="12859_2022_5092_Article_IEq52.gif"/></alternatives></inline-formula> was applied to the target patient and all other candidates. It yields a value between 0 and 1 where 1 indicates maximum similarity between target and candidate patient and 0 indicates no similarity between them. In the example shown on the bottom right of Fig. <xref rid="Fig10" ref-type="fig">10</xref>, the target patient (the node in the middle) is connected to all the patients that have a similarity exceeding a certain threshold. The width and color of the edges between nodes scale with the level of similarity: Bolder and darker connections represent a strong similarity and vice versa. In this example, we see two levels of similarity, thin light-green and thick blue.</p>
    </sec>
  </sec>
  <sec id="Sec18">
    <title>Discussion</title>
    <p id="Par68">In Graph4Med, we converted a relational database to a graph database in Neo4j and further built a dashboard on it. This tool is very well liked by our end users—clinicians, researchers and lab scientists. It not only provides meticulous visualizations other than tables and statistics of the whole cohort, but also enables to search patient subgroups based on fusions and aneuploidy, which are the most important factors in stratifying leukemia patients. The former system did not support the search for patient subgroups nor the computation of statistics whereas these important aspects were effortlessly included in the dashboard reports. We also implemented a small algorithm to display patient similarities. The success of Graph4Med in the pediatric ALL database has already prompted interests among clinicians from other disease areas.</p>
    <p id="Par69">Table <xref rid="Tab2" ref-type="table">2</xref> summarizes the implementation of key features for the old and new system that have driven the development of Graph4Med. Our dashboard is designed to be user-friendly with flexibility and interactivity to improve the efficiency of the current clinical practice. To this end, it overcomes several limitations of the former system, e.g., by providing various visualizations, broad overviews and summarizing statistics. The key feature to navigate individual cases is still kept while Graph4Med also enables the detection of complex relationships among patients and subpopulations in the dashboard pages. It allows each user to individually modify the visualizations and adapt them to his/her specific needs. (1) Users can select the contents to be displayed in the nodes on-demand. (2) Because there are very complex data structures in the original database even for one patient (see Fig. <xref rid="Fig9" ref-type="fig">9</xref>b), it is impossible to display all the nodes when we have more than 5 patients. Our tool made it possible to choose what type (color) of nodes to display. (3) The Cypher queries for plots and tables are embedded in the dashboard and the query language is the only prerequisite for adding additional reports. It is possible for non-IT users to modify parameters and obtain the plots they desire.<table-wrap id="Tab2"><label>Table 2</label><caption><p>Comparison between the old relational system (RDB) and Graph4Med with evaluations from our end users. The figure references relate to implementation examples</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">Feature</th><th align="left">RDB</th><th align="left">Graph4Med</th><th align="left">User comments</th></tr></thead><tbody><tr><td align="left">Overview &amp; general cohort statistics</td><td align="left">✗</td><td align="left">✓ (Fig. <xref rid="Fig7" ref-type="fig">7</xref>)</td><td align="left">In the RDB, the DB administrator queries for the desired information summarizing a patient cohort in a table from which plots are generated manually with third-party tools. This usually takes several weeks in our practice, especially, if the query has to be adapted after seeing the first version of the plot.</td></tr><tr><td align="left">Visualization of cohort/subpopulation</td><td align="left">✗</td><td align="left">✓ (Fig. <xref rid="Fig8" ref-type="fig">8</xref>)</td><td align="left"/></tr><tr><td align="left">Visualization of relationships among patients</td><td align="left">✗</td><td align="left">✓ (Fig. <xref rid="Fig9" ref-type="fig">9</xref>a)</td><td align="left"/></tr><tr><td align="left">Navigate through individual cases</td><td align="left">✓</td><td align="left">✓</td><td align="left"/></tr><tr><td align="left">Gather a patient profile &amp; visualize various data of individual cases</td><td align="left">✗</td><td align="left">✓ (Figs. <xref rid="Fig9" ref-type="fig">9</xref>b and <xref rid="Fig10" ref-type="fig">10</xref>)</td><td align="left">In the old system, users have to browse multiple tables to gather a profile of an individual case and there is no possibility of visualizing relationships among various data in such a profile (cf. Fig. <xref rid="Fig10" ref-type="fig">10</xref>)</td></tr><tr><td align="left">Eliminate redundant answers</td><td align="left">✗</td><td align="left">✓</td><td align="left"/></tr><tr><td align="left">Aggregate results</td><td align="left">✗</td><td align="left">✓</td><td align="left"/></tr><tr><td align="left">Fusion-based search</td><td align="left">✗</td><td align="left">✓ (Figs. <xref rid="Fig8" ref-type="fig">8</xref>b and <xref rid="Fig9" ref-type="fig">9</xref>a)</td><td align="left">Gene fusions are the most important drivers for leukemia, and also the main bases for patient stratification, thus, searching for patients with the same fusion is very useful.</td></tr><tr><td align="left">Patient similarity search</td><td align="left">✗</td><td align="left">✓ (Fig. <xref rid="Fig10" ref-type="fig">10</xref>)</td><td align="left"/></tr></tbody></table></table-wrap></p>
    <p id="Par70">As the structure of the dashboard itself is stored in the Neo4j database, it can be updated and extended easily. The users are allowed to share and load different versions of the dashboard at any time. Furthermore, this even gives the option to have access to multiple independent dashboards focusing on different use cases or research questions on the same underlying data set. The graph database also implicitly removes redundant answers with the graph structure and data aggregation becomes feasible than with the complex SQL queries and overloaded tables. This results in less overhead for the users who can skip the time intense step of filtering the redundant information from the tables.</p>
    <p id="Par71">Medical databases are constantly updated. Therefore, we update the Graph4Med database every night to keep the dashboard up-tp-date. Graph4Med currently has 2185 patients with 4,919 analyses and 723 fusions detected and currently contains 64,677 nodes and 77,129 relationships with a total size of approx. 400 MB. It takes about 50–55 min to update the whole database.</p>
    <sec id="Sec19">
      <title>Comparison with related medical dashboards</title>
      <p id="Par72">In Table <xref rid="Tab3" ref-type="table">3</xref> we compare Graph4Med with other medical visualization systems or dashboards on several high-level features. The column “System” lists the different medical visualization systems and dashboards. For each system, the table states the actual database management sytem (col. “DBMS”) as well as the offered types of interfaces (col. “Interface”), e.g., a web application or command line interface (CLI). We evaluated the interactivity, i.e., the possibility to interact with the plots of the dashboard, and the flexibility, i.e., the option to effortlessly extend the dashboard with new visualizations or reports, of the dashboards and the results are shown in the columns “Int” and “Flex”, respectively. The table column “Coll” refers to the capability of the system for collaboration in the sense of versioning or sharing extended dashboard versions with other users and “Exp” to the ability to export charts or download data from the tool. Table <xref rid="Tab3" ref-type="table">3</xref> also contains a column “Data” that summarizes the types of data dealt with in the corresponding system.<table-wrap id="Tab3"><label>Table 3</label><caption><p>Comparison of medical visualization systems and dashboards. The implementation details on the database (“DBMS”), available interfaces (“Interface”) and the data (“Data”) are listed. The features interactivity (“Int”), flexibility (“Flex”), collaboration (“Coll”) and export(“Exp”) are assessed qualitatively</p></caption><table frame="hsides" rules="groups"><thead><tr><th align="left">System</th><th align="left">DBMS</th><th align="left">Interface</th><th align="left">Int</th><th align="left">Flex</th><th align="left">Coll</th><th align="left">Exp</th><th align="left">Data</th></tr></thead><tbody><tr><td align="left">MyPal [<xref ref-type="bibr" rid="CR22">22</xref>]</td><td align="left">Unknown</td><td align="left">Web, Mobile App</td><td align="left">✓</td><td align="left">✗</td><td align="left">✗</td><td align="left">✓</td><td align="left">Patient data, demographics, treatment, patient-reported outcomes</td></tr><tr><td align="left">CovidGraph [<xref ref-type="bibr" rid="CR23">23</xref>]</td><td align="left">Neo4j</td><td align="left">Web</td><td align="left">✓</td><td align="left">✗</td><td align="left">✗</td><td align="left">✓</td><td align="left">Publications, patents, clinical trials, genes, transcripts, proteins, pathways, statistics, systems biology data</td></tr><tr><td align="left">OncoKB [<xref ref-type="bibr" rid="CR24">24</xref>]</td><td align="left">MySQL</td><td align="left">Web, CLI</td><td align="left">✓</td><td align="left">✗</td><td align="left">✗</td><td align="left">✓</td><td align="left">Cancer mutations, drugs with corresponding cancer type &amp; targeted mutations</td></tr><tr><td align="left">BioGraph [<xref ref-type="bibr" rid="CR16">16</xref>]</td><td align="left">Neo4j</td><td align="left">Web</td><td align="left">✓</td><td align="left">✗</td><td align="left">✗</td><td align="left">✓</td><td align="left">Genes, proteins, miRNA-related data, pathways, functional annotations</td></tr><tr><td align="left">LinkedImm [<xref ref-type="bibr" rid="CR12">12</xref>]</td><td align="left">Neo4j</td><td align="left">Web</td><td align="left">✓</td><td align="left">✗</td><td align="left">✗</td><td align="left">✓</td><td align="left">Immunological data, genes, pathways, transcriptional profiling data</td></tr><tr><td align="left">Graph4Med</td><td align="left">Neo4j</td><td align="left">Web</td><td align="left">✓</td><td align="left">✓</td><td align="left">✓</td><td align="left">✗</td><td align="left">Patient diagnostic, genomic analysis results (incl. karyotyping, RNASeq, arrayCGH)</td></tr></tbody></table></table-wrap></p>
    </sec>
    <sec id="Sec20">
      <title>Limitations</title>
      <p id="Par73">During our implementation, we also observed some technical limitations of building the dashboard by NeoDash and Neo4j. For example, (1) One cannot export the report charts, graphs or tables directly from the dashboard; (2) One can not select a certain sub-population after choosing a fusion type. It would be desirable if users can choose which patients from the table to include in the graph report (Fig. <xref rid="Fig9" ref-type="fig">9</xref>a). We would also like to mention that due to the complexity of our previously used database, we did not convert all the different analysis types to our graph database. However, the missing analysis or any novel techniques can be integrated seamlessly in accordance to previously incorporated analysis. The results of FISH analyses that are also employed to identify gene fusions are not incorporated yet, for instance, which leads to smaller numbers of ETV6-RUNX1 and BCR-ABL cases in the cohort statistics than they actually are.</p>
      <p id="Par74">As Neo4j and NeoDash are constantly improving, we should be able to improve the functionality of our dashboard such as exporting reports in the future. We are also interested to expand Graph4Med to other disease databases or to integrate additional sources of information. One future direction to extend Graph4Med would be to integrate more data for the diagnostic pipeline such as gene expression and point mutation results. Incorporating these results or additional resources with bioinformatics data into Graph4Med could further facilitate the analytical capabilities of the system. We could also have more complex algorithms for measuring patient similarity when the use case is bigger and contains a rich diversity of diseases. For example, our collaborator at the Department of Human Genetics of the Medizininsche Hochschule Hannover also has a database for various, rare genetic diseases. We could design a new similarity algorithm considering various factors including age, gender, symptom, genetic factors. In the case of rare diseases, suggestions from patient similarity search will be especially useful in pinpointing treatment options.</p>
    </sec>
  </sec>
  <sec id="Sec21">
    <title>Conclusion</title>
    <p id="Par75">In our work, we developed a flexible medical visualization tool including a web-based dashboard on top of a Neo4j graph database storing the application data. We presented a method on how to convert a relational database schema to a graph data model for the easy implementation of our dashboards with Cypher queries against the stored data graph. The visualizations provide the analytical capabilities in a convenient and interactive fashion that were not possible in the old system. Our work proves the flexibility and feasibility of a graph database for managing medical data as it allows for an intuitive representation of the structure of the medical data schema.</p>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>AML</term>
        <def>
          <p id="Par4">Acute myeloid Leukemia</p>
        </def>
      </def-item>
      <def-item>
        <term>Array-CGH</term>
        <def>
          <p id="Par5">Array-based Comparative Genomic Hybridization</p>
        </def>
      </def-item>
      <def-item>
        <term>ALL</term>
        <def>
          <p id="Par6">Acute lymphoblastic leukemia</p>
        </def>
      </def-item>
      <def-item>
        <term>CLI</term>
        <def>
          <p id="Par7">Command line interface</p>
        </def>
      </def-item>
      <def-item>
        <term>DBMS</term>
        <def>
          <p id="Par8">Database management system</p>
        </def>
      </def-item>
      <def-item>
        <term>DNA</term>
        <def>
          <p id="Par9">Deoxyribonucleic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>FISH</term>
        <def>
          <p id="Par10">Fluorescence in situ hybridization</p>
        </def>
      </def-item>
      <def-item>
        <term>FK</term>
        <def>
          <p id="Par11">Foreign key</p>
        </def>
      </def-item>
      <def-item>
        <term>MDS</term>
        <def>
          <p id="Par12">Myelodys-plastic syndrome</p>
        </def>
      </def-item>
      <def-item>
        <term>microRNA</term>
        <def>
          <p id="Par13">Micro ribonucleic acid</p>
        </def>
      </def-item>
      <def-item>
        <term>MRD</term>
        <def>
          <p id="Par14">Minimal residual disease</p>
        </def>
      </def-item>
      <def-item>
        <term>NGS</term>
        <def>
          <p id="Par15">Next generation sequencing</p>
        </def>
      </def-item>
      <def-item>
        <term>OGM</term>
        <def>
          <p id="Par16">Object graph mapper</p>
        </def>
      </def-item>
      <def-item>
        <term>PK</term>
        <def>
          <p id="Par17">Primary key</p>
        </def>
      </def-item>
      <def-item>
        <term>SQL</term>
        <def>
          <p id="Par18">Structured query language</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
    <fn>
      <p>J. Schäfer and M. Tang have contributed equally to this work.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We acknowledge publication support by the OAF of the University Library of Goethe University Frankfurt.</p>
    <sec id="d32e2952">
      <title>Availability and requirements</title>
      <p id="Par76">Project name: Graph4Med. Project home page: <ext-link ext-link-type="uri" xlink:href="http://graph4med.cs.uni-frankfurt.de">http://graph4med.cs.uni-frankfurt.de</ext-link>. Project repository: <ext-link ext-link-type="uri" xlink:href="https://github.com/jeschaef/Graph4Med">https://github.com/jeschaef/Graph4Med</ext-link>. Operating system(s): Platform independent. Programming language: Python, JavaScript. Other requirements: Neo4j, NeoDash, Browser. LICENSE: MIT. Restrictions for non-academics: None.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>JS: project conception, system design, implementation, discussion, manuscript editing; MT: project conception, system design, discussion, manuscript editing, assessment, result validation, supervision. AB: project conception, system design, discussion, manuscript editing, result validation, supervision; DL: project conception, system design, discussion, result validation; LW: project conception, system design, discussion, manuscript editing, assessment, technical support, supervision; All authors read and approved the final version of the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>Open Access funding enabled and organized by Projekt DEAL. This work was supported by Else Kröner-Fresenius-Stiftung (Promotionsprogramm DigiStrucMed 2020_EKPK.20) and the Federal Ministry of Education and Research (BMBF), Germany, under the project LeibnizKILabor (grant no. 01DD20003). No funding body played any roles in the design of the study and collection, analysis, and interpretation of data and in writing the manuscript.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The clinical data used in our approach are not shared due to the preservation of the patients’ privacy. A public demonstrator with artificial data can be found on the Graph4Med website. Source code is located in the project repository.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par77">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ismail</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Materwala</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Karduck</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Adem</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Requirements of health data management systems for biomedical care and research: scoping review</article-title>
        <source>J Med Internet Res</source>
        <year>2020</year>
        <volume>22</volume>
        <issue>7</issue>
        <fpage>e17508</fpage>
        <pub-id pub-id-type="doi">10.2196/17508</pub-id>
        <pub-id pub-id-type="pmid">32348265</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Lawrence R. How RDBMS delays the healthcare data revolution. 2019. <ext-link ext-link-type="uri" xlink:href="https://www.marklogic.com/blog/rdbms-delays-healthcare-data-revolution/">https://www.marklogic.com/blog/rdbms-delays-healthcare-data-revolution/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Have</surname>
            <given-names>CT</given-names>
          </name>
          <name>
            <surname>Jensen</surname>
            <given-names>LJ</given-names>
          </name>
        </person-group>
        <article-title>Are graph databases ready for bioinformatics?</article-title>
        <source>Bioinformatics</source>
        <year>2013</year>
        <volume>29</volume>
        <issue>24</issue>
        <fpage>3107</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btt549</pub-id>
        <pub-id pub-id-type="pmid">24135261</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Wiese</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <source>Advanced data management</source>
        <year>2015</year>
        <publisher-loc>Berlin</publisher-loc>
        <publisher-name>De Gruyter</publisher-name>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Tomar</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Bhati</surname>
            <given-names>JP</given-names>
          </name>
          <name>
            <surname>Tomar</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Kaur</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Dey</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Ashour</surname>
            <given-names>AS</given-names>
          </name>
          <name>
            <surname>Bhatt</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>James Fong</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>Migration of healthcare relational database to NoSQL cloud database for healthcare analytics and management</article-title>
        <source>Healthcare data analytics and management. Advances in ubiquitous sensing applications for healthcare</source>
        <year>2019</year>
        <publisher-loc>London</publisher-loc>
        <publisher-name>Academic Press</publisher-name>
        <fpage>59</fpage>
        <lpage>87</lpage>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Rodriguez</surname>
            <given-names>MA</given-names>
          </name>
          <name>
            <surname>Neubauer</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Sakr</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Pardede</surname>
            <given-names>E</given-names>
          </name>
        </person-group>
        <article-title>The graph traversal pattern</article-title>
        <source>Graph data management: techniques and applications</source>
        <year>2012</year>
        <publisher-loc>IGI Global</publisher-loc>
        <publisher-name>Hershey</publisher-name>
        <fpage>29</fpage>
        <lpage>46</lpage>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Yoon</surname>
            <given-names>BH</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>SK</given-names>
          </name>
          <name>
            <surname>Kim</surname>
            <given-names>SY</given-names>
          </name>
        </person-group>
        <article-title>Use of graph database for the integration of heterogeneous biological data</article-title>
        <source>Genom Inform</source>
        <year>2017</year>
        <volume>15</volume>
        <issue>1</issue>
        <fpage>19</fpage>
        <pub-id pub-id-type="doi">10.5808/GI.2017.15.1.19</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Fabregat</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Korninger</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Viteri</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sidiropoulos</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Marin-Garcia</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ping</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Reactome graph database: efficient access to complex pathway data</article-title>
        <source>PLoS Comput Biol</source>
        <year>2018</year>
        <volume>14</volume>
        <issue>1</issue>
        <fpage>e1005968</fpage>
        <pub-id pub-id-type="doi">10.1371/journal.pcbi.1005968</pub-id>
        <pub-id pub-id-type="pmid">29377902</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Thapa I, Ali H. A new graph database system for multi-omics data integration and mining complex biological information. In: International conference on computational advances in bio and medical sciences. Springer; 2019. p. 171–83.</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Neo4j, Inc. The Neo4j graph data platform. 2022. <ext-link ext-link-type="uri" xlink:href="https://neo4j.com/product/">https://neo4j.com/product/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wandy</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Daly</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>GraphOmics: an interactive platform to explore and integrate multi-omics data</article-title>
        <source>BMC Bioinform</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>19</lpage>
        <pub-id pub-id-type="doi">10.1186/s12859-021-04500-1</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Bukhari</surname>
            <given-names>SAC</given-names>
          </name>
          <name>
            <surname>Pawar</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Mandell</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kleinstein</surname>
            <given-names>SH</given-names>
          </name>
          <name>
            <surname>Cheung</surname>
            <given-names>KH</given-names>
          </name>
        </person-group>
        <article-title>LinkedImm: a linked data graph database for integrating immunological data</article-title>
        <source>BMC Bioinform</source>
        <year>2021</year>
        <volume>22</volume>
        <issue>9</issue>
        <fpage>1</fpage>
        <lpage>14</lpage>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">Fiannaca A, La Rosa M, La Paglia L, Messina A, Urso A. BioGraphDB: a new GraphDB collecting heterogeneous data for bioinformatics analysis. In: Proceedings of BIOTECHNO. 2016.</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Fiannaca A, La Paglia L, La Rosa M, Messina A, Storniolo P, Urso A. Integrated DB for bioinformatics: a case study on analysis of functional effect of MiRNA SNPs in cancer. In: International conference on information technology in bio-and medical informatics. Springer; 2016. p. 214–22.</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Fiannaca A, La Paglia L, La Rosa M, Messina A, Rizzo R, Stabile D, et al. Gremlin language for querying the BiographDB integrated biological database. In: International conference on bioinformatics and biomedical engineering. Springer; 2017. p. 303–313.</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Messina</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Fiannaca</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>La Paglia</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>La Rosa</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Urso</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>BioGraph: a web application and a graph database for querying and analyzing bioinformatics resources</article-title>
        <source>BMC Syst Biol</source>
        <year>2018</year>
        <volume>12</volume>
        <issue>5</issue>
        <fpage>75</fpage>
        <lpage>89</lpage>
        <pub-id pub-id-type="pmid">29970070</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Iacobucci</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Mullighan</surname>
            <given-names>CG</given-names>
          </name>
        </person-group>
        <article-title>Genetic basis of acute lymphoblastic leukemia</article-title>
        <source>J Clin Oncol</source>
        <year>2017</year>
        <volume>35</volume>
        <issue>9</issue>
        <fpage>975</fpage>
        <pub-id pub-id-type="doi">10.1200/JCO.2016.70.7836</pub-id>
        <pub-id pub-id-type="pmid">28297628</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Niels de Jong. NeoDash—Neo4j Dashboard Builder. 2022. <ext-link ext-link-type="uri" xlink:href="https://github.com/nielsdejong/neodash">https://github.com/nielsdejong/neodash</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Angles</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Gutierrez</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Survey of graph database models</article-title>
        <source>ACM Comput Surv (CSUR)</source>
        <year>2008</year>
        <volume>40</volume>
        <issue>1</issue>
        <fpage>1</fpage>
        <lpage>39</lpage>
        <pub-id pub-id-type="doi">10.1145/1322432.1322433</pub-id>
      </element-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">De Virgilio R, Maccioni A, Torlone R. Converting relational to graph databases. In: First international workshop on graph data management experiences and systems. 2013. p. 1–6.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Robin Edwards. Neomodel documentation. 2019. <ext-link ext-link-type="uri" xlink:href="https://neomodel.readthedocs.io/en/latest/">https://neomodel.readthedocs.io/en/latest/</ext-link>.</mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Koumakis</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Schera</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Parker</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bonotis</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Chatzimina</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Argyropaidas</surname>
            <given-names>P</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Fostering palliative care through digital intervention: a platform for adult patients with hematologic malignancies</article-title>
        <source>Front Digital Health</source>
        <year>2021</year>
        <volume>3</volume>
        <fpage>730722</fpage>
        <pub-id pub-id-type="doi">10.3389/fdgth.2021.730722</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gütebier</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Bleimehl</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Henkel</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Munro</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Müller</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Morgner</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>CovidGraph: a graph to fight COVID-19</article-title>
        <source>Bioinformatics</source>
        <year>2022</year>
        <volume>38</volume>
        <issue>20</issue>
        <fpage>4843</fpage>
        <lpage>4845</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac592</pub-id>
        <pub-id pub-id-type="pmid">36040169</pub-id>
      </element-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chakravarty</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Gao</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Phillips</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kundra</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Zhang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Wang</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>OncoKB: a precision oncology knowledge base</article-title>
        <source>JCO Precis Oncol</source>
        <year>2017</year>
        <volume>1</volume>
        <fpage>1</fpage>
        <lpage>16</lpage>
      </element-citation>
    </ref>
  </ref-list>
</back>

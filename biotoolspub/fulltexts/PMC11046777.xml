<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">11046777</article-id>
    <article-id pub-id-type="pmid">38664753</article-id>
    <article-id pub-id-type="publisher-id">3244</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-024-03244-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Centrifuger: lossless compression of microbial genomes for efficient and accurate metagenomic sequence classification</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-0180-7426</contrib-id>
        <name>
          <surname>Song</surname>
          <given-names>Li</given-names>
        </name>
        <address>
          <email>Li.Song@dartmouth.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Langmead</surname>
          <given-names>Ben</given-names>
        </name>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Biomedical Data Science, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Computer Science, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Microbiology and Immunology, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00za53h95</institution-id><institution-id institution-id-type="GRID">grid.21107.35</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 9311</institution-id><institution>Department of Computer Science, </institution><institution>Johns Hopkins University, </institution></institution-wrap>Baltimore, MD USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>25</volume>
    <elocation-id>106</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>4</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Centrifuger is an efficient taxonomic classification method that compares sequencing reads against a microbial genome database. In Centrifuger, the Burrows-Wheeler transformed genome sequences are losslessly compressed using a novel scheme called run-block compression. Run-block compression achieves sublinear space complexity and is effective at compressing diverse microbial databases like RefSeq while supporting fast rank queries. Combining this compression method with other strategies for compacting the Ferragina-Manzini (FM) index, Centrifuger reduces the memory footprint by half compared to other FM-index-based approaches. Furthermore, the lossless compression and the unconstrained match length help Centrifuger achieve greater accuracy than competing methods at lower taxonomic levels.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-024-03244-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>FM-index</kwd>
      <kwd>r-index</kwd>
      <kwd>Metagenomic</kwd>
      <kwd>Compact data structure</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000057</institution-id>
            <institution>National Institute of General Medical Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>P20GM130454</award-id>
        <award-id>R35GM139602</award-id>
        <award-id>3P20GM130454-05WS</award-id>
        <principal-award-recipient>
          <name>
            <surname>Langmead</surname>
            <given-names>Ben</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000051</institution-id>
            <institution>National Human Genome Research Institute</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01HG011392</award-id>
        <principal-award-recipient>
          <name>
            <surname>Langmead</surname>
            <given-names>Ben</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Metagenomic sequencing enables comprehensive profiling of microbiomes in a sample and has been widely applied to study natural environments [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], infectious diseases [<xref ref-type="bibr" rid="CR3">3</xref>], allergies [<xref ref-type="bibr" rid="CR4">4</xref>], and cancers [<xref ref-type="bibr" rid="CR5">5</xref>]. Taxonomic classification labels each sequencing read with taxonomy IDs representing its most likely taxon of origin. This has become an important step in translating raw sequencing data into meaningful microbiome profiles [<xref ref-type="bibr" rid="CR6">6</xref>]. Classification is usually conducted by comparing the read sequence to all the sequences in a database of microbial reference genomes, such as RefSeq [<xref ref-type="bibr" rid="CR7">7</xref>], GeneBank [<xref ref-type="bibr" rid="CR8">8</xref>], or GTDB [<xref ref-type="bibr" rid="CR9">9</xref>]. The growth of available microbial reference genomes creates a strong need for memory-efficient structures. Many methods turn to lossy representations of the database. For example, Kraken2 [<xref ref-type="bibr" rid="CR10">10</xref>] reduces the space by storing minimizers [<xref ref-type="bibr" rid="CR11">11</xref>] instead of all the k-mers as in Kraken [<xref ref-type="bibr" rid="CR12">12</xref>]. Other approaches, such as MetaPhlAn [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] and CLARK [<xref ref-type="bibr" rid="CR15">15</xref>], build the database out of only a selected subset of sequences, i.e., marker genes or discriminative k-mers. Ganon [<xref ref-type="bibr" rid="CR16">16</xref>] and KMCP [<xref ref-type="bibr" rid="CR17">17</xref>] utilize probabilistic data structures that discard k-mer identity but support checking k-mer presence with false positive probability. While these strategies reduce the memory requirement, they lose valuable sequence information, which may lower accuracy when classifying read to lower taxonomic levels. We previously co-developed the taxonomic classification method Centrifuge [<xref ref-type="bibr" rid="CR18">18</xref>] that used the memory-efficient Burrows-Wheeler transformed (BWT) sequence [<xref ref-type="bibr" rid="CR19">19</xref>] and the Ferragina-Manzini (FM) index [<xref ref-type="bibr" rid="CR20">20</xref>]. Centrifuge searches for semi-maximal matches with no length constraints, avoiding the decreased taxonomic specificity of k-mers when the genome database is large [<xref ref-type="bibr" rid="CR21">21</xref>]. However, the FM-index grows linearly with the database size and the lossy compression strategy proposed in Centrifuge is not scalable, making Centrifuge less usable in the context of large and growing genome databases.</p>
    <p id="Par3">Related genomes share similar sequences, giving genome databases a degree of repetitiveness. Lempel–Ziv family indexes [<xref ref-type="bibr" rid="CR22">22</xref>], context-free grammars [<xref ref-type="bibr" rid="CR23">23</xref>], run-length compressed BWT indexes (RLBWT) [<xref ref-type="bibr" rid="CR24">24</xref>], and the move structure [<xref ref-type="bibr" rid="CR25">25</xref>] exploit this repetitiveness to reduce index size losslessly while supporting efficient search queries. For example, r-index [<xref ref-type="bibr" rid="CR26">26</xref>] builds upon the RLBWT and fits in O(<italic>r</italic>) words, where <italic>r</italic> is the number of runs in the BWT sequence. The FM-index, by contrast, usually requires O(<italic>n</italic>) words, where <italic>n</italic> is the size of the database and is also the length of the BWT sequence.</p>
    <p id="Par4">While O(<italic>r</italic>)-space methods achieve good compression for highly repetitive sequences such as collections of human genomes, microbial genomes are more diverse. Applying these compact representations may take more space than the uncompressed wavelet tree [<xref ref-type="bibr" rid="CR27">27</xref>]. Therefore, we designed two compact data structures, called run-block compressed BWT (RBBWT) and hybrid run-length compressed BWT, to effectively compress the BWT sequence for the intermediate level of repetitiveness characteristic of microbial genome databases. RBBWT achieved the best overall performance in both time and space efficiency when compared to other compression methods. Inspired by this observation, we developed the software tool Centrifuger (Centrifuge with RBBWT), which rapidly assigned the taxonomy IDs for a sequencing read while consuming half the memory of a conventional FM-index.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Method overview</title>
      <p id="Par5">Centrifuger assigns a taxonomic ID to each input read or read pair by searching against a losslessly compressed FM-index built from a microbial genome database (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, Methods). The FM-index contains two memory-consuming components, the data structure supporting rank queries over the BWT sequence, and the sampled suffix array. We propose a novel compact structure, the run-block compressed sequence, to reduce the size needed to store the BWT sequence. For the sampled suffix array, we save space by storing only the sequence ID for each sampled position on the BWT sequence, omitting information about the offset within the genome. The classification algorithm scans the read twice, once for the original sequence and once for the reverse-complement sequence. Each scan looks for semi-maximal matches, by repeatedly extending the match with the backward search until reaching a mismatch, then skipping the base immediately after the point where the backward search terminates. We call the match semi-maximal because only one end of the match cannot be extended further. For each match, Centrifuger retrieves the sequence IDs associated with entries in the matching BWT interval. Centrifuger adds a score, which is a quadratic function of the match length, for each retrieved sequence ID. After all the valid matches are processed, the highest-scoring taxonomy IDs translated from the sequence IDs are reported as the classification result. When the number of reported IDs exceeds the user-specified threshold (default report threshold 1), Centrifuger reduces the number to within the threshold by promoting some taxonomy IDs to their lowest common ancestors (LCAs) in the taxonomy tree. In other words, Centrifuger reports the LCA of the taxonomy IDs for a read by default, as in Kraken2.<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of Centrifuger. Left: classification procedure on the forward read. Centrifuger searches from the end of the read and applies the backward search to extend the match until reaching a mismatch. This yields the first 60-bp exact match hitting three sequences {X, Y, Z} in the database. Centrifuger then skips the mismatch and restarts the search again, giving the second 39-bp match hitting two sequences {X, Y}. The same search procedure applies to the reverse complement of the read. Centrifuger then scores each matched sequence and classifies the read to the sequences with the highest scores, where the example read is classified to the sequence X with the score 2601. Right: the structure of Centrifuger’s lossless compressed FM-index. Centrifuger utilizes the RBBWT representation for the BWT sequence. In the example of compressing the BWT sequence “AAAAACGTAAAA”, RBBWT represents it as two sequences “AA” and “ACGT” when the block size is 4. For the sequence IDs that are sampled on the BWT sequence, Centrifuger will compact their bits representation. In this example, there are four sequences in the database (W, X, Y, Z), so 2 bits are sufficient to represent the sequence ID. Therefore, for the substring of the BWT sequence shown in the example, Centrifuger spends 6 bits to represent sequence IDs that are sampled every other four positions on the BWT sequence</p></caption><graphic xlink:href="13059_2024_3244_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>The computational efficiency of run-block compression</title>
      <p id="Par6">Run-block compressed sequence is a novel compact data structure that achieves sublinear space usage both in theory (<inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left(\frac{n}{\sqrt{l}}log\sigma \right)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq1.gif"/></alternatives></inline-formula> bits. <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M4"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq2.gif"/></alternatives></inline-formula>: average run length, i.e., <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{r}$$\end{document}</tex-math><mml:math id="M6"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq3.gif"/></alternatives></inline-formula>; <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M8"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq4.gif"/></alternatives></inline-formula>: alphabet size) and practice. Centrifuger applies run-block compression to reduce the size of the BWT sequence, yielding the RBBWT: Run-Block compressed BWT. Rank queries on the RBBWT, which form the basis for LF-mapping in the backward search, are also highly efficient, having a time complexity of <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq5.gif"/></alternatives></inline-formula> (more information in the “<xref rid="Sec10" ref-type="sec">Methods</xref>” section).</p>
      <p id="Par7">We compared RBBWT with three other representations of BWT sequences: the standard wavelet tree, the RLBWT as implemented in the r-index package [<xref ref-type="bibr" rid="CR28">28</xref>] using sdsl library [<xref ref-type="bibr" rid="CR29">29</xref>], and the hybrid run-length compression (Methods). We measured the change in space usage when adding non-plasmid sequences from the species <italic>Escherichia fergusonii</italic> (taxonomy ID 564) to the structure. While the wavelet tree grew linearly as more genomes were added, RBBWT, RLBWT and its hybrid version grew more slowly (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">1</xref>A). When there was little repetitiveness in the genomes, RBBWT and hybrid run-length compression took almost the same amount of space as the wavelet tree. From another perspective, when the average run length of the BWT increased, the number of bits to represent a nucleotide in the wavelet tree remained constant (0.31 bits/bp in our implementation), and the other three compression methods needed fewer bits (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A). RBBWT consumed the least or similar space compared with the run-length-based compression methods when <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M12"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq6.gif"/></alternatives></inline-formula> was less than 10. When the BWT was constructed from all the genomes under taxonomy ID 564 with <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M14"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq7.gif"/></alternatives></inline-formula> equaling 18.8, RBBWT was still small, consuming 57.8% less space than the wavelet tree and 29.8% more space than RLBWT. We also compared the space usage of the BWT representations by adding the genomes from the species <italic>Chlamydia trachomatis</italic> (taxonomy ID 810) whose strains had highly similar sequences [<xref ref-type="bibr" rid="CR18">18</xref>]. Again, RBBWT was the most memory-efficient data structure when <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M16"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq8.gif"/></alternatives></inline-formula> was less than or around 10 (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">2</xref>A). For this species, <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M18"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq9.gif"/></alternatives></inline-formula> reached 56.0 after adding all the genomes, and RBBWT’s space was about a quarter of the uncompressed wavelet tree’s and twice as much as RLBWT’s in this case.<fig id="Fig2"><label>Fig. 2</label><caption><p>Computational efficiency of the wavelet tree, RLBWT, hybrid run-length compression, and RBBWT. <bold>A</bold> Bits used to represent one base pair (bp) as the average run length of the BWT sequence (<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n/r$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq10.gif"/></alternatives></inline-formula>) increases when representing increasingly more genomes with species ID 564 (<italic>Escherichia fergusonii</italic>). <bold>B</bold> Bits used to represent one bp when representing genomes with genus ID 445 (<italic>Legionella</italic>). <bold>C</bold> Rank query time</p></caption><graphic xlink:href="13059_2024_3244_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par8">We next compared the space usage when compressing the BWT sequence for genomes from the same genus. We examined the genus <italic>Legionella</italic> (taxonomy ID 445) containing 150 genomes. Since genomes from the same genus were more diverse than genomes from the same species, the final <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M22"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq11.gif"/></alternatives></inline-formula> was 7.1 after adding all the non-plasmid sequences. RBBWT consumed the least memory among the benchmarked compression methods, using 46.9%, 24.8%, and 2.3% less space than wavelet tree, RLBWT, and hybrid run-length compressed BWT, respectively, in the end (Fig. <xref rid="Fig2" ref-type="fig">2</xref>B and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">1</xref>B). A similar trend was observed when conducting the experiment on the genomes from the genus <italic>Chlamydia</italic> (taxonomy ID 810, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">2</xref>B). We further compared the speed of rank queries by averaging the time for finding the rank of ‘A’ for each of the first ten million positions in the BWT sequence of all the <italic>Legionella</italic>’s genomes, i.e., the average time of calling rank<sub>‘A’</sub>(1, BWT) to rank<sub>‘A’</sub>(10,000,000, BWT). Rank query in RBBWT was about five times faster than in RLBWT and only three times slower than using a wavelet tree (Fig. <xref rid="Fig2" ref-type="fig">2</xref>C). Hybrid run-length compression was the slowest method. In both the species ID 564 and the genus ID 445 analysis, the block size of RBBWT was automatically determined to be 8 (Methods) after adding all the genomes, supporting the mild repetitiveness in the microbial genome database. To summarize, RBBWT is more memory-efficient and supports faster rank queries compared to RLBWT when compressing microbial genomes.</p>
    </sec>
    <sec id="Sec5">
      <title>Performance on classifying simulated data</title>
      <p id="Par9">We compared Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP’s accuracy on one million 100-base-pair (bp) paired-end short reads simulated by Mason [<xref ref-type="bibr" rid="CR30">30</xref>] from 34,190 prokaryotic complete genomes (RefSeq bacteria + archaea). We set the sequencing error rate in Mason to be 1%, a value that was higher than the Illumina sequencing platform, to model the microbial genome variations in real data. All five methods built the database indices on the same set of genomes. The average run length of the BWT was about 6.8, and the block size of RBBWT was automatically determined to be 8. We used TP (true positive) for the number of reads that are correctly classified at the specified taxonomy node or in its subtree, T (true) for the number of input reads, and P (positive) for the number of reads that were correctly classified at the specified taxonomy level or below. Therefore, we define the sensitivity as <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{TP}{T}$$\end{document}</tex-math><mml:math id="M24"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">TP</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq12.gif"/></alternatives></inline-formula>, and precision as <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{TP}{P}$$\end{document}</tex-math><mml:math id="M26"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">TP</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq13.gif"/></alternatives></inline-formula>. The strain-level classification evaluation in each method was for the reads classified to leaf nodes in the taxonomy tree. On this simulated data set, Centrifuger achieved the best accuracy at all taxonomy levels and was significantly better than other methods at species and genus levels (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">1</xref>). For example, Centrifuger’s sensitivity was 34.5% higher than both Centrifuge and Kraken2, 20.0% higher than Ganon, and 116.0% higher than KMCP at the species level. All five classifiers had comparable precision except at the strain level. Centrifuge’s low sensitivity could be due to its policy of not resolving taxonomy IDs for matches hitting too many places in the database, where the threshold for the number of hits of a match was 40·report_threshold (default value of Centrifuge’s report threshold for the taxonomy IDs is 5). The strategy of handling matches on repetitive regions was one of the main differences between Centrifuger and Centrifuge during the classification stage (Methods). In addition to Mason, we compared the five classifiers on another set of one million 100-bp paired-end short reads simulated by ART [<xref ref-type="bibr" rid="CR31">31</xref>], where the error rate was set to ART’s default value (about 0.15%). All methods produced similar accuracy as the Mason-generated data. Centrifuger still achieved significantly higher sensitivity at the species and genus level while having comparable precision as the other methods (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">3</xref>). In both simulated data sets, the sensitivity at the strain level was very low (&lt; 25%) for all five methods, suggesting that most reads cannot be uniquely assigned to a strain in the RefSeq prokaryotic genome database.<fig id="Fig3"><label>Fig. 3</label><caption><p>Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data generated from June 2023 RefSeq prokaryotic genomes. <bold>A</bold> Sensitivity (left) and precision (right) of each classifier at various taxonomy ranks. <bold>B</bold> Peak memory usage of each classifier. <bold>C</bold> Classification speed of each classifier with a single thread</p></caption><graphic xlink:href="13059_2024_3244_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par10">We utilized the simulated data set generated by Mason to compare the classifiers’ computational efficiency. Centrifuger was the most memory-efficient method, classifying the reads against the 140 billion bp (GBp) database using 43 gigabytes (GB) of memory (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B). Methods like Kraken2, Ganon, and KMCP reduce the memory usage by discarding k-mer information. We also explored the space usage of succinct colored k-mer representations [<xref ref-type="bibr" rid="CR32">32</xref>], which can keep all the k-mer information along with their color (sequence ID) information. We created the index on these RefSeq prokaryotic genomes using Themisto v3.2.1 [<xref ref-type="bibr" rid="CR33">33</xref>], a pseudoalignment method based on the spectral BWT [<xref ref-type="bibr" rid="CR34">34</xref>], using a k-mer size of 31. Its index, without the color component, took 44 GB space (the.tdbg file), which was already more than Centrifuger’s 41-GB full index size. Since Themisto is not designed for taxonomic classification, we excluded it from other evaluations. Nevertheless, this observation suggests that succinct colored k-mer representations could be memory-efficient enough for read classifications against a large microbial genome database. For the classification speed, Kraken2 was the fastest method. Centrifuger and Centrifuge were also efficient and processed more than 100,000 read pairs per minute using a single thread (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C). Centrifuger was about three times slower than Centrifuge, reflecting the earlier observation that the rank query on RBBWT was three times slower than on an uncompressed data structure. Ganon and KMCP were the slowest methods in the evaluation; they were about 3.6 times and 5.3 times slower than Centrifuger, respectively.</p>
      <p id="Par11">We next evaluated each method’s performance on a simulated data set when true genomes were missing in the genome database. We created another index for each method on a trimmed database with 1,931 genomes, where we randomly selected one genome per genus. We then removed all reads originating from the selected genomes in the Mason-generated simulated data. This yielded a simulated data set with about 946K read pairs whose true origin was not in the database. On this trimmed database, Centrifuger, Centrifuge, and Kraken2 had similar accuracy, where they were more sensitive but less precise than Ganon and KMCP (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">4</xref>A). Due to the large discrepancies in sensitivity and precision among the five classifiers, we compared their F1 scores, defined as 2·(sensitivity*precision)/(sensitivity + precision). Centrifuger, Centrifuge, and Kraken2 achieved very similar F1 scores across the taxonomy ranks. Centrifuger’s F1 scores were 4.1–17.1% and 21.6–30.2% higher than Ganon’s and KMCP’s, respectively, ranging from the genus level to the phylum level (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">4</xref>B). Ganon outperformed other classifiers at the species level, with the F1 score 5.2% higher than Centrifuger’s. We observed that the Centrifuger and Centrifuge had almost identical performance on this trimmed database, suggesting that the difference in their performance on the full database was primarily due to the redundancy of the genomes.</p>
      <p id="Par12">In addition to the comparisons on our own simulated data sets, we also evaluated the accuracy of these five classifiers on 10 simulated short-read samples from the Critical Assessment of Metagenome Interpretation 2 (CAMI2) [<xref ref-type="bibr" rid="CR35">35</xref>] challenge datasets. Each sample has about 6.7 million 150-bp read pairs. Since the truth table from CAMI2 was mostly at the species level, we skipped the strain-level comparison. As in the previous simulated data evaluation, Centrifuger achieved significantly better classification results at species and genus levels than other methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>) and the highest F1 score across all the taxonomy ranks (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">5</xref>). For example, at the species level, the mean sensitivity of Centrifuger was 72.9% and 54.1% higher than Centrifuge’s and Kraken2’s, and the mean precision was 8.3% and 11.0% higher than Centrifuge’s and Kraken2’s, respectively. Centrifuger’s average sensitivity was 13.7% higher than Ganon’s while obtaining almost identical precision at the species level. Though Centrifuger’s average precision was 4.8% lower than KMCP’s at the species level, its sensitivity was 2.3 times higher than KMCP’s. We concatenated the 10 samples into a large data set containing about 67 million read pairs to compare the speed of the classifiers running with eight threads. Kraken2 was the fastest method (finished in about 7 min), followed by Centrifuge (42 min), Centrifuger (1 hour 35 min), and Ganon (3 hours 33 min). With multithreading, Centrifuger was about 2.3 times slower than Centrifuge, reducing the threefold speed difference when running on a single thread. KMCP did not scale well and took more than 18 hours to finish.<fig id="Fig4"><label>Fig. 4</label><caption><p>Sensitivity (top) and precision (bottom) of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP at various taxonomy ranks on the 10 simulated data sets from CAMI2</p></caption><graphic xlink:href="13059_2024_3244_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec6">
      <title>Performance on classifying bacterial whole-genome sequencing data</title>
      <p id="Par13">We next evaluated Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on real bacterial whole-genome sequencing (WGS) data using the same database indexes as the simulated data evaluation. The true taxonomy IDs for each WGS sample were extracted in corresponding SRA RunInfo entries. We considered two scenarios: one where the RefSeq database contained some genomes from the same species (species-in), and one where the database did not include any same-species genomes but did include some same-genus genomes (species-not-in). We collected 100 WGS samples for each scenario, and all the classifiers, except KMCP, successfully processed these samples. KMCP failed to finish SRR23033313 and SRR23885914 in the species-in scenario on our server due to its long running time. Sensitivity and precision were defined in the same way as the simulated data evaluations, and we focused on the accuracy at the species and genus levels for species-in and species-not-in scenarios, respectively. For the species-in scenario, Centrifuger achieved the highest average sensitivity and average precision. In particular, Centrifuger achieved 10.6%, 1.3%, 9.6%, and 101.9% higher average sensitivity, 5.8%, 18.6%, 1.7%, and 6.7% higher average precision than Centrifuge, Kraken2, Ganon, and KMCP, respectively (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A). When comparing with KMCP, we excluded the two samples that KMCP did not finish. For the species-not-in scenario, Centrifuger, Centrifuge, and Kraken2 had comparable sensitivity, Kraken2’s precision was 10.2% and 21.2% higher than Centrifuger and Centrifuge, respectively (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B). Though Ganon’s average precision was similar to Kraken2’s and was 11.1% higher than Centrifuger’s, its average sensitivity was 22.2% lower than Centrifuger’s. KMCP obtained the highest precision, with an average precision 23.1% higher than Centrifuger’s, but its average sensitivity was 40.6% lower than Centrifuger’s. We further examined the F1 score for each classifier. Kraken2 achieved the highest F1 score, closely followed by Centrifuger, and their F1 scores were consistently greater than Ganon’s and KMCP’s (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">6</xref>). Our analysis also showed that the species-not-in scenario had inferior accuracy compared with the species-in scenario, suggesting that having a comprehensive database may substantially improve classification results by reducing the species-not-in chance.<fig id="Fig5"><label>Fig. 5</label><caption><p>Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on bacterial WGS data sets. <bold>A</bold> Sensitivity (left) and precision (right) if species of bacteria are present in the database. <bold>B</bold> Sensitivity (left) and precision (right) if species of bacteria are not in the database but their genera are present in the database</p></caption><graphic xlink:href="13059_2024_3244_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Performance on classifying SARS-CoV-2 Oxford Nanopore WGS data</title>
      <p id="Par14">When a read can be uniquely classified to a sequence, Centrifuger reports the sequence ID in addition to the taxonomy ID, while many methods like Kraken2 provide only the taxonomy ID information. Centrifuger’s additional output is desirable for virus analysis. For example, SARS-CoV-2 variants’ genomes are all under the same taxonomy ID 2697049 in RefSeq and GenBank. To explore the effectiveness of sequence-level classification, we downloaded Oxford Nanopore (MinION) WGS data from two SARS-CoV-2 projects with NCBI BioProject accession numbers PRJNA673096 and PRJEB40277, where PRJNA673986 were samples from the USA and PRJEB40227 were samples from Ireland. For each project, we selected 100 samples with the greatest number of reads (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">2</xref>). Since RefSeq only had one SARS-CoV-2 sequence, we added the 92 SARS-CoV-2 sequences from GenBank and created indices comprising RefSeq human, prokaryotic, virus, and GenBank SARS-CoV-2 genomes for Centrifuger, Centrifuge, Kraken2, and Ganon, respectively. We also incorporate two long-read taxonomic classifiers: MetaMaps [<xref ref-type="bibr" rid="CR36">36</xref>] and Taxor [<xref ref-type="bibr" rid="CR37">37</xref>]. However, due to the large memory requirement for running MetaMaps and a different taxonomy structure when building the Taxor’s index, we tested these two methods with indices that only contained the 93 SARS-CoV-2 genomes. We added the parameter “--rel-cutoff 0.12 --rel-filter 0.9” to Ganon for long reads as mentioned by the experiments in Taxor. Centrifuger classified about 99.95% of all the input reads to the taxonomy ID 2697049 on average, while Kraken2 and Ganon were slightly less sensitive and classified 99.90% and 98.96% reads to the ID 2697049 on average, respectively. Centrifuge had a slightly different LCA search implementation, so it classified 98.90% of the reads to either ID 2697049 or ID 694009, where ID 694009 was the parent of ID 2697049 on the taxonomy tree. Despite using a SARS-CoV-2-only database, MetaMaps and Taxor only classified 78.04% and 70.91% reads on average, respectively. The lower sensitivity for MetaMaps was mainly due to its default setting of skipping reads shorter than 1000 bp, while it mapped almost all the remaining reads of sufficient length. When looking at the sequence-level classification, Centrifuger assigned 23.7% of the input reads with unique sequence IDs across all the samples. For the other tested methods, only Centrifuge, Ganon and Taxor reported sequence-level classifications, but they uniquely classified 15.1%, less than 0.1% and about 0.1% of the reads, respectively.</p>
      <p id="Par15">The large number of sequence-level classifications from Centrifuger allowed us to observe that the read fraction for each variant, namely sequence ID, in the Irish samples and US samples showed distinct patterns (Fig. <xref rid="Fig6" ref-type="fig">6</xref>A, heatmap with raw read fraction in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">7</xref>A). This observation was also supported by Centrifuge’s sequence-level classification results (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">7</xref>B). We further conducted a principal component analysis (PCA) based on each sequence’s read fraction, normalized by the number of reads with sequence IDs. Samples from the US and Ireland were well separated into two clusters (Fig. <xref rid="Fig6" ref-type="fig">6</xref>B) based on the first two principal components (PCs), suggesting that variants found in the two projects may have different sequence features. When inspecting the SAR-CoV-2 variant that contributed the most to the PC1 relative to the contribution to PC2, we found that variants detected in the Irish samples might have homologous regions to MT019531.1 while US samples did not (Fig. <xref rid="Fig6" ref-type="fig">6</xref>C). On the other hand, when checking PC2’s major contributors, the MT159706.2 variant was commonly detected in both projects, suggesting that PC1 captured the project-specific variants or batch effects.<fig id="Fig6"><label>Fig. 6</label><caption><p>Sequence-level classification for SARS-CoV-2 WGS samples with Centrifuger. <bold>A</bold> Fractions of reads hit on each SARS-CoV-2 variant. The rows are SARS-CoV-2 variants present in the RefSeq and GenBank, and the columns are the Oxford Nanopore WGS samples. The value for each row is standardized as <italic>z</italic>-scores. <bold>B</bold> PCA based on the read fraction for each variant. The numbers in the parenthesis are the variance fraction explained by each PC. <bold>C</bold> Left: histogram of read fractions classified to MT019531.1 which has the most significant contribution to PC1 relative to its PC2’s contribution; right: histogram of read fractions classified to MT159706.2 which has the most significant contribution to PC2 relative to its PC1’s contribution</p></caption><graphic xlink:href="13059_2024_3244_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par16">We conducted comprehensive benchmarks to demonstrate that the RBBWT can significantly reduce the memory usage of the FM-index built over a microbial genome database. For additional space savings, we store the sequence ID rather than the full coordinate information in the sampled suffix array, a strategy also used in Centrifuge. The space for the sampled sequence IDs is further trimmed by bit-compact representation, making it a less impactful factor in space usage. For example, in Centrifuger’s 41-GB index of RefSeq prokaryotic genomes, 23 GB was for the RBBWT and 17 GB was for the sampled sequence IDs. Nevertheless, the overall space complexity of Centrifuger is still O(<italic>n</italic>) words due to the structure of sampled sequence IDs, making it worse than r-index’s O(<italic>r</italic>) words in the future as the repetitiveness of the genome database may grow fast. Though users can select a sparser sampling rate to maintain the space usage, this is at the expense of time efficiency. For instance, the index size became 32 GB when increasing the sampling rate from the default 16 to 32, but the classification speed of a thread decreased from 163K read/min to 102K read/min. Future work is needed to design a representation of the sampled sequence ID in sublinear space without sacrificing classification speed for microbial genomes.</p>
    <p id="Par17">Resolving the sequence IDs for each match is a time-consuming step in Centrifuger, especially when a match hits many sequences. Centrifuger’s current implementation follows the traditional FM-index paradigm, by repeatedly applying the LF mapping for each hit until reaching a sampled sequence ID. Alternative techniques like the document array profile [<xref ref-type="bibr" rid="CR38">38</xref>] support rapid sequence ID retrieval, but are designed for highly repetitive genomes like human pangenome. Therefore, a memory-efficient algorithm for sequence ID resolving in microbial genomes is still needed. Since the default setting in Centrifuger is to report the LCA taxonomy ID for a read, algorithms like KATKA [<xref ref-type="bibr" rid="CR39">39</xref>] that directly find the LCA taxonomy ID for a k-mer might suggest ways to avoid the overhead of repeated LF mappings in Centrifuger as well.</p>
    <p id="Par18">The current Centrifuger index stores nucleotide-based sequences. The Kraken2 and Kaiju [<xref ref-type="bibr" rid="CR40">40</xref>] studies, however, observed that translated search, i.e., finding matches based on amino acids by translating nucleotides, could improve the classification accuracy for viral genomes. Since the wavelet tree data structure supports arbitrary alphabet sets, the RBBWT representation can be naturally extended to process amino acid sequences. RLBWT and RBBWT’s implementations are scalable for large alphabet set sizes, with a factor of <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{log}}\left(\sigma \right)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mtext>log</mml:mtext><mml:mfenced close=")" open="("><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq14.gif"/></alternatives></inline-formula> or the entropy in the space complexity. We found an alternative form of run-length encoded BWT, exported from ropeBWT2 [<xref ref-type="bibr" rid="CR41">41</xref>] (with -dRo option) as the Fermi’s [<xref ref-type="bibr" rid="CR42">42</xref>] format. RopeBWT2’s representation was 12.5% smaller than RLBWT on average with comparable rank query speed as RLBWT when compressing <italic>Escherichia fergusonii</italic>’s genomes. The slimmer size of ropeBWT2’s output might be attributed to its implementation being designed for small <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M30"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq15.gif"/></alternatives></inline-formula>, where its space complexity is linear to <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M32"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq16.gif"/></alternatives></inline-formula>. This may suggest that the efficiency of RBBWT and Centrifuger could be further improved for nucleotide search with tailored implementations that are less scalable for <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M34"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq17.gif"/></alternatives></inline-formula>.</p>
    <p id="Par19">Besides taxonomic classification, another important problem in metagenomic data analysis is taxonomic profiling, i.e., determining the abundance for each species or at user-specified taxonomic ranks. It is feasible to profile the abundances directly without taxonomic classification for reads, such as in Meta-Kallisto [<xref ref-type="bibr" rid="CR43">43</xref>] and Sylph [<xref ref-type="bibr" rid="CR44">44</xref>]. However, many profiling methods still require taxonomic classification results which can identify species of low abundance with few reads supporting them. For instance, Bracken uses Kraken2’s input for taxonomic profiling with a Bayesian method [<xref ref-type="bibr" rid="CR45">45</xref>]. Ganon, KMCP, and Taxor, which are benchmarked in this work, need to conduct taxonomic classifications before profiling. Centrifuge integrates the abundance estimation based on the Expectation–Maximization (EM) algorithm [<xref ref-type="bibr" rid="CR46">46</xref>] internally. After the release of Centrifuge, some methods, like AGAMEMNON [<xref ref-type="bibr" rid="CR47">47</xref>] and Centrifuge+ [<xref ref-type="bibr" rid="CR48">48</xref>], improve the profiling accuracy by adjusting the likelihood function and the EM algorithm procedure. We still need to systematically compare these profiling techniques and either integrate them into Centrifuger or make Centrifuger’s output compatible with these methods in the future. For example, Centrifuger provides the script to summarize the classification results into a Kraken-style report file that can serve as the input for Bracken.</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par20">Centrifuger is an efficient and accurate taxonomic classification method for processing sequencing data, including metagenomic sequencing data. Centrifuger adopts a novel compact data structure, run-block compressed sequence, to achieve sublinear storage space for BWT sequence without sacrificing much time efficiency. Specifically, Centrifuger can represent the 140 GBp Refseq prokaryotic genomes with an index of size 41 GB and classifies about 163K microbial reads every minute per thread. Furthermore, the lossless representation nature and the unconstrained pattern match length help Centrifuger achieve significantly better accuracy, in both sensitivity and precision, for classifications at the species or genus level. We expect that Centrifuger will contribute to microbiome studies by allowing the incorporation of the recent, more comprehensive microbial genome database. Centrifuger is a free open-source software released under the MIT license and is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link>.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>Sequencing data and benchmark details</title>
      <p id="Par21">We generated the simulated data from the current RefSeq database using Mason v0.1.2 [<xref ref-type="bibr" rid="CR30">30</xref>] with the option “illumina -pi 0 -pd 0 -pmms 2.5 -s 17 -N 2000000 -n 100 -mp -sq -hs 0 -hi 0 -i”, which simulated two million 100-bp read pairs with 1% error rate. We further filtered the reads from the sequences without taxonomy information and kept the first one million read pairs as the final simulated data set. We also obtained one million randomly selected 100-bp read pairs using the simulator ART v2.5.8 [<xref ref-type="bibr" rid="CR31">31</xref>] with Illumina profile setting (“art_illumina -ss HS25 -m 1000 -s 100 -l 100 -f 0.003”) followed by the same filtration procedure as was used for Mason. The error rate of Art-generated simulated data was estimated to be around 0.15% by examining the aln file produced by Art. In addition to our own simulated data, we downloaded the 10 simulated samples from the CAMI2 Challenge datasets at <ext-link ext-link-type="uri" xlink:href="https://frl.publisso.de/data/frl:6425521/strain/short_read/">https://frl.publisso.de/data/frl:6425521/strain/short_read/</ext-link> by lexicographical order, i.e. sample_0 to sample_9. For the bacteria WGS data, we first downloaded the RunInfo from NIH NCBI SRA using the search word “(“Bacteria”[Organism] OR “Bacteria Latreille et al. 1825”[Organism]) AND (“2022/01/01”[MDAT]: “2023/08/01”[MDAT]) AND (“biomol dna”[Properties] AND “strategy wgs”[Properties] AND “platform illumina”[Properties] AND “filetype fastq”[Properties])”. Then based on whether the species or genus is present in the RefSeq database, we randomly pick 100 SRA IDs (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">3</xref>), without repeating species or genus, for species-in and species-not-in evaluations, respectively.</p>
      <p id="Par22">We benchmarked the performance of Centrifuger v1.0.1, Centrifuge v1.0.4, and Kraken2 v2.1.3, Ganon v2.0.0, and KMCP 0.9.4 in this study. For the application on long-read data sets, we also tested MetaMap with GitHub commit ID 633d2e0 and Taxor v0.1.0. Taxonomy information and microbial genomes were downloaded using the “centrifuger-download” script in June 2023. Each classifier was used to build its own index on dustmasked [<xref ref-type="bibr" rid="CR49">49</xref>] genome sequences. Kraken2 used its own built-in masking module. Though we used Ganon v2.0.0 in evaluations, we failed to create the index with the hierarchical interleaved bloom filter data structure implemented in this version [<xref ref-type="bibr" rid="CR50">50</xref>]. Therefore, we used the index based on the interleaved bloom filter (--filter-type ibf) for Ganon, and we referred to this method as “Ganon” rather than Ganon2. The commands used to run each method are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">4</xref>. Methods like Centrifuge, Ganon, and KMCP might report multiple equally good taxonomy IDs for a read, and we merged them into LCAs before the evaluations. Ganon’s default option for coalescing the taxonomy IDs of a multiple-classified read is to reassign the read to the taxonomy ID with the highest abundance inferred by the EM algorithm using the initial classifications. This approach substantially improves Ganon’s classification sensitivity at lower taxonomy levels, leading to a higher F1 score. For example, in the Mason-generated simulated data, Ganon with reassignment’s F1 score at the species level was 1.3% and 12.1% higher than Centrifuger’s and Ganon using LCA’s, respectively (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">8</xref>). We implemented a similar workflow to reassign the multiple-classified reads from Centrifuger. Specifically, we ran Centrifuger with “-k 5” so that the initial classification for a read could include up to five equally good classification results. We then calculated the abundance for each taxonomy ID in the taxonomy tree based on the number of reads classified to this taxonomy node and its subtree. For a multiple-classified read, we included its count starting from its LCA. Lastly, we reassigned the taxonomy ID with the highest abundance among the initial results to a read as the final classification result. When there were multiple highest-abundance taxonomy IDs for a read, we took their LCA as the final result. We observed this reassignment strategy without the EM algorithm improved Centrifuger’s classification results at lower taxonomy levels too, with the F1 score 2.7% higher than Ganon’s reassignment results at the species level (Fig. S<xref rid="MOESM1" ref-type="media">8</xref>). However, the strategy of hard reassignment based on the taxonomic profiling result may result in systematic underestimations of taxa with lower abundances. Therefore, we continue to utilize the LCA strategy to process multiple classified reads, where the results can be directly used for downstream analyses, including taxonomic profiling.</p>
      <p id="Par23">All the benchmarks were conducted on the 2.8 GHz AMD EPYC 7543 32-core processor machine with 512 GB memory. The memory footprint was measured as the “Maximum resident set size” value from the “/usr/bin/time -v” command. When measuring speed, each classifier was run four times. The reported classification speed was calculated by taking the fastest runtime after excluding index loading time.</p>
    </sec>
    <sec id="Sec12">
      <title>Run-block compressed sequence</title>
      <p id="Par24">Run-block compressed sequence is a compact data structure supporting rank queries for any position in a sequence. For the input sequence <italic>T</italic> of length <italic>n</italic> and alphabet set <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M36"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq18.gif"/></alternatives></inline-formula> of size <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M38"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq19.gif"/></alternatives></inline-formula>, we first partition <italic>T</italic> into equal-size substrings (blocks), <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{1},{T}_{2},\dots ,{T}_{m}$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq20.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=\lceil \frac{n}{b}\rceil$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq21.gif"/></alternatives></inline-formula> and <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M44"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq22.gif"/></alternatives></inline-formula> is the block size. The first component of the run-block compressed sequence is a bit vector <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq23.gif"/></alternatives></inline-formula> of size <italic>m</italic> indicating whether the corresponding block is a run block, i.e., a block consisting of one alphabet character repeated <italic>b</italic> times. We will then split <italic>T</italic> into two substrings, by concatenating run blocks and non-run blocks, i.e., <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{R}^{\prime}}={T}_{{i}_{1}}{T}_{{i}_{2}}\dots {T}_{{i}_{l}}, {T}_{P}={T}_{{j}_{1}}{T}_{{j}_{2}}\dots {T}_{{j}_{m-l}}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq24.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{i}_{k}}$$\end{document}</tex-math><mml:math id="M50"><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq25.gif"/></alternatives></inline-formula> is the <italic>k-</italic>th run blocks in T with the alphabet <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\sigma }_{{i}_{k}}$$\end{document}</tex-math><mml:math id="M52"><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq26.gif"/></alternatives></inline-formula>. In the notation, we will use the subscript “R” to denote run-block compressed sequence, and “P” to represent the plain uncompressed sequence. Since the last block can still be determined as a run or non-run block even if it is shorter than <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M54"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq27.gif"/></alternatives></inline-formula>, we can assume that <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M56"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq28.gif"/></alternatives></inline-formula> is divisible by <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M58"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq29.gif"/></alternatives></inline-formula> for simplicity. <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{R}^{\prime}}$$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq30.gif"/></alternatives></inline-formula> can be losslessly represented as <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}={\sigma }_{{i}_{1}}{\sigma }_{{i}_{2}}\dots {\sigma }_{{i}_{l}}$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq31.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left|{T}_{R}\right|=\frac{|{T}_{{R}^{\prime}}|}{b}$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mfenced close="|" open="|"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq32.gif"/></alternatives></inline-formula>. The space saving comes from using one character to represent a run block of size <italic>b</italic>, a strategy we call run-block compression. For example, for a sequence <italic>T</italic> = “AAAAACGTAAAA”, when <italic>b</italic> = 4, it will be split into “AAAAAAAA” and “ACGT” guided by <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}=101$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>101</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq33.gif"/></alternatives></inline-formula>. For the subsequence formed by the run blocks, we will use one character to represent each block in it. Therefore, the example sequence <italic>T</italic> will be represented by two sequences <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq34.gif"/></alternatives></inline-formula>=“AA” and <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq35.gif"/></alternatives></inline-formula>=“ACGT”, reducing the original length from 12 to 6 characters (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). We next show that run-block compression allows fast rank queries and sublinear space usage as the repetitiveness in the sequence increases. The rank query is the core operation in LF mapping during the backward search in FM-index.</p>
      <p id="Par25"><bold>Theorem 1 </bold><italic>The time complexity for rank query on run-block compressed sequence is</italic><inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq36.gif"/></alternatives></inline-formula>.</p>
      <p id="Par26"><italic>Proof</italic>: We will use the function <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq37.gif"/></alternatives></inline-formula> to denote the rank for the alphabet <italic>c</italic> at position <italic>i</italic> of text <italic>T</italic>, where the index is 1-based. Equivalently, <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq38.gif"/></alternatives></inline-formula> counts the number of <italic>c</italic>’s that occur before <italic>T</italic>[<italic>i</italic>], including <italic>T</italic>[<italic>i</italic>]. We can decompose the <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq39.gif"/></alternatives></inline-formula> to the sum of corresponding ranks with respect to <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M80"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq40.gif"/></alternatives></inline-formula> and <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq41.gif"/></alternatives></inline-formula>. There are two cases, depending on whether <italic>i</italic> is in a run block or not. Let <italic>k</italic> denote the block containing <italic>i</italic>, namely <inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=\lceil\frac{i}{b}\rceil$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq42.gif"/></alternatives></inline-formula>. We compute the number of run blocks and non-run blocks before the block containing <italic>k</italic> as <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${r}_{r}={rank}_{1}\left(k,{B}_{R}\right), \mathrm{and}\space\overline{{r }_{r}}={rank}_{0}\left(k,{B}_{R}\right)=k-{r}_{r}$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>,</mml:mo><mml:mi mathvariant="normal">and</mml:mi><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq43.gif"/></alternatives></inline-formula>, respectively. The <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{1}\left(k,{B}_{R}\right)$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq44.gif"/></alternatives></inline-formula> is the conventional rank query on bit vectors counting the number of 1 s before or on position <italic>k</italic> in <italic>B</italic><sub><italic>R</italic></sub>. With these notations, we can write the equations to compute <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq45.gif"/></alternatives></inline-formula>.</p>
      <p id="Par27">When <italic>i</italic> is in a run block, i.e., <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}[k]=1$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq46.gif"/></alternatives></inline-formula>, we have:<disp-formula id="Equa"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}\left(i, T\right)=b\left({rank}_{c}\left({r}_{r},{T}_{R}\right)\right)+{rank}_{c}\left(\overline{{r }_{r}}b, {T}_{P}\right)+{I}_{{T}_{R}\left[{r}_{r}\right]=c}\left(\left(i-1\right)\%b+1-b\right)$$\end{document}</tex-math><mml:math id="M94" display="block"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced><mml:mo>%</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>b</mml:mi></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par28">Where <inline-formula id="IEq47"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq47.gif"/></alternatives></inline-formula> is an indicator that equals 1 if the subscript is true and equals to 0 otherwise. The last term is the special treatment if<italic> i</italic> is in a run block with alphabet character <italic>c</italic>. When <italic>i</italic> is in a non-run block, we have:<disp-formula id="Equb"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}\left(i, T\right)=b\left({rank}_{c}\left({r}_{r},{T}_{R}\right)\right)+{rank}_{c}\left(\left(\overline{{r }_{r}}-1\right)b+(i-1)\%b+1, {T}_{P}\right)$$\end{document}</tex-math><mml:math id="M98" display="block"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>%</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par29">If we apply the wavelet tree to represent <inline-formula id="IEq48"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M100"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq48.gif"/></alternatives></inline-formula> and <inline-formula id="IEq49"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M102"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq49.gif"/></alternatives></inline-formula>, then <inline-formula id="IEq50"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq50.gif"/></alternatives></inline-formula> can be answered by at most two wavelet tree rank queries, one rank query on bit vector <inline-formula id="IEq51"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{r}$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>B</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq51.gif"/></alternatives></inline-formula>, and one wavelet tree access on <inline-formula id="IEq52"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M108"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq52.gif"/></alternatives></inline-formula>. Therefore, the total time complexity is <inline-formula id="IEq53"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3O(log\sigma )+O\left(1\right)=O(log\sigma )$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mn>3</mml:mn><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq53.gif"/></alternatives></inline-formula>.</p>
      <p id="Par30">The naïve implementation for calculating <inline-formula id="IEq54"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M112"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq54.gif"/></alternatives></inline-formula> is to access the value of <inline-formula id="IEq55"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}\left[{r}_{r}\right]$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq55.gif"/></alternatives></inline-formula>, requiring <inline-formula id="IEq56"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq56.gif"/></alternatives></inline-formula> time if using wavelet tree. We note that the <inline-formula id="IEq57"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq57.gif"/></alternatives></inline-formula> can also be inferred during the wavelet tree’s rank query on <inline-formula id="IEq58"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq58.gif"/></alternatives></inline-formula>, by checking whether the bits labeling the relevant root-to-leaf path form the bit representation for c. This strategy further accelerates the <inline-formula id="IEq59"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq59.gif"/></alternatives></inline-formula> operation, and is also applicable to other compressed sequence representations, including RLBWT.</p>
      <p id="Par31"><bold>Theorem 2 </bold><italic>The space complexity of run-block compressed sequence is</italic><inline-formula id="IEq60"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(\frac{n}{\sqrt{l}}{\text{log}}\sigma )$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq60.gif"/></alternatives></inline-formula><italic>bits, where</italic><inline-formula id="IEq61"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l=\frac{n}{r}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq61.gif"/></alternatives></inline-formula><italic>is the average run length and r is the number of runs in the sequence</italic>.</p>
      <p id="Par32"><italic>Proof</italic>: The key observation is that each non-run block contains at least one run head. Therefore, we have at most<italic> r</italic> non-run blocks. As a result, the minimum length of <inline-formula id="IEq62"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M128"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq62.gif"/></alternatives></inline-formula> is <inline-formula id="IEq63"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}-r$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq63.gif"/></alternatives></inline-formula>, and the maximum length of <inline-formula id="IEq64"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq64.gif"/></alternatives></inline-formula> is <inline-formula id="IEq65"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$rb$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mi mathvariant="italic">rb</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq65.gif"/></alternatives></inline-formula>. The length of the <inline-formula id="IEq66"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq66.gif"/></alternatives></inline-formula> is <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}$$\end{document}</tex-math><mml:math id="M138"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq67.gif"/></alternatives></inline-formula>.</p>
      <p id="Par33">We can use wavelet trees to represent the run-block subsequence and the plain subsequence. Let <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A$$\end{document}</tex-math><mml:math id="M140"><mml:mi>A</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq68.gif"/></alternatives></inline-formula> be the number of bits to represent one character in the wavelet tree, then the asymptotic total space usage in bits is <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}+A\left(\frac{n}{b}-r\right)+Arb$$\end{document}</tex-math><mml:math id="M142"><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>r</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq69.gif"/></alternatives></inline-formula>, where the terms are for <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M144"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq70.gif"/></alternatives></inline-formula>, <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M146"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq71.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq72.gif"/></alternatives></inline-formula>, respectively. We can rewrite the space usage bound as:<disp-formula id="Equc"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(b)=Arb+\frac{1+An}{b}-Ar,$$\end{document}</tex-math><mml:math id="M150" display="block"><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equc.gif" position="anchor"/></alternatives></disp-formula>which is minimized when <inline-formula id="IEq73"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b=\sqrt{\frac{1+An}{Ar}}$$\end{document}</tex-math><mml:math id="M152"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq73.gif"/></alternatives></inline-formula>. Because <italic>b</italic> is an integer, we take the block size as <inline-formula id="IEq74"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}=\lceil\sqrt{\frac{1+An}{Ar}}\rceil$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq74.gif"/></alternatives></inline-formula>. Substituting this for <inline-formula id="IEq75"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M156"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq75.gif"/></alternatives></inline-formula>, we have:<disp-formula id="Equd"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left({b}^{*}\right)=Ar\lceil\sqrt{\frac{1+An}{Ar}}\rceil+\frac{1+An}{\lceil\sqrt{\frac{1+An}{Ar}}\rceil}-Ar&lt;\sqrt{Ar\left(1+An\right)}+\sqrt{Ar\left(1+An\right)}=O\left(A\sqrt{nr}\right),$$\end{document}</tex-math><mml:math id="M158" display="block"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:msqrt><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mfenced></mml:mrow></mml:msqrt><mml:mo>+</mml:mo><mml:msqrt><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mfenced></mml:mrow></mml:msqrt><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mi>A</mml:mi><mml:msqrt><mml:mrow><mml:mi mathvariant="italic">nr</mml:mi></mml:mrow></mml:msqrt></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equd.gif" position="anchor"/></alternatives></disp-formula>where the inequality is based on<inline-formula id="IEq76"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sqrt{\frac{1+An}{Ar}}\le \lceil\sqrt{\frac{1+An}{Ar}}\rceil&lt;\sqrt{\frac{1+An}{Ar}}+1$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>≤</mml:mo><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq76.gif"/></alternatives></inline-formula>. We can rewrite <inline-formula id="IEq77"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left({b}^{*}\right)$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq77.gif"/></alternatives></inline-formula> by using the definition of <inline-formula id="IEq78"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r=\frac{n}{l}$$\end{document}</tex-math><mml:math id="M164"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq78.gif"/></alternatives></inline-formula>, obtaining <inline-formula id="IEq79"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S({b}^{*})=O\left(A\frac{n}{\sqrt{l}} \right).$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mi>A</mml:mi><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq79.gif"/></alternatives></inline-formula> To ensure the worst rank query time on the data structure is small, the wavelet tree is in the shape of a balanced binary tree in our implementation, and <inline-formula id="IEq80"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A=O({\text{log}}\sigma )$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq80.gif"/></alternatives></inline-formula>. Further space could be reduced if we use techniques like Huffman-shaped wavelet tree [<xref ref-type="bibr" rid="CR51">51</xref>], and <italic>A</italic> will be <inline-formula id="IEq81"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({H}_{0}\left({T}_{R}\right)\right)$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq81.gif"/></alternatives></inline-formula> and <inline-formula id="IEq82"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({H}_{0}\left({T}_{P}\right)\right)$$\end{document}</tex-math><mml:math id="M172"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq82.gif"/></alternatives></inline-formula> for <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, respectively, where <italic>H</italic><sub>0</sub> is the Shannon entropy of the sequence.</p>
      <p id="Par34">The <inline-formula id="IEq83"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M174"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq83.gif"/></alternatives></inline-formula> found in the proof is to bound the worst-case space usage, where each non-run block has exactly one run head in the middle. The optimal block size can be different. For example, when every run has an identical length, the optimal block size is <inline-formula id="IEq84"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{r}$$\end{document}</tex-math><mml:math id="M176"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq84.gif"/></alternatives></inline-formula> and every block is run-block compressible, yielding <inline-formula id="IEq85"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left(\frac{n}{l}{\text{log}}\sigma \right)$$\end{document}</tex-math><mml:math id="M178"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mfrac><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq85.gif"/></alternatives></inline-formula>-bit space complexity. To find the appropriate block size efficiently, we search the size of powers of 2, e.g., 4, 8, 16,.., and select the block size <inline-formula id="IEq86"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{b}$$\end{document}</tex-math><mml:math id="M180"><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq86.gif"/></alternatives></inline-formula> with the least space usage among them. Suppose <inline-formula id="IEq87"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\widehat{b}}^{\prime}$$\end{document}</tex-math><mml:math id="M182"><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq87.gif"/></alternatives></inline-formula> is the smallest power of 2 that is larger or equal to the block size <inline-formula id="IEq88"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M184"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq88.gif"/></alternatives></inline-formula> defined in the proof, then we have <inline-formula id="IEq89"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{b}^{*}\le \widehat{b}}^{\prime}\le 2{b}^{*}$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:msup><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq89.gif"/></alternatives></inline-formula>. Therefore, <inline-formula id="IEq90"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left(\widehat{b}\right)\le S\left({\widehat{b}}^{\prime}\right)\le 2Ar{b}^{*}+\frac{1+An}{{b}^{*}}-Ar\le 2S\left({b}^{*}\right)+Ar=O\left(\frac{An}{ \sqrt{l}}\right)$$\end{document}</tex-math><mml:math id="M188"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mfenced><mml:mo>≤</mml:mo><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mfenced><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">An</mml:mi></mml:mrow><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq90.gif"/></alternatives></inline-formula>, where the second inequality is by applying <inline-formula id="IEq91"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}\le \widehat{b}^{\prime}\le 2{b}^{*}$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq91.gif"/></alternatives></inline-formula>. Therefore, the block size inferred from inspecting powers of 2 is not a bad estimator and gives the same asymptotic space usage as <inline-formula id="IEq92"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M192"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq92.gif"/></alternatives></inline-formula> in the worst case. Furthermore, since <inline-formula id="IEq93"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Ar\le A\sqrt{nr}&lt;S({b}^{*})$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mi>A</mml:mi><mml:msqrt><mml:mrow><mml:mi mathvariant="italic">nr</mml:mi></mml:mrow></mml:msqrt><mml:mo>&lt;</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq93.gif"/></alternatives></inline-formula>, <inline-formula id="IEq94"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left(\widehat{b}\right)$$\end{document}</tex-math><mml:math id="M196"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq94.gif"/></alternatives></inline-formula> is no more than three times of the <inline-formula id="IEq95"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S({b}^{*})$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq95.gif"/></alternatives></inline-formula>. To reduce the bias of the sparse search space, we also inspect the space usage of block sizes <inline-formula id="IEq96"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M200"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq96.gif"/></alternatives></inline-formula> and <inline-formula id="IEq97"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{3\widehat{b}}{2}$$\end{document}</tex-math><mml:math id="M202"><mml:mfrac><mml:mrow><mml:mn>3</mml:mn><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq97.gif"/></alternatives></inline-formula> before making a final decision. When <inline-formula id="IEq98"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M204"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq98.gif"/></alternatives></inline-formula> is small, the block size minimizing the overall space usage is the length of the genome (<italic>T</italic><sub><italic>P</italic></sub> = <italic>T</italic>), and run-block compression is equivalent to the wavelet tree representation. In practice, Centrifuger uses the first one million characters of the BWT sequence instead of the full sequence to infer the block size.</p>
    </sec>
    <sec id="Sec14">
      <title>Index construction</title>
      <p id="Par35">Centrifuger uses the blockwise suffix sorting algorithm [<xref ref-type="bibr" rid="CR52">52</xref>] to build its index, as in Bowtie [<xref ref-type="bibr" rid="CR53">53</xref>] and Centrifuge. The advantage of blockwise suffix sorting is to control the overall memory footprint and parallelize the construction procedure. The array that holds the BWT sequence is pre-allocated, and the sequence is filled in block-by-block as blocks of the suffix array are constructed. Another important component in the FM-index is the sampled suffix information. During construction, the index stores the genome coordinate information for every 16th offset on the BWT, which can be adjusted by the user. After that, the offsets are transformed into sequence IDs and using a bit-efficient representation of the IDs. For example, the RefSeq prokaryotic genome database contained 75,865 sequences (including plasmids) from 34,190 strains with complete genomes, so sequence IDs can be distinguished by a 17-bit integer. Instead of saving the IDs in an array of 32-bit integers, the bit patterns are stored consecutively without any wasted space. Therefore, the total size for the bit-compact array for the sampled ID list is 17·<italic>m</italic> bits, or 0.26·<italic>m</italic> 64-bit words, where <italic>m</italic> is the number of sampled IDs.</p>
    </sec>
    <sec id="Sec15">
      <title>Taxonomic classification</title>
      <p id="Par36">For taxonomic classification, Centrifuger follows Centrifuge’s paradigm by greedily searching for semi-maximal exact matches, where only one side of a match cannot be extended to form a longer match to the database (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). For each read pair, Centrifuger searches the matches twice, one using the forward strand and the other using the reverse-complement strand. Using the forward strand search as an example, Centrifuger starts from the last position of the read and extends the match backward as much as possible using LF mapping until the match cannot hit any sequence in the index. In the example in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the first match is the right-most 60 bp. Centrifuger will then skip the next base on the read, as a putative variant or sequencing error, and start a new search. As a result, the next search starts from the 62nd bp, counting from the right end, and finds a match of length 39.</p>
      <p id="Par37">To find the best taxonomy ID for the read, Centrifuger scores the sequence IDs retrieved from the matches. Let <inline-formula id="IEq99"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}_{M}$$\end{document}</tex-math><mml:math id="M206"><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq99.gif"/></alternatives></inline-formula> denote the length of a match <inline-formula id="IEq100"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M208"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq100.gif"/></alternatives></inline-formula>. Centrifuger will filter a short match <inline-formula id="IEq101"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M210"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq101.gif"/></alternatives></inline-formula> if <inline-formula id="IEq102"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2n/{4}^{{l}_{M}}&gt;0.01$$\end{document}</tex-math><mml:math id="M212"><mml:mrow><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup><mml:mo>&gt;</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq102.gif"/></alternatives></inline-formula>, as it is likely a random match. For example, we kept the matches with lengths greater or equal to 23 as valid matches when classifying reads using the 140 GBp RefSeq prokaryotic database. Each valid match <inline-formula id="IEq103"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M214"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq103.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq104"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}_{M}$$\end{document}</tex-math><mml:math id="M216"><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq104.gif"/></alternatives></inline-formula> will contribute a score <inline-formula id="IEq105"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\left({l}_{M}-15\right)}^{2}$$\end{document}</tex-math><mml:math id="M218"><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq105.gif"/></alternatives></inline-formula> to the corresponding strand, and the matches from the less-scored strand will be removed. Centrifuger resolves sequence IDs contained in each valid match by using LF-mapping in the compressed FM-index to find sampled sequence IDs. Specifically, each match <inline-formula id="IEq106"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M220"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq106.gif"/></alternatives></inline-formula> corresponds to an interval on the BWT sequence, denoted as <inline-formula id="IEq107"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M222"><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq107.gif"/></alternatives></inline-formula>, then we will resolve the sequence ID for each position on the BWT sequence between <inline-formula id="IEq108"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M224"><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq108.gif"/></alternatives></inline-formula>, by applying LF-mapping. The LF-mapping procedure for resolving the position <inline-formula id="IEq109"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p\in \left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M226"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq109.gif"/></alternatives></inline-formula>, terminates when it reaches a position <inline-formula id="IEq110"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}$$\end{document}</tex-math><mml:math id="M228"><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq110.gif"/></alternatives></inline-formula> on the BWT sequence with a sampled sequence ID, i.e., <inline-formula id="IEq111"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}\space mod\space 16=0$$\end{document}</tex-math><mml:math id="M230"><mml:mrow><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mn>16</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq111.gif"/></alternatives></inline-formula> with the default parameter. The sampled sequence ID at <inline-formula id="IEq112"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}$$\end{document}</tex-math><mml:math id="M232"><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq112.gif"/></alternatives></inline-formula> is the sequence ID corresponding to <inline-formula id="IEq113"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M234"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq113.gif"/></alternatives></inline-formula>. In the example of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the Centrifuger found the first 60-bp exact match <inline-formula id="IEq114"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${M}_{1}$$\end{document}</tex-math><mml:math id="M236"><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq114.gif"/></alternatives></inline-formula> hit sequences with IDs X, Y, and Z, and the second 39-bp exact match <inline-formula id="IEq115"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${M}_{2}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq115.gif"/></alternatives></inline-formula> were from sequence IDs W and X. If both strands have an equal score, the sequence ID will be resolved for both strands. For each resolved sequence ID, Centrifuger will sum up its scores across the matches using the formula <inline-formula id="IEq116"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{score}}\left({\text{sequence}}\space I\right)={\sum }_{M\in {\text{sqeuence}}\space I}{\left({l}_{M}-15\right)}^{2}$$\end{document}</tex-math><mml:math id="M240"><mml:mrow><mml:mtext>score</mml:mtext><mml:mfenced close=")" open="("><mml:mtext>sequence</mml:mtext><mml:mi>I</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mtext>sqeuence</mml:mtext><mml:mi>I</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq116.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq117"><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M\in {\text{sequence}\space} I$$\end{document}</tex-math><mml:math id="M242"><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mtext>sequence</mml:mtext><mml:mi>I</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq117.gif"/></alternatives></inline-formula> means the match <inline-formula id="IEq118"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M244"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq118.gif"/></alternatives></inline-formula> is found in the sequence with ID <inline-formula id="IEq119"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I$$\end{document}</tex-math><mml:math id="M246"><mml:mi>I</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq119.gif"/></alternatives></inline-formula>. In the example of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the score for sequence ID X is <inline-formula id="IEq120"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\left(60-15\right)}^{2}+{\left(39-15\right)}^{2}=2601$$\end{document}</tex-math><mml:math id="M248"><mml:mrow><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mn>60</mml:mn><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mn>39</mml:mn><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>2601</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq120.gif"/></alternatives></inline-formula> as both matches hit this sequence. This scoring function was empirical and was designed during the development of Centrifuge. The sequence IDs with the highest score and their corresponding taxonomy IDs will be reported as the final classification result for the read, where the example read in Fig. <xref rid="Fig1" ref-type="fig">1</xref> is classified to the sequence X. When the number of highest-scoring sequence IDs is more than the report threshold that can be specified by the user (default 1), Centrifuger will merge the IDs to their LCAs in the taxonomy tree until the number is within the threshold.</p>
      <p id="Par38">For a match that hits many sequences in the database, i.e., <inline-formula id="IEq121"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}-{s}_{M}+1$$\end{document}</tex-math><mml:math id="M250"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq121.gif"/></alternatives></inline-formula> is large, Centrifuger will resolve the sequence IDs for at most 40·report_threshold entries evenly distributed in the BWT interval. For example, if <inline-formula id="IEq122"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${s}_{M}=100$$\end{document}</tex-math><mml:math id="M252"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq122.gif"/></alternatives></inline-formula> and <inline-formula id="IEq123"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}=490$$\end{document}</tex-math><mml:math id="M254"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>490</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq123.gif"/></alternatives></inline-formula>, then Centirufger will resolve the 40 sequence IDs for positions at 100, 110, 120,.., 480, and 490 on the BWT sequence with the default setting. Though this is a heuristic that can cause the algorithm to miss the true genome of origin, it is likely to generate scores for sequences in the same phylogeny branch and may help identify the correct taxonomy IDs at higher levels. This is the main difference between Centrifuge and Centrifuger in the classification stage, where Centrifuge ignores a match <inline-formula id="IEq124"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M256"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq124.gif"/></alternatives></inline-formula> if <inline-formula id="IEq125"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}-{s}_{M}+1 &gt;200$$\end{document}</tex-math><mml:math id="M258"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq125.gif"/></alternatives></inline-formula> with the default setting.</p>
    </sec>
    <sec id="Sec16">
      <title>Hybrid run-length compression</title>
      <p id="Par39">In addition to the run-block compression, we designed another compression scheme called hybrid run-length compression, using run-length compression for each fixed-size block. Hybrid run-length compressed BWT uses the same amount of space as the wavelet tree representation when the repetitiveness of the sequence is low, and its space usage converges to the RLBWTs when the repetitiveness grows. In our implementation, a block is marked as run-length compressible (<italic>B</italic><sub><italic>R</italic></sub> = 1) if its average run-length is more than six based on the comparison between RLBWT and wavelet tree (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A, <xref rid="Fig2" ref-type="fig">B</xref>). The substrings from blocks are separated into two subsequences based on <italic>B</italic><sub><italic>R</italic></sub>, and the subsequences will be concatenated into two sequences, <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, respectively. <italic>T</italic><sub><italic>R</italic></sub> will be compressed by the run-length method as in RLBWT, and <italic>T</italic><sub><italic>P</italic></sub> will be represented as a wavelet tree. The block size is inferred in the same fashion as in RBBWT. The rank query on the hybrid run-length compressed sequence is like the run-block compression, where we combine the ranks from <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, making it slower than the rank query on RLBWT. The idea of hybrid run-length compression is similar to the wavelet tree when using fixed-block boosting [<xref ref-type="bibr" rid="CR54">54</xref>]. Our implementation avoids explicitly recording the accumulated count at the beginning of a block and is therefore well suited to mildly repetitive sequences needing small blocks. For example, the block size of the hybrid run-length compressed BWT was only 12 for the genus <italic>Legionella</italic>’s genomes. Despite being less computationally efficient than other representations, the hybrid run-length compressed BWT is flexible and allows methods to handle various texts with a wide range of repetitiveness without altering the underlying data structure.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec17">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2024_3244_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1</bold>: Table S1. The classification accuracy at various taxonomy ranks in the Mason-generated simulated data Table S2. SRA IDs of the samples used in the SARS-CoV-2 sequence-level classification analysis. Table S3. SRA IDs of the samples used in the bacterial WGS classification evaluations. Table S4. Running commands for the classifiers used in the evaluations. Fig. S1. Space usage of the wavelet tree, RLBWT, hybrid run-length compression and RBBWT when adding genomes with the species <italic>Escherichia fergusonii</italic> (taxonomy ID 564) and the genus <italic>Legionella</italic> (taxonomy ID 445) Fig. S2. Space usage of the wavelet tree, RLBWT, hybrid run-length compression and RBBWT when adding genomes with species <italic>Chalmydia trachomatis</italic> (taxonomy ID 813) and the genus <italic>Chalmydia</italic> (taxonomy ID 810). Fig. S3. Sensitivity and precision of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data generated from June 2023 RefSeq prokaryotic genomes using ART. Fig. S4. Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data when classifying against a trimmed database that has one genome per genus and does not contain the true origins of the reads. Fig. S5. F1 scores of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP at various taxonomy ranks on the 10 simulated data sets from CAMI2. Fig. S6. F1 scores of Centrifuger, Centrifuge, Kraken2, Ganon and KMCP on bacterial WGS data sets, where the species of the bacteria are not in the database but their genera are present in the database. Fig. S7. Cluster heatmaps for read fractions in the SARS-CoV-2 sequence-level analysis. Fig. S8. Sensitivity, precision and F1 score of Centrifuger and Ganon using LCA and reassignment based on taxa quantification at various taxonomy levels.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2024_3244_MOESM2_ESM.pdf">
            <caption>
              <p><bold>Additional</bold><bold>file 2</bold>. Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’ s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Dr. Daehwan Kim and Dr. Florian Breitwieser for the foundation work in Centrifuge. We also thank Dr. Heng Li and Dr. Shannon Soucy for many helpful discussions.</p>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par40">Feng Gao and Kevin Pang were the primary editors of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par41">The review history is available as Additional file <xref rid="MOESM2" ref-type="media">2</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors<italic>’</italic> contributions</title>
    <p> L.S. conceived the project. L.S. and B.L. designed the algorithm. L.S. implemented and evaluated the software. L.S. and B.L. wrote the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work is supported by the NIH grants P20GM130454 (Dartmouth), 3P20GM130454-05WS (Dartmouth), R01HG011392 (B.L.), and R35GM139602 (B.L.).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The source code of Centrifuger is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link> [<xref ref-type="bibr" rid="CR55">55</xref>]. The source code of the version Centrifuger v1.0.1 used in this study is also available at Zenodo 10.5281/zenodo.10938378 [<xref ref-type="bibr" rid="CR56">56</xref>]. The code for the evaluations and experiments is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger_evaluations">https://github.com/mourisl/centrifuger_evaluations</ext-link> [<xref ref-type="bibr" rid="CR57">57</xref>]. The NCBI SRA accession numbers of the WGS data sets are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">2</xref> and Table S<xref rid="MOESM1" ref-type="media">3</xref>. The index for the RefSeq prokaryotic, human, virus, and GenBank SARS-CoV-2 variants is available at Zenodo 10.5281/zenodo.10023239.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par42">Not applicable.</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par43">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tringe</surname>
            <given-names>SG</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>EM</given-names>
          </name>
        </person-group>
        <article-title>Metagenomics: DNA sequencing of environmental samples</article-title>
        <source>Nat Rev Genet</source>
        <year>2005</year>
        <volume>6</volume>
        <fpage>805</fpage>
        <lpage>814</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg1709</pub-id>
        <?supplied-pmid 16304596?>
        <pub-id pub-id-type="pmid">16304596</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Zhang L, Chen F, Zeng Z, Xu M, Sun F, Yang L, et al. Advances in Metagenomics and Its Application in Environmental Microorganisms. Frontiers in Microbiology. 2021;12. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fmicb.2021.766364">https://www.frontiersin.org/articles/10.3389/fmicb.2021.766364</ext-link>. Cited 2023 Oct 13</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiu</surname>
            <given-names>CY</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>SA</given-names>
          </name>
        </person-group>
        <article-title>Clinical metagenomics</article-title>
        <source>Nat Rev Genet</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>341</fpage>
        <lpage>355</lpage>
        <pub-id pub-id-type="doi">10.1038/s41576-019-0113-7</pub-id>
        <?supplied-pmid 30918369?>
        <pub-id pub-id-type="pmid">30918369</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>De Filippis</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Paparo</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Nocerino</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Della Gatta</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Carucci</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Russo</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Specific gut microbiome signatures and the associated pro-inflamatory functions are linked to pediatric allergy and acquisition of immune tolerance</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <volume>12</volume>
        <fpage>5958</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-26266-z</pub-id>
        <?supplied-pmid 34645820?>
        <pub-id pub-id-type="pmid">34645820</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thomas</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Manghi</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Asnicar</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Pasolli</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Armanini</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zolfo</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Metagenomic analysis of colorectal cancer datasets identifies cross-cohort microbial diagnostic signatures and a link with choline degradation</article-title>
        <source>Nat Med</source>
        <year>2019</year>
        <volume>25</volume>
        <fpage>667</fpage>
        <lpage>678</lpage>
        <pub-id pub-id-type="doi">10.1038/s41591-019-0405-7</pub-id>
        <?supplied-pmid 30936548?>
        <pub-id pub-id-type="pmid">30936548</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Knight</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Vrbanac</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>BC</given-names>
          </name>
          <name>
            <surname>Aksenov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Callewaert</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Debelius</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Best practices for analysing microbiomes</article-title>
        <source>Nat Rev Microbiol</source>
        <year>2018</year>
        <volume>16</volume>
        <fpage>410</fpage>
        <lpage>422</lpage>
        <pub-id pub-id-type="doi">10.1038/s41579-018-0029-9</pub-id>
        <?supplied-pmid 29795328?>
        <pub-id pub-id-type="pmid">29795328</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pruitt</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Tatusova</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Maglott</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>NCBI reference sequences (RefSeq): a curated non-redundant sequence database of genomes, transcripts and proteins</article-title>
        <source>Nucleic Acids Res</source>
        <year>2007</year>
        <volume>35</volume>
        <fpage>D61</fpage>
        <lpage>D65</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkl842</pub-id>
        <?supplied-pmid 17130148?>
        <pub-id pub-id-type="pmid">17130148</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Cavanaugh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Karsch-Mizrachi</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Ostell</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>GenBank</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>D36</fpage>
        <lpage>42</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1195</pub-id>
        <?supplied-pmid 23193287?>
        <pub-id pub-id-type="pmid">23193287</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parks</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Chuvochina</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rinke</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mussig</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Chaumeil</surname>
            <given-names>P-A</given-names>
          </name>
          <name>
            <surname>Hugenholtz</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy</article-title>
        <source>Nucleic Acids Res</source>
        <year>2022</year>
        <volume>50</volume>
        <fpage>D785</fpage>
        <lpage>D794</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab776</pub-id>
        <?supplied-pmid 34520557?>
        <pub-id pub-id-type="pmid">34520557</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Improved metagenomic analysis with Kraken 2</article-title>
        <source>Genome Biol</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>257</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1891-0</pub-id>
        <?supplied-pmid 31779668?>
        <pub-id pub-id-type="pmid">31779668</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hayes</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Mount</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Reducing storage requirements for biological sequence comparison</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>3363</fpage>
        <lpage>3369</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth408</pub-id>
        <?supplied-pmid 15256412?>
        <pub-id pub-id-type="pmid">15256412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Kraken: ultrafast metagenomic sequence classification using exact alignments</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>R46</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-3-r46</pub-id>
        <?supplied-pmid 24580807?>
        <pub-id pub-id-type="pmid">24580807</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blanco-Míguez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Beghini</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Cumbo</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>McIver</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>KN</given-names>
          </name>
          <name>
            <surname>Zolfo</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Extending and improving metagenomic taxonomic profiling with uncharacterized species using MetaPhlAn 4</article-title>
        <source>Nat Biotechnol.</source>
        <year>2023</year>
        <volume>41</volume>
        <fpage>1633</fpage>
        <lpage>1644</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-023-01688-w</pub-id>
        <?supplied-pmid 36823356?>
        <pub-id pub-id-type="pmid">36823356</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Segata</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Waldron</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ballarini</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Narasimhan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Jousson</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Huttenhower</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Metagenomic microbial community profiling using unique clade-specific marker genes</article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>811</fpage>
        <lpage>814</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.2066</pub-id>
        <?supplied-pmid 22688413?>
        <pub-id pub-id-type="pmid">22688413</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ounit</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wanamaker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Close</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Lonardi</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>CLARK: fast and accurate classification of metagenomic and genomic sequences using discriminative k-mers</article-title>
        <source>BMC Genomics</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>236</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1419-2</pub-id>
        <?supplied-pmid 25879410?>
        <pub-id pub-id-type="pmid">25879410</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Piro</surname>
            <given-names>VC</given-names>
          </name>
          <name>
            <surname>Dadi</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Seiler</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Renard</surname>
            <given-names>BY</given-names>
          </name>
        </person-group>
        <article-title>ganon: precise metagenomics classification against large and up-to-date sets of reference sequences</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <fpage>i12</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa458</pub-id>
        <?supplied-pmid 32657362?>
        <pub-id pub-id-type="pmid">32657362</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Xiang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cai</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>KMCP: accurate metagenomic profiling of both prokaryotic and viral populations by pseudo-mapping</article-title>
        <source>Bioinformatics.</source>
        <year>2023</year>
        <volume>39</volume>
        <fpage>btac845</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac845</pub-id>
        <?supplied-pmid 36579886?>
        <pub-id pub-id-type="pmid">36579886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Centrifuge: rapid and sensitive classification of metagenomic sequences</article-title>
        <source>Genome Res</source>
        <year>2016</year>
        <volume>26</volume>
        <fpage>1721</fpage>
        <lpage>1729</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.210641.116</pub-id>
        <?supplied-pmid 27852649?>
        <pub-id pub-id-type="pmid">27852649</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Burrows M, Wheeler DJ. A block-sorting lossless data compression algorithm. SRS Research Report. 1994;124. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://cir.nii.ac.jp/crid/1571417124717214720.">https://cir.nii.ac.jp/crid/1571417124717214720</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Ferragina P, Manzini G. Opportunistic data structures with applications. Proceedings 41st Annual Symposium on Foundations of Computer Science. 2000. p. 390–8. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://ieeexplore.ieee.org/abstract/document/892127">https://ieeexplore.ieee.org/abstract/document/892127</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nasko</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
        </person-group>
        <article-title>RefSeq database growth influences the accuracy of k-mer-based lowest common ancestor species identification</article-title>
        <source>Genome Biol</source>
        <year>2018</year>
        <volume>19</volume>
        <fpage>165</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-018-1554-6</pub-id>
        <?supplied-pmid 30373669?>
        <pub-id pub-id-type="pmid">30373669</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kreft</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>On compressing and indexing repetitive sequences</article-title>
        <source>Theoret Comput Sci</source>
        <year>2013</year>
        <volume>483</volume>
        <fpage>115</fpage>
        <lpage>133</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2012.02.006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Gagie T, Gawrychowski P, Kärkkäinen J, Nekrich Y, Puglisi SJ. A Faster Grammar-Based Self-Index. arXiv; 2012. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1109.3954">http://arxiv.org/abs/1109.3954</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mäkinen</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sirén</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Välimäki</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Storage and Retrieval of Highly Repetitive Sequence Collections</article-title>
        <source>J Comput Biol</source>
        <year>2010</year>
        <volume>17</volume>
        <fpage>281</fpage>
        <lpage>308</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0169</pub-id>
        <?supplied-pmid 20377446?>
        <pub-id pub-id-type="pmid">20377446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Nishimoto T, Tabei Y. Optimal-Time Queries on BWT-runs Compressed Indexes. arXiv; 2021. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/2006.05104">http://arxiv.org/abs/2006.05104</ext-link>. Cited 2023 Nov 5.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Gagie T, Navarro G, Prezza N. Optimal-Time Text Indexing in BWT-runs Bounded Space. arXiv; 2017. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1705.10382">http://arxiv.org/abs/1705.10382</ext-link>. Cited 2023 Sep 20.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Grossi R, Gupta A, Vitter JS. High-order entropy-compressed text indexes. Proceedings of the fourteenth annual ACM-SIAM symposium on Discrete algorithms. USA: Society for Industrial and Applied Mathematics; 2003. p. 841–50.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Prezza N. r-index: the run-length BWT index. 2023. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://github.com/nicolaprezza/r-index">https://github.com/nicolaprezza/r-index</ext-link>. Cited 2023 Oct 14.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Gog S, Beller T, Moffat A, Petri M. From Theory to Practice: Plug and Play with Succinct Data Structures. arXiv; 2013. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1311.1249">http://arxiv.org/abs/1311.1249</ext-link>. Cited 2023 Nov 12.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Holtgrewe M. Mason – A Read Simulator for Second Generation Sequencing Data. Technical Report FU Berlin. 2010.Available from: 
<ext-link ext-link-type="uri" xlink:href="https://publications.imp.fu-berlin.de/962/">https://publications.imp.fu-berlin.de/962/</ext-link>. Cited 2023 Oct 6.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>GT</given-names>
          </name>
        </person-group>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>593</fpage>
        <lpage>594</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr708</pub-id>
        <?supplied-pmid 22199392?>
        <pub-id pub-id-type="pmid">22199392</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muggli</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Bowe</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Noyes</surname>
            <given-names>NR</given-names>
          </name>
          <name>
            <surname>Morley</surname>
            <given-names>PS</given-names>
          </name>
          <name>
            <surname>Belk</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Raymond</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Succinct colored de Bruijn graphs</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>3181</fpage>
        <lpage>3187</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx067</pub-id>
        <?supplied-pmid 28200001?>
        <pub-id pub-id-type="pmid">28200001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alanko</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Vuohtoniemi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mäklin</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Puglisi</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Themisto: a scalable colored k-mer index for sensitive pseudoalignment against hundreds of thousands of bacterial genomes</article-title>
        <source>Bioinformatics</source>
        <year>2023</year>
        <volume>39</volume>
        <fpage>i260</fpage>
        <lpage>i269</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btad233</pub-id>
        <?supplied-pmid 37387143?>
        <pub-id pub-id-type="pmid">37387143</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Alanko JN, Puglisi SJ, Vuohtoniemi J. Succinct k-mer Sets Using Subset Rank Queries on the Spectral Burrows-Wheeler Transform *. bioRxiv; 2022. p. 2022.05.19.492613. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2022.05.19.492613v2">https://www.biorxiv.org/content/10.1101/2022.05.19.492613v2</ext-link>. Cited 2024 Feb 5.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Meyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Fritz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Deng</surname>
            <given-names>Z-L</given-names>
          </name>
          <name>
            <surname>Koslicki</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lesker</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Critical Assessment of Metagenome Interpretation: the second round of challenges</article-title>
        <source>Nat Methods</source>
        <year>2022</year>
        <volume>19</volume>
        <fpage>429</fpage>
        <lpage>440</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-022-01431-4</pub-id>
        <?supplied-pmid 35396482?>
        <pub-id pub-id-type="pmid">35396482</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dilthey</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Strain-level metagenomic assignment and compositional estimation for long reads with MetaMaps</article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <fpage>3066</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-10934-2</pub-id>
        <?supplied-pmid 31296857?>
        <pub-id pub-id-type="pmid">31296857</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Ulrich J-U, Renard BY. Taxor: Fast and space-efficient taxonomic classification of long reads with hierarchical interleaved XOR filters. bioRxiv; 2023. p. 2023.07.20.549822. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/10.1101/2023.07.20.549822v1">https://www.biorxiv.org/10.1101/2023.07.20.549822v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ahmed</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Rossi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boucher</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Efficient taxa identification using a pangenome index</article-title>
        <source>Genome Res</source>
        <year>2023</year>
        <volume>33</volume>
        <issue>7</issue>
        <fpage>1069</fpage>
        <lpage>1077</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.277642.123</pub-id>
        <?supplied-pmid 37258301?>
        <pub-id pub-id-type="pmid">37258301</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gagie</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kashgouli</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Arroyuelo</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Poblete</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>KATKA: A KRAKEN-Like Tool with k Given at Query Time</article-title>
        <source>String Processing and Information Retrieval</source>
        <year>2022</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer International Publishing</publisher-name>
        <fpage>191</fpage>
        <lpage>197</lpage>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Menzel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ng</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Krogh</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Fast and sensitive taxonomic classification for metagenomics with Kaiju</article-title>
        <source>Nat Commun</source>
        <year>2016</year>
        <volume>7</volume>
        <fpage>11257</fpage>
        <pub-id pub-id-type="doi">10.1038/ncomms11257</pub-id>
        <?supplied-pmid 27071849?>
        <pub-id pub-id-type="pmid">27071849</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Fast construction of FM-index for long sequence reads</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>3274</fpage>
        <lpage>3275</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu541</pub-id>
        <?supplied-pmid 25107872?>
        <pub-id pub-id-type="pmid">25107872</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Exploring single-sample SNP and INDEL calling with whole-genome de novo assembly</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1838</fpage>
        <lpage>1844</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts280</pub-id>
        <?supplied-pmid 22569178?>
        <pub-id pub-id-type="pmid">22569178</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schaeffer</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bray</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Pseudoalignment for metagenomic read assignment</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>2082</fpage>
        <lpage>2088</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx106</pub-id>
        <?supplied-pmid 28334086?>
        <pub-id pub-id-type="pmid">28334086</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Shaw J, Yu YW. Metagenome profiling and containment estimation through abundance-corrected k-mer sketching with sylph. bioRxiv; 2024. p. 2023.11.20.567879. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.11.20.567879v2">https://www.biorxiv.org/content/10.1101/2023.11.20.567879v2</ext-link>. Cited 2024 Jan 28.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Thielen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Bracken: estimating species abundance in metagenomics data</article-title>
        <source>PeerJ Comput Sci</source>
        <year>2017</year>
        <volume>3</volume>
        <fpage>e104</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj-cs.104</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dempster</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Laird</surname>
            <given-names>NM</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>DB</given-names>
          </name>
        </person-group>
        <article-title>Maximum Likelihood from Incomplete Data Via the EM Algorithm</article-title>
        <source>J Roy Stat Soc: Ser B (Methodol)</source>
        <year>1977</year>
        <volume>39</volume>
        <fpage>1</fpage>
        <lpage>22</lpage>
        <pub-id pub-id-type="doi">10.1111/j.2517-6161.1977.tb01600.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Skoufos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Almodaresi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zakeri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Paulson</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hatzigeorgiou</surname>
            <given-names>AG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>AGAMEMNON: an Accurate metaGenomics And MEtatranscriptoMics quaNtificatiON analysis suite</article-title>
        <source>Genome Biol</source>
        <year>2022</year>
        <volume>23</volume>
        <fpage>39</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-022-02610-4</pub-id>
        <?supplied-pmid 35101114?>
        <pub-id pub-id-type="pmid">35101114</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <mixed-citation publication-type="other">Liu J, Ma Y, Ren Y, Guo H. Centrifuge+: improving metagenomic analysis upon Centrifuge. bioRxiv; 2023. p. 2023.02.27.530134. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.02.27.530134v1">https://www.biorxiv.org/content/10.1101/2023.02.27.530134v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgulis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gertz</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Schäffer</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Agarwala</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A fast and symmetric DUST implementation to mask low-complexity DNA sequences</article-title>
        <source>J Comput Biol</source>
        <year>2006</year>
        <volume>13</volume>
        <fpage>1028</fpage>
        <lpage>1040</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2006.13.1028</pub-id>
        <?supplied-pmid 16796549?>
        <pub-id pub-id-type="pmid">16796549</pub-id>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Piro VC, Reinert K. ganon2: up-to-date and scalable metagenomics analysis. bioRxiv; 2023. p. 2023.12.07.570547. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content10.1101/2023.12.07.570547v1">https://www.biorxiv.org/content10.1101/2023.12.07.570547v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barbay</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>On compressing permutations and adaptive sorting</article-title>
        <source>Theoret Comput Sci</source>
        <year>2013</year>
        <volume>513</volume>
        <fpage>109</fpage>
        <lpage>123</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2013.10.019</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Fast BWT in small space by blockwise suffix sorting</article-title>
        <source>Theoret Comput Sci</source>
        <year>2007</year>
        <volume>387</volume>
        <fpage>249</fpage>
        <lpage>257</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2007.07.018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <?supplied-pmid 19261174?>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gog</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kempa</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Petri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Puglisi</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Fixed Block Compression Boosting in FM-Indexes: Theory and Practice</article-title>
        <source>Algorithmica</source>
        <year>2019</year>
        <volume>81</volume>
        <fpage>1370</fpage>
        <lpage>1391</lpage>
        <pub-id pub-id-type="doi">10.1007/s00453-018-0475-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger. Github; 2024. <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link>. Accessed 8 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger v1.0.1. Zenodo; 2024. 10.5281/zenodo.10938378. Accessed 7 Apr 2024.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger evaluations. Github; 2024. <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger_evaluations">https://github.com/mourisl/centrifuger_evaluations</ext-link>. Accessed 9 Mar 2024.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">11046777</article-id>
    <article-id pub-id-type="pmid">38664753</article-id>
    <article-id pub-id-type="publisher-id">3244</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-024-03244-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Centrifuger: lossless compression of microbial genomes for efficient and accurate metagenomic sequence classification</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-0180-7426</contrib-id>
        <name>
          <surname>Song</surname>
          <given-names>Li</given-names>
        </name>
        <address>
          <email>Li.Song@dartmouth.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Langmead</surname>
          <given-names>Ben</given-names>
        </name>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Biomedical Data Science, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Computer Science, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Microbiology and Immunology, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00za53h95</institution-id><institution-id institution-id-type="GRID">grid.21107.35</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 9311</institution-id><institution>Department of Computer Science, </institution><institution>Johns Hopkins University, </institution></institution-wrap>Baltimore, MD USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>25</volume>
    <elocation-id>106</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>4</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Centrifuger is an efficient taxonomic classification method that compares sequencing reads against a microbial genome database. In Centrifuger, the Burrows-Wheeler transformed genome sequences are losslessly compressed using a novel scheme called run-block compression. Run-block compression achieves sublinear space complexity and is effective at compressing diverse microbial databases like RefSeq while supporting fast rank queries. Combining this compression method with other strategies for compacting the Ferragina-Manzini (FM) index, Centrifuger reduces the memory footprint by half compared to other FM-index-based approaches. Furthermore, the lossless compression and the unconstrained match length help Centrifuger achieve greater accuracy than competing methods at lower taxonomic levels.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-024-03244-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>FM-index</kwd>
      <kwd>r-index</kwd>
      <kwd>Metagenomic</kwd>
      <kwd>Compact data structure</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000057</institution-id>
            <institution>National Institute of General Medical Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>P20GM130454</award-id>
        <award-id>R35GM139602</award-id>
        <award-id>3P20GM130454-05WS</award-id>
        <principal-award-recipient>
          <name>
            <surname>Langmead</surname>
            <given-names>Ben</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000051</institution-id>
            <institution>National Human Genome Research Institute</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01HG011392</award-id>
        <principal-award-recipient>
          <name>
            <surname>Langmead</surname>
            <given-names>Ben</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Metagenomic sequencing enables comprehensive profiling of microbiomes in a sample and has been widely applied to study natural environments [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], infectious diseases [<xref ref-type="bibr" rid="CR3">3</xref>], allergies [<xref ref-type="bibr" rid="CR4">4</xref>], and cancers [<xref ref-type="bibr" rid="CR5">5</xref>]. Taxonomic classification labels each sequencing read with taxonomy IDs representing its most likely taxon of origin. This has become an important step in translating raw sequencing data into meaningful microbiome profiles [<xref ref-type="bibr" rid="CR6">6</xref>]. Classification is usually conducted by comparing the read sequence to all the sequences in a database of microbial reference genomes, such as RefSeq [<xref ref-type="bibr" rid="CR7">7</xref>], GeneBank [<xref ref-type="bibr" rid="CR8">8</xref>], or GTDB [<xref ref-type="bibr" rid="CR9">9</xref>]. The growth of available microbial reference genomes creates a strong need for memory-efficient structures. Many methods turn to lossy representations of the database. For example, Kraken2 [<xref ref-type="bibr" rid="CR10">10</xref>] reduces the space by storing minimizers [<xref ref-type="bibr" rid="CR11">11</xref>] instead of all the k-mers as in Kraken [<xref ref-type="bibr" rid="CR12">12</xref>]. Other approaches, such as MetaPhlAn [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] and CLARK [<xref ref-type="bibr" rid="CR15">15</xref>], build the database out of only a selected subset of sequences, i.e., marker genes or discriminative k-mers. Ganon [<xref ref-type="bibr" rid="CR16">16</xref>] and KMCP [<xref ref-type="bibr" rid="CR17">17</xref>] utilize probabilistic data structures that discard k-mer identity but support checking k-mer presence with false positive probability. While these strategies reduce the memory requirement, they lose valuable sequence information, which may lower accuracy when classifying read to lower taxonomic levels. We previously co-developed the taxonomic classification method Centrifuge [<xref ref-type="bibr" rid="CR18">18</xref>] that used the memory-efficient Burrows-Wheeler transformed (BWT) sequence [<xref ref-type="bibr" rid="CR19">19</xref>] and the Ferragina-Manzini (FM) index [<xref ref-type="bibr" rid="CR20">20</xref>]. Centrifuge searches for semi-maximal matches with no length constraints, avoiding the decreased taxonomic specificity of k-mers when the genome database is large [<xref ref-type="bibr" rid="CR21">21</xref>]. However, the FM-index grows linearly with the database size and the lossy compression strategy proposed in Centrifuge is not scalable, making Centrifuge less usable in the context of large and growing genome databases.</p>
    <p id="Par3">Related genomes share similar sequences, giving genome databases a degree of repetitiveness. Lempel–Ziv family indexes [<xref ref-type="bibr" rid="CR22">22</xref>], context-free grammars [<xref ref-type="bibr" rid="CR23">23</xref>], run-length compressed BWT indexes (RLBWT) [<xref ref-type="bibr" rid="CR24">24</xref>], and the move structure [<xref ref-type="bibr" rid="CR25">25</xref>] exploit this repetitiveness to reduce index size losslessly while supporting efficient search queries. For example, r-index [<xref ref-type="bibr" rid="CR26">26</xref>] builds upon the RLBWT and fits in O(<italic>r</italic>) words, where <italic>r</italic> is the number of runs in the BWT sequence. The FM-index, by contrast, usually requires O(<italic>n</italic>) words, where <italic>n</italic> is the size of the database and is also the length of the BWT sequence.</p>
    <p id="Par4">While O(<italic>r</italic>)-space methods achieve good compression for highly repetitive sequences such as collections of human genomes, microbial genomes are more diverse. Applying these compact representations may take more space than the uncompressed wavelet tree [<xref ref-type="bibr" rid="CR27">27</xref>]. Therefore, we designed two compact data structures, called run-block compressed BWT (RBBWT) and hybrid run-length compressed BWT, to effectively compress the BWT sequence for the intermediate level of repetitiveness characteristic of microbial genome databases. RBBWT achieved the best overall performance in both time and space efficiency when compared to other compression methods. Inspired by this observation, we developed the software tool Centrifuger (Centrifuge with RBBWT), which rapidly assigned the taxonomy IDs for a sequencing read while consuming half the memory of a conventional FM-index.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Method overview</title>
      <p id="Par5">Centrifuger assigns a taxonomic ID to each input read or read pair by searching against a losslessly compressed FM-index built from a microbial genome database (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, Methods). The FM-index contains two memory-consuming components, the data structure supporting rank queries over the BWT sequence, and the sampled suffix array. We propose a novel compact structure, the run-block compressed sequence, to reduce the size needed to store the BWT sequence. For the sampled suffix array, we save space by storing only the sequence ID for each sampled position on the BWT sequence, omitting information about the offset within the genome. The classification algorithm scans the read twice, once for the original sequence and once for the reverse-complement sequence. Each scan looks for semi-maximal matches, by repeatedly extending the match with the backward search until reaching a mismatch, then skipping the base immediately after the point where the backward search terminates. We call the match semi-maximal because only one end of the match cannot be extended further. For each match, Centrifuger retrieves the sequence IDs associated with entries in the matching BWT interval. Centrifuger adds a score, which is a quadratic function of the match length, for each retrieved sequence ID. After all the valid matches are processed, the highest-scoring taxonomy IDs translated from the sequence IDs are reported as the classification result. When the number of reported IDs exceeds the user-specified threshold (default report threshold 1), Centrifuger reduces the number to within the threshold by promoting some taxonomy IDs to their lowest common ancestors (LCAs) in the taxonomy tree. In other words, Centrifuger reports the LCA of the taxonomy IDs for a read by default, as in Kraken2.<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of Centrifuger. Left: classification procedure on the forward read. Centrifuger searches from the end of the read and applies the backward search to extend the match until reaching a mismatch. This yields the first 60-bp exact match hitting three sequences {X, Y, Z} in the database. Centrifuger then skips the mismatch and restarts the search again, giving the second 39-bp match hitting two sequences {X, Y}. The same search procedure applies to the reverse complement of the read. Centrifuger then scores each matched sequence and classifies the read to the sequences with the highest scores, where the example read is classified to the sequence X with the score 2601. Right: the structure of Centrifuger’s lossless compressed FM-index. Centrifuger utilizes the RBBWT representation for the BWT sequence. In the example of compressing the BWT sequence “AAAAACGTAAAA”, RBBWT represents it as two sequences “AA” and “ACGT” when the block size is 4. For the sequence IDs that are sampled on the BWT sequence, Centrifuger will compact their bits representation. In this example, there are four sequences in the database (W, X, Y, Z), so 2 bits are sufficient to represent the sequence ID. Therefore, for the substring of the BWT sequence shown in the example, Centrifuger spends 6 bits to represent sequence IDs that are sampled every other four positions on the BWT sequence</p></caption><graphic xlink:href="13059_2024_3244_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>The computational efficiency of run-block compression</title>
      <p id="Par6">Run-block compressed sequence is a novel compact data structure that achieves sublinear space usage both in theory (<inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left(\frac{n}{\sqrt{l}}log\sigma \right)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq1.gif"/></alternatives></inline-formula> bits. <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M4"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq2.gif"/></alternatives></inline-formula>: average run length, i.e., <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{r}$$\end{document}</tex-math><mml:math id="M6"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq3.gif"/></alternatives></inline-formula>; <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M8"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq4.gif"/></alternatives></inline-formula>: alphabet size) and practice. Centrifuger applies run-block compression to reduce the size of the BWT sequence, yielding the RBBWT: Run-Block compressed BWT. Rank queries on the RBBWT, which form the basis for LF-mapping in the backward search, are also highly efficient, having a time complexity of <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq5.gif"/></alternatives></inline-formula> (more information in the “<xref rid="Sec10" ref-type="sec">Methods</xref>” section).</p>
      <p id="Par7">We compared RBBWT with three other representations of BWT sequences: the standard wavelet tree, the RLBWT as implemented in the r-index package [<xref ref-type="bibr" rid="CR28">28</xref>] using sdsl library [<xref ref-type="bibr" rid="CR29">29</xref>], and the hybrid run-length compression (Methods). We measured the change in space usage when adding non-plasmid sequences from the species <italic>Escherichia fergusonii</italic> (taxonomy ID 564) to the structure. While the wavelet tree grew linearly as more genomes were added, RBBWT, RLBWT and its hybrid version grew more slowly (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">1</xref>A). When there was little repetitiveness in the genomes, RBBWT and hybrid run-length compression took almost the same amount of space as the wavelet tree. From another perspective, when the average run length of the BWT increased, the number of bits to represent a nucleotide in the wavelet tree remained constant (0.31 bits/bp in our implementation), and the other three compression methods needed fewer bits (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A). RBBWT consumed the least or similar space compared with the run-length-based compression methods when <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M12"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq6.gif"/></alternatives></inline-formula> was less than 10. When the BWT was constructed from all the genomes under taxonomy ID 564 with <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M14"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq7.gif"/></alternatives></inline-formula> equaling 18.8, RBBWT was still small, consuming 57.8% less space than the wavelet tree and 29.8% more space than RLBWT. We also compared the space usage of the BWT representations by adding the genomes from the species <italic>Chlamydia trachomatis</italic> (taxonomy ID 810) whose strains had highly similar sequences [<xref ref-type="bibr" rid="CR18">18</xref>]. Again, RBBWT was the most memory-efficient data structure when <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M16"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq8.gif"/></alternatives></inline-formula> was less than or around 10 (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">2</xref>A). For this species, <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M18"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq9.gif"/></alternatives></inline-formula> reached 56.0 after adding all the genomes, and RBBWT’s space was about a quarter of the uncompressed wavelet tree’s and twice as much as RLBWT’s in this case.<fig id="Fig2"><label>Fig. 2</label><caption><p>Computational efficiency of the wavelet tree, RLBWT, hybrid run-length compression, and RBBWT. <bold>A</bold> Bits used to represent one base pair (bp) as the average run length of the BWT sequence (<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n/r$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq10.gif"/></alternatives></inline-formula>) increases when representing increasingly more genomes with species ID 564 (<italic>Escherichia fergusonii</italic>). <bold>B</bold> Bits used to represent one bp when representing genomes with genus ID 445 (<italic>Legionella</italic>). <bold>C</bold> Rank query time</p></caption><graphic xlink:href="13059_2024_3244_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par8">We next compared the space usage when compressing the BWT sequence for genomes from the same genus. We examined the genus <italic>Legionella</italic> (taxonomy ID 445) containing 150 genomes. Since genomes from the same genus were more diverse than genomes from the same species, the final <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M22"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq11.gif"/></alternatives></inline-formula> was 7.1 after adding all the non-plasmid sequences. RBBWT consumed the least memory among the benchmarked compression methods, using 46.9%, 24.8%, and 2.3% less space than wavelet tree, RLBWT, and hybrid run-length compressed BWT, respectively, in the end (Fig. <xref rid="Fig2" ref-type="fig">2</xref>B and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">1</xref>B). A similar trend was observed when conducting the experiment on the genomes from the genus <italic>Chlamydia</italic> (taxonomy ID 810, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">2</xref>B). We further compared the speed of rank queries by averaging the time for finding the rank of ‘A’ for each of the first ten million positions in the BWT sequence of all the <italic>Legionella</italic>’s genomes, i.e., the average time of calling rank<sub>‘A’</sub>(1, BWT) to rank<sub>‘A’</sub>(10,000,000, BWT). Rank query in RBBWT was about five times faster than in RLBWT and only three times slower than using a wavelet tree (Fig. <xref rid="Fig2" ref-type="fig">2</xref>C). Hybrid run-length compression was the slowest method. In both the species ID 564 and the genus ID 445 analysis, the block size of RBBWT was automatically determined to be 8 (Methods) after adding all the genomes, supporting the mild repetitiveness in the microbial genome database. To summarize, RBBWT is more memory-efficient and supports faster rank queries compared to RLBWT when compressing microbial genomes.</p>
    </sec>
    <sec id="Sec5">
      <title>Performance on classifying simulated data</title>
      <p id="Par9">We compared Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP’s accuracy on one million 100-base-pair (bp) paired-end short reads simulated by Mason [<xref ref-type="bibr" rid="CR30">30</xref>] from 34,190 prokaryotic complete genomes (RefSeq bacteria + archaea). We set the sequencing error rate in Mason to be 1%, a value that was higher than the Illumina sequencing platform, to model the microbial genome variations in real data. All five methods built the database indices on the same set of genomes. The average run length of the BWT was about 6.8, and the block size of RBBWT was automatically determined to be 8. We used TP (true positive) for the number of reads that are correctly classified at the specified taxonomy node or in its subtree, T (true) for the number of input reads, and P (positive) for the number of reads that were correctly classified at the specified taxonomy level or below. Therefore, we define the sensitivity as <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{TP}{T}$$\end{document}</tex-math><mml:math id="M24"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">TP</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq12.gif"/></alternatives></inline-formula>, and precision as <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{TP}{P}$$\end{document}</tex-math><mml:math id="M26"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">TP</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq13.gif"/></alternatives></inline-formula>. The strain-level classification evaluation in each method was for the reads classified to leaf nodes in the taxonomy tree. On this simulated data set, Centrifuger achieved the best accuracy at all taxonomy levels and was significantly better than other methods at species and genus levels (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">1</xref>). For example, Centrifuger’s sensitivity was 34.5% higher than both Centrifuge and Kraken2, 20.0% higher than Ganon, and 116.0% higher than KMCP at the species level. All five classifiers had comparable precision except at the strain level. Centrifuge’s low sensitivity could be due to its policy of not resolving taxonomy IDs for matches hitting too many places in the database, where the threshold for the number of hits of a match was 40·report_threshold (default value of Centrifuge’s report threshold for the taxonomy IDs is 5). The strategy of handling matches on repetitive regions was one of the main differences between Centrifuger and Centrifuge during the classification stage (Methods). In addition to Mason, we compared the five classifiers on another set of one million 100-bp paired-end short reads simulated by ART [<xref ref-type="bibr" rid="CR31">31</xref>], where the error rate was set to ART’s default value (about 0.15%). All methods produced similar accuracy as the Mason-generated data. Centrifuger still achieved significantly higher sensitivity at the species and genus level while having comparable precision as the other methods (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">3</xref>). In both simulated data sets, the sensitivity at the strain level was very low (&lt; 25%) for all five methods, suggesting that most reads cannot be uniquely assigned to a strain in the RefSeq prokaryotic genome database.<fig id="Fig3"><label>Fig. 3</label><caption><p>Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data generated from June 2023 RefSeq prokaryotic genomes. <bold>A</bold> Sensitivity (left) and precision (right) of each classifier at various taxonomy ranks. <bold>B</bold> Peak memory usage of each classifier. <bold>C</bold> Classification speed of each classifier with a single thread</p></caption><graphic xlink:href="13059_2024_3244_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par10">We utilized the simulated data set generated by Mason to compare the classifiers’ computational efficiency. Centrifuger was the most memory-efficient method, classifying the reads against the 140 billion bp (GBp) database using 43 gigabytes (GB) of memory (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B). Methods like Kraken2, Ganon, and KMCP reduce the memory usage by discarding k-mer information. We also explored the space usage of succinct colored k-mer representations [<xref ref-type="bibr" rid="CR32">32</xref>], which can keep all the k-mer information along with their color (sequence ID) information. We created the index on these RefSeq prokaryotic genomes using Themisto v3.2.1 [<xref ref-type="bibr" rid="CR33">33</xref>], a pseudoalignment method based on the spectral BWT [<xref ref-type="bibr" rid="CR34">34</xref>], using a k-mer size of 31. Its index, without the color component, took 44 GB space (the.tdbg file), which was already more than Centrifuger’s 41-GB full index size. Since Themisto is not designed for taxonomic classification, we excluded it from other evaluations. Nevertheless, this observation suggests that succinct colored k-mer representations could be memory-efficient enough for read classifications against a large microbial genome database. For the classification speed, Kraken2 was the fastest method. Centrifuger and Centrifuge were also efficient and processed more than 100,000 read pairs per minute using a single thread (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C). Centrifuger was about three times slower than Centrifuge, reflecting the earlier observation that the rank query on RBBWT was three times slower than on an uncompressed data structure. Ganon and KMCP were the slowest methods in the evaluation; they were about 3.6 times and 5.3 times slower than Centrifuger, respectively.</p>
      <p id="Par11">We next evaluated each method’s performance on a simulated data set when true genomes were missing in the genome database. We created another index for each method on a trimmed database with 1,931 genomes, where we randomly selected one genome per genus. We then removed all reads originating from the selected genomes in the Mason-generated simulated data. This yielded a simulated data set with about 946K read pairs whose true origin was not in the database. On this trimmed database, Centrifuger, Centrifuge, and Kraken2 had similar accuracy, where they were more sensitive but less precise than Ganon and KMCP (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">4</xref>A). Due to the large discrepancies in sensitivity and precision among the five classifiers, we compared their F1 scores, defined as 2·(sensitivity*precision)/(sensitivity + precision). Centrifuger, Centrifuge, and Kraken2 achieved very similar F1 scores across the taxonomy ranks. Centrifuger’s F1 scores were 4.1–17.1% and 21.6–30.2% higher than Ganon’s and KMCP’s, respectively, ranging from the genus level to the phylum level (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">4</xref>B). Ganon outperformed other classifiers at the species level, with the F1 score 5.2% higher than Centrifuger’s. We observed that the Centrifuger and Centrifuge had almost identical performance on this trimmed database, suggesting that the difference in their performance on the full database was primarily due to the redundancy of the genomes.</p>
      <p id="Par12">In addition to the comparisons on our own simulated data sets, we also evaluated the accuracy of these five classifiers on 10 simulated short-read samples from the Critical Assessment of Metagenome Interpretation 2 (CAMI2) [<xref ref-type="bibr" rid="CR35">35</xref>] challenge datasets. Each sample has about 6.7 million 150-bp read pairs. Since the truth table from CAMI2 was mostly at the species level, we skipped the strain-level comparison. As in the previous simulated data evaluation, Centrifuger achieved significantly better classification results at species and genus levels than other methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>) and the highest F1 score across all the taxonomy ranks (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">5</xref>). For example, at the species level, the mean sensitivity of Centrifuger was 72.9% and 54.1% higher than Centrifuge’s and Kraken2’s, and the mean precision was 8.3% and 11.0% higher than Centrifuge’s and Kraken2’s, respectively. Centrifuger’s average sensitivity was 13.7% higher than Ganon’s while obtaining almost identical precision at the species level. Though Centrifuger’s average precision was 4.8% lower than KMCP’s at the species level, its sensitivity was 2.3 times higher than KMCP’s. We concatenated the 10 samples into a large data set containing about 67 million read pairs to compare the speed of the classifiers running with eight threads. Kraken2 was the fastest method (finished in about 7 min), followed by Centrifuge (42 min), Centrifuger (1 hour 35 min), and Ganon (3 hours 33 min). With multithreading, Centrifuger was about 2.3 times slower than Centrifuge, reducing the threefold speed difference when running on a single thread. KMCP did not scale well and took more than 18 hours to finish.<fig id="Fig4"><label>Fig. 4</label><caption><p>Sensitivity (top) and precision (bottom) of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP at various taxonomy ranks on the 10 simulated data sets from CAMI2</p></caption><graphic xlink:href="13059_2024_3244_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec6">
      <title>Performance on classifying bacterial whole-genome sequencing data</title>
      <p id="Par13">We next evaluated Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on real bacterial whole-genome sequencing (WGS) data using the same database indexes as the simulated data evaluation. The true taxonomy IDs for each WGS sample were extracted in corresponding SRA RunInfo entries. We considered two scenarios: one where the RefSeq database contained some genomes from the same species (species-in), and one where the database did not include any same-species genomes but did include some same-genus genomes (species-not-in). We collected 100 WGS samples for each scenario, and all the classifiers, except KMCP, successfully processed these samples. KMCP failed to finish SRR23033313 and SRR23885914 in the species-in scenario on our server due to its long running time. Sensitivity and precision were defined in the same way as the simulated data evaluations, and we focused on the accuracy at the species and genus levels for species-in and species-not-in scenarios, respectively. For the species-in scenario, Centrifuger achieved the highest average sensitivity and average precision. In particular, Centrifuger achieved 10.6%, 1.3%, 9.6%, and 101.9% higher average sensitivity, 5.8%, 18.6%, 1.7%, and 6.7% higher average precision than Centrifuge, Kraken2, Ganon, and KMCP, respectively (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A). When comparing with KMCP, we excluded the two samples that KMCP did not finish. For the species-not-in scenario, Centrifuger, Centrifuge, and Kraken2 had comparable sensitivity, Kraken2’s precision was 10.2% and 21.2% higher than Centrifuger and Centrifuge, respectively (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B). Though Ganon’s average precision was similar to Kraken2’s and was 11.1% higher than Centrifuger’s, its average sensitivity was 22.2% lower than Centrifuger’s. KMCP obtained the highest precision, with an average precision 23.1% higher than Centrifuger’s, but its average sensitivity was 40.6% lower than Centrifuger’s. We further examined the F1 score for each classifier. Kraken2 achieved the highest F1 score, closely followed by Centrifuger, and their F1 scores were consistently greater than Ganon’s and KMCP’s (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">6</xref>). Our analysis also showed that the species-not-in scenario had inferior accuracy compared with the species-in scenario, suggesting that having a comprehensive database may substantially improve classification results by reducing the species-not-in chance.<fig id="Fig5"><label>Fig. 5</label><caption><p>Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on bacterial WGS data sets. <bold>A</bold> Sensitivity (left) and precision (right) if species of bacteria are present in the database. <bold>B</bold> Sensitivity (left) and precision (right) if species of bacteria are not in the database but their genera are present in the database</p></caption><graphic xlink:href="13059_2024_3244_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Performance on classifying SARS-CoV-2 Oxford Nanopore WGS data</title>
      <p id="Par14">When a read can be uniquely classified to a sequence, Centrifuger reports the sequence ID in addition to the taxonomy ID, while many methods like Kraken2 provide only the taxonomy ID information. Centrifuger’s additional output is desirable for virus analysis. For example, SARS-CoV-2 variants’ genomes are all under the same taxonomy ID 2697049 in RefSeq and GenBank. To explore the effectiveness of sequence-level classification, we downloaded Oxford Nanopore (MinION) WGS data from two SARS-CoV-2 projects with NCBI BioProject accession numbers PRJNA673096 and PRJEB40277, where PRJNA673986 were samples from the USA and PRJEB40227 were samples from Ireland. For each project, we selected 100 samples with the greatest number of reads (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">2</xref>). Since RefSeq only had one SARS-CoV-2 sequence, we added the 92 SARS-CoV-2 sequences from GenBank and created indices comprising RefSeq human, prokaryotic, virus, and GenBank SARS-CoV-2 genomes for Centrifuger, Centrifuge, Kraken2, and Ganon, respectively. We also incorporate two long-read taxonomic classifiers: MetaMaps [<xref ref-type="bibr" rid="CR36">36</xref>] and Taxor [<xref ref-type="bibr" rid="CR37">37</xref>]. However, due to the large memory requirement for running MetaMaps and a different taxonomy structure when building the Taxor’s index, we tested these two methods with indices that only contained the 93 SARS-CoV-2 genomes. We added the parameter “--rel-cutoff 0.12 --rel-filter 0.9” to Ganon for long reads as mentioned by the experiments in Taxor. Centrifuger classified about 99.95% of all the input reads to the taxonomy ID 2697049 on average, while Kraken2 and Ganon were slightly less sensitive and classified 99.90% and 98.96% reads to the ID 2697049 on average, respectively. Centrifuge had a slightly different LCA search implementation, so it classified 98.90% of the reads to either ID 2697049 or ID 694009, where ID 694009 was the parent of ID 2697049 on the taxonomy tree. Despite using a SARS-CoV-2-only database, MetaMaps and Taxor only classified 78.04% and 70.91% reads on average, respectively. The lower sensitivity for MetaMaps was mainly due to its default setting of skipping reads shorter than 1000 bp, while it mapped almost all the remaining reads of sufficient length. When looking at the sequence-level classification, Centrifuger assigned 23.7% of the input reads with unique sequence IDs across all the samples. For the other tested methods, only Centrifuge, Ganon and Taxor reported sequence-level classifications, but they uniquely classified 15.1%, less than 0.1% and about 0.1% of the reads, respectively.</p>
      <p id="Par15">The large number of sequence-level classifications from Centrifuger allowed us to observe that the read fraction for each variant, namely sequence ID, in the Irish samples and US samples showed distinct patterns (Fig. <xref rid="Fig6" ref-type="fig">6</xref>A, heatmap with raw read fraction in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">7</xref>A). This observation was also supported by Centrifuge’s sequence-level classification results (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">7</xref>B). We further conducted a principal component analysis (PCA) based on each sequence’s read fraction, normalized by the number of reads with sequence IDs. Samples from the US and Ireland were well separated into two clusters (Fig. <xref rid="Fig6" ref-type="fig">6</xref>B) based on the first two principal components (PCs), suggesting that variants found in the two projects may have different sequence features. When inspecting the SAR-CoV-2 variant that contributed the most to the PC1 relative to the contribution to PC2, we found that variants detected in the Irish samples might have homologous regions to MT019531.1 while US samples did not (Fig. <xref rid="Fig6" ref-type="fig">6</xref>C). On the other hand, when checking PC2’s major contributors, the MT159706.2 variant was commonly detected in both projects, suggesting that PC1 captured the project-specific variants or batch effects.<fig id="Fig6"><label>Fig. 6</label><caption><p>Sequence-level classification for SARS-CoV-2 WGS samples with Centrifuger. <bold>A</bold> Fractions of reads hit on each SARS-CoV-2 variant. The rows are SARS-CoV-2 variants present in the RefSeq and GenBank, and the columns are the Oxford Nanopore WGS samples. The value for each row is standardized as <italic>z</italic>-scores. <bold>B</bold> PCA based on the read fraction for each variant. The numbers in the parenthesis are the variance fraction explained by each PC. <bold>C</bold> Left: histogram of read fractions classified to MT019531.1 which has the most significant contribution to PC1 relative to its PC2’s contribution; right: histogram of read fractions classified to MT159706.2 which has the most significant contribution to PC2 relative to its PC1’s contribution</p></caption><graphic xlink:href="13059_2024_3244_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par16">We conducted comprehensive benchmarks to demonstrate that the RBBWT can significantly reduce the memory usage of the FM-index built over a microbial genome database. For additional space savings, we store the sequence ID rather than the full coordinate information in the sampled suffix array, a strategy also used in Centrifuge. The space for the sampled sequence IDs is further trimmed by bit-compact representation, making it a less impactful factor in space usage. For example, in Centrifuger’s 41-GB index of RefSeq prokaryotic genomes, 23 GB was for the RBBWT and 17 GB was for the sampled sequence IDs. Nevertheless, the overall space complexity of Centrifuger is still O(<italic>n</italic>) words due to the structure of sampled sequence IDs, making it worse than r-index’s O(<italic>r</italic>) words in the future as the repetitiveness of the genome database may grow fast. Though users can select a sparser sampling rate to maintain the space usage, this is at the expense of time efficiency. For instance, the index size became 32 GB when increasing the sampling rate from the default 16 to 32, but the classification speed of a thread decreased from 163K read/min to 102K read/min. Future work is needed to design a representation of the sampled sequence ID in sublinear space without sacrificing classification speed for microbial genomes.</p>
    <p id="Par17">Resolving the sequence IDs for each match is a time-consuming step in Centrifuger, especially when a match hits many sequences. Centrifuger’s current implementation follows the traditional FM-index paradigm, by repeatedly applying the LF mapping for each hit until reaching a sampled sequence ID. Alternative techniques like the document array profile [<xref ref-type="bibr" rid="CR38">38</xref>] support rapid sequence ID retrieval, but are designed for highly repetitive genomes like human pangenome. Therefore, a memory-efficient algorithm for sequence ID resolving in microbial genomes is still needed. Since the default setting in Centrifuger is to report the LCA taxonomy ID for a read, algorithms like KATKA [<xref ref-type="bibr" rid="CR39">39</xref>] that directly find the LCA taxonomy ID for a k-mer might suggest ways to avoid the overhead of repeated LF mappings in Centrifuger as well.</p>
    <p id="Par18">The current Centrifuger index stores nucleotide-based sequences. The Kraken2 and Kaiju [<xref ref-type="bibr" rid="CR40">40</xref>] studies, however, observed that translated search, i.e., finding matches based on amino acids by translating nucleotides, could improve the classification accuracy for viral genomes. Since the wavelet tree data structure supports arbitrary alphabet sets, the RBBWT representation can be naturally extended to process amino acid sequences. RLBWT and RBBWT’s implementations are scalable for large alphabet set sizes, with a factor of <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{log}}\left(\sigma \right)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mtext>log</mml:mtext><mml:mfenced close=")" open="("><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq14.gif"/></alternatives></inline-formula> or the entropy in the space complexity. We found an alternative form of run-length encoded BWT, exported from ropeBWT2 [<xref ref-type="bibr" rid="CR41">41</xref>] (with -dRo option) as the Fermi’s [<xref ref-type="bibr" rid="CR42">42</xref>] format. RopeBWT2’s representation was 12.5% smaller than RLBWT on average with comparable rank query speed as RLBWT when compressing <italic>Escherichia fergusonii</italic>’s genomes. The slimmer size of ropeBWT2’s output might be attributed to its implementation being designed for small <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M30"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq15.gif"/></alternatives></inline-formula>, where its space complexity is linear to <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M32"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq16.gif"/></alternatives></inline-formula>. This may suggest that the efficiency of RBBWT and Centrifuger could be further improved for nucleotide search with tailored implementations that are less scalable for <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M34"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq17.gif"/></alternatives></inline-formula>.</p>
    <p id="Par19">Besides taxonomic classification, another important problem in metagenomic data analysis is taxonomic profiling, i.e., determining the abundance for each species or at user-specified taxonomic ranks. It is feasible to profile the abundances directly without taxonomic classification for reads, such as in Meta-Kallisto [<xref ref-type="bibr" rid="CR43">43</xref>] and Sylph [<xref ref-type="bibr" rid="CR44">44</xref>]. However, many profiling methods still require taxonomic classification results which can identify species of low abundance with few reads supporting them. For instance, Bracken uses Kraken2’s input for taxonomic profiling with a Bayesian method [<xref ref-type="bibr" rid="CR45">45</xref>]. Ganon, KMCP, and Taxor, which are benchmarked in this work, need to conduct taxonomic classifications before profiling. Centrifuge integrates the abundance estimation based on the Expectation–Maximization (EM) algorithm [<xref ref-type="bibr" rid="CR46">46</xref>] internally. After the release of Centrifuge, some methods, like AGAMEMNON [<xref ref-type="bibr" rid="CR47">47</xref>] and Centrifuge+ [<xref ref-type="bibr" rid="CR48">48</xref>], improve the profiling accuracy by adjusting the likelihood function and the EM algorithm procedure. We still need to systematically compare these profiling techniques and either integrate them into Centrifuger or make Centrifuger’s output compatible with these methods in the future. For example, Centrifuger provides the script to summarize the classification results into a Kraken-style report file that can serve as the input for Bracken.</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par20">Centrifuger is an efficient and accurate taxonomic classification method for processing sequencing data, including metagenomic sequencing data. Centrifuger adopts a novel compact data structure, run-block compressed sequence, to achieve sublinear storage space for BWT sequence without sacrificing much time efficiency. Specifically, Centrifuger can represent the 140 GBp Refseq prokaryotic genomes with an index of size 41 GB and classifies about 163K microbial reads every minute per thread. Furthermore, the lossless representation nature and the unconstrained pattern match length help Centrifuger achieve significantly better accuracy, in both sensitivity and precision, for classifications at the species or genus level. We expect that Centrifuger will contribute to microbiome studies by allowing the incorporation of the recent, more comprehensive microbial genome database. Centrifuger is a free open-source software released under the MIT license and is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link>.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>Sequencing data and benchmark details</title>
      <p id="Par21">We generated the simulated data from the current RefSeq database using Mason v0.1.2 [<xref ref-type="bibr" rid="CR30">30</xref>] with the option “illumina -pi 0 -pd 0 -pmms 2.5 -s 17 -N 2000000 -n 100 -mp -sq -hs 0 -hi 0 -i”, which simulated two million 100-bp read pairs with 1% error rate. We further filtered the reads from the sequences without taxonomy information and kept the first one million read pairs as the final simulated data set. We also obtained one million randomly selected 100-bp read pairs using the simulator ART v2.5.8 [<xref ref-type="bibr" rid="CR31">31</xref>] with Illumina profile setting (“art_illumina -ss HS25 -m 1000 -s 100 -l 100 -f 0.003”) followed by the same filtration procedure as was used for Mason. The error rate of Art-generated simulated data was estimated to be around 0.15% by examining the aln file produced by Art. In addition to our own simulated data, we downloaded the 10 simulated samples from the CAMI2 Challenge datasets at <ext-link ext-link-type="uri" xlink:href="https://frl.publisso.de/data/frl:6425521/strain/short_read/">https://frl.publisso.de/data/frl:6425521/strain/short_read/</ext-link> by lexicographical order, i.e. sample_0 to sample_9. For the bacteria WGS data, we first downloaded the RunInfo from NIH NCBI SRA using the search word “(“Bacteria”[Organism] OR “Bacteria Latreille et al. 1825”[Organism]) AND (“2022/01/01”[MDAT]: “2023/08/01”[MDAT]) AND (“biomol dna”[Properties] AND “strategy wgs”[Properties] AND “platform illumina”[Properties] AND “filetype fastq”[Properties])”. Then based on whether the species or genus is present in the RefSeq database, we randomly pick 100 SRA IDs (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">3</xref>), without repeating species or genus, for species-in and species-not-in evaluations, respectively.</p>
      <p id="Par22">We benchmarked the performance of Centrifuger v1.0.1, Centrifuge v1.0.4, and Kraken2 v2.1.3, Ganon v2.0.0, and KMCP 0.9.4 in this study. For the application on long-read data sets, we also tested MetaMap with GitHub commit ID 633d2e0 and Taxor v0.1.0. Taxonomy information and microbial genomes were downloaded using the “centrifuger-download” script in June 2023. Each classifier was used to build its own index on dustmasked [<xref ref-type="bibr" rid="CR49">49</xref>] genome sequences. Kraken2 used its own built-in masking module. Though we used Ganon v2.0.0 in evaluations, we failed to create the index with the hierarchical interleaved bloom filter data structure implemented in this version [<xref ref-type="bibr" rid="CR50">50</xref>]. Therefore, we used the index based on the interleaved bloom filter (--filter-type ibf) for Ganon, and we referred to this method as “Ganon” rather than Ganon2. The commands used to run each method are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">4</xref>. Methods like Centrifuge, Ganon, and KMCP might report multiple equally good taxonomy IDs for a read, and we merged them into LCAs before the evaluations. Ganon’s default option for coalescing the taxonomy IDs of a multiple-classified read is to reassign the read to the taxonomy ID with the highest abundance inferred by the EM algorithm using the initial classifications. This approach substantially improves Ganon’s classification sensitivity at lower taxonomy levels, leading to a higher F1 score. For example, in the Mason-generated simulated data, Ganon with reassignment’s F1 score at the species level was 1.3% and 12.1% higher than Centrifuger’s and Ganon using LCA’s, respectively (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">8</xref>). We implemented a similar workflow to reassign the multiple-classified reads from Centrifuger. Specifically, we ran Centrifuger with “-k 5” so that the initial classification for a read could include up to five equally good classification results. We then calculated the abundance for each taxonomy ID in the taxonomy tree based on the number of reads classified to this taxonomy node and its subtree. For a multiple-classified read, we included its count starting from its LCA. Lastly, we reassigned the taxonomy ID with the highest abundance among the initial results to a read as the final classification result. When there were multiple highest-abundance taxonomy IDs for a read, we took their LCA as the final result. We observed this reassignment strategy without the EM algorithm improved Centrifuger’s classification results at lower taxonomy levels too, with the F1 score 2.7% higher than Ganon’s reassignment results at the species level (Fig. S<xref rid="MOESM1" ref-type="media">8</xref>). However, the strategy of hard reassignment based on the taxonomic profiling result may result in systematic underestimations of taxa with lower abundances. Therefore, we continue to utilize the LCA strategy to process multiple classified reads, where the results can be directly used for downstream analyses, including taxonomic profiling.</p>
      <p id="Par23">All the benchmarks were conducted on the 2.8 GHz AMD EPYC 7543 32-core processor machine with 512 GB memory. The memory footprint was measured as the “Maximum resident set size” value from the “/usr/bin/time -v” command. When measuring speed, each classifier was run four times. The reported classification speed was calculated by taking the fastest runtime after excluding index loading time.</p>
    </sec>
    <sec id="Sec12">
      <title>Run-block compressed sequence</title>
      <p id="Par24">Run-block compressed sequence is a compact data structure supporting rank queries for any position in a sequence. For the input sequence <italic>T</italic> of length <italic>n</italic> and alphabet set <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M36"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq18.gif"/></alternatives></inline-formula> of size <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M38"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq19.gif"/></alternatives></inline-formula>, we first partition <italic>T</italic> into equal-size substrings (blocks), <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{1},{T}_{2},\dots ,{T}_{m}$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq20.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=\lceil \frac{n}{b}\rceil$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq21.gif"/></alternatives></inline-formula> and <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M44"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq22.gif"/></alternatives></inline-formula> is the block size. The first component of the run-block compressed sequence is a bit vector <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq23.gif"/></alternatives></inline-formula> of size <italic>m</italic> indicating whether the corresponding block is a run block, i.e., a block consisting of one alphabet character repeated <italic>b</italic> times. We will then split <italic>T</italic> into two substrings, by concatenating run blocks and non-run blocks, i.e., <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{R}^{\prime}}={T}_{{i}_{1}}{T}_{{i}_{2}}\dots {T}_{{i}_{l}}, {T}_{P}={T}_{{j}_{1}}{T}_{{j}_{2}}\dots {T}_{{j}_{m-l}}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq24.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{i}_{k}}$$\end{document}</tex-math><mml:math id="M50"><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq25.gif"/></alternatives></inline-formula> is the <italic>k-</italic>th run blocks in T with the alphabet <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\sigma }_{{i}_{k}}$$\end{document}</tex-math><mml:math id="M52"><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq26.gif"/></alternatives></inline-formula>. In the notation, we will use the subscript “R” to denote run-block compressed sequence, and “P” to represent the plain uncompressed sequence. Since the last block can still be determined as a run or non-run block even if it is shorter than <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M54"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq27.gif"/></alternatives></inline-formula>, we can assume that <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M56"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq28.gif"/></alternatives></inline-formula> is divisible by <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M58"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq29.gif"/></alternatives></inline-formula> for simplicity. <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{R}^{\prime}}$$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq30.gif"/></alternatives></inline-formula> can be losslessly represented as <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}={\sigma }_{{i}_{1}}{\sigma }_{{i}_{2}}\dots {\sigma }_{{i}_{l}}$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq31.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left|{T}_{R}\right|=\frac{|{T}_{{R}^{\prime}}|}{b}$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mfenced close="|" open="|"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq32.gif"/></alternatives></inline-formula>. The space saving comes from using one character to represent a run block of size <italic>b</italic>, a strategy we call run-block compression. For example, for a sequence <italic>T</italic> = “AAAAACGTAAAA”, when <italic>b</italic> = 4, it will be split into “AAAAAAAA” and “ACGT” guided by <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}=101$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>101</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq33.gif"/></alternatives></inline-formula>. For the subsequence formed by the run blocks, we will use one character to represent each block in it. Therefore, the example sequence <italic>T</italic> will be represented by two sequences <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq34.gif"/></alternatives></inline-formula>=“AA” and <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq35.gif"/></alternatives></inline-formula>=“ACGT”, reducing the original length from 12 to 6 characters (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). We next show that run-block compression allows fast rank queries and sublinear space usage as the repetitiveness in the sequence increases. The rank query is the core operation in LF mapping during the backward search in FM-index.</p>
      <p id="Par25"><bold>Theorem 1 </bold><italic>The time complexity for rank query on run-block compressed sequence is</italic><inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq36.gif"/></alternatives></inline-formula>.</p>
      <p id="Par26"><italic>Proof</italic>: We will use the function <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq37.gif"/></alternatives></inline-formula> to denote the rank for the alphabet <italic>c</italic> at position <italic>i</italic> of text <italic>T</italic>, where the index is 1-based. Equivalently, <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq38.gif"/></alternatives></inline-formula> counts the number of <italic>c</italic>’s that occur before <italic>T</italic>[<italic>i</italic>], including <italic>T</italic>[<italic>i</italic>]. We can decompose the <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq39.gif"/></alternatives></inline-formula> to the sum of corresponding ranks with respect to <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M80"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq40.gif"/></alternatives></inline-formula> and <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq41.gif"/></alternatives></inline-formula>. There are two cases, depending on whether <italic>i</italic> is in a run block or not. Let <italic>k</italic> denote the block containing <italic>i</italic>, namely <inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=\lceil\frac{i}{b}\rceil$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq42.gif"/></alternatives></inline-formula>. We compute the number of run blocks and non-run blocks before the block containing <italic>k</italic> as <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${r}_{r}={rank}_{1}\left(k,{B}_{R}\right), \mathrm{and}\space\overline{{r }_{r}}={rank}_{0}\left(k,{B}_{R}\right)=k-{r}_{r}$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>,</mml:mo><mml:mi mathvariant="normal">and</mml:mi><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq43.gif"/></alternatives></inline-formula>, respectively. The <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{1}\left(k,{B}_{R}\right)$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq44.gif"/></alternatives></inline-formula> is the conventional rank query on bit vectors counting the number of 1 s before or on position <italic>k</italic> in <italic>B</italic><sub><italic>R</italic></sub>. With these notations, we can write the equations to compute <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq45.gif"/></alternatives></inline-formula>.</p>
      <p id="Par27">When <italic>i</italic> is in a run block, i.e., <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}[k]=1$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq46.gif"/></alternatives></inline-formula>, we have:<disp-formula id="Equa"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}\left(i, T\right)=b\left({rank}_{c}\left({r}_{r},{T}_{R}\right)\right)+{rank}_{c}\left(\overline{{r }_{r}}b, {T}_{P}\right)+{I}_{{T}_{R}\left[{r}_{r}\right]=c}\left(\left(i-1\right)\%b+1-b\right)$$\end{document}</tex-math><mml:math id="M94" display="block"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced><mml:mo>%</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>b</mml:mi></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par28">Where <inline-formula id="IEq47"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq47.gif"/></alternatives></inline-formula> is an indicator that equals 1 if the subscript is true and equals to 0 otherwise. The last term is the special treatment if<italic> i</italic> is in a run block with alphabet character <italic>c</italic>. When <italic>i</italic> is in a non-run block, we have:<disp-formula id="Equb"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}\left(i, T\right)=b\left({rank}_{c}\left({r}_{r},{T}_{R}\right)\right)+{rank}_{c}\left(\left(\overline{{r }_{r}}-1\right)b+(i-1)\%b+1, {T}_{P}\right)$$\end{document}</tex-math><mml:math id="M98" display="block"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>%</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par29">If we apply the wavelet tree to represent <inline-formula id="IEq48"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M100"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq48.gif"/></alternatives></inline-formula> and <inline-formula id="IEq49"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M102"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq49.gif"/></alternatives></inline-formula>, then <inline-formula id="IEq50"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq50.gif"/></alternatives></inline-formula> can be answered by at most two wavelet tree rank queries, one rank query on bit vector <inline-formula id="IEq51"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{r}$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>B</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq51.gif"/></alternatives></inline-formula>, and one wavelet tree access on <inline-formula id="IEq52"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M108"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq52.gif"/></alternatives></inline-formula>. Therefore, the total time complexity is <inline-formula id="IEq53"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3O(log\sigma )+O\left(1\right)=O(log\sigma )$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mn>3</mml:mn><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq53.gif"/></alternatives></inline-formula>.</p>
      <p id="Par30">The naïve implementation for calculating <inline-formula id="IEq54"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M112"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq54.gif"/></alternatives></inline-formula> is to access the value of <inline-formula id="IEq55"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}\left[{r}_{r}\right]$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq55.gif"/></alternatives></inline-formula>, requiring <inline-formula id="IEq56"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq56.gif"/></alternatives></inline-formula> time if using wavelet tree. We note that the <inline-formula id="IEq57"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq57.gif"/></alternatives></inline-formula> can also be inferred during the wavelet tree’s rank query on <inline-formula id="IEq58"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq58.gif"/></alternatives></inline-formula>, by checking whether the bits labeling the relevant root-to-leaf path form the bit representation for c. This strategy further accelerates the <inline-formula id="IEq59"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq59.gif"/></alternatives></inline-formula> operation, and is also applicable to other compressed sequence representations, including RLBWT.</p>
      <p id="Par31"><bold>Theorem 2 </bold><italic>The space complexity of run-block compressed sequence is</italic><inline-formula id="IEq60"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(\frac{n}{\sqrt{l}}{\text{log}}\sigma )$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq60.gif"/></alternatives></inline-formula><italic>bits, where</italic><inline-formula id="IEq61"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l=\frac{n}{r}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq61.gif"/></alternatives></inline-formula><italic>is the average run length and r is the number of runs in the sequence</italic>.</p>
      <p id="Par32"><italic>Proof</italic>: The key observation is that each non-run block contains at least one run head. Therefore, we have at most<italic> r</italic> non-run blocks. As a result, the minimum length of <inline-formula id="IEq62"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M128"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq62.gif"/></alternatives></inline-formula> is <inline-formula id="IEq63"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}-r$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq63.gif"/></alternatives></inline-formula>, and the maximum length of <inline-formula id="IEq64"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq64.gif"/></alternatives></inline-formula> is <inline-formula id="IEq65"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$rb$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mi mathvariant="italic">rb</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq65.gif"/></alternatives></inline-formula>. The length of the <inline-formula id="IEq66"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq66.gif"/></alternatives></inline-formula> is <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}$$\end{document}</tex-math><mml:math id="M138"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq67.gif"/></alternatives></inline-formula>.</p>
      <p id="Par33">We can use wavelet trees to represent the run-block subsequence and the plain subsequence. Let <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A$$\end{document}</tex-math><mml:math id="M140"><mml:mi>A</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq68.gif"/></alternatives></inline-formula> be the number of bits to represent one character in the wavelet tree, then the asymptotic total space usage in bits is <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}+A\left(\frac{n}{b}-r\right)+Arb$$\end{document}</tex-math><mml:math id="M142"><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>r</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq69.gif"/></alternatives></inline-formula>, where the terms are for <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M144"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq70.gif"/></alternatives></inline-formula>, <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M146"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq71.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq72.gif"/></alternatives></inline-formula>, respectively. We can rewrite the space usage bound as:<disp-formula id="Equc"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(b)=Arb+\frac{1+An}{b}-Ar,$$\end{document}</tex-math><mml:math id="M150" display="block"><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equc.gif" position="anchor"/></alternatives></disp-formula>which is minimized when <inline-formula id="IEq73"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b=\sqrt{\frac{1+An}{Ar}}$$\end{document}</tex-math><mml:math id="M152"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq73.gif"/></alternatives></inline-formula>. Because <italic>b</italic> is an integer, we take the block size as <inline-formula id="IEq74"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}=\lceil\sqrt{\frac{1+An}{Ar}}\rceil$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq74.gif"/></alternatives></inline-formula>. Substituting this for <inline-formula id="IEq75"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M156"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq75.gif"/></alternatives></inline-formula>, we have:<disp-formula id="Equd"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left({b}^{*}\right)=Ar\lceil\sqrt{\frac{1+An}{Ar}}\rceil+\frac{1+An}{\lceil\sqrt{\frac{1+An}{Ar}}\rceil}-Ar&lt;\sqrt{Ar\left(1+An\right)}+\sqrt{Ar\left(1+An\right)}=O\left(A\sqrt{nr}\right),$$\end{document}</tex-math><mml:math id="M158" display="block"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:msqrt><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mfenced></mml:mrow></mml:msqrt><mml:mo>+</mml:mo><mml:msqrt><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mfenced></mml:mrow></mml:msqrt><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mi>A</mml:mi><mml:msqrt><mml:mrow><mml:mi mathvariant="italic">nr</mml:mi></mml:mrow></mml:msqrt></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equd.gif" position="anchor"/></alternatives></disp-formula>where the inequality is based on<inline-formula id="IEq76"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sqrt{\frac{1+An}{Ar}}\le \lceil\sqrt{\frac{1+An}{Ar}}\rceil&lt;\sqrt{\frac{1+An}{Ar}}+1$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>≤</mml:mo><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq76.gif"/></alternatives></inline-formula>. We can rewrite <inline-formula id="IEq77"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left({b}^{*}\right)$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq77.gif"/></alternatives></inline-formula> by using the definition of <inline-formula id="IEq78"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r=\frac{n}{l}$$\end{document}</tex-math><mml:math id="M164"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq78.gif"/></alternatives></inline-formula>, obtaining <inline-formula id="IEq79"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S({b}^{*})=O\left(A\frac{n}{\sqrt{l}} \right).$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mi>A</mml:mi><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq79.gif"/></alternatives></inline-formula> To ensure the worst rank query time on the data structure is small, the wavelet tree is in the shape of a balanced binary tree in our implementation, and <inline-formula id="IEq80"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A=O({\text{log}}\sigma )$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq80.gif"/></alternatives></inline-formula>. Further space could be reduced if we use techniques like Huffman-shaped wavelet tree [<xref ref-type="bibr" rid="CR51">51</xref>], and <italic>A</italic> will be <inline-formula id="IEq81"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({H}_{0}\left({T}_{R}\right)\right)$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq81.gif"/></alternatives></inline-formula> and <inline-formula id="IEq82"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({H}_{0}\left({T}_{P}\right)\right)$$\end{document}</tex-math><mml:math id="M172"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq82.gif"/></alternatives></inline-formula> for <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, respectively, where <italic>H</italic><sub>0</sub> is the Shannon entropy of the sequence.</p>
      <p id="Par34">The <inline-formula id="IEq83"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M174"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq83.gif"/></alternatives></inline-formula> found in the proof is to bound the worst-case space usage, where each non-run block has exactly one run head in the middle. The optimal block size can be different. For example, when every run has an identical length, the optimal block size is <inline-formula id="IEq84"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{r}$$\end{document}</tex-math><mml:math id="M176"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq84.gif"/></alternatives></inline-formula> and every block is run-block compressible, yielding <inline-formula id="IEq85"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left(\frac{n}{l}{\text{log}}\sigma \right)$$\end{document}</tex-math><mml:math id="M178"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mfrac><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq85.gif"/></alternatives></inline-formula>-bit space complexity. To find the appropriate block size efficiently, we search the size of powers of 2, e.g., 4, 8, 16,.., and select the block size <inline-formula id="IEq86"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{b}$$\end{document}</tex-math><mml:math id="M180"><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq86.gif"/></alternatives></inline-formula> with the least space usage among them. Suppose <inline-formula id="IEq87"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\widehat{b}}^{\prime}$$\end{document}</tex-math><mml:math id="M182"><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq87.gif"/></alternatives></inline-formula> is the smallest power of 2 that is larger or equal to the block size <inline-formula id="IEq88"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M184"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq88.gif"/></alternatives></inline-formula> defined in the proof, then we have <inline-formula id="IEq89"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{b}^{*}\le \widehat{b}}^{\prime}\le 2{b}^{*}$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:msup><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq89.gif"/></alternatives></inline-formula>. Therefore, <inline-formula id="IEq90"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left(\widehat{b}\right)\le S\left({\widehat{b}}^{\prime}\right)\le 2Ar{b}^{*}+\frac{1+An}{{b}^{*}}-Ar\le 2S\left({b}^{*}\right)+Ar=O\left(\frac{An}{ \sqrt{l}}\right)$$\end{document}</tex-math><mml:math id="M188"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mfenced><mml:mo>≤</mml:mo><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mfenced><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">An</mml:mi></mml:mrow><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq90.gif"/></alternatives></inline-formula>, where the second inequality is by applying <inline-formula id="IEq91"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}\le \widehat{b}^{\prime}\le 2{b}^{*}$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq91.gif"/></alternatives></inline-formula>. Therefore, the block size inferred from inspecting powers of 2 is not a bad estimator and gives the same asymptotic space usage as <inline-formula id="IEq92"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M192"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq92.gif"/></alternatives></inline-formula> in the worst case. Furthermore, since <inline-formula id="IEq93"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Ar\le A\sqrt{nr}&lt;S({b}^{*})$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mi>A</mml:mi><mml:msqrt><mml:mrow><mml:mi mathvariant="italic">nr</mml:mi></mml:mrow></mml:msqrt><mml:mo>&lt;</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq93.gif"/></alternatives></inline-formula>, <inline-formula id="IEq94"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left(\widehat{b}\right)$$\end{document}</tex-math><mml:math id="M196"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq94.gif"/></alternatives></inline-formula> is no more than three times of the <inline-formula id="IEq95"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S({b}^{*})$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq95.gif"/></alternatives></inline-formula>. To reduce the bias of the sparse search space, we also inspect the space usage of block sizes <inline-formula id="IEq96"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M200"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq96.gif"/></alternatives></inline-formula> and <inline-formula id="IEq97"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{3\widehat{b}}{2}$$\end{document}</tex-math><mml:math id="M202"><mml:mfrac><mml:mrow><mml:mn>3</mml:mn><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq97.gif"/></alternatives></inline-formula> before making a final decision. When <inline-formula id="IEq98"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M204"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq98.gif"/></alternatives></inline-formula> is small, the block size minimizing the overall space usage is the length of the genome (<italic>T</italic><sub><italic>P</italic></sub> = <italic>T</italic>), and run-block compression is equivalent to the wavelet tree representation. In practice, Centrifuger uses the first one million characters of the BWT sequence instead of the full sequence to infer the block size.</p>
    </sec>
    <sec id="Sec14">
      <title>Index construction</title>
      <p id="Par35">Centrifuger uses the blockwise suffix sorting algorithm [<xref ref-type="bibr" rid="CR52">52</xref>] to build its index, as in Bowtie [<xref ref-type="bibr" rid="CR53">53</xref>] and Centrifuge. The advantage of blockwise suffix sorting is to control the overall memory footprint and parallelize the construction procedure. The array that holds the BWT sequence is pre-allocated, and the sequence is filled in block-by-block as blocks of the suffix array are constructed. Another important component in the FM-index is the sampled suffix information. During construction, the index stores the genome coordinate information for every 16th offset on the BWT, which can be adjusted by the user. After that, the offsets are transformed into sequence IDs and using a bit-efficient representation of the IDs. For example, the RefSeq prokaryotic genome database contained 75,865 sequences (including plasmids) from 34,190 strains with complete genomes, so sequence IDs can be distinguished by a 17-bit integer. Instead of saving the IDs in an array of 32-bit integers, the bit patterns are stored consecutively without any wasted space. Therefore, the total size for the bit-compact array for the sampled ID list is 17·<italic>m</italic> bits, or 0.26·<italic>m</italic> 64-bit words, where <italic>m</italic> is the number of sampled IDs.</p>
    </sec>
    <sec id="Sec15">
      <title>Taxonomic classification</title>
      <p id="Par36">For taxonomic classification, Centrifuger follows Centrifuge’s paradigm by greedily searching for semi-maximal exact matches, where only one side of a match cannot be extended to form a longer match to the database (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). For each read pair, Centrifuger searches the matches twice, one using the forward strand and the other using the reverse-complement strand. Using the forward strand search as an example, Centrifuger starts from the last position of the read and extends the match backward as much as possible using LF mapping until the match cannot hit any sequence in the index. In the example in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the first match is the right-most 60 bp. Centrifuger will then skip the next base on the read, as a putative variant or sequencing error, and start a new search. As a result, the next search starts from the 62nd bp, counting from the right end, and finds a match of length 39.</p>
      <p id="Par37">To find the best taxonomy ID for the read, Centrifuger scores the sequence IDs retrieved from the matches. Let <inline-formula id="IEq99"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}_{M}$$\end{document}</tex-math><mml:math id="M206"><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq99.gif"/></alternatives></inline-formula> denote the length of a match <inline-formula id="IEq100"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M208"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq100.gif"/></alternatives></inline-formula>. Centrifuger will filter a short match <inline-formula id="IEq101"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M210"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq101.gif"/></alternatives></inline-formula> if <inline-formula id="IEq102"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2n/{4}^{{l}_{M}}&gt;0.01$$\end{document}</tex-math><mml:math id="M212"><mml:mrow><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup><mml:mo>&gt;</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq102.gif"/></alternatives></inline-formula>, as it is likely a random match. For example, we kept the matches with lengths greater or equal to 23 as valid matches when classifying reads using the 140 GBp RefSeq prokaryotic database. Each valid match <inline-formula id="IEq103"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M214"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq103.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq104"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}_{M}$$\end{document}</tex-math><mml:math id="M216"><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq104.gif"/></alternatives></inline-formula> will contribute a score <inline-formula id="IEq105"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\left({l}_{M}-15\right)}^{2}$$\end{document}</tex-math><mml:math id="M218"><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq105.gif"/></alternatives></inline-formula> to the corresponding strand, and the matches from the less-scored strand will be removed. Centrifuger resolves sequence IDs contained in each valid match by using LF-mapping in the compressed FM-index to find sampled sequence IDs. Specifically, each match <inline-formula id="IEq106"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M220"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq106.gif"/></alternatives></inline-formula> corresponds to an interval on the BWT sequence, denoted as <inline-formula id="IEq107"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M222"><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq107.gif"/></alternatives></inline-formula>, then we will resolve the sequence ID for each position on the BWT sequence between <inline-formula id="IEq108"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M224"><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq108.gif"/></alternatives></inline-formula>, by applying LF-mapping. The LF-mapping procedure for resolving the position <inline-formula id="IEq109"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p\in \left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M226"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq109.gif"/></alternatives></inline-formula>, terminates when it reaches a position <inline-formula id="IEq110"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}$$\end{document}</tex-math><mml:math id="M228"><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq110.gif"/></alternatives></inline-formula> on the BWT sequence with a sampled sequence ID, i.e., <inline-formula id="IEq111"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}\space mod\space 16=0$$\end{document}</tex-math><mml:math id="M230"><mml:mrow><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mn>16</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq111.gif"/></alternatives></inline-formula> with the default parameter. The sampled sequence ID at <inline-formula id="IEq112"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}$$\end{document}</tex-math><mml:math id="M232"><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq112.gif"/></alternatives></inline-formula> is the sequence ID corresponding to <inline-formula id="IEq113"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M234"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq113.gif"/></alternatives></inline-formula>. In the example of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the Centrifuger found the first 60-bp exact match <inline-formula id="IEq114"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${M}_{1}$$\end{document}</tex-math><mml:math id="M236"><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq114.gif"/></alternatives></inline-formula> hit sequences with IDs X, Y, and Z, and the second 39-bp exact match <inline-formula id="IEq115"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${M}_{2}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq115.gif"/></alternatives></inline-formula> were from sequence IDs W and X. If both strands have an equal score, the sequence ID will be resolved for both strands. For each resolved sequence ID, Centrifuger will sum up its scores across the matches using the formula <inline-formula id="IEq116"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{score}}\left({\text{sequence}}\space I\right)={\sum }_{M\in {\text{sqeuence}}\space I}{\left({l}_{M}-15\right)}^{2}$$\end{document}</tex-math><mml:math id="M240"><mml:mrow><mml:mtext>score</mml:mtext><mml:mfenced close=")" open="("><mml:mtext>sequence</mml:mtext><mml:mi>I</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mtext>sqeuence</mml:mtext><mml:mi>I</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq116.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq117"><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M\in {\text{sequence}\space} I$$\end{document}</tex-math><mml:math id="M242"><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mtext>sequence</mml:mtext><mml:mi>I</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq117.gif"/></alternatives></inline-formula> means the match <inline-formula id="IEq118"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M244"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq118.gif"/></alternatives></inline-formula> is found in the sequence with ID <inline-formula id="IEq119"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I$$\end{document}</tex-math><mml:math id="M246"><mml:mi>I</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq119.gif"/></alternatives></inline-formula>. In the example of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the score for sequence ID X is <inline-formula id="IEq120"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\left(60-15\right)}^{2}+{\left(39-15\right)}^{2}=2601$$\end{document}</tex-math><mml:math id="M248"><mml:mrow><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mn>60</mml:mn><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mn>39</mml:mn><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>2601</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq120.gif"/></alternatives></inline-formula> as both matches hit this sequence. This scoring function was empirical and was designed during the development of Centrifuge. The sequence IDs with the highest score and their corresponding taxonomy IDs will be reported as the final classification result for the read, where the example read in Fig. <xref rid="Fig1" ref-type="fig">1</xref> is classified to the sequence X. When the number of highest-scoring sequence IDs is more than the report threshold that can be specified by the user (default 1), Centrifuger will merge the IDs to their LCAs in the taxonomy tree until the number is within the threshold.</p>
      <p id="Par38">For a match that hits many sequences in the database, i.e., <inline-formula id="IEq121"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}-{s}_{M}+1$$\end{document}</tex-math><mml:math id="M250"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq121.gif"/></alternatives></inline-formula> is large, Centrifuger will resolve the sequence IDs for at most 40·report_threshold entries evenly distributed in the BWT interval. For example, if <inline-formula id="IEq122"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${s}_{M}=100$$\end{document}</tex-math><mml:math id="M252"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq122.gif"/></alternatives></inline-formula> and <inline-formula id="IEq123"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}=490$$\end{document}</tex-math><mml:math id="M254"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>490</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq123.gif"/></alternatives></inline-formula>, then Centirufger will resolve the 40 sequence IDs for positions at 100, 110, 120,.., 480, and 490 on the BWT sequence with the default setting. Though this is a heuristic that can cause the algorithm to miss the true genome of origin, it is likely to generate scores for sequences in the same phylogeny branch and may help identify the correct taxonomy IDs at higher levels. This is the main difference between Centrifuge and Centrifuger in the classification stage, where Centrifuge ignores a match <inline-formula id="IEq124"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M256"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq124.gif"/></alternatives></inline-formula> if <inline-formula id="IEq125"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}-{s}_{M}+1 &gt;200$$\end{document}</tex-math><mml:math id="M258"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq125.gif"/></alternatives></inline-formula> with the default setting.</p>
    </sec>
    <sec id="Sec16">
      <title>Hybrid run-length compression</title>
      <p id="Par39">In addition to the run-block compression, we designed another compression scheme called hybrid run-length compression, using run-length compression for each fixed-size block. Hybrid run-length compressed BWT uses the same amount of space as the wavelet tree representation when the repetitiveness of the sequence is low, and its space usage converges to the RLBWTs when the repetitiveness grows. In our implementation, a block is marked as run-length compressible (<italic>B</italic><sub><italic>R</italic></sub> = 1) if its average run-length is more than six based on the comparison between RLBWT and wavelet tree (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A, <xref rid="Fig2" ref-type="fig">B</xref>). The substrings from blocks are separated into two subsequences based on <italic>B</italic><sub><italic>R</italic></sub>, and the subsequences will be concatenated into two sequences, <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, respectively. <italic>T</italic><sub><italic>R</italic></sub> will be compressed by the run-length method as in RLBWT, and <italic>T</italic><sub><italic>P</italic></sub> will be represented as a wavelet tree. The block size is inferred in the same fashion as in RBBWT. The rank query on the hybrid run-length compressed sequence is like the run-block compression, where we combine the ranks from <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, making it slower than the rank query on RLBWT. The idea of hybrid run-length compression is similar to the wavelet tree when using fixed-block boosting [<xref ref-type="bibr" rid="CR54">54</xref>]. Our implementation avoids explicitly recording the accumulated count at the beginning of a block and is therefore well suited to mildly repetitive sequences needing small blocks. For example, the block size of the hybrid run-length compressed BWT was only 12 for the genus <italic>Legionella</italic>’s genomes. Despite being less computationally efficient than other representations, the hybrid run-length compressed BWT is flexible and allows methods to handle various texts with a wide range of repetitiveness without altering the underlying data structure.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec17">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2024_3244_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1</bold>: Table S1. The classification accuracy at various taxonomy ranks in the Mason-generated simulated data Table S2. SRA IDs of the samples used in the SARS-CoV-2 sequence-level classification analysis. Table S3. SRA IDs of the samples used in the bacterial WGS classification evaluations. Table S4. Running commands for the classifiers used in the evaluations. Fig. S1. Space usage of the wavelet tree, RLBWT, hybrid run-length compression and RBBWT when adding genomes with the species <italic>Escherichia fergusonii</italic> (taxonomy ID 564) and the genus <italic>Legionella</italic> (taxonomy ID 445) Fig. S2. Space usage of the wavelet tree, RLBWT, hybrid run-length compression and RBBWT when adding genomes with species <italic>Chalmydia trachomatis</italic> (taxonomy ID 813) and the genus <italic>Chalmydia</italic> (taxonomy ID 810). Fig. S3. Sensitivity and precision of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data generated from June 2023 RefSeq prokaryotic genomes using ART. Fig. S4. Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data when classifying against a trimmed database that has one genome per genus and does not contain the true origins of the reads. Fig. S5. F1 scores of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP at various taxonomy ranks on the 10 simulated data sets from CAMI2. Fig. S6. F1 scores of Centrifuger, Centrifuge, Kraken2, Ganon and KMCP on bacterial WGS data sets, where the species of the bacteria are not in the database but their genera are present in the database. Fig. S7. Cluster heatmaps for read fractions in the SARS-CoV-2 sequence-level analysis. Fig. S8. Sensitivity, precision and F1 score of Centrifuger and Ganon using LCA and reassignment based on taxa quantification at various taxonomy levels.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2024_3244_MOESM2_ESM.pdf">
            <caption>
              <p><bold>Additional</bold><bold>file 2</bold>. Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’ s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Dr. Daehwan Kim and Dr. Florian Breitwieser for the foundation work in Centrifuge. We also thank Dr. Heng Li and Dr. Shannon Soucy for many helpful discussions.</p>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par40">Feng Gao and Kevin Pang were the primary editors of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par41">The review history is available as Additional file <xref rid="MOESM2" ref-type="media">2</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors<italic>’</italic> contributions</title>
    <p> L.S. conceived the project. L.S. and B.L. designed the algorithm. L.S. implemented and evaluated the software. L.S. and B.L. wrote the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work is supported by the NIH grants P20GM130454 (Dartmouth), 3P20GM130454-05WS (Dartmouth), R01HG011392 (B.L.), and R35GM139602 (B.L.).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The source code of Centrifuger is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link> [<xref ref-type="bibr" rid="CR55">55</xref>]. The source code of the version Centrifuger v1.0.1 used in this study is also available at Zenodo 10.5281/zenodo.10938378 [<xref ref-type="bibr" rid="CR56">56</xref>]. The code for the evaluations and experiments is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger_evaluations">https://github.com/mourisl/centrifuger_evaluations</ext-link> [<xref ref-type="bibr" rid="CR57">57</xref>]. The NCBI SRA accession numbers of the WGS data sets are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">2</xref> and Table S<xref rid="MOESM1" ref-type="media">3</xref>. The index for the RefSeq prokaryotic, human, virus, and GenBank SARS-CoV-2 variants is available at Zenodo 10.5281/zenodo.10023239.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par42">Not applicable.</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par43">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tringe</surname>
            <given-names>SG</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>EM</given-names>
          </name>
        </person-group>
        <article-title>Metagenomics: DNA sequencing of environmental samples</article-title>
        <source>Nat Rev Genet</source>
        <year>2005</year>
        <volume>6</volume>
        <fpage>805</fpage>
        <lpage>814</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg1709</pub-id>
        <?supplied-pmid 16304596?>
        <pub-id pub-id-type="pmid">16304596</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Zhang L, Chen F, Zeng Z, Xu M, Sun F, Yang L, et al. Advances in Metagenomics and Its Application in Environmental Microorganisms. Frontiers in Microbiology. 2021;12. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fmicb.2021.766364">https://www.frontiersin.org/articles/10.3389/fmicb.2021.766364</ext-link>. Cited 2023 Oct 13</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiu</surname>
            <given-names>CY</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>SA</given-names>
          </name>
        </person-group>
        <article-title>Clinical metagenomics</article-title>
        <source>Nat Rev Genet</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>341</fpage>
        <lpage>355</lpage>
        <pub-id pub-id-type="doi">10.1038/s41576-019-0113-7</pub-id>
        <?supplied-pmid 30918369?>
        <pub-id pub-id-type="pmid">30918369</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>De Filippis</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Paparo</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Nocerino</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Della Gatta</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Carucci</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Russo</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Specific gut microbiome signatures and the associated pro-inflamatory functions are linked to pediatric allergy and acquisition of immune tolerance</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <volume>12</volume>
        <fpage>5958</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-26266-z</pub-id>
        <?supplied-pmid 34645820?>
        <pub-id pub-id-type="pmid">34645820</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thomas</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Manghi</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Asnicar</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Pasolli</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Armanini</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zolfo</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Metagenomic analysis of colorectal cancer datasets identifies cross-cohort microbial diagnostic signatures and a link with choline degradation</article-title>
        <source>Nat Med</source>
        <year>2019</year>
        <volume>25</volume>
        <fpage>667</fpage>
        <lpage>678</lpage>
        <pub-id pub-id-type="doi">10.1038/s41591-019-0405-7</pub-id>
        <?supplied-pmid 30936548?>
        <pub-id pub-id-type="pmid">30936548</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Knight</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Vrbanac</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>BC</given-names>
          </name>
          <name>
            <surname>Aksenov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Callewaert</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Debelius</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Best practices for analysing microbiomes</article-title>
        <source>Nat Rev Microbiol</source>
        <year>2018</year>
        <volume>16</volume>
        <fpage>410</fpage>
        <lpage>422</lpage>
        <pub-id pub-id-type="doi">10.1038/s41579-018-0029-9</pub-id>
        <?supplied-pmid 29795328?>
        <pub-id pub-id-type="pmid">29795328</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pruitt</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Tatusova</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Maglott</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>NCBI reference sequences (RefSeq): a curated non-redundant sequence database of genomes, transcripts and proteins</article-title>
        <source>Nucleic Acids Res</source>
        <year>2007</year>
        <volume>35</volume>
        <fpage>D61</fpage>
        <lpage>D65</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkl842</pub-id>
        <?supplied-pmid 17130148?>
        <pub-id pub-id-type="pmid">17130148</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Cavanaugh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Karsch-Mizrachi</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Ostell</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>GenBank</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>D36</fpage>
        <lpage>42</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1195</pub-id>
        <?supplied-pmid 23193287?>
        <pub-id pub-id-type="pmid">23193287</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parks</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Chuvochina</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rinke</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mussig</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Chaumeil</surname>
            <given-names>P-A</given-names>
          </name>
          <name>
            <surname>Hugenholtz</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy</article-title>
        <source>Nucleic Acids Res</source>
        <year>2022</year>
        <volume>50</volume>
        <fpage>D785</fpage>
        <lpage>D794</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab776</pub-id>
        <?supplied-pmid 34520557?>
        <pub-id pub-id-type="pmid">34520557</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Improved metagenomic analysis with Kraken 2</article-title>
        <source>Genome Biol</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>257</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1891-0</pub-id>
        <?supplied-pmid 31779668?>
        <pub-id pub-id-type="pmid">31779668</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hayes</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Mount</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Reducing storage requirements for biological sequence comparison</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>3363</fpage>
        <lpage>3369</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth408</pub-id>
        <?supplied-pmid 15256412?>
        <pub-id pub-id-type="pmid">15256412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Kraken: ultrafast metagenomic sequence classification using exact alignments</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>R46</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-3-r46</pub-id>
        <?supplied-pmid 24580807?>
        <pub-id pub-id-type="pmid">24580807</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blanco-Míguez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Beghini</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Cumbo</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>McIver</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>KN</given-names>
          </name>
          <name>
            <surname>Zolfo</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Extending and improving metagenomic taxonomic profiling with uncharacterized species using MetaPhlAn 4</article-title>
        <source>Nat Biotechnol.</source>
        <year>2023</year>
        <volume>41</volume>
        <fpage>1633</fpage>
        <lpage>1644</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-023-01688-w</pub-id>
        <?supplied-pmid 36823356?>
        <pub-id pub-id-type="pmid">36823356</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Segata</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Waldron</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ballarini</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Narasimhan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Jousson</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Huttenhower</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Metagenomic microbial community profiling using unique clade-specific marker genes</article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>811</fpage>
        <lpage>814</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.2066</pub-id>
        <?supplied-pmid 22688413?>
        <pub-id pub-id-type="pmid">22688413</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ounit</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wanamaker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Close</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Lonardi</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>CLARK: fast and accurate classification of metagenomic and genomic sequences using discriminative k-mers</article-title>
        <source>BMC Genomics</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>236</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1419-2</pub-id>
        <?supplied-pmid 25879410?>
        <pub-id pub-id-type="pmid">25879410</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Piro</surname>
            <given-names>VC</given-names>
          </name>
          <name>
            <surname>Dadi</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Seiler</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Renard</surname>
            <given-names>BY</given-names>
          </name>
        </person-group>
        <article-title>ganon: precise metagenomics classification against large and up-to-date sets of reference sequences</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <fpage>i12</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa458</pub-id>
        <?supplied-pmid 32657362?>
        <pub-id pub-id-type="pmid">32657362</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Xiang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cai</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>KMCP: accurate metagenomic profiling of both prokaryotic and viral populations by pseudo-mapping</article-title>
        <source>Bioinformatics.</source>
        <year>2023</year>
        <volume>39</volume>
        <fpage>btac845</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac845</pub-id>
        <?supplied-pmid 36579886?>
        <pub-id pub-id-type="pmid">36579886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Centrifuge: rapid and sensitive classification of metagenomic sequences</article-title>
        <source>Genome Res</source>
        <year>2016</year>
        <volume>26</volume>
        <fpage>1721</fpage>
        <lpage>1729</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.210641.116</pub-id>
        <?supplied-pmid 27852649?>
        <pub-id pub-id-type="pmid">27852649</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Burrows M, Wheeler DJ. A block-sorting lossless data compression algorithm. SRS Research Report. 1994;124. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://cir.nii.ac.jp/crid/1571417124717214720.">https://cir.nii.ac.jp/crid/1571417124717214720</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Ferragina P, Manzini G. Opportunistic data structures with applications. Proceedings 41st Annual Symposium on Foundations of Computer Science. 2000. p. 390–8. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://ieeexplore.ieee.org/abstract/document/892127">https://ieeexplore.ieee.org/abstract/document/892127</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nasko</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
        </person-group>
        <article-title>RefSeq database growth influences the accuracy of k-mer-based lowest common ancestor species identification</article-title>
        <source>Genome Biol</source>
        <year>2018</year>
        <volume>19</volume>
        <fpage>165</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-018-1554-6</pub-id>
        <?supplied-pmid 30373669?>
        <pub-id pub-id-type="pmid">30373669</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kreft</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>On compressing and indexing repetitive sequences</article-title>
        <source>Theoret Comput Sci</source>
        <year>2013</year>
        <volume>483</volume>
        <fpage>115</fpage>
        <lpage>133</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2012.02.006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Gagie T, Gawrychowski P, Kärkkäinen J, Nekrich Y, Puglisi SJ. A Faster Grammar-Based Self-Index. arXiv; 2012. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1109.3954">http://arxiv.org/abs/1109.3954</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mäkinen</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sirén</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Välimäki</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Storage and Retrieval of Highly Repetitive Sequence Collections</article-title>
        <source>J Comput Biol</source>
        <year>2010</year>
        <volume>17</volume>
        <fpage>281</fpage>
        <lpage>308</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0169</pub-id>
        <?supplied-pmid 20377446?>
        <pub-id pub-id-type="pmid">20377446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Nishimoto T, Tabei Y. Optimal-Time Queries on BWT-runs Compressed Indexes. arXiv; 2021. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/2006.05104">http://arxiv.org/abs/2006.05104</ext-link>. Cited 2023 Nov 5.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Gagie T, Navarro G, Prezza N. Optimal-Time Text Indexing in BWT-runs Bounded Space. arXiv; 2017. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1705.10382">http://arxiv.org/abs/1705.10382</ext-link>. Cited 2023 Sep 20.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Grossi R, Gupta A, Vitter JS. High-order entropy-compressed text indexes. Proceedings of the fourteenth annual ACM-SIAM symposium on Discrete algorithms. USA: Society for Industrial and Applied Mathematics; 2003. p. 841–50.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Prezza N. r-index: the run-length BWT index. 2023. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://github.com/nicolaprezza/r-index">https://github.com/nicolaprezza/r-index</ext-link>. Cited 2023 Oct 14.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Gog S, Beller T, Moffat A, Petri M. From Theory to Practice: Plug and Play with Succinct Data Structures. arXiv; 2013. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1311.1249">http://arxiv.org/abs/1311.1249</ext-link>. Cited 2023 Nov 12.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Holtgrewe M. Mason – A Read Simulator for Second Generation Sequencing Data. Technical Report FU Berlin. 2010.Available from: 
<ext-link ext-link-type="uri" xlink:href="https://publications.imp.fu-berlin.de/962/">https://publications.imp.fu-berlin.de/962/</ext-link>. Cited 2023 Oct 6.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>GT</given-names>
          </name>
        </person-group>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>593</fpage>
        <lpage>594</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr708</pub-id>
        <?supplied-pmid 22199392?>
        <pub-id pub-id-type="pmid">22199392</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muggli</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Bowe</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Noyes</surname>
            <given-names>NR</given-names>
          </name>
          <name>
            <surname>Morley</surname>
            <given-names>PS</given-names>
          </name>
          <name>
            <surname>Belk</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Raymond</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Succinct colored de Bruijn graphs</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>3181</fpage>
        <lpage>3187</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx067</pub-id>
        <?supplied-pmid 28200001?>
        <pub-id pub-id-type="pmid">28200001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alanko</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Vuohtoniemi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mäklin</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Puglisi</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Themisto: a scalable colored k-mer index for sensitive pseudoalignment against hundreds of thousands of bacterial genomes</article-title>
        <source>Bioinformatics</source>
        <year>2023</year>
        <volume>39</volume>
        <fpage>i260</fpage>
        <lpage>i269</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btad233</pub-id>
        <?supplied-pmid 37387143?>
        <pub-id pub-id-type="pmid">37387143</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Alanko JN, Puglisi SJ, Vuohtoniemi J. Succinct k-mer Sets Using Subset Rank Queries on the Spectral Burrows-Wheeler Transform *. bioRxiv; 2022. p. 2022.05.19.492613. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2022.05.19.492613v2">https://www.biorxiv.org/content/10.1101/2022.05.19.492613v2</ext-link>. Cited 2024 Feb 5.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Meyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Fritz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Deng</surname>
            <given-names>Z-L</given-names>
          </name>
          <name>
            <surname>Koslicki</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lesker</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Critical Assessment of Metagenome Interpretation: the second round of challenges</article-title>
        <source>Nat Methods</source>
        <year>2022</year>
        <volume>19</volume>
        <fpage>429</fpage>
        <lpage>440</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-022-01431-4</pub-id>
        <?supplied-pmid 35396482?>
        <pub-id pub-id-type="pmid">35396482</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dilthey</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Strain-level metagenomic assignment and compositional estimation for long reads with MetaMaps</article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <fpage>3066</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-10934-2</pub-id>
        <?supplied-pmid 31296857?>
        <pub-id pub-id-type="pmid">31296857</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Ulrich J-U, Renard BY. Taxor: Fast and space-efficient taxonomic classification of long reads with hierarchical interleaved XOR filters. bioRxiv; 2023. p. 2023.07.20.549822. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/10.1101/2023.07.20.549822v1">https://www.biorxiv.org/10.1101/2023.07.20.549822v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ahmed</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Rossi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boucher</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Efficient taxa identification using a pangenome index</article-title>
        <source>Genome Res</source>
        <year>2023</year>
        <volume>33</volume>
        <issue>7</issue>
        <fpage>1069</fpage>
        <lpage>1077</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.277642.123</pub-id>
        <?supplied-pmid 37258301?>
        <pub-id pub-id-type="pmid">37258301</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gagie</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kashgouli</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Arroyuelo</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Poblete</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>KATKA: A KRAKEN-Like Tool with k Given at Query Time</article-title>
        <source>String Processing and Information Retrieval</source>
        <year>2022</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer International Publishing</publisher-name>
        <fpage>191</fpage>
        <lpage>197</lpage>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Menzel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ng</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Krogh</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Fast and sensitive taxonomic classification for metagenomics with Kaiju</article-title>
        <source>Nat Commun</source>
        <year>2016</year>
        <volume>7</volume>
        <fpage>11257</fpage>
        <pub-id pub-id-type="doi">10.1038/ncomms11257</pub-id>
        <?supplied-pmid 27071849?>
        <pub-id pub-id-type="pmid">27071849</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Fast construction of FM-index for long sequence reads</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>3274</fpage>
        <lpage>3275</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu541</pub-id>
        <?supplied-pmid 25107872?>
        <pub-id pub-id-type="pmid">25107872</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Exploring single-sample SNP and INDEL calling with whole-genome de novo assembly</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1838</fpage>
        <lpage>1844</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts280</pub-id>
        <?supplied-pmid 22569178?>
        <pub-id pub-id-type="pmid">22569178</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schaeffer</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bray</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Pseudoalignment for metagenomic read assignment</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>2082</fpage>
        <lpage>2088</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx106</pub-id>
        <?supplied-pmid 28334086?>
        <pub-id pub-id-type="pmid">28334086</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Shaw J, Yu YW. Metagenome profiling and containment estimation through abundance-corrected k-mer sketching with sylph. bioRxiv; 2024. p. 2023.11.20.567879. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.11.20.567879v2">https://www.biorxiv.org/content/10.1101/2023.11.20.567879v2</ext-link>. Cited 2024 Jan 28.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Thielen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Bracken: estimating species abundance in metagenomics data</article-title>
        <source>PeerJ Comput Sci</source>
        <year>2017</year>
        <volume>3</volume>
        <fpage>e104</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj-cs.104</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dempster</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Laird</surname>
            <given-names>NM</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>DB</given-names>
          </name>
        </person-group>
        <article-title>Maximum Likelihood from Incomplete Data Via the EM Algorithm</article-title>
        <source>J Roy Stat Soc: Ser B (Methodol)</source>
        <year>1977</year>
        <volume>39</volume>
        <fpage>1</fpage>
        <lpage>22</lpage>
        <pub-id pub-id-type="doi">10.1111/j.2517-6161.1977.tb01600.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Skoufos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Almodaresi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zakeri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Paulson</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hatzigeorgiou</surname>
            <given-names>AG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>AGAMEMNON: an Accurate metaGenomics And MEtatranscriptoMics quaNtificatiON analysis suite</article-title>
        <source>Genome Biol</source>
        <year>2022</year>
        <volume>23</volume>
        <fpage>39</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-022-02610-4</pub-id>
        <?supplied-pmid 35101114?>
        <pub-id pub-id-type="pmid">35101114</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <mixed-citation publication-type="other">Liu J, Ma Y, Ren Y, Guo H. Centrifuge+: improving metagenomic analysis upon Centrifuge. bioRxiv; 2023. p. 2023.02.27.530134. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.02.27.530134v1">https://www.biorxiv.org/content/10.1101/2023.02.27.530134v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgulis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gertz</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Schäffer</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Agarwala</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A fast and symmetric DUST implementation to mask low-complexity DNA sequences</article-title>
        <source>J Comput Biol</source>
        <year>2006</year>
        <volume>13</volume>
        <fpage>1028</fpage>
        <lpage>1040</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2006.13.1028</pub-id>
        <?supplied-pmid 16796549?>
        <pub-id pub-id-type="pmid">16796549</pub-id>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Piro VC, Reinert K. ganon2: up-to-date and scalable metagenomics analysis. bioRxiv; 2023. p. 2023.12.07.570547. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content10.1101/2023.12.07.570547v1">https://www.biorxiv.org/content10.1101/2023.12.07.570547v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barbay</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>On compressing permutations and adaptive sorting</article-title>
        <source>Theoret Comput Sci</source>
        <year>2013</year>
        <volume>513</volume>
        <fpage>109</fpage>
        <lpage>123</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2013.10.019</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Fast BWT in small space by blockwise suffix sorting</article-title>
        <source>Theoret Comput Sci</source>
        <year>2007</year>
        <volume>387</volume>
        <fpage>249</fpage>
        <lpage>257</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2007.07.018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <?supplied-pmid 19261174?>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gog</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kempa</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Petri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Puglisi</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Fixed Block Compression Boosting in FM-Indexes: Theory and Practice</article-title>
        <source>Algorithmica</source>
        <year>2019</year>
        <volume>81</volume>
        <fpage>1370</fpage>
        <lpage>1391</lpage>
        <pub-id pub-id-type="doi">10.1007/s00453-018-0475-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger. Github; 2024. <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link>. Accessed 8 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger v1.0.1. Zenodo; 2024. 10.5281/zenodo.10938378. Accessed 7 Apr 2024.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger evaluations. Github; 2024. <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger_evaluations">https://github.com/mourisl/centrifuger_evaluations</ext-link>. Accessed 9 Mar 2024.</mixed-citation>
    </ref>
  </ref-list>
</back>
<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">Genome Biol</journal-id>
    <journal-id journal-id-type="iso-abbrev">Genome Biol</journal-id>
    <journal-title-group>
      <journal-title>Genome Biology</journal-title>
    </journal-title-group>
    <issn pub-type="ppub">1474-7596</issn>
    <issn pub-type="epub">1474-760X</issn>
    <publisher>
      <publisher-name>BioMed Central</publisher-name>
      <publisher-loc>London</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">11046777</article-id>
    <article-id pub-id-type="pmid">38664753</article-id>
    <article-id pub-id-type="publisher-id">3244</article-id>
    <article-id pub-id-type="doi">10.1186/s13059-024-03244-4</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>Centrifuger: lossless compression of microbial genomes for efficient and accurate metagenomic sequence classification</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <contrib-id contrib-id-type="orcid">http://orcid.org/0000-0002-0180-7426</contrib-id>
        <name>
          <surname>Song</surname>
          <given-names>Li</given-names>
        </name>
        <address>
          <email>Li.Song@dartmouth.edu</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
        <xref ref-type="aff" rid="Aff2">2</xref>
        <xref ref-type="aff" rid="Aff3">3</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Langmead</surname>
          <given-names>Ben</given-names>
        </name>
        <xref ref-type="aff" rid="Aff4">4</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Biomedical Data Science, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Computer Science, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff3"><label>3</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/049s0rh22</institution-id><institution-id institution-id-type="GRID">grid.254880.3</institution-id><institution-id institution-id-type="ISNI">0000 0001 2179 2404</institution-id><institution>Department of Microbiology and Immunology, </institution><institution>Dartmouth College, </institution></institution-wrap>Hanover, NH USA </aff>
      <aff id="Aff4"><label>4</label><institution-wrap><institution-id institution-id-type="ROR">https://ror.org/00za53h95</institution-id><institution-id institution-id-type="GRID">grid.21107.35</institution-id><institution-id institution-id-type="ISNI">0000 0001 2171 9311</institution-id><institution>Department of Computer Science, </institution><institution>Johns Hopkins University, </institution></institution-wrap>Baltimore, MD USA </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>25</day>
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>25</day>
      <month>4</month>
      <year>2024</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2024</year>
    </pub-date>
    <volume>25</volume>
    <elocation-id>106</elocation-id>
    <history>
      <date date-type="received">
        <day>14</day>
        <month>11</month>
        <year>2023</year>
      </date>
      <date date-type="accepted">
        <day>10</day>
        <month>4</month>
        <year>2024</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2024</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold> This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <p id="Par1">Centrifuger is an efficient taxonomic classification method that compares sequencing reads against a microbial genome database. In Centrifuger, the Burrows-Wheeler transformed genome sequences are losslessly compressed using a novel scheme called run-block compression. Run-block compression achieves sublinear space complexity and is effective at compressing diverse microbial databases like RefSeq while supporting fast rank queries. Combining this compression method with other strategies for compacting the Ferragina-Manzini (FM) index, Centrifuger reduces the memory footprint by half compared to other FM-index-based approaches. Furthermore, the lossless compression and the unconstrained match length help Centrifuger achieve greater accuracy than competing methods at lower taxonomic levels.</p>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13059-024-03244-4.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>FM-index</kwd>
      <kwd>r-index</kwd>
      <kwd>Metagenomic</kwd>
      <kwd>Compact data structure</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000057</institution-id>
            <institution>National Institute of General Medical Sciences</institution>
          </institution-wrap>
        </funding-source>
        <award-id>P20GM130454</award-id>
        <award-id>R35GM139602</award-id>
        <award-id>3P20GM130454-05WS</award-id>
        <principal-award-recipient>
          <name>
            <surname>Langmead</surname>
            <given-names>Ben</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution-wrap>
            <institution-id institution-id-type="FundRef">http://dx.doi.org/10.13039/100000051</institution-id>
            <institution>National Human Genome Research Institute</institution>
          </institution-wrap>
        </funding-source>
        <award-id>R01HG011392</award-id>
        <principal-award-recipient>
          <name>
            <surname>Langmead</surname>
            <given-names>Ben</given-names>
          </name>
        </principal-award-recipient>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© BioMed Central Ltd., part of Springer Nature 2024</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Background</title>
    <p id="Par2">Metagenomic sequencing enables comprehensive profiling of microbiomes in a sample and has been widely applied to study natural environments [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>], infectious diseases [<xref ref-type="bibr" rid="CR3">3</xref>], allergies [<xref ref-type="bibr" rid="CR4">4</xref>], and cancers [<xref ref-type="bibr" rid="CR5">5</xref>]. Taxonomic classification labels each sequencing read with taxonomy IDs representing its most likely taxon of origin. This has become an important step in translating raw sequencing data into meaningful microbiome profiles [<xref ref-type="bibr" rid="CR6">6</xref>]. Classification is usually conducted by comparing the read sequence to all the sequences in a database of microbial reference genomes, such as RefSeq [<xref ref-type="bibr" rid="CR7">7</xref>], GeneBank [<xref ref-type="bibr" rid="CR8">8</xref>], or GTDB [<xref ref-type="bibr" rid="CR9">9</xref>]. The growth of available microbial reference genomes creates a strong need for memory-efficient structures. Many methods turn to lossy representations of the database. For example, Kraken2 [<xref ref-type="bibr" rid="CR10">10</xref>] reduces the space by storing minimizers [<xref ref-type="bibr" rid="CR11">11</xref>] instead of all the k-mers as in Kraken [<xref ref-type="bibr" rid="CR12">12</xref>]. Other approaches, such as MetaPhlAn [<xref ref-type="bibr" rid="CR13">13</xref>, <xref ref-type="bibr" rid="CR14">14</xref>] and CLARK [<xref ref-type="bibr" rid="CR15">15</xref>], build the database out of only a selected subset of sequences, i.e., marker genes or discriminative k-mers. Ganon [<xref ref-type="bibr" rid="CR16">16</xref>] and KMCP [<xref ref-type="bibr" rid="CR17">17</xref>] utilize probabilistic data structures that discard k-mer identity but support checking k-mer presence with false positive probability. While these strategies reduce the memory requirement, they lose valuable sequence information, which may lower accuracy when classifying read to lower taxonomic levels. We previously co-developed the taxonomic classification method Centrifuge [<xref ref-type="bibr" rid="CR18">18</xref>] that used the memory-efficient Burrows-Wheeler transformed (BWT) sequence [<xref ref-type="bibr" rid="CR19">19</xref>] and the Ferragina-Manzini (FM) index [<xref ref-type="bibr" rid="CR20">20</xref>]. Centrifuge searches for semi-maximal matches with no length constraints, avoiding the decreased taxonomic specificity of k-mers when the genome database is large [<xref ref-type="bibr" rid="CR21">21</xref>]. However, the FM-index grows linearly with the database size and the lossy compression strategy proposed in Centrifuge is not scalable, making Centrifuge less usable in the context of large and growing genome databases.</p>
    <p id="Par3">Related genomes share similar sequences, giving genome databases a degree of repetitiveness. Lempel–Ziv family indexes [<xref ref-type="bibr" rid="CR22">22</xref>], context-free grammars [<xref ref-type="bibr" rid="CR23">23</xref>], run-length compressed BWT indexes (RLBWT) [<xref ref-type="bibr" rid="CR24">24</xref>], and the move structure [<xref ref-type="bibr" rid="CR25">25</xref>] exploit this repetitiveness to reduce index size losslessly while supporting efficient search queries. For example, r-index [<xref ref-type="bibr" rid="CR26">26</xref>] builds upon the RLBWT and fits in O(<italic>r</italic>) words, where <italic>r</italic> is the number of runs in the BWT sequence. The FM-index, by contrast, usually requires O(<italic>n</italic>) words, where <italic>n</italic> is the size of the database and is also the length of the BWT sequence.</p>
    <p id="Par4">While O(<italic>r</italic>)-space methods achieve good compression for highly repetitive sequences such as collections of human genomes, microbial genomes are more diverse. Applying these compact representations may take more space than the uncompressed wavelet tree [<xref ref-type="bibr" rid="CR27">27</xref>]. Therefore, we designed two compact data structures, called run-block compressed BWT (RBBWT) and hybrid run-length compressed BWT, to effectively compress the BWT sequence for the intermediate level of repetitiveness characteristic of microbial genome databases. RBBWT achieved the best overall performance in both time and space efficiency when compared to other compression methods. Inspired by this observation, we developed the software tool Centrifuger (Centrifuge with RBBWT), which rapidly assigned the taxonomy IDs for a sequencing read while consuming half the memory of a conventional FM-index.</p>
  </sec>
  <sec id="Sec2">
    <title>Results</title>
    <sec id="Sec3">
      <title>Method overview</title>
      <p id="Par5">Centrifuger assigns a taxonomic ID to each input read or read pair by searching against a losslessly compressed FM-index built from a microbial genome database (Fig. <xref rid="Fig1" ref-type="fig">1</xref>, Methods). The FM-index contains two memory-consuming components, the data structure supporting rank queries over the BWT sequence, and the sampled suffix array. We propose a novel compact structure, the run-block compressed sequence, to reduce the size needed to store the BWT sequence. For the sampled suffix array, we save space by storing only the sequence ID for each sampled position on the BWT sequence, omitting information about the offset within the genome. The classification algorithm scans the read twice, once for the original sequence and once for the reverse-complement sequence. Each scan looks for semi-maximal matches, by repeatedly extending the match with the backward search until reaching a mismatch, then skipping the base immediately after the point where the backward search terminates. We call the match semi-maximal because only one end of the match cannot be extended further. For each match, Centrifuger retrieves the sequence IDs associated with entries in the matching BWT interval. Centrifuger adds a score, which is a quadratic function of the match length, for each retrieved sequence ID. After all the valid matches are processed, the highest-scoring taxonomy IDs translated from the sequence IDs are reported as the classification result. When the number of reported IDs exceeds the user-specified threshold (default report threshold 1), Centrifuger reduces the number to within the threshold by promoting some taxonomy IDs to their lowest common ancestors (LCAs) in the taxonomy tree. In other words, Centrifuger reports the LCA of the taxonomy IDs for a read by default, as in Kraken2.<fig id="Fig1"><label>Fig. 1</label><caption><p>Overview of Centrifuger. Left: classification procedure on the forward read. Centrifuger searches from the end of the read and applies the backward search to extend the match until reaching a mismatch. This yields the first 60-bp exact match hitting three sequences {X, Y, Z} in the database. Centrifuger then skips the mismatch and restarts the search again, giving the second 39-bp match hitting two sequences {X, Y}. The same search procedure applies to the reverse complement of the read. Centrifuger then scores each matched sequence and classifies the read to the sequences with the highest scores, where the example read is classified to the sequence X with the score 2601. Right: the structure of Centrifuger’s lossless compressed FM-index. Centrifuger utilizes the RBBWT representation for the BWT sequence. In the example of compressing the BWT sequence “AAAAACGTAAAA”, RBBWT represents it as two sequences “AA” and “ACGT” when the block size is 4. For the sequence IDs that are sampled on the BWT sequence, Centrifuger will compact their bits representation. In this example, there are four sequences in the database (W, X, Y, Z), so 2 bits are sufficient to represent the sequence ID. Therefore, for the substring of the BWT sequence shown in the example, Centrifuger spends 6 bits to represent sequence IDs that are sampled every other four positions on the BWT sequence</p></caption><graphic xlink:href="13059_2024_3244_Fig1_HTML" id="MO1"/></fig></p>
    </sec>
    <sec id="Sec4">
      <title>The computational efficiency of run-block compression</title>
      <p id="Par6">Run-block compressed sequence is a novel compact data structure that achieves sublinear space usage both in theory (<inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left(\frac{n}{\sqrt{l}}log\sigma \right)$$\end{document}</tex-math><mml:math id="M2"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq1.gif"/></alternatives></inline-formula> bits. <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M4"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq2.gif"/></alternatives></inline-formula>: average run length, i.e., <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{r}$$\end{document}</tex-math><mml:math id="M6"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq3.gif"/></alternatives></inline-formula>; <inline-formula id="IEq4"><alternatives><tex-math id="M7">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M8"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq4.gif"/></alternatives></inline-formula>: alphabet size) and practice. Centrifuger applies run-block compression to reduce the size of the BWT sequence, yielding the RBBWT: Run-Block compressed BWT. Rank queries on the RBBWT, which form the basis for LF-mapping in the backward search, are also highly efficient, having a time complexity of <inline-formula id="IEq5"><alternatives><tex-math id="M9">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M10"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq5.gif"/></alternatives></inline-formula> (more information in the “<xref rid="Sec10" ref-type="sec">Methods</xref>” section).</p>
      <p id="Par7">We compared RBBWT with three other representations of BWT sequences: the standard wavelet tree, the RLBWT as implemented in the r-index package [<xref ref-type="bibr" rid="CR28">28</xref>] using sdsl library [<xref ref-type="bibr" rid="CR29">29</xref>], and the hybrid run-length compression (Methods). We measured the change in space usage when adding non-plasmid sequences from the species <italic>Escherichia fergusonii</italic> (taxonomy ID 564) to the structure. While the wavelet tree grew linearly as more genomes were added, RBBWT, RLBWT and its hybrid version grew more slowly (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">1</xref>A). When there was little repetitiveness in the genomes, RBBWT and hybrid run-length compression took almost the same amount of space as the wavelet tree. From another perspective, when the average run length of the BWT increased, the number of bits to represent a nucleotide in the wavelet tree remained constant (0.31 bits/bp in our implementation), and the other three compression methods needed fewer bits (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A). RBBWT consumed the least or similar space compared with the run-length-based compression methods when <inline-formula id="IEq6"><alternatives><tex-math id="M11">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M12"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq6.gif"/></alternatives></inline-formula> was less than 10. When the BWT was constructed from all the genomes under taxonomy ID 564 with <inline-formula id="IEq7"><alternatives><tex-math id="M13">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M14"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq7.gif"/></alternatives></inline-formula> equaling 18.8, RBBWT was still small, consuming 57.8% less space than the wavelet tree and 29.8% more space than RLBWT. We also compared the space usage of the BWT representations by adding the genomes from the species <italic>Chlamydia trachomatis</italic> (taxonomy ID 810) whose strains had highly similar sequences [<xref ref-type="bibr" rid="CR18">18</xref>]. Again, RBBWT was the most memory-efficient data structure when <inline-formula id="IEq8"><alternatives><tex-math id="M15">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M16"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq8.gif"/></alternatives></inline-formula> was less than or around 10 (Additional File <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">2</xref>A). For this species, <inline-formula id="IEq9"><alternatives><tex-math id="M17">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M18"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq9.gif"/></alternatives></inline-formula> reached 56.0 after adding all the genomes, and RBBWT’s space was about a quarter of the uncompressed wavelet tree’s and twice as much as RLBWT’s in this case.<fig id="Fig2"><label>Fig. 2</label><caption><p>Computational efficiency of the wavelet tree, RLBWT, hybrid run-length compression, and RBBWT. <bold>A</bold> Bits used to represent one base pair (bp) as the average run length of the BWT sequence (<inline-formula id="IEq10"><alternatives><tex-math id="M19">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n/r$$\end{document}</tex-math><mml:math id="M20"><mml:mrow><mml:mi>n</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq10.gif"/></alternatives></inline-formula>) increases when representing increasingly more genomes with species ID 564 (<italic>Escherichia fergusonii</italic>). <bold>B</bold> Bits used to represent one bp when representing genomes with genus ID 445 (<italic>Legionella</italic>). <bold>C</bold> Rank query time</p></caption><graphic xlink:href="13059_2024_3244_Fig2_HTML" id="MO2"/></fig></p>
      <p id="Par8">We next compared the space usage when compressing the BWT sequence for genomes from the same genus. We examined the genus <italic>Legionella</italic> (taxonomy ID 445) containing 150 genomes. Since genomes from the same genus were more diverse than genomes from the same species, the final <inline-formula id="IEq11"><alternatives><tex-math id="M21">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M22"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq11.gif"/></alternatives></inline-formula> was 7.1 after adding all the non-plasmid sequences. RBBWT consumed the least memory among the benchmarked compression methods, using 46.9%, 24.8%, and 2.3% less space than wavelet tree, RLBWT, and hybrid run-length compressed BWT, respectively, in the end (Fig. <xref rid="Fig2" ref-type="fig">2</xref>B and Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">1</xref>B). A similar trend was observed when conducting the experiment on the genomes from the genus <italic>Chlamydia</italic> (taxonomy ID 810, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">2</xref>B). We further compared the speed of rank queries by averaging the time for finding the rank of ‘A’ for each of the first ten million positions in the BWT sequence of all the <italic>Legionella</italic>’s genomes, i.e., the average time of calling rank<sub>‘A’</sub>(1, BWT) to rank<sub>‘A’</sub>(10,000,000, BWT). Rank query in RBBWT was about five times faster than in RLBWT and only three times slower than using a wavelet tree (Fig. <xref rid="Fig2" ref-type="fig">2</xref>C). Hybrid run-length compression was the slowest method. In both the species ID 564 and the genus ID 445 analysis, the block size of RBBWT was automatically determined to be 8 (Methods) after adding all the genomes, supporting the mild repetitiveness in the microbial genome database. To summarize, RBBWT is more memory-efficient and supports faster rank queries compared to RLBWT when compressing microbial genomes.</p>
    </sec>
    <sec id="Sec5">
      <title>Performance on classifying simulated data</title>
      <p id="Par9">We compared Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP’s accuracy on one million 100-base-pair (bp) paired-end short reads simulated by Mason [<xref ref-type="bibr" rid="CR30">30</xref>] from 34,190 prokaryotic complete genomes (RefSeq bacteria + archaea). We set the sequencing error rate in Mason to be 1%, a value that was higher than the Illumina sequencing platform, to model the microbial genome variations in real data. All five methods built the database indices on the same set of genomes. The average run length of the BWT was about 6.8, and the block size of RBBWT was automatically determined to be 8. We used TP (true positive) for the number of reads that are correctly classified at the specified taxonomy node or in its subtree, T (true) for the number of input reads, and P (positive) for the number of reads that were correctly classified at the specified taxonomy level or below. Therefore, we define the sensitivity as <inline-formula id="IEq12"><alternatives><tex-math id="M23">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{TP}{T}$$\end{document}</tex-math><mml:math id="M24"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">TP</mml:mi></mml:mrow><mml:mi>T</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq12.gif"/></alternatives></inline-formula>, and precision as <inline-formula id="IEq13"><alternatives><tex-math id="M25">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{TP}{P}$$\end{document}</tex-math><mml:math id="M26"><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">TP</mml:mi></mml:mrow><mml:mi>P</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq13.gif"/></alternatives></inline-formula>. The strain-level classification evaluation in each method was for the reads classified to leaf nodes in the taxonomy tree. On this simulated data set, Centrifuger achieved the best accuracy at all taxonomy levels and was significantly better than other methods at species and genus levels (Fig. <xref rid="Fig3" ref-type="fig">3</xref>A, Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">1</xref>). For example, Centrifuger’s sensitivity was 34.5% higher than both Centrifuge and Kraken2, 20.0% higher than Ganon, and 116.0% higher than KMCP at the species level. All five classifiers had comparable precision except at the strain level. Centrifuge’s low sensitivity could be due to its policy of not resolving taxonomy IDs for matches hitting too many places in the database, where the threshold for the number of hits of a match was 40·report_threshold (default value of Centrifuge’s report threshold for the taxonomy IDs is 5). The strategy of handling matches on repetitive regions was one of the main differences between Centrifuger and Centrifuge during the classification stage (Methods). In addition to Mason, we compared the five classifiers on another set of one million 100-bp paired-end short reads simulated by ART [<xref ref-type="bibr" rid="CR31">31</xref>], where the error rate was set to ART’s default value (about 0.15%). All methods produced similar accuracy as the Mason-generated data. Centrifuger still achieved significantly higher sensitivity at the species and genus level while having comparable precision as the other methods (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">3</xref>). In both simulated data sets, the sensitivity at the strain level was very low (&lt; 25%) for all five methods, suggesting that most reads cannot be uniquely assigned to a strain in the RefSeq prokaryotic genome database.<fig id="Fig3"><label>Fig. 3</label><caption><p>Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data generated from June 2023 RefSeq prokaryotic genomes. <bold>A</bold> Sensitivity (left) and precision (right) of each classifier at various taxonomy ranks. <bold>B</bold> Peak memory usage of each classifier. <bold>C</bold> Classification speed of each classifier with a single thread</p></caption><graphic xlink:href="13059_2024_3244_Fig3_HTML" id="MO3"/></fig></p>
      <p id="Par10">We utilized the simulated data set generated by Mason to compare the classifiers’ computational efficiency. Centrifuger was the most memory-efficient method, classifying the reads against the 140 billion bp (GBp) database using 43 gigabytes (GB) of memory (Fig. <xref rid="Fig3" ref-type="fig">3</xref>B). Methods like Kraken2, Ganon, and KMCP reduce the memory usage by discarding k-mer information. We also explored the space usage of succinct colored k-mer representations [<xref ref-type="bibr" rid="CR32">32</xref>], which can keep all the k-mer information along with their color (sequence ID) information. We created the index on these RefSeq prokaryotic genomes using Themisto v3.2.1 [<xref ref-type="bibr" rid="CR33">33</xref>], a pseudoalignment method based on the spectral BWT [<xref ref-type="bibr" rid="CR34">34</xref>], using a k-mer size of 31. Its index, without the color component, took 44 GB space (the.tdbg file), which was already more than Centrifuger’s 41-GB full index size. Since Themisto is not designed for taxonomic classification, we excluded it from other evaluations. Nevertheless, this observation suggests that succinct colored k-mer representations could be memory-efficient enough for read classifications against a large microbial genome database. For the classification speed, Kraken2 was the fastest method. Centrifuger and Centrifuge were also efficient and processed more than 100,000 read pairs per minute using a single thread (Fig. <xref rid="Fig3" ref-type="fig">3</xref>C). Centrifuger was about three times slower than Centrifuge, reflecting the earlier observation that the rank query on RBBWT was three times slower than on an uncompressed data structure. Ganon and KMCP were the slowest methods in the evaluation; they were about 3.6 times and 5.3 times slower than Centrifuger, respectively.</p>
      <p id="Par11">We next evaluated each method’s performance on a simulated data set when true genomes were missing in the genome database. We created another index for each method on a trimmed database with 1,931 genomes, where we randomly selected one genome per genus. We then removed all reads originating from the selected genomes in the Mason-generated simulated data. This yielded a simulated data set with about 946K read pairs whose true origin was not in the database. On this trimmed database, Centrifuger, Centrifuge, and Kraken2 had similar accuracy, where they were more sensitive but less precise than Ganon and KMCP (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">4</xref>A). Due to the large discrepancies in sensitivity and precision among the five classifiers, we compared their F1 scores, defined as 2·(sensitivity*precision)/(sensitivity + precision). Centrifuger, Centrifuge, and Kraken2 achieved very similar F1 scores across the taxonomy ranks. Centrifuger’s F1 scores were 4.1–17.1% and 21.6–30.2% higher than Ganon’s and KMCP’s, respectively, ranging from the genus level to the phylum level (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">4</xref>B). Ganon outperformed other classifiers at the species level, with the F1 score 5.2% higher than Centrifuger’s. We observed that the Centrifuger and Centrifuge had almost identical performance on this trimmed database, suggesting that the difference in their performance on the full database was primarily due to the redundancy of the genomes.</p>
      <p id="Par12">In addition to the comparisons on our own simulated data sets, we also evaluated the accuracy of these five classifiers on 10 simulated short-read samples from the Critical Assessment of Metagenome Interpretation 2 (CAMI2) [<xref ref-type="bibr" rid="CR35">35</xref>] challenge datasets. Each sample has about 6.7 million 150-bp read pairs. Since the truth table from CAMI2 was mostly at the species level, we skipped the strain-level comparison. As in the previous simulated data evaluation, Centrifuger achieved significantly better classification results at species and genus levels than other methods (Fig. <xref rid="Fig4" ref-type="fig">4</xref>) and the highest F1 score across all the taxonomy ranks (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">5</xref>). For example, at the species level, the mean sensitivity of Centrifuger was 72.9% and 54.1% higher than Centrifuge’s and Kraken2’s, and the mean precision was 8.3% and 11.0% higher than Centrifuge’s and Kraken2’s, respectively. Centrifuger’s average sensitivity was 13.7% higher than Ganon’s while obtaining almost identical precision at the species level. Though Centrifuger’s average precision was 4.8% lower than KMCP’s at the species level, its sensitivity was 2.3 times higher than KMCP’s. We concatenated the 10 samples into a large data set containing about 67 million read pairs to compare the speed of the classifiers running with eight threads. Kraken2 was the fastest method (finished in about 7 min), followed by Centrifuge (42 min), Centrifuger (1 hour 35 min), and Ganon (3 hours 33 min). With multithreading, Centrifuger was about 2.3 times slower than Centrifuge, reducing the threefold speed difference when running on a single thread. KMCP did not scale well and took more than 18 hours to finish.<fig id="Fig4"><label>Fig. 4</label><caption><p>Sensitivity (top) and precision (bottom) of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP at various taxonomy ranks on the 10 simulated data sets from CAMI2</p></caption><graphic xlink:href="13059_2024_3244_Fig4_HTML" id="MO4"/></fig></p>
    </sec>
    <sec id="Sec6">
      <title>Performance on classifying bacterial whole-genome sequencing data</title>
      <p id="Par13">We next evaluated Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on real bacterial whole-genome sequencing (WGS) data using the same database indexes as the simulated data evaluation. The true taxonomy IDs for each WGS sample were extracted in corresponding SRA RunInfo entries. We considered two scenarios: one where the RefSeq database contained some genomes from the same species (species-in), and one where the database did not include any same-species genomes but did include some same-genus genomes (species-not-in). We collected 100 WGS samples for each scenario, and all the classifiers, except KMCP, successfully processed these samples. KMCP failed to finish SRR23033313 and SRR23885914 in the species-in scenario on our server due to its long running time. Sensitivity and precision were defined in the same way as the simulated data evaluations, and we focused on the accuracy at the species and genus levels for species-in and species-not-in scenarios, respectively. For the species-in scenario, Centrifuger achieved the highest average sensitivity and average precision. In particular, Centrifuger achieved 10.6%, 1.3%, 9.6%, and 101.9% higher average sensitivity, 5.8%, 18.6%, 1.7%, and 6.7% higher average precision than Centrifuge, Kraken2, Ganon, and KMCP, respectively (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A). When comparing with KMCP, we excluded the two samples that KMCP did not finish. For the species-not-in scenario, Centrifuger, Centrifuge, and Kraken2 had comparable sensitivity, Kraken2’s precision was 10.2% and 21.2% higher than Centrifuger and Centrifuge, respectively (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B). Though Ganon’s average precision was similar to Kraken2’s and was 11.1% higher than Centrifuger’s, its average sensitivity was 22.2% lower than Centrifuger’s. KMCP obtained the highest precision, with an average precision 23.1% higher than Centrifuger’s, but its average sensitivity was 40.6% lower than Centrifuger’s. We further examined the F1 score for each classifier. Kraken2 achieved the highest F1 score, closely followed by Centrifuger, and their F1 scores were consistently greater than Ganon’s and KMCP’s (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">6</xref>). Our analysis also showed that the species-not-in scenario had inferior accuracy compared with the species-in scenario, suggesting that having a comprehensive database may substantially improve classification results by reducing the species-not-in chance.<fig id="Fig5"><label>Fig. 5</label><caption><p>Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on bacterial WGS data sets. <bold>A</bold> Sensitivity (left) and precision (right) if species of bacteria are present in the database. <bold>B</bold> Sensitivity (left) and precision (right) if species of bacteria are not in the database but their genera are present in the database</p></caption><graphic xlink:href="13059_2024_3244_Fig5_HTML" id="MO5"/></fig></p>
    </sec>
    <sec id="Sec7">
      <title>Performance on classifying SARS-CoV-2 Oxford Nanopore WGS data</title>
      <p id="Par14">When a read can be uniquely classified to a sequence, Centrifuger reports the sequence ID in addition to the taxonomy ID, while many methods like Kraken2 provide only the taxonomy ID information. Centrifuger’s additional output is desirable for virus analysis. For example, SARS-CoV-2 variants’ genomes are all under the same taxonomy ID 2697049 in RefSeq and GenBank. To explore the effectiveness of sequence-level classification, we downloaded Oxford Nanopore (MinION) WGS data from two SARS-CoV-2 projects with NCBI BioProject accession numbers PRJNA673096 and PRJEB40277, where PRJNA673986 were samples from the USA and PRJEB40227 were samples from Ireland. For each project, we selected 100 samples with the greatest number of reads (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">2</xref>). Since RefSeq only had one SARS-CoV-2 sequence, we added the 92 SARS-CoV-2 sequences from GenBank and created indices comprising RefSeq human, prokaryotic, virus, and GenBank SARS-CoV-2 genomes for Centrifuger, Centrifuge, Kraken2, and Ganon, respectively. We also incorporate two long-read taxonomic classifiers: MetaMaps [<xref ref-type="bibr" rid="CR36">36</xref>] and Taxor [<xref ref-type="bibr" rid="CR37">37</xref>]. However, due to the large memory requirement for running MetaMaps and a different taxonomy structure when building the Taxor’s index, we tested these two methods with indices that only contained the 93 SARS-CoV-2 genomes. We added the parameter “--rel-cutoff 0.12 --rel-filter 0.9” to Ganon for long reads as mentioned by the experiments in Taxor. Centrifuger classified about 99.95% of all the input reads to the taxonomy ID 2697049 on average, while Kraken2 and Ganon were slightly less sensitive and classified 99.90% and 98.96% reads to the ID 2697049 on average, respectively. Centrifuge had a slightly different LCA search implementation, so it classified 98.90% of the reads to either ID 2697049 or ID 694009, where ID 694009 was the parent of ID 2697049 on the taxonomy tree. Despite using a SARS-CoV-2-only database, MetaMaps and Taxor only classified 78.04% and 70.91% reads on average, respectively. The lower sensitivity for MetaMaps was mainly due to its default setting of skipping reads shorter than 1000 bp, while it mapped almost all the remaining reads of sufficient length. When looking at the sequence-level classification, Centrifuger assigned 23.7% of the input reads with unique sequence IDs across all the samples. For the other tested methods, only Centrifuge, Ganon and Taxor reported sequence-level classifications, but they uniquely classified 15.1%, less than 0.1% and about 0.1% of the reads, respectively.</p>
      <p id="Par15">The large number of sequence-level classifications from Centrifuger allowed us to observe that the read fraction for each variant, namely sequence ID, in the Irish samples and US samples showed distinct patterns (Fig. <xref rid="Fig6" ref-type="fig">6</xref>A, heatmap with raw read fraction in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">7</xref>A). This observation was also supported by Centrifuge’s sequence-level classification results (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">7</xref>B). We further conducted a principal component analysis (PCA) based on each sequence’s read fraction, normalized by the number of reads with sequence IDs. Samples from the US and Ireland were well separated into two clusters (Fig. <xref rid="Fig6" ref-type="fig">6</xref>B) based on the first two principal components (PCs), suggesting that variants found in the two projects may have different sequence features. When inspecting the SAR-CoV-2 variant that contributed the most to the PC1 relative to the contribution to PC2, we found that variants detected in the Irish samples might have homologous regions to MT019531.1 while US samples did not (Fig. <xref rid="Fig6" ref-type="fig">6</xref>C). On the other hand, when checking PC2’s major contributors, the MT159706.2 variant was commonly detected in both projects, suggesting that PC1 captured the project-specific variants or batch effects.<fig id="Fig6"><label>Fig. 6</label><caption><p>Sequence-level classification for SARS-CoV-2 WGS samples with Centrifuger. <bold>A</bold> Fractions of reads hit on each SARS-CoV-2 variant. The rows are SARS-CoV-2 variants present in the RefSeq and GenBank, and the columns are the Oxford Nanopore WGS samples. The value for each row is standardized as <italic>z</italic>-scores. <bold>B</bold> PCA based on the read fraction for each variant. The numbers in the parenthesis are the variance fraction explained by each PC. <bold>C</bold> Left: histogram of read fractions classified to MT019531.1 which has the most significant contribution to PC1 relative to its PC2’s contribution; right: histogram of read fractions classified to MT159706.2 which has the most significant contribution to PC2 relative to its PC1’s contribution</p></caption><graphic xlink:href="13059_2024_3244_Fig6_HTML" id="MO6"/></fig></p>
    </sec>
  </sec>
  <sec id="Sec8">
    <title>Discussion</title>
    <p id="Par16">We conducted comprehensive benchmarks to demonstrate that the RBBWT can significantly reduce the memory usage of the FM-index built over a microbial genome database. For additional space savings, we store the sequence ID rather than the full coordinate information in the sampled suffix array, a strategy also used in Centrifuge. The space for the sampled sequence IDs is further trimmed by bit-compact representation, making it a less impactful factor in space usage. For example, in Centrifuger’s 41-GB index of RefSeq prokaryotic genomes, 23 GB was for the RBBWT and 17 GB was for the sampled sequence IDs. Nevertheless, the overall space complexity of Centrifuger is still O(<italic>n</italic>) words due to the structure of sampled sequence IDs, making it worse than r-index’s O(<italic>r</italic>) words in the future as the repetitiveness of the genome database may grow fast. Though users can select a sparser sampling rate to maintain the space usage, this is at the expense of time efficiency. For instance, the index size became 32 GB when increasing the sampling rate from the default 16 to 32, but the classification speed of a thread decreased from 163K read/min to 102K read/min. Future work is needed to design a representation of the sampled sequence ID in sublinear space without sacrificing classification speed for microbial genomes.</p>
    <p id="Par17">Resolving the sequence IDs for each match is a time-consuming step in Centrifuger, especially when a match hits many sequences. Centrifuger’s current implementation follows the traditional FM-index paradigm, by repeatedly applying the LF mapping for each hit until reaching a sampled sequence ID. Alternative techniques like the document array profile [<xref ref-type="bibr" rid="CR38">38</xref>] support rapid sequence ID retrieval, but are designed for highly repetitive genomes like human pangenome. Therefore, a memory-efficient algorithm for sequence ID resolving in microbial genomes is still needed. Since the default setting in Centrifuger is to report the LCA taxonomy ID for a read, algorithms like KATKA [<xref ref-type="bibr" rid="CR39">39</xref>] that directly find the LCA taxonomy ID for a k-mer might suggest ways to avoid the overhead of repeated LF mappings in Centrifuger as well.</p>
    <p id="Par18">The current Centrifuger index stores nucleotide-based sequences. The Kraken2 and Kaiju [<xref ref-type="bibr" rid="CR40">40</xref>] studies, however, observed that translated search, i.e., finding matches based on amino acids by translating nucleotides, could improve the classification accuracy for viral genomes. Since the wavelet tree data structure supports arbitrary alphabet sets, the RBBWT representation can be naturally extended to process amino acid sequences. RLBWT and RBBWT’s implementations are scalable for large alphabet set sizes, with a factor of <inline-formula id="IEq14"><alternatives><tex-math id="M27">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{log}}\left(\sigma \right)$$\end{document}</tex-math><mml:math id="M28"><mml:mrow><mml:mtext>log</mml:mtext><mml:mfenced close=")" open="("><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq14.gif"/></alternatives></inline-formula> or the entropy in the space complexity. We found an alternative form of run-length encoded BWT, exported from ropeBWT2 [<xref ref-type="bibr" rid="CR41">41</xref>] (with -dRo option) as the Fermi’s [<xref ref-type="bibr" rid="CR42">42</xref>] format. RopeBWT2’s representation was 12.5% smaller than RLBWT on average with comparable rank query speed as RLBWT when compressing <italic>Escherichia fergusonii</italic>’s genomes. The slimmer size of ropeBWT2’s output might be attributed to its implementation being designed for small <inline-formula id="IEq15"><alternatives><tex-math id="M29">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M30"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq15.gif"/></alternatives></inline-formula>, where its space complexity is linear to <inline-formula id="IEq16"><alternatives><tex-math id="M31">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M32"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq16.gif"/></alternatives></inline-formula>. This may suggest that the efficiency of RBBWT and Centrifuger could be further improved for nucleotide search with tailored implementations that are less scalable for <inline-formula id="IEq17"><alternatives><tex-math id="M33">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M34"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq17.gif"/></alternatives></inline-formula>.</p>
    <p id="Par19">Besides taxonomic classification, another important problem in metagenomic data analysis is taxonomic profiling, i.e., determining the abundance for each species or at user-specified taxonomic ranks. It is feasible to profile the abundances directly without taxonomic classification for reads, such as in Meta-Kallisto [<xref ref-type="bibr" rid="CR43">43</xref>] and Sylph [<xref ref-type="bibr" rid="CR44">44</xref>]. However, many profiling methods still require taxonomic classification results which can identify species of low abundance with few reads supporting them. For instance, Bracken uses Kraken2’s input for taxonomic profiling with a Bayesian method [<xref ref-type="bibr" rid="CR45">45</xref>]. Ganon, KMCP, and Taxor, which are benchmarked in this work, need to conduct taxonomic classifications before profiling. Centrifuge integrates the abundance estimation based on the Expectation–Maximization (EM) algorithm [<xref ref-type="bibr" rid="CR46">46</xref>] internally. After the release of Centrifuge, some methods, like AGAMEMNON [<xref ref-type="bibr" rid="CR47">47</xref>] and Centrifuge+ [<xref ref-type="bibr" rid="CR48">48</xref>], improve the profiling accuracy by adjusting the likelihood function and the EM algorithm procedure. We still need to systematically compare these profiling techniques and either integrate them into Centrifuger or make Centrifuger’s output compatible with these methods in the future. For example, Centrifuger provides the script to summarize the classification results into a Kraken-style report file that can serve as the input for Bracken.</p>
  </sec>
  <sec id="Sec9">
    <title>Conclusions</title>
    <p id="Par20">Centrifuger is an efficient and accurate taxonomic classification method for processing sequencing data, including metagenomic sequencing data. Centrifuger adopts a novel compact data structure, run-block compressed sequence, to achieve sublinear storage space for BWT sequence without sacrificing much time efficiency. Specifically, Centrifuger can represent the 140 GBp Refseq prokaryotic genomes with an index of size 41 GB and classifies about 163K microbial reads every minute per thread. Furthermore, the lossless representation nature and the unconstrained pattern match length help Centrifuger achieve significantly better accuracy, in both sensitivity and precision, for classifications at the species or genus level. We expect that Centrifuger will contribute to microbiome studies by allowing the incorporation of the recent, more comprehensive microbial genome database. Centrifuger is a free open-source software released under the MIT license and is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link>.</p>
  </sec>
  <sec id="Sec10">
    <title>Methods</title>
    <sec id="Sec11">
      <title>Sequencing data and benchmark details</title>
      <p id="Par21">We generated the simulated data from the current RefSeq database using Mason v0.1.2 [<xref ref-type="bibr" rid="CR30">30</xref>] with the option “illumina -pi 0 -pd 0 -pmms 2.5 -s 17 -N 2000000 -n 100 -mp -sq -hs 0 -hi 0 -i”, which simulated two million 100-bp read pairs with 1% error rate. We further filtered the reads from the sequences without taxonomy information and kept the first one million read pairs as the final simulated data set. We also obtained one million randomly selected 100-bp read pairs using the simulator ART v2.5.8 [<xref ref-type="bibr" rid="CR31">31</xref>] with Illumina profile setting (“art_illumina -ss HS25 -m 1000 -s 100 -l 100 -f 0.003”) followed by the same filtration procedure as was used for Mason. The error rate of Art-generated simulated data was estimated to be around 0.15% by examining the aln file produced by Art. In addition to our own simulated data, we downloaded the 10 simulated samples from the CAMI2 Challenge datasets at <ext-link ext-link-type="uri" xlink:href="https://frl.publisso.de/data/frl:6425521/strain/short_read/">https://frl.publisso.de/data/frl:6425521/strain/short_read/</ext-link> by lexicographical order, i.e. sample_0 to sample_9. For the bacteria WGS data, we first downloaded the RunInfo from NIH NCBI SRA using the search word “(“Bacteria”[Organism] OR “Bacteria Latreille et al. 1825”[Organism]) AND (“2022/01/01”[MDAT]: “2023/08/01”[MDAT]) AND (“biomol dna”[Properties] AND “strategy wgs”[Properties] AND “platform illumina”[Properties] AND “filetype fastq”[Properties])”. Then based on whether the species or genus is present in the RefSeq database, we randomly pick 100 SRA IDs (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">3</xref>), without repeating species or genus, for species-in and species-not-in evaluations, respectively.</p>
      <p id="Par22">We benchmarked the performance of Centrifuger v1.0.1, Centrifuge v1.0.4, and Kraken2 v2.1.3, Ganon v2.0.0, and KMCP 0.9.4 in this study. For the application on long-read data sets, we also tested MetaMap with GitHub commit ID 633d2e0 and Taxor v0.1.0. Taxonomy information and microbial genomes were downloaded using the “centrifuger-download” script in June 2023. Each classifier was used to build its own index on dustmasked [<xref ref-type="bibr" rid="CR49">49</xref>] genome sequences. Kraken2 used its own built-in masking module. Though we used Ganon v2.0.0 in evaluations, we failed to create the index with the hierarchical interleaved bloom filter data structure implemented in this version [<xref ref-type="bibr" rid="CR50">50</xref>]. Therefore, we used the index based on the interleaved bloom filter (--filter-type ibf) for Ganon, and we referred to this method as “Ganon” rather than Ganon2. The commands used to run each method are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">4</xref>. Methods like Centrifuge, Ganon, and KMCP might report multiple equally good taxonomy IDs for a read, and we merged them into LCAs before the evaluations. Ganon’s default option for coalescing the taxonomy IDs of a multiple-classified read is to reassign the read to the taxonomy ID with the highest abundance inferred by the EM algorithm using the initial classifications. This approach substantially improves Ganon’s classification sensitivity at lower taxonomy levels, leading to a higher F1 score. For example, in the Mason-generated simulated data, Ganon with reassignment’s F1 score at the species level was 1.3% and 12.1% higher than Centrifuger’s and Ganon using LCA’s, respectively (Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Fig. S<xref rid="MOESM1" ref-type="media">8</xref>). We implemented a similar workflow to reassign the multiple-classified reads from Centrifuger. Specifically, we ran Centrifuger with “-k 5” so that the initial classification for a read could include up to five equally good classification results. We then calculated the abundance for each taxonomy ID in the taxonomy tree based on the number of reads classified to this taxonomy node and its subtree. For a multiple-classified read, we included its count starting from its LCA. Lastly, we reassigned the taxonomy ID with the highest abundance among the initial results to a read as the final classification result. When there were multiple highest-abundance taxonomy IDs for a read, we took their LCA as the final result. We observed this reassignment strategy without the EM algorithm improved Centrifuger’s classification results at lower taxonomy levels too, with the F1 score 2.7% higher than Ganon’s reassignment results at the species level (Fig. S<xref rid="MOESM1" ref-type="media">8</xref>). However, the strategy of hard reassignment based on the taxonomic profiling result may result in systematic underestimations of taxa with lower abundances. Therefore, we continue to utilize the LCA strategy to process multiple classified reads, where the results can be directly used for downstream analyses, including taxonomic profiling.</p>
      <p id="Par23">All the benchmarks were conducted on the 2.8 GHz AMD EPYC 7543 32-core processor machine with 512 GB memory. The memory footprint was measured as the “Maximum resident set size” value from the “/usr/bin/time -v” command. When measuring speed, each classifier was run four times. The reported classification speed was calculated by taking the fastest runtime after excluding index loading time.</p>
    </sec>
    <sec id="Sec12">
      <title>Run-block compressed sequence</title>
      <p id="Par24">Run-block compressed sequence is a compact data structure supporting rank queries for any position in a sequence. For the input sequence <italic>T</italic> of length <italic>n</italic> and alphabet set <inline-formula id="IEq18"><alternatives><tex-math id="M35">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\Sigma$$\end{document}</tex-math><mml:math id="M36"><mml:mi mathvariant="normal">Σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq18.gif"/></alternatives></inline-formula> of size <inline-formula id="IEq19"><alternatives><tex-math id="M37">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sigma$$\end{document}</tex-math><mml:math id="M38"><mml:mi>σ</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq19.gif"/></alternatives></inline-formula>, we first partition <italic>T</italic> into equal-size substrings (blocks), <inline-formula id="IEq20"><alternatives><tex-math id="M39">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{1},{T}_{2},\dots ,{T}_{m}$$\end{document}</tex-math><mml:math id="M40"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mn>1</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mn>2</mml:mn></mml:msub><mml:mo>,</mml:mo><mml:mo>⋯</mml:mo><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>m</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq20.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq21"><alternatives><tex-math id="M41">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$m=\lceil \frac{n}{b}\rceil$$\end{document}</tex-math><mml:math id="M42"><mml:mrow><mml:mi>m</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq21.gif"/></alternatives></inline-formula> and <inline-formula id="IEq22"><alternatives><tex-math id="M43">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M44"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq22.gif"/></alternatives></inline-formula> is the block size. The first component of the run-block compressed sequence is a bit vector <inline-formula id="IEq23"><alternatives><tex-math id="M45">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M46"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq23.gif"/></alternatives></inline-formula> of size <italic>m</italic> indicating whether the corresponding block is a run block, i.e., a block consisting of one alphabet character repeated <italic>b</italic> times. We will then split <italic>T</italic> into two substrings, by concatenating run blocks and non-run blocks, i.e., <inline-formula id="IEq24"><alternatives><tex-math id="M47">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{R}^{\prime}}={T}_{{i}_{1}}{T}_{{i}_{2}}\dots {T}_{{i}_{l}}, {T}_{P}={T}_{{j}_{1}}{T}_{{j}_{2}}\dots {T}_{{j}_{m-l}}$$\end{document}</tex-math><mml:math id="M48"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>j</mml:mi><mml:mrow><mml:mi>m</mml:mi><mml:mo>-</mml:mo><mml:mi>l</mml:mi></mml:mrow></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq24.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq25"><alternatives><tex-math id="M49">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{i}_{k}}$$\end{document}</tex-math><mml:math id="M50"><mml:msub><mml:mi>T</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq25.gif"/></alternatives></inline-formula> is the <italic>k-</italic>th run blocks in T with the alphabet <inline-formula id="IEq26"><alternatives><tex-math id="M51">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\sigma }_{{i}_{k}}$$\end{document}</tex-math><mml:math id="M52"><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>k</mml:mi></mml:msub></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq26.gif"/></alternatives></inline-formula>. In the notation, we will use the subscript “R” to denote run-block compressed sequence, and “P” to represent the plain uncompressed sequence. Since the last block can still be determined as a run or non-run block even if it is shorter than <inline-formula id="IEq27"><alternatives><tex-math id="M53">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M54"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq27.gif"/></alternatives></inline-formula>, we can assume that <inline-formula id="IEq28"><alternatives><tex-math id="M55">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$n$$\end{document}</tex-math><mml:math id="M56"><mml:mi>n</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq28.gif"/></alternatives></inline-formula> is divisible by <inline-formula id="IEq29"><alternatives><tex-math id="M57">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M58"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq29.gif"/></alternatives></inline-formula> for simplicity. <inline-formula id="IEq30"><alternatives><tex-math id="M59">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{{R}^{\prime}}$$\end{document}</tex-math><mml:math id="M60"><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq30.gif"/></alternatives></inline-formula> can be losslessly represented as <inline-formula id="IEq31"><alternatives><tex-math id="M61">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}={\sigma }_{{i}_{1}}{\sigma }_{{i}_{2}}\dots {\sigma }_{{i}_{l}}$$\end{document}</tex-math><mml:math id="M62"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:msub><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:msub><mml:mo>⋯</mml:mo><mml:msub><mml:mi>σ</mml:mi><mml:msub><mml:mi>i</mml:mi><mml:mi>l</mml:mi></mml:msub></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq31.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq32"><alternatives><tex-math id="M63">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left|{T}_{R}\right|=\frac{|{T}_{{R}^{\prime}}|}{b}$$\end{document}</tex-math><mml:math id="M64"><mml:mrow><mml:mfenced close="|" open="|"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mfrac><mml:mrow><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:msup><mml:mrow><mml:mi>R</mml:mi></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:msub><mml:mrow><mml:mo stretchy="false">|</mml:mo></mml:mrow></mml:mrow><mml:mi>b</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq32.gif"/></alternatives></inline-formula>. The space saving comes from using one character to represent a run block of size <italic>b</italic>, a strategy we call run-block compression. For example, for a sequence <italic>T</italic> = “AAAAACGTAAAA”, when <italic>b</italic> = 4, it will be split into “AAAAAAAA” and “ACGT” guided by <inline-formula id="IEq33"><alternatives><tex-math id="M65">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}=101$$\end{document}</tex-math><mml:math id="M66"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>101</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq33.gif"/></alternatives></inline-formula>. For the subsequence formed by the run blocks, we will use one character to represent each block in it. Therefore, the example sequence <italic>T</italic> will be represented by two sequences <inline-formula id="IEq34"><alternatives><tex-math id="M67">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M68"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq34.gif"/></alternatives></inline-formula>=“AA” and <inline-formula id="IEq35"><alternatives><tex-math id="M69">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M70"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq35.gif"/></alternatives></inline-formula>=“ACGT”, reducing the original length from 12 to 6 characters (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). We next show that run-block compression allows fast rank queries and sublinear space usage as the repetitiveness in the sequence increases. The rank query is the core operation in LF mapping during the backward search in FM-index.</p>
      <p id="Par25"><bold>Theorem 1 </bold><italic>The time complexity for rank query on run-block compressed sequence is</italic><inline-formula id="IEq36"><alternatives><tex-math id="M71">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M72"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq36.gif"/></alternatives></inline-formula>.</p>
      <p id="Par26"><italic>Proof</italic>: We will use the function <inline-formula id="IEq37"><alternatives><tex-math id="M73">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M74"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq37.gif"/></alternatives></inline-formula> to denote the rank for the alphabet <italic>c</italic> at position <italic>i</italic> of text <italic>T</italic>, where the index is 1-based. Equivalently, <inline-formula id="IEq38"><alternatives><tex-math id="M75">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M76"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq38.gif"/></alternatives></inline-formula> counts the number of <italic>c</italic>’s that occur before <italic>T</italic>[<italic>i</italic>], including <italic>T</italic>[<italic>i</italic>]. We can decompose the <inline-formula id="IEq39"><alternatives><tex-math id="M77">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M78"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq39.gif"/></alternatives></inline-formula> to the sum of corresponding ranks with respect to <inline-formula id="IEq40"><alternatives><tex-math id="M79">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M80"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq40.gif"/></alternatives></inline-formula> and <inline-formula id="IEq41"><alternatives><tex-math id="M81">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M82"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq41.gif"/></alternatives></inline-formula>. There are two cases, depending on whether <italic>i</italic> is in a run block or not. Let <italic>k</italic> denote the block containing <italic>i</italic>, namely <inline-formula id="IEq42"><alternatives><tex-math id="M83">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$k=\lceil\frac{i}{b}\rceil$$\end{document}</tex-math><mml:math id="M84"><mml:mrow><mml:mi>k</mml:mi><mml:mo>=</mml:mo><mml:mo>⌈</mml:mo><mml:mfrac><mml:mi>i</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>⌉</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq42.gif"/></alternatives></inline-formula>. We compute the number of run blocks and non-run blocks before the block containing <italic>k</italic> as <inline-formula id="IEq43"><alternatives><tex-math id="M85">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${r}_{r}={rank}_{1}\left(k,{B}_{R}\right), \mathrm{and}\space\overline{{r }_{r}}={rank}_{0}\left(k,{B}_{R}\right)=k-{r}_{r}$$\end{document}</tex-math><mml:math id="M86"><mml:mrow><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>,</mml:mo><mml:mi mathvariant="normal">and</mml:mi><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>=</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>k</mml:mi><mml:mo>-</mml:mo><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq43.gif"/></alternatives></inline-formula>, respectively. The <inline-formula id="IEq44"><alternatives><tex-math id="M87">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{1}\left(k,{B}_{R}\right)$$\end{document}</tex-math><mml:math id="M88"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mn>1</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:mi>k</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq44.gif"/></alternatives></inline-formula> is the conventional rank query on bit vectors counting the number of 1 s before or on position <italic>k</italic> in <italic>B</italic><sub><italic>R</italic></sub>. With these notations, we can write the equations to compute <inline-formula id="IEq45"><alternatives><tex-math id="M89">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M90"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq45.gif"/></alternatives></inline-formula>.</p>
      <p id="Par27">When <italic>i</italic> is in a run block, i.e., <inline-formula id="IEq46"><alternatives><tex-math id="M91">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}[k]=1$$\end{document}</tex-math><mml:math id="M92"><mml:mrow><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mi>k</mml:mi><mml:mo stretchy="false">]</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq46.gif"/></alternatives></inline-formula>, we have:<disp-formula id="Equa"><alternatives><tex-math id="M93">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}\left(i, T\right)=b\left({rank}_{c}\left({r}_{r},{T}_{R}\right)\right)+{rank}_{c}\left(\overline{{r }_{r}}b, {T}_{P}\right)+{I}_{{T}_{R}\left[{r}_{r}\right]=c}\left(\left(i-1\right)\%b+1-b\right)$$\end{document}</tex-math><mml:math id="M94" display="block"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mi>b</mml:mi><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced><mml:mo>%</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>-</mml:mo><mml:mi>b</mml:mi></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equa.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par28">Where <inline-formula id="IEq47"><alternatives><tex-math id="M95">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M96"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq47.gif"/></alternatives></inline-formula> is an indicator that equals 1 if the subscript is true and equals to 0 otherwise. The last term is the special treatment if<italic> i</italic> is in a run block with alphabet character <italic>c</italic>. When <italic>i</italic> is in a non-run block, we have:<disp-formula id="Equb"><alternatives><tex-math id="M97">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}\left(i, T\right)=b\left({rank}_{c}\left({r}_{r},{T}_{R}\right)\right)+{rank}_{c}\left(\left(\overline{{r }_{r}}-1\right)b+(i-1)\%b+1, {T}_{P}\right)$$\end{document}</tex-math><mml:math id="M98" display="block"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:mi>b</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced><mml:mo>+</mml:mo><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mfenced close=")" open="("><mml:mfenced close=")" open="("><mml:mover><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub><mml:mo>¯</mml:mo></mml:mover><mml:mo>-</mml:mo><mml:mn>1</mml:mn></mml:mfenced><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>-</mml:mo><mml:mn>1</mml:mn><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>%</mml:mo><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>,</mml:mo><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equb.gif" position="anchor"/></alternatives></disp-formula></p>
      <p id="Par29">If we apply the wavelet tree to represent <inline-formula id="IEq48"><alternatives><tex-math id="M99">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M100"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq48.gif"/></alternatives></inline-formula> and <inline-formula id="IEq49"><alternatives><tex-math id="M101">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M102"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq49.gif"/></alternatives></inline-formula>, then <inline-formula id="IEq50"><alternatives><tex-math id="M103">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M104"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq50.gif"/></alternatives></inline-formula> can be answered by at most two wavelet tree rank queries, one rank query on bit vector <inline-formula id="IEq51"><alternatives><tex-math id="M105">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{r}$$\end{document}</tex-math><mml:math id="M106"><mml:msub><mml:mi>B</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq51.gif"/></alternatives></inline-formula>, and one wavelet tree access on <inline-formula id="IEq52"><alternatives><tex-math id="M107">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M108"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq52.gif"/></alternatives></inline-formula>. Therefore, the total time complexity is <inline-formula id="IEq53"><alternatives><tex-math id="M109">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$3O(log\sigma )+O\left(1\right)=O(log\sigma )$$\end{document}</tex-math><mml:math id="M110"><mml:mrow><mml:mn>3</mml:mn><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn></mml:mfenced><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq53.gif"/></alternatives></inline-formula>.</p>
      <p id="Par30">The naïve implementation for calculating <inline-formula id="IEq54"><alternatives><tex-math id="M111">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M112"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq54.gif"/></alternatives></inline-formula> is to access the value of <inline-formula id="IEq55"><alternatives><tex-math id="M113">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}\left[{r}_{r}\right]$$\end{document}</tex-math><mml:math id="M114"><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq55.gif"/></alternatives></inline-formula>, requiring <inline-formula id="IEq56"><alternatives><tex-math id="M115">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(log\sigma )$$\end{document}</tex-math><mml:math id="M116"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mi>l</mml:mi><mml:mi>o</mml:mi><mml:mi>g</mml:mi><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq56.gif"/></alternatives></inline-formula> time if using wavelet tree. We note that the <inline-formula id="IEq57"><alternatives><tex-math id="M117">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${I}_{{T}_{R}\left[{r}_{r}\right]=c}$$\end{document}</tex-math><mml:math id="M118"><mml:msub><mml:mi>I</mml:mi><mml:mrow><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub><mml:mfenced close="]" open="["><mml:msub><mml:mi>r</mml:mi><mml:mi>r</mml:mi></mml:msub></mml:mfenced><mml:mo>=</mml:mo><mml:mi>c</mml:mi></mml:mrow></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq57.gif"/></alternatives></inline-formula> can also be inferred during the wavelet tree’s rank query on <inline-formula id="IEq58"><alternatives><tex-math id="M119">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M120"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq58.gif"/></alternatives></inline-formula>, by checking whether the bits labeling the relevant root-to-leaf path form the bit representation for c. This strategy further accelerates the <inline-formula id="IEq59"><alternatives><tex-math id="M121">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${rank}_{c}(i, T)$$\end{document}</tex-math><mml:math id="M122"><mml:mrow><mml:msub><mml:mrow><mml:mi mathvariant="italic">rank</mml:mi></mml:mrow><mml:mi>c</mml:mi></mml:msub><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>i</mml:mi><mml:mo>,</mml:mo><mml:mi>T</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq59.gif"/></alternatives></inline-formula> operation, and is also applicable to other compressed sequence representations, including RLBWT.</p>
      <p id="Par31"><bold>Theorem 2 </bold><italic>The space complexity of run-block compressed sequence is</italic><inline-formula id="IEq60"><alternatives><tex-math id="M123">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O(\frac{n}{\sqrt{l}}{\text{log}}\sigma )$$\end{document}</tex-math><mml:math id="M124"><mml:mrow><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq60.gif"/></alternatives></inline-formula><italic>bits, where</italic><inline-formula id="IEq61"><alternatives><tex-math id="M125">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l=\frac{n}{r}$$\end{document}</tex-math><mml:math id="M126"><mml:mrow><mml:mi>l</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq61.gif"/></alternatives></inline-formula><italic>is the average run length and r is the number of runs in the sequence</italic>.</p>
      <p id="Par32"><italic>Proof</italic>: The key observation is that each non-run block contains at least one run head. Therefore, we have at most<italic> r</italic> non-run blocks. As a result, the minimum length of <inline-formula id="IEq62"><alternatives><tex-math id="M127">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M128"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq62.gif"/></alternatives></inline-formula> is <inline-formula id="IEq63"><alternatives><tex-math id="M129">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}-r$$\end{document}</tex-math><mml:math id="M130"><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>r</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq63.gif"/></alternatives></inline-formula>, and the maximum length of <inline-formula id="IEq64"><alternatives><tex-math id="M131">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M132"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq64.gif"/></alternatives></inline-formula> is <inline-formula id="IEq65"><alternatives><tex-math id="M133">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$rb$$\end{document}</tex-math><mml:math id="M134"><mml:mrow><mml:mi mathvariant="italic">rb</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq65.gif"/></alternatives></inline-formula>. The length of the <inline-formula id="IEq66"><alternatives><tex-math id="M135">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M136"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq66.gif"/></alternatives></inline-formula> is <inline-formula id="IEq67"><alternatives><tex-math id="M137">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}$$\end{document}</tex-math><mml:math id="M138"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq67.gif"/></alternatives></inline-formula>.</p>
      <p id="Par33">We can use wavelet trees to represent the run-block subsequence and the plain subsequence. Let <inline-formula id="IEq68"><alternatives><tex-math id="M139">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A$$\end{document}</tex-math><mml:math id="M140"><mml:mi>A</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq68.gif"/></alternatives></inline-formula> be the number of bits to represent one character in the wavelet tree, then the asymptotic total space usage in bits is <inline-formula id="IEq69"><alternatives><tex-math id="M141">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{b}+A\left(\frac{n}{b}-r\right)+Arb$$\end{document}</tex-math><mml:math id="M142"><mml:mrow><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>r</mml:mi></mml:mfenced><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq69.gif"/></alternatives></inline-formula>, where the terms are for <inline-formula id="IEq70"><alternatives><tex-math id="M143">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${B}_{R}$$\end{document}</tex-math><mml:math id="M144"><mml:msub><mml:mi>B</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq70.gif"/></alternatives></inline-formula>, <inline-formula id="IEq71"><alternatives><tex-math id="M145">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{R}$$\end{document}</tex-math><mml:math id="M146"><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq71.gif"/></alternatives></inline-formula>, and <inline-formula id="IEq72"><alternatives><tex-math id="M147">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${T}_{P}$$\end{document}</tex-math><mml:math id="M148"><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq72.gif"/></alternatives></inline-formula>, respectively. We can rewrite the space usage bound as:<disp-formula id="Equc"><alternatives><tex-math id="M149">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S(b)=Arb+\frac{1+An}{b}-Ar,$$\end{document}</tex-math><mml:math id="M150" display="block"><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:mi>b</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mi>b</mml:mi><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mi>b</mml:mi></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equc.gif" position="anchor"/></alternatives></disp-formula>which is minimized when <inline-formula id="IEq73"><alternatives><tex-math id="M151">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b=\sqrt{\frac{1+An}{Ar}}$$\end{document}</tex-math><mml:math id="M152"><mml:mrow><mml:mi>b</mml:mi><mml:mo>=</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq73.gif"/></alternatives></inline-formula>. Because <italic>b</italic> is an integer, we take the block size as <inline-formula id="IEq74"><alternatives><tex-math id="M153">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}=\lceil\sqrt{\frac{1+An}{Ar}}\rceil$$\end{document}</tex-math><mml:math id="M154"><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>=</mml:mo><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq74.gif"/></alternatives></inline-formula>. Substituting this for <inline-formula id="IEq75"><alternatives><tex-math id="M155">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$b$$\end{document}</tex-math><mml:math id="M156"><mml:mi>b</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq75.gif"/></alternatives></inline-formula>, we have:<disp-formula id="Equd"><alternatives><tex-math id="M157">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left({b}^{*}\right)=Ar\lceil\sqrt{\frac{1+An}{Ar}}\rceil+\frac{1+An}{\lceil\sqrt{\frac{1+An}{Ar}}\rceil}-Ar&lt;\sqrt{Ar\left(1+An\right)}+\sqrt{Ar\left(1+An\right)}=O\left(A\sqrt{nr}\right),$$\end{document}</tex-math><mml:math id="M158" display="block"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>=</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>&lt;</mml:mo><mml:msqrt><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mfenced></mml:mrow></mml:msqrt><mml:mo>+</mml:mo><mml:msqrt><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mfenced close=")" open="("><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mfenced></mml:mrow></mml:msqrt><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mi>A</mml:mi><mml:msqrt><mml:mrow><mml:mi mathvariant="italic">nr</mml:mi></mml:mrow></mml:msqrt></mml:mfenced><mml:mo>,</mml:mo></mml:mrow></mml:math><graphic xlink:href="13059_2024_3244_Article_Equd.gif" position="anchor"/></alternatives></disp-formula>where the inequality is based on<inline-formula id="IEq76"><alternatives><tex-math id="M159">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\sqrt{\frac{1+An}{Ar}}\le \lceil\sqrt{\frac{1+An}{Ar}}\rceil&lt;\sqrt{\frac{1+An}{Ar}}+1$$\end{document}</tex-math><mml:math id="M160"><mml:mrow><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>≤</mml:mo><mml:mrow><mml:mo>⌈</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>⌉</mml:mo></mml:mrow><mml:mo>&lt;</mml:mo><mml:msqrt><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:mrow><mml:mi mathvariant="italic">Ar</mml:mi></mml:mrow></mml:mfrac></mml:msqrt><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq76.gif"/></alternatives></inline-formula>. We can rewrite <inline-formula id="IEq77"><alternatives><tex-math id="M161">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left({b}^{*}\right)$$\end{document}</tex-math><mml:math id="M162"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq77.gif"/></alternatives></inline-formula> by using the definition of <inline-formula id="IEq78"><alternatives><tex-math id="M163">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$r=\frac{n}{l}$$\end{document}</tex-math><mml:math id="M164"><mml:mrow><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mfrac><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mfrac></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq78.gif"/></alternatives></inline-formula>, obtaining <inline-formula id="IEq79"><alternatives><tex-math id="M165">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S({b}^{*})=O\left(A\frac{n}{\sqrt{l}} \right).$$\end{document}</tex-math><mml:math id="M166"><mml:mrow><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mi>A</mml:mi><mml:mfrac><mml:mi>n</mml:mi><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac></mml:mfenced><mml:mo>.</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq79.gif"/></alternatives></inline-formula> To ensure the worst rank query time on the data structure is small, the wavelet tree is in the shape of a balanced binary tree in our implementation, and <inline-formula id="IEq80"><alternatives><tex-math id="M167">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$A=O({\text{log}}\sigma )$$\end{document}</tex-math><mml:math id="M168"><mml:mrow><mml:mi>A</mml:mi><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq80.gif"/></alternatives></inline-formula>. Further space could be reduced if we use techniques like Huffman-shaped wavelet tree [<xref ref-type="bibr" rid="CR51">51</xref>], and <italic>A</italic> will be <inline-formula id="IEq81"><alternatives><tex-math id="M169">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({H}_{0}\left({T}_{R}\right)\right)$$\end{document}</tex-math><mml:math id="M170"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>T</mml:mi><mml:mi>R</mml:mi></mml:msub></mml:mfenced></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq81.gif"/></alternatives></inline-formula> and <inline-formula id="IEq82"><alternatives><tex-math id="M171">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left({H}_{0}\left({T}_{P}\right)\right)$$\end{document}</tex-math><mml:math id="M172"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:msub><mml:mi>H</mml:mi><mml:mn>0</mml:mn></mml:msub><mml:mfenced close=")" open="("><mml:msub><mml:mi>T</mml:mi><mml:mi>P</mml:mi></mml:msub></mml:mfenced></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq82.gif"/></alternatives></inline-formula> for <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, respectively, where <italic>H</italic><sub>0</sub> is the Shannon entropy of the sequence.</p>
      <p id="Par34">The <inline-formula id="IEq83"><alternatives><tex-math id="M173">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M174"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq83.gif"/></alternatives></inline-formula> found in the proof is to bound the worst-case space usage, where each non-run block has exactly one run head in the middle. The optimal block size can be different. For example, when every run has an identical length, the optimal block size is <inline-formula id="IEq84"><alternatives><tex-math id="M175">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{n}{r}$$\end{document}</tex-math><mml:math id="M176"><mml:mfrac><mml:mi>n</mml:mi><mml:mi>r</mml:mi></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq84.gif"/></alternatives></inline-formula> and every block is run-block compressible, yielding <inline-formula id="IEq85"><alternatives><tex-math id="M177">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$O\left(\frac{n}{l}{\text{log}}\sigma \right)$$\end{document}</tex-math><mml:math id="M178"><mml:mrow><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mi>n</mml:mi><mml:mi>l</mml:mi></mml:mfrac><mml:mtext>log</mml:mtext><mml:mi>σ</mml:mi></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq85.gif"/></alternatives></inline-formula>-bit space complexity. To find the appropriate block size efficiently, we search the size of powers of 2, e.g., 4, 8, 16,.., and select the block size <inline-formula id="IEq86"><alternatives><tex-math id="M179">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\widehat{b}$$\end{document}</tex-math><mml:math id="M180"><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq86.gif"/></alternatives></inline-formula> with the least space usage among them. Suppose <inline-formula id="IEq87"><alternatives><tex-math id="M181">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\widehat{b}}^{\prime}$$\end{document}</tex-math><mml:math id="M182"><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq87.gif"/></alternatives></inline-formula> is the smallest power of 2 that is larger or equal to the block size <inline-formula id="IEq88"><alternatives><tex-math id="M183">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M184"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq88.gif"/></alternatives></inline-formula> defined in the proof, then we have <inline-formula id="IEq89"><alternatives><tex-math id="M185">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${{b}^{*}\le \widehat{b}}^{\prime}\le 2{b}^{*}$$\end{document}</tex-math><mml:math id="M186"><mml:mrow><mml:msup><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq89.gif"/></alternatives></inline-formula>. Therefore, <inline-formula id="IEq90"><alternatives><tex-math id="M187">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left(\widehat{b}\right)\le S\left({\widehat{b}}^{\prime}\right)\le 2Ar{b}^{*}+\frac{1+An}{{b}^{*}}-Ar\le 2S\left({b}^{*}\right)+Ar=O\left(\frac{An}{ \sqrt{l}}\right)$$\end{document}</tex-math><mml:math id="M188"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mfenced><mml:mo>≤</mml:mo><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mo>′</mml:mo></mml:msup></mml:mfenced><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>+</mml:mo><mml:mfrac><mml:mrow><mml:mn>1</mml:mn><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>n</mml:mi></mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfrac><mml:mo>-</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mfenced><mml:mo>+</mml:mo><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>=</mml:mo><mml:mi>O</mml:mi><mml:mfenced close=")" open="("><mml:mfrac><mml:mrow><mml:mi mathvariant="italic">An</mml:mi></mml:mrow><mml:msqrt><mml:mi>l</mml:mi></mml:msqrt></mml:mfrac></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq90.gif"/></alternatives></inline-formula>, where the second inequality is by applying <inline-formula id="IEq91"><alternatives><tex-math id="M189">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}\le \widehat{b}^{\prime}\le 2{b}^{*}$$\end{document}</tex-math><mml:math id="M190"><mml:mrow><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo>≤</mml:mo><mml:msup><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover><mml:mo>′</mml:mo></mml:msup><mml:mo>≤</mml:mo><mml:mn>2</mml:mn><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq91.gif"/></alternatives></inline-formula>. Therefore, the block size inferred from inspecting powers of 2 is not a bad estimator and gives the same asymptotic space usage as <inline-formula id="IEq92"><alternatives><tex-math id="M191">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M192"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq92.gif"/></alternatives></inline-formula> in the worst case. Furthermore, since <inline-formula id="IEq93"><alternatives><tex-math id="M193">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$Ar\le A\sqrt{nr}&lt;S({b}^{*})$$\end{document}</tex-math><mml:math id="M194"><mml:mrow><mml:mi>A</mml:mi><mml:mi>r</mml:mi><mml:mo>≤</mml:mo><mml:mi>A</mml:mi><mml:msqrt><mml:mrow><mml:mi mathvariant="italic">nr</mml:mi></mml:mrow></mml:msqrt><mml:mo>&lt;</mml:mo><mml:mi>S</mml:mi><mml:mrow><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq93.gif"/></alternatives></inline-formula>, <inline-formula id="IEq94"><alternatives><tex-math id="M195">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S\left(\widehat{b}\right)$$\end{document}</tex-math><mml:math id="M196"><mml:mrow><mml:mi>S</mml:mi><mml:mfenced close=")" open="("><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq94.gif"/></alternatives></inline-formula> is no more than three times of the <inline-formula id="IEq95"><alternatives><tex-math id="M197">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$S({b}^{*})$$\end{document}</tex-math><mml:math id="M198"><mml:mrow><mml:mi>S</mml:mi><mml:mo stretchy="false">(</mml:mo><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup><mml:mo stretchy="false">)</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq95.gif"/></alternatives></inline-formula>. To reduce the bias of the sparse search space, we also inspect the space usage of block sizes <inline-formula id="IEq96"><alternatives><tex-math id="M199">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${b}^{*}$$\end{document}</tex-math><mml:math id="M200"><mml:msup><mml:mrow><mml:mi>b</mml:mi></mml:mrow><mml:mrow><mml:mrow/><mml:mo>∗</mml:mo></mml:mrow></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq96.gif"/></alternatives></inline-formula> and <inline-formula id="IEq97"><alternatives><tex-math id="M201">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\frac{3\widehat{b}}{2}$$\end{document}</tex-math><mml:math id="M202"><mml:mfrac><mml:mrow><mml:mn>3</mml:mn><mml:mover accent="true"><mml:mi>b</mml:mi><mml:mo stretchy="false">^</mml:mo></mml:mover></mml:mrow><mml:mn>2</mml:mn></mml:mfrac></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq97.gif"/></alternatives></inline-formula> before making a final decision. When <inline-formula id="IEq98"><alternatives><tex-math id="M203">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$l$$\end{document}</tex-math><mml:math id="M204"><mml:mi>l</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq98.gif"/></alternatives></inline-formula> is small, the block size minimizing the overall space usage is the length of the genome (<italic>T</italic><sub><italic>P</italic></sub> = <italic>T</italic>), and run-block compression is equivalent to the wavelet tree representation. In practice, Centrifuger uses the first one million characters of the BWT sequence instead of the full sequence to infer the block size.</p>
    </sec>
    <sec id="Sec14">
      <title>Index construction</title>
      <p id="Par35">Centrifuger uses the blockwise suffix sorting algorithm [<xref ref-type="bibr" rid="CR52">52</xref>] to build its index, as in Bowtie [<xref ref-type="bibr" rid="CR53">53</xref>] and Centrifuge. The advantage of blockwise suffix sorting is to control the overall memory footprint and parallelize the construction procedure. The array that holds the BWT sequence is pre-allocated, and the sequence is filled in block-by-block as blocks of the suffix array are constructed. Another important component in the FM-index is the sampled suffix information. During construction, the index stores the genome coordinate information for every 16th offset on the BWT, which can be adjusted by the user. After that, the offsets are transformed into sequence IDs and using a bit-efficient representation of the IDs. For example, the RefSeq prokaryotic genome database contained 75,865 sequences (including plasmids) from 34,190 strains with complete genomes, so sequence IDs can be distinguished by a 17-bit integer. Instead of saving the IDs in an array of 32-bit integers, the bit patterns are stored consecutively without any wasted space. Therefore, the total size for the bit-compact array for the sampled ID list is 17·<italic>m</italic> bits, or 0.26·<italic>m</italic> 64-bit words, where <italic>m</italic> is the number of sampled IDs.</p>
    </sec>
    <sec id="Sec15">
      <title>Taxonomic classification</title>
      <p id="Par36">For taxonomic classification, Centrifuger follows Centrifuge’s paradigm by greedily searching for semi-maximal exact matches, where only one side of a match cannot be extended to form a longer match to the database (Fig. <xref rid="Fig1" ref-type="fig">1</xref>). For each read pair, Centrifuger searches the matches twice, one using the forward strand and the other using the reverse-complement strand. Using the forward strand search as an example, Centrifuger starts from the last position of the read and extends the match backward as much as possible using LF mapping until the match cannot hit any sequence in the index. In the example in Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the first match is the right-most 60 bp. Centrifuger will then skip the next base on the read, as a putative variant or sequencing error, and start a new search. As a result, the next search starts from the 62nd bp, counting from the right end, and finds a match of length 39.</p>
      <p id="Par37">To find the best taxonomy ID for the read, Centrifuger scores the sequence IDs retrieved from the matches. Let <inline-formula id="IEq99"><alternatives><tex-math id="M205">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}_{M}$$\end{document}</tex-math><mml:math id="M206"><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq99.gif"/></alternatives></inline-formula> denote the length of a match <inline-formula id="IEq100"><alternatives><tex-math id="M207">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M208"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq100.gif"/></alternatives></inline-formula>. Centrifuger will filter a short match <inline-formula id="IEq101"><alternatives><tex-math id="M209">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M210"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq101.gif"/></alternatives></inline-formula> if <inline-formula id="IEq102"><alternatives><tex-math id="M211">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$2n/{4}^{{l}_{M}}&gt;0.01$$\end{document}</tex-math><mml:math id="M212"><mml:mrow><mml:mn>2</mml:mn><mml:mi>n</mml:mi><mml:mo stretchy="false">/</mml:mo><mml:msup><mml:mrow><mml:mn>4</mml:mn></mml:mrow><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:msup><mml:mo>&gt;</mml:mo><mml:mn>0.01</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq102.gif"/></alternatives></inline-formula>, as it is likely a random match. For example, we kept the matches with lengths greater or equal to 23 as valid matches when classifying reads using the 140 GBp RefSeq prokaryotic database. Each valid match <inline-formula id="IEq103"><alternatives><tex-math id="M213">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M214"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq103.gif"/></alternatives></inline-formula> of length <inline-formula id="IEq104"><alternatives><tex-math id="M215">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${l}_{M}$$\end{document}</tex-math><mml:math id="M216"><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq104.gif"/></alternatives></inline-formula> will contribute a score <inline-formula id="IEq105"><alternatives><tex-math id="M217">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\left({l}_{M}-15\right)}^{2}$$\end{document}</tex-math><mml:math id="M218"><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq105.gif"/></alternatives></inline-formula> to the corresponding strand, and the matches from the less-scored strand will be removed. Centrifuger resolves sequence IDs contained in each valid match by using LF-mapping in the compressed FM-index to find sampled sequence IDs. Specifically, each match <inline-formula id="IEq106"><alternatives><tex-math id="M219">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M220"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq106.gif"/></alternatives></inline-formula> corresponds to an interval on the BWT sequence, denoted as <inline-formula id="IEq107"><alternatives><tex-math id="M221">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M222"><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq107.gif"/></alternatives></inline-formula>, then we will resolve the sequence ID for each position on the BWT sequence between <inline-formula id="IEq108"><alternatives><tex-math id="M223">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$\left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M224"><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq108.gif"/></alternatives></inline-formula>, by applying LF-mapping. The LF-mapping procedure for resolving the position <inline-formula id="IEq109"><alternatives><tex-math id="M225">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p\in \left[{s}_{M},{e}_{M}\right]$$\end{document}</tex-math><mml:math id="M226"><mml:mrow><mml:mi>p</mml:mi><mml:mo>∈</mml:mo><mml:mfenced close="]" open="["><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>,</mml:mo><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub></mml:mfenced></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq109.gif"/></alternatives></inline-formula>, terminates when it reaches a position <inline-formula id="IEq110"><alternatives><tex-math id="M227">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}$$\end{document}</tex-math><mml:math id="M228"><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq110.gif"/></alternatives></inline-formula> on the BWT sequence with a sampled sequence ID, i.e., <inline-formula id="IEq111"><alternatives><tex-math id="M229">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}\space mod\space 16=0$$\end{document}</tex-math><mml:math id="M230"><mml:mrow><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup><mml:mi>m</mml:mi><mml:mi>o</mml:mi><mml:mi>d</mml:mi><mml:mn>16</mml:mn><mml:mo>=</mml:mo><mml:mn>0</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq111.gif"/></alternatives></inline-formula> with the default parameter. The sampled sequence ID at <inline-formula id="IEq112"><alternatives><tex-math id="M231">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p^{\prime}$$\end{document}</tex-math><mml:math id="M232"><mml:msup><mml:mi>p</mml:mi><mml:mo>′</mml:mo></mml:msup></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq112.gif"/></alternatives></inline-formula> is the sequence ID corresponding to <inline-formula id="IEq113"><alternatives><tex-math id="M233">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$p$$\end{document}</tex-math><mml:math id="M234"><mml:mi>p</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq113.gif"/></alternatives></inline-formula>. In the example of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the Centrifuger found the first 60-bp exact match <inline-formula id="IEq114"><alternatives><tex-math id="M235">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${M}_{1}$$\end{document}</tex-math><mml:math id="M236"><mml:msub><mml:mi>M</mml:mi><mml:mn>1</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq114.gif"/></alternatives></inline-formula> hit sequences with IDs X, Y, and Z, and the second 39-bp exact match <inline-formula id="IEq115"><alternatives><tex-math id="M237">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${M}_{2}$$\end{document}</tex-math><mml:math id="M238"><mml:msub><mml:mi>M</mml:mi><mml:mn>2</mml:mn></mml:msub></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq115.gif"/></alternatives></inline-formula> were from sequence IDs W and X. If both strands have an equal score, the sequence ID will be resolved for both strands. For each resolved sequence ID, Centrifuger will sum up its scores across the matches using the formula <inline-formula id="IEq116"><alternatives><tex-math id="M239">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\text{score}}\left({\text{sequence}}\space I\right)={\sum }_{M\in {\text{sqeuence}}\space I}{\left({l}_{M}-15\right)}^{2}$$\end{document}</tex-math><mml:math id="M240"><mml:mrow><mml:mtext>score</mml:mtext><mml:mfenced close=")" open="("><mml:mtext>sequence</mml:mtext><mml:mi>I</mml:mi></mml:mfenced><mml:mo>=</mml:mo><mml:msub><mml:mo>∑</mml:mo><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mtext>sqeuence</mml:mtext><mml:mi>I</mml:mi></mml:mrow></mml:msub><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:msub><mml:mi>l</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq116.gif"/></alternatives></inline-formula>, where <inline-formula id="IEq117"><alternatives><tex-math id="M241">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M\in {\text{sequence}\space} I$$\end{document}</tex-math><mml:math id="M242"><mml:mrow><mml:mi>M</mml:mi><mml:mo>∈</mml:mo><mml:mtext>sequence</mml:mtext><mml:mi>I</mml:mi></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq117.gif"/></alternatives></inline-formula> means the match <inline-formula id="IEq118"><alternatives><tex-math id="M243">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M244"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq118.gif"/></alternatives></inline-formula> is found in the sequence with ID <inline-formula id="IEq119"><alternatives><tex-math id="M245">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$I$$\end{document}</tex-math><mml:math id="M246"><mml:mi>I</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq119.gif"/></alternatives></inline-formula>. In the example of Fig. <xref rid="Fig1" ref-type="fig">1</xref>, the score for sequence ID X is <inline-formula id="IEq120"><alternatives><tex-math id="M247">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${\left(60-15\right)}^{2}+{\left(39-15\right)}^{2}=2601$$\end{document}</tex-math><mml:math id="M248"><mml:mrow><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mn>60</mml:mn><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>+</mml:mo><mml:msup><mml:mrow><mml:mfenced close=")" open="("><mml:mn>39</mml:mn><mml:mo>-</mml:mo><mml:mn>15</mml:mn></mml:mfenced></mml:mrow><mml:mn>2</mml:mn></mml:msup><mml:mo>=</mml:mo><mml:mn>2601</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq120.gif"/></alternatives></inline-formula> as both matches hit this sequence. This scoring function was empirical and was designed during the development of Centrifuge. The sequence IDs with the highest score and their corresponding taxonomy IDs will be reported as the final classification result for the read, where the example read in Fig. <xref rid="Fig1" ref-type="fig">1</xref> is classified to the sequence X. When the number of highest-scoring sequence IDs is more than the report threshold that can be specified by the user (default 1), Centrifuger will merge the IDs to their LCAs in the taxonomy tree until the number is within the threshold.</p>
      <p id="Par38">For a match that hits many sequences in the database, i.e., <inline-formula id="IEq121"><alternatives><tex-math id="M249">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}-{s}_{M}+1$$\end{document}</tex-math><mml:math id="M250"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq121.gif"/></alternatives></inline-formula> is large, Centrifuger will resolve the sequence IDs for at most 40·report_threshold entries evenly distributed in the BWT interval. For example, if <inline-formula id="IEq122"><alternatives><tex-math id="M251">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${s}_{M}=100$$\end{document}</tex-math><mml:math id="M252"><mml:mrow><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>100</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq122.gif"/></alternatives></inline-formula> and <inline-formula id="IEq123"><alternatives><tex-math id="M253">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}=490$$\end{document}</tex-math><mml:math id="M254"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>=</mml:mo><mml:mn>490</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq123.gif"/></alternatives></inline-formula>, then Centirufger will resolve the 40 sequence IDs for positions at 100, 110, 120,.., 480, and 490 on the BWT sequence with the default setting. Though this is a heuristic that can cause the algorithm to miss the true genome of origin, it is likely to generate scores for sequences in the same phylogeny branch and may help identify the correct taxonomy IDs at higher levels. This is the main difference between Centrifuge and Centrifuger in the classification stage, where Centrifuge ignores a match <inline-formula id="IEq124"><alternatives><tex-math id="M255">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$M$$\end{document}</tex-math><mml:math id="M256"><mml:mi>M</mml:mi></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq124.gif"/></alternatives></inline-formula> if <inline-formula id="IEq125"><alternatives><tex-math id="M257">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$${e}_{M}-{s}_{M}+1 &gt;200$$\end{document}</tex-math><mml:math id="M258"><mml:mrow><mml:msub><mml:mi>e</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>-</mml:mo><mml:msub><mml:mi>s</mml:mi><mml:mi>M</mml:mi></mml:msub><mml:mo>+</mml:mo><mml:mn>1</mml:mn><mml:mo>&gt;</mml:mo><mml:mn>200</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13059_2024_3244_Article_IEq125.gif"/></alternatives></inline-formula> with the default setting.</p>
    </sec>
    <sec id="Sec16">
      <title>Hybrid run-length compression</title>
      <p id="Par39">In addition to the run-block compression, we designed another compression scheme called hybrid run-length compression, using run-length compression for each fixed-size block. Hybrid run-length compressed BWT uses the same amount of space as the wavelet tree representation when the repetitiveness of the sequence is low, and its space usage converges to the RLBWTs when the repetitiveness grows. In our implementation, a block is marked as run-length compressible (<italic>B</italic><sub><italic>R</italic></sub> = 1) if its average run-length is more than six based on the comparison between RLBWT and wavelet tree (Fig. <xref rid="Fig2" ref-type="fig">2</xref>A, <xref rid="Fig2" ref-type="fig">B</xref>). The substrings from blocks are separated into two subsequences based on <italic>B</italic><sub><italic>R</italic></sub>, and the subsequences will be concatenated into two sequences, <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, respectively. <italic>T</italic><sub><italic>R</italic></sub> will be compressed by the run-length method as in RLBWT, and <italic>T</italic><sub><italic>P</italic></sub> will be represented as a wavelet tree. The block size is inferred in the same fashion as in RBBWT. The rank query on the hybrid run-length compressed sequence is like the run-block compression, where we combine the ranks from <italic>T</italic><sub><italic>R</italic></sub> and <italic>T</italic><sub><italic>P</italic></sub>, making it slower than the rank query on RLBWT. The idea of hybrid run-length compression is similar to the wavelet tree when using fixed-block boosting [<xref ref-type="bibr" rid="CR54">54</xref>]. Our implementation avoids explicitly recording the accumulated count at the beginning of a block and is therefore well suited to mildly repetitive sequences needing small blocks. For example, the block size of the hybrid run-length compressed BWT was only 12 for the genus <italic>Legionella</italic>’s genomes. Despite being less computationally efficient than other representations, the hybrid run-length compressed BWT is flexible and allows methods to handle various texts with a wide range of repetitiveness without altering the underlying data structure.</p>
    </sec>
  </sec>
  <sec sec-type="supplementary-material">
    <sec id="Sec17">
      <title>Supplementary Information</title>
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13059_2024_3244_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1</bold>: Table S1. The classification accuracy at various taxonomy ranks in the Mason-generated simulated data Table S2. SRA IDs of the samples used in the SARS-CoV-2 sequence-level classification analysis. Table S3. SRA IDs of the samples used in the bacterial WGS classification evaluations. Table S4. Running commands for the classifiers used in the evaluations. Fig. S1. Space usage of the wavelet tree, RLBWT, hybrid run-length compression and RBBWT when adding genomes with the species <italic>Escherichia fergusonii</italic> (taxonomy ID 564) and the genus <italic>Legionella</italic> (taxonomy ID 445) Fig. S2. Space usage of the wavelet tree, RLBWT, hybrid run-length compression and RBBWT when adding genomes with species <italic>Chalmydia trachomatis</italic> (taxonomy ID 813) and the genus <italic>Chalmydia</italic> (taxonomy ID 810). Fig. S3. Sensitivity and precision of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data generated from June 2023 RefSeq prokaryotic genomes using ART. Fig. S4. Performance of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP on the simulated data when classifying against a trimmed database that has one genome per genus and does not contain the true origins of the reads. Fig. S5. F1 scores of Centrifuger, Centrifuge, Kraken2, Ganon, and KMCP at various taxonomy ranks on the 10 simulated data sets from CAMI2. Fig. S6. F1 scores of Centrifuger, Centrifuge, Kraken2, Ganon and KMCP on bacterial WGS data sets, where the species of the bacteria are not in the database but their genera are present in the database. Fig. S7. Cluster heatmaps for read fractions in the SARS-CoV-2 sequence-level analysis. Fig. S8. Sensitivity, precision and F1 score of Centrifuger and Ganon using LCA and reassignment based on taxa quantification at various taxonomy levels.</p>
            </caption>
          </media>
        </supplementary-material>
        <supplementary-material content-type="local-data" id="MOESM2">
          <media xlink:href="13059_2024_3244_MOESM2_ESM.pdf">
            <caption>
              <p><bold>Additional</bold><bold>file 2</bold>. Review history.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher’ s Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Dr. Daehwan Kim and Dr. Florian Breitwieser for the foundation work in Centrifuge. We also thank Dr. Heng Li and Dr. Shannon Soucy for many helpful discussions.</p>
    <sec id="FPar1">
      <title>Peer review information</title>
      <p id="Par40">Feng Gao and Kevin Pang were the primary editors of this article and managed its editorial process and peer review in collaboration with the rest of the editorial team.</p>
    </sec>
    <sec id="FPar2">
      <title>Review history</title>
      <p id="Par41">The review history is available as Additional file <xref rid="MOESM2" ref-type="media">2</xref>.</p>
    </sec>
  </ack>
  <notes notes-type="author-contribution">
    <title>Authors<italic>’</italic> contributions</title>
    <p> L.S. conceived the project. L.S. and B.L. designed the algorithm. L.S. implemented and evaluated the software. L.S. and B.L. wrote the manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work is supported by the NIH grants P20GM130454 (Dartmouth), 3P20GM130454-05WS (Dartmouth), R01HG011392 (B.L.), and R35GM139602 (B.L.).</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>The source code of Centrifuger is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link> [<xref ref-type="bibr" rid="CR55">55</xref>]. The source code of the version Centrifuger v1.0.1 used in this study is also available at Zenodo 10.5281/zenodo.10938378 [<xref ref-type="bibr" rid="CR56">56</xref>]. The code for the evaluations and experiments is available at <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger_evaluations">https://github.com/mourisl/centrifuger_evaluations</ext-link> [<xref ref-type="bibr" rid="CR57">57</xref>]. The NCBI SRA accession numbers of the WGS data sets are listed in Additional file <xref rid="MOESM1" ref-type="media">1</xref>: Table S<xref rid="MOESM1" ref-type="media">2</xref> and Table S<xref rid="MOESM1" ref-type="media">3</xref>. The index for the RefSeq prokaryotic, human, virus, and GenBank SARS-CoV-2 variants is available at Zenodo 10.5281/zenodo.10023239.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar3">
      <title>Ethics approval and consent to participate</title>
      <p id="Par42">Not applicable.</p>
    </notes>
    <notes id="FPar4" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par43">The authors declare that they have no competing interests.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Tringe</surname>
            <given-names>SG</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>EM</given-names>
          </name>
        </person-group>
        <article-title>Metagenomics: DNA sequencing of environmental samples</article-title>
        <source>Nat Rev Genet</source>
        <year>2005</year>
        <volume>6</volume>
        <fpage>805</fpage>
        <lpage>814</lpage>
        <pub-id pub-id-type="doi">10.1038/nrg1709</pub-id>
        <?supplied-pmid 16304596?>
        <pub-id pub-id-type="pmid">16304596</pub-id>
      </element-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Zhang L, Chen F, Zeng Z, Xu M, Sun F, Yang L, et al. Advances in Metagenomics and Its Application in Environmental Microorganisms. Frontiers in Microbiology. 2021;12. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.frontiersin.org/articles/10.3389/fmicb.2021.766364">https://www.frontiersin.org/articles/10.3389/fmicb.2021.766364</ext-link>. Cited 2023 Oct 13</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Chiu</surname>
            <given-names>CY</given-names>
          </name>
          <name>
            <surname>Miller</surname>
            <given-names>SA</given-names>
          </name>
        </person-group>
        <article-title>Clinical metagenomics</article-title>
        <source>Nat Rev Genet</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>341</fpage>
        <lpage>355</lpage>
        <pub-id pub-id-type="doi">10.1038/s41576-019-0113-7</pub-id>
        <?supplied-pmid 30918369?>
        <pub-id pub-id-type="pmid">30918369</pub-id>
      </element-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>De Filippis</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Paparo</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Nocerino</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Della Gatta</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Carucci</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Russo</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Specific gut microbiome signatures and the associated pro-inflamatory functions are linked to pediatric allergy and acquisition of immune tolerance</article-title>
        <source>Nat Commun</source>
        <year>2021</year>
        <volume>12</volume>
        <fpage>5958</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-021-26266-z</pub-id>
        <?supplied-pmid 34645820?>
        <pub-id pub-id-type="pmid">34645820</pub-id>
      </element-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Thomas</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Manghi</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Asnicar</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Pasolli</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Armanini</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zolfo</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Metagenomic analysis of colorectal cancer datasets identifies cross-cohort microbial diagnostic signatures and a link with choline degradation</article-title>
        <source>Nat Med</source>
        <year>2019</year>
        <volume>25</volume>
        <fpage>667</fpage>
        <lpage>678</lpage>
        <pub-id pub-id-type="doi">10.1038/s41591-019-0405-7</pub-id>
        <?supplied-pmid 30936548?>
        <pub-id pub-id-type="pmid">30936548</pub-id>
      </element-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Knight</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Vrbanac</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Taylor</surname>
            <given-names>BC</given-names>
          </name>
          <name>
            <surname>Aksenov</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Callewaert</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Debelius</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Best practices for analysing microbiomes</article-title>
        <source>Nat Rev Microbiol</source>
        <year>2018</year>
        <volume>16</volume>
        <fpage>410</fpage>
        <lpage>422</lpage>
        <pub-id pub-id-type="doi">10.1038/s41579-018-0029-9</pub-id>
        <?supplied-pmid 29795328?>
        <pub-id pub-id-type="pmid">29795328</pub-id>
      </element-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Pruitt</surname>
            <given-names>KD</given-names>
          </name>
          <name>
            <surname>Tatusova</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Maglott</surname>
            <given-names>DR</given-names>
          </name>
        </person-group>
        <article-title>NCBI reference sequences (RefSeq): a curated non-redundant sequence database of genomes, transcripts and proteins</article-title>
        <source>Nucleic Acids Res</source>
        <year>2007</year>
        <volume>35</volume>
        <fpage>D61</fpage>
        <lpage>D65</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkl842</pub-id>
        <?supplied-pmid 17130148?>
        <pub-id pub-id-type="pmid">17130148</pub-id>
      </element-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Benson</surname>
            <given-names>DA</given-names>
          </name>
          <name>
            <surname>Cavanaugh</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Clark</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Karsch-Mizrachi</surname>
            <given-names>I</given-names>
          </name>
          <name>
            <surname>Lipman</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Ostell</surname>
            <given-names>J</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>GenBank</article-title>
        <source>Nucleic Acids Res</source>
        <year>2013</year>
        <volume>41</volume>
        <fpage>D36</fpage>
        <lpage>42</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gks1195</pub-id>
        <?supplied-pmid 23193287?>
        <pub-id pub-id-type="pmid">23193287</pub-id>
      </element-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Parks</surname>
            <given-names>DH</given-names>
          </name>
          <name>
            <surname>Chuvochina</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Rinke</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Mussig</surname>
            <given-names>AJ</given-names>
          </name>
          <name>
            <surname>Chaumeil</surname>
            <given-names>P-A</given-names>
          </name>
          <name>
            <surname>Hugenholtz</surname>
            <given-names>P</given-names>
          </name>
        </person-group>
        <article-title>GTDB: an ongoing census of bacterial and archaeal diversity through a phylogenetically consistent, rank normalized and complete genome-based taxonomy</article-title>
        <source>Nucleic Acids Res</source>
        <year>2022</year>
        <volume>50</volume>
        <fpage>D785</fpage>
        <lpage>D794</lpage>
        <pub-id pub-id-type="doi">10.1093/nar/gkab776</pub-id>
        <?supplied-pmid 34520557?>
        <pub-id pub-id-type="pmid">34520557</pub-id>
      </element-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Improved metagenomic analysis with Kraken 2</article-title>
        <source>Genome Biol</source>
        <year>2019</year>
        <volume>20</volume>
        <fpage>257</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-019-1891-0</pub-id>
        <?supplied-pmid 31779668?>
        <pub-id pub-id-type="pmid">31779668</pub-id>
      </element-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Roberts</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Hayes</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Hunt</surname>
            <given-names>BR</given-names>
          </name>
          <name>
            <surname>Mount</surname>
            <given-names>SM</given-names>
          </name>
          <name>
            <surname>Yorke</surname>
            <given-names>JA</given-names>
          </name>
        </person-group>
        <article-title>Reducing storage requirements for biological sequence comparison</article-title>
        <source>Bioinformatics</source>
        <year>2004</year>
        <volume>20</volume>
        <fpage>3363</fpage>
        <lpage>3369</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bth408</pub-id>
        <?supplied-pmid 15256412?>
        <pub-id pub-id-type="pmid">15256412</pub-id>
      </element-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Wood</surname>
            <given-names>DE</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Kraken: ultrafast metagenomic sequence classification using exact alignments</article-title>
        <source>Genome Biol</source>
        <year>2014</year>
        <volume>15</volume>
        <fpage>R46</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2014-15-3-r46</pub-id>
        <?supplied-pmid 24580807?>
        <pub-id pub-id-type="pmid">24580807</pub-id>
      </element-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Blanco-Míguez</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Beghini</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Cumbo</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>McIver</surname>
            <given-names>LJ</given-names>
          </name>
          <name>
            <surname>Thompson</surname>
            <given-names>KN</given-names>
          </name>
          <name>
            <surname>Zolfo</surname>
            <given-names>M</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Extending and improving metagenomic taxonomic profiling with uncharacterized species using MetaPhlAn 4</article-title>
        <source>Nat Biotechnol.</source>
        <year>2023</year>
        <volume>41</volume>
        <fpage>1633</fpage>
        <lpage>1644</lpage>
        <pub-id pub-id-type="doi">10.1038/s41587-023-01688-w</pub-id>
        <?supplied-pmid 36823356?>
        <pub-id pub-id-type="pmid">36823356</pub-id>
      </element-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Segata</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Waldron</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Ballarini</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Narasimhan</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Jousson</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Huttenhower</surname>
            <given-names>C</given-names>
          </name>
        </person-group>
        <article-title>Metagenomic microbial community profiling using unique clade-specific marker genes</article-title>
        <source>Nat Methods</source>
        <year>2012</year>
        <volume>9</volume>
        <fpage>811</fpage>
        <lpage>814</lpage>
        <pub-id pub-id-type="doi">10.1038/nmeth.2066</pub-id>
        <?supplied-pmid 22688413?>
        <pub-id pub-id-type="pmid">22688413</pub-id>
      </element-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ounit</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Wanamaker</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Close</surname>
            <given-names>TJ</given-names>
          </name>
          <name>
            <surname>Lonardi</surname>
            <given-names>S</given-names>
          </name>
        </person-group>
        <article-title>CLARK: fast and accurate classification of metagenomic and genomic sequences using discriminative k-mers</article-title>
        <source>BMC Genomics</source>
        <year>2015</year>
        <volume>16</volume>
        <fpage>236</fpage>
        <pub-id pub-id-type="doi">10.1186/s12864-015-1419-2</pub-id>
        <?supplied-pmid 25879410?>
        <pub-id pub-id-type="pmid">25879410</pub-id>
      </element-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Piro</surname>
            <given-names>VC</given-names>
          </name>
          <name>
            <surname>Dadi</surname>
            <given-names>TH</given-names>
          </name>
          <name>
            <surname>Seiler</surname>
            <given-names>E</given-names>
          </name>
          <name>
            <surname>Reinert</surname>
            <given-names>K</given-names>
          </name>
          <name>
            <surname>Renard</surname>
            <given-names>BY</given-names>
          </name>
        </person-group>
        <article-title>ganon: precise metagenomics classification against large and up-to-date sets of reference sequences</article-title>
        <source>Bioinformatics</source>
        <year>2020</year>
        <volume>36</volume>
        <fpage>i12</fpage>
        <lpage>20</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btaa458</pub-id>
        <?supplied-pmid 32657362?>
        <pub-id pub-id-type="pmid">32657362</pub-id>
      </element-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Shen</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Xiang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Huang</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Tang</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Peng</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Cai</surname>
            <given-names>D</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>KMCP: accurate metagenomic profiling of both prokaryotic and viral populations by pseudo-mapping</article-title>
        <source>Bioinformatics.</source>
        <year>2023</year>
        <volume>39</volume>
        <fpage>btac845</fpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btac845</pub-id>
        <?supplied-pmid 36579886?>
        <pub-id pub-id-type="pmid">36579886</pub-id>
      </element-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kim</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Song</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Centrifuge: rapid and sensitive classification of metagenomic sequences</article-title>
        <source>Genome Res</source>
        <year>2016</year>
        <volume>26</volume>
        <fpage>1721</fpage>
        <lpage>1729</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.210641.116</pub-id>
        <?supplied-pmid 27852649?>
        <pub-id pub-id-type="pmid">27852649</pub-id>
      </element-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Burrows M, Wheeler DJ. A block-sorting lossless data compression algorithm. SRS Research Report. 1994;124. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://cir.nii.ac.jp/crid/1571417124717214720.">https://cir.nii.ac.jp/crid/1571417124717214720</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Ferragina P, Manzini G. Opportunistic data structures with applications. Proceedings 41st Annual Symposium on Foundations of Computer Science. 2000. p. 390–8. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://ieeexplore.ieee.org/abstract/document/892127">https://ieeexplore.ieee.org/abstract/document/892127</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Nasko</surname>
            <given-names>DJ</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
          <name>
            <surname>Treangen</surname>
            <given-names>TJ</given-names>
          </name>
        </person-group>
        <article-title>RefSeq database growth influences the accuracy of k-mer-based lowest common ancestor species identification</article-title>
        <source>Genome Biol</source>
        <year>2018</year>
        <volume>19</volume>
        <fpage>165</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-018-1554-6</pub-id>
        <?supplied-pmid 30373669?>
        <pub-id pub-id-type="pmid">30373669</pub-id>
      </element-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kreft</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>On compressing and indexing repetitive sequences</article-title>
        <source>Theoret Comput Sci</source>
        <year>2013</year>
        <volume>483</volume>
        <fpage>115</fpage>
        <lpage>133</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2012.02.006</pub-id>
      </element-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Gagie T, Gawrychowski P, Kärkkäinen J, Nekrich Y, Puglisi SJ. A Faster Grammar-Based Self-Index. arXiv; 2012. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1109.3954">http://arxiv.org/abs/1109.3954</ext-link>. Cited 2023 Oct 13.</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Mäkinen</surname>
            <given-names>V</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Sirén</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Välimäki</surname>
            <given-names>N</given-names>
          </name>
        </person-group>
        <article-title>Storage and Retrieval of Highly Repetitive Sequence Collections</article-title>
        <source>J Comput Biol</source>
        <year>2010</year>
        <volume>17</volume>
        <fpage>281</fpage>
        <lpage>308</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2009.0169</pub-id>
        <?supplied-pmid 20377446?>
        <pub-id pub-id-type="pmid">20377446</pub-id>
      </element-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Nishimoto T, Tabei Y. Optimal-Time Queries on BWT-runs Compressed Indexes. arXiv; 2021. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/2006.05104">http://arxiv.org/abs/2006.05104</ext-link>. Cited 2023 Nov 5.</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Gagie T, Navarro G, Prezza N. Optimal-Time Text Indexing in BWT-runs Bounded Space. arXiv; 2017. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1705.10382">http://arxiv.org/abs/1705.10382</ext-link>. Cited 2023 Sep 20.</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Grossi R, Gupta A, Vitter JS. High-order entropy-compressed text indexes. Proceedings of the fourteenth annual ACM-SIAM symposium on Discrete algorithms. USA: Society for Industrial and Applied Mathematics; 2003. p. 841–50.</mixed-citation>
    </ref>
    <ref id="CR28">
      <label>28.</label>
      <mixed-citation publication-type="other">Prezza N. r-index: the run-length BWT index. 2023. Available from: 
<ext-link ext-link-type="uri" xlink:href="https://github.com/nicolaprezza/r-index">https://github.com/nicolaprezza/r-index</ext-link>. Cited 2023 Oct 14.</mixed-citation>
    </ref>
    <ref id="CR29">
      <label>29.</label>
      <mixed-citation publication-type="other">Gog S, Beller T, Moffat A, Petri M. From Theory to Practice: Plug and Play with Succinct Data Structures. arXiv; 2013. Available from: 
<ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1311.1249">http://arxiv.org/abs/1311.1249</ext-link>. Cited 2023 Nov 12.</mixed-citation>
    </ref>
    <ref id="CR30">
      <label>30.</label>
      <mixed-citation publication-type="other">Holtgrewe M. Mason – A Read Simulator for Second Generation Sequencing Data. Technical Report FU Berlin. 2010.Available from: 
<ext-link ext-link-type="uri" xlink:href="https://publications.imp.fu-berlin.de/962/">https://publications.imp.fu-berlin.de/962/</ext-link>. Cited 2023 Oct 6.</mixed-citation>
    </ref>
    <ref id="CR31">
      <label>31.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Huang</surname>
            <given-names>W</given-names>
          </name>
          <name>
            <surname>Li</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Myers</surname>
            <given-names>JR</given-names>
          </name>
          <name>
            <surname>Marth</surname>
            <given-names>GT</given-names>
          </name>
        </person-group>
        <article-title>ART: a next-generation sequencing read simulator</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>593</fpage>
        <lpage>594</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btr708</pub-id>
        <?supplied-pmid 22199392?>
        <pub-id pub-id-type="pmid">22199392</pub-id>
      </element-citation>
    </ref>
    <ref id="CR32">
      <label>32.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Muggli</surname>
            <given-names>MD</given-names>
          </name>
          <name>
            <surname>Bowe</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Noyes</surname>
            <given-names>NR</given-names>
          </name>
          <name>
            <surname>Morley</surname>
            <given-names>PS</given-names>
          </name>
          <name>
            <surname>Belk</surname>
            <given-names>KE</given-names>
          </name>
          <name>
            <surname>Raymond</surname>
            <given-names>R</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Succinct colored de Bruijn graphs</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>3181</fpage>
        <lpage>3187</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx067</pub-id>
        <?supplied-pmid 28200001?>
        <pub-id pub-id-type="pmid">28200001</pub-id>
      </element-citation>
    </ref>
    <ref id="CR33">
      <label>33.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Alanko</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Vuohtoniemi</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Mäklin</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Puglisi</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Themisto: a scalable colored k-mer index for sensitive pseudoalignment against hundreds of thousands of bacterial genomes</article-title>
        <source>Bioinformatics</source>
        <year>2023</year>
        <volume>39</volume>
        <fpage>i260</fpage>
        <lpage>i269</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btad233</pub-id>
        <?supplied-pmid 37387143?>
        <pub-id pub-id-type="pmid">37387143</pub-id>
      </element-citation>
    </ref>
    <ref id="CR34">
      <label>34.</label>
      <mixed-citation publication-type="other">Alanko JN, Puglisi SJ, Vuohtoniemi J. Succinct k-mer Sets Using Subset Rank Queries on the Spectral Burrows-Wheeler Transform *. bioRxiv; 2022. p. 2022.05.19.492613. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2022.05.19.492613v2">https://www.biorxiv.org/content/10.1101/2022.05.19.492613v2</ext-link>. Cited 2024 Feb 5.</mixed-citation>
    </ref>
    <ref id="CR35">
      <label>35.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Meyer</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Fritz</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Deng</surname>
            <given-names>Z-L</given-names>
          </name>
          <name>
            <surname>Koslicki</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Lesker</surname>
            <given-names>TR</given-names>
          </name>
          <name>
            <surname>Gurevich</surname>
            <given-names>A</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>Critical Assessment of Metagenome Interpretation: the second round of challenges</article-title>
        <source>Nat Methods</source>
        <year>2022</year>
        <volume>19</volume>
        <fpage>429</fpage>
        <lpage>440</lpage>
        <pub-id pub-id-type="doi">10.1038/s41592-022-01431-4</pub-id>
        <?supplied-pmid 35396482?>
        <pub-id pub-id-type="pmid">35396482</pub-id>
      </element-citation>
    </ref>
    <ref id="CR36">
      <label>36.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dilthey</surname>
            <given-names>AT</given-names>
          </name>
          <name>
            <surname>Jain</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Koren</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Phillippy</surname>
            <given-names>AM</given-names>
          </name>
        </person-group>
        <article-title>Strain-level metagenomic assignment and compositional estimation for long reads with MetaMaps</article-title>
        <source>Nat Commun</source>
        <year>2019</year>
        <volume>10</volume>
        <fpage>3066</fpage>
        <pub-id pub-id-type="doi">10.1038/s41467-019-10934-2</pub-id>
        <?supplied-pmid 31296857?>
        <pub-id pub-id-type="pmid">31296857</pub-id>
      </element-citation>
    </ref>
    <ref id="CR37">
      <label>37.</label>
      <mixed-citation publication-type="other">Ulrich J-U, Renard BY. Taxor: Fast and space-efficient taxonomic classification of long reads with hierarchical interleaved XOR filters. bioRxiv; 2023. p. 2023.07.20.549822. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/10.1101/2023.07.20.549822v1">https://www.biorxiv.org/10.1101/2023.07.20.549822v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR38">
      <label>38.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Ahmed</surname>
            <given-names>O</given-names>
          </name>
          <name>
            <surname>Rossi</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Boucher</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>Efficient taxa identification using a pangenome index</article-title>
        <source>Genome Res</source>
        <year>2023</year>
        <volume>33</volume>
        <issue>7</issue>
        <fpage>1069</fpage>
        <lpage>1077</lpage>
        <pub-id pub-id-type="doi">10.1101/gr.277642.123</pub-id>
        <?supplied-pmid 37258301?>
        <pub-id pub-id-type="pmid">37258301</pub-id>
      </element-citation>
    </ref>
    <ref id="CR39">
      <label>39.</label>
      <element-citation publication-type="book">
        <person-group person-group-type="author">
          <name>
            <surname>Gagie</surname>
            <given-names>T</given-names>
          </name>
          <name>
            <surname>Kashgouli</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <person-group person-group-type="editor">
          <name>
            <surname>Arroyuelo</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Poblete</surname>
            <given-names>B</given-names>
          </name>
        </person-group>
        <article-title>KATKA: A KRAKEN-Like Tool with k Given at Query Time</article-title>
        <source>String Processing and Information Retrieval</source>
        <year>2022</year>
        <publisher-loc>Cham</publisher-loc>
        <publisher-name>Springer International Publishing</publisher-name>
        <fpage>191</fpage>
        <lpage>197</lpage>
      </element-citation>
    </ref>
    <ref id="CR40">
      <label>40.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Menzel</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Ng</surname>
            <given-names>KL</given-names>
          </name>
          <name>
            <surname>Krogh</surname>
            <given-names>A</given-names>
          </name>
        </person-group>
        <article-title>Fast and sensitive taxonomic classification for metagenomics with Kaiju</article-title>
        <source>Nat Commun</source>
        <year>2016</year>
        <volume>7</volume>
        <fpage>11257</fpage>
        <pub-id pub-id-type="doi">10.1038/ncomms11257</pub-id>
        <?supplied-pmid 27071849?>
        <pub-id pub-id-type="pmid">27071849</pub-id>
      </element-citation>
    </ref>
    <ref id="CR41">
      <label>41.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Fast construction of FM-index for long sequence reads</article-title>
        <source>Bioinformatics</source>
        <year>2014</year>
        <volume>30</volume>
        <fpage>3274</fpage>
        <lpage>3275</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btu541</pub-id>
        <?supplied-pmid 25107872?>
        <pub-id pub-id-type="pmid">25107872</pub-id>
      </element-citation>
    </ref>
    <ref id="CR42">
      <label>42.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Li</surname>
            <given-names>H</given-names>
          </name>
        </person-group>
        <article-title>Exploring single-sample SNP and INDEL calling with whole-genome de novo assembly</article-title>
        <source>Bioinformatics</source>
        <year>2012</year>
        <volume>28</volume>
        <fpage>1838</fpage>
        <lpage>1844</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/bts280</pub-id>
        <?supplied-pmid 22569178?>
        <pub-id pub-id-type="pmid">22569178</pub-id>
      </element-citation>
    </ref>
    <ref id="CR43">
      <label>43.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Schaeffer</surname>
            <given-names>L</given-names>
          </name>
          <name>
            <surname>Pimentel</surname>
            <given-names>H</given-names>
          </name>
          <name>
            <surname>Bray</surname>
            <given-names>N</given-names>
          </name>
          <name>
            <surname>Melsted</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Pachter</surname>
            <given-names>L</given-names>
          </name>
        </person-group>
        <article-title>Pseudoalignment for metagenomic read assignment</article-title>
        <source>Bioinformatics</source>
        <year>2017</year>
        <volume>33</volume>
        <fpage>2082</fpage>
        <lpage>2088</lpage>
        <pub-id pub-id-type="doi">10.1093/bioinformatics/btx106</pub-id>
        <?supplied-pmid 28334086?>
        <pub-id pub-id-type="pmid">28334086</pub-id>
      </element-citation>
    </ref>
    <ref id="CR44">
      <label>44.</label>
      <mixed-citation publication-type="other">Shaw J, Yu YW. Metagenome profiling and containment estimation through abundance-corrected k-mer sketching with sylph. bioRxiv; 2024. p. 2023.11.20.567879. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.11.20.567879v2">https://www.biorxiv.org/content/10.1101/2023.11.20.567879v2</ext-link>. Cited 2024 Jan 28.</mixed-citation>
    </ref>
    <ref id="CR45">
      <label>45.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Lu</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Breitwieser</surname>
            <given-names>FP</given-names>
          </name>
          <name>
            <surname>Thielen</surname>
            <given-names>P</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Bracken: estimating species abundance in metagenomics data</article-title>
        <source>PeerJ Comput Sci</source>
        <year>2017</year>
        <volume>3</volume>
        <fpage>e104</fpage>
        <pub-id pub-id-type="doi">10.7717/peerj-cs.104</pub-id>
      </element-citation>
    </ref>
    <ref id="CR46">
      <label>46.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Dempster</surname>
            <given-names>AP</given-names>
          </name>
          <name>
            <surname>Laird</surname>
            <given-names>NM</given-names>
          </name>
          <name>
            <surname>Rubin</surname>
            <given-names>DB</given-names>
          </name>
        </person-group>
        <article-title>Maximum Likelihood from Incomplete Data Via the EM Algorithm</article-title>
        <source>J Roy Stat Soc: Ser B (Methodol)</source>
        <year>1977</year>
        <volume>39</volume>
        <fpage>1</fpage>
        <lpage>22</lpage>
        <pub-id pub-id-type="doi">10.1111/j.2517-6161.1977.tb01600.x</pub-id>
      </element-citation>
    </ref>
    <ref id="CR47">
      <label>47.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Skoufos</surname>
            <given-names>G</given-names>
          </name>
          <name>
            <surname>Almodaresi</surname>
            <given-names>F</given-names>
          </name>
          <name>
            <surname>Zakeri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Paulson</surname>
            <given-names>JN</given-names>
          </name>
          <name>
            <surname>Patro</surname>
            <given-names>R</given-names>
          </name>
          <name>
            <surname>Hatzigeorgiou</surname>
            <given-names>AG</given-names>
          </name>
          <etal/>
        </person-group>
        <article-title>AGAMEMNON: an Accurate metaGenomics And MEtatranscriptoMics quaNtificatiON analysis suite</article-title>
        <source>Genome Biol</source>
        <year>2022</year>
        <volume>23</volume>
        <fpage>39</fpage>
        <pub-id pub-id-type="doi">10.1186/s13059-022-02610-4</pub-id>
        <?supplied-pmid 35101114?>
        <pub-id pub-id-type="pmid">35101114</pub-id>
      </element-citation>
    </ref>
    <ref id="CR48">
      <label>48.</label>
      <mixed-citation publication-type="other">Liu J, Ma Y, Ren Y, Guo H. Centrifuge+: improving metagenomic analysis upon Centrifuge. bioRxiv; 2023. p. 2023.02.27.530134. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content/10.1101/2023.02.27.530134v1">https://www.biorxiv.org/content/10.1101/2023.02.27.530134v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR49">
      <label>49.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Morgulis</surname>
            <given-names>A</given-names>
          </name>
          <name>
            <surname>Gertz</surname>
            <given-names>EM</given-names>
          </name>
          <name>
            <surname>Schäffer</surname>
            <given-names>AA</given-names>
          </name>
          <name>
            <surname>Agarwala</surname>
            <given-names>R</given-names>
          </name>
        </person-group>
        <article-title>A fast and symmetric DUST implementation to mask low-complexity DNA sequences</article-title>
        <source>J Comput Biol</source>
        <year>2006</year>
        <volume>13</volume>
        <fpage>1028</fpage>
        <lpage>1040</lpage>
        <pub-id pub-id-type="doi">10.1089/cmb.2006.13.1028</pub-id>
        <?supplied-pmid 16796549?>
        <pub-id pub-id-type="pmid">16796549</pub-id>
      </element-citation>
    </ref>
    <ref id="CR50">
      <label>50.</label>
      <mixed-citation publication-type="other">Piro VC, Reinert K. ganon2: up-to-date and scalable metagenomics analysis. bioRxiv; 2023. p. 2023.12.07.570547. Available from: <ext-link ext-link-type="uri" xlink:href="https://www.biorxiv.org/content10.1101/2023.12.07.570547v1">https://www.biorxiv.org/content10.1101/2023.12.07.570547v1</ext-link>. Cited 2024 Jan 29.</mixed-citation>
    </ref>
    <ref id="CR51">
      <label>51.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Barbay</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Navarro</surname>
            <given-names>G</given-names>
          </name>
        </person-group>
        <article-title>On compressing permutations and adaptive sorting</article-title>
        <source>Theoret Comput Sci</source>
        <year>2013</year>
        <volume>513</volume>
        <fpage>109</fpage>
        <lpage>123</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2013.10.019</pub-id>
      </element-citation>
    </ref>
    <ref id="CR52">
      <label>52.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
        </person-group>
        <article-title>Fast BWT in small space by blockwise suffix sorting</article-title>
        <source>Theoret Comput Sci</source>
        <year>2007</year>
        <volume>387</volume>
        <fpage>249</fpage>
        <lpage>257</lpage>
        <pub-id pub-id-type="doi">10.1016/j.tcs.2007.07.018</pub-id>
      </element-citation>
    </ref>
    <ref id="CR53">
      <label>53.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Langmead</surname>
            <given-names>B</given-names>
          </name>
          <name>
            <surname>Trapnell</surname>
            <given-names>C</given-names>
          </name>
          <name>
            <surname>Pop</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Salzberg</surname>
            <given-names>SL</given-names>
          </name>
        </person-group>
        <article-title>Ultrafast and memory-efficient alignment of short DNA sequences to the human genome</article-title>
        <source>Genome Biol</source>
        <year>2009</year>
        <volume>10</volume>
        <fpage>R25</fpage>
        <pub-id pub-id-type="doi">10.1186/gb-2009-10-3-r25</pub-id>
        <?supplied-pmid 19261174?>
        <pub-id pub-id-type="pmid">19261174</pub-id>
      </element-citation>
    </ref>
    <ref id="CR54">
      <label>54.</label>
      <element-citation publication-type="journal">
        <person-group person-group-type="author">
          <name>
            <surname>Gog</surname>
            <given-names>S</given-names>
          </name>
          <name>
            <surname>Kärkkäinen</surname>
            <given-names>J</given-names>
          </name>
          <name>
            <surname>Kempa</surname>
            <given-names>D</given-names>
          </name>
          <name>
            <surname>Petri</surname>
            <given-names>M</given-names>
          </name>
          <name>
            <surname>Puglisi</surname>
            <given-names>SJ</given-names>
          </name>
        </person-group>
        <article-title>Fixed Block Compression Boosting in FM-Indexes: Theory and Practice</article-title>
        <source>Algorithmica</source>
        <year>2019</year>
        <volume>81</volume>
        <fpage>1370</fpage>
        <lpage>1391</lpage>
        <pub-id pub-id-type="doi">10.1007/s00453-018-0475-9</pub-id>
      </element-citation>
    </ref>
    <ref id="CR55">
      <label>55.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger. Github; 2024. <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger">https://github.com/mourisl/centrifuger</ext-link>. Accessed 8 Feb 2024.</mixed-citation>
    </ref>
    <ref id="CR56">
      <label>56.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger v1.0.1. Zenodo; 2024. 10.5281/zenodo.10938378. Accessed 7 Apr 2024.</mixed-citation>
    </ref>
    <ref id="CR57">
      <label>57.</label>
      <mixed-citation publication-type="other">Song L, Langmead B. Centrifuger evaluations. Github; 2024. <ext-link ext-link-type="uri" xlink:href="https://github.com/mourisl/centrifuger_evaluations">https://github.com/mourisl/centrifuger_evaluations</ext-link>. Accessed 9 Mar 2024.</mixed-citation>
    </ref>
  </ref-list>
</back>

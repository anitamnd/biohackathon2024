<?properties open_access?>
<?DTDIdentifier.IdentifierValue -//Springer-Verlag//DTD A++ V2.4//EN?>
<?DTDIdentifier.IdentifierType public?>
<?SourceDTD.DTDName A++V2.4.dtd?>
<?SourceDTD.Version 2.4?>
<?ConverterInfo.XSLTName springer2nlmx2.xsl?>
<?ConverterInfo.Version 1?>
<processing-meta base-tagset="archiving" mathml-version="3.0" table-model="xhtml" tagset-family="jats">
  <restricted-by>pmc</restricted-by>
</processing-meta>
<front>
  <journal-meta>
    <journal-id journal-id-type="nlm-ta">J Cheminform</journal-id>
    <journal-id journal-id-type="iso-abbrev">J Cheminform</journal-id>
    <journal-title-group>
      <journal-title>Journal of Cheminformatics</journal-title>
    </journal-title-group>
    <issn pub-type="epub">1758-2946</issn>
    <publisher>
      <publisher-name>Springer International Publishing</publisher-name>
      <publisher-loc>Cham</publisher-loc>
    </publisher>
  </journal-meta>
  <article-meta>
    <article-id pub-id-type="pmcid">9817292</article-id>
    <article-id pub-id-type="publisher-id">673</article-id>
    <article-id pub-id-type="doi">10.1186/s13321-022-00673-w</article-id>
    <article-categories>
      <subj-group subj-group-type="heading">
        <subject>Software</subject>
      </subj-group>
    </article-categories>
    <title-group>
      <article-title>XSMILES: interactive visualization for molecules, SMILES and XAI attribution scores</article-title>
    </title-group>
    <contrib-group>
      <contrib contrib-type="author" corresp="yes">
        <name>
          <surname>Heberle</surname>
          <given-names>Henry</given-names>
        </name>
        <address>
          <email>henry.heberle@bayer.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Zhao</surname>
          <given-names>Linlin</given-names>
        </name>
        <address>
          <email>linlin.zhao1@bayer.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Schmidt</surname>
          <given-names>Sebastian</given-names>
        </name>
        <address>
          <email>sebastian.schmidt1@bayer.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Wolf</surname>
          <given-names>Thomas</given-names>
        </name>
        <address>
          <email>thomas.wolf@bayer.com</email>
        </address>
        <xref ref-type="aff" rid="Aff2">2</xref>
      </contrib>
      <contrib contrib-type="author">
        <name>
          <surname>Heinrich</surname>
          <given-names>Julian</given-names>
        </name>
        <address>
          <email>julian.heinrich@bayer.com</email>
        </address>
        <xref ref-type="aff" rid="Aff1">1</xref>
      </contrib>
      <aff id="Aff1"><label>1</label><institution-wrap><institution-id institution-id-type="GRID">grid.420044.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0374 4101</institution-id><institution>Division Crop Science, </institution><institution>Bayer AG, </institution></institution-wrap>40789 Monheim am Rhein, Germany </aff>
      <aff id="Aff2"><label>2</label><institution-wrap><institution-id institution-id-type="GRID">grid.420044.6</institution-id><institution-id institution-id-type="ISNI">0000 0004 0374 4101</institution-id><institution>Division Crop Science, </institution><institution>Bayer AG, </institution></institution-wrap>65926 Frankfurt, Germany </aff>
    </contrib-group>
    <pub-date pub-type="epub">
      <day>6</day>
      <month>1</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="pmc-release">
      <day>6</day>
      <month>1</month>
      <year>2023</year>
    </pub-date>
    <pub-date pub-type="collection">
      <year>2023</year>
    </pub-date>
    <volume>15</volume>
    <elocation-id>2</elocation-id>
    <history>
      <date date-type="received">
        <day>30</day>
        <month>9</month>
        <year>2022</year>
      </date>
      <date date-type="accepted">
        <day>17</day>
        <month>12</month>
        <year>2022</year>
      </date>
    </history>
    <permissions>
      <copyright-statement>© The Author(s) 2023</copyright-statement>
      <license>
        <ali:license_ref specific-use="textmining" content-type="ccbylicense">https://creativecommons.org/licenses/by/4.0/</ali:license_ref>
        <license-p><bold>Open Access</bold>This article is licensed under a Creative Commons Attribution 4.0 International License, which permits use, sharing, adaptation, distribution and reproduction in any medium or format, as long as you give appropriate credit to the original author(s) and the source, provide a link to the Creative Commons licence, and indicate if changes were made. The images or other third party material in this article are included in the article's Creative Commons licence, unless indicated otherwise in a credit line to the material. If material is not included in the article's Creative Commons licence and your intended use is not permitted by statutory regulation or exceeds the permitted use, you will need to obtain permission directly from the copyright holder. To view a copy of this licence, visit <ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/licenses/by/4.0/">http://creativecommons.org/licenses/by/4.0/</ext-link>. The Creative Commons Public Domain Dedication waiver (<ext-link ext-link-type="uri" xlink:href="https://creativecommons.org/publicdomain/zero/1.0/">http://creativecommons.org/publicdomain/zero/1.0/</ext-link>) applies to the data made available in this article, unless otherwise stated in a credit line to the data.</license-p>
      </license>
    </permissions>
    <abstract id="Abs1">
      <sec>
        <title>Background</title>
        <p id="Par1">Explainable artificial intelligence (XAI) methods have shown increasing applicability in chemistry. In this context, visualization techniques can highlight regions of a molecule to reveal their influence over a predicted property. For this purpose, some XAI techniques calculate attribution scores associated with tokens of SMILES strings or with atoms of a molecule. While an association of a score with an atom can be directly visually represented on a molecule diagram, scores computed for SMILES non-atom tokens cannot. For instance, a substring <italic>[N+]</italic> contains 3 non-atom tokens, i.e., [, <inline-formula id="IEq1"><alternatives><tex-math id="M1">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$+$$\end{document}</tex-math><mml:math id="M2"><mml:mo>+</mml:mo></mml:math><inline-graphic xlink:href="13321_2022_673_Article_IEq1.gif"/></alternatives></inline-formula>, and ], and their attributions, depending on the model, are not necessarily revealing an influence of the nitrogen atom over the predicted property; for that reason, it is not possible to represent the scores on a molecule diagram. Moreover, SMILES’s notation is complex, foregrounding the need for techniques to facilitate the analysis of explanations associated with their tokens.</p>
      </sec>
      <sec>
        <title>Results</title>
        <p id="Par2">We propose XSMILES, an interactive visualization technique, to explore explainable artificial intelligence attributions scores and support the interpretation of SMILES. Users can input any type of score attributed to atom and non-atom tokens and visualize them on top of a 2D molecule diagram coordinated with a bar chart that represents a SMILES string. We demonstrate how attributions calculated for SMILES strings can be evaluated and better interpreted through interactivity with two use cases.</p>
      </sec>
      <sec>
        <title>Conclusions</title>
        <p id="Par3">Data scientists can use XSMILES to understand their models’ behavior and compare multiple modeling approaches. The tool provides a set of parameters to adapt the visualization to users’ needs and it can be integrated into different platforms. We believe XSMILES can support data scientists to develop, improve, and communicate their models by making it easier to identify patterns and compare attributions through interactive exploratory visualization.</p>
      </sec>
      <sec>
        <title>Supplementary Information</title>
        <p>The online version contains supplementary material available at 10.1186/s13321-022-00673-w.</p>
      </sec>
    </abstract>
    <kwd-group xml:lang="en">
      <title>Keywords</title>
      <kwd>SMILES</kwd>
      <kwd>Molecule</kwd>
      <kwd>Explainable artificial intelligence</kwd>
      <kwd>Visualization</kwd>
      <kwd>Artificial intelligence</kwd>
      <kwd>Contribution</kwd>
      <kwd>Attribution</kwd>
    </kwd-group>
    <funding-group>
      <award-group>
        <funding-source>
          <institution>Bayer AG</institution>
        </funding-source>
      </award-group>
    </funding-group>
    <custom-meta-group>
      <custom-meta>
        <meta-name>issue-copyright-statement</meta-name>
        <meta-value>© The Author(s) 2023</meta-value>
      </custom-meta>
    </custom-meta-group>
  </article-meta>
</front>
<body>
  <sec id="Sec1">
    <title>Introduction</title>
    <p id="Par16">Artificial Intelligence (AI) models have varied applications in chemistry, such as molecular property prediction [<xref ref-type="bibr" rid="CR1">1</xref>, <xref ref-type="bibr" rid="CR2">2</xref>]. Chemists can use models to predict characteristics of small molecules in silico experiments, for instance, to identify compounds expected to be soluble or to have a certain bioactivity. Not only the analyses performed with predictions help scientists to identify potential candidates for further experiments, it can accelerate the discovery of new products and reduce costs with data-driven prioritization of candidate targets for further experimentation—e.g., in-vivo studies.</p>
    <p id="Par17">In typical silico screening processes, computational chemists and data scientists analyze substructures and identify patterns that may be influencing the predicted properties—e.g., bioactivity, solubility, or reactivity. Explainable artificial intelligence (XAI) techniques have been used to understand the behavior of models by calculating scores of influence of substructures over the predicted property [<xref ref-type="bibr" rid="CR3">3</xref>–<xref ref-type="bibr" rid="CR5">5</xref>]—here defined as <italic>attribution scores</italic> or simply <italic>attributions</italic>, also found in the literature as <italic>attention</italic>, <italic>heatmap</italic>, <italic>coloring</italic>, and <italic>sensitivity scores</italic> [<xref ref-type="bibr" rid="CR6">6</xref>–<xref ref-type="bibr" rid="CR9">9</xref>], depending on the methods and context. Visualization techniques can make the attribution scores more understandable, for instance, by coloring atoms of a 2-dimensional molecule diagram (i.e., structural formula diagram).</p>
    <p id="Par18">Although visualization is essential to interpret XAI attributions, few tools are available to help data scientists, computational chemists, and chemists to screen sets of molecules while analyzing their XAI attributions [<xref ref-type="bibr" rid="CR10">10</xref>]. RDKit allows to highlight regions of a molecule diagram quantitatively and qualitatively, for example, by expressing different values of atom-attributions and by highlighting regions only expressing whether or not they are important, respectively. Both approaches are useful in numerous situations, for example, quantitative analysis may be preferred by some AI and XAI developers because of the detailed information, a qualitative approach may be an attractive option for some users, e.g., chemists and regulatory agents, who are more interested in overview and highlight of the crucial parts of a molecule.</p>
    <p id="Par19">A few authors have adapted or combined graphics to represent atom and non-atom attributions in a <italic>static approach</italic>—e.g., from non-atom tokens of a SMILES string, a machine-readable single-line string [<xref ref-type="bibr" rid="CR11">11</xref>] that encodes a molecular structure. SMILES tokens are mostly characters representing atoms like C and N, and non-atom characters that describe the SMILES structure, like branches that are represented by parenthesis; additionally, some tokens can be formed by two characters, like Cl and Br. Karpov et al. used a bar chart in their Figure 8 [<xref ref-type="bibr" rid="CR5">5</xref>] to represent atom contributions aligned with a SMILES representation, side-by-side with a molecule diagram. They used colors in both cases to indicate if the atoms stand for mutagenic alerts or against it. Lambard and Gracheva used a bar chart, heatmaps and a molecule diagram side-by-side in their Figure 6 [<xref ref-type="bibr" rid="CR12">12</xref>] to represent the importance of substructures concerning atom and non-atom tokens from a SMILES string. The authors of both mentioned articles had to create the visualizations separately and join them into the mentioned figures. While the task of analyzing non-atom attributions can be achieved by a combination of graphics, this approach is time-demanding and is usually not coordinated nor interactive. The process becomes impractical and difficult for a larger set of molecules.<fig id="Fig1"><label>Fig. 1</label><caption><p>Visualization of a molecular structure and respective SMILES string. The dotted circle highlights the ring from the molecule, and the dotted rectangles highlight the tokens that represent the ring, exemplifying the complexity of the SMILES notation. The heatmap and bar chart represent attribution scores. The image was adapted from an XSMILES visualization</p></caption><graphic xlink:href="13321_2022_673_Fig1_HTML" id="MO1"/></fig></p>
    <p id="Par20">Another example of limitation of such a <italic>static approach</italic> is that, due to the complexity of SMILES’ syntax, strings are generally difficult to interpret and to identify which part of the molecular structure a set of chars is representing. Figure <xref rid="Fig1" ref-type="fig">1</xref> illustrates how atoms that are close in a molecule (dotted circle) can be distant in a SMILES representation (dotted rectangles). Although the ring’s tokens are far in the string, they received similar attributions. If the supposed predictive model was trained at the SMILES token level, the visualization raises the hypothesis that the model may have learned patterns from the actual molecular structure.</p>
    <p id="Par21">To support the analysis of atom and non-atom attributions, we propose XSMILES (eXplainable SMILES), an interactive visualization technique to explore and compare atom and non-atom scores and support the interpretation of SMILES. XSMILES represents attributions on a 2D molecule diagram and a coordinated bar chart that represents a SMILES string. Its flexibility allows broad application, such as for representing magnitude or for highlighting parts of a molecule, and its interactivity makes SMILES strings easier to interpret. We implemented the technique in JavaScript and made it available as a plugin for JupyterLab, as a web-tool, a JavaScript package, and as a KNIME [<xref ref-type="bibr" rid="CR13">13</xref>] component, making XSMILES an option in multiple frameworks. Moreover, it improves the analysis of multiple molecules, since it can replace the mentioned combination of static bar charts and molecule diagrams with interactive visualizations.</p>
    <p id="Par22">In the following sections, we explain how we designed the visualization and identified the main requirements that guided our project. Following those statements, we demonstrate the use of XSMILES to analyze output from a variety of XAI methods through two use cases.</p>
  </sec>
  <sec id="Sec2">
    <title>The XSMILES technique</title>
    <p id="Par23">While developing AI models and XAI techniques that have a SMILES string as an input, we identified a gap: there is no interactive visualization technique to support tasks involving interpreting SMILES-based attributions. Moreover, analyzing only atom attributions—i.e., ignoring non-atom tokens—using heatmaps on molecule diagrams were not enough to interpret the behavior of the SMILES-based models that we have been studying—this is exemplified in <italic>Use case 1</italic>. Based on this experience, we identified a list of main requirements (R) to develop a visualization technique that can help data scientists and computational chemists to analyze such types of models:<list list-type="bullet"><list-item><p id="Par24"><italic>R SMILES</italic>: Representation of atom and non-atom attributions. <italic>Why</italic> XAI methods and models based on SMILES strings require analyses that explore information associated with all tokens from sets of SMILES strings. <italic>What</italic> XAI methods output attributions mapped to a sequence of tokens. <italic>How</italic> Atom and non-atom attributions are visualized through bar charts.</p></list-item><list-item><p id="Par25"><italic>R Molecule</italic>: Representation of the molecular structure. <italic>Why</italic> Molecule diagrams are much easier to understand than SMILES strings. The goal of the analysis is not only to understand attributions based on a sequence of tokens alone, but also to identify patterns between sub-strings of the sequence and the chemical structure. <italic>What</italic> SMILES tokens translate to atoms or substructures of a molecule. <italic>How</italic> An interactive molecule diagram is coordinated with the bar chart, revealing what each token represents when users interact with them.</p></list-item><list-item><p id="Par26"><italic>R Flexibility</italic>: Interactivity and customization of the visualizations. <italic>Why</italic> AI models and XAI techniques output attributions of different nature. When developing them, the magnitude, the sign, and the sets of attributions that meet certain criteria need to be interpreted under different perspectives, requiring a flexible visualization tool. <italic>What</italic> Attribution scores need to be mapped to different visual representations to enable the analysis. <italic>How</italic> A set of parameters can be adjusted by users, e.g., color palettes and how the colors on the bar chart and molecule diagram are mapped to attributions.</p></list-item></list>The requirements defined above summarize why and how we designed the XSMILES technique. In the following paragraphs, we explain each visualization component (see Fig. <xref rid="Fig2" ref-type="fig">2</xref>), color-related features, and interactivity.<fig id="Fig2"><label>Fig. 2</label><caption><p>XSMILES has three main components. <bold>A</bold> A <italic>molecule diagram</italic> is displayed over a heatmap that represents atom attributions. <bold>B</bold> A <italic>bar chart</italic> represents a SMILES string and its associated attributions. <bold>C</bold>
<italic>Attributes</italic> can be defined by the user in a tabular format</p></caption><graphic xlink:href="13321_2022_673_Fig2_HTML" id="MO2"/></fig></p>
    <p id="Par27"><italic>Attributes</italic> Because each molecule is associated with certain properties and predictions, and can have its attributions represented by different color scales, we defined a table that is displayed under the Bar chart. The table can indicate information set by the user and is optional, i.e., can also be hidden.</p>
    <p id="Par28"><italic>Bar chart</italic> We designed a bar chart combined with colors to represent attributions from each SMILES token due to the improved interpretation of magnitude in contrast to using colors only in a heatmap. A diverging palette and the negative sign (−) or its absence under the bars inform the user if the attribution contradicts or supports the predicted property, respectively. The size of bars represents the magnitude of the attribution. If magnitude is not relevant, users can change the <italic>colormap domain</italic> to set all bars to the same height (see paragraph <italic>Colormap domain</italic>). The input for the XSMILES can be a set of attributions for all tokens or a smaller set with attributions only for atom-tokens. In the latter case, we attribute 0.0 to non-atom tokens. By default, two horizontal lines represent where the min and max values stand in the height direction of the bar chart.</p>
    <p id="Par29"><italic>Molecule diagram</italic> We chose RDKit to draw the molecules based on its increasing popularity. We used heatmaps placed on top of the molecule diagram to represent the attributions. Colors of the heatmaps are aligned with colors of the bar chart. Users can choose if atoms and bonds from the molecule diagram will be colored according to the atom-colors defined by RDKit, or if atoms are colored in black.</p>
    <p id="Par30"><italic>Color palettes and sign direction</italic> XSMILES has a predefined set of diverging color palettes that are intended to be colorblind friendly . Additionally, users can define custom diverging palettes. We created the default palettes based on Color Brewer [<xref ref-type="bibr" rid="CR14">14</xref>] color schemes, aiming for colors that could differentiate the sign direction of attributions. All palettes go through an interpolation and lightness correction process. Signs represented by atom labels on the molecule diagram (as seen at the top-left of Fig. <xref rid="Fig4" ref-type="fig">4</xref>) and under the bar chart, as well as interactivity, help users to identify the sign direction of a certain attribution when color difference is not perceptible by the user. Throughout the article, we used different palettes in the figures to exemplify them.</p>
    <p id="Par31"><italic>Colormap domain</italic> Users can define the colormap domain (attributions’ domain) and the range (color range) so that any value smaller than the minimum or greater than the maximum attribution is considered as minimum or maximum, respectively. This is a flexible feature that allows users to highlight regions with attributions above or below a certain value with the strongest colors, as demonstrated in Fig. <xref rid="Fig3" ref-type="fig">3</xref>.<fig id="Fig3"><label>Fig. 3</label><caption><p>The color domain is manually set to range from − 0.33 to 0.33 instead of − 0.6 and 0.6 as shown in Fig. <xref rid="Fig2" ref-type="fig">2</xref>, which uses the maximum absolute value among all attributions of this molecule (0.6) to define the color domain. Here, values above or equal to 0.33, or below or equal to − 0.33, are represented by bars with maximum size and strongest colors, and by the strongest colors and largest areas in the heatmap. In comparison with Fig. <xref rid="Fig2" ref-type="fig">2</xref>, this visualization emphasizes more the attributions that are closer to zero</p></caption><graphic xlink:href="13321_2022_673_Fig3_HTML" id="MO3"/></fig></p>
    <p id="Par32"><italic>Threshold highlight and labels</italic> Because comparing magnitude through an overview heatmap can be difficult, we implemented the possibility to set thresholds: values between 0 and 1 that are used to highlight atoms on the molecule diagram and create horizontal lines on the bar chart. It highlights attributions that have an absolute value above a percentage of the <italic>colormap domain</italic>’s maximum value. For example, with a <inline-formula id="IEq2"><alternatives><tex-math id="M3">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$[-0.5, 0, 0.5]$$\end{document}</tex-math><mml:math id="M4"><mml:mrow><mml:mo stretchy="false">[</mml:mo><mml:mo>-</mml:mo><mml:mn>0.5</mml:mn><mml:mo>,</mml:mo><mml:mn>0</mml:mn><mml:mo>,</mml:mo><mml:mn>0.5</mml:mn><mml:mo stretchy="false">]</mml:mo></mml:mrow></mml:math><inline-graphic xlink:href="13321_2022_673_Article_IEq2.gif"/></alternatives></inline-formula>
<italic>color domain</italic>, a threshold of 0.5 would highlight atoms with attributions greater or equal to 0.25 and lower or equal to <inline-formula id="IEq3"><alternatives><tex-math id="M5">\documentclass[12pt]{minimal}
				\usepackage{amsmath}
				\usepackage{wasysym} 
				\usepackage{amsfonts} 
				\usepackage{amssymb} 
				\usepackage{amsbsy}
				\usepackage{mathrsfs}
				\usepackage{upgreek}
				\setlength{\oddsidemargin}{-69pt}
				\begin{document}$$-0.25$$\end{document}</tex-math><mml:math id="M6"><mml:mrow><mml:mo>-</mml:mo><mml:mn>0.25</mml:mn></mml:mrow></mml:math><inline-graphic xlink:href="13321_2022_673_Article_IEq3.gif"/></alternatives></inline-formula>. Figure <xref rid="Fig4" ref-type="fig">4</xref> illustrates the visual effect of not using threshold ([]) and of using [0.5], [0.75], and [0.5, 0.75] as highlight thresholds. The color of the heatmap becomes stronger, and atoms that match the criteria are circled by an optional white stroke. The greater the circle, the farther the attribution from the threshold. Horizontal lines are drawn according to the defined thresholds. If no threshold is defined, it is drawn at values 0.5 and 1.0. Atom attributions can also be displayed as labels on the molecule diagram, close to each atom, as shown in the diagram with no thresholds ([]) in Fig. <xref rid="Fig4" ref-type="fig">4</xref>. The motivation behind the threshold highlighting was our interest in identifying medium and large attributions; defining what is large will depend on the XAI method and model.<fig id="Fig4"><label>Fig. 4</label><caption><p>Thresholds help identifying atoms and tokens that have the absolute value of their attributions above certain values. Here we see four examples: the top-left one has no thresholds ([]) and indicate attributions with labels on the molecule diagram, and the three others have thresholds lists equal to [0.5], [0.75], and [0.5, 0.75]</p></caption><graphic xlink:href="13321_2022_673_Fig4_HTML" id="MO4"/></fig></p>
    <p id="Par33"><italic>Interactivity</italic> Users can hover atoms on the diagram to highlight the respective SMILES token, and hover the tokens to highlight substructures on the diagram. The highlighted tokens become bolder and the atoms on the molecule are circled with two colors: (1) the <italic>signal color</italic> that represents the positive or the negative ranges of attributions and (2) the <italic>highlight color</italic>, defined to contrast with the two signal directions’ colors. Users can highlight the following substructures on the diagram:<list list-type="bullet"><list-item><p id="Par34"><italic>atom</italic>: hover an atom token to highlight the atom (Fig. <xref rid="Fig5" ref-type="fig">5</xref>A);</p></list-item><list-item><p id="Par35"><italic>ring</italic>: hover a number (definition of ring openings and closings) to highlight the ring (Fig. <xref rid="Fig5" ref-type="fig">5</xref>B);</p></list-item><list-item><p id="Par36"><italic>group</italic>: hover the square brackets or any token between them to highlight the group (Fig. <xref rid="Fig5" ref-type="fig">5</xref>C);</p></list-item><list-item><p id="Par37"><italic>branch</italic>: hover a parenthesis to highlight a SMILES branch (Fig. <xref rid="Fig5" ref-type="fig">5</xref>D).</p></list-item></list><fig id="Fig5"><label>Fig. 5</label><caption><p>Four types of hover interaction. <bold>A</bold> The respective token is highlighted when you mouse over an atom, and vice-versa. <bold>B</bold> A branch is highlighted on the molecule and on the string when you mouse over a parenthesis character. <bold>C</bold> A group defined by square brackets is highlighted when you mouse over its tokens or its atom. <bold>D</bold> It highlights the ring on the molecule and on the string when you mouse over the numbers that encode that ring. When highlighted, the tool modifies the molecule representation to express the signal direction of the attribution clearer by drawing a circle around the atom with the signal direction’s color and another with the highlight color</p></caption><graphic xlink:href="13321_2022_673_Fig5_HTML" id="MO5"/></fig></p>
  </sec>
  <sec id="Sec3">
    <title>Implementation</title>
    <p id="Par38">XSMILES is available as a JavaScript library and integrated into other extensions. Users can use it in JupyterLab notebooks and in KNIME [<xref ref-type="bibr" rid="CR13">13</xref>] pipelines, or through the demonstration website, where they upload a JSON file with molecules and attributions. Web developers can integrate XSMILES into other web-based systems using the JavaScript package.</p>
    <p id="Par39">Its version 0.5.7 uses RDKit MinimalLib 2022.03.1 [<xref ref-type="bibr" rid="CR15">15</xref>, <xref ref-type="bibr" rid="CR16">16</xref>] to draw molecules and Heatmap.js 2.0.5 [<xref ref-type="bibr" rid="CR17">17</xref>] to draw the heatmaps. Both heatmaps and molecule diagrams are independent web canvas layers and can be replaced with new variants by web developers. Two heatmaps are generated per molecule diagram, one for positive and one for negative attributions. Highlights under the molecule are built using canvas elements, and bar charts are created with SVG elements. We used React [<xref ref-type="bibr" rid="CR18">18</xref>] as the main framework to connect everything into the interactive visualization technique. Other required libraries and installation details are described in XSMILES’ source-code repository.</p>
    <p id="Par40"><italic>Input format</italic> XSMILES can be used to represent a molecule with or without atom or token scores. The order of tokens in the SMILES string defines the order of the scores vector. We use the same order used by RDKit, i.e., the first atom in the SMILES string will be the first node of the graph that RDKit uses to draw the structure. The scores vectors can be of two sizes: number of atoms and number of SMILES tokens, as exemplified in Use Case 2. In the first case, the score vector represent only atom-scores while in the latter, special tokens, like (, ], and +, also receive scores. The heatmap only considers atom-scores and does not take into account interactivity between atoms or functional groups. We define the input format in the GitHub repository with examples. The tool was tested with RDKit canonical SMILES.</p>
    <p id="Par41"><italic>Atoms’ coordinates</italic> The current version uses RDKit MinimalLib to generate two equal diagrams for each molecule: one in SVG format and one as a canvas element. XSMILES parses multiple SVG elements to derive the coordinates (x, y) of each atom in the diagram. We use this information to draw the heatmap and track the mouse pointer to identify when it is over an atom.</p>
    <p id="Par42"><italic>Response time</italic> The website version demonstrated to have instant response time in terms of interactivity when displaying over 100 XSMILES diagrams with molecule diagram, bar chart, and attribute table in our tests. However, loading time, i.e., processing JSON and initial rendering time, was not instant when loading over 100 molecules; a delay happens as well if parameters of the visualization are changed due to re-rendering time. Loading time with 42 diagrams (e.g., 14 molecules and 3 XAI methods), was close to instant in our test (macOS 11, Chrome 103 browser, Intel Core i7-9750H 2.6 GHz processor, 32 GB RAM, AMD Radeon Pro 5300M 4 GB graphic card). Given that most common computers don’t have a powerful configuration, we would recommend using around 20 molecules. Loading time for JupyterLab is different, since in that case, we may explore smaller sets of molecules loaded in different times.</p>
    <p id="Par43"><italic>Availability</italic> The tool is open-source and available at <ext-link ext-link-type="uri" xlink:href="https://github.com/Bayer-Group/xsmiles">https://github.com/Bayer-Group/xsmiles</ext-link>. The plugin for JupyterLab, for KNIME, demonstration website and datasets availability is described in details in section Availability of data and materials.</p>
  </sec>
  <sec id="Sec4">
    <title>Use cases</title>
    <sec id="Sec5">
      <title>Use case 1—analyzing attributions and developing a bioconcentration factor model</title>
      <p id="Par44">The Bioconcentration Factor (BCF) quantifies a chemical’s potential to accumulate in living organisms, most frequently fish. As such, it is an important characteristic in the environmental risk assessment of chemicals. Zhao et al. [<xref ref-type="bibr" rid="CR9">9</xref>], including authors of the XSMILES, created a model called xBCF that can predict BCF and provides attributions for SMILES strings.</p>
      <p id="Par45">In summary, xBCF is a deep learning model based on CDDD [<xref ref-type="bibr" rid="CR19">19</xref>] molecular representations that use SMILES strings as input. The XAI method first substitutes the token of interest to any token in the vocabulary set of the CDDD model. Then the difference between the prediction from the original SMILES and the average prediction from all substituted SMILES is regarded as the attribution of the token of interest: the sensitivity score. A positive attribution indicates that the predicted BCF value is expected to drop when that token was substituted with any other token in the vocabulary.</p>
      <p id="Par46">The xBCF model was trained on public BCF data and internal logD data so that it can predict both logBCF and logD simultaneously. LogD represents the distribution coefficient of a chemical between octanol and water, where octanol is often seen as a proxy for organic tissue. This multitasking nature of xBCF was driven by the high correlation between logBCF and logD. Therefore, when the XAI method is applied on the xBCF model, one can obtain explanations for both logBCF and logD predictions which enable chemists to gain insights into the predictions and the model.</p>
      <p id="Par47">During the xBCF development, patterns of SMILES non-atom and atom tokens were analyzed for many molecules. Due to its dependency on the CDDD molecular representations encoded from SMILES strings, non-atom tokens played a key role in the translational autoencoder and the downstream predictive models for BCF and logD.</p>
      <p id="Par48">XSMILES was developed iteratively with the development of xBCF and was of great importance for the authors to analyze results during and after the development process. The model is now deployed <italic>in house</italic>, and XSMILES is used to display results to end users through interactive visualization. The XAI Substitution method is open-source and publicly available (see section Availability of data and materials). Detailed explanations about both model and XAI method are found in the original article [<xref ref-type="bibr" rid="CR9">9</xref>].</p>
      <p id="Par49">Zhao et al. [<xref ref-type="bibr" rid="CR9">9</xref>] extensively used XSMILES to analyze how their model and XAI methods work. In Fig. <xref rid="Fig6" ref-type="fig">6</xref> we reproduced examples illustrating xBCF model is able to recognize symmetry-equivalent functional groups and attributes similar sensitivity scores to equivalent atoms. Despite almost perfect symmetric attributions, it’s important to note that this was not always the case and regardless of results, XSMILES played a key role in the process of quickly screening molecules, identifying patterns and creating hypotheses.<fig id="Fig6"><label>Fig. 6</label><caption><p><bold>A</bold> All bromine atoms in hexabromobenzene were assigned similarly high logD sensitivity scores. <bold>B</bold> In triallylamine the three symmetry-equivalent allyl groups show similar low logBCF sensitivity scores while the central nitrogen has a large negative score</p></caption><graphic xlink:href="13321_2022_673_Fig6_HTML" id="MO6"/></fig></p>
      <p id="Par50">Another activity described by the authors is the comparison of logD and logBCF. In Fig. <xref rid="Fig7" ref-type="fig">7</xref> we illustrate one of their examples with high logD (5.5) and low logBCF (0.66) predicted values: spirodiclofen, a molecule known to be readily metabolized. We see that the sensitivity scores for important parts of the molecule have different signs, which means that logD cannot explain the low BCF value.<fig id="Fig7"><label>Fig. 7</label><caption><p>Spirodiclofen is a molecule with low logBCF (0.66) and high logD (5.5) predicted values. The sensitivity scores attributed to the SMILES tokens based on both logBCF and logD are similar, but have mostly the opposite sign direction—positive and negative, respectively. Both color-domains in this figure range from − 1 to 1</p></caption><graphic xlink:href="13321_2022_673_Fig7_HTML" id="MO7"/></fig></p>
      <p id="Par51">Another aspect that helped the development of the xBCF was the fact that the authors could output a JSON file and quickly share with colleagues, and visualize results, without setting up any coding environment. The file with the molecules of this use case is available at our git repository and can be visualized with the XSMILES demonstration website.</p>
      <p id="Par52">Having the possibility of using XSMILES from within JupyterLab notebooks also helped them to quickly test and re-render visualizations based on new parameters defined to train the models, to develop the Substitution method or to adapt the visualization to better highlight patterns from the attributions.</p>
      <p id="Par53">In this use case, we described how XSMILES assisted the development of the xBCF model and is being used by end-users. The importance of the XSMILES was highlighted through examples of analysis that helped the xBCF’s authors to develop the model and the Substitution XAI method —both based on SMILES strings.</p>
    </sec>
    <sec id="Sec6">
      <title>Use case 2—analyzing logP attributions against Crippen logP atomic contributions</title>
      <p id="Par54">Rasmussen et al. [<xref ref-type="bibr" rid="CR8">8</xref>] studied the original and transformed logP Crippen contributions as a potential ground truth to attributions calculated with the “atom attribution from fingerprints”-method developed by Riniker and Landrum [<xref ref-type="bibr" rid="CR20">20</xref>] (in this text referenced as <bold>R &amp;L</bold>). They compared the overlap of heatmaps between this attribution method and the original (atom-based) and adapted (fragment-based) logP atomic contributions. Throughout their analysis, they visually compared contributions with attributions, highlighting molecules with high and low heatmap overlap.</p>
      <p id="Par55">Here, we explore this idea of using logP contributions and comparing them with attributions, but with three different XAI methods. We visually compare the original logP atomic contributions calculated with RDKit against the R &amp;L attributions and attributions from two additional approaches: one based on the <italic>SMILES strings token-substitution method</italic> [<xref ref-type="bibr" rid="CR9">9</xref>] described in <italic>Use case 1</italic> and one based on Morgan fingerprints [<xref ref-type="bibr" rid="CR21">21</xref>] and SHAP [<xref ref-type="bibr" rid="CR10">10</xref>, <xref ref-type="bibr" rid="CR22">22</xref>, <xref ref-type="bibr" rid="CR23">23</xref>] values. A JupyterLab notebook with all methods is available (see section Availability of data and materials).</p>
      <p id="Par56">To calculate attributions, we combined the three attribution methods to two different CatBoost [<xref ref-type="bibr" rid="CR24">24</xref>] (<italic>catboost 1.0.5, iterations=10000, depth=6</italic>) regressors, with a total of three different setups:<list list-type="bullet"><list-item><p id="Par57"><italic>CDDD-Substitution</italic>) a model trained with CDDD [<xref ref-type="bibr" rid="CR19">19</xref>] molecular representations with attributions calculated using the Substitution method [<xref ref-type="bibr" rid="CR9">9</xref>],</p></list-item><list-item><p id="Par58"><italic>Morgan-SHAP</italic>) a model trained with Morgan fingerprint bits (radius 1) with attributions calculated through the SHAP method [<xref ref-type="bibr" rid="CR22">22</xref>], and</p></list-item><list-item><p id="Par59"><italic>Morgan-R &amp;L</italic>) the same fingerprint-based model as the latter, but with attributions calculated using Riniker and Landrum’s method [<xref ref-type="bibr" rid="CR20">20</xref>].</p></list-item></list>Overall, the predictions from the two Catboost regression models resulted in good coefficient of determination (above 0.9) and root mean squared error (below 0.19). More details about the models that we tested and performance are described in Additional file <xref rid="MOESM1" ref-type="media">1</xref>.</p>
      <p id="Par60">We analyzed the attributions from the CDDD-Substitution, Morgan-SHAP, and Morgan-R &amp;L methods. Note that there are significant differences among the compared methods regarding XAI techniques (R &amp;L, SHAP, Substitution), molecular representation (Morgan, CDDD), and predictive performance. This use case shows how we can explore their calculated attributions with XSMILES to create hypothesis and inspire thoughts.</p>
      <p id="Par61">To visualize dozens of molecules, we generated JSON files describing their calculated attributions. These datasets were then visualized using the demonstration website available at the project’s main repository. The website provides the user the capability of quickly visualizing sets of molecules and their attributions, and of changing XSMILES’ parameters, such as color palette, color domain, and thresholds. Here we focus on one molecule that we found to be quantitatively and qualitatively very interesting.<fig id="Fig8"><label>Fig. 8</label><caption><p><bold>A</bold> The Crippen contributions to logP. <bold>B</bold> Attributions from CDDD-Substitution are similar to the ones found in A regarding their sign, but the most influential oxygen is not highlighted as much as in A. Attributions from Morgan-SHAP (<bold>C</bold>) and Morgan-R &amp;L (<bold>D</bold>) are almost identical to A (relative to their own maximum absolute value)</p></caption><graphic xlink:href="13321_2022_673_Fig8_HTML" id="MO8"/></fig></p>
      <p id="Par62">Figure <xref rid="Fig8" ref-type="fig">8</xref> shows diagrams where the <italic>color domain</italic> was defined for each molecule based on their maximum absolute score. With a threshold of 0.75, the diagram highlights with white circles and darker colors the most influential atoms, and displays a horizontal line to help to identify tokens that overpass the threshold. The logP contribution (A) of the bromine (last token from the SMILES string) is highly positive. While CDDD-Substitution (B) and Morgan-SHAP (C) identified the same bromine as the most influential atom, Morgan-R &amp;L (D) attributed the highest values to carbons. An explanation for this difference could be the molecular representation, which is not atom-based but fragment-based, as made clear by Rasmussen et al. [<xref ref-type="bibr" rid="CR8">8</xref>]. However, Morgan-SHAP uses the same molecular representation and spotlighted the bromine similarly to the contributions.</p>
      <p id="Par63">Although the CDDD-Substitution (B) highlighted the bromine atom in Fig. <xref rid="Fig8" ref-type="fig">8</xref>, it attributed higher values to the carbons than the ones we find in the contributions vector (A). Moreover, it considers the prediction to be as sensitive to a substitution of non-atom tokens as to a substitution of carbons, in general. This highlights that the CDDD model utilizes the non-atom tokens to correctly represent the molecular structure, as opposed to reading only a linear chain of atoms.<fig id="Fig9"><label>Fig. 9</label><caption><p>Crippen Contributions (logP) and attributions extracted from different models are visualized with a table indicating the method, ground truth (logp), and prediction (pred). A small value was used to define the <italic>color domain</italic> so that the visualization express only the sign of the scores. <bold>A</bold> The Crippen contributions to logP. <bold>B</bold> Attributions from Substitution-CDDD. <bold>C</bold> Attributions from Morgan-SHAP. <bold>D</bold> Attributions from Morgan-R &amp;L</p></caption><graphic xlink:href="13321_2022_673_Fig9_HTML" id="MO9"/></fig></p>
      <p id="Par64">Although quantitatively the same bromine was highlighted by the contributions (A), CDDD-Substitution (B) and Morgan-SHAP (C) in Fig. <xref rid="Fig8" ref-type="fig">8</xref>, the story changes if we analyze them qualitatively through the direction of attributions’ sings. In Fig. <xref rid="Fig9" ref-type="fig">9</xref> we see that the contributions for the two oxygen atoms are different: positive for the first oxygen token in the string, and negative for the second. All the three methods (B, C, D) attributed the opposite direction to both oxygen atoms. As of additional information, all atoms have positive contribution in the FPA contributions, which also disagrees with the three methods. To ignore the magnitude in this example, we set the <italic>color domain</italic> to be equal to a tiny value, i.e., between − 0.00001 and 0.00001. With this approach, all attributions are represented equally in terms of absolute values.</p>
      <p id="Par65">In this use case, we demonstrated how XSMILES can be used to compare attributions from different methods. We used methods based on atom-attributions only and one method based on SMILES-attributions. Although the models and molecule representations differ drastically, we found many cases in which attributions created by each method are relatively similar to the logP contributions. In other cases, attributions would agree among themselves and disagree with the contributions. The analysis gets complex and XSMILES has helped in the task of identifying patterns and facts that agree and disagree with our beliefs about the methods, models, and molecular representations.</p>
    </sec>
  </sec>
  <sec id="Sec7">
    <title>Final considerations</title>
    <p id="Par66">Data scientists can use XSMILES to understand their models’ behavior and compare multiple approaches. With our use cases, we demonstrated how attributions calculated for SMILES strings can be evaluated and better interpreted through interactivity. Furthermore, we exemplified how a side-by-side approach may be used to compare different models and explanations, and how a website where users can quickly analyze molecules without a coding environment is useful.</p>
    <p id="Par67">XSMILES can be used to visualize not only XAI attributions, but any set of scores associated with atom or non-atom tokens of a SMILES string—e.g., attributions derived from models that are based on a graph representation instead of a SMILES one. It is also a good technique to learn the SMILES notation and interpret SMILES strings. Moreover, it uses RDKit’s drawing standard, works within JupyterLab, and can be integrated into other web-based architectures.</p>
    <p id="Par68">Among the ideas for improvements and new applications of such technique are the interactive visualization of SELFIES [<xref ref-type="bibr" rid="CR25">25</xref>] and InChI [<xref ref-type="bibr" rid="CR26">26</xref>], and the implementation of better ways to represent the attributions. For example, we coded XSMILES in a way that the drawing of the molecular structures could be done by other drawers like SmilesDrawer [<xref ref-type="bibr" rid="CR27">27</xref>]. A set of different types of heatmaps algorithms and highlights could also be implemented and offered to users. Finally, XSMILES is open-source, and we believe it is a great contribution for the community.</p>
  </sec>
  <sec sec-type="supplementary-material">
    <title>Supplementary Information</title>
    <sec id="Sec8">
      <p>
        <supplementary-material content-type="local-data" id="MOESM1">
          <media xlink:href="13321_2022_673_MOESM1_ESM.pdf">
            <caption>
              <p><bold>Additional file 1.</bold> Additional information for Use case 2.</p>
            </caption>
          </media>
        </supplementary-material>
      </p>
    </sec>
  </sec>
</body>
<back>
  <glossary>
    <title>Abbreviations</title>
    <def-list>
      <def-item>
        <term>AI</term>
        <def>
          <p id="Par4">Artificial intelligence</p>
        </def>
      </def-item>
      <def-item>
        <term>BCF</term>
        <def>
          <p id="Par5">Bioconcentration factor</p>
        </def>
      </def-item>
      <def-item>
        <term>CDDD</term>
        <def>
          <p id="Par6">Continuous and data-driven descriptors</p>
        </def>
      </def-item>
      <def-item>
        <term>InChI</term>
        <def>
          <p id="Par7">International chemical identifier</p>
        </def>
      </def-item>
      <def-item>
        <term>JSON</term>
        <def>
          <p id="Par8">JavaScript object notation</p>
        </def>
      </def-item>
      <def-item>
        <term>SHAP</term>
        <def>
          <p id="Par9">Shapley additive explanations</p>
        </def>
      </def-item>
      <def-item>
        <term>SMILES</term>
        <def>
          <p id="Par10">Simplified molecular input line entry system</p>
        </def>
      </def-item>
      <def-item>
        <term>SELFIES</term>
        <def>
          <p id="Par11">Self-referencing embedded strings</p>
        </def>
      </def-item>
      <def-item>
        <term>SVG</term>
        <def>
          <p id="Par12">Scalable vector graphics</p>
        </def>
      </def-item>
      <def-item>
        <term>XAI</term>
        <def>
          <p id="Par13">Explainable AI</p>
        </def>
      </def-item>
      <def-item>
        <term>xBCF</term>
        <def>
          <p id="Par14">Explainable bioconcentration factor model</p>
        </def>
      </def-item>
      <def-item>
        <term>XSMILES</term>
        <def>
          <p id="Par15">Explainable SMILES</p>
        </def>
      </def-item>
    </def-list>
  </glossary>
  <fn-group>
    <fn>
      <p>
        <bold>Publisher's Note</bold>
      </p>
      <p>Springer Nature remains neutral with regard to jurisdictional claims in published maps and institutional affiliations.</p>
    </fn>
  </fn-group>
  <ack>
    <title>Acknowledgements</title>
    <p>We thank Floriane Montanari for testing the XSMILES and for giving us feedback during its development; Greg Landrum, Paolo Tosco, Michel Moreau, and David Cosgrove, who answered our questions, which helped us to get RDKit drawings into XSMILES through the RDKit MinimalLib.</p>
  </ack>
  <notes notes-type="author-contribution">
    <title>Author contributions</title>
    <p>HH and JH conceptualized the initial idea. HH designed the XSMILES and LZ and SS helped to develop its concept based on users’ needs. HH developed the software packages and websites. HH developed the JupyterLab plugin. HH and SS developed the integration with KNIME. SS tested the tool and gave constant feedback that guided the development’s direction. HH wrote the first draft of the article. LZ, SS, and HH prepared, executed and wrote <italic>Use case 1</italic>. HH, TW, and LZ prepared, executed and wrote <italic>Use case 2</italic>. All authors reviewed all sections, read and approved the final manuscript.</p>
  </notes>
  <notes notes-type="funding-information">
    <title>Funding</title>
    <p>This work was supported by Bayer AG and funded by the Bayer AG’s Life Science Collaboration Project “Explainable AI”.</p>
  </notes>
  <notes notes-type="data-availability">
    <title>Availability of data and materials</title>
    <p>XSMILES is open-source and available at <ext-link ext-link-type="uri" xlink:href="https://github.com/Bayer-Group/xsmiles">https://github.com/Bayer-Group/xsmiles</ext-link>, in which we provide the core information, an example of how to integrate the tool with KNIME, the access to the demonstration website, to the source-code from the JupyterLab implementation, and data and notebooks used in the use cases. We provide a notebook with scripts demonstrating how we trained LogP models and calculated attributions using the molecules downloaded from [<xref ref-type="bibr" rid="CR8">8</xref>]. The datasets used to train the xBCF model and the method to calculate sensitivity scores are part of the xBCF article [<xref ref-type="bibr" rid="CR9">9</xref>], please consult the original material for more information.</p>
  </notes>
  <notes>
    <title>Declarations</title>
    <notes id="FPar1" notes-type="COI-statement">
      <title>Competing interests</title>
      <p id="Par69">The authors are employees of Bayer AG, a manufacturer of pharmaceuticals, agricultural, and consumer health chemicals.</p>
    </notes>
  </notes>
  <ref-list id="Bib1">
    <title>References</title>
    <ref id="CR1">
      <label>1.</label>
      <mixed-citation publication-type="other">Vamathevan J, Clark D, Czodrowski P, Dunham I, Ferran E, Lee G, Li B, Madabhushi A, Shah P, Spitzer M, Zhao S (2019) Applications of machine learning in drug discovery and development. Nat Rev Drug Discov 18(6):463–477. 10.1038/s41573-019-0024-5. [cito:obtainsBackgroundFrom]</mixed-citation>
    </ref>
    <ref id="CR2">
      <label>2.</label>
      <mixed-citation publication-type="other">Elbadawi M, Gaisford S, Basit AW (2021) Advanced machine-learning techniques in drug discovery. Drug Discov Today 26(3):769–777. 10.1016/j.drudis.2020.12.003. [cito:obtainsBackgroundFrom]</mixed-citation>
    </ref>
    <ref id="CR3">
      <label>3.</label>
      <mixed-citation publication-type="other">Polishchuk P (2017) Interpretation of quantitative structure–activity relationship models: past, present, and future. J Chem Inf Model 57(11), 2618–2639. 10.1021/acs.jcim.7b00274. [cito:containsAssertionFrom]</mixed-citation>
    </ref>
    <ref id="CR4">
      <label>4.</label>
      <mixed-citation publication-type="other">Rodríguez-Pérez R, Bajorath J (2020) Interpretation of compound activity predictions from complex machine learning models using local approximations and shapley values. J Comput-Aid Mol Des 63(16):8761–8777. 10.1021/acs.jmedchem.9b01101. [cito:containsAssertionFrom] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR5">
      <label>5.</label>
      <mixed-citation publication-type="other">Karpov P, Godin G, Tetko IV (2017) Transformer-CNN: Swiss knife for QSAR modeling and interpretation. J Cheminform 12(17): 1758–2946 (2020). 10.1186/s13321-020-00423-w. [cito:citesForInformation]</mixed-citation>
    </ref>
    <ref id="CR6">
      <label>6.</label>
      <mixed-citation publication-type="other">Jiménez-Luna J, Grisoni F, Schneider G (2020) Drug discovery with explainable artificial intelligence. Nat Mach Intell 2(10):573–584. 10.1038/s42256-020-00236-4. [cito:citesForInformation]</mixed-citation>
    </ref>
    <ref id="CR7">
      <label>7.</label>
      <mixed-citation publication-type="other">Jiménez-Luna J, Skalic M, Weskamp N, Schneider G (2021) Coloring molecules with explainable artificial intelligence for preclinical relevance assessment. J Chem Inform Model 61(3):1083–1094. 10.1021/acs.jcim.0c01344. [cito:citesForInformation]</mixed-citation>
    </ref>
    <ref id="CR8">
      <label>8.</label>
      <mixed-citation publication-type="other">Rasmussen MH, Christensen DS, Jensen JH (2022) Do machines dream of atoms? a quantitative molecular benchmark for explainable AI heatmaps (2022) 10.26434/chemrxiv-2022-gnq3w. This content is a preprint and has not been peer-reviewed. [cito:containsAssertionFrom] [cito:usesDataFrom] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR9">
      <label>9.</label>
      <mixed-citation publication-type="other">Zhao L, Montanari F, Heberle H, Schmidt S (2022) Modeling bioconcentration factors in fish with explainable deep learning. Artif Intell Life Sci 100047. 10.1016/j.ailsci.2022.100047</mixed-citation>
    </ref>
    <ref id="CR10">
      <label>10.</label>
      <mixed-citation publication-type="other">Humer C, Heberle H, Montanari F, Wolf T, Huber F, Henderson R, Heinrich J, Streit M (2022) ChemInformatics model explorer (CIME): exploratory analysis of chemical model explanations. J Cheminform 14(1): 1–14. 10.1186/s13321-022-00600-z. [cito:obtainsBackgroundFrom] [cito:AuthorSelfCitation] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR11">
      <label>11.</label>
      <mixed-citation publication-type="other">Weininger D (1988) SMILES, a chemical language and information system. 1. introduction to methodology and encoding rules. Journal of chemical information and computer sciences 28(1), 31–36 . 10.1021/ci00057a005. [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR12">
      <label>12.</label>
      <mixed-citation publication-type="other">Lambard G, Gracheva E (2020) SMILES-x: autonomous molecular compounds characterization for small datasets without descriptors. Mach Learn Sci Technol 1(2):025004. 10.1088/2632-2153/ab57f3. [cito:citesForInformation]</mixed-citation>
    </ref>
    <ref id="CR13">
      <label>13.</label>
      <mixed-citation publication-type="other">KNIME AG: KNIME. <ext-link ext-link-type="uri" xlink:href="https://www.knime.com/">https://www.knime.com/</ext-link>. Accessed 15 Jul 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR14">
      <label>14.</label>
      <mixed-citation publication-type="other">Brewer C, Harrower M, and The Pennsylvania State University: ColorBrewer 2.0—Color Advice for Cartography. <ext-link ext-link-type="uri" xlink:href="https://colorbrewer2.org/">https://colorbrewer2.org/</ext-link>. Accessed 15 Jul 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR15">
      <label>15.</label>
      <mixed-citation publication-type="other">Landrum G, et al (2022) RDKit MinimalLib. <ext-link ext-link-type="uri" xlink:href="https://github.com/rdkit/rdkit/tree/master/Code/MinimalLib">https://github.com/rdkit/rdkit/tree/master/Code/MinimalLib</ext-link> Accessed 15 Jul 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR16">
      <label>16.</label>
      <mixed-citation publication-type="other">Landrum G, et al (2022) RDKit: Open-Source Cheminformatics Software. <ext-link ext-link-type="uri" xlink:href="https://rdkit.org/">https://rdkit.org/</ext-link> Accessed 15 Jul 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR17">
      <label>17.</label>
      <mixed-citation publication-type="other">Wied P (2022) Heatmap.js. <ext-link ext-link-type="uri" xlink:href="https://github.com/pa7/heatmap.js">https://github.com/pa7/heatmap.js</ext-link> Accessed 15 Jul 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR18">
      <label>18.</label>
      <mixed-citation publication-type="other">Facebook Open Source: React—a JavaScript Library for Building User Interfaces. <ext-link ext-link-type="uri" xlink:href="https://reactjs.org/">https://reactjs.org/</ext-link> Accessed 15 Jul 2022 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR19">
      <label>19.</label>
      <mixed-citation publication-type="other">Winter R, Montanari F, Noé F, Clevert D-A (2019) Learning continuous and data-driven molecular descriptors by translating equivalent chemical representations. Chem Sci. 10(6):1692–1701. 10.1039/c8sc04175j. [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR20">
      <label>20.</label>
      <mixed-citation publication-type="other">Riniker S, Landrum GA (2013) Similarity maps - a visualization strategy for molecular fingerprints and machine-learning methods. J Cheminform 5(23):1–7. 10.1186/1758-2946-5-43.[cito:citesForInformation] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR21">
      <label>21.</label>
      <mixed-citation publication-type="other">Morgan Fingerprints. Accessed: 15/06/2022 [cito:citesForInformation]. <ext-link ext-link-type="uri" xlink:href="https://rdkit.readthedocs.io/en/latest/GettingStartedInPython.html#morgan-fingerprints-circular-fingerprints">https://rdkit.readthedocs.io/en/latest/GettingStartedInPython.html#morgan-fingerprints-circular-fingerprints</ext-link></mixed-citation>
    </ref>
    <ref id="CR22">
      <label>22.</label>
      <mixed-citation publication-type="other">Lundberg SM, Lee S-I (2017) A unified approach to interpreting model predictions. Adv Neural Inf Process Syst 30. [cito:obtainsBackgroundFrom] [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR23">
      <label>23.</label>
      <mixed-citation publication-type="other">Rodríguez-Pérez R, Bajorath J (2019) Interpretation of compound activity predictions from complex machine learning models using local approximations and shapley values. J Med Chem 63(16):8761–8777. 10.1021/acs.jmedchem.9b01101 [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR24">
      <label>24.</label>
      <mixed-citation publication-type="other">Dorogush AV, Ershov V, Gulin A (2018) Catboost: gradient boosting with categorical features support. arXiv preprint <ext-link ext-link-type="uri" xlink:href="http://arxiv.org/abs/1810.11363">arXiv:1810.11363</ext-link>. 10.48550/arXiv.1810.11363. This content is a preprint and has not been peer-reviewed. [cito:usesMethodIn]</mixed-citation>
    </ref>
    <ref id="CR25">
      <label>25.</label>
      <mixed-citation publication-type="other">Krenn M, Häse F, Nigam A, Friederich P, Aspuru-Guzik A (2020) Self-referencing embedded strings (SELFIES): A 100% robust molecular string representation. Mach Learn Sci Technol 1(4):045024. 10.1088/2632-2153/aba947 [cito:citesForInformation]</mixed-citation>
    </ref>
    <ref id="CR26">
      <label>26.</label>
      <mixed-citation publication-type="other">Heller S, McNaught A, Stein S, Tchekhovskoi D, Pletnev I (2013) Inchi—the worldwide chemical structure identifier standard. J Cheminform 5(1):1–9. 10.1186/1758-2946-5-7 [cito:citesForInformation]</mixed-citation>
    </ref>
    <ref id="CR27">
      <label>27.</label>
      <mixed-citation publication-type="other">Probst D, Reymond J-L (2018) SmilesDrawer: Parsing and drawing SMILES-encoded molecular structures using client-side JavaScript. J Chem Inf Model 58(1):1–7. 10.1021/acs.jcim.7b00425 [cito:citesForInformation]</mixed-citation>
    </ref>
  </ref-list>
</back>
